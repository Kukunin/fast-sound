(module
 (type $FUNCSIG$viiiiiii (func (param i32 i32 i32 i32 i32 i32 i32)))
 (type $FUNCSIG$iiiiiii (func (param i32 i32 i32 i32 i32 i32) (result i32)))
 (type $FUNCSIG$iiii (func (param i32 i32 i32) (result i32)))
 (type $FUNCSIG$ii (func (param i32) (result i32)))
 (type $FUNCSIG$dd (func (param f64) (result f64)))
 (type $FUNCSIG$vi (func (param i32)))
 (type $FUNCSIG$i (func (result i32)))
 (type $FUNCSIG$iii (func (param i32 i32) (result i32)))
 (type $FUNCSIG$v (func))
 (import "env" "memory" (memory $memory 256 256))
 (data (i32.const 1025) "\01\01\01\02\03\03\03\02\03\03\03\02\03\03\03\00\03\0c\0f03<?\c0\c3\cc\cf\f0\f3\fc\ff\01\00\00\00\00\00\00\00\03\00\00\00\00\00\00\00\02\00\00\00\01\00\00\00\07\00\00\00\00\00\00\00\04\00\00\00\03\00\00\00\06\00\00\00\01\00\00\00\05\00\00\00\02\00\00\00\0f\00\00\00\00\00\00\00\08\00\00\00\07\00\00\00\0c\00\00\00\03\00\00\00\0b\00\00\00\04\00\00\00\0e\00\00\00\01\00\00\00\t\00\00\00\06\00\00\00\0d\00\00\00\02\00\00\00\n\00\00\00\05")
 (data (i32.const 1185) "@\caE\1bL\ffR\82Z\b3b\a2k`u\00\ff\00\ff\00\ff\00\ff\00\ff\00\fe\01\00\01\ff\00\fe\00\fd\02\00\01\ff\00\fe\00\fd\03\00\01\ff\00\00\9d>\00@^>\00\c0\04>\00\80\ed>\00@\89>\00\00\00\00\00\c0L?\00\00\cd=")
 (data (i32.const 1282) "\80?\00\00\00@\00\00@@\00\00\80@\00\00\a0@\00\00\c0@\00\00\e0@\00\00\00A\00\00\80A\00\00\c0A\00\00\10B\00\000B\00\00HB\00\00`B\00\00xB\00\00\86B\00\00\90B\00\00\9eB\00\00\b0B\00\00\d4B\00\00\06C")
 (data (i32.const 1378) "\80?\00\00\80?\00\00\80?\00\00\80?\00\00\80?\00\00\80?\00\00\80?\00\00\00@\00\00\00@\00\00\00@\00\00\00@\00\00\00@\00\00\00@\00\00\00@\00\00@@\00\00@@\00\00\80@\00\00\a0@\00\00\c0@\00\00\00A\00\00\00A")
 (data (i32.const 1472) "\ff\ff\9cnVF;3-(%!\1f\1c\1a\19\17\16\15\14\13\12\11\10\10\0f\0f\0e\0d\0d\0c\0c\0c\0c\0b\0b\0b\n\n\n\t\t\t\t\t\t\08\08\08\08\08\07\07\07\07\07\07\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\05\05\05\05\05\05\05\05\05\05\05\05\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\02\80\06\00\00@\t\00\00\fc\0b\00\00\b4\0e\00\00h\11\00\00\18\14\00\00\c4\16\00\00,\18\00\00\e8\18\00\00\\\19\00\00\a8\19\00\00\e0\19\00\00\00\1a\00\00\18\1a\00\00$\1a\00\00\00\00\00\00\01")
 (data (i32.constt\00\00\00\0b\00\00\00\0d\00\00\00\0f\00\00\00\11\00\00\00\13\00\00\00\15\00\00\00\17\00\00\00\19\00\00\00\1b\00\00\00\1d\00\00\00\1f\00\00\00!\00\00\00#\00\00\00%\00\00\00\'\00\00\00)\00\00\00+\00\00\00-\00\00\00/\00\00\001\00\00\003\00\00\005\00\00\007\00\00\009\00\00\00;\00\00\00=\00\00\00?\00\00\00A\00\00\00C\00\00\00E\00\00\00G\00\00\00I\00\00\00K\00\00\00M\00\00\00O\00\00\00Q\00\00\00S\00\00\00U\00\00\00W\00\00\00Y\00\00\00[\00\00\00]\00\00\00_\00\00\00a\00\00\00c\00\00\00e\00\00\00g\00\00\00i\00\00\00k\00\00\00m\00\00\00o\00\00\00q\00\00\00s\00\00\00u\00\00\00w\00\00\00y\00\00\00{\00\00\00}\00\00\00\7f\00\00\00\81\00\00\00\83\00\00\00\85\00\00\00\87\00\00\00\89\00\00\00\8b\00\00\00\8d\00\00\00\8f\00\00\00\91\00\00\00\93\00\00\00\95\00\00\00\97\00\00\00\99\00\00\00\9b\00\00\00\9d\00\00\00\9f\00\00\00\a1\00\00\00\a3\00\00\00\a5\00\00\00\a7\00\00\00\a9\00\00\00\ab\00\00\00\ad\00\00\00\af\00\00\00\b1\00\00\00\b3\00\00\00\b5\00\00\00\b7\00\00\00\b9\00\00\00\bb\00\00\00\bd\00\00\00\bf\00\00\00\c1\00\00\00\c3\00\00\00\c5\00\00\00\c7\00\00\00\c9\00\00\00\cb\00\00\00\cd\00\00\00\cf\00\00\00\d1\00\00\00\d3\00\00\00\d5\00\00\00\d7\00\00\00\d9\00\00\00\db\00\00\00\dd\00\00\00\df\00\00\00\e1\00\00\00\e3\00\00\00\e5\00\00\00\e7\00\00\00\e9\00\00\00\eb\00\00\00\ed\00\00\00\ef\00\00\00\f1\00\00\00\f3\00\00\00\f5\00\00\00\f7\00\00\00\f9\00\00\00\fb\00\00\00\fd\00\00\00\ff\00\00\00\01\01\00\00\03\01\00\00\05\01\00\00\07\01\00\00\t\01\00\00\0b\01\00\00\0d\01\00\00\0f\01\00\00\11\01\00\00\13\01\00\00\15\01\00\00\17\01\00\00\19\01\00\00\1b\01\00\00\1d\01\00\00\1f\01\00\00!\01\00\00#\01\00\00%\01\00\00\'\01\00\00)\01\00\00+\01\00\00-\01\00\00/\01\00\001\01\00\003\01\00\005\01\00\007\01\00\009\01\00\00;\01\00\00=\01\00\00?\01\00\00A\01\00\00C\01\00\00E\01\00\00G\01\00\00I\01\00\00K\01\00\00M\01\00\00O\01\00\00Q\01\00\00S\01\00\00U\01\00\00W\01\00\00Y\01\00\00[\01\00\00]\01\00\00_\01\00\00\0d\00\00\00\19\00\00\00)\00\00\00=\00\00\00U\00\00\00q\00\00\00\91\00\00\00\b5\00\00\00\dd\00\00\00\t\01\00\009\01\00\00m\01\00\00\a5\01\00\00\e1\01\00\00!\02\00\00e\02\00\00\ad\02\00\00\f9\02\00\00I\03\00\00\9d\03\00\00\f5\03\00\00Q\04\00\00\b1\04\00\00\15\05\00\00}\05\00\00\e9\05\00\00Y\06\00\00\cd\06\00\00E\07\00\00\c1\07\00\00A\08\00\00\c5\08\00\00M\t\00\00\d9\t\00\00i\n\00\00\fd\n\00\00\95\0b\00\001\0c\00\00\d1\0c\00\00u\0d\00\00\1d\0e\00\00\c9\0e\00\00y\0f\00\00-\10\00\00\e5\10\00\00\a1\11\00\00a\12\00\00%\13\00\00\ed\13\00\00\b9\14\00\00\89\15\00\00]\16\00\005\17\00\00\11\18\00\00\f1\18\00\00\d5\19\00\00\bd\1a\00\00\a9\1b\00\00\99\1c\00\00\8d\1d\00\00\85\1e\00\00\81\1f\00\00\81 \00\00\85!\00\00\8d\"\00\00\99#\00\00\a9$\00\00\bd%\00\00\d5&\00\00\f1\'\00\00\11)\00\005*\00\00]+\00\00\89,\00\00\b9-\00\00\ed.\00\00%0\00\00a1\00\00\a12\00\00\e53\00\00-5\00\00y6\00\00\c97\00\00\1d9\00\00u:\00\00\d1;\00\001=\00\00\95>\00\00\fd?\00\00iA\00\00\d9B\00\00MD\00\00\c5E\00\00AG\00\00\c1H\00\00EJ\00\00\cdK\00\00YM\00\00\e9N\00\00}P\00\00\15R\00\00\b1S\00\00QU\00\00\f5V\00\00\9dX\00\00IZ\00\00\f9[\00\00\ad]\00\00e_\00\00!a\00\00\e1b\00\00\a5d\00\00mf\00\009h\00\00\tj\00\00\ddk\00\00\b5m\00\00\91o\00\00qq\00\00Us\00\00=u\00\00)w\00\00\19y\00\00\0d{\00\00\05}\00\00\01\7f\00\00\01\81\00\00\05\83\00\00\0d\85\00\00\19\87\00\00)\89\00\00=\8b\00\00U\8d\00\00q\8f\00\00\91\91\00\00\b5\93\00\00\dd\95\00\00\t\98\00\009\9a\00\00m\9c\00\00\a5\9e\00\00\e1\a0\00\00!\a3\00\00e\a5\00\00\ad\a7\00\00\f9\a9\00\00I\ac\00\00\9d\ae\00\00\f5\b0\00\00Q\b3\00\00\b1\b5\00\00\15\b8\00\00}\ba\00\00\e9\bc\00\00Y\bf\00\00\cd\c1\00\00E\c4\00\00\c1\c6\00\00A\c9\00\00\c5\cb\00\00M\ce\00\00\d9\d0\00\00i\d3\00\00\fd\d5\00\00\95\d8\00\001\db\00\00\d1\dd\00\00u\e0\00\00\1d\e3\00\00\c9\e5\00\00y\e8\00\00-\eb\00\00\e5\ed\00\00\a1\f0\00\00?\00\00\00\81\00\00\00\e7\00\00\00y\01\00\00?\02\00\00A\03\00\00\87\04\00\00\19\06\00\00\ff\07\00\00A\n\00\00\e7\0c\00\00\f9\0f\00\00\7f\13\00\00\81\17\00\00\07\1c\00\00\19!\00\00\bf&\00\00\01-\00\00\e73\00\00y;\00\00\bfC\00\00\c1L\00\00\87V\00\00\19a\00\00\7fl\00\00\c1x\00\00\e7\85\00\00\f9\93\00\00\ff\a2\00\00\01\b3\00\00\07\c4\00\00\19\d6\00\00?\e9\00\00\81\fd\00\00\e7\12\01\00y)\01\00?A\01\00AZ\01\00\87t\01\00\19\90\01\00\ff\ac\01\00A\cb\01\00\e7\ea\01\00\f9\0b\02\00\7f.\02\00\81R\02\00\07x\02\00\19\9f\02\00\bf\c7\02\00\01\f2\02\00\e7\1d\03\00yK\03\00\bfz\03\00\c1\ab\03\00\87\de\03\00\19\13\04\00\7fI\04\00\c1\81\04\00\e7\bb\04\00\f9\f7\04\00\ff5\05\00\01v\05\00\07\b8\05\00\19\fc\05\00?B\06\00\81\8a\06\00\e7\d4\06\00y!\07\00?p\07\00A\c1\07\00\87\14\08\00\19j\08\00\ff\c1\08\00A\1c\t\00\e7x\t\00\f9\d7\t\00\7f9\n\00\81\9d\n\00\07\04\0b\00\19m\0b\00\bf\d8\0b\00\01G\0c\00\e7\b7\0c\00y+\0d\00\bf\a1\0d\00\c1\1a\0e\00\87\96\0e\00\19\15\0f\00\7f\96\0f\00\c1\1a\10\00\e7\a1\10\00\f9+\11\00\ff\b8\11\00\01I\12\00\07\dc\12\00\19r\13\00?\0b\14\00\81\a7\14\00\e7F\15\00y\e9\15\00?\8f\16\00A8\17\00\87\e4\17\00\19\94\18\00\ffF\19\00A\fd\19\00\e7\b6\1a\00\f9s\1b\00\7f4\1c\00\81\f8\1c\00\07\c0\1d\00\19\8b\1e\00\bfY\1f\00\01, \00\e7\01!\00y\db!\00\bf\b8\"\00\c1\99#\00\87~$\00\19g%\00\7fS&\00\c1C\'\00\e77(\00\f9/)\00\ff+*\00\01,+\00\070,\00\198-\00?D.\00\81T/\00\e7h0\00y\811\00?\9e2\00A\bf3\00\87\e44\00\19\0e6\00\ff;7\00An8\00\e7\a49\00\f9\df:\00\7f\1f<\00\81c=\00\07\ac>\00\19\f9?\00\bfJA\00\01\a1B\00\e7\fbC\00y[E\00\bf\bfF\00\c1(H\00\87\96I\00\19\tK\00\7f\80L\00\c1\fcM\00\e7}O\00\f9\03Q\00\ff\8eR\00\01\1fT\00\07\b4U\00\19NW\00?\edX\00\81\91Z\00\e7:\\\00y\e9]\00?\9d_\00AVa\00\87\14c\00\19\d8d\00\ff\a0f\00Aoh\00\e7Bj\00\f9\1bl\00\7f\fam\00A\01\00\00\a9\02\00\00\t\05\00\00\c1\08\00\00A\0e\00\00\t\16\00\00\a9 \00\00\c1.\00\00\01A\00\00)X\00\00\tu\00\00\81\98\00\00\81\c3\00\00\t\f7\00\00)4\01\00\01|\01\00\c1\cf\01\00\a90\02\00\t\a0\02\00A\1f\03\00\c1\af\03\00\tS\04\00\a9\n\05\00A\d8\05\00\81\bd\06\00)\bc\07\00\t\d6\08\00\01\0d\n\00\01c\0b\00\t\da\0c\00)t\0e\00\813\10\00A\1a\12\00\a9*\14\00\tg\16\00\c1\d1\18\00Am\1b\00\t<\1e\00\a9@!\00\c1}$\00\01\f6\'\00)\ac+\00\t\a3/\00\81\dd3\00\81^8\00\t)=\00)@B\00\01\a7G\00\c1`M\00\a9pS\00\t\daY\00A\a0`\00\c1\c6g\00\tQo\00\a9Bw\00A\9f\7f\00\81j\88\00)\a8\91\00\t\\\9b\00\01\8a\a5\00\016\b0\00\td\bb\00)\18\c7\00\81V\d3\00A#\e0\00\a9\82\ed\00\ty\fb\00\c1\n\n\01A<\19\01\t\12)\01\a9\909\01\c1\bcJ\01\01\9b\\\01)0o\01\t\81\82\01\81\92\96\01\81i\ab\01\t\0b\c1\01)|\d7\01\01\c2\ee\01\c1\e1\06\02\a9\e0\1f\02\t\c49\02A\91T\02\c1Mp\02\t\ff\8c\02\a9\aa\aa\02AV\c9\02\81\07\e9\02)\c4\t\03\t\92+\03\01wN\03\01yr\03\t\9e\97\03)\ec\bd\03\81i\e5\03A\1c\0e\04\a9\n8\04\t;c\04\c1\b3\8f\04A{\bd\04\t\98\ec\04\a9\10\1d\05\c1\ebN\05\010\82\05)\e4\b6\05\t\0f\ed\05\81\b7$\06\81\e4]\06\t\9d\98\06)\e8\d4\06\01\cd\12\07\c1RR\07\a9\80\93\07\t^\d6\07A\f2\1a\08\c1Da\08\t]\a9\08\a9B\f3\08A\fd>\t\81\94\8c\t)\10\dc\t\tx-\n\01\d4\80\n\01,\d6\n\t\88-\0b)\f0\86\0b\81l\e2\0bA\05@\0c\a9\c2\9f\0c\t\ad\01\0d\c1\cce\0dA*\cc\0d\t\ce4\0e\a9\c0\9f\0e\c1\n\0d\0f\01\b5|\0f)\c8\ee\0f\tMc\10\81L\da\10\81\cfS\11\t\df\cf\11)\84N\12\01\c8\cf\12\c1\b3S\13\a9P\da\13\t\a8c\14A\c3\ef\14\c1\ab~\15\tk\10\16\a9\n\a5\16A\94<\17\81\11\d7\17)\8ct\18\t\0e\15\19\01\a1\b8\19\01O_\1a\t\"\t\1b)$\b6\1b\81_f\1cA\de\19\1d\a9\aa\d0\1d\t\cf\8a\1e\c1UH\1fAI\t \t\b4\cd \a9\a0\95!\c1\19a\"\01*0#)\dc\02$\t;\d9$\81Q\b3%\93\06\00\00E\0e\00\00\0f\1c\00\00\113\00\00[W\00\00\0d\8e\00\00w\dd\00\009M\01\00c\e6\01\00\95\b3\02\00\1f\c1\03\00!\1d\05\00\ab\d7\06\00\dd\02\t\00\07\b3\0b\00\c9\fe\0e\003\ff\12\00\e5\cf\17\00/\8f\1d\001^$\00\fb`,\00\ad\be5\00\97\a1@\00Y7M\00\03\b1[\005Cl\00?&\7f\00A\96\94\00K\d3\ac\00}!\c8\00\'\c9\e6\00\e9\16\t\01\d3[/\01\85\edY\01O&\89\01Qe\bd\01\9b\0e\f7\01M\8b6\02\b7I|\02y\bd\c8\02\a3_\1c\03\d5\aew\03_/\db\03akG\04\eb\f2\bc\04\1d\\<\05GC\c6\05\tK[\06s\1c\fc\06%g\a9\07o\e1c\08qH,\t;`\03\n\ed\f3\e9\n\d7\d5\e0\0b\99\df\e8\0cC\f2\02\0eu\f6/\0f\7f\dcp\10\81\9c\c6\11\8b62\13\bd\b2\b4\14g!O\16)\9b\02\18\13A\d0\19\c5<\b9\1b\8f\c0\be\1d\91\07\e2\1f\dbU$\"\8d\f8\86$\f7E\0b\'\b9\9d\b2)\e3h~,\15\1ap/\9f-\892\a1)\cb5+\9e79]%\d0<\87c\96@I\07\8cD\b3\c9\b2Hen\0cM\af\c3\9aQ\b1\a2_V{\ef\\[-\99\94`\17\9a\08f\d9\f7\bak\83\c3\adq\b5\19\e3w\bf\"]~\1d#\00\00qM\00\00\91\9c\00\00\fd&\01\00e\0c\02\00\e9w\03\00\99\a2\05\005\d6\08\00-p\0d\00\e1\e4\13\00!\c3\1c\00\ed\b7(\00u\928\00YHM\00)\fag\00%\f8\89\00=\c7\b4\00Q&\ea\00\b1\13,\01\dd\d2|\01\85\f2\de\01\c9RU\02\b9+\e3\02\15\14\8c\03M\08T\04\c1q?\05A.S\06\cd\97\94\07\95\8c\t\t9w\b8\nIW\a8\0c\05\ca\e0\0e]\13j\111\'M\14\d1\b2\93\17\bd&H\1b\a5\c0u\1f\a9\95($\d9\9cm)\f5\b9R/m\c8\e65\a1\a69=aA\\E\ad\9f`N\b5\eeYX\19\8e\\ci\1c~o\e5\83\d5|\ff\bd\00\00\01\a8\01\00\8fk\03\00\f1\9e\06\00?#\0c\00\c1=\15\00\8f\b6#\00\f1\fc9\00\ffQ[\00\01\fa\8b\00\0fu\d1\00q\bf2\01?\9a\b8\01\c1\dcm\02\0f\cf_\03q\8e\9e\04\ff{=\06\01\b6S\08\8f\9c\fc\n\f1aX\0e?\a7\8c\12\c1%\c5\17\8fe4\1e\f1\81\14&\ff\fb\a7/\01\9c:;\0fb\"Iq\86\c0Y?\8a\82m\c1X\e3\84\01\0e\04\00\91!\t\00\11,\13\00A\ee%\00AOG\00\91C\80\00\11\f7\dd\00\01Fs\01\01\92Z\02\11\01\b8\03\915\bc\05A\8f\a7\08A\06\ce\0c\11\b2\9b\12\91\0f\9a\1a\01\1av%\01L\074\91\9eWG\11\9d\ac`A\a6\91\81#Q\16\00\c5\9e2\00\17\b9k\00\99\f6\d8\00k\89\a0\01\0d\c4\fe\02\1f\01P\05!\d9\1d\t3l0\0f\d5\a2\a4\18\a7g\08\')\fd}<{\b5\e7[\1dw\1d\89\af\a0-\c9\ad\8e{\00\89\e6\19\019\96^\02=\16\d8\04\b5cw\t\e1(\c6\11!\034 uH\828}WW`\bf[\af\02\81\d8\'\06\f7\84^\0d\e9\fe\ad\1b\7f\8b\eb6\81\b7\e5h\17\03\9c\c1\c1\0c\ff\0e9j\85\"\19\ee\91K\81x+\9e3\e1\tT\95\8b\00\007\98\00\00\ff\a5\00\00\04\b5\00\00g\c5\00\00E\d7\00\00\c1\ea\00\00\ff\ff\00\00\00\00\01\00\02\00\03\00\04\00\05\00\06\00\07\00\08\00\n\00\0c\00\0e\00\10\00\14\00\18\00\1c\00\"\00(\000\00<\00N\00d")
 (data (i32.const 6853) "ZPKE?81(\"\1d\14\12\n")
 (data (i32.const 6874) "ndZTNGA:3-\' \1a\14\0c\00\00\00\00\00\00vng]VPKFA;5/(\1f\17\0f\04\00\00\00\00~wph_YSNHB<6/\' \19\11\0c\01\00\00\86\7fxrga[UNHB<6/)#\1d\17\10\n\01\90\89\82|qke_XRLF@93-\'!\1a\0f\01\98\91\8a\84{uoib\\VPJC=71+$\14\01\a2\9b\94\8e\85\7fyslf`ZTMGA;5.\1e\01\ac\a5\9e\98\8f\89\83}vpjd^WQKE?8-\14\c8\c8\c8\c8\c8\c8\c8\c8\c6\c1\bc\b7\b2\ad\a8\a3\9e\99\94\81h")
 (data (i32.const 7088) "\08\00\08\00\08\00\08\00\10\00\10\00\10\00\15\00\15\00\18\00\1d\00\"\00$\00\00\00\00\00\00\00j\1c\8d8R\bb\1e:\08i\dc:\82\edW;\89c\b2;\03*\05<0\dc9<\b4>w<\1c\a3\9e<\d1\f2\c5<\fe\86\f1<\9b\ab\10=\05\ad*=\84\c2F=S\e6d=\11\89\82=\87\9f\93=\cb\b2\a5=\d1\be\b8=:\bf\cc=T\af\e1=\14\8a\f7=\0e%\07>\d9\f4\12>_1\1f>h\d7+>\8a\e38>0RF>\94\1fT>\bfGb>\8e\c6p>\b0\97\7f>R[\87>`\0f\8f>\98\e5\96>y\db\9e>p\ee\a6>\d8\1b\af>\fb`\b7>\11\bb\bf>F\'\c8>\b7\a2\d0>x*\d9>\94\bb\e1>\0cS\ea>\de\ed\f2>\06\89\fb>\be\10\02?\1fZ\06?$\9f\n?P\de\0e?+\16\13?AE\17?%j\1b?s\83\1f?\ce\8f#?\e6\8d\'?t|+??Z/?\19&3?\e7\de6?\99\83:?3\13>?\c5\8cA?w\efD?\7f:H?\'mK?\ce\86N?\e5\86Q?\f1lT?\8e8W?i\e9Y?E\7f\\?\fa\f9^?sYa?\af\9dc?\c1\c6e?\cf\d4g?\11\c8i?\d2\a0k?n_m?P\04o?\f4\8fp?\e6\02r?\bd]s?\1f\a1t?\bf\cdu?W\e4v?\b0\e5w?\97\d2x?\e3\aby?srz?\'\'{?\e7\ca{?\9d^|?5\e3|?\9cY}?\bd\c2}?\86\1f~?\dep~?\ab\b7~?\cf\f4~?&)\7f?\86U\7f?\bez\7f?\96\99\7f?\cc\b2\7f?\14\c7\7f?\1c\d7\7f?\82\e3\7f?\dd\ec\7f?\b6\f3\7f?\8a\f8\7f?\c8\fb\7f?\d6\fd\7f?\07\ff\7f?\a5\ff\7f?\e8\ff\7f?\fd\ff\7f?\00\00\80?\ff\ff\7f?\8e\ff\7f?j\fe\7f?\93\fc\7f?\07\fa\7f?\c8\f6\7f?\d6\f2\7f?0\ee\7f?\d6\e8\7f?\c8\e2\7f?\07\dc\7f?\93\d4\7f?k\cc\7f?\8f\c3\7f?\00\ba\7f?\bd\af\7f?\c7\a4\7f?\1d\99\7f?\c0\8c\7f?\b0\7f\7f?\ecq\7f?vc\7f?KT\7f?nD\7f?\de3\7f?\9a\"\7f?\a3\10\7f?\fa\fd~?\9d\ea~?\8d\d6~?\cb\c1~?V\ac~?.\96~?S\7f~?\c6g~?\86O~?\946~?\ef\1c~?\98\02~?\8f\e7}?\d3\cb}?f\af}?F\92}?tt}?\f1U}?\bc6}?\d5\16}?<\f6|?\f2\d4|?\f6\b2|?I\90|?\ebl|?\dbH|?\1b$|?\a9\fe{?\87\d8{?\b4\b1{?0\8a{?\fca{?\179{?\82\0f{?=\e5z?H\baz?\a2\8ez?Mbz?H5z?\94\07z?0\d9y?\1d\aay?Zzy?\e9Iy?\c8\18y?\f9\e6x?{\b4x?N\81x?sMx?\ea\18x?\b2\e3w?\cd\adw?:ww?\f9?w?\n\08w?n\cfv?%\96v?/\\v?\8c!v?<\e6u?@\aau?\97mu?B0u?A\f2t?\94\b3t?;tt?74t?\87\f3s?,\b2s?&ps?v-s?\1a\ear?\14\a6r?dar?\n\1cr?\05\d6q?W\8fq?\00Hq?\ff\ffp?U\b7p?\02np?\06$p?b\d9o?\15\8eo? Bo?\84\f5n??\a8n?SZn?\c0\0bn?\86\bcm?\a5lm?\1d\1cm?\ef\cal?\1byl?\a1&l?\80\d3k?\bb\7fk?P+k?@\d6j?\8c\80j?2*j?5\d3i?\93{i?M#i?d\cah?\d8ph?\a8\16h?\d5\bbg?``g?H\04g?\8f\a7f?3Jf?6\ece?\97\8de?W.e?w\ced?\f5md?\d4\0cd?\12\abc?\b1Hc?\b0\e5b?\10\82b?\d1\1db?\f3\b8a?wSa?\\\ed`?\a4\86`?N\1f`?[\b7_?\cbN_?\9e\e5^?\d5{^?p\11^?n\a6]?\d2:]?\9a\ce\\?\c6a\\?Y\f4[?Q\86[?\ae\17[?r\a8Z?\9d8Z?.\c8Y?\'WY?\87\e5X?OsX?\7f\00X?\17\8dW?\18\19W?\82\a4V?V/V?\93\b9U?:CU?K\ccT?\c7TT?\ae\dcS?\01dS?\bf\eaR?\e9pR?\7f\f6Q?\82{Q?\f2\ffP?\cf\83P?\1a\07P?\d2\89O?\fa\0bO?\90\8dN?\94\0eN?\t\8fM?\ed\0eM?A\8eL?\05\0dL?;\8bK?\e1\08K?\f9\85J?\83\02J?\7f~I?\ee\f9H?\cftH?$\efG?\edhG?)\e2F?\daZF?\00\d3E?\9bJE?\ac\c1D?28D?/\aeC?\a2#C?\8d\98B?\ef\0cB?\c8\80A?\1a\f4@?\e5f@?(\d9??\e5J??\1b\bc>?\cc,>?\f7\9c=?\9d\0c=?\be{<?\\\ea;?uX;?\n\c6:?\1d3:?\ad\9f9?\bb\0b9?Gw8?Q\e27?\daL7?\e3\b66?k 6?t\895?\fd\f14?\07Z4?\93\c13?\a0(3?0\8f2?B\f51?\d8Z1?\f1\bf0?\8e$0?\af\88/?U\ec.?\81O.?2\b2-?i\14-?\'v,?k\d7+?78+?\8b\98*?g\f8)?\ccW)?\ba\b6(?2\15(?3s\'?\bf\d0&?\d6-&?y\8a%?\a7\e6$?aB$?\a9\9d#?}\f8\"?\dfR\"?\cf\ac!?M\06!?[_ ?\f8\b7\1f?%\10\1f?\e2g\1e?0\bf\1d?\10\16\1d?\81l\1c?\84\c2\1b?\1a\18\1b?Cm\1a?\00\c2\19?Q\16\19?6j\18?\b1\bd\17?\c1\10\17?gc\16?\a3\b5\15?v\07\15?\e1X\14?\e4\a9\13?\7f\fa\12?\b3J\12?\80\9a\11?\e7\e9\10?\e88\10?\84\87\0f?\bb\d5\0e?\8e#\0e?\fep\0d?\n\be\0c?\b3\n\0c?\faV\0b?\df\a2\n?c\ee\t?\869\t?I\84\08?\ac\ce\07?\af\18\07?Tb\06?\9b\ab\05?\83\f4\04?\0f=\04?=\85\03?\0f\cd\02?\86\14\02?\a1[\01?a\a2\00?\8f\d1\ff>\a7]\fe>\0e\e9\fc>\c2s\fb>\c6\fd\f9>\1b\87\f8>\c1\0f\f7>\ba\97\f5>\06\1f\f4>\a8\a5\f2>\9e+\f1>\ec\b0\ef>\915\ee>\90\b9\ec>\e8<\eb>\9a\bf\e9>\a9A\e8>\15\c3\e6>\dfC\e5>\08\c4\e3>\91C\e2>|\c2\e0>\c8@\df>x\be\dd>\8c;\dc>\06\b8\da>\e63\d9>.\af\d7>\df)\d6>\f9\a3\d4>}\1d\d3>n\96\d1>\cc\0e\d0>\97\86\ce>\d2\fd\cc>}t\cb>\99\ea\c9>\'`\c8>(\d5\c6>\9fI\c5>\8a\bd\c3>\ec0\c2>\c6\a3\c0>\19\16\bf>\e6\87\bd>-\f9\bb>\f1i\ba>2\da\b8>\f1I\b7>/\b9\b5>\ee\'\b4>/\96\b2>\f2\03\b1>9q\af>\04\de\ad>VJ\ac>/\b6\aa>\90!\a9>z\8c\a7>\ef\f6\a5>\ef`\a4>|\ca\a2>\973\a1>@\9c\9f>z\04\9e>Dl\9c>\a1\d3\9a>\91:\99>\16\a1\97>0\07\96>\e1l\94>)\d2\92>\0b7\91>\87\9b\8f>\9e\ff\8d>Qc\8c>\a2\c6\8a>\91)\89> \8c\87>P\ee\85>\"P\84>\97\b1\82>\b0\12\81>\de\e6~>\a9\a7{>\c3gx>/\'u>\ee\e5q>\04\a4n>sak><\1eh>b\dad>\e8\95a>\cfP^>\1a\0b[>\cc\c4W>\e6}T>k6Q>]\eeM>\bf\a5J>\92\\G>\da\12D>\97\c8@>\ce}=>\802:>\ae\e66>]\9a3>\8dM0>B\00->}\b2)>Bd&>\91\15#>n\c6\1f>\dbv\1c>\da&\19>m\d6\15>\98\85\12>[4\0f>\ba\e2\0b>\b7\90\08>T>\05>\94\eb\01>\f00\fd=\06\8a\f6=q\e2\ef=3:\e9=O\91\e2=\cf\e7\db=\b5=\d5=\03\93\ce=\c0\e7\c7=\f2;\c1=\9c\8f\ba=\c3\e2\b3=l5\ad=\9b\87\a6=U\d9\9f=\9f*\99=~{\92=\f6\cb\8b=\0b\1c\85=\87\d7|=Fvo=]\14b=\d6\b1T=\b9NG=\10\eb9=\e5\86,=@\"\1f=,\bd\11=\b2W\04=\b5\e3\ed<`\17\d3<vJ\b8<\0b}\9d<2\af\82<\fa\c1O<\fe$\1a<*\0f\c9;\99\a7;;.}\d6\b9\d2Fq\bb\ab\de\e3\bb\a6\8c\'\bc\81)]\bc\e1b\89\bc\a00\a4\bc\ec\fd\be\bc\b3\ca\d9\bc\e0\96\f4\bc1\b1\07\bd\93\16\15\bd\8c{\"\bd\13\e0/\bd\1eD=\bd\a5\a7J\bd\9d\nX\bd\fele\bd\be\cer\bd\ea\17\80\bd\1b\c8\86\bd\edw\8d\bd\\\'\94\bdc\d6\9a\bd\fd\84\a1\bd&3\a8\bd\d9\e0\ae\bd\11\8e\b5\bd\ca:\bc\bd\fe\e6\c2\bd\aa\92\c9\bd\c8=\d0\bdT\e8\d6\bdJ\92\dd\bd\a4;\e4\bd]\e4\ea\bdr\8c\f1\bd\dd3\f8\bd\9a\da\fe\bdR\c0\02\be\fc\12\06\beGe\t\be2\b7\0c\be\ba\08\10\be\ddY\13\be\98\aa\16\be\ea\fa\19\be\d0J\1d\beG\9a \beN\e9#\be\e17\'\be\00\86*\be\a6\d3-\be\d3 1\be\83m4\be\b5\b97\bee\05;\be\93P>\be:\9bA\beZ\e5D\be\f0.H\be\f9wK\bet\c0N\be]\08R\be\b3OU\bes\96X\be\9c\dc[\be*\"_\be\1bgb\bem\abe\be\1f\efh\be,2l\be\94to\beT\b6r\bej\f7u\be\d37y\be\8dw|\be\96\b6\7f\beuz\81\beE\19\83\be\b9\b7\84\be\d0U\86\be\88\f3\87\be\e1\90\89\be\da-\8b\bep\ca\8c\be\a4f\8e\bet\02\90\be\df\9d\91\be\e48\93\be\81\d3\94\be\b6m\96\be\81\07\98\be\e2\a0\99\be\d79\9b\be_\d2\9c\beyj\9e\be#\02\a0\be^\99\a1\be&0\a3\be}\c6\a4\be`\\\a6\be\ce\f1\a7\be\c6\86\a9\beG\1b\ab\beP\af\ac\be\e0B\ae\be\f5\d5\af\be\8fh\b1\be\ad\fa\b2\beM\8c\b4\ben\1d\b6\be\10\ae\b7\be0>\b9\be\cf\cd\ba\be\ea\\\bc\be\82\eb\bd\be\94y\bf\be\1f\07\c1\be#\94\c2\be\9f \c4\be\91\ac\c5\be\f87\c7\be\d3\c2\c8\be\"M\ca\be\e2\d6\cb\be\13`\cd\be\b5\e8\ce\be\c5p\d0\beB\f8\d1\be-\7f\d3\be\83\05\d5\beC\8b\d6\bem\10\d8\be\ff\94\d9\be\f9\18\db\beY\9c\dc\be\1d\1f\de\beF\a1\df\be\d3\"\e1\be\c1\a3\e2\be\10$\e4\be\be\a3\e5\be\cc\"\e7\be8\a1\e8\be\00\1f\ea\be$\9c\eb\be\a2\18\ed\bez\94\ee\be\ab\0f\f0\be3\8a\f1\be\12\04\f3\beF}\f4\be\cf\f5\f5\be\aam\f7\be\d9\e4\f8\beX[\fa\be(\d1\fb\beGF\fd\be\b5\ba\fe\be8\17\00\bf\bb\d0\00\bf\e4\89\01\bf\b2B\02\bf%\fb\02\bf;\b3\03\bf\f6j\04\bfS\"\05\bfS\d9\05\bf\f5\8f\06\bf8F\07\bf\1d\fc\07\bf\a2\b1\08\bf\c7f\t\bf\8c\1b\n\bf\f0\cf\n\bf\f3\83\0b\bf\937\0c\bf\d1\ea\0c\bf\ac\9d\0d\bf$P\0e\bf8\02\0f\bf\e8\b3\0f\bf2e\10\bf\18\16\11\bf\97\c6\11\bf\b0v\12\bfc&\13\bf\ae\d5\13\bf\91\84\14\bf\0d3\15\bf\1f\e1\15\bf\c8\8e\16\bf\08<\17\bf\dd\e8\17\bfH\95\18\bfHA\19\bf\dc\ec\19\bf\04\98\1a\bf\c0B\1b\bf\0f\ed\1b\bf\f0\96\1c\bfc@\1d\bfh\e9\1d\bf\fe\91\1e\bf%:\1f\bf\dc\e1\1f\bf#\89 \bf\fa/!\bf_\d6!\bfR|\"\bf\d4!#\bf\e3\c6#\bf\7fk$\bf\a7\0f%\bf\\\b3%\bf\9dV&\bfh\f9&\bf\bf\9b\'\bf\a0=(\bf\0b\df(\bf\ff\7f)\bf} *\bf\83\c0*\bf\11`+\bf\'\ff+\bf\c4\9d,\bf\e8;-\bf\92\d9-\bf\c3v.\bfy\13/\bf\b4\af/\bfsK0\bf\b7\e60\bf\7f\811\bf\cb\1b2\bf\99\b52\bf\eaN3\bf\bd\e73\bf\12\804\bf\e8\175\bf?\af5\bf\16F6\bfn\dc6\bfEr7\bf\9c\078\bfq\9c8\bf\c509\bf\96\c49\bf\e6W:\bf\b2\ea:\bf\fc|;\bf\c2\0e<\bf\03\a0<\bf\c10=\bf\fa\c0=\bf\adP>\bf\db\df>\bf\83n?\bf\a5\fc?\bf@\8a@\bfS\17A\bf\e0\a3A\bf\e4/B\bf`\bbB\bfSFC\bf\be\d0C\bf\9eZD\bf\f6\e3D\bf\c2lE\bf\05\f5E\bf\bc|F\bf\e8\03G\bf\89\8aG\bf\9d\10H\bf%\96H\bf \1bI\bf\8e\9fI\bfo#J\bf\c1\a6J\bf\86)K\bf\bc\abK\bfc-L\bfz\aeL\bf\02/M\bf\fa\aeM\bfb.N\bf9\adN\bf~+O\bf3\a9O\bfU&P\bf\e6\a2P\bf\e4\1eQ\bfP\9aQ\bf(\15R\bfm\8fR\bf\1e\tS\bf;\82S\bf\c3\faS\bf\b7rT\bf\16\eaT\bf\df`U\bf\12\d7U\bf\b0LV\bf\b7\c1V\bf\'6W\bf\00\aaW\bfB\1dX\bf\ec\8fX\bf\fe\01Y\bfxsY\bfY\e4Y\bf\a2TZ\bfQ\c4Z\bff3[\bf\e2\a1[\bf\c3\0f\\\bf\n}\\\bf\b7\e9\\\bf\c8U]\bf>\c1]\bf\18,^\bfW\96^\bf\f9\ff^\bf\ffh_\bfh\d1_\bf39`\bfb\a0`\bf\f3\06a\bf\e5la\bf:\d2a\bf\f06b\bf\08\9bb\bf\80\feb\bfYac\bf\92\c3c\bf,%d\bf%\86d\bf~\e6d\bf7Fe\bfN\a5e\bf\c5\03f\bf\9aaf\bf\cd\bef\bf^\1bg\bfMwg\bf\9a\d2g\bfD-h\bfK\87h\bf\ae\e0h\bfo9i\bf\8b\91i\bf\04\e9i\bf\d9?j\bf\t\96j\bf\94\ebj\bf{@k\bf\bc\94k\bfY\e8k\bfO;l\bf\a0\8dl\bfK\dfl\bfO0m\bf\ad\80m\bfe\d0m\bfu\1fn\bf\dfmn\bf\a1\bbn\bf\bb\08o\bf.Uo\bf\f8\a0o\bf\1b\eco\bf\956p\bfg\80p\bf\90\c9p\bf\0f\12q\bf\e6Yq\bf\13\a1q\bf\97\e7q\bfq-r\bf\a0rr\bf&\b7r\bf\01\fbr\bf2>s\bf\b8\80s\bf\94\c2s\bf\c4\03t\bfIDt\bf\"\84t\bfP\c3t\bf\d2\01u\bf\a8?u\bf\d2|u\bfP\b9u\bf!\f5u\bfE0v\bf\bdjv\bf\88\a4v\bf\a6\ddv\bf\16\16w\bf\d9Mw\bf\ef\84w\bfW\bbw\bf\11\f1w\bf\1d&x\bfzZx\bf*\8ex\bf+\c1x\bf}\f3x\bf!%y\bf\16Vy\bf\\\86y\bf\f2\b5y\bf\da\e4y\bf\12\13z\bf\9a@z\bfsmz\bf\9d\99z\bf\16\c5z\bf\df\efz\bf\f8\19{\bfaC{\bf\1al{\bf\"\94{\bfz\bb{\bf \e2{\bf\17\08|\bf\\-|\bf\f0Q|\bf\d3u|\bf\05\99|\bf\86\bb|\bfU\dd|\bfs\fe|\bf\df\1e}\bf\9a>}\bf\a3]}\bf\fa{}\bf\9f\99}\bf\92\b6}\bf\d3\d2}\bfb\ee}\bf?\t~\bfi#~\bf\e1<~\bf\a7U~\bf\bam~\bf\1b\85~\bf\c9\9b~\bf\c4\b1~\bf\0d\c7~\bf\a2\db~\bf\85\ef~\bf\b5\02\7f\bf2\15\7f\bf\fc&\7f\bf\138\7f\bfvH\7f\bf\'X\7f\bf$g\7f\bfnu\7f\bf\05\83\7f\bf\e8\8f\7f\bf\19\9c\7f\bf\95\a7\7f\bf_\b2\7f\bft\bc\7f\bf\d7\c5\7f\bf\85\ce\7f\bf\81\d6\7f\bf\c8\dd\7f\bf]\e4\7f\bf=\ea\7f\bfj\ef\7f\bf\e3\f3\7f\bf\a9\f7\7f\bf\bb\fa\7f\bf\19\fd\7f\bf\c4\fe\7f\bf\bb\ff\7f\bf\fa\ff\7f?9\fe\7f?\a9\f9\7f?K\f2\7f?\1e\e8\7f?#\db\7f?Y\cb\7f?\c1\b8\7f?[\a3\7f?(\8b\7f?\'p\7f?ZR\7f?\bf1\7f?X\0e\7f?%\e8~?&\bf~?\\\93~?\c8d~?i3~?A\ff}?O\c8}?\96\8e}?\14R}?\cb\12}?\bc\d0|?\e7\8b|?MD|?\ef\f9{?\cd\ac{?\e9\\{?C\n{?\dd\b4z?\b6\\z?\d1\01z?.\a4y?\ceCy?\b2\e0x?\dczx?L\12x?\04\a7w?\049w?O\c8v?\e4Tv?\c6\deu?\f6eu?u\eat?Dlt?e\ebs?\dags?\a3\e1r?\c2Xr?9\cdq?\t?q?4\aep?\bb\1ap?\a0\84o?\e4\ebn?\8aPn?\93\b2m?\01\12m?\d5nl?\11\c9k?\b7 k?\c9uj?I\c8i?9\18i?\9beh?o\b0g?\ba\f8f?|>f?\b8\81e?o\c2d?\a4\00d?Z<c?\91ub?L\aca?\8e\e0`?Y\12`?\aeA_?\91n^?\03\99]?\08\c1\\?\a0\e6[?\cf\t[?\98*Z?\fbHY?\fddX?\9f~W?\e5\95V?\d0\aaU?c\bdT?\a1\cdS?\8c\dbR?\'\e7Q?u\f0P?y\f7O?4\fcN?\ab\feM?\df\feL?\d4\fcK?\8c\f8J?\n\f2I?R\e9H?e\deG?G\d1F?\fb\c1E?\84\b0D?\e5\9cC? \87B?:oA?4U@?\139??\d8\1a>?\88\fa<?&\d8;?\b4\b3:?6\8d9?\afd8?\":7?\93\0d6?\05\df4?|\ae3?\f9{2?\82G1?\19\110?\c2\d8.?\7f\9e-?Vb,?H$+?Z\e4)?\90\a2(?\eb^\'?q\19&?%\d2$?\t\89#?#>\"?u\f1 ?\04\a3\1f?\d2R\1e?\e4\00\1d?=\ad\1b?\e1W\1a?\d3\00\19?\19\a8\17?\b4M\16?\aa\f1\14?\fd\93\13?\b24\12?\cc\d3\10?Pq\0f?B\0d\0e?\a4\a7\0c?|@\0b?\cd\d7\t?\9am\08?\e9\01\07?\bd\94\05?\19&\04?\03\b6\02?~D\01?\1c\a3\ff>n\ba\fc>\fa\ce\f9>\ca\e0\f6>\e4\ef\f3>Q\fc\f0>\1a\06\ee>G\0d\eb>\e0\11\e8>\ed\13\e5>w\13\e2>\87\10\df>$\0b\dc>X\03\d9>*\f9\d5>\a4\ec\d2>\cd\dd\cf>\af\cc\cc>R\b9\c9>\bf\a3\c6>\fe\8b\c3>\18r\c0>\16V\bd>\008\ba>\e0\17\b7>\bd\f5\b3>\a1\d1\b0>\95\ab\ad>\a2\83\aa>\cfY\a7>\'.\a4>\b2\00\a1>y\d1\9d>\85\a0\9a>\dfm\97>\8f9\94>\a0\03\91>\1a\cc\8d>\05\93\8a>kX\87>V\1c\84>\cd\de\80>\b6?{>\10\bft>\bb;n>\c9\b5g>M-a>Y\a2Z>\ff\14T>Q\85M>c\f3F>F_@>\0d\c99>\ca03>\90\96,>r\fa%>\82\\\1f>\d2\bc\18>v\1b\12>\7fx\0b>\01\d4\04>\1d\\\fc=r\0d\ef=)\bc\e1=fh\d4=N\12\c7=\08\ba\b9=\b8_\ac=\84\03\9f=\92\a5\91=\07F\84=\12\cam=z\05S=\91>8=\a4u\1d=\fc\aa\02=\ca\bd\cf<V#\9a<a\0eI<\c5\a7\bb;=zV\ba\tF\f1\bb\12\ddc\bcP\8a\a7\bcA$\dd\bc\e3]\t\bd#($\bd\96\f0>\bd\f2\b6Y\bd\eazt\bd\1a\9e\87\bdB\fd\94\bd\c8Z\a2\bd\86\b6\af\bdW\10\bd\bd\16h\ca\bd\9b\bd\d7\bd\c3\10\e5\bdia\f2\bde\af\ff\bdJ}\06\beh!\0d\be\fa\c3\13\be\edd\1a\be.\04!\be\ac\a1\'\beS=.\be\10\d74\be\d2n;\be\86\04B\be\19\98H\bey)O\be\94\b8U\beVE\\\be\ae\cfb\be\89Wi\be\d6\dco\be\80_v\bex\df|\beT\ae\81\be\81\eb\84\be8\'\88\bera\8b\be$\9a\8e\beE\d1\91\be\cd\06\95\be\b3:\98\be\eel\9b\bet\9d\9e\be=\cc\a1\be@\f9\a4\bes$\a8\be\cfM\ab\beIu\ae\be\da\9a\b1\bex\be\b4\be\1b\e0\b7\be\ba\ff\ba\beK\1d\be\be\c78\c1\be%R\c4\be[i\c7\bea~\ca\be0\91\cd\be\bc\a1\d0\be\00\b0\d3\be\f1\bb\d6\be\87\c5\d9\be\ba\cc\dc\be\81\d1\df\be\d3\d3\e2\be\a9\d3\e5\be\fa\d0\e8\be\bd\cb\eb\be\ea\c3\ee\bex\b9\f1\be`\ac\f4\be\9a\9c\f7\be\1c\8a\fa\be\dft\fd\bem.\00\bf\03\a1\01\bf-\12\03\bf\e6\81\04\bf,\f0\05\bf\fa\\\07\bfL\c8\08\bf\1e2\n\bfl\9a\0b\bf2\01\0d\bflf\0e\bf\17\ca\0f\bf-,\11\bf\ac\8c\12\bf\90\eb\13\bf\d5H\15\bfv\a4\16\bfq\fe\17\bf\c0V\19\bfb\ad\1a\bfQ\02\1c\bf\8aU\1d\bf\t\a7\1e\bf\cb\f6\1f\bf\ccD!\bf\t\91\"\bf|\db#\bf$$%\bf\fdj&\bf\02\b0\'\bf0\f3(\bf\844*\bf\fas+\bf\8f\b1,\bf?\ed-\bf\07\'/\bf\e3^0\bf\d0\941\bf\ca\c82\bf\ce\fa3\bf\da*5\bf\e8X6\bf\f7\847\bf\02\af8\bf\07\d79\bf\03\fd:\bf\f1 <\bf\cfB=\bf\9ab>\bfO\80?\bf\e9\9b@\bfh\b5A\bf\c6\ccB\bf\01\e2C\bf\17\f5D\bf\03\06F\bf\c4\14G\bfV!H\bf\b6+I\bf\e13J\bf\d49K\bf\8d=L\bf\t?M\bfD>N\bf=;O\bf\f05P\bfZ.Q\bfy$R\bfJ\18S\bf\ca\tT\bf\f7\f8T\bf\ce\e5U\bfM\d0V\bfp\b8W\bf7\9eX\bf\9c\81Y\bf\a0bZ\bf>A[\bfu\1d\\\bfA\f7\\\bf\a2\ce]\bf\94\a3^\bf\14v_\bf\"F`\bf\ba\13a\bf\d9\dea\bf\7f\a7b\bf\a9mc\bfT1d\bf~\f2d\bf&\b1e\bfImf\bf\e5&g\bf\f8\ddg\bf\80\92h\bf{Di\bf\e8\f3i\bf\c3\a0j\bf\0cKk\bf\c0\f2k\bf\de\97l\bfd:m\bfP\dam\bf\a0wn\bfS\12o\bff\aao\bf\d9?p\bf\a9\d2p\bf\d5bq\bf[\f0q\bf:{r\bfq\03s\bf\fd\88s\bf\de\0bt\bf\11\8ct\bf\96\tu\bfk\84u\bf\8f\fcu\bf\00rv\bf\bd\e4v\bf\c6Tw\bf\18\c2w\bf\b2,x\bf\93\94x\bf\bb\f9x\bf(\\y\bf\d9\bby\bf\cd\18z\bf\02sz\bfy\caz\bf/\1f{\bf$q{\bfX\c0{\bf\c9\0c|\bfvV|\bf_\9d|\bf\82\e1|\bf\e0\"}\bfwa}\bfG\9d}\bfO\d6}\bf\8e\0c~\bf\04@~\bf\b0p~\bf\92\9e~\bf\a9\c9~\bf\f5\f1~\bfu\17\7f\bf):\7f\bf\10Z\7f\bf+w\7f\bfx\91\7f\bf\f8\a8\7f\bf\aa\bd\7f\bf\8f\cf\7f\bf\a5\de\7f\bf\ed\ea\7f\bff\f4\7f\bf\11\fb\7f\bf\ed\fe\7f\bf\ea\ff\7f?\e5\f8\7f?\a6\e6\7f?-\c9\7f?|\a0\7f?\95l\7f?y-\7f?,\e3~?\b1\8d~?\0b-~??\c1}?RJ}?H\c8|?(;|?\f7\a2{?\bd\ffz?\80Qz?H\98y?\1e\d4x?\t\05x?\13+w?FFv?\acVu?N\\t?8Ws?vGr?\13-q?\1c\08p?\9e\d8n?\a5\9em?@Zl?~\0bk?k\b2i?\19Oh?\96\e1f?\f2ie?>\e8c?\8b\\b?\ea\c6`?m\'_?&~]?(\cb[?\85\0eZ?SHX?\a3xV?\8b\9fT? \bdR?v\d1P?\a3\dcN?\bd\deL?\db\d7J?\13\c8H?|\afF?.\8eD?AdB?\ce1@?\ec\f6=?\b4\b3;?Bh9?\ad\147?\10\b94?\86U2?)\ea/?\15w-?e\fc*?5z(?\a1\f0%?\c6_#?\c0\c7 ?\ac(\1e?\a9\82\1b?\d4\d5\18?J\"\16?*h\13?\93\a7\10?\a4\e0\0d?{\13\0b?9@\08?\fdf\05?\e7\87\02?-F\ff>[q\f9>\97\91\f3>$\a7\ed>E\b2\e7><\b3\e1>L\aa\db>\ba\97\d5>\c9{\cf>\beV\c9>\df(\c3>p\f2\bc>\b7\b3\b6>\fbl\b0>\81\1e\aa>\92\c8\a3>sk\9d>l\07\97>\c5\9c\90>\c7+\8a>\b9\b4\83>\c7oz>!km>\11\\`>)CS>\fd F> \f68>&\c3+>\a4\88\1e>-G\11>W\ff\03>nc\ed=\c2\bd\d2=\da\0e\b8=\deW\9d=\fb\99\82=\bc\acO=e\1c\1a=\99\n\c9<*\a7;<\c1x\d6\ba-Dq\bcW\d7\e3\bcL\81\'\bd\94\0f]\bd\15J\89\bdZ\06\a4\bdm\bb\be\bd\"h\d9\bdN\0b\f4\bd\e3Q\07\be/\98\14\be\f7\d7!\be\a5\10/\be\a6A<\bedjI\beM\8aV\be\cd\a0c\beP\adp\beE\af}\be\0dS\85\be\9e\c8\8b\be\0d8\92\be\12\a1\98\bef\03\9f\be\bf^\a5\be\d8\b2\ab\bei\ff\b1\be+D\b8\be\d8\80\be\be*\b5\c4\be\db\e0\ca\be\a5\03\d1\beE\1d\d7\beu-\dd\be\f13\e3\bev0\e9\be\c0\"\ef\be\8d\n\f5\be\9b\e7\fa\be\d3\\\00\bf8@\03\bf\db\1d\06\bf\9b\f5\08\bfZ\c7\0b\bf\f7\92\0e\bfTX\11\bfP\17\14\bf\cd\cf\16\bf\ac\81\19\bf\d0,\1c\bf\1a\d1\1e\bfmn!\bf\ab\04$\bf\b7\93&\bft\1b)\bf\c7\9b+\bf\93\14.\bf\bb\850\bf&\ef2\bf\b7P5\bfU\aa7\bf\e3\fb9\bfJE<\bfn\86>\bf7\bf@\bf\8b\efB\bfS\17E\bfu6G\bf\daLI\bfkZK\bf\10_M\bf\b3ZO\bf>MQ\bf\9a6S\bf\b3\16U\bfr\edV\bf\c5\baX\bf\95~Z\bf\d08\\\bfb\e9]\bf8\90_\bf@-a\bfg\c0b\bf\9cId\bf\ce\c8e\bf\eb=g\bf\e3\a8h\bf\a7\tj\bf\'`k\bfT\acl\bf\1f\eem\bfz%o\bfXRp\bf\abtq\bfg\8cr\bf\7f\99s\bf\e7\9bt\bf\95\93u\bf~\80v\bf\96bw\bf\d49x\bf/\06y\bf\9e\c7y\bf\17~z\bf\94){\bf\0d\ca{\bfz_|\bf\d5\e9|\bf\18i}\bf>\dd}\bf@F~\bf\1c\a4~\bf\cc\f6~\bfM>\7f\bf\9cz\7f\bf\b6\ab\7f\bf\99\d1\7f\bfC\ec\7f\bf\b4\fb\7f\bf\a6\ff\7f?\94\e3\7f?\9c\9a\7f?\cc$\7f?8\82~?\fd\b2}??\b7|?*\8f{?\f3:z?\d4\bax?\11\0fw?\f67u?\d55s?\08\tq?\f1\b1n?\f90l?\90\86i?/\b3f?S\b7c?\84\93`?NH]?E\d6Y?\03>V?+\80R?e\9dN?^\96J?\cckF?j\1eB?\f9\ae=?@\1e9?\0dm4?2\9c/?\87\ac*?\eb\9e%??t ?m-\1b?a\cb\15?\0dO\10?h\b9\n?k\0b\05?.\8c\fe>\dd\d4\f2>\f1\f2\e6>\7f\e8\da>\a6\b7\ce>\88b\c2>N\eb\b5>*T\a9>Q\9f\9c>\fd\ce\8f>m\e5\82>\ce\c9k>b\9fQ>0P7>\d3\e0\1c>\f1U\02>bh\cf=|\00\9a=$\fbH=\1b\a4\bb<\f3wV\bbd=\f1\bc\bb\c0c\bdg]\a7\bd\14\bd\dc\bd\03\fb\08\bes\7f#\be4\e7=\be\a4-X\be&Nr\be\12\"\86\be\89\05\93\be4\cf\9f\be\d5|\ac\be3\0c\b9\be\1a{\c5\be[\c7\d1\be\cd\ee\dd\beP\ef\e9\be\c7\c6\f5\be\90\b9\00\bf&y\06\bf$!\0c\bf\8d\b0\11\bff&\17\bf\ba\81\1c\bf\98\c1!\bf\15\e5&\bfJ\eb+\bfV\d30\bf[\9c5\bf\83E:\bf\fd\cd>\bf\fc4C\bf\bcyG\bf}\9bK\bf\84\99O\bf\1fsS\bf\a1\'W\bfc\b6Z\bf\c6\1e^\bf0`a\bf\0fzd\bf\d8kg\bf\075j\bf\1f\d5l\bf\a9Ko\bf7\98q\bfb\bas\bf\c9\b1u\bf\16~w\bf\f6\1ey\bf!\94z\bfU\dd{\bfY\fa|\bf\fa\ea}\bf\0e\af~\bftF\7f\bf\0f\b1\7f\bf\ce\ee\7f\bf\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff")
 (data (i32.const 14824) ")\00)\00)\00R\00R\00{\00\a4\00\c8\00\de")
 (data (i32.const 14858) ")\00)\00)\00)\00{\00{\00{\00\a4\00\a4\00\f0\00\n\01\1b\01\'\01)\00)\00)\00)\00)\00)\00)\00)\00{\00{\00{\00{\00\f0\00\f0\00\f0\00\n\01\n\011\01>\01H\01P\01{\00{\00{\00{\00{\00{\00{\00{\00\f0\00\f0\00\f0\00\f0\001\011\011\01>\01>\01W\01_\01f\01l\01\f0\00\f0\00\f0\00\f0\00\f0\00\f0\00\f0\00\f0\001\011\011\011\01W\01W\01W\01_\01_\01r\01x\01~\01\83\01")
 (data (i32.const 15024) "(\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07(\0f\17\1c\1f\"$&\')*+,-.//123456779:;<=>??ABCDEFGG(\14!)059=@BEGIKLNPRUWY[\\^`begiklnpruwy{|~\80(\17\'3<CIOSW[^adfikosvy|~\81\83\87\8b\8e\91\94\96\99\9b\9f\a3\a6\a9\ac\ae\b1\b3#\1c1ANYckrx~\84\88\8d\91\95\99\9f\a5\ab\b0\b4\b9\bd\c0\c7\cd\d3\d8\dc\e1\e5\e8\ef\f5\fb\15!:Oap}\89\94\9d\a6\ae\b6\bd\c3\c9\cf\d9\e3\eb\f3\fb\11#?Vj{\8b\98\a5\b1\bb\c5\ce\d6\de\e6\ed\fa\19\1f7K[iu\80\8a\92\9a\a1\a8\ae\b4\b9\be\c8\d0\d7\de\e5\eb\f0\f5\ff\10$AYn\80\90\9f\ad\b9\c4\cf\d9\e2\ea\f2\fa\0b)Jg\80\97\ac\bf\d1\e1\f1\ff\t+On\8a\a3\ba\cf\e3\f6\0c\'Gc{\90\a4\b6\c6\d6\e4\f1\fd\t,Qq\8e\a8\c0\d6\eb\ff\071Z\7f\a0\bf\dc\f7\063_\86\aa\cb\ea\07/W{\9b\b8\d4\ed\064a\89\ae\d0\f0\059j\97\c0\e7\05;o\9e\ca\f3\057g\93\bb\e0\05<q\a1\ce\f8\04Az\af\e0\04C\7f\b6\ea")
 (data (i32.const 15424) "\e0\e0\e0\e0\e0\e0\e0\e0\a0\a0\a0\a0\b9\b9\b9\b2\b2\a8\86=%\e0\e0\e0\e0\e0\e0\e0\e0\f0\f0\f0\f0\cf\cf\cf\c6\c6\b7\90B(\a0\a0\a0\a0\a0\a0\a0\a0\b9\b9\b9\b9\c1\c1\c1\b7\b7\ac\8a@&\f0\f0\f0\f0\f0\f0\f0\f0\cf\cf\cf\cf\cc\cc\cc\c1\c1\b4\8fB(\b9\b9\b9\b9\b9\b9\b9\b9\c1\c1\c1\c1\c1\c1\c1\b7\b7\ac\8aA\'\cf\cf\cf\cf\cf\cf\cf\cf\cc\cc\cc\cc\c9\c9\c9\bc\bc\b0\8dB(\c1\c1\c1\c1\c1\c1\c1\c1\c1\c1\c1\c1\c2\c2\c2\b8\b8\ad\8bA\'\cc\cc\cc\cc\cc\cc\cc\cc\c9\c9\c9\c9\c6\c6\c6\bb\bb\af\8cB(")
 (data (i32.const 15602) "\0c\00\18\00$\000\00\04\00\10\00\1c\00(\004\00\08\00\14\00 \00,\008\00\01\00\0d\00\19\00%\001\00\05\00\11\00\1d\00)\005\00\t\00\15\00!\00-\009\00\02\00\0e\00\1a\00&\002\00\06\00\12\00\1e\00*\006\00\n\00\16\00\"\00.\00:\00\03\00\0f\00\1b\00\'\003\00\07\00\13\00\1f\00+\007\00\0b\00\17\00#\00/\00;")
 (data (i32.const 15730) "\80?\00\00\00\80c\fa\7f?\bfuV\bc\8b\e9\7f?\nq\d6\bcy\cd\7f?\e7\ce \bd/\a6\7f?:^V\bd\afs\7f?\13\f2\85\bd\f95\7f?*\af\a0\bd\12\ed~?3e\bb\bd\fd\98~?\04\13\d6\bd\bc9~?s\b7\f0\bdU\cf}?\a8\a8\05\be\cbY}?\bb\ef\12\be%\d9|?\\0 \begM|?\f5i-\be\98\b6{?\f3\9b:\be\be\14{?\c2\c5G\be\e2gz?\cd\e6T\be\t\b0y?\82\fea\be<\edx?M\0co\be\84\1fx?\9c\0f|\be\eaFw?\ee\83\84\bewcv?>\fa\8a\be6uu?uj\91\be0|t?L\d4\97\beqxs?z7\9e\be\03jr?\b7\93\a4\be\f4Pq?\bc\e8\aa\beO-p?A6\b1\be!\ffn?\01|\b7\bev\c6m?\b4\b9\bd\be^\83l?\15\ef\c3\be\e75k?\de\1b\ca\be\1e\dei?\c9?\d0\be\12|h?\92Z\d6\be\d4\0fg?\f3k\dc\bet\99e?\aas\e2\be\01\19d?qq\e8\be\8d\8eb?\07e\ee\be(\fa`?\'N\f4\be\e6[_?\90,\fa\be\d7\b3]?\00\00\00\bf\0f\02\\?\1b\e4\02\bf\a0FZ?w\c2\05\bf\9e\81X?\f6\9a\08\bf\1d\b3V?wm\0b\bf1\dbT?\da9\0e\bf\ef\f9R?\00\00\11\bfl\0fQ?\ca\bf\13\bf\bd\1bO?\18y\16\bf\f8\1eM?\cd+\19\bf4\19K?\ca\d7\1b\bf\88\nI?\f1|\1e\bf\n\f3F?$\1b!\bf\d1\d2D?F\b2#\bf\f7\a9B?:B&\bf\93x@?\e3\ca(\bf\bd>>?%L+\bf\8f\fc;?\e3\c5-\bf\"\b29?\0180\bf\90_7?e\a22\bf\f3\045?\f3\045\bfe\a22?\90_7\bf\0180?\"\b29\bf\e3\c5-?\8f\fc;\bf%L+?\bd>>\bf\e3\ca(?\93x@\bf:B&?\f7\a9B\bfF\b2#?\d1\d2D\bf$\1b!?\n\f3F\bf\f1|\1e?\88\nI\bf\ca\d7\1b?4\19K\bf\cd+\19?\f8\1eM\bf\18y\16?\bd\1bO\bf\ca\bf\13?l\0fQ\bf\00\00\11?\ef\f9R\bf\da9\0e?1\dbT\bfwm\0b?\1d\b3V\bf\f6\9a\08?\9e\81X\bfw\c2\05?\a0FZ\bf\1b\e4\02?\0f\02\\\bf\00\00\00?\d7\b3]\bf\90,\fa>\e6[_\bf\'N\f4>(\fa`\bf\07e\ee>\8d\8eb\bfqq\e8>\01\19d\bf\aas\e2>t\99e\bf\f3k\dc>\d4\0fg\bf\92Z\d6>\12|h\bf\c9?\d0>\1e\dei\bf\de\1b\ca>\e75k\bf\15\ef\c3>^\83l\bf\b4\b9\bd>v\c6m\bf\01|\b7>!\ffn\bfA6\b1>O-p\bf\bc\e8\aa>\f4Pq\bf\b7\93\a4>\03jr\bfz7\9e>qxs\bfL\d4\97>0|t\bfuj\91>6uu\bf>\fa\8a>wcv\bf\ee\83\84>\eaFw\bf\9c\0f|>\84\1fx\bfM\0co><\edx\bf\82\fea>\t\b0y\bf\cd\e6T>\e2gz\bf\c2\c5G>\be\14{\bf\f3\9b:>\98\b6{\bf\f5i->gM|\bf\\0 >%\d9|\bf\bb\ef\12>\cbY}\bf\a8\a8\05>U\cf}\bfs\b7\f0=\bc9~\bf\04\13\d6=\fd\98~\bf3e\bb=\12\ed~\bf*\af\a0=\f95\7f\bf\13\f2\85=\afs\7f\bf:^V=/\a6\7f\bf\e7\ce =y\cd\7f\bf\nq\d6<\8b\e9\7f\bf\bfuV<c\fa\7f\bf\000\8d$\00\00\80\bf\bfuV\bcc\fa\7f\bf\nq\d6\bc\8b\e9\7f\bf\e7\ce \bdy\cd\7f\bf:^V\bd/\a6\7f\bf\13\f2\85\bd\afs\7f\bf*\af\a0\bd\f95\7f\bf3e\bb\bd\12\ed~\bf\04\13\d6\bd\fd\98~\bfs\b7\f0\bd\bc9~\bf\a8\a8\05\beU\cf}\bf\bb\ef\12\be\cbY}\bf\\0 \be%\d9|\bf\f5i-\begM|\bf\f3\9b:\be\98\b6{\bf\c2\c5G\be\be\14{\bf\cd\e6T\be\e2gz\bf\82\fea\be\t\b0y\bfM\0co\be<\edx\bf\9c\0f|\be\84\1fx\bf\ee\83\84\be\eaFw\bf>\fa\8a\bewcv\bfuj\91\be6uu\bfL\d4\97\be0|t\bfz7\9e\beqxs\bf\b7\93\a4\be\03jr\bf\bc\e8\aa\be\f4Pq\bfA6\b1\beO-p\bf\01|\b7\be!\ffn\bf\b4\b9\bd\bev\c6m\bf\15\ef\c3\be^\83l\bf\de\1b\ca\be\e75k\bf\c9?\d0\be\1e\dei\bf\92Z\d6\be\12|h\bf\f3k\dc\be\d4\0fg\bf\aas\e2\bet\99e\bfqq\e8\be\01\19d\bf\07e\ee\be\8d\8eb\bf\'N\f4\be(\fa`\bf\90,\fa\be\e6[_\bf\00\00\00\bf\d7\b3]\bf\1b\e4\02\bf\0f\02\\\bfw\c2\05\bf\a0FZ\bf\f6\9a\08\bf\9e\81X\bfwm\0b\bf\1d\b3V\bf\da9\0e\bf1\dbT\bf\00\00\11\bf\ef\f9R\bf\ca\bf\13\bfl\0fQ\bf\18y\16\bf\bd\1bO\bf\cd+\19\bf\f8\1eM\bf\ca\d7\1b\bf4\19K\bf\f1|\1e\bf\88\nI\bf$\1b!\bf\n\f3F\bfF\b2#\bf\d1\d2D\bf:B&\bf\f7\a9B\bf\e3\ca(\bf\93x@\bf%L+\bf\bd>>\bf\e3\c5-\bf\8f\fc;\bf\0180\bf\"\b29\bfe\a22\bf\90_7\bf\f3\045\bf\f3\045\bf\90_7\bfe\a22\bf\"\b29\bf\0180\bf\8f\fc;\bf\e3\c5-\bf\bd>>\bf%L+\bf\93x@\bf\e3\ca(\bf\f7\a9B\bf:B&\bf\d1\d2D\bfF\b2#\bf\n\f3F\bf$\1b!\bf\88\nI\bf\f1|\1e\bf4\19K\bf\ca\d7\1b\bf\f8\1eM\bf\cd+\19\bf\bd\1bO\bf\18y\16\bfl\0fQ\bf\ca\bf\13\bf\ef\f9R\bf\00\00\11\bf1\dbT\bf\da9\0e\bf\1d\b3V\bfwm\0b\bf\9e\81X\bf\f6\9a\08\bf\a0FZ\bfw\c2\05\bf\0f\02\\\bf\1b\e4\02\bf\d7\b3]\bf\00\00\00\bf\e6[_\bf\90,\fa\be(\fa`\bf\'N\f4\be\8d\8eb\bf\07e\ee\be\01\19d\bfqq\e8\bet\99e\bf\aas\e2\be\d4\0fg\bf\f3k\dc\be\12|h\bf\92Z\d6\be\1e\dei\bf\c9?\d0\be\e75k\bf\de\1b\ca\be^\83l\bf\15\ef\c3\bev\c6m\bf\b4\b9\bd\be!\ffn\bf\01|\b7\beO-p\bfA6\b1\be\f4Pq\bf\bc\e8\aa\be\03jr\bf\b7\93\a4\beqxs\bfz7\9e\be0|t\bfL\d4\97\be6uu\bfuj\91\bewcv\bf>\fa\8a\be\eaFw\bf\ee\83\84\be\84\1fx\bf\9c\0f|\be<\edx\bfM\0co\be\t\b0y\bf\82\fea\be\e2gz\bf\cd\e6T\be\be\14{\bf\c2\c5G\be\98\b6{\bf\f3\9b:\begM|\bf\f5i-\be%\d9|\bf\\0 \be\cbY}\bf\bb\ef\12\beU\cf}\bf\a8\a8\05\be\bc9~\bfs\b7\f0\bd\fd\98~\bf\04\13\d6\bd\12\ed~\bf3e\bb\bd\f95\7f\bf*\af\a0\bd\afs\7f\bf\13\f2\85\bd/\a6\7f\bf:^V\bdy\cd\7f\bf\e7\ce \bd\8b\e9\7f\bf\nq\d6\bcc\fa\7f\bf\bfuV\bc\00\00\80\bf\000\0d\a5c\fa\7f\bf\bfuV<\8b\e9\7f\bf\nq\d6<y\cd\7f\bf\e7\ce =/\a6\7f\bf:^V=\afs\7f\bf\13\f2\85=\f95\7f\bf*\af\a0=\12\ed~\bf3e\bb=\fd\98~\bf\04\13\d6=\bc9~\bfs\b7\f0=U\cf}\bf\a8\a8\05>\cbY}\bf\bb\ef\12>%\d9|\bf\\0 >gM|\bf\f5i->\98\b6{\bf\f3\9b:>\be\14{\bf\c2\c5G>\e2gz\bf\cd\e6T>\t\b0y\bf\82\fea><\edx\bfM\0co>\84\1fx\bf\9c\0f|>\eaFw\bf\ee\83\84>wcv\bf>\fa\8a>6uu\bfuj\91>0|t\bfL\d4\97>qxs\bfz7\9e>\03jr\bf\b7\93\a4>\f4Pq\bf\bc\e8\aa>O-p\bfA6\b1>!\ffn\bf\01|\b7>v\c6m\bf\b4\b9\bd>^\83l\bf\15\ef\c3>\e75k\bf\de\1b\ca>\1e\dei\bf\c9?\d0>\12|h\bf\92Z\d6>\d4\0fg\bf\f3k\dc>t\99e\bf\aas\e2>\01\19d\bfqq\e8>\8d\8eb\bf\07e\ee>(\fa`\bf\'N\f4>\e6[_\bf\90,\fa>\d7\b3]\bf\00\00\00?\0f\02\\\bf\1b\e4\02?\a0FZ\bfw\c2\05?\9e\81X\bf\f6\9a\08?\1d\b3V\bfwm\0b?1\dbT\bf\da9\0e?\ef\f9R\bf\00\00\11?l\0fQ\bf\ca\bf\13?\bd\1bO\bf\18y\16?\f8\1eM\bf\cd+\19?4\19K\bf\ca\d7\1b?\88\nI\bf\f1|\1e?\n\f3F\bf$\1b!?\d1\d2D\bfF\b2#?\f7\a9B\bf:B&?\93x@\bf\e3\ca(?\bd>>\bf%L+?\8f\fc;\bf\e3\c5-?\"\b29\bf\0180?\90_7\bfe\a22?\f3\045\bf\f3\045?e\a22\bf\90_7?\0180\bf\"\b29?\e3\c5-\bf\8f\fc;?%L+\bf\bd>>?\e3\ca(\bf\93x@?:B&\bf\f7\a9B?F\b2#\bf\d1\d2D?$\1b!\bf\n\f3F?\f1|\1e\bf\88\nI?\ca\d7\1b\bf4\19K?\cd+\19\bf\f8\1eM?\18y\16\bf\bd\1bO?\ca\bf\13\bfl\0fQ?\00\00\11\bf\ef\f9R?\da9\0e\bf1\dbT?wm\0b\bf\1d\b3V?\f6\9a\08\bf\9e\81X?w\c2\05\bf\a0FZ?\1b\e4\02\bf\0f\02\\?\00\00\00\bf\d7\b3]?\90,\fa\be\e6[_?\'N\f4\be(\fa`?\07e\ee\be\8d\8eb?qq\e8\be\01\19d?\aas\e2\bet\99e?\f3k\dc\be\d4\0fg?\92Z\d6\be\12|h?\c9?\d0\be\1e\dei?\de\1b\ca\be\e75k?\15\ef\c3\be^\83l?\b4\b9\bd\bev\c6m?\01|\b7\be!\ffn?A6\b1\beO-p?\bc\e8\aa\be\f4Pq?\b7\93\a4\be\03jr?z7\9e\beqxs?L\d4\97\be0|t?uj\91\be6uu?>\fa\8a\bewcv?\ee\83\84\be\eaFw?\9c\0f|\be\84\1fx?M\0co\be<\edx?\82\fea\be\t\b0y?\cd\e6T\be\e2gz?\c2\c5G\be\be\14{?\f3\9b:\be\98\b6{?\f5i-\begM|?\\0 \be%\d9|?\bb\ef\12\be\cbY}?\a8\a8\05\beU\cf}?s\b7\f0\bd\bc9~?\04\13\d6\bd\fd\98~?3e\bb\bd\12\ed~?*\af\a0\bd\f95\7f?\13\f2\85\bd\afs\7f?:^V\bd/\a6\7f?\e7\ce \bdy\cd\7f?\nq\d6\bc\8b\e9\7f?\bfuV\bcc\fa\7f?\00\c8S\a5\00\00\80?\bfuV<c\fa\7f?\nq\d6<\8b\e9\7f?\e7\ce =y\cd\7f?:^V=/\a6\7f?\13\f2\85=\afs\7f?*\af\a0=\f95\7f?3e\bb=\12\ed~?\04\13\d6=\fd\98~?s\b7\f0=\bc9~?\a8\a8\05>U\cf}?\bb\ef\12>\cbY}?\\0 >%\d9|?\f5i->gM|?\f3\9b:>\98\b6{?\c2\c5G>\be\14{?\cd\e6T>\e2gz?\82\fea>\t\b0y?M\0co><\edx?\9c\0f|>\84\1fx?\ee\83\84>\eaFw?>\fa\8a>wcv?uj\91>6uu?L\d4\97>0|t?z7\9e>qxs?\b7\93\a4>\03jr?\bc\e8\aa>\f4Pq?A6\b1>O-p?\01|\b7>!\ffn?\b4\b9\bd>v\c6m?\15\ef\c3>^\83l?\de\1b\ca>\e75k?\c9?\d0>\1e\dei?\92Z\d6>\12|h?\f3k\dc>\d4\0fg?\aas\e2>t\99e?qq\e8>\01\19d?\07e\ee>\8d\8eb?\'N\f4>(\fa`?\90,\fa>\e6[_?\00\00\00?\d7\b3]?\1b\e4\02?\0f\02\\?w\c2\05?\a0FZ?\f6\9a\08?\9e\81X?wm\0b?\1d\b3V?\da9\0e?1\dbT?\00\00\11?\ef\f9R?\ca\bf\13?l\0fQ?\18y\16?\bd\1bO?\cd+\19?\f8\1eM?\ca\d7\1b?4\19K?\f1|\1e?\88\nI?$\1b!?\n\f3F?F\b2#?\d1\d2D?:B&?\f7\a9B?\e3\ca(?\93x@?%L+?\bd>>?\e3\c5-?\8f\fc;?\0180?\"\b29?e\a22?\90_7?\f3\045?\f3\045?\90_7?e\a22?\"\b29?\0180?\8f\fc;?\e3\c5-?\bd>>?%L+?\93x@?\e3\ca(?\f7\a9B?:B&?\d1\d2D?F\b2#?\n\f3F?$\1b!?\88\nI?\f1|\1e?4\19K?\ca\d7\1b?\f8\1eM?\cd+\19?\bd\1bO?\18y\16?l\0fQ?\ca\bf\13?\ef\f9R?\00\00\11?1\dbT?\da9\0e?\1d\b3V?wm\0b?\9e\81X?\f6\9a\08?\a0FZ?w\c2\05?\0f\02\\?\1b\e4\02?\d7\b3]?\00\00\00?\e6[_?\90,\fa>(\fa`?\'N\f4>\8d\8eb?\07e\ee>\01\19d?qq\e8>t\99e?\aas\e2>\d4\0fg?\f3k\dc>\12|h?\92Z\d6>\1e\dei?\c9?\d0>\e75k?\de\1b\ca>^\83l?\15\ef\c3>v\c6m?\b4\b9\bd>!\ffn?\01|\b7>O-p?A6\b1>\f4Pq?\bc\e8\aa>\03jr?\b7\93\a4>qxs?z7\9e>0|t?L\d4\97>6uu?uj\91>wcv?>\fa\8a>\eaFw?\ee\83\84>\84\1fx?\9c\0f|><\edx?M\0co>\t\b0y?\82\fea>\e2gz?\cd\e6T>\be\14{?\c2\c5G>\98\b6{?\f3\9b:>gM|?\f5i->%\d9|?\\0 >\cbY}?\bb\ef\12>U\cf}?\a8\a8\05>\bc9~?s\b7\f0=\fd\98~?\04\13\d6=\12\ed~?3e\bb=\f95\7f?*\af\a0=\afs\7f?\13\f2\85=/\a6\7f?:^V=y\cd\7f?\e7\ce =\8b\e9\7f?\nq\d6<c\fa\7f?\bfuV<\00\00\18\000\00H\00`\00\08\00 \008\00P\00h\00\10\00(\00@\00X\00p\00\04\00\1c\004\00L\00d\00\0c\00$\00<\00T\00l\00\14\00,\00D\00\\\00t\00\01\00\19\001\00I\00a\00\t\00!\009\00Q\00i\00\11\00)\00A\00Y\00q\00\05\00\1d\005\00M\00e\00\0d\00%\00=\00U\00m\00\15\00-\00E\00]\00u\00\02\00\1a\002\00J\00b\00\n\00\"\00:\00R\00j\00\12\00*\00B\00Z\00r\00\06\00\1e\006\00N\00f\00\0e\00&\00>\00V\00n\00\16\00.\00F\00^\00v\00\03\00\1b\003\00K\00c\00\0b\00#\00;\00S\00k\00\13\00+\00C\00[\00s\00\07\00\1f\007\00O\00g\00\0f\00\'\00?\00W\00o\00\17\00/\00G\00_\00w\00\00\000\00`\00\90\00\c0\00\10\00@\00p\00\a0\00\d0\00 \00P\00\80\00\b0\00\e0\00\04\004\00d\00\94\00\c4\00\14\00D\00t\00\a4\00\d4\00$\00T\00\84\00\b4\00\e4\00\08\008\00h\00\98\00\c8\00\18\00H\00x\00\a8\00\d8\00(\00X\00\88\00\b8\00\e8\00\0c\00<\00l\00\9c\00\cc\00\1c\00L\00|\00\ac\00\dc\00,\00\\\00\8c\00\bc\00\ec\00\01\001\00a\00\91\00\c1\00\11\00A\00q\00\a1\00\d1\00!\00Q\00\81\00\b1\00\e1\00\05\005\00e\00\95\00\c5\00\15\00E\00u\00\a5\00\d5\00%\00U\00\85\00\b5\00\e5\00\t\009\00i\00\99\00\c9\00\19\00I\00y\00\a9\00\d9\00)\00Y\00\89\00\b9\00\e9\00\0d\00=\00m\00\9d\00\cd\00\1d\00M\00}\00\ad\00\dd\00-\00]\00\8d\00\bd\00\ed\00\02\002\00b\00\92\00\c2\00\12\00B\00r\00\a2\00\d2\00\"\00R\00\82\00\b2\00\e2\00\06\006\00f\00\96\00\c6\00\16\00F\00v\00\a6\00\d6\00&\00V\00\86\00\b6\00\e6\00\n\00:\00j\00\9a\00\ca\00\1a\00J\00z\00\aa\00\da\00*\00Z\00\8a\00\ba\00\ea\00\0e\00>\00n\00\9e\00\ce\00\1e\00N\00~\00\ae\00\de\00.\00^\00\8e\00\be\00\ee\00\03\003\00c\00\93\00\c3\00\13\00C\00s\00\a3\00\d3\00#\00S\00\83\00\b3\00\e3\00\07\007\00g\00\97\00\c7\00\17\00G\00w\00\a7\00\d7\00\'\00W\00\87\00\b7\00\e7\00\0b\00;\00k\00\9b\00\cb\00\1b\00K\00{\00\ab\00\db\00+\00[\00\8b\00\bb\00\eb\00\0f\00?\00o\00\9f\00\cf\00\1f\00O\00\7f\00\af\00\df\00/\00_\00\8f\00\bf\00\ef\00\00\00`\00\c0\00 \01\80\01 \00\80\00\e0\00@\01\a0\01@\00\a0\00\00\01`\01\c0\01\08\00h\00\c8\00(\01\88\01(\00\88\00\e8\00H\01\a8\01H\00\a8\00\08\01h\01\c8\01\10\00p\00\d0\000\01\90\010\00\90\00\f0\00P\01\b0\01P\00\b0\00\10\01p\01\d0\01\18\00x\00\d8\008\01\98\018\00\98\00\f8\00X\01\b8\01X\00\b8\00\18\01x\01\d8\01\04\00d\00\c4\00$\01\84\01$\00\84\00\e4\00D\01\a4\01D\00\a4\00\04\01d\01\c4\01\0c\00l\00\cc\00,\01\8c\01,\00\8c\00\ec\00L\01\ac\01L\00\ac\00\0c\01l\01\cc\01\14\00t\00\d4\004\01\94\014\00\94\00\f4\00T\01\b4\01T\00\b4\00\14\01t\01\d4\01\1c\00|\00\dc\00<\01\9c\01<\00\9c\00\fc\00\\\01\bc\01\\\00\bc\00\1c\01|\01\dc\01\01\00a\00\c1\00!\01\81\01!\00\81\00\e1\00A\01\a1\01A\00\a1\00\01\01a\01\c1\01\t\00i\00\c9\00)\01\89\01)\00\89\00\e9\00I\01\a9\01I\00\a9\00\t\01i\01\c9\01\11\00q\00\d1\001\01\91\011\00\91\00\f1\00Q\01\b1\01Q\00\b1\00\11\01q\01\d1\01\19\00y\00\d9\009\01\99\019\00\99\00\f9\00Y\01\b9\01Y\00\b9\00\19\01y\01\d9\01\05\00e\00\c5\00%\01\85\01%\00\85\00\e5\00E\01\a5\01E\00\a5\00\05\01e\01\c5\01\0d\00m\00\cd\00-\01\8d\01-\00\8d\00\ed\00M\01\ad\01M\00\ad\00\0d\01m\01\cd\01\15\00u\00\d5\005\01\95\015\00\95\00\f5\00U\01\b5\01U\00\b5\00\15\01u\01\d5\01\1d\00}\00\dd\00=\01\9d\01=\00\9d\00\fd\00]\01\bd\01]\00\bd\00\1d\01}\01\dd\01\02\00b\00\c2\00\"\01\82\01\"\00\82\00\e2\00B\01\a2\01B\00\a2\00\02\01b\01\c2\01\n\00j\00\ca\00*\01\8a\01*\00\8a\00\ea\00J\01\aa\01J\00\aa\00\n\01j\01\ca\01\12\00r\00\d2\002\01\92\012\00\92\00\f2\00R\01\b2\01R\00\b2\00\12\01r\01\d2\01\1a\00z\00\da\00:\01\9a\01:\00\9a\00\fa\00Z\01\ba\01Z\00\ba\00\1a\01z\01\da\01\06\00f\00\c6\00&\01\86\01&\00\86\00\e6\00F\01\a6\01F\00\a6\00\06\01f\01\c6\01\0e\00n\00\ce\00.\01\8e\01.\00\8e\00\ee\00N\01\ae\01N\00\ae\00\0e\01n\01\ce\01\16\00v\00\d6\006\01\96\016\00\96\00\f6\00V\01\b6\01V\00\b6\00\16\01v\01\d6\01\1e\00~\00\de\00>\01\9e\01>\00\9e\00\fe\00^\01\be\01^\00\be\00\1e\01~\01\de\01\03\00c\00\c3\00#\01\83\01#\00\83\00\e3\00C\01\a3\01C\00\a3\00\03\01c\01\c3\01\0b\00k\00\cb\00+\01\8b\01+\00\8b\00\eb\00K\01\ab\01K\00\ab\00\0b\01k\01\cb\01\13\00s\00\d3\003\01\93\013\00\93\00\f3\00S\01\b3\01S\00\b3\00\13\01s\01\d3\01\1b\00{\00\db\00;\01\9b\01;\00\9b\00\fb\00[\01\bb\01[\00\bb\00\1b\01{\01\db\01\07\00g\00\c7\00\'\01\87\01\'\00\87\00\e7\00G\01\a7\01G\00\a7\00\07\01g\01\c7\01\0f\00o\00\cf\00/\01\8f\01/\00\8f\00\ef\00O\01\af\01O\00\af\00\0f\01o\01\cf\01\17\00w\00\d7\007\01\97\017\00\97\00\f7\00W\01\b7\01W\00\b7\00\17\01w\01\d7\01\1f\00\7f\00\df\00?\01\9f\01?\00\9f\00\ff\00_\01\bf\01_\00\bf\00\1f\01\7f\01\df\01")
 (data (i32.const 21256) "\03\00\00\00\02\00\00\00\03\00\00\00\02\00\00\00\05\00\00\00\02\00\00\00\03\00\00\00\02\00\00\00\03\00\00\00\02\00\00\00\05\00\00\00\02\00\00\00\03\00\00\00\02\00\00\00\00\00\ce@\00\00\c8@\00\00\b8@\00\00\aa@\00\00\a2@\00\00\9a@\00\00\90@\00\00\8c@\00\00\9c@\00\00\96@\00\00\92@\00\00\8e@\00\00\9c@\00\00\94@\00\00\8a@\00\00\90@\00\00\8c@\00\00\94@\00\00\98@\00\00\8e@\00\00p@\00\00p@\00\00p@\00\00p@\00\00p@")
 (data (i32.const 21424) "H\7fA\81B\80A\80@\80>\80@\80@\80\\N\\O\\NZOt)s(r(\84\1a\84\1a\91\11\a1\0c\b0\n\b1\0b\18\b30\8a6\876\845\868\857\847\84=rF`JXKXWJYB[Cd;l2x(z%a+N2SNTQXKVJWGZI]J]Jm(r$u\"u\"\8f\11\91\12\92\13\a2\0c\a5\n\b2\07\bd\06\be\08\b1\t\17\b26s?fBbEcJYG[I[NYVP\\B]@f;g<h<u4{,\8a#\85\1fa&M-=Z]<i*k)n-t&q&p&|\1a\84\1b\88\13\8c\14\9b\0e\9f\10\9e\12\aa\0d\b1\n\bb\08\c0\06\af\t\9f\n\15\b2;nGVKUTS[BXIWH\\KbHi:k6s4r7p8\813\84(\96!\8c\1db#M**y`Bl+o(u,{ x$w!\7f!\86\"\8b\15\93\17\98\14\9e\19\9a\1a\a6\15\ad\10\b8\0d\b8\n\96\0d\8b\0f\16\b2?rJRTS\\Rg>`H`CeIkHq7v4}4v4u7\871\89\'\9d \91\1da!M(\00\00f?\00\00L?\00\00&?\00\00\00?\00\86k?\00\14.?\00p\bd>\00\d0L>\00\08\0d\10\13\15\17\18\1a\1b\1c\1d\1e\1f  !\"\"#$$%%")
 (data (i32.const 21824) "\e0p,\0f\03\02\01\00\fe\ed\c0\84F\17\04\00\ff\fc\e2\9b=\0b\02")
 (data (i32.const 21856) "\fa\f5\ea\cbG2*&#!\1f\1d\1c\1b\1a\19\18\17\16\15\14\13\12\11\10\0f\0e\0d\0c\0b\n\t\08\07\06\05\04\03\02\01")
 (data (i32.const 21904) "\c7\a5\90|m`TG=3* \17\0f\08\00\f1\e1\d3\c7\bb\af\a4\99\8e\84{ri`XPH@92,&!\1d\18\14\10\0c\t\05\02\00E]sv\83\8a\8d\8a\96\96\9b\96\9b\a0\a6\a0\83\80\86\8d\8d\8d\91\91\91\96\9b\9b\9b\9b\a0\a0\a0\a0\a6\a6\ad\ad\b6\c0\b6\c0\c0\c0\cd\c0\cd\e0\04\06\18\07\05\00\00\02\00\00\0c\1c)\0d\fc\f7\0f*\19\0e\01\fe>)\f7\f6%A\fc\03\fa\04B\07\f8\10\0e&\fd!")
 (data (i32.const 22048) "\0d\16\'\17\0c\ff$@\1b\fa\f9\n7+\11\01\01\08\01\01\06\f5J5\f7\f47L\f4\08\fd\03]\1b\fc\1a\';\03\f8\02\00M\0b\t\f8\16,\fa\07(\t\1a\03\t\f9\14e\f9\04\03\f8*\1a\00\f1!D\02\17\fe7.\fe\0f\03\ff\15\10)\fa\1b=\'\05\f5*X\04\01\fe<A\06\fc\ff\fbI8\01\f7\13^\1d\f7\00\0cc\06\04\08\edf.\f3\03\02\0d\03\02\t\ebTH\ee\f5.h\ea\08\12&0\17\00\f0FS\eb\0b\05\f5u\16\f8\fa\17u\f4\03\03\f8_\1c\04\f6\0fM<\f1\ff\04|\02\fc\03&T\18\e7\02\0d*\0d\1f\15\fc8.\ff\ff#O\f3\13\f9AX\f7\f2\14\04Q1\e3\14\00K\03\ef\05\f7,\\\f8\01\fd\16E\1f\fa_)\f4\05\'C\10\fc\01\00\fax7\dc\f3,z\04\e8Q\05\0b\03\07\02\00\t\nXmxv\0cqsuwc;Wo?opP~|}|\81y~\17\84\7f\7f\7f~\7fz\85\82\86evw\91~V|x{w\aa\adkm\0c#<Sl\84\9d\b4\ce\e4\0f 7Me}\97\af\c9\e1\13*BYr\89\a2\b8\d1\e6\0c\192Hax\93\ac\c8\df\1a,EZr\87\9f\b4\cd\e1\0d\165Pj\82\9c\b4\cd\e4\0f\19,@Zs\8e\a8\c4\de\13\18>Rdx\91\a8\be\d6\16\1f2Ogx\97\aa\cb\e3\15\1d-Aj|\96\ab\c4\e0\1e1Kay\8e\a5\ba\d1\e5\13\194F]t\8f\a6\c0\db\1a\">Kav\91\a7\c2\d9\19!8F[q\8f\a5\c4\df\15\"3Hau\91\ab\c4\de\14\1d2CZu\90\a8\c5\dd\16\1f0B_u\92\a8\c4\de\18!3Mt\86\9e\b4\c8\e0\15\1cFWj|\95\aa\c2\d9\1a!5@Su\98\ad\cc\e1\1b\"A_l\81\9b\ae\d2\e1\14\1aHcq\83\9a\b0\c8\db\"+=N]r\9b\b1\cd\e5\17\1d6a|\8a\a3\b3\d1\e5\1e&8Yv\81\9e\b2\c8\e7\15\1d1?Uo\8e\a3\c1\de\1b0Mg\85\9e\b3\c4\d7\e8\1d/Jc|\97\b0\c6\dc\ed!*=L]y\9b\ae\cf\e1\1d5Wp\88\9a\aa\bc\d0\e3\18\1e4T\83\96\a6\ba\cb\e5%0@Thv\9c\b1\c9\e6Q\0b\n\t\n\t\n\t\ef\08\ef\08\n\t\fc\08\17\t\ef\08H\0b\14\nZ\t?\t\n\t\e2\08\e2\08\e2\08\e2\08\92\08\b7\t$\t$\t\n\t\n\t\n\t$\t$\t?\t2\t\90\0c\ce\n$\t$\t\n\t\e2\08\ad\08\9f\08\d5\08\92\08\9c\t\aa\t?\tZ\tZ\tZ\tZ\t?\tg\t\n\t\97\0d\f0\0bO\08\9f\08\e2\08\e2\08\e2\08\ef\08\n\t\d5\08\d2\0cE\0c\14\nZ\t\c7\08\ad\08\9f\08\92\08\92\08B\08\00\10\05\0f\ad\08<\n<\ng\t\n\tZ\t?\t\1a\08j\0c\ac\0c?\t\ad\08\f9\t\82\t$\t\n\tw\08\ad\08\n\0d\a0\0d\a6\n\92\08\d5\08\9c\t2\t?\t\9f\085\082\tt\t\17\t?\tZ\tt\tt\tt\t\9c\t?\t\c3\0e-\0e\82\t\df\t?\t\e2\08\e2\08\fc\08\9f\08\00\08\b6\0c\99\0c\99\n\1e\0b\8f\t\17\t\fc\08\fc\08\e2\08O\08\bf\0c\e4\0c\c1\n\f6\n\8f\t\d5\08\d5\08\c7\08O\085\089\0b\a5\0bI\n?\tg\t2\t\92\08\c7\08\c7\08B\08\99\0c}\0cI\n\14\n\e2\08\85\08\c7\08\ad\08\ad\08]\08j\0c\ee\0c\b4\ng\t\e2\08\e2\08\e2\08\ef\08\92\08B\08E\0c\c8\0c\9c\t\0d\08\ef\08\c4\t?\t\b7\t\82\t\85\08\b3\0d\d2\0c\n\t\8c\nW\n\aa\t?\tZ\t$\tO\08_\0d\cf\0d\de\0b\f0\0b\fc\08\9e\07\ad\08\e2\08\e2\08\e2\08L\0d&\0d\'\08\7f\n9\0b2\tt\t\e2\08\aa\t\ec\t\b0\0e\a0\0d\9e\07d\nQ\0b\df\tZ\t?\t\9c\t\d5\08\d4\0b\c8\0c\b4\nH\0b\b4\nj\08O\08\ef\08\ba\08\c7\08o\0eI\0e\e9\07\b1\07d\n\8c\n\14\n\c4\t\17\t?\t\87\0cU\0d2\t\1a\08H\0bH\0b$\t\b7\t\c7\08w\08\n\0d&\0d\1e\0b\dc\n\17\tj\08\e2\08\ef\08B\08\0d\08\17\t\fc\08\85\08w\08\85\08?\tI\n\8c\n\8c\n\f9\tg\t\82\t\ad\08\d5\08\ad\08\ad\08$\tt\t/\n\8c\n\de\0b\ac\0c\f6\nH\0b\aa\t\1a\08\fc\08\n\t2\tL\t\ad\08j\08O\08\ef\08\c4\t\e9\n\e9\n<\n\14\n?\t\\\0e\81\0e\ba\08.\07\85\08\c1\n\a6\nq\n\d1\t\9f\08\e9\nX\0c\a6\n\f9\t\1e\0b\d1\t\85\08Z\t\ad\08\85\08\d4\b2\94\81l`UROM=;98310-*)(&$\"\1f\1e\15\0c\n\03\01\00\ff\f5\f4\ec\e9\e1\d9\cb\be\b0\af\a1\95\88}rf[QG<4+#\1c\14\13\12\0c\0b\05\00\b3\8a\8c\94\97\95\99\97\a3tCR;\\HdY\\")
 (data (i32.const 23392) "\10\00\00\00\00cB$$\"$\"\"\"\"SE$4\"tfFDD\b0fDD\"AUDT$t\8d\98\8b\aa\84\bb\b8\d8\89\84\f9\a8\b9\8bhfdDD\b2\da\b9\b9\aa\f4\d8\bb\bb\aa\f4\bb\bb\db\8ag\9b\b8\b9\89t\b7\9b\98\88\84\d9\b8\b8\aa\a4\d9\ab\9b\8b\f4\a9\b8\b9\aa\a4\d8\df\da\8a\d6\8f\bc\da\a8\f4\8d\88\9b\aa\a8\8a\dc\db\8b\a4\db\ca\d8\89\a8\ba\f6\b9\8bt\b9\db\b9\8add\86df\"DDdD\a8\cb\dd\da\a8\a7\9a\88hF\a4\f6\ab\89\8b\89\9b\da\db\8b\ff\fe\fd\ee\0e\03\02\01\00\ff\fe\fc\da#\03\02\01\00\ff\fe\fa\d0;\04\02\01\00\ff\fe\f6\c2G\n\02\01\00\ff\fc\ec\b7R\08\02\01\00\ff\fc\eb\b4Z\11\02\01\00\ff\f8\e0\aba\1e\04\01\00\ff\fe\ec\ad_%\07\01")
 (data (i32.const 23632) "\ff\ff\ff\83\06\91\ff\ff\ff\ff\ff\ec]\0f`\ff\ff\ff\ff\ff\c2S\19G\dd\ff\ff\ff\ff\a2I\"B\a2\ff\ff\ff\d2~I+9\ad\ff\ff\ff\c9}G0:\82\ff\ff\ff\a6nI9>h\d2\ff\ff\fb{A7Dd\ab\ff")
 (data (i32.const 23712) "\fa\00\03\00\06\00\03\00\03\00\03\00\04\00\03\00\03\00\03\00\cd\01")
 (data (i32.const 23744) "\07\17&6EUdt\83\93\a2\b2\c1\d0\df\ef\0d\19)7ESbp\7f\8e\9d\ab\bb\cb\dc\ec\0f\15\"3=N\\j~\88\98\a7\b9\cd\e1\f0\n\15$2?O_n~\8d\9d\ad\bd\cd\dd\ed\11\14%3;NYk{\86\96\a4\b8\cd\e0\f0\n\0f 3CQ`p\81\8e\9e\ad\bd\cc\dc\ec\08\15%3AObq~\8a\9b\a8\b3\c0\d1\da\0c\0f\"7?NWlv\83\94\a7\b9\cb\db\ec\10\13 $8O[lv\88\9a\ab\ba\cc\dc\ed\0b\1c+:JYix\87\96\a5\b4\c4\d3\e2\f1\06\10!.<K\\k{\89\9c\a9\b9\c7\d6\e1\0b\13\1e,9JYiy\87\98\a9\ba\ca\da\ea\0c\13\1d.9GXdx\84\94\a5\b6\c7\d8\e9\11\17#.8M\\j{\86\98\a7\b9\cc\de\ed\0e\11-5?KYks\84\97\ab\bc\ce\dd\f0\t\10\1d(8GXgw\89\9a\ab\bd\cd\de\ed\10\13$09LWiv\84\96\a7\b9\ca\da\ec\0c\11\1d6GQ^h~\88\95\a4\b6\c9\dd\ed\0f\1c/>Oas\81\8e\9b\a8\b4\c2\d0\df\ee\08\0e\1e->N^o\7f\8f\9f\af\c0\cf\df\ef\11\1e1>O\\kw\84\91\a0\ae\be\cc\dc\eb\0e\13$-=L[ly\8a\9a\ac\bd\cd\de\ee\0c\12\1f-<L[k{\8a\9a\ab\bb\cc\dd\ec\0d\11\1f+5FSgr\83\95\a7\b9\cb\dc\ed\11\16#*:N]n}\8b\9b\aa\bc\ce\e0\f0\08\0f\"2CScs\83\92\a2\b2\c1\d1\e0\ef\0d\10)BIV_o\80\89\96\a3\b7\ce\e1\f1\11\19%4?K\\fw\84\90\a0\af\bf\d4\e7\13\1f1ASdu\85\93\a1\ae\bb\c8\d5\e3\f2\12\1f4DXgu~\8a\95\a3\b1\c0\cf\df\ef\10\1d/=LZjw\85\93\a1\b0\c1\d1\e0\f0\0f\15#2=IVanw\81\8d\af\c6\da\edI\0em\0bm\0bm\0bm\0bm\0bm\0bm\0bm\0bm\0bm\0bm\0b\93\0b\93\0bm\0b\1e\0b\90\0c\0d\0c\9c\0b\f0\0b\f0\0b\c2\0b\c2\0b\c2\0b\93\0b\93\0b\c2\0b\9c\0bH\0b\1e\0b\1e\0b\a6\nP\0f\ae\0f\a5\0b\87\0c\87\0cv\0b\f0\0b\1e\0b2\0c\ac\0cm\0b\1e\0b<\n\f9\t\dc\nm\0b\bc\0d}\0c\c2\0b\1f\0c\cb\0bH\0bm\0bm\0bm\0bm\0bH\0bH\0bH\0bH\0bH\0b\c1\n\be\13\be\13v\0b\f5\0d9\0d\f0\0b\0d\0c\e9\nX\0cX\0c\9c\0b\1e\0b\d1\t\ec\t\c1\nH\0bL\115\10\8c\n\c1\n\9c\0b\c2\0bm\0b\1e\0b\a5\0b\cb\0bm\0bm\0bm\0bm\0bH\0b\a6\n$\0e\cb\0b\9c\0b\f0\0b\f0\0b9\0b\f6\n\f0\0b\90\0c\e7\0b\a5\0b\db\0c\db\0c\a5\0b\ee\0c\af\0bk\14\96\13\ec\t\n\0d\c6\0d9\0d}\0c\16\0c0\0d\a5\0b\8c\nW\n\7f\n\e9\n\1e\0bq\n\d9\136\14\07\12L\11\9c\tQ\0b\e7\0b\87\0ca\0c\7f\n\b4\nH\0b\1e\0b\e9\n\1e\0b\8c\n2\0cH\0b\93\0bm\0bm\0bm\0bm\0b\93\0b\93\0b\93\0b\93\0bm\0bm\0b\93\0b\93\0b\93\0bj\10\87\0c\a5\0b\1f\0c\c2\0bH\0bH\0bm\0b\9c\0b9\0bd\0b\cb\0b\9c\0b\c2\0b}\0c9\0b\b0\0e\b0\0e\ac\0c\1f\0c\a5\0bH\0bm\0bH\0b\9c\0bv\0b\e9\n\e9\n\1e\0bH\0bH\0bd\n\0e\0f\ae\0f\87\0c2\0c\ac\0cv\0b\e7\0b\93\0b\93\0b\0d\0c\1e\0b\e9\n\e9\n\e9\n\e9\n\14\n\05\0f\f0\0f\1d\0d\bc\0d\16\0c\b4\n\c2\0bv\0b2\0c\0d\0c\1e\0b\1e\0bW\nW\n\1e\0b\f6\n\1b\14\1e\13\99\0c\05\0fq\0da\0cQ\0bU\0d{\0d\8c\n\14\nq\n\b4\n\1e\0b\f6\n\c1\n\0d\10\cd\0e\db\0cX\0cm\0bH\0bH\0bm\0b\e9\n\b4\n\e9\n\b4\n\e9\n\1e\0bH\0b\f6\n\d9\13\be\13\e7\0b\d9\0d\ac\0c\f0\0b\0d\0c\80\0b\1f\0cQ\0b\b4\n\b4\n\b4\n\1e\0b\e9\n<\n\d5\10\d5\10,\0b\df\t\87\0c0\0d0\0d\03\0c\03\0c0\0d\f0\0b\1e\0bW\n\14\n\a6\n\c1\n\f0\0bd\0b\f6\nH\0b\b4\n\7f\nQ\0b\1f\0cN\0cN\0c\90\0ca\0c\f0\0b\c2\0b\93\0b\1e\0b\17\11*\0fm\0bH\0b\1e\0bH\0b\1e\0b\1e\0bH\0bH\0bH\0b\1e\0bH\0bm\0bH\0b\1e\0b\a5\0bd\0bd\0b\a5\0b\a5\0b\f0\0b2\0c\90\0cN\0c\f0\0b\c2\0b\9c\0b\9c\0b\9c\0bm\0b\b4\n\85\105\10\ee\0c\13\0dm\0b\93\0bH\0b\a5\0b\a5\0b\1e\0b\e9\n\b4\n\1e\0b\1e\0b\1e\0b\e9\n\f0\0f\ae\0f\1f\0c\c2\0bm\0bm\0bm\0bH\0bm\0bm\0b\1e\0b\1e\0b\1e\0b\e9\nH\0b\dc\n\07\12\df\11a\0cq\0d\87\0c\a5\0bQ\0b\de\0b2\0c\b4\n\7f\n\7f\n\7f\n\b4\n\e9\n\8c\n5\10\ad\10\cd\0eI\0e\a6\n\dc\nH\0bH\0b\c2\0b\9c\0bm\0b\1e\0b\7f\n\7f\n\e9\nH\0bw\10\e2\0d\c1\n\1e\0b\1e\0bH\0bH\0bH\0bm\0bm\0bH\0bm\0bm\0bm\0b\93\0bH\0b6\149\13\d5\08h\0d\cd\0e\97\0d\13\0d\1e\0b\ee\0c\97\0dN\0cQ\0b\9c\t\b7\t\c1\nm\0b{\0de\0e2\0c}\0c\1d\0d\e7\0b\87\0c\87\0c\a5\0b\90\0c\0d\0cm\0bm\0b\7f\n\ec\t\82\t\a5\0b\c2\0b\e9\n\e9\n\b4\n\e9\n\1e\0b\9c\0b\f0\0b\1f\0cN\0cN\0cN\0c\1f\0c\c2\0b\c2\0b\80\0b9\0b\7f\n\a6\n\dc\n\c2\0bh\0d\d9\0d\1d\0d\ac\0c\f0\0b\c2\0b\93\0bm\0bH\0b\1e\0b\cb\0b\80\0bQ\0b\c2\0b\c2\0b\9c\0b\cb\0b\1f\0c\f0\0b\f0\0b\c2\0bH\0b\1e\0bm\0bm\0bH\0bP\0f\7f\0f\c2\0b}\0c\1d\0d\90\0c\db\0c\db\0c\97\0dx\0eq\0d\a6\n\85\08\9c\t\14\n/\n\e1\cc\c9\b8\b7\af\9e\9a\99\87wsqnmcb_OD420-+ \1f\1b\12\n\03\00\ff\fb\eb\e6\d4\c9\c4\b6\a7\a6\a3\97\8a|nhZNLFE9-\"\18\15\0b\06\05\04\03\00\af\94\a0\b0\b2\ad\ae\a4\b1\ae\c4\b6\c6\c0\b6D>B<HuUZv\88\97\8e\a0\8e\9b")
 (data (i32.const 25383) "\01dffDD$\"`\a4k\9e\b9\b4\b9\8bf@B$\"\"\00\01 \d0\8b\8d\bf\98\b9\9bh`\abh\a6fff\84\01\00\00\00\00\10\10\00PmNk\b9\8bge\d0\d4\8d\8b\ad\99{g$\00\00\00\00\00\00\010\00\00\00\00\00\00 D\87{wwgEbDgxvvfGb\86\88\9d\b8\b6\99\8b\86\d0\a8\f8K\bd\8fyk 1\"\"\"\00\11\02\d2\eb\8b{\b9\89i\86b\87h\b6d\b7\ab\86dFDFBB\"\83@\a6fD$\02\01\00\86\a6fD\"\"B\84\d4\f6\9e\8bkkWfd\db}z\89vg\84r\87\89i\abj2\"\a4\d6\8d\8f\b9\97yg\c0\"\00\00\00\00\00\01\d0mJ\bb\86\f9\9f\89fn\9avWewe\00\02\00$$BD#`\a4fd$\00\02!\a7\8a\aefdT\02\02dkxw$\c5\18\00\ff\fe\fd\f4\0c\03\02\01\00\ff\fe\fc\e0&\03\02\01\00\ff\fe\fb\d19\04\02\01\00\ff\fe\f4\c3E\04\02\01\00\ff\fb\e8\b8T\07\02\01\00\ff\fe\f0\baV\0e\02\01\00\ff\fe\ef\b2[\1e\05\01\00\ff\f8\e3\b1d\13\02\01")
 (data (i32.const 25712) "\ff\ff\ff\9c\04\9a\ff\ff\ff\ff\ff\e3f\0f\\\ff\ff\ff\ff\ff\d5S\18H\ec\ff\ff\ff\ff\96L!?\d6\ff\ff\ff\beyM+7\b9\ff\ff\ff\f5\89G+;\8b\ff\ff\ff\ff\83B2Bk\c2\ff\ff\a6tL75}\ff\ff")
 (data (i32.const 25792) "d\00\03\00(\00\03\00\03\00\03\00\05\00\0e\00\0e\00\n\00\0b\00\03\00\08\00\t\00\07\00\03\00[\01")
 (data (i32.const 25840) "\\\ca\be\d8\b6\df\9a\e2\9c\e6x\ecz\f4\cc\fc4\03\86\0b\88\13d\19f\1dJ B\'\a45\f9\f7\f6\f5\f4\ea\d2\ca\c9\c8\c5\aeR;876.\16\0c\0b\n\t\07")
 (data (i32.const 25904) "\ng\f2\0eV\cd\e4\1d\ng\f2\0euR\82\0cY\9a\04\19uR\82\0cF\111\n\ed\03b\14F\111\n\da\02\d7\07\f9\c6\ad\0f\da\02\d7\07\"\b6R\05\da\fa\a4\n\"\b6R\05\00\00\00\00F\f3.\1e+\e3K\0e\1ff\80\18\1c,\1d\n\daaH\12\ed\9c\f4\06\ec0\13\0b\e3\90\a5\04\ed\a4\1d\02\n\dfk\03")
 (data (i32.const 26016) "\fd\fa\f4\e9\d4\b6\96\83xnbUH<1( \19\13\0f\0d\0b\t\08\07\06\05\04\03\02\01\00\d2\d0\ce\cb\c7\c1\b7\a8\8ehJ4%\1b\14\0e\n\06\04\02")
 (data (i32.const 26080) "\df\c9\b7\a7\98\8a|obXOF>82,\'#\1f\1b\18\15\12\10\0e\0c\n\08\06\04\03\02\01")
 (data (i32.const 26128) "}3\1a\12\0f\0c\0b\n\t\08\07\06\05\04\03\02\01\00\c6i-\16\0f\0c\0b\n\t\08\07\06\05\04\03\02\01\00\d5\a2tS;+ \18\12\0f\0c\t\07\06\05\03\02\00\ef\bbt;\1c\10\0b\n\t\08\07\06\05\04\03\02\01\00\fa\e5\bc\87V3\1e\13\0d\n\08\06\05\04\03\02\01\00\f9\eb\d5\b9\9c\80gSB5*!\1a\15\11\0d\n\00\fe\f9\eb\ce\a4vM.\1b\10\n\07\05\04\03\02\01\00\ff\fd\f9\ef\dc\bf\9cwU9%\17\0f\n\06\04\02\00\ff\fd\fb\f6\ed\df\cb\b3\98|bK7(\1d\15\0f\00\ff\fe\fd\f7\dc\a2jC*\1c\12\0c\t\06\04\03\02")
 (data (i32.const 26320) "\1f9k\a0\cd\cd\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ffE/Co\a6\cd\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ffRJO_m\80\91\a0\ad\cd\cd\cd\e0\ff\ff\e0\ff\e0}J;Ea\8d\b6\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\adsUIL\\s\91\ad\cd\e0\e0\ff\ff\ff\ff\ff\ff\a6\86qfefkv}\8a\91\9b\a6\b6\c0\c0\cd\96\e0\b6\86eSOUax\91\ad\cd\e0\ff\ff\ff\ff\ff\ff\e0\c0\96xe\\Y]fv\86\a0\b6\c0\e0\e0\e0\ff\e0\e0\b6\9b\86vmhfjov\83\91\a0\ad\83")
 (data (i32.const 26496) "\f1\be\b2\84WJ)\0e\00\df\c1\9d\8cj9\'\12")
 (data (i32.const 26528) "\83J\8dOP\8a_h\86_c[}]L{s{")
 (data (i32.const 26560) "\80\00\d6*\00\eb\80\15\00\f4\b8H\0b\00\f8\d6\80*\07\00\f8\e1\aaP\19\05\00\fb\ec\c6~6\12\03\00\fa\ee\d3\9fR#\0f\05\00\fa\e7\cb\a8\80X5\19\06\00\fc\ee\d8\b9\94lG(\12\04\00\fd\f3\e1\c7\a6\80Z9\1f\0d\03\00\fe\f6\e9\d4\b7\93mI,\17\n\02\00\ff\fa\f0\df\c6\a6\80Z:!\10\06\01\00\ff\fb\f4\e7\d2\b5\92nK.\19\0c\05\01\00\ff\fd\f8\ee\dd\c4\a4\80\\<#\12\08\03\01\00\ff\fd\f9\f2\e5\d0\b4\92nL0\1b\0e\07\03\01")
 (data (i32.const 26720) "\81\00\cf2\00\ec\81\14\00\f5\b9H\n\00\f9\d5\81*\06\00\fa\e2\a9W\1b\04\00\fb\e9\c2\82>\14\04\00\fa\ec\cf\a0c/\11\03\00\ff\f0\d9\b6\83Q)\0b\01\00\ff\fe\e9\c9\9fk=\14\02\01\00\ff\f9\e9\ce\aa\80V2\17\07\01\00\ff\fa\ee\d9\ba\94lF\'\12\06\01\00\ff\fc\f3\e2\c8\a6\80Z8\1e\0d\04\01\00\ff\fc\f5\e7\d1\b4\92nL/\19\0b\04\01\00\ff\fd\f8\ed\db\c2\a3\80]>%\13\08\03\01\00\ff\fe\fa\f1\e2\cd\b1\91oO3\1e\0f\06\02\01")
 (data (i32.const 26880) "\81\00\cb6\00\ea\81\17\00\f5\b8I\n\00\fa\d7\81)\05\00\fc\e8\adV\18\03\00\fd\f0\c8\818\0f\02\00\fd\f4\d9\a4^&\n\01\00\fd\f5\e2\bd\84G\1b\07\01\00\fd\f6\e7\cb\9fi8\17\06\01\00\ff\f8\eb\d5\b3\85U/\13\05\01\00\ff\fe\f3\dd\c2\9fuF%\0c\02\01\00\ff\fe\f8\ea\d0\ab\80U0\16\08\02\01\00\ff\fe\fa\f0\dc\bd\95kC$\10\06\02\01\00\ff\fe\fb\f3\e3\c9\a6\80Z7\1d\0d\05\02\01\00\ff\fe\fc\f6\ea\d5\b7\93mI+\16\n\04\02\01")
 (data (i32.const 27040) "\82\00\c8:\00\e7\82\1a\00\f4\b8L\0c\00\f9\d6\82+\06\00\fc\e8\adW\18\03\00\fd\f1\cb\838\0e\02\00\fe\f6\dd\a7^#\08\01\00\fe\f9\e8\c1\82A\17\05\01\00\ff\fb\ef\d3\a2c-\0f\04\01\00\ff\fb\f3\df\ba\83J!\0b\03\01\00\ff\fc\f5\e6\ca\9ei9\18\08\02\01\00\ff\fd\f7\eb\d6\b3\84T,\13\07\02\01\00\ff\fe\fa\f0\df\c4\9fpE$\0f\06\02\01\00\ff\fe\fd\f5\e7\d1\b0\88]7\1b\0b\03\02\01\00\ff\fe\fd\fc\ef\dd\c2\9euL*\12\04\03\02\01")
 (data (i32.const 27202) "\02\05\t\0e\14\1b#,6AMZhw\87")
 (data (i32.const 27232) "\fe1CMR]c\c6\0b\12\18\1f$-\ff.BNW^h\d0\0e\15 *3B\ff^hmpsv\f85EPX_f\00\00\00\00\00\000u\00\00p\17\00\00 \d1\ff\ff \d1\ff\ff\00\0f\'4=DJOTX\\_cfiloruwz|~\81\83\85\87\89\8b\8e\8f\91\93\95\97\99\9b\9d\9e\a0\a2\a3\a5\a7\a8\aa\ab\ad\ae\b0\b1\b3\b4\b6\b7\b9\ba\bb\bd\be\c0\c1\c2\c4\c5\c7\c8\c9\cb\cc\cd\cf\d0\d1\d3\d4\d5\d7\d8\d9\db\dc\dd\df\e0\e1\e3\e4\e6\e7\e8\ea\eb\ec\ee\ef\f1\f2\f3\f5\f6\f8\f9\fa\fc\fd\ff\00\00\00\00\00\00\00\1c+4;AFJNQUWZ]_bdfikmoqstvxz{}\7f\80\82\83\85\86\88\89\8a\8c\8d\8f\90\91\93\94\95\97\98\99\9a\9c\9d\9e\9f\a0\a2\a3\a4\a5\a6\a7\a8\a9\ab\ac\ad\ae\af\b0\b1\b2\b3\b4\b5\b6\b7\b8\b9\ba\bb\bc\bc\bd\be\bf\c0\c1\c2\c3\c4\c5\c6\c7\c8\c9\ca\cb\cb\cc\cd\ce\cf\d0\d1\d2\d3\d4\d5\d6\d6\d7\d8\d9\da\db\dc\dd\de\df\e0\e0\e1\e2\e3\e4\e5\e6\e7\e8\e9\ea\eb\ec\ec\ed\ee\ef\f0\f1\f2\f3\f4\f5\f6\f7\f8\f9\fa\fb\fc\fd\fe\ff")
 (data (i32.const 27571) "\08\1d)18>BFJMPSVX[]_acegiklnpqstvwyz{}~\7f\81\82\83\84\86\87\88\89\8a\8c\8d\8e\8f\90\91\92\93\94\95\96\97\98\99\9a\9c\9d\9e\9f\9f\a0\a1\a2\a3\a4\a5\a6\a7\a8\a9\aa\ab\ab\ac\ad\ae\af\b0\b1\b1\b2\b3\b4\b5\b5\b6\b7\b8\b9\b9\ba\bb\bc\bd\bd\be\bf\c0\c0\c1\c2\c3\c3\c4\c5\c6\c6\c7\c8\c8\c9\ca\cb\cb\cc\cd\ce\ce\cf\d0\d1\d1\d2\d3\d3\d4\d5\d6\d6\d7\d8\d8\d9\da\db\db\dc\dd\dd\de\df\e0\e0\e1\e2\e2\e3\e4\e5\e5\e6\e7\e8\e8\e9\ea\ea\eb\ec\ed\ed\ee\ef\f0\f0\f1\f2\f3\f3\f4\f5\f6\f6\f7\f8\f9\f9\fa\fb\fc\fd\ff\00\00 \fe\1f\f6\1f\ea\1f\d8\1f\c2\1f\a8\1f\88\1fb\1f:\1f\n\1f\d8\1e\a0\1eb\1e\"\1e\dc\1d\90\1dB\1d\ee\1c\96\1c:\1c\d8\1br\1b\n\1b\9c\1a*\1a\b4\19:\19\bc\18<\18\b6\17.\17\a0\16\10\16~\15\e8\14N\14\b0\13\10\13n\12\c8\11\1e\11t\10\c6\0f\16\0fd\0e\ae\0d\f8\0c@\0c\84\0b\c8\n\n\nJ\t\8a\08\c6\07\02\07>\06x\05\b2\04\ea\03\"\03Z\02\92\01\ca\00\00\006\ffn\fe\a6\fd\de\fc\16\fcN\fb\88\fa\c2\f9\fe\f8:\f8v\f7\b6\f6\f6\f58\f5|\f4\c0\f3\08\f3R\f2\9c\f1\ea\f0:\f0\8c\ef\e2\ee8\ee\92\ed\f0\ecP\ec\b2\eb\18\eb\82\ea\f0\e9`\e9\d2\e8J\e8\c4\e7D\e7\c6\e6L\e6\d6\e5d\e5\f6\e4\8e\e4(\e4\c6\e3j\e3\12\e3\be\e2p\e2$\e2\de\e1\9e\e1`\e1(\e1\f6\e0\c6\e0\9e\e0x\e0X\e0>\e0(\e0\16\e0\n\e0\02\e0\00\e0")
 (data (i32.const 28033) "\0f\08\07\04\0b\0c\03\02\0d\n\05\06\t\0e\01\00\00\01\ff\01\ff\02\fe\02\fe\03\fd\00\01\00\01\ff\02\ff\02\fe\03\fe\03")
 (data (i32.const 28081) "\02\ff\ff\ff\00\00\01\01\00\01\00\01\00\00\00\00\00\01\00\00\00\00\00\01\00\00\00\01\00\00\00\00\00\ff\02\01\00\01\01\00\00\ff\ff\00\00\00\00\00\00\01\ff\00\01\ff\00\ff\01\fe\02\fe\fe\02\fd\02\03\fd\fc\03\fc\04\04\fb\05\fa\fb\06\f9\06\05\08\f7\00\00\01\00\00\00\00\00\00\00\ff\01\00\00\01\ff\00\01\ff\ff\01\ff\02\01\ff\02\fe\fe\02\fe\02\02\03\fd\00\01\00\00\00\00\00\00\01\00\01\00\00\01\ff\01\00\00\02\01\ff\02\ff\ff\02\ff\02\02\ff\03\fe\fe\fe\03\00\01\00\00\01\00\01\ff\02\ff\02\ff\02\03\fe\03\fe\fe\04\04\fd\05\fd\fc\06\fc\06\05\fb\08\fa\fb\f9\t")
 (data (i32.const 28272) "\fb\08\ff\06\ff\06\fc\n\fa\n\fe\06\ff\06\fb\n\f7\0c\fd\07\fe\07\f9\0d")
 (data (i32.const 28304) "*\af\d5\c9\cf\ff@\00\11\00c\ffa\01\10\fe\a3\00\'+\bdV\d9\ff\06\00[\00V\ff\ba\00\17\00\80\fc\c0\18\d8M\ed\ff\dc\fff\00\a7\ff\e8\ffH\01I\fc\08\n%>\00\00\00\00\00\00\87\c7=\c9@\00\80\00\86\ff$\006\01\00\fdH\023$EE\0c\00\80\00\12\00r\ff \01\8b\ff\9f\fc\1b\10{8")
 (data (i32.const 28416) "h\02\0d\c8\f6\ff\'\00:\00\d2\ff\ac\ffx\00\b8\00\c5\fe\e3\fd\04\05\04\15@#\00\00\00\00\e6>\c6\c4\f3\ff\00\00\14\00\1a\00\05\00\e1\ff\d5\ff\fc\ffA\00Z\00\07\00c\ff\08\ff\d4\ffQ\02/\064\n\c7\0c")
 (data (i32.const 28496) "\e4W\05\c5\03\00\f2\ff\ec\ff\f1\ff\02\00\19\00%\00\19\00\f0\ff\b9\ff\95\ff\b1\ff2\00$\01o\02\d6\03\08\05\b8\05")
 (data (i32.const 28544) "\94kg\c4\11\00\0c\00\08\00\01\00\f6\ff\ea\ff\e2\ff\e0\ff\ea\ff\03\00,\00d\00\a8\00\f3\00=\01}\01\ad\01\c7\01")
 (data (i32.const 28592) "\bd\00\a8\fdi\02gwu\00a\ff\d2\fb\08t4\00\dd\00\a8\f6tn\fc\ff\11\02\ea\f2\e5f\d0\ff\f6\02\8c\f0\a5]\b0\ff\89\03u\ef\06S\9d\ff\cc\03\82\effG\95\ff\c7\03\8b\f0\';\99\ff\80\03a\f2\ae.\a5\ff\05\03\cf\f4^\"\b9\ffc\02\a1\f7\98\16\d2\ff\a9\01\a1\fa\b4\0b\00@\00\00l\"\00\00B\0f\00\00\12\06\00\00M\02\00\00\db")
 (data (i32.const 28720) "\ed\00\00\00\99\00\00\00I\00\00\00\1e\00\00\00\0c\00\00\00\07")
 (data (i32.const 28753) "@\00\00\93]\00\00\bdp\00\00\edy\00\00\b2}\00\00$\7f")
 (data (i32.const 28784) "(#\00\00\bc\02\00\00(#\00\00\bc\02\00\00\bc4\00\00\e8\03\00\00\b06\00\00\d0\07\00\00(#\00\00\bc\02\00\00(#\00\00\bc\02\00\00\f8*\00\00\e8\03\00\00\e0.\00\00\d0\07")
 (data (i32.const 28868) "\e0.\00\00\10\'\00\00\10\'\00\00\f8*\00\00\f8*\00\00\80>\00\00\bc4\00\00\bc4\00\00\98:\00\00\98:\00\00 N\00\00\80>\00\00\80>\00\00PF\00\00PF\00\00\c0]\00\00PF\00\00PF\00\00\08R\00\00\08R\00\00\00}\00\00\f0U\00\00\f0U\00\00`m\00\00`m\00\00\00\fa\00\00p\94\00\00p\94\00\00P\c3\00\00P\c3\00\00\00\00\00\00\e0.\00\00\e8\03\00\00\b06\00\00\e8\03\00\00\80>\00\00\e8\03\00\00 N\00\00\e8\03\00\00\f0U\00\00\e8\03")
 (data (i32.const 29040) "\e6Z48wN39\d3\d9\c99\92\913:\cc`\8c:a\fb\c9:\99~\t;\cb\803;\d5%c;w.\8c;\a8\8a\a9;E\b8\c9;\87\a6\ec;\e8.\t<\aef\1d<\f7\023<\93\ffI<OXb<^\11|<.\91\8b<\bd\c7\99<\\\ac\a8<\f3<\b8<\81y\c8<\ee_\d9<9\f0\ea<c*\fd<5\07\08=\10\cc\11=\cd\e4\1b=aP&=\cb\0e1=\00\1f<=\fe\80G=\c64S=?8_=i\8bk=E.x=i\90\82={0\89=\e0\f7\8f=\8a\e5\96={\f9\9d=\b13\a5=!\93\ac=P\18\b4=3\c2\bb=O\91\c3=\12\84\cb=\02\9b\d3=\1f\d6\db=\d73\e4=\af\b4\ec=!X\f5=\a8\1d\fe=\a1\82\03>\f2\06\08>\c7\9b\0c>\dd@\11>4\f6\15>E\bb\1a>\11\90\1f>Tt$>\cbg)>3j.>\8d{3>R\9b8>\c5\c9=>\1c\06C>YPH>z\a8M>\b7\0dS>R\80X>\08\00^>T\8cc>\f2$i>%\can>${t>\ac7z>\00\00\80>\ab\e9\82>\f9\d8\85>\85\cd\88>P\c7\8b>7\c6\8e>\f7\c9\91>\b3\d2\94>&\e0\97>\0f\f2\9a>l\08\9e>\1c#\a1>\ffA\a4>\d0d\a7>\b1\8b\aa>\1c\b6\ad>T\e4\b0>\d3\15\b4>\baJ\b7>\e8\82\ba>\f9\bd\bd>\0d\fc\c0>\e2<\c4>V\80\c7>G\c6\ca>\95\0e\ce>\fbX\d1>z\a5\d4>\f1\f3\d7>\1cD\db>\d9\95\de>\08\e9\e1>\a7=\e5>S\93\e8>\0c\ea\eb>\afA\ef>\1c\9a\f2>\0e\f3\f5>\88L\f9>\"\a6\fc>\00\00\00?\ef\ac\01?\bcY\03?y\06\05?\f2\b2\06?)_\08?\fa\n\n?V\b6\0b?,a\0d?|\0b\0f?\13\b5\10?\f2]\12?\08\06\14?C\ad\15?\82S\17?\b6\f8\18?\dc\9c\1a?\d5?\1c?\8f\e1\1d?\f9\81\1f?\04!!?\8c\be\"?\a3Z$?\17\f5%?\d6\8d\'?\f2$)?(\ba*?\98M,?\01\df-?rn/?\ca\fb0?\f9\862?\ed\0f4?\a7\965?\04\1b7?\e5\9c8?X\1c:?=\99;?\83\13=?*\8b>?\00\00@?\15rA?7\e1B?wMD?\c3\b6E?\eb\1cG?\fe\7fH?\ec\dfI?\92<K?\e1\95L?\ea\ebM?y>O?\8f\8dP?+\d9Q?\1d!S?seT?\0d\a6U?\eb\e2V?\fc\1bX?/QY?s\82Z?\c9\af[?\0e\d9\\?C\fe]?X\1f_?K<`?\fcTa?jib?\85yc?<\85d?\a0\8ce?~\8ff?\d6\8dg?\ba\87h?\f6|i?\9cmj?\8aYk?\d1@l?O#m?\04\01n?\f1\d9n?\f3\ado?\1c}p?IGq?|\0cr?\b4\ccr?\f0\87s?\10>t?\13\eft?\fa\9au?\b3Av??\e3v?\8d\7fw?\ad\16x?~\a8x?\015y?4\bcy?\18>z?\9d\baz?\c21{?w\a3{?\bb\0f|?\9fv|?\02\d8|?\f43}?e\8a}?D\db}?\b3&~?\8fl~?\eb\ac~?\a3\e7~?\da\1c\7f?\7fL\7f?\81v\7f?\02\9b\7f?\d0\b9\7f?\1c\d3\7f?\c5\e6\7f?\cb\f4\7f?/\fd\7f?\00\00\80?\04\00\00\00\08\00\00\00\0c\00\00\00\10\00\00\00\14\00\00\00\18\00\00\00\1c\00\00\00 \00\00\00(\00\00\000\00\00\008\00\00\00@\00\00\00P\00\00\00`\00\00\00p\00\00\00\88\00\00\00\a0\00\00\00\c0\00\00\00\f0")
 (data (i32.const 30082) "\80>\00\00\80>\00\00\80>\00\00\80>\00\00\80>\00\00\80>\00\00\80>\00\00\80>\00\00\80>\00\00\80>\00\00\80>\00\00\80>\00\00\80>\00\00\80>\00\00\80>\00\00\80>\d0%\b4>\979\ad>\t\a5\9f>\fa\ed\8b>\cd\ace>\f8\a9*>40\d2=Z\f1\0d=Z\f1\0d\bd40\d2\bd\f8\a9*\be\cd\ace\be\fa\ed\8b\be\t\a5\9f\be\979\ad\be\d0%\b4\be\87\8a\b1>\1b\83\96>`#I>\c4B\8d=\c4B\8d\bd`#I\be\1b\83\96\be\87\8a\b1\be\87\8a\b1\be\1b\83\96\be`#I\be\c4B\8d\bd\c4B\8d=`#I>\1b\83\96>\87\8a\b1>\979\ad>\cd\ace>Z\f1\0d=\f8\a9*\be\t\a5\9f\be\d0%\b4\be\fa\ed\8b\be40\d2\bd40\d2=\fa\ed\8b>\d0%\b4>\t\a5\9f>\f8\a9*>Z\f1\0d\bd\cd\ace\be\979\ad\be}=\a7>\d2\8b\n>\d2\8b\n\be}=\a7\be}=\a7\be\d2\8b\n\be\d2\8b\n>}=\a7>}=\a7>\d2\8b\n>\d2\8b\n\be}=\a7\be}=\a7\be\d2\8b\n\be\d2\8b\n>}=\a7>\t\a5\9f>Z\f1\0d=\fa\ed\8b\be\979\ad\be40\d2\bd\cd\ace>\d0%\b4>\f8\a9*>\f8\a9*\be\d0%\b4\be\cd\ace\be40\d2=\979\ad>\fa\ed\8b>Z\f1\0d\bd\t\a5\9f\be\1b\83\96>\c4B\8d\bd\87\8a\b1\be`#I\be`#I>\87\8a\b1>\c4B\8d=\1b\83\96\be\1b\83\96\be\c4B\8d=\87\8a\b1>`#I>`#I\be\87\8a\b1\be\c4B\8d\bd\1b\83\96>\fa\ed\8b>\f8\a9*\be\979\ad\beZ\f1\0d=\d0%\b4>40\d2=\t\a5\9f\be\cd\ace\be\cd\ace>\t\a5\9f>40\d2\bd\d0%\b4\beZ\f1\0d\bd\979\ad>\f8\a9*>\fa\ed\8b\be\16\eb\b5@\1ek^@#\a4\e2?\b9\c5\cc?[|q@\b8s\n@t`\a1?\88\f5\8e?\13\9b\f5?")
 (data (i32.const 30644) "\05\c1#=\e9}\a3=%\96\f4=\e2t\">\ac\1cJ>\dd%q>4\ba\8b>\b4w\9e>\e4\bf\b0>\ad\88\c2>%\c9\d3>\18z\e4>\18\95\f4>\c8\n\02?\1c|\t?I\9d\10?\cam\17?\c0\ed\1d?\9f\1d$?T\fe)?.\91/?\e0\d74?c\d49?\f0\88>?\d3\f7B?\ab#G?\17\0fK?\d8\bcN?\ad/R?jjU?\ceoX?\9aB[?\8e\e5]?K[`?n\a6b?d\c9d?\9b\c6f?o\a0h?\f7Xj?\80\f2k?\dfnm?\0b\d0n?\ca\17p?\e0Gq?\e1ar?Mgs?\96Yt?\0c:u?\ff\tv?\8a\cav?\bb|w?\c0!x?b\bax?\9dGy?K\cay?$Cz?\f2\b2z?;\1a{?\c8y{? \d2{?\c8#|?7o|?\f2\b4|?^\f5|?\e00}?\ecg}?\b7\9a}?\b4\c9}?\06\f5}?\11\1d~?\18B~?Nd~?\d3\83~?\fd\a0~?\ed\bb~?\c3\d4~?\b3\eb~?\ef\00\7f?\87\14\7f?\8d&\7f?C7\7f?\aaF\7f?\e3T\7f?\0fb\7f?/n\7f?dy\7f?\be\83\7f??\8d\7f?\18\96\7f?8\9e\7f?\c2\a5\7f?\a3\ac\7f?\10\b3\7f?\f5\b8\7f?w\be\7f?r\c3\7f?\19\c8\7f?l\cc\7f?[\d0\7f?\06\d4\7f?o\d7\7f?\83\da\7f?f\dd\7f?\15\e0\7f?\82\e2\7f?\cd\e4\7f?\e6\e6\7f?\cd\e8\7f?\92\ea\7f?F\ec\7f?\c8\ed\7f?(\ef\7f?x\f0\7f?\a6\f1\7f?\c3\f2\7f?\bf\f3\7f?\ba\f4\7f?\94\f5\7f?^\f6\7f?\'\f7\7f?\cf\f7\7f?w\f8\7f?\fd\f8\7f?\94\f9\7f?\t\fa\7f?\7f\fa\7f?\f4\fa\7f?Y\fb\7f?\ad\fb\7f?\01\fc\7f?T\fc\7f?\98\fc\7f?\db\fc\7f?\1e\fd\7f?P\fd\7f?\82\fd\7f?\b5\fd\7f?\e7\fd\7f?\t\fe\7f?;\fe\7f?]\fe\7f?~\fe\7f?\8f\fe\7f?\b0\fe\7f?\d2\fe\7f?\e3\fe\7f?\f4\fe\7f?\15\ff\7f?&\ff\7f?7\ff\7f?G\ff\7f?X\ff\7f?X\ff\7f?i\ff\7f?z\ff\7f?z\ff\7f?\8b\ff\7f?\9b\ff\7f?\9b\ff\7f?\9b\ff\7f?\ac\ff\7f?\ac\ff\7f?\bd\ff\7f?\bd\ff\7f?\bd\ff\7f?\ce\ff\7f?\ce\ff\7f?\ce\ff\7f?\ce\ff\7f?\ce\ff\7f?\de\ff\7f?\de\ff\7f?\de\ff\7f?\de\ff\7f?\de\ff\7f?\de\ff\7f?\ef\ff\7f?\ef\ff\7f?\ef\ff\7f?\ef\ff\7f?\ef\ff\7f?\ef\ff\7f?\ef\ff\7f?\ef\ff\7f?\ef\ff\7f?\ef\ff\7f?\ef\ff\7f?\ef\ff\7f?\ef\ff\7f?\00\00\80?\00\00\80?\00\00\80?\00\00\80?\00\00\80?\00\00\80?\00\00\80?\00\00\80?\00\00\80?\00\00\80?\00\00\80?")
 (data (i32.const 31456) "3\f0\01\0d\fb\fa\f0\f9\0b\faj\1a\1c\f2\15\e3\07\12\ee\ef\15\ef\f7\14\e7\fd\de0\0b\f3\e1\ec\e2\f7\02\f4\05\ff\08\t\t\08\f3\12\ef\de\fb\11\f5\00\fc\n\02\n\0f\f8\02\ff\00\05\0d\fd\f0\01\fb\03\07\e4\f3\06$\fd\13\c4\ef\e4\07\f5\e2\f9\02\d6\eb\fd\06\ea!\f7\07\e2\15\f2\18\f5\ec\ee\fb\f4\0c\cf\ce\cf\10\t\db\ff\t\"\f3\e1\e1\0c\10,\d6\02\f7\08\ee\fa\t$\13\0b\0d\0c\eb\03\e4\f4\03!\19\f2\0b\01\a2\d9\12\f4\f5\f1\f914\n\d5\t9\08\15\fa\0e\f1,\f8\07\e2\f3\fe\f7\19\fe\81\12\f5\cc\1a\e5\1b\n\f6\07+\06\e8)\n\ee\e5\n\11\t\n\ef\f6\14\fa\167#\b0$\19\e8\dc\0f\t\edX\13@\cd\dd\11\00\f9)\f0\1b\04\0f\ff\12\f0/\d9\ca\f8\0d\e7\ecf\ee\fb,\0b\e4G\02\cd\fb\05\02\ad\f7\e3\08\15\cb:\db\f9\0d&\t\"\ff\d7\15\04\e8\dc\df\eb K\fe\01\bc\ff/\e3 \14\0c\bf\a9\05\10\f4\18(\0f\07\13\e6\ef\11\06\fe\db\e2\f7 \81\d9\00\e1\e5\04\ea\17\fa\b3#\c3 \db\e8\0d\f5\ff\d8\fd\11\f9\0d\0b;\ed\n\06\ee\00\0d\03\fa\e9\13\0b\ef\0d\ff\b0(\cbE\e3\ca\00\fc!\e7\fe&#$\f1.\02\f3\f0\f8\f8\0c\e8\f7\c9\fb\f7 \0b\07\0c\ee\f6\aa\da6%\e7\12\d5\07\e5\e5\ca\0d\t\16F\06#\f9\17\f1\d4\fa\07\be\ab (\ed\f7\f9\0c\f1\07\02\06\dd\0b\1c\00\1a\0e\01\01\04\0c\12#\16\ee\fd\0e\ff\07\0e\f8\f2\fd\04\fd\ed\f9\ff\e7\e5\19\e6\fe!\ea\e5\e7\04\f7\07\15\1a\e2\n\f7\ec\0b\1b\n\05\ee\0e\fc\02\ef\fb\f9\f7\f3\0f\1d\01\f6\f0\f6#$\f9\ea\d4\11\1e\16\15\ff\16\f5 \f8\f9\05\f6\05\1e\ec\1d\ec\de\0c\fc\fa\06\f3\n\fb\bc\ff\18\t\13\e8\c0\1f\13\1b\e6K\d3)\'\d6\08\06\17\e2\10\e7\1e\"\08\da\fd\12\10\e1\16\fc\f7\01\14\t&\e0\00\d3\00\fa\f3\0b\e7\e0\ea\1f\e8\f5\f5\fc\fc\14\de\16\14\t\e7\1b\fb\1c\e3\1d\06\15\fa\ee6\04\d2\17\15\f2\e1$\d7\e8\04\16\n\0b\07$\e0\f3\cc\ef\18\1c\db\dc\ff\18\t\da#0\12\02\ff-\n\'\18\da\0d\08\f0\08\19\0b\07\e3\f5\07\14\e2\da\d3\0e\ee\e4\f7A=\16\cb\da\f0$.\14\d9 \c3\fa\fa\dc\df\ee\e48e-\0b\e4\e9\e3\c3\14\d1\020\1b\ef\01(\01\03\cd\0f#\1c\16#5\c3\e3\0c\fa\eb\n\03\ec\02\e7\01\fa\1f\0b\fd\01\f6\cc\06~\97z\7f\80\7f\7f\80\7fl\0c\7f0\80\dc\80\7f\7f\80\80\7fY\80\7f\80\80\80\7f\7f\80\80\a3\ae\14}A\ae\7f&\b6QX\a8O3\d1\91\e6\0eS\a8\90\18#\9bb\9d\d0\d3.S\c4\b1-\ec\d7\t\0446]\f6\04\0d\03{\06^\91\bb\f2\e1\n\0c5\b1\f5\eb\fe\d4\b8\\A\c78\da\7f\c8\80\7f\7f\80Vu\b5\80\7f\ed\9d\90\7f\80\7f\d0rv\80\80u\ef\fay\80\7f\80R6\96\7f\7f\dfd\d9\e9\12\b2\de\e3\ff\e2\7f\e6\7f\80~\80\1b\e9\b1\88\81\7fHB\1d\07\be\c8\8b\80\d6\14\10\00i<\01\9f\18<\12\0d>\19\7f\"O7v\7f_\1f\fcW\15\0c\02\f2\12\17\08\11\ff\f8\05\04\18%\15\0d$\0d\11\12%\1e!\01\08\f0\f5\fb\e1\fd\fb\00\06\03:\f9\ff\f0\05\f3\10\n\fe\f2\0b\fc\03\f5")
 (data (i32.const 32368) "\16\ff\f9\07\1d\e5\e1\ef\f3!,\f8\0b!\18N\0f\13\1e\fe\e8\051\05$\1d\f2\f5\d0\df\15\d6\da\f47\db6\f8\01$\11\003\1f;\07\f45\04 \f20\05\f6\f0\f8\01\f0\c8\e8\fa\12\fe\17\06.\fa\f6\14#\d4\f1\cf$\10\05\f9\b1\bd\0cF\fd\b1\ca\ab\e8/\ea!\15E\ff\0b\16\0e\f0\f0\ea\e4\f5\0b\d7\1f\e6\df\ed\fc\1b \ce\05\f6\da\ea\f8#\e1\01\d7\f1\f5,\1c\ef\d7\e9\11\02\e9\e6\f3\f3\ef\06\0e\e1\e7\t\ed\'\f8\04\1f\ff\d3\f5\e4\a4\d2\f1\15v\ea-\cd\0b\ec\ec\f1\0d\eb\9f\e3\e0\e9\d6^\01\17\f8?\fd\d2\13\e6 \d8\b6\e6\1a\fc\f3\1e\ec\e2\e7\f2\e1\d3\d5\04\c4\d0\f4\de\02\02\03\0d\0f\0b\10\05.\f7\c9\f0\c7\1d\0e&\ce\fe\d4\f5\f84\e5\da\f9\14/\11\c5\00/.\c1#\ef\13!D\ed\02\0f\f0\1c\f0\99\1a\dd/\d9\c4\1e\1f\e9\cc\f3t/\e7\1e(\1e\ea\02\0c\e5\ee\1f\f6\1b\f8\be\0c\0e\04\e6\e4\f3\03\0d\e6\cd%\05\02\eb/\03\0d\19\d7\e5\f8\fc\05\b4\df\1c\n\t\d2\b6\13\1c\19\1f6\c9D&\e8\e0\02\04D\0b\ffc\05\10\fe\b6(\1a\e6!\1f\ff\bc\0e\fa\19\t\1d<=\07\f9\00\e8\07M\04\ff\10\f9\0d\f1\ed\1c\e1\e8\f0%\18\0d\1e\n\e2\0b\0b\f6\16<\1c-\fd\d8\c2\fb\9a\t\e0\e5\ca\15\0f\fb%\d5\f5%\ed/\c0\80\e5\8e\15\be;.\fd\f4\a9\f7\04\13\8f\dcN9\e6\da\b3\f6\06\06\b5\19\9f\f5!\d2\01\0d\eb\df\ec\10\fa\fd\f5\fc\e5&\08\d7\fe\df\12\13\e6\01\e3\ea\fc\f2\c9\f5\b0\fd\0b\"Z3\0b\11+$\7f\e0\1dg\t\1b\0d@8F\f2\03\f4\n%\03\0c\ea\f6.\1c\n\14\1a\e8\12\t\07\0e\"\fb\f9\1f\f2\c8\0b\ee\f8\ef\f9\f6\d8\n\df\e0\d5\05\t\0b\fc\n2\f4\fb.\t\07\01\0b\0f[\ef\07\ce\17\06\e2\9d\00\ef\0e\08\f6\e7\e2\bb\c2\1f\7fr\e9e\fb\ca\fa\ea\07\c8\'\12\e3\00.\08\b1\04\eb\12\e0>\f4\f8\f4\c6\1f\e0\11\06\e8\19\18\t\fc\ed-\06\11\f2\05\e5\10\fc\d7\19\dc\05\0f\0c2\1b\19\17\d4\bb\f7\ed\d0\f8\04\0c\fa\0d\ed\e2\dc\1a%\ff\fd\e2\d6\f2\f6\ec\1a\ca\e5\d4\04I\e6Z \bb\e3\f0\03g\0f\ef%\18\e9\e1!\db\c0\19\0d\af\e4\e0\1b\05\dd\e9\0f\ea\13\f9\t\1e\13\e9\1b\f3+\1d\e3\fa\t\d8\df\df\e0\t\0b\d0\f8\e9\cc.\11\ea\d6#\f1\d7\10\"\1f\d6\ed\f57\07\d9Y\f5\df\14\f2\16 \03\ef\fa\0e\"\017\eb\a6\f8\12\1b\0d\e3\15\0f\df\cd\f7\f5\04\f0\ee\17\fc\fc0\01\07\1d\f2\f4\f0\11#\08\00\f9\fe\t\08\11\fa5\e0\eb\ce\05c\c4\fb\cb\n\e1\0c\fb\07P$\12\e1\tb$\c1\dd\04\f3\e4\e8\1c\f3\12\10\ff\ee\de\n\14\07\04\1d\0b\19\f9$\0e-\18\01\f0\1e\06#\fa\f5\e8\0d\ff\1b\'\140\f5\fc\f3\1c\0b\e1\ee\1f\e3\16\fe\ec\f0\05\1e\f4\e4\fd]\f0\17\12\e3\06\ca\db\1c\fd\fd\d1\fd\dc\c9\fd)\f6/\fe\17*\f9\b9\e5S\c0\07\e8\08\1a\ef\0f\0c\1f\e2\da\f3\df\c8\04\ef\14\12\01\e2\fb\fa\e1\f2\db\00\16\n\e2%\ef\12\06\05\17\dc\e0\0e\12\f3\c3\cc\bb,\e2\10\12\fc\e7\0eQ\1a\f8\e9\c54\98\11w\e0\1a\11\01\17-\1d\c0\c7\f2I\15\f3\f3\t\bc\f9\cc\03\18\d9,\f1\1b\0e\13\f7\e4\f5\05\03\de\fe\02\16\fa\e9\04\03\0d\ea\f3\f6\ee\1d\06,\f3\e8\f8\02\1e\0e+\06\11\b7\fa\f9\14\b0\f9\f9\e4\0f\bb\da\fb\9c\dd\0f\b1\17\1d\ee\e5\15\be\db\08\ea\d90\04\f3\01\f7\0b\e3\16\06\cf \f2/\ee\fc,\cc\b6+\1e\17\f2\05\00\e5\04\f9\n\fc\n\01\f0\0b\ee\fe\fb\02\f5\00\ec\fc&J;\'@\f6\1a\fd\d8\bc\03\e2\cd\08\ed\e5\d2346$Z\\\0e\0d\fb\00\10\c2\10\0b\d1\db\fa\fb\156\c7 *\fa>\f7\10\15\18\t\f6\fc!2\0d\f1\01\dd\d0\12\f5\ef\bd\f3\15&\d4$\f0\1d\11\05\f6\12\11\e0\02\08\16\c8\f1\e0(+\13.\f9\9c\a0\135\18\15\e6\d0\9b\ae=&\ab\e4\de\ff?\fb\fb\'\'\da \f4\e4\14(\f8\02\1f\0c\dd\f3\14\e7\1e\08\03\f3\f7\ec\02\f3\18%\f6!\06\14\f0\e8\fa\fa\ed\fb\16\15\n\0b\fc\d9\ff\061)\f1\c7\15\c2M\bb\f3\00\b6\01\f9\da\f8\06?\1c\04\1a\ccR?\0d-\df,\cc\bf\eb\d2\cf@\ef \18D\d9\f0\fb\e6\1c\05\c3\e4\02\18\0b\f4\df\t\db\fd\e4\16\db\f4\13\00\ee\fe\0e\01\04\08\f7\fe+\ef\fe\be\e18\d8\a9\dc\fe\fc\d6\d3\ff\1f\d5\f1\1b?\f5 \f6\df\1b\ed\04\0f\e6\de\1d\fc\d9\bf\0e\ec\eb\ef\dc\0d;/\da\df\0d\db\f8\db\f9\fa\b4\e1\f4\d2\07\18\eb\e2\f2\t\0f\f4\f3/\e5\e7\ff\d9\00\14\f7\06\07\04\03\07\'2\16\f9\0e\ec\01F\e4\1d\d7\n\f0\fb\e4\fe\db \ee\11>\f5\ec\ce$\15\c2\f4\c842\11\030,\d7\e7\03\10\fd\00!\fa\0f\1b\"\e7\16\t\11\f5$\10\fe\0c\15\cc-\fe\f6.\15\eeC\e4\f3\1e%*\10\f7\0bK\07\c0\d8\f6\1d9\e9\055\b3\03\ef\fb/\c9\dd\dc\f34\cb\b94\91\e9\e6\e4\1d\d57\ed+\ed6\f4\df\d4\d9\ed\f6\e1\f6\15&\c7\ec\02\e7\08\fa2\0c\0f\19\e7\0f\e2\fa\t\19%\13\fc\1f\ea\02\04\02$\07\03\de\b0$\f6\fe\fb\1f\dc1\ba\14\dc\15\18\19\d2\cd$\c6\d0\d8\f67G/\n\ff\01\02\d2\bc\10\0d\00\b6\e3I\cc\ee\f5\07\d4\ae\e0\ba\e4\ff\d9\bc\fa\d7\0c\ea\f0(\f5\e73\f7\15\04\04\de\07\b2\10\06\da\e2\fe\d4 \00\16@\05\b8\fe\f2\f6\f0\f8\e7\0cf\c6%\f6\e9\0f1\07\f9\02\ec\e0-\fa0\1c\1e!\ff\16\fa\1eA\ef\1dJ%\e6\f6\0f\e8\13\be\16\f6\e1\ff\ee\f7\0b%\fc-\05)\11\01\01\18\c6)\05\cd\0e\08+\10\f6\ff- \c0\03\df\e7\fd\e5\bc\0c\17\f5\f3\db\d8\04\eb\f4 \e9\edL)\e9\e8\d4\bf\ff\f1\01G?\05\14\fd\15\e9\1f\e0\12\fe\1b\1f.\fb\d9\fb\dd\12\ee\d8\f6\03\0c\02\fe\ea(\05\fa<$\03\1d\e5\n\19\ca\05\1a\'#\e8\db\1e\a5\1c\fc\eb\e5\d9\fa\05\0c\80&\f0\1d\a1\e3R\fe#\02\0c\08\ea\nP\d1\02\e7\b7\b1\10\e2\e0\be0\15\d3\f5\d1\0e\e5\ef\f9\0f\d4\f2\d4\e6\e0\1a\e9\11\f9\e4\1a\fa\1c\06\e6\02\0d\f2\e9\f2\13.\10\02\df\eb\1c\ef\d6,\db\01\d9\1cT\d2\0f\n\0d\d4H\e6\1a \e4\f4\ad\02\n\e2\d4\f6\e45-A\00\e79$\df\06\1d,\cb\0b\13\fe\e5# 1\04\17&$\18\n3\d9\04\f9\1a%\dd\0b\d1\ee\1c\10\dd*\11\eb\d7\1c\0e\f4\0b\d3\07\d5\f1\12\fb&\d8\ce\e2\eb\t\9e\0d\0c\17K\c8\f9\fd\fc\ff\de\0c\cf\0b\1a\ee\e4\ef!\0d\f2(\18\b8\db\n\11\fa\16\10\10\fa\f4\e2\f2\n(\e9\0c\0f\fd\f1\0d\c8\fc\e2\01\fd\ef\1b2\fb@\dc\ed\07\1d\16\19\t\f0\c6\bb\d8\c3\b9\f2*]\1a\0b\fa\c6\f5F\cc\13\t\e2\df\0b\db\d1\eb\ea\d8\n/\04\e9\110)\d0\0e\n\0f\"\e9\fe\d1\17\e0\f3\f6\e6\e6\fc\10&\f2\00\f4\f9\f9\14,\ff\e0\e5\f0\04\fa\ee\0e\05\04\e3\1c\07\f9\0f\f5\ec\d3\dc\10T\"\c5\e2\16~\08DO\ef\15\bc%\05\0f?1\7f\a6U+\07\10\t\06\d3\c7\d59\0b\e9\f5\e3<\e6\00\07*\e8\n\17\e7\08\f9\d8\13\ef#\04\1b\d9\a5\1b\dc\"\02\10\e8\19\07\eb\05\11\n\ea\e2\t\ef\c3\e6!\15:\cd\f2E\da\14\07P\fc\bf\fa\e55\f4/\ff\f1\01<f\b1\fc\0c\t\16%\f8\fc%\02\fd\f1\f0\f5\fb\13\fa\d5\14\e7\ee\n\e5\00\e4\e5\f5\n\ee\fe\fc\f0\1a\0e\fa\07\fa\015\fe\e3\17\t\e2\fa\fc\fa8F\00\df\ec\ef\f7\e8.\fb\97/\d2\cd\14\14\cb\af\ff\f9K\fb\eb\bf\0c\cc\16\ce\f416L\af\n-\d7\c5\12\ed\19\0e\e1\cb\fb\0c\1fT\e9\02\07\02\n\e0\'\fe\f4\01\f7\00\f6\f5\t\0f\f8\fe\02\ff\n\0e\fb\d8\13\f9\f9\1a\fc\02\01\e5# \15\e1\1a+\f7\04\e0(\c2\cc$\16&\16$\a0\06\f6\e9\cf\0f\df\ee\fd\00)\15\ed\15\17\d9\e9\fa\06/8\04J\00\9e\1d\d1\f2\dc\15\ea\16\10\0d\0c\10\fb\0d\11\f3\f1\01\de\e6\1a\0c \1b\0d\bd\1b\02\08\n\12\10\14\ef\ef9\c0\05\0e\13\1f\ee\d4\d2\f0\04\e7\11\82\e8\'\04\087\e7\de\'\f0\03\tGH\e1\c9\06\n\e7 \ab\eb\12\f8\0f\0c\e5\f9\01\eb\fe\fb0\f0\12\01\ea\e6\10\0e\e1\1b\fa\f1\eb\04\f2\12\dc\14C\9d\0c)\e71\d4#Qn/\"\be\f2\0e\c4\"\1d\b7\n)#Y\07\dd\16\07\1b\ec\fa8\1aB\06!\c95\01\eb\0e\11D7;\00\12\f7\05\d7\06\fb\8e\f4\1d*\e9\nQ\e5\14\cb\e2\c2(_\19\fc\03\12\f8\f1\e3\ae\02\c7\fd\c3\e3\e31\02\c9\05\bb\9d\cf\cd\06\e7\0cY,\df\05)\01\17\db\db\e4\d0\03\04\d7\e2\c7\dd\d9\ff\f3\c8\fb21)\fc\fc!\ea\ff!\"\12(\d6\0c\01\fa\fe\12\11\',\0bA\c4\d3\n[\15\t\c2\f5\08E%\18\e2\15\1a\e5\01\e4\18B\f8\06\b9\"\18,:\b2\ed9\11\c4\01\0c\fd\ff\d8\16\0b\fb\19\0c\01HO\07\ce\17\12\0d\15\f5\ec\05M\a2\18\0f9\cd\03$5\ff\04\0e\1e\e1\16( \f5\de\dc\c5:\19\15\ca\e9(.\12\00\0c6\a0\9d\c5\05w\da27\0c\f0C\00\"#\'#\ffE\18\1b\e2\dd\fc\ba\02\d4\f9\fa\13\f7<,\eb\f6%+\f0\fd\1e\f1\bf\1f\c9\12\9eL@\19\18\ee\f9\bc\f6&\1b\c4$!\10\1e\"\d9\db\1f\0c5\ca\0e\e6\cf\80\f3\fb\ea\f5\ab7\f8\cd\f5\df\f6\e1\b4\d7\17,\d8\ca\81\9b\13\e9\f1\0f\1b:\c4\08\0e\df\010\f7\f5\85\035\17\04\e4\16\02\e3\bd$\0c\077\ebX\14\ff\eb\ef\03) \f6\f2\fb\c7C9\15\17\fe\e5\b7\e8x\15\12\dd*\f9\03\d3\e7L\de2\0b\ca\a5\03\8f\ec\fb/\0f\d1\11\1b\fd\e6\f9\n\07J\d8@\f9\fb\e8\cf\e8\fd\f6\1b\ef\f8\fd\0e\e5!\0d\'\1c\f9\da\1d\10,\137\fd\t\f3\c7++\1f\00\a3\ef\13\c8\04\f4\e7%\ab\f3\8a!\ef8G\b0\fc\06\f5\ee/\cc\19\t0\95\01\15\14\fd\n\f0\fc\18\11\1f\c3\ee\ce\18\f6\0cG\1a\0b\fd\04\01\00\f9\d8\12&\de&\11\08\de\02\15{\e0\e6+\0e\de\ff\f7%\f0\06\ef\c2D\16\11\0b\b5!\b0>\f7\b5L$\d7\f8\d8\f5\b9(\d9>\cf\af\10\f7\cc4=\11\99\e5\f6\f8\ca\c7\15\17\f0\cc$\12\n\fb\08\0f\e3\05\ed\db\08\cb\06\13\db&\ef0\n\00Q.F\e3e\0b,\d4\fd\18\0b\03\0e\f7\0b\0e\d3\0d.\fd\c7D,?b\19\e4\e9\0f \f65\fa\fe\f7\fa\10\95\f5\f5\e4;9\ea&*S\1b\05\1d\e2\0c\eb\f3\1f&\eb:\f6\f6\f1\fe\fb\0b\0c\b7\e4\da\16\02\e7I\cc\f4\c9 \c1\153!4\e67\e6\e69\e0\fc\cc\c3\15\df\a5\cdE\a6\cb\da\d4\0c\b4\ecM\d3\f9V+\93\df\97\d8\87\f6\00\b8-\cd\b5\cf\da\ff\c2\12\ff\1e\d4\f2\f6\bd(\f6\de.\c0\e0\1d\f3!\03\e0\fb\1c\e5\e7]\18D\d89\17\fd\eb\c6\11\d9\ef\ea\a7\0b\12\d2\1b\18.\7f=W\1f\7f\dc/\e9/\7f\e8nz\1ed\00`\f4\062,\f3I\047\f5\f11*\fa\14\dd:\12&*H\13\eb\0b\t\db\07\1d\1f\10\ef\0d\ce\13\05\e93\f0\fb\04\e8L\n\cb\e4\f9\bfJ(\f0\e3 \f0\cf\dd\fd;\a0\ce\d5\d5\c3\f1\f8\dc\de\df\f2\0b\fd\d9\04\8e\85\f5\cf\eb\0e\c8\01+\c1\1a(\12\f6\e6\f2\f1\dd\dd\f5 \d4\bd\02\16\07\03\f7\e2\cd\e4\1c\06\ea\10\"\e7\cc\ca\f8\fa\05\08\14\f0\ef\d4\1b\03\1f\fb\d0\ff\fdt\0bG\e1\d1m2\ea\f4\c7 B\08\e7\a3\ca\f6\13\b4\dea0\dc\ee\e2\d9\e6\f4\1c\0e\0c\f4\e1&\02\n\04\d8\14\10\c3\02@\'\05\0f!(\c3\cf]\f6!\1c\f5\e5\ee\'\c2\fa\fa>\0b\f8&\bd\0c\1b\'\e5{\ee\fa\bfS\c0\14\13\f5!\18\118N\07\f16\9b\f7s\a023#\"\1b%\d8\f5\08\dc*\d3\02\e9\00C\f8\f7\f32\f2\e5\04\00\f8\f2\1e\f7\1d\0f\t\da%\f82\d26)\f5\f8\f5\e6\'-\0e\e6\ef\e5E&\'bB\00*{\9b\ed\adu\e08\n\0c\a8O\cb8?_\c2\t$\f3\b1\f0%\d2#\de\0e\11\ca\05\15\f9\07?8\0f\1b\b4\e7\04\e6\c1\1c\bd\cc+\d1\ba(\f4(\be\db\00#%\cb\04\ef\cd\0b\15\0e\de\fc\18\d6\1d\16\07\1c\0c%\'\d9\edA\c4\ce\fe\01R\'\13\e9\d5\ea\bd\dd\de fQ\7f$C\d3\01\bd\cc\fc#\14\1cGV\dd\f7\ad\de\0c\t\e9\02\0e\1c\e9\07\e7-\07\11\db\00\ed\1f\1a(\e5\f0\11\05\eb\17\18`\c94\ed\f2\fa\012\deV\cb&\02\cc\dc\f3<\ab\88 \07\f4\16F\f9\a2&\b4\e1\ec\0f\e4\07\06(5X\03&\12\f8\ea\e93%\f7\0d\e0\19\eb\1b\1f\14\12\f7\f3\01\15\e8\f3\'\0f\f5\e3\dc\12\0f\08\1b\15\a2\ff\ea1B\ff\06\fd\d8\ee\06\1c\0c!\c5><\d0Z\ffl\t\12\fe\1bM\bfR\d0\da\ed\f5\7f2B\12\f3\ea<\da(\f2\e6\f3&C9\1e!\1a$&\ef\1b\e4\14\0c\c0\12\05\df\e5\0d\e6 #\fb\d0\f2\\+\d1\f2(\0b3B\16\c1\f0\c3\04\e4\1b\14\df\e2\eb\e3\cb\1f\d8\18+\fc\ed\15C\14d\f0\a3N\fa\ee\cc\db\f7B\e1\f8\1a\12\04\18\ea\11\fe\f3\1b\00\08\ee\e7\05\eb\e8\f9\12\a3\15\07\02\b5E2\fb\f1\ef<\d67\01\fc\03\n.\10\f3-\f9\f6\d4\941\02\f1\c0\f4\b8 \da\d3\n\ca\0d\f3\e5\dc\c0:\c2\9bX\aa\b9\d9\f7\80 \0f\fc6\f0\d9\e6\dc.0\c0\f6\13\1e\f3\"\f82<\ea\fa\f5\e2\052 8\00\19\06D\0b\e3-\f7\f4\04\01\12\cf\00\da\edZ\1d#3\08\d0`\ff\f4\f7\e0\c1\bf\f9&Y\1c\ab\e4\e9\e7\808O\dcc\fa\db\07\f3\bb\d2\e3\19@\eb\11\01*\be\01P\1a\e0\15\0f\0f\06\06\f6\0f\7f\05&\1bW\c7\e7\0bH\eb\fb\0b\f3\beN$\fd)\eb\08\df\17I\1c9\e7\fb\04\ea\d1\0f\04\c7\b8!\01\12\025\b9\9d\eb\fd\91lG\f2R\19=\d0\05\t\cd\ec\e7\fd\0e\df\0e\fd\de\16\0c\ed\da\f0\02\15\10\1a\e1K,\e1\10\1aB\11\f7\ea\ea\16\d4\16\1b\02:\f2\n\b7\d67\e7\c3H\ff\1e\c6\e7?\1a\d0\d8\1a\e2<\08\ef\ff\ee\ec+\ec\fc\e4\7f\96\1dF@\e5\'\df\fb\a8\d8\cc\1a,\ef\17\02\cf\16\f7\f8V1\d5\c4\01\n-$\cb\fc!&0\b8\01\13\15\bf\04\fb\c2\1b\e7\11\fa\06\d3\d9\d2\04\1a\7f\f7\12\df\ee\fd!\02\fb\0f\e6\ea\8b\c1\ef\c5=\b6\07\d1\c6\80\bd\0f\f0\80\0c\02\14\t\d0\d8+\03\d8\f0\da\fa\ea\e4\f0\c5\ea\06\fb\0b\f4\be\d8\1b\c2\d4\ed&\fd\'\f8(\e8\0d\152\c4\ea5\e3\fa\01\16\c5\00\11\d9s\8f\a8\1f\80\82\c3U\ddv\80\c3\7f\80\ef\80\7fh\f7\80!-\7f\05ST\80\ab\80\d30\cb\80.\7f\ef}u\d7\8b\a5\81\bc\ff\a7\b0 j\07\08\00\00\00\04\00\00\00\e1zT?\f6(\\?$\a0\00\00\10\00\00\00\04\00\00\00\9a\99Y?\aeGa?$\a0\00\00 \00\00\00\04\00\00\00\c1\caa?\c3\f5h?$\a0\00\000\00\00\00\08\00\00\00\b8\1ee?\83\c0j?,\a0\00\00@\00\00\00\08\00\00\00\a8\c6k?\d7\a3p?,\a0\00\00P\00\00\00\10\00\00\001\08l?\d7\a3p?4\a0\00\00`\00\00\00\10\00\00\00\d7\a3p?\85\ebq?4\a0\00\00\80\00\00\00\10\00\00\0033s?33s?4\a0\00\00\a0\00\00\00\10\00\00\00\8f\c2u?\8f\c2u?4\a0\00\00\c0\00\00\00 \00\00\00\d9\cew?\d9\cew?<\a0\00\00\00\01\00\00 \00\00\00\9a\99y?\9a\99y?<\a0\00\00\00\00\00\00\c8Q\0c\d2\84\f4\ef?\00\00\00\00\00\00\f0?\c8Q\0c\d2\84\f4\ef?\f6\95\07\e9)\d2\ef?\da\d3\c4\f12\99\ef?\d4\fd\10\d9\0fJ\ef?~\9f\bbn[\e5\ee?a\c1?\9d\d9k\ee?\1d\d7\f1%u\de\ed?j\7fo\ec<>\ed?\c9\ea5\c1`\8c\ec?w$E\01.\ca\eb?\1e\bc~\da\0b\f9\ea?:\d0\bf4w\1a\ea?\f5%#\80\fe/\e9?\f2@C\83=;\e8?\0e\07S\de\d8=\e7?\f7\f2\af\a3y9\e6?L\c8\c5 \c9/\e5?\ce\b8x\91l\"\e4?\ff\99Z\19\01\13\e3?/\9c1\ed\17\03\e2?c\d9\06\cd2\f4\e0?MZ\86r\81\cf\df?\cd\8fd\fb5\be\dd?\15\c67\90\05\b7\db?\e0\07\ad\a8=\bc\d9?`3\n\93\f3\cf\d7?\f3\1d\fc\c4\01\f4\d5?J\85g\f8\05*\d4?\e7\cd<\14`s\d2?\8d\ca472\d1\d0?\d8\d1z\f0\c1\88\ce?\af\'x\12*\9b\cb?\c8H\93\dey\da\c8?\b5\cf[#\1fG\c6?=WB\14\1f\e1\c3?\b5\cd\01@\1d\a8\c1?M\ba\90\bb\c66\bf?.\0c&8\d4s\bb?f\92\05\n\c4\04\b8?\80T\16\c7y\e6\b4?bHN&n\15\b2?\a4\15\84\97\85\1b\af?\ec\b2\eb \a7\96\aa?\97\a8AE\93\93\a6?>x/\efX\t\a3?\d5\e7\acG\c8\dd\9f?l\cfM\179v\9a?\f4\f1\d8\e8\ff\c9\95?\0f\0b\b5\a6y\c7\91?U\17l\fa\1e\bb\8c?\fe\a4\b1(\b2\f7\86?<\b7\96\ea~%\82?\a5\fb\b5\ccTN|?g\1fTw\9f\c2u?\05\c4\7f\15;up?t\7f\b3\9c\9doh?\d3\f0\f3\00\92\c0a?\f7R\db\fa\a7#Y??\c1\ac\edy@Q?\f1B\00\91\fa\c2F?{\b2\cdS>\80<?&Q\92\"\f0\8f0?\c7Tn`z\14!?}\89\7f7 \ab\0b?\f1h\e3\88\b5\f8\e4>")
 (data (i32.const 37216) "\b9\a6\a3\90\"\da\ef?\00\00\00\00\00\00\f0?\b9\a6\a3\90\"\da\ef?\85\0b\16\da{i\ef?DF\cdx\d7\b0\ee?&S\c3\86\c0\b4\ed?3\da.]V{\ec?\a9\ce\179\13\0c\eb?\a9\eaq!\87o\e9?r\e6\91\1e\n\af\e7?\d6\d1i\c4i\d4\e5?\c0\a7\a4\14\95\e9\e3?9\a0\00\e5J\f8\e1?\ea\83\1b\df\cd\t\e0?Uj\d52BM\dc?C]\de\fb\9f\ac\d8?\0fZ\f6\c1\85>\d5?\1f\05\db\caC\0d\d2?\a0g7#\18A\ce?\8c\8bz\f3\e1\fa\c8?\f0\aeH\86\fbL\c4?t\e3\'\1f\cc7\c0?\eea\8a\cd\"o\b9?;NU\ca\00\8a\b3?\e8a.\ca\e8W\ad?$3\cd*\"y\a5?\bbim\f9\cc\82\9e?\",to\8f\ef\94?>\11\dd\16\d9\8c\8b?]\c2_\9b\a62\81?P\08\b2\d8\05\07t?\81\c8*\be\04\1be?\dc\ee\ab\93\af\dbR?\1b\ca\9a\a2mF7?")
 (data (i32.const 37504) "\c1SL\ce\1e\e2\ef?\00\00\00\00\00\00\f0?\c1SL\ce\1e\e2\ef?\cfB\c8\9a\0d\89\ef?\0cm\e7\98\7f\f6\ee?\88\12-y<-\ee?\9aM\f4\b7\0c1\ed?\b5\b0\c0\ba\9e\06\ec?\cc\99\0e\19f\b3\ea?\dcy,\c7u=\e9?Q\ab\"\bbV\ab\e7?\956\c9M\dc\03\e6?u\ab\e7\a4\f7M\e4?w\00\9b\de\8b\90\e2?\13\81\ea\1fD\d2\e0?\c6\00\c3\d1\d92\de?S>\04U\a3\d7\da?\d9\08a\c1?\9d\d7?\a8j\06\e1\9f\8c\d4?n$}\18)\ad\d1?Z\efy\f6C\t\ce?\1b\00`+W.\c9?Q\96k\1b\90\ce\c4?\8b\ecZ\ad\d9\eb\c0?\e9\d6)^~\n\bb?\df\17\fa\d4o.\b5?\06\0d\81L\008\b0?\ca\bdD\e5\f4/\a8?\a6\15\f8\ed\98x\a1?K\f5S\d2yC\98?\94\cf\9f\f4\8d\01\90?\00n7=\ff\a8\83?\dei\19F\cd\99u?\e0\85\8c\cb\e1(c?\fc\a9\f1\d2Mb@?")
 (data (i32.const 37792) "%\91\e0\ba \ea\ef?\00\00\00\00\00\00\f0?%\91\e0\ba \ea\ef?\deK+\cf\cd\a8\ef?Z\1f\ff\9a\e6<\ef?U\cf\17\b5\da\a7\ee?\be\a0d\f6\a2\eb\ed?\d7\90n:\b8\n\ed?\8b\e8\cfe\07\08\ec?\b5\deo\b4\e3\e6\ea?X\00t\14\f7\aa\e9?\"rU41X\e8?P\c5\aei\b5\f2\e6?X\e4\b6\01\c8~\e5?\94E\'l\bb\00\e4?G+JK\dd|\e2?\a9\a3\e3jd\f7\e0?\aa\a9\97\a5\be\e8\de?\16\c4z\82H\ef\db?Kf\cc\8f\85\t\d9??\e9\e1W\ee=\d6?\c2jn}?\92\d3?\a0\be\a7ji\0b\d1?+r_9\08[\cd?\'\99b/\90\f7\c8?\a1\07\ca\af\17\f1\c4?\cab\ac\80\8cJ\c1?\"\c5\belT\n\bc?a\85\00\85\1fA\b6?\8f\dep\1f\b95\b1?C\84\c9\9eN\c3\a9?!{{\df\11x\a2?\f3G(\e8\bc\e7\98?Y\ed\0e\e7\e9u\8e?!\02\0e\a1J\cd~?")
 (data (i32.const 38080) "\11\00\n\00\11\11\11\00\00\00\00\05\00\00\00\00\00\00\t\00\00\00\00\0b")
 (data (i32.const 38112) "\11\00\0f\n\11\11\11\03\n\07\00\01\13\t\0b\0b\00\00\t\06\0b\00\00\0b\00\06\11\00\00\00\11\11\11")
 (data (i32.const 38161) "\0b")
 (data (i32.const 38170) "\11\00\n\n\11\11\11\00\n\00\00\02\00\t\0b\00\00\00\t\00\0b\00\00\0b")
 (data (i32.const 38219) "\0c")
 (data (i32.const 38231) "\0c\00\00\00\00\0c\00\00\00\00\t\0c\00\00\00\00\00\0c\00\00\0c")
 (data (i32.const 38277) "\0e")
 (data (i32.const 38289) "\0d\00\00\00\04\0d\00\00\00\00\t\0e\00\00\00\00\00\0e\00\00\0e")
 (data (i32.const 38335) "\10")
 (data (i32.const 38347) "\0f\00\00\00\00\0f\00\00\00\00\t\10\00\00\00\00\00\10\00\00\10\00\00\12\00\00\00\12\12\12")
 (data (i32.const 38402) "\12\00\00\00\12\12\12\00\00\00\00\00\00\t")
 (data (i32.const 38451) "\0b")
 (data (i32.const 38463) "\n\00\00\00\00\n\00\00\00\00\t\0b\00\00\00\00\00\0b\00\00\0b")
 (data (i32.const 38509) "\0c")
 (data (i32.const 38521) "\0c\00\00\00\00\0c\00\00\00\00\t\0c\00\00\00\00\00\0c\00\00\0c\00\000123456789ABCDEFT!\"\19\0d\01\02\03\11K\1c\0c\10\04\0b\1d\12\1e\'hnopqb \05\06\0f\13\14\15\1a\08\16\07($\17\18\t\n\0e\1b\1f%#\83\82}&*+<=>?CGJMXYZ[\\]^_`acdefgijklrstyz{|")
 (data (i32.const 38656) "Illegal byte sequence\00Domain error\00Result not representable\00Not a tty\00Permission denied\00Operation not permitted\00No such file or directory\00No such process\00File exists\00Value too large for data type\00No space left on device\00Out of memory\00Resource busy\00Interrupted system call\00Resource temporarily unavailable\00Invalid seek\00Cross-device link\00Read-only file system\00Directory not empty\00Connection reset by peer\00Operation timed out\00Connection refused\00Host is down\00Host is unreachable\00Address in use\00Broken pipe\00I/O error\00No such device or address\00Block device required\00No such device\00Not a directory\00Is a directory\00Text file busy\00Exec format error\00Invalid argument\00Argument list too long\00Symbolic link loop\00Filename too long\00Too many open files in system\00No file descriptors available\00Bad file descriptor\00No child process\00Bad address\00File too large\00Too many links\00No locks available\00Resource deadlock would occur\00State not recoverable\00Previous owner died\00Operation canceled\00Function not implemented\00No message of desired type\00Identifier removed\00Device not a stream\00No data available\00Device timeout\00Out of streams resources\00Link has been severed\00Protocol error\00Bad message\00File descriptor in bad state\00Not a socket\00Destination address required\00Message too large\00Protocol wrong type for socket\00Protocol not available\00Protocol not supported\00Socket type not supported\00Not supported\00Protocol family not supported\00Address family not supported by protocol\00Address not available\00Network is down\00Network unreachable\00Connection reset by network\00Connection aborted\00No buffer space available\00Socket is connected\00Socket not connected\00Cannot send after socket shutdown\00Operation already in progress\00Operation in progress\00Stale file handle\00Remote I/O error\00Quota exceeded\00No medium found\00Wrong medium type\00No error information\00\00\00\00\00\00\80\bb\00\00x\00\00\00\15\00\00\00\15\00\00\00\00\9aY?\00\00\00\00\00\00\80?\00\00\80?\80\1a\00\00\03\00\00\00\08\00\00\00x\00\00\00\0b\00\00\00\b0\1a\00\00\a0\1b\00\00\d0\1b\00\00\80\07\00\00\03\00\00\00|\9e\00\00\b4\9e\00\00\ec\9e\00\00$\9f\00\00\b0\1d\00\00\88\01\00\00\d09\00\00\b0:\00\00@<\00\00\e0\01\00\00\87\88\08;\ff\ff\ff\ff\05\00`\00\03\00 \00\04\00\08\00\02\00\04\00\04\00\01")
 (data (i32.const 40616) "@O\00\00p=\00\00\00\00\00\00\f0\00\00\00\89\88\88;\01\00\00\00\05\000\00\03\00\10\00\04\00\04\00\04\00\01")
 (data (i32.const 40672) "`M\00\00p=\00\00\00\00\00\00x\00\00\00\88\88\08<\02\00\00\00\05\00\18\00\03\00\08\00\02\00\04\00\04\00\01")
 (data (i32.const 40728) "pL\00\00p=\00\00\00\00\00\00<\00\00\00\89\88\88<\03\00\00\00\05\00\0c\00\03\00\04\00\04\00\01")
 (data (i32.const 40784) "\f0<\00\00p=\00\00\00\00\00\00\0f\00\00\00\n\00\00\00\05\00\00\00\06\00\00\00\04\00\00\00\03\00\00\00W\b2\00\00\90U\00\00\a0U\00\00_\b2\00\00\c0U\00\00\d0U\00\00\f0U\00\00 V\00\00pV\00\00g\b2\00\00\10W\00\00 W\00\00 \00\n\00\14.d\01@W\00\00\80X\00\00\00[\00\00@[\00\00`[\00\00\00\\\00\00P\\\00\00\a0\\\00\00 \00\10\00f&\ab\01\c0\\\00\00\c0^\00\00\c0b\00\00\00c\00\00 c\00\00 d\00\00pd\00\00\c0d\00\00t\b2\00\00w\b2\00\00\e0z\00\00\00{\00\00\19\00\00\00 \00\00\00\00\00\00\00\e2\c8\00\000\8e\00\00\18\00\00\00\02\00\00\00\01\00\00\00\a0\93\00\00 \00\00\00\80\92\00\00 \00\00\00`\91\00\00 \00\00\00@\8f\00\00@\00\00\00\05")
 (data (i32.const 41040) "\01")
 (data (i32.const 41064) "\01\00\00\00\02\00\00\00\\\cb")
 (data (i32.const 41088) "\02")
 (data (i32.const 41103) "\ff\ff\ff\ff\ff")
 (data (i32.const 41152) "\b8~\9ay\9ayff\b8~3sd\00\f0\00 \00d\00\cd<\000\00 \13\f5\95\e6Y\12\f3)\1f\06T assertion failed: start <= end\00celt/bands.c\00assertion failed: end>0\00assertion failed: nbBands>0\00assertion failed: sum>=0\00assertion failed: N > 0\00assertion failed: stride>0\00assertion failed: itheta>=0\00assertion failed: qn <= 256\00Fatal (internal) error in %s, line %d: %s\n\00celt/celt.c\00assertion failed: st->signalling==0\00celt/celt_encoder.c\00\02\01\00assertion failed: !celt_isnan(freq[0]) && (C==1 || !celt_isnan(freq[N]))\00assertion failed: count>0\00\19\17\02\00~|wmW)\13\t\04\02\00assertion failed: !celt_isnan(tmp[0])\00assertion failed: !celt_isnan(norm)\00assertion failed: st->mode == opus_custom_mode_create(48000, 960, NULL)\00celt/celt_decoder.c\00assertion failed: st->overlap == 120\00assertion failed: st->downsample > 0\00assertion failed: st->start == 0 || st->start == 17\00assertion failed: st->start < st->end\00assertion failed: st->end <= 21\00assertion failed: st->last_pitch_index <= PLC_PITCH_LAG_MAX\00assertion failed: st->last_pitch_index >= PLC_PITCH_LAG_MIN || st->last_pitch_index == 0\00assertion failed: st->postfilter_period < MAX_PERIOD\00assertion failed: st->postfilter_period >= COMBFILTER_MINPERIOD || st->postfilter_period == 0\00assertion failed: st->postfilter_period_old < MAX_PERIOD\00assertion failed: st->postfilter_period_old >= COMBFILTER_MINPERIOD || st->postfilter_period_old == 0\00assertion failed: st->postfilter_tapset <= 2\00assertion failed: st->postfilter_tapset >= 0\00assertion failed: st->postfilter_tapset_old <= 2\00assertion failed: st->postfilter_tapset_old >= 0\00\02\01\00\19\17\02\00~|wmW)\13\t\04\02\00assertion failed: accum==0\00assertion failed: _k>0\00celt/cwrs.c\00assertion failed: _n>=2\00assertion failed: _n>1\00celt/entdec.c\00assertion failed: _ft>1\00celt/entenc.c\00assertion failed: _bits>0\00assertion failed: _nbits<=EC_SYM_BITS\00assertion failed: _this->offs+_this->end_offs<=_size\00assertion failed: m==4\00celt/kiss_fft.c\00assertion failed: fin != fout\nIn-place FFT not supported\00assertion failed: fl+fs<=32768\00celt/laplace.c\00assertion failed: fs>0\00assertion failed: fl<32768\00assertion failed: fl<=fm\00assertion failed: fm<IMIN(fl+fs,32768)\00assertion failed: max_pitch>0\00celt/pitch.c\00assertion failed: len>0\00assertion failed: x != y\00celt/celt_lpc.c\00assertion failed: len>=3\00./celt/pitch.h\00assertion failed: n>0\00assertion failed: overlap>=0\00\02\01\00assertion failed: codedBands > start\00celt/rate.c\00assertion failed: bits[j] >= 0\00assertion failed: ebits[j] >= 0\00assertion failed: C*ebits[j]<<BITRES == bits[j]\00assertion failed: K>0\nalg_quant() needs at least one pulse\00celt/vq.c\00assertion failed: N>1\nalg_quant() needs at least two dimensions\00assertion failed: K>0\nalg_unquant() needs at least one pulse\00assertion failed: N>1\nalg_unquant() needs at least two dimensions\00silk/CNG.c\00silk/decode_core.c\00assertion failed: psDec->LPC_order == 10 || psDec->LPC_order == 16\00assertion failed: L > 0 && L <= MAX_FRAME_LENGTH\00silk/decode_frame.c\00assertion failed: psDec->prevSignalType >= 0 && psDec->prevSignalType <= 2\00assertion failed: psDec->ltp_mem_length >= psDec->frame_length\00assertion failed: psDec->psNLSF_CB->order == psDec->LPC_order\00silk/decode_indices.c\00silk/decode_pulses.c\00silk/decoder_set_fs.c\00assertion failed: psDec->nb_subfr == MAX_NB_SUBFR || psDec->nb_subfr == MAX_NB_SUBFR/2\00assertion failed: psDec->frame_length > 0 && psDec->frame_length <= MAX_FRAME_LENGTH\00assertion failed: decControl->nChannelsInternal == 1 || decControl->nChannelsInternal == 2\00silk/dec_API.c\00silk/enc_API.c\00assertion failed: !ret\00assertion failed: encControl->nChannelsInternal == 1 || psEnc->state_Fxx[ 0 ].sCmn.fs_kHz == psEnc->state_Fxx[ 1 ].sCmn.fs_kHz\00assertion failed: encControl->nChannelsAPI == 1 && encControl->nChannelsInternal == 1\00assertion failed: psEnc->state_Fxx[ 0 ].sCmn.inputBufIx == psEnc->state_Fxx[ 0 ].sCmn.frame_length\00assertion failed: encControl->nChannelsInternal == 1 || psEnc->state_Fxx[ 1 ].sCmn.inputBufIx == psEnc->state_Fxx[ 1 ].sCmn.frame_length\00assertion failed: typeOffset >= 0 && typeOffset < 6\00silk/encode_indices.c\00assertion failed: encode_LBRR == 0 || typeOffset >= 2\00assertion failed: psEncC->psNLSF_CB->order == psEncC->predictLPCOrder\00assertion failed: frame_length == 12 * 10\00silk/encode_pulses.c\00assertion failed: ifact_Q2 >= 0\00silk/interpolate.c\00assertion failed: ifact_Q2 <= 4\00silk/NSQ.c\00assertion failed: lag > 0 || signalType != TYPE_VOICED\00assertion failed: start_idx > 0\00silk/NSQ_del_dec.c\00assertion failed: nStatesDelayedDecision > 0\00assertion failed: ( shapingLPCOrder & 1 ) == 0\00assertion failed: idx > 0\00silk/PLC.c\00assertion failed: psDec->LPC_order >= 10\00\b3c\00G8+\1e\15\0c\06\00\0f\83\8a\8a\9b\9b\ad\ad.\02ZW][Rb\08\10 @\00\cb\96\00\d7\c3\a6}nR\00x\00\80@\00\e8\9e\n\00\e6\00\f3\dd\c0\b5\00\abU\00\c0\80@\00\cd\9af3\00\d5\ab\80U+\00\e0\c0\a0\80`@ \00d(\10\07\03\01\00\bc\b0\9b\8awaC+\1a\n\00\a5wP=/#\1b\14\0e\t\04\00q?\00assertion failed: MAX_FRAME_LENGTH >= psEncC->frame_length\00silk/VAD.c\00assertion failed: psEncC->frame_length == 8 * silk_RSHIFT( psEncC->frame_length, 3 )\00assertion failed: signalType >= 0 && signalType <= 2\00silk/NLSF_encode.c\00assertion failed: ( LPC_order & 1 ) == 0\00silk/NLSF_VQ.c\00assertion failed: psEncC->useInterpolatedNLSFs == 1 || psEncC->indices.NLSFInterpCoef_Q2 == ( 1 << 2 )\00silk/process_NLSFs.c\00assertion failed: NLSF_mu_Q20 > 0\00assertion failed: psEncC->predictLPCOrder <= MAX_LPC_ORDER\00assertion failed: encControl != NULL\00silk/check_control_input.c\00assertion failed: Complexity >= 0 && Complexity <= 10\00silk/control_codec.c\00assertion failed: psEncC->pitchEstimationLPCOrder <= MAX_FIND_PITCH_LPC_ORDER\00assertion failed: psEncC->warping_Q16 <= 32767\00assertion failed: psEncC->la_shape <= LA_SHAPE_MAX\00assertion failed: psEncC->shapeWinLength <= SHAPE_LPC_WIN_MAX\00assertion failed: fs_kHz == 8 || fs_kHz == 12 || fs_kHz == 16\00assertion failed: psEnc->sCmn.nb_subfr == 2 || psEnc->sCmn.nb_subfr == 4\00assertion failed: ( psEnc->sCmn.subfr_length * psEnc->sCmn.nb_subfr ) == psEnc->sCmn.frame_length\00silk/decode_pitch.c\00assertion failed: d >= 6\00silk/LPC_analysis_filter.c\00assertion failed: (d & 1) == 0\00assertion failed: d <= len\00assertion failed: d==10 || d==16\00silk/NLSF2A.c\00\00\t\06\03\04\05\08\01\02\07assertion failed: D > 0\00silk/NLSF_VQ_weights_laroia.c\00assertion failed: ( D & 1 ) == 0\00\00\01\00\00\00\01\fd\07\fe\07\10\18\"silk/resampler.c\00\06\00\03\00\07\03\00\01\n\00\02\06\12\n\0c\04\00\02\00\00\00\t\04\07\04\00\03\0c\07\07assertion failed: inLen >= S->Fs_in_kHz\00assertion failed: S->inputDelay <= S->Fs_in_kHz\00silk/resampler_private_down_FIR.c\00silk/sort.c\00assertion failed: n < 25\00silk/stereo_encode_pred.c\00assertion failed: ix[ n ][ 0 ] < 3\00assertion failed: ix[ n ][ 1 ] < STEREO_QUANT_SUB_STEPS\00assertion failed: win_type == 1 || win_type == 2\00silk/float/apply_sine_window_FLP.c\00assertion failed: ( length & 3 ) == 0\00assertion failed: sRangeEnc_copy2.offs <= 1275\00silk/float/encode_frame_FLP.c\00assertion failed: psRangeEnc->offs <= 1275\00assertion failed: psEncC->indices.NLSFInterpCoef_Q2 == 4 || ( psEncC->useInterpolatedNLSFs && !psEncC->first_frame_after_reset && psEncC->nb_subfr == MAX_NB_SUBFR )\00silk/float/find_LPC_FLP.c\00assertion failed: buf_len >= psEnc->sCmn.pitch_LPC_win_length\00silk/float/find_pitch_lags_FLP.c\00assertion failed: psEnc->sCmn.ltp_mem_length - psEnc->sCmn.predictLPCOrder >= psEncCtrl->pitchL[ 0 ] + LTP_ORDER / 2\00silk/float/find_pred_coefs_FLP.c\00assertion failed: Order <= length\00silk/float/LPC_analysis_filter_FLP.c\00assertion failed: ( order & 1 ) == 0\00silk/float/warped_autocorrelation_FLP.c\00assertion failed: subfr_length * nb_subfr <= MAX_FRAME_SIZE\00silk/float/burg_modified_FLP.c\00assertion failed: Fs_kHz == 8 || Fs_kHz == 12 || Fs_kHz == 16\00silk/float/pitch_analysis_core_FLP.c\00assertion failed: complexity >= SILK_PE_MIN_COMPLEX\00assertion failed: complexity <= SILK_PE_MAX_COMPLEX\00assertion failed: Fs_kHz == 8\00assertion failed: target_ptr + sf_length_8kHz <= frame_4kHz + frame_length_4kHz\00assertion failed: basis_ptr >= frame_4kHz\00assertion failed: basis_ptr + sf_length_8kHz <= frame_4kHz + frame_length_4kHz\00assertion failed: 3 * length_d_srch <= PE_D_SRCH_LENGTH\00assertion failed: length_d_srch > 0\00assertion failed: *lagIndex >= 0\00assertion failed: nb_subfr == PE_MAX_NB_SUBFR >> 1\00assertion failed: order >= 0 && order <= SILK_MAX_ORDER_LPC\00silk/float/schur_FLP.c\00assertion failed: K > 0\00silk/float/sort_FLP.c\00assertion failed: L > 0\00assertion failed: L >= K\00assertion failed: pcm_count == frame_size\00src/opus_decoder.c\00assertion failed: ret==frame_size-packet_frame_size\00assertion failed: ret==packet_frame_size\00assertion failed: 0\00assertion failed: (opus_custom_decoder_ctl(celt_dec, 10012, (((void)((endband) == (opus_int32)0)), (opus_int32)(endband)))) == OPUS_OK\00assertion failed: (opus_custom_decoder_ctl(celt_dec, 10008, (((void)((st->stream_channels) == (opus_int32)0)), (opus_int32)(st->stream_channels)))) == OPUS_OK\00assertion failed: (opus_custom_decoder_ctl(celt_dec, 10010, (((void)((0) == (opus_int32)0)), (opus_int32)(0)))) == OPUS_OK\00assertion failed: (opus_custom_decoder_ctl(celt_dec, 4031, ((&redundant_rng) + ((&redundant_rng) - (opus_uint32*)(&redundant_rng))))) == OPUS_OK\00assertion failed: (opus_custom_decoder_ctl(celt_dec, 10010, (((void)((start_band) == (opus_int32)0)), (opus_int32)(start_band)))) == OPUS_OK\00assertion failed: (opus_custom_decoder_ctl(celt_dec, 4028)) == OPUS_OK\00assertion failed: (opus_custom_decoder_ctl(celt_dec, 10015, ((&celt_mode) + ((&celt_mode) - (const OpusCustomMode**)(&celt_mode))))) == OPUS_OK\00assertion failed: st->channels == 1 || st->channels == 2\00assertion failed: st->Fs == 48000 || st->Fs == 24000 || st->Fs == 16000 || st->Fs == 12000 || st->Fs == 8000\00assertion failed: st->DecControl.API_sampleRate == st->Fs\00assertion failed: st->DecControl.internalSampleRate == 0 || st->DecControl.internalSampleRate == 16000 || st->DecControl.internalSampleRate == 12000 || st->DecControl.internalSampleRate == 8000\00assertion failed: st->DecControl.nChannelsAPI == st->channels\00assertion failed: st->DecControl.nChannelsInternal == 0 || st->DecControl.nChannelsInternal == 1 || st->DecControl.nChannelsInternal == 2\00assertion failed: st->DecControl.payloadSize_ms == 0 || st->DecControl.payloadSize_ms == 10 || st->DecControl.payloadSize_ms == 20 || st->DecControl.payloadSize_ms == 40 || st->DecControl.payloadSize_ms == 60\00assertion failed: st->arch >= 0\00assertion failed: st->arch <= OPUS_ARCHMASK\00assertion failed: st->stream_channels == 1 || st->stream_channels == 2\00assertion failed: st->mode == MODE_HYBRID || curr_bandwidth == OPUS_BANDWIDTH_WIDEBAND\00src/opus_encoder.c\00assertion failed: st->silk_mode.internalSampleRate == 16000\00\0eu-+   0X0x\00(null)\00-0X+0X 0X-0x+0x 0x\00inf\00INF\00nan\00NAN\00.")
 (import "env" "table" (table 16 16 anyfunc))
 (elem (get_global $tableBase) $b0 $___stdio_close $b1 $___stdio_write $___stdio_seek $b1 $b2 $_resampler_basic_direct_double $_resampler_basic_direct_single $_resampler_basic_interpolate_double $_resampler_basic_interpolate_single $_resampler_basic_zero $b2 $b2 $b3 $_downmix_float)
 (import "env" "tableBase" (global $tableBase i32))
 (import "env" "DYNAMICTOP_PTR" (global $DYNAMICTOP_PTR$asm2wasm$import i32))
 (import "env" "STACKTOP" (global $STACKTOP$asm2wasm$import i32))
 (import "env" "STACK_MAX" (global $STACK_MAX$asm2wasm$import i32))
 (import "global.Math" "exp" (func $Math_exp (param f64) (result f64)))
 (import "global.Math" "log" (func $Math_log (param f64) (result f64)))
 (import "env" "abort" (func $abort (param i32)))
 (import "env" "enlargeMemory" (func $enlargeMemory (result i32)))
 (import "env" "getTotalMemory" (func $getTotalMemory (result i32)))
 (import "env" "abortOnCannotGrowMemory" (func $abortOnCannotGrowMemory (result i32)))
 (import "env" "___setErrNo" (func $___setErrNo (param i32)))
 (import "env" "___syscall140" (func $___syscall140 (param i32 i32) (result i32)))
 (import "env" "___syscall146" (func $___syscall146 (param i32 i32) (result i32)))
 (import "env" "___syscall6" (func $___syscall6 (param i32 i32) (result i32)))
 (import "env" "_abort" (func $_abort))
 (import "env" "_emscripten_memcpy_big" (func $_emscripten_memcpy_big (param i32 i32 i32) (result i32)))
 (import "env" "_llvm_cos_f64" (func $_llvm_cos_f64 (param f64) (result f64)))
 (import "env" "_llvm_exp2_f64" (func $_llvm_exp2_f64 (param f64) (result f64)))
 (import "env" "_llvm_log10_f64" (func $_llvm_log10_f64 (param f64) (result f64)))
 (import "env" "_llvm_sin_f64" (func $_llvm_sin_f64 (param f64) (result f64)))
 (import "env" "_llvm_stackrestore" (func $_llvm_stackrestore (param i32)))
 (import "env" "_llvm_stacksave" (func $_llvm_stacksave (result i32)))
 (global $DYNAMICTOP_PTR (mut i32) (get_global $DYNAMICTOP_PTR$asm2wasm$import))
 (global $STACKTOP (mut i32) (get_global $STACKTOP$asm2wasm$import))
 (global $STACK_MAX (mut i32) (get_global $STACK_MAX$asm2wasm$import))
 (global $__THREW__ (mut i32) (i32.const 0))
 (global $threwValue (mut i32) (i32.const 0))
 (global $tempRet0 (mut i32) (i32.const 0))
 (export "_free" (func $_free))
 (export "_llvm_bswap_i32" (func $_llvm_bswap_i32))
 (export "_malloc" (func $_malloc))
 (export "_memcpy" (func $_memcpy))
 (export "_memmove" (func $_memmove))
 (export "_memset" (func $_memset))
 (export "_opus_decode_float" (func $_opus_decode_float))
 (export "_opus_decoder_create" (func $_opus_decoder_create))
 (export "_opus_decoder_destroy" (func $_opus_decoder_destroy))
 (export "_opus_encode_float" (func $_opus_encode_float))
 (export "_opus_encoder_create" (func $_opus_encoder_create))
 (export "_opus_encoder_ctl" (func $_opus_encoder_ctl))
 (export "_rintf" (func $_rintf))
 (export "_sbrk" (func $_sbrk))
 (export "_speex_resampler_destroy" (func $_speex_resampler_destroy))
 (export "_speex_resampler_init" (func $_speex_resampler_init))
 (export "_speex_resampler_process_interleaved_float" (func $_speex_resampler_process_interleaved_float))
 (export "dynCall_ii" (func $dynCall_ii))
 (export "dynCall_iiii" (func $dynCall_iiii))
 (export "dynCall_iiiiiii" (func $dynCall_iiiiiii))
 (export "dynCall_viiiiiii" (func $dynCall_viiiiiii))
 (export "establishStackSpace" (func $establishStackSpace))
 (export "getTempRet0" (func $getTempRet0))
 (export "runPostSets" (func $runPostSets))
 (export "setTempRet0" (func $setTempRet0))
 (export "setThrew" (func $setThrew))
 (export "stackAlloc" (func $stackAlloc))
 (export "stackRestore" (func $stackRestore))
 (export "stackSave" (func $stackSave))
 (func $stackAlloc (; 18 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (set_local $1
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (get_local $0)
   )
  )
  (set_global $STACKTOP
   (i32.and
    (i32.add
     (get_global $STACKTOP)
     (i32.const 15)
    )
    (i32.const -16)
   )
  )
  (get_local $1)
 )
 (func $stackSave (; 19 ;) (; has Stack IR ;) (result i32)
  (get_global $STACKTOP)
 )
 (func $stackRestore (; 20 ;) (; has Stack IR ;) (param $0 i32)
  (set_global $STACKTOP
   (get_local $0)
  )
 )
 (func $establishStackSpace (; 21 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (set_global $STACKTOP
   (get_local $0)
  )
  (set_global $STACK_MAX
   (get_local $1)
  )
 )
 (func $setThrew (; 22 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (if
   (i32.eqz
    (get_global $__THREW__)
   )
   (block
    (set_global $__THREW__
     (get_local $0)
    )
    (set_global $threwValue
     (get_local $1)
    )
   )
  )
 )
 (func $setTempRet0 (; 23 ;) (; has Stack IR ;) (param $0 i32)
  (set_global $tempRet0
   (get_local $0)
  )
 )
 (func $getTempRet0 (; 24 ;) (; has Stack IR ;) (result i32)
  (get_global $tempRet0)
 )
 (func $_hysteresis_decision (; 25 ;) (; has Stack IR ;) (param $0 f32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (loop $while-in
   (block $while-out
    (br_if $while-out
     (i32.ge_u
      (get_local $2)
      (i32.const 21)
     )
    )
    (br_if $while-out
     (f32.gt
      (f32.load
       (i32.add
        (i32.shl
         (get_local $2)
         (i32.const 2)
        )
        (i32.const 1280)
       )
      )
      (get_local $0)
     )
    )
    (set_local $2
     (i32.add
      (get_local $2)
      (i32.const 1)
     )
    )
    (br $while-in)
   )
  )
  (if
   (i32.gt_s
    (get_local $2)
    (get_local $1)
   )
   (if
    (f32.gt
     (f32.add
      (f32.load
       (i32.add
        (i32.shl
         (get_local $1)
         (i32.const 2)
        )
        (i32.const 1280)
       )
      )
      (f32.load
       (i32.add
        (i32.shl
         (get_local $1)
         (i32.const 2)
        )
        (i32.const 1376)
       )
      )
     )
     (get_local $0)
    )
    (return
     (get_local $1)
    )
   )
  )
  (if
   (i32.ge_s
    (get_local $2)
    (get_local $1)
   )
   (return
    (get_local $2)
   )
  )
  (if
   (i32.eqz
    (f32.lt
     (f32.sub
      (f32.load
       (i32.add
        (i32.shl
         (tee_local $3
          (i32.add
           (get_local $1)
           (i32.const -1)
          )
         )
         (i32.const 2)
        )
        (i32.const 1280)
       )
      )
      (f32.load
       (i32.add
        (i32.shl
         (get_local $3)
         (i32.const 2)
        )
        (i32.const 1376)
       )
      )
     )
     (get_local $0)
    )
   )
   (return
    (get_local $2)
   )
  )
  (get_local $1)
 )
 (func $_celt_lcg_rand (; 26 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (i32.add
   (i32.mul
    (get_local $0)
    (i32.const 1664525)
   )
   (i32.const 1013904223)
  )
 )
 (func $_bitexact_cos (; 27 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (set_local $0
   (i32.shr_s
    (i32.shl
     (tee_local $1
      (i32.shr_u
       (i32.add
        (i32.mul
         (tee_local $0
          (i32.shr_s
           (i32.shl
            (get_local $0)
            (i32.const 16)
           )
           (i32.const 16)
          )
         )
         (get_local $0)
        )
        (i32.const 4096)
       )
       (i32.const 13)
      )
     )
     (i32.const 16)
    )
    (i32.const 16)
   )
  )
  (i32.and
   (i32.add
    (i32.sub
     (i32.shr_u
      (i32.add
       (i32.mul
        (get_local $0)
        (i32.shr_s
         (i32.add
          (i32.shl
           (i32.shr_u
            (i32.add
             (i32.mul
              (get_local $0)
              (i32.add
               (i32.shr_s
                (i32.add
                 (i32.mul
                  (get_local $0)
                  (i32.const -626)
                 )
                 (i32.const 16384)
                )
                (i32.const 15)
               )
               (i32.const 8277)
              )
             )
             (i32.const 16384)
            )
            (i32.const 15)
           )
           (i32.const 16)
          )
          (i32.const -501415936)
         )
         (i32.const 16)
        )
       )
       (i32.const 16384)
      )
      (i32.const 15)
     )
     (get_local $1)
    )
    (i32.const 32768)
   )
   (i32.const 65535)
  )
 )
 (func $_bitexact_log2tan (; 28 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (set_local $0
   (i32.shr_s
    (i32.shl
     (i32.shl
      (get_local $0)
      (i32.sub
       (i32.const 15)
       (tee_local $2
        (i32.sub
         (i32.const 32)
         (i32.clz
          (get_local $0)
         )
        )
       )
      )
     )
     (i32.const 16)
    )
    (i32.const 16)
   )
  )
  (set_local $1
   (i32.shr_s
    (i32.shl
     (i32.shl
      (get_local $1)
      (i32.sub
       (i32.const 15)
       (tee_local $3
        (i32.sub
         (i32.const 32)
         (i32.clz
          (get_local $1)
         )
        )
       )
      )
     )
     (i32.const 16)
    )
    (i32.const 16)
   )
  )
  (i32.sub
   (i32.add
    (i32.shl
     (i32.sub
      (get_local $2)
      (get_local $3)
     )
     (i32.const 11)
    )
    (i32.shr_s
     (i32.add
      (i32.mul
       (get_local $0)
       (i32.add
        (i32.shr_s
         (i32.add
          (i32.mul
           (get_local $0)
           (i32.const -2597)
          )
          (i32.const 16384)
         )
         (i32.const 15)
        )
        (i32.const 7932)
       )
      )
      (i32.const 16384)
     )
     (i32.const 15)
    )
   )
   (i32.shr_s
    (i32.add
     (i32.mul
      (get_local $1)
      (i32.add
       (i32.shr_s
        (i32.add
         (i32.mul
          (get_local $1)
          (i32.const -2597)
         )
         (i32.const 16384)
        )
        (i32.const 15)
       )
       (i32.const 7932)
      )
     )
     (i32.const 16384)
    )
    (i32.const 15)
   )
  )
 )
 (func $_compute_band_energies (; 29 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 f32)
  (set_local $8
   (i32.load offset=32
    (get_local $0)
   )
  )
  (set_local $9
   (i32.shl
    (i32.load offset=44
     (get_local $0)
    )
    (get_local $5)
   )
  )
  (set_local $10
   (i32.add
    (get_local $0)
    (i32.const 8)
   )
  )
  (loop $while-in
   (set_local $11
    (i32.mul
     (get_local $6)
     (get_local $9)
    )
   )
   (set_local $0
    (i32.const 0)
   )
   (loop $while-in1
    (if
     (i32.lt_s
      (get_local $0)
      (get_local $3)
     )
     (block
      (set_local $13
       (f32.sqrt
        (f32.add
         (call $_celt_inner_prod_c
          (tee_local $7
           (i32.add
            (get_local $1)
            (i32.shl
             (i32.add
              (get_local $11)
              (i32.shl
               (tee_local $12
                (i32.load16_s
                 (i32.add
                  (get_local $8)
                  (i32.shl
                   (get_local $0)
                   (i32.const 1)
                  )
                 )
                )
               )
               (get_local $5)
              )
             )
             (i32.const 2)
            )
           )
          )
          (get_local $7)
          (i32.shl
           (i32.sub
            (i32.load16_s
             (i32.add
              (get_local $8)
              (i32.shl
               (tee_local $7
                (i32.add
                 (get_local $0)
                 (i32.const 1)
                )
               )
               (i32.const 1)
              )
             )
            )
            (get_local $12)
           )
           (get_local $5)
          )
         )
         (f32.const 1.0000000272452012e-27)
        )
       )
      )
      (f32.store
       (i32.add
        (get_local $2)
        (i32.shl
         (i32.add
          (get_local $0)
          (i32.mul
           (get_local $6)
           (i32.load
            (get_local $10)
           )
          )
         )
         (i32.const 2)
        )
       )
       (get_local $13)
      )
      (set_local $0
       (get_local $7)
      )
      (br $while-in1)
     )
    )
   )
   (br_if $while-in
    (i32.lt_s
     (tee_local $6
      (i32.add
       (get_local $6)
       (i32.const 1)
      )
     )
     (get_local $4)
    )
   )
  )
 )
 (func $_celt_inner_prod_c (; 30 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result f32)
  (local $3 i32)
  (local $4 f32)
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $3)
     (get_local $2)
    )
    (block
     (set_local $4
      (f32.add
       (get_local $4)
       (f32.mul
        (f32.load
         (i32.add
          (get_local $0)
          (i32.shl
           (get_local $3)
           (i32.const 2)
          )
         )
        )
        (f32.load
         (i32.add
          (get_local $1)
          (i32.shl
           (get_local $3)
           (i32.const 2)
          )
         )
        )
       )
      )
     )
     (set_local $3
      (i32.add
       (get_local $3)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (get_local $4)
 )
 (func $_normalise_bands (; 31 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 f32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (set_local $8
   (i32.load offset=32
    (get_local $0)
   )
  )
  (set_local $9
   (i32.mul
    (i32.load offset=44
     (get_local $0)
    )
    (get_local $6)
   )
  )
  (set_local $10
   (i32.add
    (get_local $0)
    (i32.const 8)
   )
  )
  (loop $while-in
   (set_local $11
    (i32.mul
     (get_local $7)
     (get_local $9)
    )
   )
   (set_local $0
    (i32.const 0)
   )
   (loop $while-in1
    (if
     (i32.lt_s
      (get_local $0)
      (get_local $4)
     )
     (block
      (set_local $12
       (f32.div
        (f32.const 1)
        (f32.add
         (f32.load
          (i32.add
           (get_local $3)
           (i32.shl
            (i32.add
             (get_local $0)
             (i32.mul
              (get_local $7)
              (i32.load
               (get_local $10)
              )
             )
            )
            (i32.const 2)
           )
          )
         )
         (f32.const 1.0000000272452012e-27)
        )
       )
      )
      (set_local $14
       (i32.mul
        (i32.load16_s
         (i32.add
          (get_local $8)
          (i32.shl
           (tee_local $13
            (i32.add
             (get_local $0)
             (i32.const 1)
            )
           )
           (i32.const 1)
          )
         )
        )
        (get_local $6)
       )
      )
      (set_local $0
       (i32.mul
        (i32.load16_s
         (i32.add
          (get_local $8)
          (i32.shl
           (get_local $0)
           (i32.const 1)
          )
         )
        )
        (get_local $6)
       )
      )
      (loop $while-in3
       (if
        (i32.lt_s
         (get_local $0)
         (get_local $14)
        )
        (block
         (f32.store
          (i32.add
           (get_local $2)
           (i32.shl
            (tee_local $15
             (i32.add
              (get_local $0)
              (get_local $11)
             )
            )
            (i32.const 2)
           )
          )
          (f32.mul
           (f32.load
            (i32.add
             (get_local $1)
             (i32.shl
              (get_local $15)
              (i32.const 2)
             )
            )
           )
           (get_local $12)
          )
         )
         (set_local $0
          (i32.add
           (get_local $0)
           (i32.const 1)
          )
         )
         (br $while-in3)
        )
       )
      )
      (set_local $0
       (get_local $13)
      )
      (br $while-in1)
     )
    )
   )
   (br_if $while-in
    (i32.lt_s
     (tee_local $7
      (i32.add
       (get_local $7)
       (i32.const 1)
      )
     )
     (get_local $5)
    )
   )
  )
 )
 (func $_denormalise_bands (; 32 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (param $8 i32) (param $9 i32)
  (local $10 i32)
  (local $11 f32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (set_local $12
   (i32.mul
    (get_local $1)
    (get_local $7)
   )
  )
  (set_local $1
   (i32.mul
    (i32.load16_s
     (i32.add
      (get_local $0)
      (i32.shl
       (get_local $6)
       (i32.const 1)
      )
     )
    )
    (get_local $7)
   )
  )
  (if
   (i32.ne
    (get_local $8)
    (i32.const 1)
   )
   (if
    (i32.ge_s
     (get_local $1)
     (tee_local $8
      (i32.div_s
       (get_local $12)
       (get_local $8)
      )
     )
    )
    (set_local $1
     (get_local $8)
    )
   )
  )
  (set_local $13
   (if (result i32)
    (tee_local $8
     (i32.eqz
      (get_local $9)
     )
    )
    (get_local $6)
    (i32.const 0)
   )
  )
  (set_local $9
   (if (result i32)
    (get_local $8)
    (get_local $5)
    (i32.const 0)
   )
  )
  (set_local $14
   (if (result i32)
    (get_local $8)
    (get_local $1)
    (i32.const 0)
   )
  )
  (set_local $6
   (i32.mul
    (tee_local $5
     (i32.load16_s
      (tee_local $8
       (i32.add
        (get_local $0)
        (i32.shl
         (get_local $9)
         (i32.const 1)
        )
       )
      )
     )
    )
    (get_local $7)
   )
  )
  (set_local $1
   (get_local $3)
  )
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $10)
     (i32.mul
      (i32.shr_s
       (i32.shl
        (get_local $5)
        (i32.const 16)
       )
       (i32.const 16)
      )
      (get_local $7)
     )
    )
    (block
     (f32.store
      (get_local $1)
      (f32.const 0)
     )
     (set_local $1
      (i32.add
       (get_local $1)
       (i32.const 4)
      )
     )
     (set_local $10
      (i32.add
       (get_local $10)
       (i32.const 1)
      )
     )
     (set_local $5
      (i32.load16_s
       (get_local $8)
      )
     )
     (br $while-in)
    )
   )
  )
  (set_local $2
   (i32.add
    (get_local $2)
    (i32.shl
     (get_local $6)
     (i32.const 2)
    )
   )
  )
  (set_local $5
   (get_local $9)
  )
  (loop $while-in1
   (if
    (i32.lt_s
     (get_local $5)
     (get_local $13)
    )
    (block
     (set_local $6
      (i32.mul
       (i32.load16_s
        (i32.add
         (get_local $0)
         (i32.shl
          (get_local $5)
          (i32.const 1)
         )
        )
       )
       (get_local $7)
      )
     )
     (set_local $15
      (i32.mul
       (i32.load16_s
        (i32.add
         (get_local $0)
         (i32.shl
          (tee_local $10
           (i32.add
            (get_local $5)
            (i32.const 1)
           )
          )
          (i32.const 1)
         )
        )
       )
       (get_local $7)
      )
     )
     (set_local $11
      (f32.demote/f64
       (call $Math_exp
        (f64.mul
         (f64.promote/f32
          (if (result f32)
           (f32.gt
            (tee_local $11
             (f32.add
              (f32.load
               (i32.add
                (get_local $4)
                (i32.shl
                 (get_local $5)
                 (i32.const 2)
                )
               )
              )
              (f32.load
               (i32.add
                (i32.shl
                 (get_local $5)
                 (i32.const 2)
                )
                (i32.const 21312)
               )
              )
             )
            )
            (f32.const 32)
           )
           (f32.const 32)
           (get_local $11)
          )
         )
         (f64.const 0.6931471805599453)
        )
       )
      )
     )
     (set_local $5
      (get_local $6)
     )
     (set_local $8
      (get_local $2)
     )
     (set_local $6
      (get_local $1)
     )
     (loop $while-in3
      (set_local $2
       (i32.add
        (get_local $8)
        (i32.const 4)
       )
      )
      (set_local $1
       (i32.add
        (get_local $6)
        (i32.const 4)
       )
      )
      (f32.store
       (get_local $6)
       (f32.mul
        (f32.load
         (get_local $8)
        )
        (get_local $11)
       )
      )
      (if
       (i32.lt_s
        (tee_local $5
         (i32.add
          (get_local $5)
          (i32.const 1)
         )
        )
        (get_local $15)
       )
       (block
        (set_local $8
         (get_local $2)
        )
        (set_local $6
         (get_local $1)
        )
        (br $while-in3)
       )
      )
     )
     (set_local $5
      (get_local $10)
     )
     (br $while-in1)
    )
   )
  )
  (if
   (i32.gt_s
    (get_local $9)
    (get_local $13)
   )
   (call $_celt_fatal
    (i32.const 41190)
    (i32.const 41221)
    (i32.const 263)
   )
   (drop
    (call $_memset
     (i32.add
      (get_local $3)
      (i32.shl
       (get_local $14)
       (i32.const 2)
      )
     )
     (i32.const 0)
     (i32.shl
      (i32.sub
       (get_local $12)
       (get_local $14)
      )
      (i32.const 2)
     )
    )
   )
  )
 )
 (func $_anti_collapse (; 33 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (param $8 i32) (param $9 i32) (param $10 i32) (param $11 i32) (param $12 i32)
  (local $13 f32)
  (local $14 i32)
  (local $15 f32)
  (local $16 i32)
  (local $17 f32)
  (local $18 i32)
  (local $19 i32)
  (local $20 f32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local $26 i32)
  (local $27 i32)
  (local $28 f32)
  (local $29 i32)
  (local $30 i32)
  (set_local $18
   (i32.add
    (get_local $0)
    (i32.const 32)
   )
  )
  (set_local $22
   (i32.add
    (get_local $0)
    (i32.const 8)
   )
  )
  (set_local $23
   (i32.eq
    (get_local $4)
    (i32.const 1)
   )
  )
  (set_local $24
   (i32.eq
    (get_local $3)
    (i32.const 3)
   )
  )
  (set_local $25
   (i32.shl
    (i32.const 1)
    (get_local $3)
   )
  )
  (set_local $0
   (get_local $12)
  )
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $6)
     (get_local $7)
    )
    (block
     (set_local $20
      (f32.mul
       (f32.demote/f64
        (call $Math_exp
         (f64.mul
          (f64.promote/f32
           (f32.mul
            (f32.convert_s/i32
             (i32.shr_u
              (call $_celt_udiv
               (i32.add
                (i32.load
                 (i32.add
                  (get_local $11)
                  (i32.shl
                   (get_local $6)
                   (i32.const 2)
                  )
                 )
                )
                (i32.const 1)
               )
               (tee_local $19
                (i32.sub
                 (i32.load16_s
                  (i32.add
                   (tee_local $12
                    (i32.load
                     (get_local $18)
                    )
                   )
                   (i32.shl
                    (tee_local $26
                     (i32.add
                      (get_local $6)
                      (i32.const 1)
                     )
                    )
                    (i32.const 1)
                   )
                  )
                 )
                 (i32.load16_s
                  (i32.add
                   (get_local $12)
                   (i32.shl
                    (get_local $6)
                    (i32.const 1)
                   )
                  )
                 )
                )
               )
              )
              (get_local $3)
             )
            )
            (f32.const -0.125)
           )
          )
          (f64.const 0.6931471805599453)
         )
        )
       )
       (f32.const 0.5)
      )
     )
     (set_local $28
      (f32.div
       (f32.const 1)
       (f32.demote/f64
        (f64.sqrt
         (f64.convert_s/i32
          (tee_local $27
           (i32.shl
            (get_local $19)
            (get_local $3)
           )
          )
         )
        )
       )
      )
     )
     (set_local $29
      (i32.mul
       (get_local $6)
       (get_local $4)
      )
     )
     (set_local $16
      (i32.const 0)
     )
     (loop $while-in1
      (set_local $15
       (f32.load
        (i32.add
         (get_local $9)
         (i32.shl
          (tee_local $12
           (i32.add
            (i32.mul
             (get_local $16)
             (tee_local $14
              (i32.load
               (get_local $22)
              )
             )
            )
            (get_local $6)
           )
          )
          (i32.const 2)
         )
        )
       )
      )
      (set_local $13
       (f32.load
        (i32.add
         (get_local $10)
         (i32.shl
          (get_local $12)
          (i32.const 2)
         )
        )
       )
      )
      (if
       (get_local $23)
       (block
        (if
         (i32.eqz
          (f32.gt
           (get_local $15)
           (tee_local $17
            (f32.load
             (i32.add
              (get_local $9)
              (i32.shl
               (tee_local $14
                (i32.add
                 (get_local $14)
                 (get_local $6)
                )
               )
               (i32.const 2)
              )
             )
            )
           )
          )
         )
         (set_local $15
          (get_local $17)
         )
        )
        (if
         (i32.eqz
          (f32.gt
           (get_local $13)
           (tee_local $17
            (f32.load
             (i32.add
              (get_local $10)
              (i32.shl
               (get_local $14)
               (i32.const 2)
              )
             )
            )
           )
          )
         )
         (set_local $13
          (get_local $17)
         )
        )
       )
      )
      (set_local $13
       (f32.mul
        (tee_local $15
         (f32.mul
          (f32.demote/f64
           (call $Math_exp
            (f64.mul
             (f64.promote/f32
              (f32.neg
               (if (result f32)
                (f32.lt
                 (tee_local $13
                  (f32.sub
                   (f32.load
                    (i32.add
                     (get_local $8)
                     (i32.shl
                      (get_local $12)
                      (i32.const 2)
                     )
                    )
                   )
                   (if (result f32)
                    (f32.lt
                     (get_local $15)
                     (get_local $13)
                    )
                    (get_local $15)
                    (get_local $13)
                   )
                  )
                 )
                 (f32.const 0)
                )
                (f32.const 0)
                (get_local $13)
               )
              )
             )
             (f64.const 0.6931471805599453)
            )
           )
          )
          (f32.const 2)
         )
        )
        (f32.const 1.4142135381698608)
       )
      )
      (set_local $21
       (i32.add
        (i32.add
         (get_local $1)
         (i32.shl
          (i32.mul
           (get_local $16)
           (get_local $5)
          )
          (i32.const 2)
         )
        )
        (i32.shl
         (i32.shl
          (i32.load16_s
           (i32.add
            (i32.load
             (get_local $18)
            )
            (i32.shl
             (get_local $6)
             (i32.const 1)
            )
           )
          )
          (get_local $3)
         )
         (i32.const 2)
        )
       )
      )
      (set_local $30
       (i32.add
        (get_local $2)
        (i32.add
         (get_local $29)
         (get_local $16)
        )
       )
      )
      (set_local $15
       (f32.neg
        (tee_local $13
         (f32.mul
          (if (result f32)
           (f32.lt
            (get_local $20)
            (if (result f32)
             (get_local $24)
             (get_local $13)
             (tee_local $13
              (get_local $15)
             )
            )
           )
           (get_local $20)
           (get_local $13)
          )
          (get_local $28)
         )
        )
       )
      )
      (set_local $12
       (i32.const 0)
      )
      (set_local $14
       (i32.const 0)
      )
      (loop $while-in3
       (if
        (i32.lt_s
         (get_local $14)
         (get_local $25)
        )
        (block
         (block $label$break$L13
          (if
           (i32.eqz
            (i32.and
             (i32.shl
              (i32.const 1)
              (get_local $14)
             )
             (i32.load8_u
              (get_local $30)
             )
            )
           )
           (block
            (set_local $12
             (i32.const 0)
            )
            (loop $while-in5
             (if
              (i32.ge_s
               (get_local $12)
               (get_local $19)
              )
              (block
               (set_local $12
                (i32.const 1)
               )
               (br $label$break$L13)
              )
             )
             (set_local $0
              (call $_celt_lcg_rand
               (get_local $0)
              )
             )
             (f32.store
              (i32.add
               (get_local $21)
               (i32.shl
                (i32.add
                 (i32.shl
                  (get_local $12)
                  (get_local $3)
                 )
                 (get_local $14)
                )
                (i32.const 2)
               )
              )
              (if (result f32)
               (i32.and
                (get_local $0)
                (i32.const 32768)
               )
               (get_local $13)
               (get_local $15)
              )
             )
             (set_local $12
              (i32.add
               (get_local $12)
               (i32.const 1)
              )
             )
             (br $while-in5)
            )
           )
          )
         )
         (set_local $14
          (i32.add
           (get_local $14)
           (i32.const 1)
          )
         )
         (br $while-in3)
        )
       )
      )
      (if
       (get_local $12)
       (call $_renormalise_vector
        (get_local $21)
        (get_local $27)
        (f32.const 1)
       )
      )
      (br_if $while-in1
       (i32.lt_s
        (tee_local $16
         (i32.add
          (get_local $16)
          (i32.const 1)
         )
        )
        (get_local $4)
       )
      )
     )
     (set_local $6
      (get_local $26)
     )
     (br $while-in)
    )
   )
  )
 )
 (func $_celt_udiv (; 34 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (i32.div_u
   (get_local $0)
   (get_local $1)
  )
 )
 (func $_spreading_decision (; 35 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (param $8 i32) (param $9 i32) (param $10 i32) (result i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 f32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local $26 i32)
  (local $27 f32)
  (set_local $16
   (i32.load offset=32
    (get_local $0)
   )
  )
  (if
   (i32.le_s
    (get_local $7)
    (i32.const 0)
   )
   (call $_celt_fatal
    (i32.const 41234)
    (i32.const 41221)
    (i32.const 489)
   )
  )
  (set_local $13
   (i32.load offset=44
    (get_local $0)
   )
  )
  (if
   (i32.lt_s
    (i32.mul
     (i32.sub
      (i32.load16_s
       (i32.add
        (get_local $16)
        (i32.shl
         (get_local $7)
         (i32.const 1)
        )
       )
      )
      (i32.load16_s
       (i32.add
        (get_local $16)
        (i32.shl
         (i32.add
          (get_local $7)
          (i32.const -1)
         )
         (i32.const 1)
        )
       )
      )
     )
     (get_local $9)
    )
    (i32.const 9)
   )
   (return
    (i32.const 0)
   )
  )
  (set_local $23
   (i32.mul
    (get_local $13)
    (get_local $9)
   )
  )
  (set_local $22
   (i32.add
    (get_local $0)
    (i32.const 8)
   )
  )
  (set_local $0
   (i32.const 0)
  )
  (set_local $13
   (i32.const 0)
  )
  (loop $while-in
   (set_local $24
    (i32.mul
     (get_local $20)
     (get_local $23)
    )
   )
   (set_local $11
    (i32.const 0)
   )
   (loop $while-in1
    (if
     (i32.ne
      (get_local $11)
      (get_local $7)
     )
     (block
      (set_local $25
       (i32.add
        (i32.add
         (get_local $1)
         (i32.shl
          (i32.mul
           (tee_local $12
            (i32.load16_s
             (i32.add
              (get_local $16)
              (i32.shl
               (get_local $11)
               (i32.const 1)
              )
             )
            )
           )
           (get_local $9)
          )
          (i32.const 2)
         )
        )
        (i32.shl
         (get_local $24)
         (i32.const 2)
        )
       )
      )
      (if
       (i32.ge_s
        (tee_local $12
         (i32.mul
          (i32.sub
           (i32.load16_s
            (i32.add
             (get_local $16)
             (i32.shl
              (tee_local $26
               (i32.add
                (get_local $11)
                (i32.const 1)
               )
              )
              (i32.const 1)
             )
            )
           )
           (get_local $12)
          )
          (get_local $9)
         )
        )
        (i32.const 9)
       )
       (block
        (set_local $27
         (f32.convert_s/i32
          (get_local $12)
         )
        )
        (set_local $14
         (i32.const 0)
        )
        (set_local $18
         (i32.const 0)
        )
        (set_local $19
         (i32.const 0)
        )
        (set_local $21
         (i32.const 0)
        )
        (loop $while-in3
         (if
          (i32.ne
           (get_local $14)
           (get_local $12)
          )
          (block
           (set_local $15
            (f32.mul
             (f32.mul
              (tee_local $15
               (f32.load
                (i32.add
                 (get_local $25)
                 (i32.shl
                  (get_local $14)
                  (i32.const 2)
                 )
                )
               )
              )
              (get_local $15)
             )
             (get_local $27)
            )
           )
           (set_local $14
            (i32.add
             (get_local $14)
             (i32.const 1)
            )
           )
           (set_local $18
            (i32.add
             (get_local $18)
             (f32.lt
              (get_local $15)
              (f32.const 0.25)
             )
            )
           )
           (set_local $19
            (i32.add
             (get_local $19)
             (f32.lt
              (get_local $15)
              (f32.const 0.0625)
             )
            )
           )
           (set_local $21
            (i32.add
             (get_local $21)
             (f32.lt
              (get_local $15)
              (f32.const 0.015625)
             )
            )
           )
           (br $while-in3)
          )
         )
        )
        (if
         (i32.gt_s
          (get_local $11)
          (i32.add
           (i32.load
            (get_local $22)
           )
           (i32.const -4)
          )
         )
         (block
          (set_local $14
           (call $_celt_udiv
            (i32.shl
             (i32.add
              (get_local $19)
              (get_local $18)
             )
             (i32.const 5)
            )
            (get_local $12)
           )
          )
          (set_local $0
           (i32.add
            (get_local $0)
            (get_local $14)
           )
          )
         )
        )
        (set_local $13
         (i32.add
          (get_local $13)
          (i32.mul
           (i32.add
            (i32.add
             (i32.ge_s
              (i32.shl
               (get_local $21)
               (i32.const 1)
              )
              (get_local $12)
             )
             (i32.ge_s
              (i32.shl
               (get_local $19)
               (i32.const 1)
              )
              (get_local $12)
             )
            )
            (i32.ge_s
             (i32.shl
              (get_local $18)
              (i32.const 1)
             )
             (get_local $12)
            )
           )
           (tee_local $11
            (i32.load
             (i32.add
              (get_local $10)
              (i32.shl
               (get_local $11)
               (i32.const 2)
              )
             )
            )
           )
          )
         )
        )
        (set_local $17
         (i32.add
          (get_local $17)
          (get_local $11)
         )
        )
       )
      )
      (set_local $11
       (get_local $26)
      )
      (br $while-in1)
     )
    )
   )
   (br_if $while-in
    (i32.lt_s
     (tee_local $20
      (i32.add
       (get_local $20)
       (i32.const 1)
      )
     )
     (get_local $8)
    )
   )
  )
  (if
   (get_local $6)
   (block
    (set_local $0
     (if (result i32)
      (get_local $0)
      (call $_celt_udiv
       (get_local $0)
       (i32.mul
        (i32.add
         (i32.sub
          (i32.const 4)
          (i32.load
           (get_local $22)
          )
         )
         (get_local $7)
        )
        (get_local $8)
       )
      )
      (i32.const 0)
     )
    )
    (i32.store
     (get_local $4)
     (tee_local $0
      (i32.shr_s
       (i32.add
        (i32.load
         (get_local $4)
        )
        (get_local $0)
       )
       (i32.const 1)
      )
     )
    )
    (block $switch
     (block $switch-default
      (block $switch-case4
       (block $switch-case
        (br_table $switch-case4 $switch-default $switch-case $switch-default
         (i32.load
          (get_local $5)
         )
        )
       )
       (set_local $0
        (i32.add
         (get_local $0)
         (i32.const 4)
        )
       )
       (br $switch)
      )
      (set_local $0
       (i32.add
        (get_local $0)
        (i32.const -4)
       )
      )
     )
    )
    (set_local $1
     (i32.gt_s
      (get_local $0)
      (i32.const 18)
     )
    )
    (i32.store
     (get_local $5)
     (if (result i32)
      (i32.gt_s
       (get_local $0)
       (i32.const 22)
      )
      (i32.const 2)
      (get_local $1)
     )
    )
   )
  )
  (if
   (i32.le_s
    (get_local $17)
    (i32.const 0)
   )
   (call $_celt_fatal
    (i32.const 41258)
    (i32.const 41221)
    (i32.const 545)
   )
  )
  (if
   (i32.le_s
    (get_local $13)
    (i32.const -1)
   )
   (call $_celt_fatal
    (i32.const 41286)
    (i32.const 41221)
    (i32.const 546)
   )
  )
  (set_local $0
   (i32.shr_s
    (i32.add
     (call $_celt_udiv
      (i32.shl
       (get_local $13)
       (i32.const 8)
      )
      (get_local $17)
     )
     (i32.load
      (get_local $2)
     )
    )
    (i32.const 1)
   )
  )
  (i32.store
   (get_local $2)
   (get_local $0)
  )
  (if
   (i32.lt_s
    (tee_local $0
     (i32.add
      (i32.mul
       (get_local $0)
       (i32.const 3)
      )
      (i32.or
       (i32.sub
        (i32.const 384)
        (i32.shl
         (get_local $3)
         (i32.const 7)
        )
       )
       (i32.const 64)
      )
     )
    )
    (i32.const 318)
   )
   (return
    (i32.const 3)
   )
  )
  (if (result i32)
   (i32.lt_s
    (get_local $0)
    (i32.const 1022)
   )
   (i32.const 2)
   (i32.lt_s
    (get_local $0)
    (i32.const 1534)
   )
  )
 )
 (func $_haar1 (; 36 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 f32)
  (local $6 i32)
  (local $7 i32)
  (local $8 f32)
  (set_local $6
   (i32.shr_s
    (get_local $1)
    (i32.const 1)
   )
  )
  (set_local $7
   (i32.shl
    (get_local $2)
    (i32.const 1)
   )
  )
  (set_local $1
   (i32.const 0)
  )
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $1)
     (get_local $2)
    )
    (block
     (set_local $3
      (i32.const 0)
     )
     (loop $while-in1
      (if
       (i32.lt_s
        (get_local $3)
        (get_local $6)
       )
       (block
        (set_local $5
         (f32.mul
          (f32.load
           (tee_local $4
            (i32.add
             (get_local $0)
             (i32.shl
              (i32.add
               (i32.mul
                (get_local $7)
                (get_local $3)
               )
               (get_local $1)
              )
              (i32.const 2)
             )
            )
           )
          )
          (f32.const 0.7071067690849304)
         )
        )
        (f32.store
         (get_local $4)
         (f32.add
          (get_local $5)
          (tee_local $8
           (f32.mul
            (f32.load
             (tee_local $4
              (i32.add
               (get_local $0)
               (i32.shl
                (i32.add
                 (i32.mul
                  (i32.or
                   (i32.shl
                    (get_local $3)
                    (i32.const 1)
                   )
                   (i32.const 1)
                  )
                  (get_local $2)
                 )
                 (get_local $1)
                )
                (i32.const 2)
               )
              )
             )
            )
            (f32.const 0.7071067690849304)
           )
          )
         )
        )
        (f32.store
         (get_local $4)
         (f32.sub
          (get_local $5)
          (get_local $8)
         )
        )
        (set_local $3
         (i32.add
          (get_local $3)
          (i32.const 1)
         )
        )
        (br $while-in1)
       )
      )
     )
     (set_local $1
      (i32.add
       (get_local $1)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
 )
 (func $_quant_all_bands (; 37 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (param $8 i32) (param $9 i32) (param $10 i32) (param $11 i32) (param $12 i32) (param $13 i32) (param $14 i32) (param $15 i32) (param $16 i32) (param $17 i32) (param $18 i32) (param $19 i32) (param $20 i32) (param $21 i32) (param $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local $26 i32)
  (local $27 i32)
  (local $28 i32)
  (local $29 i32)
  (local $30 i32)
  (local $31 i32)
  (local $32 i32)
  (local $33 i32)
  (local $34 i32)
  (local $35 i32)
  (local $36 i32)
  (local $37 i32)
  (local $38 i32)
  (local $39 i32)
  (local $40 f32)
  (local $41 i32)
  (local $42 i32)
  (local $43 i32)
  (local $44 i32)
  (local $45 i32)
  (local $46 f32)
  (local $47 f32)
  (local $48 i32)
  (local $49 i32)
  (local $50 i32)
  (local $51 i32)
  (local $52 i32)
  (local $53 i32)
  (local $54 i32)
  (local $55 i32)
  (local $56 i32)
  (local $57 i32)
  (local $58 i32)
  (local $59 i32)
  (local $60 i32)
  (local $61 i32)
  (local $62 i32)
  (local $63 i32)
  (local $64 i32)
  (local $65 i32)
  (local $66 i32)
  (local $67 i32)
  (local $68 i32)
  (local $69 i32)
  (local $70 i32)
  (local $71 i32)
  (local $72 i32)
  (local $73 i32)
  (local $74 i32)
  (local $75 i32)
  (local $76 i32)
  (local $77 i32)
  (local $78 i32)
  (local $79 i32)
  (local $80 i32)
  (local $81 i32)
  (local $82 i32)
  (local $83 i32)
  (local $84 i32)
  (local $85 f32)
  (set_local $24
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.const 1568)
   )
  )
  (set_local $33
   (i32.load
    (tee_local $59
     (i32.add
      (get_local $1)
      (i32.const 32)
     )
    )
   )
  )
  (set_local $41
   (tee_local $25
    (i32.eqz
     (get_local $0)
    )
   )
  )
  (if
   (i32.eqz
    (i32.or
     (get_local $25)
     (tee_local $55
      (i32.eqz
       (get_local $5)
      )
     )
    )
   )
   (set_local $41
    (if (result i32)
     (get_local $11)
     (i32.const 0)
     (tee_local $26
      (i32.gt_s
       (get_local $20)
       (i32.const 7)
      )
     )
    )
   )
  )
  (set_local $27
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (i32.mul
        (tee_local $48
         (if (result i32)
          (get_local $55)
          (i32.const 1)
          (i32.const 2)
         )
        )
        (i32.sub
         (tee_local $32
          (i32.shl
           (tee_local $44
            (i32.load16_s
             (i32.add
              (get_local $33)
              (i32.shl
               (i32.add
                (tee_local $35
                 (i32.load
                  (tee_local $70
                   (i32.add
                    (get_local $1)
                    (i32.const 8)
                   )
                  )
                 )
                )
                (i32.const -1)
               )
               (i32.const 1)
              )
             )
            )
           )
           (get_local $17)
          )
         )
         (tee_local $49
          (i32.shl
           (i32.load16_s
            (tee_local $71
             (i32.add
              (get_local $33)
              (i32.shl
               (get_local $2)
               (i32.const 1)
              )
             )
            )
           )
           (get_local $17)
          )
         )
        )
       )
       (i32.const 2)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (if
   (i32.or
    (get_local $25)
    (i32.eqz
     (get_local $41)
    )
   )
   (block
    (set_local $20
     (i32.add
      (get_local $4)
      (i32.shl
       (get_local $32)
       (i32.const 2)
      )
     )
    )
    (set_local $25
     (i32.const 1)
    )
   )
   (block
    (set_local $20
     (get_global $STACKTOP)
    )
    (set_global $STACKTOP
     (i32.add
      (get_global $STACKTOP)
      (i32.and
       (i32.add
        (i32.shl
         (tee_local $25
          (i32.shl
           (i32.sub
            (i32.load16_s
             (i32.add
              (get_local $33)
              (i32.shl
               (get_local $35)
               (i32.const 1)
              )
             )
            )
            (get_local $44)
           )
           (get_local $17)
          )
         )
         (i32.const 2)
        )
        (i32.const 15)
       )
       (i32.const -16)
      )
     )
    )
   )
  )
  (set_local $50
   (i32.add
    (get_local $24)
    (i32.const 1304)
   )
  )
  (set_local $42
   (i32.add
    (get_local $24)
    (i32.const 1280)
   )
  )
  (set_local $31
   (i32.add
    (get_local $24)
    (i32.const 1448)
   )
  )
  (set_local $29
   (i32.add
    (get_local $24)
    (i32.const 1388)
   )
  )
  (set_local $30
   (i32.add
    (get_local $24)
    (i32.const 1328)
   )
  )
  (set_local $51
   (i32.add
    (tee_local $56
     (get_local $24)
    )
    (i32.const 1320)
   )
  )
  (set_local $44
   (i32.shl
    (i32.const 1)
    (get_local $17)
   )
  )
  (set_local $43
   (i32.add
    (i32.add
     (get_local $27)
     (i32.shl
      (get_local $32)
      (i32.const 2)
     )
    )
    (i32.shl
     (tee_local $36
      (i32.sub
       (i32.const 0)
       (get_local $49)
      )
     )
     (i32.const 2)
    )
   )
  )
  (set_local $52
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (get_local $25)
       (i32.const 2)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (set_local $53
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (get_local $25)
       (i32.const 2)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (set_local $60
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (get_local $25)
       (i32.const 2)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (set_local $61
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (get_local $25)
       (i32.const 2)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (set_local $62
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (get_local $25)
       (i32.const 2)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (i32.store offset=36
   (tee_local $23
    (i32.add
     (get_local $24)
     (i32.const 1496)
    )
   )
   (get_local $7)
  )
  (i32.store offset=28
   (get_local $23)
   (get_local $16)
  )
  (i32.store
   (get_local $23)
   (get_local $0)
  )
  (i32.store offset=16
   (get_local $23)
   (get_local $12)
  )
  (i32.store offset=8
   (get_local $23)
   (get_local $1)
  )
  (i32.store
   (tee_local $72
    (i32.add
     (get_local $23)
     (i32.const 40)
    )
   )
   (i32.load
    (get_local $19)
   )
  )
  (i32.store offset=20
   (get_local $23)
   (get_local $10)
  )
  (i32.store offset=44
   (get_local $23)
   (get_local $21)
  )
  (i32.store offset=52
   (get_local $23)
   (get_local $22)
  )
  (i32.store offset=4
   (get_local $23)
   (get_local $41)
  )
  (i32.store
   (tee_local $57
    (i32.add
     (get_local $23)
     (i32.const 48)
    )
   )
   (i32.const 0)
  )
  (i32.store
   (tee_local $73
    (i32.add
     (get_local $23)
     (i32.const 56)
    )
   )
   (tee_local $74
    (i32.gt_s
     (tee_local $32
      (if (result i32)
       (get_local $9)
       (get_local $44)
       (i32.const 1)
      )
     )
     (i32.const 1)
    )
   )
  )
  (set_local $75
   (i32.add
    (get_local $23)
    (i32.const 12)
   )
  )
  (set_local $76
   (i32.add
    (get_local $3)
    (i32.const -1)
   )
  )
  (set_local $77
   (i32.add
    (get_local $16)
    (i32.const 20)
   )
  )
  (set_local $38
   (i32.add
    (get_local $16)
    (i32.const 28)
   )
  )
  (set_local $78
   (i32.add
    (get_local $23)
    (i32.const 32)
   )
  )
  (set_local $63
   (i32.eqz
    (get_local $41)
   )
  )
  (set_local $64
   (i32.add
    (get_local $2)
    (i32.const 1)
   )
  )
  (set_local $79
   (i32.add
    (get_local $23)
    (i32.const 24)
   )
  )
  (set_local $80
   (i32.add
    (get_local $1)
    (i32.const 12)
   )
  )
  (set_local $65
   (i32.eqz
    (get_local $26)
   )
  )
  (set_local $21
   (i32.add
    (i32.shl
     (i32.const 1)
     (get_local $32)
    )
    (i32.const -1)
   )
  )
  (set_local $81
   (i32.ne
    (get_local $10)
    (i32.const 3)
   )
  )
  (set_local $66
   (i32.add
    (get_local $16)
    (i32.const 4)
   )
  )
  (set_local $54
   (i32.add
    (get_local $16)
    (i32.const 8)
   )
  )
  (set_local $67
   (i32.add
    (get_local $16)
    (i32.const 24)
   )
  )
  (set_local $68
   (i32.add
    (get_local $51)
    (i32.const 4)
   )
  )
  (set_local $24
   (i32.const 1)
  )
  (set_local $1
   (i32.const 0)
  )
  (set_local $10
   (get_local $2)
  )
  (set_local $0
   (get_local $20)
  )
  (block $__rjto$2
   (block $__rjti$2
    (block $__rjti$1
     (loop $while-in
      (block $while-out
       (br_if $__rjti$2
        (i32.ge_s
         (get_local $10)
         (get_local $3)
        )
       )
       (i32.store
        (get_local $75)
        (get_local $10)
       )
       (br_if $__rjti$1
        (i32.le_s
         (tee_local $28
          (i32.sub
           (i32.shl
            (i32.load16_s
             (i32.add
              (get_local $33)
              (i32.shl
               (tee_local $41
                (i32.add
                 (get_local $10)
                 (i32.const 1)
                )
               )
               (i32.const 1)
              )
             )
            )
            (get_local $17)
           )
           (tee_local $9
            (i32.shl
             (i32.load16_s
              (tee_local $34
               (i32.add
                (get_local $33)
                (i32.shl
                 (get_local $10)
                 (i32.const 1)
                )
               )
              )
             )
             (get_local $17)
            )
           )
          )
         )
         (i32.const 0)
        )
       )
       (set_local $37
        (i32.eq
         (get_local $10)
         (get_local $76)
        )
       )
       (set_local $39
        (i32.add
         (get_local $4)
         (i32.shl
          (get_local $9)
          (i32.const 2)
         )
        )
       )
       (set_local $22
        (i32.add
         (get_local $5)
         (i32.shl
          (get_local $9)
          (i32.const 2)
         )
        )
       )
       (if
        (get_local $55)
        (set_local $22
         (i32.const 0)
        )
       )
       (set_local $58
        (call $_ec_tell_frac
         (i32.load
          (get_local $77)
         )
         (i32.load
          (get_local $38)
         )
        )
       )
       (set_local $69
        (i32.sub
         (get_local $15)
         (if (result i32)
          (i32.eq
           (get_local $10)
           (get_local $2)
          )
          (i32.const 0)
          (get_local $58)
         )
        )
       )
       (i32.store
        (get_local $78)
        (i32.add
         (tee_local $9
          (i32.sub
           (get_local $14)
           (get_local $58)
          )
         )
         (i32.const -1)
        )
       )
       (set_local $35
        (if (result i32)
         (i32.lt_s
          (get_local $10)
          (get_local $18)
         )
         (block (result i32)
          (set_local $15
           (call $_celt_sudiv
            (get_local $69)
            (if (result i32)
             (i32.lt_s
              (tee_local $15
               (i32.sub
                (get_local $18)
                (get_local $10)
               )
              )
              (i32.const 3)
             )
             (get_local $15)
             (i32.const 3)
            )
           )
          )
          (if (result i32)
           (i32.and
            (i32.lt_s
             (if (result i32)
              (tee_local $20
               (i32.lt_s
                (get_local $9)
                (tee_local $15
                 (i32.add
                  (i32.load
                   (i32.add
                    (get_local $8)
                    (i32.shl
                     (get_local $10)
                     (i32.const 2)
                    )
                   )
                  )
                  (get_local $15)
                 )
                )
               )
              )
              (get_local $9)
              (get_local $15)
             )
             (i32.const 16384)
            )
            (i32.lt_s
             (if (result i32)
              (get_local $20)
              (get_local $9)
              (get_local $15)
             )
             (i32.const 0)
            )
           )
           (i32.const 0)
           (block (result i32)
            (set_local $25
             (i32.gt_s
              (if (result i32)
               (get_local $20)
               (get_local $9)
               (get_local $15)
              )
              (i32.const 16383)
             )
            )
            (if
             (i32.eqz
              (get_local $20)
             )
             (set_local $9
              (get_local $15)
             )
            )
            (if (result i32)
             (get_local $25)
             (i32.const 16383)
             (get_local $9)
            )
           )
          )
         )
         (i32.const 0)
        )
       )
       (if
        (i32.eqz
         (get_local $63)
        )
        (if
         (i32.or
          (i32.ge_s
           (i32.sub
            (i32.shl
             (i32.load16_s
              (get_local $34)
             )
             (get_local $17)
            )
            (get_local $28)
           )
           (i32.shl
            (i32.load16_s
             (get_local $71)
            )
            (get_local $17)
           )
          )
          (i32.eq
           (get_local $10)
           (get_local $64)
          )
         )
         (if
          (i32.or
           (get_local $24)
           (i32.eqz
            (get_local $1)
           )
          )
          (set_local $1
           (get_local $10)
          )
         )
        )
       )
       (if
        (tee_local $82
         (i32.eq
          (get_local $10)
          (get_local $64)
         )
        )
        (call $_special_hybrid_folding
         (i32.load
          (get_local $59)
         )
         (get_local $27)
         (get_local $43)
         (get_local $2)
         (get_local $44)
         (get_local $11)
        )
       )
       (i32.store
        (get_local $79)
        (tee_local $9
         (i32.load
          (i32.add
           (get_local $13)
           (i32.shl
            (get_local $10)
            (i32.const 2)
           )
          )
         )
        )
       )
       (set_local $45
        (i32.load
         (get_local $80)
        )
       )
       (if
        (get_local $1)
        (if
         (i32.or
          (i32.or
           (get_local $81)
           (get_local $74)
          )
          (i32.lt_s
           (get_local $9)
           (i32.const 0)
          )
         )
         (block
          (set_local $24
           (i32.sub
            (tee_local $9
             (i32.sub
              (i32.shl
               (i32.load16_s
                (i32.add
                 (get_local $33)
                 (i32.shl
                  (get_local $1)
                  (i32.const 1)
                 )
                )
               )
               (get_local $17)
              )
              (get_local $49)
             )
            )
            (get_local $28)
           )
          )
          (set_local $15
           (i32.add
            (if (result i32)
             (i32.lt_s
              (get_local $9)
              (get_local $28)
             )
             (tee_local $24
              (i32.const 0)
             )
             (get_local $24)
            )
            (get_local $49)
           )
          )
          (set_local $9
           (get_local $1)
          )
          (loop $while-in1
           (br_if $while-in1
            (i32.gt_s
             (i32.shl
              (i32.load16_s
               (i32.add
                (get_local $33)
                (i32.shl
                 (tee_local $9
                  (i32.add
                   (get_local $9)
                   (i32.const -1)
                  )
                 )
                 (i32.const 1)
                )
               )
              )
              (get_local $17)
             )
             (get_local $15)
            )
           )
          )
          (set_local $20
           (i32.add
            (get_local $15)
            (get_local $28)
           )
          )
          (set_local $25
           (i32.add
            (get_local $1)
            (i32.const -1)
           )
          )
          (loop $while-in3
           (block $while-out2
            (br_if $while-out2
             (i32.ge_s
              (tee_local $15
               (i32.add
                (get_local $25)
                (i32.const 1)
               )
              )
              (get_local $10)
             )
            )
            (br_if $while-out2
             (i32.ge_s
              (i32.shl
               (i32.load16_s
                (i32.add
                 (get_local $33)
                 (i32.shl
                  (get_local $15)
                  (i32.const 1)
                 )
                )
               )
               (get_local $17)
              )
              (get_local $20)
             )
            )
            (set_local $25
             (get_local $15)
            )
            (br $while-in3)
           )
          )
          (set_local $20
           (i32.const 0)
          )
          (set_local $15
           (i32.const 0)
          )
          (loop $while-in5
           (set_local $15
            (i32.or
             (get_local $15)
             (i32.load8_u
              (i32.add
               (get_local $6)
               (tee_local $26
                (i32.mul
                 (get_local $9)
                 (get_local $48)
                )
               )
              )
             )
            )
           )
           (set_local $20
            (i32.or
             (get_local $20)
             (i32.load8_u
              (i32.add
               (get_local $6)
               (i32.add
                (i32.add
                 (get_local $26)
                 (get_local $48)
                )
                (i32.const -1)
               )
              )
             )
            )
           )
           (set_local $26
            (i32.add
             (get_local $9)
             (i32.const 1)
            )
           )
           (set_local $9
            (if (result i32)
             (i32.lt_s
              (get_local $9)
              (get_local $25)
             )
             (block
              (set_local $9
               (get_local $26)
              )
              (br $while-in5)
             )
             (block (result i32)
              (set_local $25
               (get_local $15)
              )
              (get_local $20)
             )
            )
           )
          )
         )
         (block
          (set_local $24
           (i32.const -1)
          )
          (set_local $25
           (tee_local $9
            (get_local $21)
           )
          )
         )
        )
        (block
         (set_local $24
          (i32.const -1)
         )
         (set_local $25
          (tee_local $9
           (get_local $21)
          )
         )
        )
       )
       (set_local $26
        (i32.lt_s
         (get_local $10)
         (get_local $45)
        )
       )
       (set_local $20
        (if (result i32)
         (get_local $55)
         (i32.const 0)
         (get_local $27)
        )
       )
       (if
        (i32.eqz
         (get_local $26)
        )
        (set_local $0
         (i32.const 0)
        )
       )
       (set_local $15
        (if (result i32)
         (get_local $26)
         (get_local $39)
         (get_local $27)
        )
       )
       (if
        (i32.eqz
         (get_local $26)
        )
        (set_local $22
         (get_local $20)
        )
       )
       (set_local $20
        (if (result i32)
         (i32.and
          (get_local $37)
          (get_local $65)
         )
         (i32.const 0)
         (get_local $0)
        )
       )
       (set_local $9
        (block $do-once (result i32)
         (block $__rjti$0
          (br_if $__rjti$0
           (i32.eqz
            (get_local $11)
           )
          )
          (br $do-once
           (if (result i32)
            (i32.eq
             (get_local $10)
             (get_local $12)
            )
            (block
             (br_if $__rjti$0
              (get_local $63)
             )
             (set_local $11
              (i32.add
               (get_local $33)
               (i32.shl
                (get_local $12)
                (i32.const 1)
               )
              )
             )
             (set_local $0
              (i32.const 0)
             )
             (loop $while-in7
              (if
               (i32.lt_s
                (get_local $0)
                (i32.sub
                 (i32.shl
                  (i32.load16_s
                   (get_local $11)
                  )
                  (get_local $17)
                 )
                 (get_local $49)
                )
               )
               (block
                (f32.store
                 (tee_local $26
                  (i32.add
                   (get_local $27)
                   (i32.shl
                    (get_local $0)
                    (i32.const 2)
                   )
                  )
                 )
                 (f32.mul
                  (f32.add
                   (f32.load
                    (get_local $26)
                   )
                   (f32.load
                    (i32.add
                     (get_local $43)
                     (i32.shl
                      (get_local $0)
                      (i32.const 2)
                     )
                    )
                   )
                  )
                  (f32.const 0.5)
                 )
                )
                (set_local $0
                 (i32.add
                  (get_local $0)
                  (i32.const 1)
                 )
                )
                (br $while-in7)
               )
               (br $__rjti$0)
              )
             )
            )
            (block (result i32)
             (set_local $26
              (i32.div_s
               (get_local $35)
               (i32.const 2)
              )
             )
             (set_local $0
              (i32.add
               (get_local $27)
               (i32.shl
                (get_local $24)
                (i32.const 2)
               )
              )
             )
             (if
              (tee_local $39
               (i32.eq
                (get_local $24)
                (i32.const -1)
               )
              )
              (set_local $0
               (i32.const 0)
              )
             )
             (if
              (get_local $37)
              (block
               (set_local $15
                (call $_quant_band
                 (get_local $23)
                 (get_local $15)
                 (get_local $28)
                 (get_local $26)
                 (get_local $32)
                 (get_local $0)
                 (get_local $17)
                 (i32.const 0)
                 (f32.const 1)
                 (get_local $20)
                 (get_local $25)
                )
               )
               (set_local $0
                (i32.add
                 (get_local $43)
                 (i32.shl
                  (get_local $24)
                  (i32.const 2)
                 )
                )
               )
               (set_local $24
                (i32.const 0)
               )
              )
              (block
               (set_local $15
                (call $_quant_band
                 (get_local $23)
                 (get_local $15)
                 (get_local $28)
                 (get_local $26)
                 (get_local $32)
                 (get_local $0)
                 (get_local $17)
                 (i32.add
                  (i32.add
                   (get_local $27)
                   (i32.shl
                    (i32.shl
                     (i32.load16_s
                      (get_local $34)
                     )
                     (get_local $17)
                    )
                    (i32.const 2)
                   )
                  )
                  (i32.shl
                   (get_local $36)
                   (i32.const 2)
                  )
                 )
                 (f32.const 1)
                 (get_local $20)
                 (get_local $25)
                )
               )
               (set_local $0
                (i32.add
                 (get_local $43)
                 (i32.shl
                  (get_local $24)
                  (i32.const 2)
                 )
                )
               )
               (set_local $24
                (i32.add
                 (i32.add
                  (get_local $43)
                  (i32.shl
                   (i32.shl
                    (i32.load16_s
                     (get_local $34)
                    )
                    (get_local $17)
                   )
                   (i32.const 2)
                  )
                 )
                 (i32.shl
                  (get_local $36)
                  (i32.const 2)
                 )
                )
               )
              )
             )
             (if
              (get_local $39)
              (set_local $0
               (i32.const 0)
              )
             )
             (set_local $0
              (call $_quant_band
               (get_local $23)
               (get_local $22)
               (get_local $28)
               (get_local $26)
               (get_local $32)
               (get_local $0)
               (get_local $17)
               (get_local $24)
               (f32.const 1)
               (get_local $20)
               (get_local $9)
              )
             )
             (get_local $15)
            )
           )
          )
         )
         (if
          (i32.eqz
           (get_local $22)
          )
          (block
           (set_local $0
            (if (result i32)
             (get_local $37)
             (i32.const 0)
             (i32.add
              (i32.add
               (get_local $27)
               (i32.shl
                (i32.shl
                 (i32.load16_s
                  (get_local $34)
                 )
                 (get_local $17)
                )
                (i32.const 2)
               )
              )
              (i32.shl
               (get_local $36)
               (i32.const 2)
              )
             )
            )
           )
           (set_local $11
            (i32.add
             (get_local $27)
             (i32.shl
              (get_local $24)
              (i32.const 2)
             )
            )
           )
           (set_local $0
            (call $_quant_band
             (get_local $23)
             (get_local $15)
             (get_local $28)
             (get_local $35)
             (get_local $32)
             (if (result i32)
              (i32.eq
               (get_local $24)
               (i32.const -1)
              )
              (i32.const 0)
              (get_local $11)
             )
             (get_local $17)
             (get_local $0)
             (f32.const 1)
             (get_local $20)
             (i32.or
              (get_local $25)
              (get_local $9)
             )
            )
           )
           (set_local $11
            (i32.const 0)
           )
           (br $do-once
            (get_local $0)
           )
          )
         )
         (if
          (i32.eqz
           (i32.and
            (i32.lt_s
             (get_local $10)
             (get_local $12)
            )
            (i32.xor
             (get_local $65)
             (i32.const 1)
            )
           )
          )
          (block
           (i32.store
            (get_local $57)
            (i32.const 0)
           )
           (set_local $0
            (if (result i32)
             (get_local $37)
             (i32.const 0)
             (i32.add
              (i32.add
               (get_local $27)
               (i32.shl
                (i32.shl
                 (i32.load16_s
                  (get_local $34)
                 )
                 (get_local $17)
                )
                (i32.const 2)
               )
              )
              (i32.shl
               (get_local $36)
               (i32.const 2)
              )
             )
            )
           )
           (set_local $11
            (i32.add
             (get_local $27)
             (i32.shl
              (get_local $24)
              (i32.const 2)
             )
            )
           )
           (set_local $0
            (call $_quant_band_stereo
             (get_local $23)
             (get_local $15)
             (get_local $22)
             (get_local $28)
             (get_local $35)
             (get_local $32)
             (if (result i32)
              (i32.eq
               (get_local $24)
               (i32.const -1)
              )
              (i32.const 0)
              (get_local $11)
             )
             (get_local $17)
             (get_local $0)
             (get_local $20)
             (i32.or
              (get_local $25)
              (get_local $9)
             )
            )
           )
           (set_local $11
            (i32.const 0)
           )
           (br $do-once
            (get_local $0)
           )
          )
         )
         (call $_compute_channel_weights
          (f32.load
           (i32.add
            (get_local $7)
            (i32.shl
             (get_local $10)
             (i32.const 2)
            )
           )
          )
          (f32.load
           (i32.add
            (get_local $7)
            (i32.shl
             (i32.add
              (get_local $10)
              (i32.load
               (get_local $70)
              )
             )
             (i32.const 2)
            )
           )
          )
          (get_local $51)
         )
         (set_local $25
          (i32.or
           (get_local $25)
           (get_local $9)
          )
         )
         (set_local $26
          (i32.load
           (get_local $16)
          )
         )
         (set_local $39
          (i32.load
           (get_local $66)
          )
         )
         (i64.store align=4
          (get_local $50)
          (i64.load align=4
           (get_local $54)
          )
         )
         (i64.store offset=8 align=4
          (get_local $50)
          (i64.load offset=8 align=4
           (get_local $54)
          )
         )
         (set_local $9
          (i32.load
           (get_local $67)
          )
         )
         (i64.store align=4
          (get_local $42)
          (i64.load align=4
           (get_local $38)
          )
         )
         (i64.store offset=8 align=4
          (get_local $42)
          (i64.load offset=8 align=4
           (get_local $38)
          )
         )
         (i32.store offset=16
          (get_local $42)
          (i32.load offset=16
           (get_local $38)
          )
         )
         (i64.store align=4
          (get_local $29)
          (i64.load align=4
           (get_local $23)
          )
         )
         (i64.store offset=8 align=4
          (get_local $29)
          (i64.load offset=8 align=4
           (get_local $23)
          )
         )
         (i64.store offset=16 align=4
          (get_local $29)
          (i64.load offset=16 align=4
           (get_local $23)
          )
         )
         (i64.store offset=24 align=4
          (get_local $29)
          (i64.load offset=24 align=4
           (get_local $23)
          )
         )
         (i64.store offset=32 align=4
          (get_local $29)
          (i64.load offset=32 align=4
           (get_local $23)
          )
         )
         (i64.store offset=40 align=4
          (get_local $29)
          (i64.load offset=40 align=4
           (get_local $23)
          )
         )
         (i64.store offset=48 align=4
          (get_local $29)
          (i64.load offset=48 align=4
           (get_local $23)
          )
         )
         (i32.store offset=56
          (get_local $29)
          (i32.load offset=56
           (get_local $23)
          )
         )
         (drop
          (call $_memcpy
           (get_local $52)
           (get_local $15)
           (tee_local $11
            (i32.shl
             (get_local $28)
             (i32.const 2)
            )
           )
          )
         )
         (drop
          (call $_memcpy
           (get_local $53)
           (get_local $22)
           (get_local $11)
          )
         )
         (i32.store
          (get_local $57)
          (i32.const -1)
         )
         (set_local $0
          (if (result i32)
           (get_local $37)
           (i32.const 0)
           (i32.add
            (i32.add
             (get_local $27)
             (i32.shl
              (i32.shl
               (i32.load16_s
                (get_local $34)
               )
               (get_local $17)
              )
              (i32.const 2)
             )
            )
            (i32.shl
             (get_local $36)
             (i32.const 2)
            )
           )
          )
         )
         (set_local $45
          (i32.add
           (get_local $27)
           (i32.shl
            (get_local $24)
            (i32.const 2)
           )
          )
         )
         (set_local $0
          (call $_quant_band_stereo
           (get_local $23)
           (get_local $15)
           (get_local $22)
           (get_local $28)
           (get_local $35)
           (get_local $32)
           (if (result i32)
            (tee_local $83
             (i32.eq
              (get_local $24)
              (i32.const -1)
             )
            )
            (i32.const 0)
            (get_local $45)
           )
           (get_local $17)
           (get_local $0)
           (get_local $20)
           (get_local $25)
          )
         )
         (set_local $46
          (f32.load
           (get_local $51)
          )
         )
         (set_local $40
          (call $_celt_inner_prod_c
           (get_local $52)
           (get_local $15)
           (get_local $28)
          )
         )
         (set_local $46
          (f32.mul
           (get_local $46)
           (get_local $40)
          )
         )
         (set_local $40
          (f32.load
           (get_local $68)
          )
         )
         (set_local $47
          (call $_celt_inner_prod_c
           (get_local $53)
           (get_local $22)
           (get_local $28)
          )
         )
         (set_local $46
          (f32.add
           (get_local $46)
           (f32.mul
            (get_local $40)
            (get_local $47)
           )
          )
         )
         (i64.store align=4
          (get_local $31)
          (i64.load align=4
           (get_local $16)
          )
         )
         (i64.store offset=8 align=4
          (get_local $31)
          (i64.load offset=8 align=4
           (get_local $16)
          )
         )
         (i64.store offset=16 align=4
          (get_local $31)
          (i64.load offset=16 align=4
           (get_local $16)
          )
         )
         (i64.store offset=24 align=4
          (get_local $31)
          (i64.load offset=24 align=4
           (get_local $16)
          )
         )
         (i64.store offset=32 align=4
          (get_local $31)
          (i64.load offset=32 align=4
           (get_local $16)
          )
         )
         (i64.store offset=40 align=4
          (get_local $31)
          (i64.load offset=40 align=4
           (get_local $16)
          )
         )
         (i64.store align=4
          (get_local $30)
          (i64.load align=4
           (get_local $23)
          )
         )
         (i64.store offset=8 align=4
          (get_local $30)
          (i64.load offset=8 align=4
           (get_local $23)
          )
         )
         (i64.store offset=16 align=4
          (get_local $30)
          (i64.load offset=16 align=4
           (get_local $23)
          )
         )
         (i64.store offset=24 align=4
          (get_local $30)
          (i64.load offset=24 align=4
           (get_local $23)
          )
         )
         (i64.store offset=32 align=4
          (get_local $30)
          (i64.load offset=32 align=4
           (get_local $23)
          )
         )
         (i64.store offset=40 align=4
          (get_local $30)
          (i64.load offset=40 align=4
           (get_local $23)
          )
         )
         (i64.store offset=48 align=4
          (get_local $30)
          (i64.load offset=48 align=4
           (get_local $23)
          )
         )
         (i32.store offset=56
          (get_local $30)
          (i32.load offset=56
           (get_local $23)
          )
         )
         (drop
          (call $_memcpy
           (get_local $60)
           (get_local $15)
           (get_local $11)
          )
         )
         (drop
          (call $_memcpy
           (get_local $61)
           (get_local $22)
           (get_local $11)
          )
         )
         (if
          (i32.eqz
           (get_local $37)
          )
          (drop
           (call $_memcpy
            (get_local $62)
            (i32.add
             (i32.add
              (get_local $27)
              (i32.shl
               (i32.shl
                (i32.load16_s
                 (get_local $34)
                )
                (get_local $17)
               )
               (i32.const 2)
              )
             )
             (i32.shl
              (get_local $36)
              (i32.const 2)
             )
            )
            (get_local $11)
           )
          )
         )
         (drop
          (call $_memcpy
           (get_local $56)
           (tee_local $45
            (i32.add
             (get_local $26)
             (get_local $9)
            )
           )
           (tee_local $84
            (i32.sub
             (get_local $39)
             (get_local $9)
            )
           )
          )
         )
         (i32.store
          (get_local $16)
          (get_local $26)
         )
         (i32.store
          (get_local $66)
          (get_local $39)
         )
         (i64.store align=4
          (get_local $54)
          (i64.load align=4
           (get_local $50)
          )
         )
         (i64.store offset=8 align=4
          (get_local $54)
          (i64.load offset=8 align=4
           (get_local $50)
          )
         )
         (i32.store
          (get_local $67)
          (get_local $9)
         )
         (i64.store align=4
          (get_local $38)
          (i64.load align=4
           (get_local $42)
          )
         )
         (i64.store offset=8 align=4
          (get_local $38)
          (i64.load offset=8 align=4
           (get_local $42)
          )
         )
         (i32.store offset=16
          (get_local $38)
          (i32.load offset=16
           (get_local $42)
          )
         )
         (i64.store align=4
          (get_local $23)
          (i64.load align=4
           (get_local $29)
          )
         )
         (i64.store offset=8 align=4
          (get_local $23)
          (i64.load offset=8 align=4
           (get_local $29)
          )
         )
         (i64.store offset=16 align=4
          (get_local $23)
          (i64.load offset=16 align=4
           (get_local $29)
          )
         )
         (i64.store offset=24 align=4
          (get_local $23)
          (i64.load offset=24 align=4
           (get_local $29)
          )
         )
         (i64.store offset=32 align=4
          (get_local $23)
          (i64.load offset=32 align=4
           (get_local $29)
          )
         )
         (i64.store offset=40 align=4
          (get_local $23)
          (i64.load offset=40 align=4
           (get_local $29)
          )
         )
         (i64.store offset=48 align=4
          (get_local $23)
          (i64.load offset=48 align=4
           (get_local $29)
          )
         )
         (i32.store offset=56
          (get_local $23)
          (i32.load offset=56
           (get_local $29)
          )
         )
         (drop
          (call $_memcpy
           (get_local $15)
           (get_local $52)
           (get_local $11)
          )
         )
         (drop
          (call $_memcpy
           (get_local $22)
           (get_local $53)
           (get_local $11)
          )
         )
         (if
          (get_local $82)
          (call $_special_hybrid_folding
           (i32.load
            (get_local $59)
           )
           (get_local $27)
           (get_local $43)
           (get_local $2)
           (get_local $44)
           (i32.const 0)
          )
         )
         (i32.store
          (get_local $57)
          (i32.const 1)
         )
         (set_local $9
          (if (result i32)
           (get_local $37)
           (i32.const 0)
           (i32.add
            (i32.add
             (get_local $27)
             (i32.shl
              (i32.shl
               (i32.load16_s
                (get_local $34)
               )
               (get_local $17)
              )
              (i32.const 2)
             )
            )
            (i32.shl
             (get_local $36)
             (i32.const 2)
            )
           )
          )
         )
         (set_local $24
          (i32.add
           (get_local $27)
           (i32.shl
            (get_local $24)
            (i32.const 2)
           )
          )
         )
         (set_local $9
          (call $_quant_band_stereo
           (get_local $23)
           (get_local $15)
           (get_local $22)
           (get_local $28)
           (get_local $35)
           (get_local $32)
           (if (result i32)
            (get_local $83)
            (i32.const 0)
            (get_local $24)
           )
           (get_local $17)
           (get_local $9)
           (get_local $20)
           (get_local $25)
          )
         )
         (set_local $40
          (f32.load
           (get_local $51)
          )
         )
         (set_local $47
          (call $_celt_inner_prod_c
           (get_local $52)
           (get_local $15)
           (get_local $28)
          )
         )
         (set_local $40
          (f32.mul
           (get_local $40)
           (get_local $47)
          )
         )
         (set_local $47
          (f32.load
           (get_local $68)
          )
         )
         (set_local $85
          (call $_celt_inner_prod_c
           (get_local $53)
           (get_local $22)
           (get_local $28)
          )
         )
         (if (result i32)
          (f32.ge
           (get_local $46)
           (f32.add
            (get_local $40)
            (f32.mul
             (get_local $47)
             (get_local $85)
            )
           )
          )
          (block (result i32)
           (i64.store align=4
            (get_local $16)
            (i64.load align=4
             (get_local $31)
            )
           )
           (i64.store offset=8 align=4
            (get_local $16)
            (i64.load offset=8 align=4
             (get_local $31)
            )
           )
           (i64.store offset=16 align=4
            (get_local $16)
            (i64.load offset=16 align=4
             (get_local $31)
            )
           )
           (i64.store offset=24 align=4
            (get_local $16)
            (i64.load offset=24 align=4
             (get_local $31)
            )
           )
           (i64.store offset=32 align=4
            (get_local $16)
            (i64.load offset=32 align=4
             (get_local $31)
            )
           )
           (i64.store offset=40 align=4
            (get_local $16)
            (i64.load offset=40 align=4
             (get_local $31)
            )
           )
           (i64.store align=4
            (get_local $23)
            (i64.load align=4
             (get_local $30)
            )
           )
           (i64.store offset=8 align=4
            (get_local $23)
            (i64.load offset=8 align=4
             (get_local $30)
            )
           )
           (i64.store offset=16 align=4
            (get_local $23)
            (i64.load offset=16 align=4
             (get_local $30)
            )
           )
           (i64.store offset=24 align=4
            (get_local $23)
            (i64.load offset=24 align=4
             (get_local $30)
            )
           )
           (i64.store offset=32 align=4
            (get_local $23)
            (i64.load offset=32 align=4
             (get_local $30)
            )
           )
           (i64.store offset=40 align=4
            (get_local $23)
            (i64.load offset=40 align=4
             (get_local $30)
            )
           )
           (i64.store offset=48 align=4
            (get_local $23)
            (i64.load offset=48 align=4
             (get_local $30)
            )
           )
           (i32.store offset=56
            (get_local $23)
            (i32.load offset=56
             (get_local $30)
            )
           )
           (drop
            (call $_memcpy
             (get_local $15)
             (get_local $60)
             (get_local $11)
            )
           )
           (drop
            (call $_memcpy
             (get_local $22)
             (get_local $61)
             (get_local $11)
            )
           )
           (if
            (i32.eqz
             (get_local $37)
            )
            (drop
             (call $_memcpy
              (i32.add
               (i32.add
                (get_local $27)
                (i32.shl
                 (i32.shl
                  (i32.load16_s
                   (get_local $34)
                  )
                  (get_local $17)
                 )
                 (i32.const 2)
                )
               )
               (i32.shl
                (get_local $36)
                (i32.const 2)
               )
              )
              (get_local $62)
              (get_local $11)
             )
            )
           )
           (drop
            (call $_memcpy
             (get_local $45)
             (get_local $56)
             (get_local $84)
            )
           )
           (set_local $11
            (i32.const 0)
           )
           (get_local $0)
          )
          (block (result i32)
           (set_local $11
            (i32.const 0)
           )
           (tee_local $0
            (get_local $9)
           )
          )
         )
        )
       )
       (i32.store8
        (i32.add
         (get_local $6)
         (tee_local $15
          (i32.mul
           (get_local $10)
           (get_local $48)
          )
         )
        )
        (get_local $9)
       )
       (i32.store8
        (i32.add
         (get_local $6)
         (i32.add
          (i32.add
           (get_local $15)
           (get_local $48)
          )
          (i32.const -1)
         )
        )
        (get_local $0)
       )
       (set_local $0
        (i32.load
         (i32.add
          (get_local $8)
          (i32.shl
           (get_local $10)
           (i32.const 2)
          )
         )
        )
       )
       (i32.store
        (get_local $73)
        (i32.const 0)
       )
       (set_local $24
        (i32.gt_s
         (get_local $35)
         (i32.shl
          (get_local $28)
          (i32.const 3)
         )
        )
       )
       (set_local $15
        (i32.add
         (get_local $69)
         (i32.add
          (get_local $0)
          (get_local $58)
         )
        )
       )
       (set_local $10
        (get_local $41)
       )
       (set_local $0
        (get_local $20)
       )
       (br $while-in)
      )
     )
    )
    (call $_celt_fatal
     (i32.const 41311)
     (i32.const 41221)
     (i32.const 1495)
    )
    (br $__rjto$2)
   )
   (i32.store
    (get_local $19)
    (i32.load
     (get_local $72)
    )
   )
   (set_global $STACKTOP
    (get_local $56)
   )
  )
 )
 (func $_celt_sudiv (; 38 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (i32.div_s
   (get_local $0)
   (get_local $1)
  )
 )
 (func $_special_hybrid_folding (; 39 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32)
  (local $6 i32)
  (local $7 i32)
  (set_local $0
   (i32.sub
    (i32.shl
     (tee_local $6
      (i32.mul
       (i32.sub
        (tee_local $7
         (i32.load16_s
          (i32.add
           (get_local $0)
           (i32.shl
            (i32.add
             (get_local $3)
             (i32.const 1)
            )
            (i32.const 1)
           )
          )
         )
        )
        (i32.load16_s
         (i32.add
          (get_local $0)
          (i32.shl
           (get_local $3)
           (i32.const 1)
          )
         )
        )
       )
       (get_local $4)
      )
     )
     (i32.const 1)
    )
    (tee_local $3
     (i32.mul
      (i32.sub
       (i32.load16_s
        (i32.add
         (get_local $0)
         (i32.shl
          (i32.add
           (get_local $3)
           (i32.const 2)
          )
          (i32.const 1)
         )
        )
       )
       (get_local $7)
      )
      (get_local $4)
     )
    )
   )
  )
  (drop
   (call $_memcpy
    (i32.add
     (get_local $1)
     (i32.shl
      (get_local $6)
      (i32.const 2)
     )
    )
    (i32.add
     (get_local $1)
     (i32.shl
      (get_local $0)
      (i32.const 2)
     )
    )
    (tee_local $1
     (i32.shl
      (i32.sub
       (get_local $3)
       (get_local $6)
      )
      (i32.const 2)
     )
    )
   )
  )
  (if
   (i32.eqz
    (get_local $5)
   )
   (return)
  )
  (drop
   (call $_memcpy
    (i32.add
     (get_local $2)
     (i32.shl
      (get_local $6)
      (i32.const 2)
     )
    )
    (i32.add
     (get_local $2)
     (i32.shl
      (get_local $0)
      (i32.const 2)
     )
    )
    (get_local $1)
   )
  )
 )
 (func $_quant_band (; 40 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (param $8 f32) (param $9 i32) (param $10 i32) (result i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (set_local $14
   (i32.load
    (get_local $0)
   )
  )
  (set_local $13
   (i32.load offset=24
    (get_local $0)
   )
  )
  (set_local $15
   (i32.eq
    (get_local $4)
    (i32.const 1)
   )
  )
  (set_local $11
   (call $_celt_udiv
    (get_local $2)
    (get_local $4)
   )
  )
  (if
   (i32.eq
    (get_local $2)
    (i32.const 1)
   )
   (block
    (call $_quant_band_n1
     (get_local $0)
     (get_local $1)
     (i32.const 0)
     (get_local $7)
    )
    (return
     (i32.const 1)
    )
   )
  )
  (set_local $12
   (if (result i32)
    (i32.gt_s
     (get_local $13)
     (i32.const 0)
    )
    (get_local $13)
    (i32.const 0)
   )
  )
  (block $do-once
   (if
    (get_local $9)
    (set_local $5
     (if (result i32)
      (get_local $5)
      (block (result i32)
       (if
        (i32.lt_s
         (get_local $13)
         (i32.const 1)
        )
        (br_if $do-once
         (i32.eqz
          (i32.or
           (i32.and
            (i32.eqz
             (i32.and
              (get_local $11)
              (i32.const 1)
             )
            )
            (i32.ne
             (get_local $13)
             (i32.const 0)
            )
           )
           (i32.gt_s
            (get_local $4)
            (i32.const 1)
           )
          )
         )
        )
       )
       (drop
        (call $_memcpy
         (get_local $9)
         (get_local $5)
         (i32.shl
          (get_local $2)
          (i32.const 2)
         )
        )
       )
       (get_local $9)
      )
      (i32.const 0)
     )
    )
   )
  )
  (set_local $14
   (i32.eqz
    (get_local $14)
   )
  )
  (set_local $16
   (i32.eqz
    (get_local $5)
   )
  )
  (set_local $9
   (i32.const 0)
  )
  (loop $while-in
   (if
    (i32.lt_u
     (get_local $9)
     (get_local $12)
    )
    (block
     (if
      (i32.eqz
       (get_local $14)
      )
      (call $_haar1
       (get_local $1)
       (i32.shr_s
        (get_local $2)
        (get_local $9)
       )
       (i32.shl
        (i32.const 1)
        (get_local $9)
       )
      )
     )
     (if
      (i32.eqz
       (get_local $16)
      )
      (call $_haar1
       (get_local $5)
       (i32.shr_s
        (get_local $2)
        (get_local $9)
       )
       (i32.shl
        (i32.const 1)
        (get_local $9)
       )
      )
     )
     (set_local $10
      (i32.or
       (i32.shl
        (i32.load8_u
         (i32.add
          (i32.shr_s
           (get_local $10)
           (i32.const 4)
          )
          (i32.const 1024)
         )
        )
        (i32.const 2)
       )
       (i32.load8_u
        (i32.add
         (i32.and
          (get_local $10)
          (i32.const 15)
         )
         (i32.const 1024)
        )
       )
      )
     )
     (set_local $9
      (i32.add
       (get_local $9)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (set_local $11
   (i32.shl
    (get_local $11)
    (get_local $12)
   )
  )
  (set_local $9
   (i32.shr_s
    (get_local $4)
    (get_local $12)
   )
  )
  (set_local $4
   (get_local $10)
  )
  (loop $while-in1
   (if
    (i32.and
     (i32.eqz
      (i32.and
       (get_local $11)
       (i32.const 1)
      )
     )
     (i32.lt_s
      (get_local $13)
      (i32.const 0)
     )
    )
    (block
     (if
      (i32.eqz
       (get_local $14)
      )
      (call $_haar1
       (get_local $1)
       (get_local $11)
       (get_local $9)
      )
     )
     (if
      (i32.eqz
       (get_local $16)
      )
      (call $_haar1
       (get_local $5)
       (get_local $11)
       (get_local $9)
      )
     )
     (set_local $4
      (i32.or
       (get_local $4)
       (i32.shl
        (get_local $4)
        (get_local $9)
       )
      )
     )
     (set_local $17
      (i32.add
       (get_local $17)
       (i32.const 1)
      )
     )
     (set_local $11
      (i32.shr_s
       (get_local $11)
       (i32.const 1)
      )
     )
     (set_local $13
      (i32.add
       (get_local $13)
       (i32.const 1)
      )
     )
     (set_local $9
      (i32.shl
       (get_local $9)
       (i32.const 1)
      )
     )
     (br $while-in1)
    )
   )
  )
  (if
   (tee_local $10
    (i32.gt_s
     (get_local $9)
     (i32.const 1)
    )
   )
   (block
    (if
     (i32.eqz
      (get_local $14)
     )
     (call $_deinterleave_hadamard
      (get_local $1)
      (i32.shr_s
       (get_local $11)
       (get_local $12)
      )
      (i32.shl
       (get_local $9)
       (get_local $12)
      )
      (get_local $15)
     )
    )
    (if
     (i32.eqz
      (get_local $16)
     )
     (call $_deinterleave_hadamard
      (get_local $5)
      (i32.shr_s
       (get_local $11)
       (get_local $12)
      )
      (i32.shl
       (get_local $9)
       (get_local $12)
      )
      (get_local $15)
     )
    )
   )
  )
  (set_local $4
   (call $_quant_partition
    (get_local $0)
    (get_local $1)
    (get_local $2)
    (get_local $3)
    (get_local $9)
    (get_local $5)
    (get_local $6)
    (get_local $8)
    (get_local $4)
   )
  )
  (if
   (i32.eqz
    (i32.load offset=4
     (get_local $0)
    )
   )
   (return
    (get_local $4)
   )
  )
  (if
   (get_local $10)
   (call $_interleave_hadamard
    (get_local $1)
    (i32.shr_s
     (get_local $11)
     (get_local $12)
    )
    (i32.shl
     (get_local $9)
     (get_local $12)
    )
    (get_local $15)
   )
  )
  (set_local $5
   (i32.const 0)
  )
  (set_local $3
   (get_local $11)
  )
  (set_local $0
   (get_local $9)
  )
  (loop $while-in3
   (if
    (i32.ne
     (get_local $5)
     (get_local $17)
    )
    (block
     (call $_haar1
      (get_local $1)
      (tee_local $3
       (i32.shl
        (get_local $3)
        (i32.const 1)
       )
      )
      (tee_local $0
       (i32.shr_s
        (get_local $0)
        (i32.const 1)
       )
      )
     )
     (set_local $4
      (i32.or
       (get_local $4)
       (i32.shr_u
        (get_local $4)
        (get_local $0)
       )
      )
     )
     (set_local $5
      (i32.add
       (get_local $5)
       (i32.const 1)
      )
     )
     (br $while-in3)
    )
   )
  )
  (set_local $3
   (i32.const 0)
  )
  (loop $while-in5
   (if
    (i32.lt_u
     (get_local $3)
     (get_local $12)
    )
    (block
     (set_local $4
      (i32.load8_u
       (i32.add
        (get_local $4)
        (i32.const 1040)
       )
      )
     )
     (call $_haar1
      (get_local $1)
      (i32.shr_s
       (get_local $2)
       (get_local $3)
      )
      (i32.shl
       (i32.const 1)
       (get_local $3)
      )
     )
     (set_local $4
      (i32.and
       (get_local $4)
       (i32.const 255)
      )
     )
     (set_local $3
      (i32.add
       (get_local $3)
       (i32.const 1)
      )
     )
     (br $while-in5)
    )
   )
  )
  (set_local $3
   (i32.shl
    (get_local $0)
    (get_local $12)
   )
  )
  (block $label$break$L53
   (if
    (get_local $7)
    (block
     (set_local $8
      (f32.demote/f64
       (f64.sqrt
        (f64.convert_s/i32
         (get_local $2)
        )
       )
      )
     )
     (set_local $0
      (i32.const 0)
     )
     (loop $while-in8
      (br_if $label$break$L53
       (i32.ge_s
        (get_local $0)
        (get_local $2)
       )
      )
      (f32.store
       (i32.add
        (get_local $7)
        (i32.shl
         (get_local $0)
         (i32.const 2)
        )
       )
       (f32.mul
        (f32.load
         (i32.add
          (get_local $1)
          (i32.shl
           (get_local $0)
           (i32.const 2)
          )
         )
        )
        (get_local $8)
       )
      )
      (set_local $0
       (i32.add
        (get_local $0)
        (i32.const 1)
       )
      )
      (br $while-in8)
     )
    )
   )
  )
  (i32.and
   (get_local $4)
   (i32.add
    (i32.shl
     (i32.const 1)
     (get_local $3)
    )
    (i32.const -1)
   )
  )
 )
 (func $_compute_channel_weights (; 41 ;) (; has Stack IR ;) (param $0 f32) (param $1 f32) (param $2 i32)
  (local $3 f32)
  (f32.store
   (get_local $2)
   (f32.add
    (tee_local $3
     (f32.div
      (if (result f32)
       (f32.lt
        (get_local $0)
        (get_local $1)
       )
       (get_local $0)
       (get_local $1)
      )
      (f32.const 3)
     )
    )
    (get_local $0)
   )
  )
  (f32.store offset=4
   (get_local $2)
   (f32.add
    (get_local $3)
    (get_local $1)
   )
  )
 )
 (func $_quant_band_stereo (; 42 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (param $8 i32) (param $9 i32) (param $10 i32) (result i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 f32)
  (local $17 i32)
  (local $18 f32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 f32)
  (set_local $12
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.const 32)
   )
  )
  (i32.store
   (tee_local $11
    (i32.add
     (get_local $12)
     (i32.const 28)
    )
   )
   (get_local $4)
  )
  (i32.store
   (tee_local $15
    (i32.add
     (get_local $12)
     (i32.const 24)
    )
   )
   (get_local $10)
  )
  (set_local $13
   (i32.load
    (get_local $0)
   )
  )
  (set_local $19
   (i32.load offset=28
    (get_local $0)
   )
  )
  (if
   (i32.eq
    (get_local $3)
    (i32.const 1)
   )
   (block
    (call $_quant_band_n1
     (get_local $0)
     (get_local $1)
     (get_local $2)
     (get_local $8)
    )
    (set_global $STACKTOP
     (get_local $12)
    )
    (return
     (i32.const 1)
    )
   )
  )
  (call $_compute_theta
   (get_local $0)
   (get_local $12)
   (get_local $1)
   (get_local $2)
   (get_local $3)
   (get_local $11)
   (get_local $5)
   (get_local $5)
   (get_local $7)
   (i32.const 1)
   (get_local $15)
  )
  (set_local $21
   (i32.load
    (get_local $12)
   )
  )
  (set_local $17
   (i32.load offset=16
    (get_local $12)
   )
  )
  (set_local $14
   (i32.load offset=20
    (get_local $12)
   )
  )
  (set_local $18
   (f32.mul
    (f32.convert_s/i32
     (i32.load offset=4
      (get_local $12)
     )
    )
    (f32.const 0.000030517578125)
   )
  )
  (set_local $16
   (f32.mul
    (f32.convert_s/i32
     (i32.load offset=8
      (get_local $12)
     )
    )
    (f32.const 0.000030517578125)
   )
  )
  (if
   (tee_local $22
    (i32.eq
     (get_local $3)
     (i32.const 2)
    )
   )
   (block
    (set_local $15
     (i32.sub
      (tee_local $4
       (i32.load
        (get_local $11)
       )
      )
      (tee_local $20
       (block $__rjto$0 (result i32)
        (block $__rjti$0
         (br $__rjto$0
          (if (result i32)
           (i32.lt_s
            (get_local $17)
            (i32.const 16384)
           )
           (block $switch (result i32)
            (br_if $__rjti$0
             (get_local $17)
            )
            (i32.const 0)
           )
           (block $switch0 (result i32)
            (br_if $__rjti$0
             (i32.sub
              (get_local $17)
              (i32.const 16384)
             )
            )
            (i32.const 0)
           )
          )
         )
        )
        (i32.const 8)
       )
      )
     )
    )
    (i32.store
     (tee_local $4
      (i32.add
       (get_local $0)
       (i32.const 32)
      )
     )
     (i32.sub
      (i32.load
       (get_local $4)
      )
      (i32.add
       (get_local $14)
       (get_local $20)
      )
     )
    )
    (set_local $14
     (if (result i32)
      (tee_local $4
       (i32.gt_s
        (get_local $17)
        (i32.const 8192)
       )
      )
      (get_local $2)
      (get_local $1)
     )
    )
    (set_local $11
     (if (result i32)
      (get_local $4)
      (get_local $1)
      (get_local $2)
     )
    )
    (if
     (get_local $20)
     (if
      (get_local $13)
      (call $_ec_enc_bits
       (get_local $19)
       (tee_local $4
        (f32.lt
         (f32.sub
          (f32.mul
           (f32.load
            (get_local $14)
           )
           (f32.load offset=4
            (get_local $11)
           )
          )
          (f32.mul
           (f32.load offset=4
            (get_local $14)
           )
           (f32.load
            (get_local $11)
           )
          )
         )
         (f32.const 0)
        )
       )
       (i32.const 1)
      )
      (set_local $4
       (call $_ec_dec_bits
        (get_local $19)
        (i32.const 1)
       )
      )
     )
     (set_local $4
      (i32.const 0)
     )
    )
    (set_local $13
     (i32.sub
      (i32.const 1)
      (i32.shl
       (get_local $4)
       (i32.const 1)
      )
     )
    )
    (set_local $4
     (call $_quant_band
      (get_local $0)
      (get_local $14)
      (i32.const 2)
      (get_local $15)
      (get_local $5)
      (get_local $6)
      (get_local $7)
      (get_local $8)
      (f32.const 1)
      (get_local $9)
      (get_local $10)
     )
    )
    (f32.store
     (get_local $11)
     (f32.mul
      (f32.load offset=4
       (get_local $14)
      )
      (f32.convert_s/i32
       (i32.sub
        (i32.const 0)
        (get_local $13)
       )
      )
     )
    )
    (f32.store offset=4
     (get_local $11)
     (f32.mul
      (f32.load
       (get_local $14)
      )
      (f32.convert_s/i32
       (get_local $13)
      )
     )
    )
    (if
     (i32.load offset=4
      (get_local $0)
     )
     (block
      (f32.store
       (get_local $1)
       (f32.mul
        (get_local $18)
        (f32.load
         (get_local $1)
        )
       )
      )
      (f32.store
       (tee_local $5
        (i32.add
         (get_local $1)
         (i32.const 4)
        )
       )
       (f32.mul
        (get_local $18)
        (f32.load
         (get_local $5)
        )
       )
      )
      (f32.store
       (get_local $2)
       (tee_local $23
        (f32.mul
         (get_local $16)
         (f32.load
          (get_local $2)
         )
        )
       )
      )
      (f32.store
       (tee_local $6
        (i32.add
         (get_local $2)
         (i32.const 4)
        )
       )
       (f32.mul
        (get_local $16)
        (f32.load
         (get_local $6)
        )
       )
      )
      (f32.store
       (get_local $1)
       (f32.sub
        (tee_local $16
         (f32.load
          (get_local $1)
         )
        )
        (get_local $23)
       )
      )
      (f32.store
       (get_local $2)
       (f32.add
        (get_local $16)
        (f32.load
         (get_local $2)
        )
       )
      )
      (f32.store
       (get_local $5)
       (f32.sub
        (tee_local $16
         (f32.load
          (get_local $5)
         )
        )
        (f32.load
         (get_local $6)
        )
       )
      )
      (f32.store
       (get_local $6)
       (f32.add
        (get_local $16)
        (f32.load
         (get_local $6)
        )
       )
      )
     )
    )
   )
   (block
    (set_local $13
     (i32.div_s
      (i32.sub
       (tee_local $10
        (i32.load
         (get_local $11)
        )
       )
       (i32.load offset=12
        (get_local $12)
       )
      )
      (i32.const 2)
     )
    )
    (set_local $11
     (i32.lt_s
      (if (result i32)
       (tee_local $4
        (i32.lt_s
         (get_local $10)
         (get_local $13)
        )
       )
       (get_local $10)
       (get_local $13)
      )
      (i32.const 0)
     )
    )
    (set_local $4
     (if (result i32)
      (get_local $4)
      (get_local $10)
      (get_local $13)
     )
    )
    (set_local $13
     (i32.sub
      (get_local $10)
      (if (result i32)
       (get_local $11)
       (tee_local $4
        (i32.const 0)
       )
       (get_local $4)
      )
     )
    )
    (set_local $10
     (i32.sub
      (i32.load
       (tee_local $11
        (i32.add
         (get_local $0)
         (i32.const 32)
        )
       )
      )
      (get_local $14)
     )
    )
    (i32.store
     (get_local $11)
     (get_local $10)
    )
    (set_local $15
     (i32.load
      (get_local $15)
     )
    )
    (set_local $4
     (if (result i32)
      (i32.lt_s
       (get_local $4)
       (get_local $13)
      )
      (block (result i32)
       (set_local $14
        (call $_quant_band
         (get_local $0)
         (get_local $2)
         (get_local $3)
         (get_local $13)
         (get_local $5)
         (i32.const 0)
         (get_local $7)
         (i32.const 0)
         (get_local $16)
         (i32.const 0)
         (i32.shr_s
          (get_local $15)
          (get_local $5)
         )
        )
       )
       (set_local $10
        (i32.add
         (tee_local $11
          (i32.add
           (get_local $13)
           (i32.sub
            (i32.load
             (get_local $11)
            )
            (get_local $10)
           )
          )
         )
         (i32.const -24)
        )
       )
       (set_local $4
        (call $_quant_band
         (get_local $0)
         (get_local $1)
         (get_local $3)
         (i32.add
          (get_local $4)
          (if (result i32)
           (i32.or
            (i32.lt_s
             (get_local $11)
             (i32.const 25)
            )
            (i32.eq
             (get_local $17)
             (i32.const 16384)
            )
           )
           (i32.const 0)
           (get_local $10)
          )
         )
         (get_local $5)
         (get_local $6)
         (get_local $7)
         (get_local $8)
         (f32.const 1)
         (get_local $9)
         (get_local $15)
        )
       )
       (i32.or
        (get_local $14)
        (get_local $4)
       )
      )
      (block (result i32)
       (set_local $8
        (call $_quant_band
         (get_local $0)
         (get_local $1)
         (get_local $3)
         (get_local $4)
         (get_local $5)
         (get_local $6)
         (get_local $7)
         (get_local $8)
         (f32.const 1)
         (get_local $9)
         (get_local $15)
        )
       )
       (set_local $4
        (i32.add
         (tee_local $6
          (i32.add
           (get_local $4)
           (i32.sub
            (i32.load
             (get_local $11)
            )
            (get_local $10)
           )
          )
         )
         (i32.const -24)
        )
       )
       (set_local $4
        (call $_quant_band
         (get_local $0)
         (get_local $2)
         (get_local $3)
         (i32.add
          (get_local $13)
          (if (result i32)
           (i32.or
            (i32.lt_s
             (get_local $6)
             (i32.const 25)
            )
            (i32.eqz
             (get_local $17)
            )
           )
           (i32.const 0)
           (get_local $4)
          )
         )
         (get_local $5)
         (i32.const 0)
         (get_local $7)
         (i32.const 0)
         (get_local $16)
         (i32.const 0)
         (i32.shr_s
          (get_local $15)
          (get_local $5)
         )
        )
       )
       (i32.or
        (get_local $8)
        (get_local $4)
       )
      )
     )
    )
   )
  )
  (if
   (i32.eqz
    (i32.load offset=4
     (get_local $0)
    )
   )
   (block
    (set_global $STACKTOP
     (get_local $12)
    )
    (return
     (get_local $4)
    )
   )
  )
  (if
   (i32.eqz
    (get_local $22)
   )
   (call $_stereo_merge
    (get_local $1)
    (get_local $2)
    (get_local $18)
    (get_local $3)
   )
  )
  (if
   (i32.eqz
    (get_local $21)
   )
   (block
    (set_global $STACKTOP
     (get_local $12)
    )
    (return
     (get_local $4)
    )
   )
  )
  (set_local $1
   (i32.const 0)
  )
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $1)
     (get_local $3)
    )
    (block
     (f32.store
      (tee_local $0
       (i32.add
        (get_local $2)
        (i32.shl
         (get_local $1)
         (i32.const 2)
        )
       )
      )
      (f32.neg
       (f32.load
        (get_local $0)
       )
      )
     )
     (set_local $1
      (i32.add
       (get_local $1)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (set_global $STACKTOP
   (get_local $12)
  )
  (get_local $4)
 )
 (func $_quant_band_n1 (; 43 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (set_local $6
   (i32.load offset=28
    (get_local $0)
   )
  )
  (set_local $7
   (i32.eqz
    (i32.load
     (get_local $0)
    )
   )
  )
  (if
   (i32.gt_s
    (i32.load
     (tee_local $5
      (i32.add
       (get_local $0)
       (i32.const 32)
      )
     )
    )
    (i32.const 7)
   )
   (block
    (if
     (get_local $7)
     (set_local $4
      (call $_ec_dec_bits
       (get_local $6)
       (i32.const 1)
      )
     )
     (call $_ec_enc_bits
      (get_local $6)
      (tee_local $4
       (f32.lt
        (f32.load
         (get_local $1)
        )
        (f32.const 0)
       )
      )
      (i32.const 1)
     )
    )
    (i32.store
     (get_local $5)
     (i32.add
      (i32.load
       (get_local $5)
      )
      (i32.const -8)
     )
    )
   )
  )
  (if
   (i32.load
    (tee_local $8
     (i32.add
      (get_local $0)
      (i32.const 4)
     )
    )
   )
   (f32.store
    (get_local $1)
    (if (result f32)
     (get_local $4)
     (f32.const -1)
     (f32.const 1)
    )
   )
  )
  (set_local $9
   (if (result i32)
    (tee_local $0
     (i32.eqz
      (get_local $2)
     )
    )
    (i32.const 1)
    (i32.const 2)
   )
  )
  (if
   (i32.eqz
    (get_local $0)
   )
   (block
    (set_local $4
     (i32.const 1)
    )
    (loop $while-in
     (if
      (i32.gt_s
       (i32.load
        (get_local $5)
       )
       (i32.const 7)
      )
      (block
       (if
        (get_local $7)
        (set_local $0
         (call $_ec_dec_bits
          (get_local $6)
          (i32.const 1)
         )
        )
        (call $_ec_enc_bits
         (get_local $6)
         (tee_local $0
          (f32.lt
           (f32.load
            (get_local $2)
           )
           (f32.const 0)
          )
         )
         (i32.const 1)
        )
       )
       (i32.store
        (get_local $5)
        (i32.add
         (i32.load
          (get_local $5)
         )
         (i32.const -8)
        )
       )
      )
      (set_local $0
       (i32.const 0)
      )
     )
     (if
      (i32.load
       (get_local $8)
      )
      (f32.store
       (get_local $2)
       (if (result f32)
        (get_local $0)
        (f32.const -1)
        (f32.const 1)
       )
      )
     )
     (br_if $while-in
      (i32.lt_u
       (tee_local $4
        (i32.add
         (get_local $4)
         (i32.const 1)
        )
       )
       (get_local $9)
      )
     )
    )
   )
  )
  (if
   (i32.eqz
    (get_local $3)
   )
   (return)
  )
  (i32.store
   (get_local $3)
   (i32.load
    (get_local $1)
   )
  )
 )
 (func $_deinterleave_hadamard (; 44 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (set_local $7
   (get_global $STACKTOP)
  )
  (set_local $5
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (tee_local $8
        (i32.mul
         (get_local $1)
         (get_local $2)
        )
       )
       (i32.const 2)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (if
   (i32.le_s
    (get_local $2)
    (i32.const 0)
   )
   (call $_celt_fatal
    (i32.const 41335)
    (i32.const 41221)
    (i32.const 591)
   )
  )
  (if
   (get_local $3)
   (block
    (set_local $6
     (i32.add
      (i32.shl
       (get_local $2)
       (i32.const 2)
      )
      (i32.const 1048)
     )
    )
    (set_local $3
     (i32.const 0)
    )
    (loop $while-in3
     (if
      (i32.ne
       (get_local $3)
       (get_local $2)
      )
      (block
       (set_local $9
        (i32.add
         (get_local $6)
         (i32.shl
          (get_local $3)
          (i32.const 2)
         )
        )
       )
       (set_local $4
        (i32.const 0)
       )
       (loop $while-in5
        (if
         (i32.lt_s
          (get_local $4)
          (get_local $1)
         )
         (block
          (i32.store
           (i32.add
            (get_local $5)
            (i32.shl
             (i32.add
              (i32.mul
               (i32.load
                (get_local $9)
               )
               (get_local $1)
              )
              (get_local $4)
             )
             (i32.const 2)
            )
           )
           (i32.load
            (i32.add
             (get_local $0)
             (i32.shl
              (i32.add
               (i32.mul
                (get_local $4)
                (get_local $2)
               )
               (get_local $3)
              )
              (i32.const 2)
             )
            )
           )
          )
          (set_local $4
           (i32.add
            (get_local $4)
            (i32.const 1)
           )
          )
          (br $while-in5)
         )
        )
       )
       (set_local $3
        (i32.add
         (get_local $3)
         (i32.const 1)
        )
       )
       (br $while-in3)
      )
     )
    )
   )
   (block
    (set_local $3
     (i32.const 0)
    )
    (loop $while-in
     (if
      (i32.ne
       (get_local $3)
       (get_local $2)
      )
      (block
       (set_local $6
        (i32.mul
         (get_local $3)
         (get_local $1)
        )
       )
       (set_local $4
        (i32.const 0)
       )
       (loop $while-in1
        (if
         (i32.lt_s
          (get_local $4)
          (get_local $1)
         )
         (block
          (i32.store
           (i32.add
            (get_local $5)
            (i32.shl
             (i32.add
              (get_local $6)
              (get_local $4)
             )
             (i32.const 2)
            )
           )
           (i32.load
            (i32.add
             (get_local $0)
             (i32.shl
              (i32.add
               (i32.mul
                (get_local $4)
                (get_local $2)
               )
               (get_local $3)
              )
              (i32.const 2)
             )
            )
           )
          )
          (set_local $4
           (i32.add
            (get_local $4)
            (i32.const 1)
           )
          )
          (br $while-in1)
         )
        )
       )
       (set_local $3
        (i32.add
         (get_local $3)
         (i32.const 1)
        )
       )
       (br $while-in)
      )
     )
    )
   )
  )
  (drop
   (call $_memcpy
    (get_local $0)
    (get_local $5)
    (i32.shl
     (get_local $8)
     (i32.const 2)
    )
   )
  )
  (set_global $STACKTOP
   (get_local $7)
  )
 )
 (func $_quant_partition (; 45 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 f32) (param $8 i32) (result i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 f32)
  (local $19 f32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (set_local $9
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.const 32)
   )
  )
  (i32.store
   (tee_local $12
    (i32.add
     (tee_local $10
      (get_local $9)
     )
     (i32.const 28)
    )
   )
   (get_local $3)
  )
  (i32.store
   (tee_local $13
    (i32.add
     (get_local $10)
     (i32.const 24)
    )
   )
   (get_local $8)
  )
  (set_local $20
   (i32.load
    (get_local $0)
   )
  )
  (set_local $16
   (i32.load offset=20
    (get_local $0)
   )
  )
  (set_local $17
   (i32.load offset=28
    (get_local $0)
   )
  )
  (set_local $9
   (i32.add
    (tee_local $11
     (i32.load offset=100
      (tee_local $14
       (i32.load offset=8
        (get_local $0)
       )
      )
     )
    )
    (i32.load16_s
     (i32.add
      (tee_local $21
       (i32.load offset=96
        (get_local $14)
       )
      )
      (i32.shl
       (i32.add
        (i32.mul
         (i32.add
          (get_local $6)
          (i32.const 1)
         )
         (tee_local $22
          (i32.load offset=8
           (get_local $14)
          )
         )
        )
        (tee_local $15
         (i32.load offset=12
          (get_local $0)
         )
        )
       )
       (i32.const 1)
      )
     )
    )
   )
  )
  (if
   (i32.ne
    (get_local $6)
    (i32.const -1)
   )
   (if
    (i32.and
     (i32.lt_s
      (i32.add
       (i32.load8_u
        (i32.add
         (get_local $9)
         (i32.load8_u
          (get_local $9)
         )
        )
       )
       (i32.const 12)
      )
      (get_local $3)
     )
     (i32.gt_s
      (get_local $2)
      (i32.const 2)
     )
    )
    (block
     (if
      (i32.eq
       (get_local $4)
       (i32.const 1)
      )
      (i32.store
       (get_local $13)
       (i32.or
        (i32.and
         (get_local $8)
         (i32.const 1)
        )
        (i32.shl
         (get_local $8)
         (i32.const 1)
        )
       )
      )
     )
     (call $_compute_theta
      (get_local $0)
      (get_local $10)
      (get_local $1)
      (tee_local $16
       (i32.add
        (get_local $1)
        (i32.shl
         (tee_local $8
          (i32.shr_s
           (get_local $2)
           (i32.const 1)
          )
         )
         (i32.const 2)
        )
       )
      )
      (get_local $8)
      (get_local $12)
      (tee_local $9
       (i32.shr_s
        (i32.add
         (get_local $4)
         (i32.const 1)
        )
        (i32.const 1)
       )
      )
      (get_local $4)
      (tee_local $14
       (i32.add
        (get_local $6)
        (i32.const -1)
       )
      )
      (i32.const 0)
      (get_local $13)
     )
     (set_local $2
      (i32.load offset=12
       (get_local $10)
      )
     )
     (set_local $17
      (i32.load offset=20
       (get_local $10)
      )
     )
     (set_local $18
      (f32.mul
       (f32.convert_s/i32
        (i32.load offset=4
         (get_local $10)
        )
       )
       (f32.const 0.000030517578125)
      )
     )
     (set_local $19
      (f32.mul
       (f32.convert_s/i32
        (i32.load offset=8
         (get_local $10)
        )
       )
       (f32.const 0.000030517578125)
      )
     )
     (if
      (i32.eqz
       (i32.or
        (i32.lt_s
         (get_local $4)
         (i32.const 2)
        )
        (i32.eqz
         (i32.and
          (tee_local $11
           (i32.load offset=16
            (get_local $10)
           )
          )
          (i32.const 16383)
         )
        )
       )
      )
      (if
       (i32.gt_s
        (get_local $11)
        (i32.const 8192)
       )
       (set_local $2
        (i32.sub
         (get_local $2)
         (i32.shr_s
          (get_local $2)
          (i32.sub
           (i32.const 5)
           (get_local $6)
          )
         )
        )
       )
       (if
        (i32.ge_s
         (tee_local $2
          (i32.add
           (get_local $2)
           (i32.shr_s
            (i32.shl
             (get_local $8)
             (i32.const 3)
            )
            (i32.sub
             (i32.const 6)
             (get_local $6)
            )
           )
          )
         )
         (i32.const 0)
        )
        (set_local $2
         (i32.const 0)
        )
       )
      )
     )
     (set_local $2
      (i32.div_s
       (i32.sub
        (tee_local $3
         (i32.load
          (get_local $12)
         )
        )
        (get_local $2)
       )
       (i32.const 2)
      )
     )
     (set_local $15
      (i32.lt_s
       (if (result i32)
        (tee_local $6
         (i32.lt_s
          (get_local $3)
          (get_local $2)
         )
        )
        (get_local $3)
        (get_local $2)
       )
       (i32.const 0)
      )
     )
     (if
      (get_local $6)
      (set_local $2
       (get_local $3)
      )
     )
     (set_local $6
      (i32.sub
       (get_local $3)
       (if (result i32)
        (get_local $15)
        (tee_local $2
         (i32.const 0)
        )
        (get_local $2)
       )
      )
     )
     (set_local $12
      (i32.sub
       (i32.load
        (tee_local $15
         (i32.add
          (get_local $0)
          (i32.const 32)
         )
        )
       )
       (get_local $17)
      )
     )
     (i32.store
      (get_local $15)
      (get_local $12)
     )
     (set_local $3
      (i32.add
       (get_local $5)
       (i32.shl
        (get_local $8)
        (i32.const 2)
       )
      )
     )
     (if
      (i32.eqz
       (get_local $5)
      )
      (set_local $3
       (i32.const 0)
      )
     )
     (if
      (i32.lt_s
       (get_local $2)
       (get_local $6)
      )
      (block
       (set_local $4
        (i32.shl
         (call $_quant_partition
          (get_local $0)
          (get_local $16)
          (get_local $8)
          (get_local $6)
          (get_local $9)
          (get_local $3)
          (get_local $14)
          (f32.mul
           (get_local $19)
           (get_local $7)
          )
          (i32.shr_s
           (tee_local $3
            (i32.load
             (get_local $13)
            )
           )
           (get_local $9)
          )
         )
         (i32.shr_s
          (get_local $4)
          (i32.const 1)
         )
        )
       )
       (set_local $13
        (i32.add
         (tee_local $6
          (i32.add
           (get_local $6)
           (i32.sub
            (i32.load
             (get_local $15)
            )
            (get_local $12)
           )
          )
         )
         (i32.const -24)
        )
       )
       (set_local $0
        (call $_quant_partition
         (get_local $0)
         (get_local $1)
         (get_local $8)
         (i32.add
          (get_local $2)
          (if (result i32)
           (i32.or
            (i32.lt_s
             (get_local $6)
             (i32.const 25)
            )
            (i32.eq
             (get_local $11)
             (i32.const 16384)
            )
           )
           (i32.const 0)
           (get_local $13)
          )
         )
         (get_local $9)
         (get_local $5)
         (get_local $14)
         (f32.mul
          (get_local $18)
          (get_local $7)
         )
         (get_local $3)
        )
       )
       (set_global $STACKTOP
        (get_local $10)
       )
       (return
        (i32.or
         (get_local $4)
         (get_local $0)
        )
       )
      )
      (block
       (set_local $5
        (call $_quant_partition
         (get_local $0)
         (get_local $1)
         (get_local $8)
         (get_local $2)
         (get_local $9)
         (get_local $5)
         (get_local $14)
         (f32.mul
          (get_local $18)
          (get_local $7)
         )
         (tee_local $1
          (i32.load
           (get_local $13)
          )
         )
        )
       )
       (set_local $13
        (i32.add
         (tee_local $2
          (i32.add
           (get_local $2)
           (i32.sub
            (i32.load
             (get_local $15)
            )
            (get_local $12)
           )
          )
         )
         (i32.const -24)
        )
       )
       (set_local $0
        (call $_quant_partition
         (get_local $0)
         (get_local $16)
         (get_local $8)
         (i32.add
          (get_local $6)
          (if (result i32)
           (i32.or
            (i32.lt_s
             (get_local $2)
             (i32.const 25)
            )
            (i32.eqz
             (get_local $11)
            )
           )
           (i32.const 0)
           (get_local $13)
          )
         )
         (get_local $9)
         (get_local $3)
         (get_local $14)
         (f32.mul
          (get_local $19)
          (get_local $7)
         )
         (i32.shr_s
          (get_local $1)
          (get_local $9)
         )
        )
       )
       (set_global $STACKTOP
        (get_local $10)
       )
       (return
        (i32.or
         (get_local $5)
         (i32.shl
          (get_local $0)
          (i32.shr_s
           (get_local $4)
           (i32.const 1)
          )
         )
        )
       )
      )
     )
    )
   )
  )
  (set_local $3
   (call $_bits2pulses
    (get_local $22)
    (get_local $21)
    (get_local $11)
    (get_local $15)
    (get_local $6)
    (get_local $3)
   )
  )
  (set_local $9
   (call $_pulses2bits
    (get_local $14)
    (get_local $15)
    (get_local $6)
    (get_local $3)
   )
  )
  (set_local $11
   (i32.sub
    (i32.load
     (tee_local $12
      (i32.add
       (get_local $0)
       (i32.const 32)
      )
     )
    )
    (get_local $9)
   )
  )
  (loop $while-in
   (block $while-out
    (i32.store
     (get_local $12)
     (get_local $11)
    )
    (br_if $while-out
     (i32.eqz
      (i32.and
       (i32.lt_s
        (get_local $11)
        (i32.const 0)
       )
       (i32.gt_s
        (get_local $3)
        (i32.const 0)
       )
      )
     )
    )
    (i32.store
     (get_local $12)
     (tee_local $11
      (i32.add
       (get_local $11)
       (get_local $9)
      )
     )
    )
    (set_local $9
     (call $_pulses2bits
      (get_local $14)
      (get_local $15)
      (get_local $6)
      (tee_local $3
       (i32.add
        (get_local $3)
        (i32.const -1)
       )
      )
     )
    )
    (set_local $11
     (i32.sub
      (get_local $11)
      (get_local $9)
     )
    )
    (br $while-in)
   )
  )
  (if
   (get_local $3)
   (block
    (set_local $3
     (call $_get_pulses
      (get_local $3)
     )
    )
    (if
     (get_local $20)
     (set_local $0
      (call $_alg_quant
       (get_local $1)
       (get_local $2)
       (get_local $3)
       (get_local $16)
       (get_local $4)
       (get_local $17)
       (get_local $7)
       (i32.load offset=4
        (get_local $0)
       )
      )
     )
     (set_local $0
      (call $_alg_unquant
       (get_local $1)
       (get_local $2)
       (get_local $3)
       (get_local $16)
       (get_local $4)
       (get_local $17)
       (get_local $7)
      )
     )
    )
    (set_global $STACKTOP
     (get_local $10)
    )
    (return
     (get_local $0)
    )
   )
  )
  (if
   (i32.eqz
    (i32.load offset=4
     (get_local $0)
    )
   )
   (block
    (set_global $STACKTOP
     (get_local $10)
    )
    (return
     (i32.const 0)
    )
   )
  )
  (i32.store
   (get_local $13)
   (tee_local $3
    (i32.and
     (tee_local $4
      (i32.add
       (i32.shl
        (i32.const 1)
        (get_local $4)
       )
       (i32.const -1)
      )
     )
     (get_local $8)
    )
   )
  )
  (if
   (i32.eqz
    (get_local $3)
   )
   (block
    (drop
     (call $_memset
      (get_local $1)
      (i32.const 0)
      (i32.shl
       (get_local $2)
       (i32.const 2)
      )
     )
    )
    (set_global $STACKTOP
     (get_local $10)
    )
    (return
     (i32.const 0)
    )
   )
  )
  (set_local $6
   (i32.add
    (get_local $0)
    (i32.const 40)
   )
  )
  (block $label$break$L38
   (if
    (get_local $5)
    (block
     (set_local $0
      (i32.const 0)
     )
     (loop $while-in4
      (if
       (i32.ge_s
        (get_local $0)
        (get_local $2)
       )
       (block
        (set_local $0
         (get_local $3)
        )
        (br $label$break$L38)
       )
      )
      (set_local $4
       (call $_celt_lcg_rand
        (i32.load
         (get_local $6)
        )
       )
      )
      (i32.store
       (get_local $6)
       (get_local $4)
      )
      (f32.store
       (i32.add
        (get_local $1)
        (i32.shl
         (get_local $0)
         (i32.const 2)
        )
       )
       (f32.add
        (f32.load
         (i32.add
          (get_local $5)
          (i32.shl
           (get_local $0)
           (i32.const 2)
          )
         )
        )
        (if (result f32)
         (i32.and
          (get_local $4)
          (i32.const 32768)
         )
         (f32.const 0.00390625)
         (f32.const -0.00390625)
        )
       )
      )
      (set_local $0
       (i32.add
        (get_local $0)
        (i32.const 1)
       )
      )
      (br $while-in4)
     )
    )
    (block
     (set_local $0
      (i32.const 0)
     )
     (loop $while-in2
      (if
       (i32.ge_s
        (get_local $0)
        (get_local $2)
       )
       (block
        (set_local $0
         (get_local $4)
        )
        (br $label$break$L38)
       )
      )
      (set_local $3
       (call $_celt_lcg_rand
        (i32.load
         (get_local $6)
        )
       )
      )
      (i32.store
       (get_local $6)
       (get_local $3)
      )
      (f32.store
       (i32.add
        (get_local $1)
        (i32.shl
         (get_local $0)
         (i32.const 2)
        )
       )
       (f32.convert_s/i32
        (i32.shr_s
         (get_local $3)
         (i32.const 20)
        )
       )
      )
      (set_local $0
       (i32.add
        (get_local $0)
        (i32.const 1)
       )
      )
      (br $while-in2)
     )
    )
   )
  )
  (call $_renormalise_vector
   (get_local $1)
   (get_local $2)
   (get_local $7)
  )
  (set_global $STACKTOP
   (get_local $10)
  )
  (get_local $0)
 )
 (func $_interleave_hadamard (; 46 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (set_local $7
   (get_global $STACKTOP)
  )
  (set_local $5
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (tee_local $8
        (i32.mul
         (get_local $1)
         (get_local $2)
        )
       )
       (i32.const 2)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (if
   (get_local $3)
   (block
    (set_local $6
     (i32.add
      (i32.shl
       (get_local $2)
       (i32.const 2)
      )
      (i32.const 1048)
     )
    )
    (set_local $3
     (i32.const 0)
    )
    (loop $while-in3
     (if
      (i32.lt_s
       (get_local $3)
       (get_local $2)
      )
      (block
       (set_local $9
        (i32.add
         (get_local $6)
         (i32.shl
          (get_local $3)
          (i32.const 2)
         )
        )
       )
       (set_local $4
        (i32.const 0)
       )
       (loop $while-in5
        (if
         (i32.lt_s
          (get_local $4)
          (get_local $1)
         )
         (block
          (i32.store
           (i32.add
            (get_local $5)
            (i32.shl
             (i32.add
              (i32.mul
               (get_local $4)
               (get_local $2)
              )
              (get_local $3)
             )
             (i32.const 2)
            )
           )
           (i32.load
            (i32.add
             (get_local $0)
             (i32.shl
              (i32.add
               (i32.mul
                (i32.load
                 (get_local $9)
                )
                (get_local $1)
               )
               (get_local $4)
              )
              (i32.const 2)
             )
            )
           )
          )
          (set_local $4
           (i32.add
            (get_local $4)
            (i32.const 1)
           )
          )
          (br $while-in5)
         )
        )
       )
       (set_local $3
        (i32.add
         (get_local $3)
         (i32.const 1)
        )
       )
       (br $while-in3)
      )
     )
    )
   )
   (block
    (set_local $3
     (i32.const 0)
    )
    (loop $while-in
     (if
      (i32.lt_s
       (get_local $3)
       (get_local $2)
      )
      (block
       (set_local $6
        (i32.mul
         (get_local $3)
         (get_local $1)
        )
       )
       (set_local $4
        (i32.const 0)
       )
       (loop $while-in1
        (if
         (i32.lt_s
          (get_local $4)
          (get_local $1)
         )
         (block
          (i32.store
           (i32.add
            (get_local $5)
            (i32.shl
             (i32.add
              (i32.mul
               (get_local $4)
               (get_local $2)
              )
              (get_local $3)
             )
             (i32.const 2)
            )
           )
           (i32.load
            (i32.add
             (get_local $0)
             (i32.shl
              (i32.add
               (get_local $6)
               (get_local $4)
              )
              (i32.const 2)
             )
            )
           )
          )
          (set_local $4
           (i32.add
            (get_local $4)
            (i32.const 1)
           )
          )
          (br $while-in1)
         )
        )
       )
       (set_local $3
        (i32.add
         (get_local $3)
         (i32.const 1)
        )
       )
       (br $while-in)
      )
     )
    )
   )
  )
  (drop
   (call $_memcpy
    (get_local $0)
    (get_local $5)
    (i32.shl
     (get_local $8)
     (i32.const 2)
    )
   )
  )
  (set_global $STACKTOP
   (get_local $7)
  )
 )
 (func $_compute_theta (; 47 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (param $8 i32) (param $9 i32) (param $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (block $folding-inner0
   (set_local $14
    (i32.load
     (get_local $0)
    )
   )
   (set_local $17
    (i32.load offset=16
     (get_local $0)
    )
   )
   (set_local $12
    (i32.load offset=28
     (get_local $0)
    )
   )
   (set_local $20
    (i32.load offset=36
     (get_local $0)
    )
   )
   (set_local $11
    (call $_compute_qn
     (get_local $4)
     (i32.load
      (get_local $5)
     )
     (i32.sub
      (i32.shr_s
       (tee_local $8
        (i32.add
         (i32.shl
          (get_local $8)
          (i32.const 3)
         )
         (i32.load16_s
          (i32.add
           (i32.load offset=56
            (tee_local $21
             (i32.load offset=8
              (get_local $0)
             )
            )
           )
           (i32.shl
            (tee_local $18
             (i32.load offset=12
              (get_local $0)
             )
            )
            (i32.const 1)
           )
          )
         )
        )
       )
       (i32.const 1)
      )
      (if (result i32)
       (i32.and
        (i32.eq
         (get_local $4)
         (i32.const 2)
        )
        (i32.xor
         (tee_local $15
          (i32.eqz
           (get_local $9)
          )
         )
         (i32.const 1)
        )
       )
       (i32.const 16)
       (i32.const 4)
      )
     )
     (get_local $8)
     (get_local $9)
    )
   )
   (set_local $8
    (if (result i32)
     (tee_local $14
      (i32.eqz
       (get_local $14)
      )
     )
     (i32.const 0)
     (call $_stereo_itheta
      (get_local $2)
      (get_local $3)
      (get_local $9)
      (get_local $4)
     )
    )
   )
   (set_local $9
    (if (result i32)
     (i32.or
      (get_local $15)
      (i32.lt_s
       (get_local $18)
       (get_local $17)
      )
     )
     (get_local $11)
     (i32.const 1)
    )
   )
   (set_local $23
    (call $_ec_tell_frac
     (i32.load
      (tee_local $17
       (i32.add
        (get_local $12)
        (i32.const 20)
       )
      )
     )
     (i32.load
      (tee_local $22
       (i32.add
        (get_local $12)
        (i32.const 28)
       )
      )
     )
    )
   )
   (block $label$break$L80
    (block $__rjti$4
     (if
      (i32.eq
       (get_local $9)
       (i32.const 1)
      )
      (if
       (get_local $15)
       (block
        (set_local $0
         (get_local $8)
        )
        (br $__rjti$4)
       )
       (block
        (set_local $2
         (if (result i32)
          (get_local $14)
          (i32.const 0)
          (block (result i32)
           (if
            (i32.gt_s
             (get_local $8)
             (i32.const 8192)
            )
            (block
             (set_local $7
              (tee_local $8
               (i32.eqz
                (i32.load offset=52
                 (get_local $0)
                )
               )
              )
             )
             (if
              (get_local $8)
              (block
               (set_local $8
                (i32.const 0)
               )
               (loop $while-in
                (if
                 (i32.lt_s
                  (get_local $8)
                  (get_local $4)
                 )
                 (block
                  (f32.store
                   (tee_local $9
                    (i32.add
                     (get_local $3)
                     (i32.shl
                      (get_local $8)
                      (i32.const 2)
                     )
                    )
                   )
                   (f32.neg
                    (f32.load
                     (get_local $9)
                    )
                   )
                  )
                  (set_local $8
                   (i32.add
                    (get_local $8)
                    (i32.const 1)
                   )
                  )
                  (br $while-in)
                 )
                )
               )
              )
              (set_local $7
               (i32.const 0)
              )
             )
            )
            (set_local $7
             (i32.const 0)
            )
           )
           (call $_intensity_stereo
            (i32.load offset=8
             (get_local $21)
            )
            (get_local $2)
            (get_local $3)
            (get_local $20)
            (get_local $18)
            (get_local $4)
           )
           (get_local $7)
          )
         )
        )
        (if
         (i32.gt_s
          (i32.load
           (get_local $5)
          )
          (i32.const 16)
         )
         (if
          (i32.gt_s
           (i32.load offset=32
            (get_local $0)
           )
           (i32.const 16)
          )
          (if
           (get_local $14)
           (set_local $2
            (call $_ec_dec_bit_logp
             (get_local $12)
             (i32.const 2)
            )
           )
           (call $_ec_enc_bit_logp
            (get_local $12)
            (get_local $2)
            (i32.const 2)
           )
          )
          (set_local $2
           (i32.const 0)
          )
         )
         (set_local $2
          (i32.const 0)
         )
        )
        (if
         (i32.load offset=52
          (get_local $0)
         )
         (set_local $2
          (i32.const 0)
         )
        )
       )
      )
      (block
       (block $do-once6
        (block $__rjti$2
         (block $__rjti$1
          (set_local $0
           (if (result i32)
            (get_local $14)
            (if (result i32)
             (get_local $15)
             (block
              (set_local $0
               (get_local $8)
              )
              (br $__rjti$1)
             )
             (get_local $8)
            )
            (if (result i32)
             (get_local $15)
             (block
              (set_local $8
               (i32.shr_s
                (tee_local $13
                 (i32.sub
                  (tee_local $11
                   (i32.mul
                    (get_local $8)
                    (get_local $9)
                   )
                  )
                  (i32.const -8192)
                 )
                )
                (i32.const 14)
               )
              )
              (if
               (i32.eqz
                (i32.and
                 (i32.and
                  (i32.ne
                   (i32.load offset=56
                    (get_local $0)
                   )
                   (i32.const 0)
                  )
                  (i32.gt_s
                   (get_local $11)
                   (i32.const 8191)
                  )
                 )
                 (i32.lt_s
                  (get_local $8)
                  (get_local $9)
                 )
                )
               )
               (block
                (set_local $0
                 (get_local $8)
                )
                (br $__rjti$1)
               )
              )
              (set_local $11
               (i32.shr_s
                (i32.shl
                 (call $_bitexact_cos
                  (i32.and
                   (tee_local $0
                    (call $_celt_udiv
                     (i32.and
                      (get_local $13)
                      (i32.const -16384)
                     )
                     (get_local $9)
                    )
                   )
                   (i32.const 65535)
                  )
                 )
                 (i32.const 16)
                )
                (i32.const 16)
               )
              )
              (set_local $0
               (i32.shr_s
                (i32.shl
                 (call $_bitexact_cos
                  (i32.and
                   (i32.sub
                    (i32.const 16384)
                    (get_local $0)
                   )
                   (i32.const 65535)
                  )
                 )
                 (i32.const 16)
                )
                (i32.const 16)
               )
              )
              (set_local $13
               (i32.shr_s
                (i32.add
                 (i32.shl
                  (get_local $4)
                  (i32.const 23)
                 )
                 (i32.const -8388608)
                )
                (i32.const 16)
               )
              )
              (set_local $0
               (i32.shr_s
                (i32.shl
                 (call $_bitexact_log2tan
                  (get_local $0)
                  (get_local $11)
                 )
                 (i32.const 16)
                )
                (i32.const 16)
               )
              )
              (if
               (i32.gt_s
                (tee_local $0
                 (i32.shr_s
                  (i32.add
                   (i32.mul
                    (get_local $13)
                    (get_local $0)
                   )
                   (i32.const 16384)
                  )
                  (i32.const 15)
                 )
                )
                (tee_local $11
                 (i32.load
                  (get_local $5)
                 )
                )
               )
               (block
                (set_local $0
                 (get_local $9)
                )
                (br $__rjti$1)
               )
              )
              (set_local $0
               (if (result i32)
                (i32.lt_s
                 (get_local $0)
                 (i32.sub
                  (i32.const 0)
                  (get_local $11)
                 )
                )
                (i32.const 0)
                (get_local $8)
               )
              )
              (br $__rjti$1)
             )
             (if (result i32)
              (tee_local $11
               (i32.load offset=48
                (get_local $0)
               )
              )
              (block (result i32)
               (set_local $7
                (i32.lt_s
                 (tee_local $0
                  (i32.add
                   (i32.mul
                    (get_local $8)
                    (get_local $9)
                   )
                   (i32.div_s
                    (if (result i32)
                     (i32.gt_s
                      (get_local $8)
                      (i32.const 8192)
                     )
                     (i32.const 32767)
                     (i32.const -32767)
                    )
                    (get_local $9)
                   )
                  )
                 )
                 (i32.const 0)
                )
               )
               (set_local $8
                (i32.shr_s
                 (get_local $0)
                 (i32.const 14)
                )
               )
               (set_local $8
                (i32.gt_s
                 (get_local $9)
                 (if (result i32)
                  (get_local $7)
                  (i32.const 0)
                  (get_local $8)
                 )
                )
               )
               (set_local $13
                (i32.add
                 (get_local $9)
                 (i32.const -1)
                )
               )
               (set_local $0
                (i32.shr_s
                 (get_local $0)
                 (i32.const 14)
                )
               )
               (if
                (get_local $7)
                (set_local $0
                 (i32.const 0)
                )
               )
               (i32.add
                (if (result i32)
                 (get_local $8)
                 (get_local $0)
                 (get_local $13)
                )
                (i32.xor
                 (i32.shr_u
                  (get_local $11)
                  (i32.const 31)
                 )
                 (i32.const 1)
                )
               )
              )
              (i32.shr_s
               (i32.sub
                (i32.mul
                 (get_local $8)
                 (get_local $9)
                )
                (i32.const -8192)
               )
               (i32.const 14)
              )
             )
            )
           )
          )
          (br_if $__rjti$2
           (i32.le_s
            (get_local $4)
            (i32.const 2)
           )
          )
          (set_local $11
           (i32.add
            (tee_local $8
             (i32.add
              (i32.mul
               (tee_local $7
                (i32.div_s
                 (get_local $9)
                 (i32.const 2)
                )
               )
               (i32.const 3)
              )
              (i32.const 3)
             )
            )
            (get_local $7)
           )
          )
          (if
           (i32.eqz
            (get_local $14)
           )
           (block
            (set_local $13
             (if (result i32)
              (tee_local $16
               (i32.gt_s
                (get_local $0)
                (get_local $7)
               )
              )
              (i32.add
               (i32.sub
                (i32.add
                 (get_local $0)
                 (i32.const -1)
                )
                (get_local $7)
               )
               (get_local $8)
              )
              (i32.mul
               (get_local $0)
               (i32.const 3)
              )
             )
            )
            (set_local $19
             (i32.add
              (i32.mul
               (get_local $0)
               (i32.const 3)
              )
              (i32.const 3)
             )
            )
            (set_local $7
             (i32.add
              (i32.sub
               (get_local $0)
               (get_local $7)
              )
              (get_local $8)
             )
            )
            (call $_ec_encode
             (get_local $12)
             (get_local $13)
             (if (result i32)
              (get_local $16)
              (get_local $7)
              (get_local $19)
             )
             (get_local $11)
            )
            (br $do-once6)
           )
          )
          (set_local $13
           (if (result i32)
            (tee_local $16
             (i32.gt_s
              (tee_local $0
               (if (result i32)
                (i32.lt_s
                 (tee_local $0
                  (call $_ec_decode
                   (get_local $12)
                   (get_local $11)
                  )
                 )
                 (get_local $8)
                )
                (i32.div_s
                 (get_local $0)
                 (i32.const 3)
                )
                (i32.add
                 (i32.add
                  (get_local $7)
                  (i32.const 1)
                 )
                 (i32.sub
                  (get_local $0)
                  (get_local $8)
                 )
                )
               )
              )
              (get_local $7)
             )
            )
            (i32.add
             (i32.sub
              (i32.add
               (get_local $0)
               (i32.const -1)
              )
              (get_local $7)
             )
             (get_local $8)
            )
            (i32.mul
             (get_local $0)
             (i32.const 3)
            )
           )
          )
          (set_local $19
           (i32.add
            (i32.mul
             (get_local $0)
             (i32.const 3)
            )
            (i32.const 3)
           )
          )
          (set_local $7
           (i32.add
            (i32.sub
             (get_local $0)
             (get_local $7)
            )
            (get_local $8)
           )
          )
          (call $_ec_dec_update
           (get_local $12)
           (get_local $13)
           (if (result i32)
            (get_local $16)
            (get_local $7)
            (get_local $19)
           )
           (get_local $11)
          )
          (br $do-once6)
         )
         (br_if $__rjti$2
          (i32.or
           (i32.gt_s
            (get_local $7)
            (i32.const 1)
           )
           (i32.xor
            (get_local $15)
            (i32.const 1)
           )
          )
         )
         (set_local $7
          (i32.mul
           (tee_local $11
            (i32.add
             (tee_local $8
              (i32.shr_s
               (get_local $9)
               (i32.const 1)
              )
             )
             (i32.const 1)
            )
           )
           (get_local $11)
          )
         )
         (if
          (get_local $14)
          (block
           (set_local $3
            (if (result i32)
             (i32.lt_s
              (tee_local $0
               (call $_ec_decode
                (get_local $12)
                (get_local $7)
               )
              )
              (i32.shr_s
               (i32.mul
                (get_local $8)
                (get_local $11)
               )
               (i32.const 1)
              )
             )
             (block (result i32)
              (set_local $0
               (i32.add
                (tee_local $2
                 (i32.shr_u
                  (i32.add
                   (call $_isqrt32
                    (i32.or
                     (i32.shl
                      (get_local $0)
                      (i32.const 3)
                     )
                     (i32.const 1)
                    )
                   )
                   (i32.const -1)
                  )
                  (i32.const 1)
                 )
                )
                (i32.const 1)
               )
              )
              (i32.shr_u
               (i32.mul
                (get_local $2)
                (get_local $0)
               )
               (i32.const 1)
              )
             )
             (block (result i32)
              (set_local $2
               (i32.add
                (i32.shl
                 (get_local $9)
                 (i32.const 1)
                )
                (i32.const 2)
               )
              )
              (set_local $0
               (call $_isqrt32
                (i32.add
                 (i32.shl
                  (i32.sub
                   (get_local $7)
                   (get_local $0)
                  )
                  (i32.const 3)
                 )
                 (i32.const -7)
                )
               )
              )
              (i32.sub
               (get_local $7)
               (i32.shr_s
                (i32.mul
                 (tee_local $0
                  (i32.sub
                   (i32.add
                    (get_local $9)
                    (i32.const 1)
                   )
                   (tee_local $2
                    (i32.shr_u
                     (i32.sub
                      (get_local $2)
                      (get_local $0)
                     )
                     (i32.const 1)
                    )
                   )
                  )
                 )
                 (i32.sub
                  (i32.add
                   (get_local $9)
                   (i32.const 2)
                  )
                  (get_local $2)
                 )
                )
                (i32.const 1)
               )
              )
             )
            )
           )
           (call $_ec_dec_update
            (get_local $12)
            (get_local $3)
            (i32.add
             (get_local $3)
             (get_local $0)
            )
            (get_local $7)
           )
           (set_local $0
            (call $_celt_udiv
             (i32.shl
              (get_local $2)
              (i32.const 14)
             )
             (get_local $9)
            )
           )
           (br $__rjti$4)
          )
          (block
           (set_local $13
            (i32.add
             (get_local $0)
             (i32.const 1)
            )
           )
           (set_local $16
            (i32.sub
             (i32.add
              (get_local $9)
              (i32.const 1)
             )
             (get_local $0)
            )
           )
           (call $_ec_encode
            (get_local $12)
            (tee_local $8
             (if (result i32)
              (tee_local $11
               (i32.gt_s
                (get_local $0)
                (get_local $8)
               )
              )
              (i32.sub
               (get_local $7)
               (i32.shr_s
                (i32.mul
                 (i32.sub
                  (i32.add
                   (get_local $9)
                   (i32.const 1)
                  )
                  (get_local $0)
                 )
                 (i32.sub
                  (i32.add
                   (get_local $9)
                   (i32.const 2)
                  )
                  (get_local $0)
                 )
                )
                (i32.const 1)
               )
              )
              (i32.shr_s
               (i32.mul
                (get_local $0)
                (i32.add
                 (get_local $0)
                 (i32.const 1)
                )
               )
               (i32.const 1)
              )
             )
            )
            (i32.add
             (get_local $8)
             (if (result i32)
              (get_local $11)
              (get_local $16)
              (get_local $13)
             )
            )
            (get_local $7)
           )
          )
         )
         (br $do-once6)
        )
        (set_local $7
         (i32.add
          (get_local $9)
          (i32.const 1)
         )
        )
        (if
         (get_local $14)
         (set_local $0
          (call $_ec_dec_uint
           (get_local $12)
           (get_local $7)
          )
         )
         (call $_ec_enc_uint
          (get_local $12)
          (get_local $0)
          (get_local $7)
         )
        )
       )
       (if
        (i32.le_s
         (get_local $0)
         (i32.const -1)
        )
        (call $_celt_fatal
         (i32.const 41362)
         (i32.const 41221)
         (i32.const 838)
        )
       )
       (set_local $0
        (call $_celt_udiv
         (i32.shl
          (get_local $0)
          (i32.const 14)
         )
         (get_local $9)
        )
       )
       (br_if $__rjti$4
        (i32.or
         (get_local $14)
         (get_local $15)
        )
       )
       (set_local $2
        (if (result i32)
         (get_local $0)
         (block
          (call $_stereo_split
           (get_local $2)
           (get_local $3)
           (get_local $4)
          )
          (br $__rjti$4)
         )
         (block (result i32)
          (call $_intensity_stereo
           (i32.load offset=8
            (get_local $21)
           )
           (get_local $2)
           (get_local $3)
           (get_local $20)
           (get_local $18)
           (get_local $4)
          )
          (i32.const 0)
         )
        )
       )
      )
     )
     (set_local $0
      (i32.sub
       (call $_ec_tell_frac
        (i32.load
         (get_local $17)
        )
        (i32.load
         (get_local $22)
        )
       )
       (get_local $23)
      )
     )
     (i32.store
      (get_local $5)
      (i32.sub
       (i32.load
        (get_local $5)
       )
       (get_local $0)
      )
     )
     (set_local $3
      (i32.const 0)
     )
     (set_local $4
      (get_local $2)
     )
     (br $label$break$L80)
    )
    (set_local $2
     (i32.sub
      (call $_ec_tell_frac
       (i32.load
        (get_local $17)
       )
       (i32.load
        (get_local $22)
       )
      )
      (get_local $23)
     )
    )
    (i32.store
     (get_local $5)
     (i32.sub
      (i32.load
       (get_local $5)
      )
      (get_local $2)
     )
    )
    (block $label$break$L82
     (if
      (i32.lt_s
       (get_local $0)
       (i32.const 16384)
      )
      (if
       (i32.eqz
        (get_local $0)
       )
       (block
        (set_local $3
         (get_local $0)
        )
        (set_local $4
         (i32.const 0)
        )
        (set_local $0
         (get_local $2)
        )
        (br $label$break$L80)
       )
      )
      (block
       (br_if $label$break$L82
        (i32.sub
         (get_local $0)
         (i32.const 16384)
        )
       )
       (i32.store
        (get_local $10)
        (i32.and
         (i32.load
          (get_local $10)
         )
         (i32.shl
          (i32.add
           (i32.shl
            (i32.const 1)
            (get_local $6)
           )
           (i32.const -1)
          )
          (get_local $6)
         )
        )
       )
       (i32.store
        (get_local $1)
        (i32.const 0)
       )
       (i32.store offset=4
        (get_local $1)
        (i32.const 0)
       )
       (i32.store offset=8
        (get_local $1)
        (i32.const 32767)
       )
       (i32.store offset=12
        (get_local $1)
        (i32.const 16384)
       )
       (br $folding-inner0)
      )
     )
    )
    (set_local $3
     (i32.shr_s
      (i32.shl
       (call $_bitexact_cos
        (i32.and
         (get_local $0)
         (i32.const 65535)
        )
       )
       (i32.const 16)
      )
      (i32.const 16)
     )
    )
    (set_local $5
     (i32.shr_s
      (i32.shl
       (call $_bitexact_cos
        (i32.and
         (i32.sub
          (i32.const 16384)
          (get_local $0)
         )
         (i32.const 65535)
        )
       )
       (i32.const 16)
      )
      (i32.const 16)
     )
    )
    (set_local $4
     (i32.shr_s
      (i32.add
       (i32.shl
        (get_local $4)
        (i32.const 23)
       )
       (i32.const -8388608)
      )
      (i32.const 16)
     )
    )
    (set_local $6
     (i32.shr_s
      (i32.shl
       (call $_bitexact_log2tan
        (get_local $5)
        (get_local $3)
       )
       (i32.const 16)
      )
      (i32.const 16)
     )
    )
    (i32.store
     (get_local $1)
     (i32.const 0)
    )
    (i32.store offset=4
     (get_local $1)
     (get_local $3)
    )
    (i32.store offset=8
     (get_local $1)
     (get_local $5)
    )
    (i32.store offset=12
     (get_local $1)
     (i32.shr_s
      (i32.add
       (i32.mul
        (get_local $4)
        (get_local $6)
       )
       (i32.const 16384)
      )
      (i32.const 15)
     )
    )
    (br $folding-inner0)
   )
   (i32.store
    (get_local $10)
    (i32.and
     (i32.load
      (get_local $10)
     )
     (i32.add
      (i32.shl
       (i32.const 1)
       (get_local $6)
      )
      (i32.const -1)
     )
    )
   )
   (i32.store
    (get_local $1)
    (get_local $4)
   )
   (i32.store offset=4
    (get_local $1)
    (i32.const 32767)
   )
   (i32.store offset=8
    (get_local $1)
    (i32.const 0)
   )
   (i32.store offset=12
    (get_local $1)
    (i32.const -16384)
   )
   (i32.store offset=16
    (get_local $1)
    (get_local $3)
   )
   (i32.store offset=20
    (get_local $1)
    (get_local $0)
   )
   (return)
  )
  (i32.store offset=16
   (get_local $1)
   (get_local $0)
  )
  (i32.store offset=20
   (get_local $1)
   (get_local $2)
  )
 )
 (func $_bits2pulses (; 48 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (result i32)
  (local $6 i32)
  (set_local $5
   (i32.add
    (get_local $5)
    (i32.const -1)
   )
  )
  (set_local $0
   (i32.load8_u
    (tee_local $3
     (i32.add
      (get_local $2)
      (i32.load16_s
       (i32.add
        (get_local $1)
        (i32.shl
         (i32.add
          (i32.mul
           (i32.add
            (get_local $4)
            (i32.const 1)
           )
           (get_local $0)
          )
          (get_local $3)
         )
         (i32.const 1)
        )
       )
      )
     )
    )
   )
  )
  (set_local $1
   (i32.const 0)
  )
  (set_local $4
   (i32.const 0)
  )
  (loop $while-in
   (if
    (i32.ne
     (get_local $4)
     (i32.const 6)
    )
    (block
     (if
      (tee_local $6
       (i32.gt_s
        (get_local $5)
        (i32.load8_u
         (i32.add
          (get_local $3)
          (tee_local $2
           (i32.shr_s
            (i32.add
             (i32.add
              (get_local $1)
              (get_local $0)
             )
             (i32.const 1)
            )
            (i32.const 1)
           )
          )
         )
        )
       )
      )
      (set_local $1
       (get_local $2)
      )
     )
     (if
      (i32.eqz
       (get_local $6)
      )
      (set_local $0
       (get_local $2)
      )
     )
     (set_local $4
      (i32.add
       (get_local $4)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (if (result i32)
   (i32.gt_s
    (i32.sub
     (get_local $5)
     (tee_local $2
      (if (result i32)
       (get_local $1)
       (i32.load8_u
        (i32.add
         (get_local $3)
         (get_local $1)
        )
       )
       (i32.const -1)
      )
     )
    )
    (i32.sub
     (i32.load8_u
      (i32.add
       (get_local $3)
       (get_local $0)
      )
     )
     (get_local $5)
    )
   )
   (get_local $0)
   (get_local $1)
  )
 )
 (func $_pulses2bits (; 49 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (if
   (i32.eqz
    (get_local $3)
   )
   (return
    (i32.const 0)
   )
  )
  (i32.add
   (i32.load8_u
    (i32.add
     (i32.add
      (i32.load offset=100
       (get_local $0)
      )
      (i32.load16_s
       (i32.add
        (i32.load offset=96
         (get_local $0)
        )
        (i32.shl
         (i32.add
          (i32.mul
           (i32.add
            (get_local $2)
            (i32.const 1)
           )
           (i32.load offset=8
            (get_local $0)
           )
          )
          (get_local $1)
         )
         (i32.const 1)
        )
       )
      )
     )
     (get_local $3)
    )
   )
   (i32.const 1)
  )
 )
 (func $_get_pulses (; 50 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (if
   (i32.lt_s
    (get_local $0)
    (i32.const 8)
   )
   (return
    (get_local $0)
   )
  )
  (i32.shl
   (i32.or
    (i32.and
     (get_local $0)
     (i32.const 7)
    )
    (i32.const 8)
   )
   (i32.add
    (i32.shr_s
     (get_local $0)
     (i32.const 3)
    )
    (i32.const -1)
   )
  )
 )
 (func $_compute_qn (; 51 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (set_local $2
   (call $_celt_sudiv
    (i32.add
     (i32.mul
      (tee_local $0
       (i32.add
        (i32.shl
         (get_local $0)
         (i32.const 1)
        )
        (if (result i32)
         (i32.and
          (i32.ne
           (get_local $4)
           (i32.const 0)
          )
          (i32.eq
           (get_local $0)
           (i32.const 2)
          )
         )
         (i32.const -2)
         (i32.const -1)
        )
       )
      )
      (get_local $2)
     )
     (get_local $1)
    )
    (get_local $0)
   )
  )
  (if
   (i32.gt_s
    (if (result i32)
     (i32.lt_s
      (tee_local $0
       (i32.add
        (i32.sub
         (get_local $1)
         (get_local $3)
        )
        (i32.const -32)
       )
      )
      (get_local $2)
     )
     (get_local $0)
     (tee_local $0
      (get_local $2)
     )
    )
    (i32.const 64)
   )
   (set_local $0
    (i32.const 64)
   )
   (if
    (i32.lt_s
     (get_local $0)
     (i32.const 4)
    )
    (return
     (i32.const 1)
    )
   )
  )
  (if
   (i32.lt_s
    (tee_local $0
     (i32.and
      (i32.add
       (i32.shr_s
        (i32.load16_s
         (i32.add
          (i32.shl
           (i32.and
            (get_local $0)
            (i32.const 7)
           )
           (i32.const 1)
          )
          (i32.const 1184)
         )
        )
        (i32.sub
         (i32.const 14)
         (i32.shr_s
          (get_local $0)
          (i32.const 3)
         )
        )
       )
       (i32.const 1)
      )
      (i32.const -2)
     )
    )
    (i32.const 257)
   )
   (return
    (get_local $0)
   )
   (call $_celt_fatal
    (i32.const 41390)
    (i32.const 41221)
    (i32.const 669)
   )
  )
  (i32.const 0)
 )
 (func $_intensity_stereo (; 52 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32)
  (local $6 f32)
  (local $7 f32)
  (local $8 f32)
  (set_local $8
   (f32.add
    (f32.sqrt
     (f32.add
      (f32.add
       (f32.mul
        (tee_local $6
         (f32.load
          (i32.add
           (get_local $3)
           (i32.shl
            (get_local $4)
            (i32.const 2)
           )
          )
         )
        )
        (get_local $6)
       )
       (f32.const 1.0000000036274937e-15)
      )
      (f32.mul
       (tee_local $7
        (f32.load
         (i32.add
          (get_local $3)
          (i32.shl
           (i32.add
            (get_local $0)
            (get_local $4)
           )
           (i32.const 2)
          )
         )
        )
       )
       (get_local $7)
      )
     )
    )
    (f32.const 1.0000000036274937e-15)
   )
  )
  (set_local $6
   (f32.div
    (get_local $6)
    (get_local $8)
   )
  )
  (set_local $7
   (f32.div
    (get_local $7)
    (get_local $8)
   )
  )
  (set_local $0
   (i32.const 0)
  )
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $0)
     (get_local $5)
    )
    (block
     (f32.store
      (tee_local $3
       (i32.add
        (get_local $1)
        (i32.shl
         (get_local $0)
         (i32.const 2)
        )
       )
      )
      (f32.add
       (f32.mul
        (get_local $6)
        (f32.load
         (get_local $3)
        )
       )
       (f32.mul
        (get_local $7)
        (f32.load
         (i32.add
          (get_local $2)
          (i32.shl
           (get_local $0)
           (i32.const 2)
          )
         )
        )
       )
      )
     )
     (set_local $0
      (i32.add
       (get_local $0)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
 )
 (func $_stereo_split (; 53 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 f32)
  (local $6 f32)
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $3)
     (get_local $2)
    )
    (block
     (set_local $5
      (f32.mul
       (f32.load
        (tee_local $4
         (i32.add
          (get_local $0)
          (i32.shl
           (get_local $3)
           (i32.const 2)
          )
         )
        )
       )
       (f32.const 0.7071067690849304)
      )
     )
     (f32.store
      (get_local $4)
      (f32.add
       (get_local $5)
       (tee_local $6
        (f32.mul
         (f32.load
          (tee_local $4
           (i32.add
            (get_local $1)
            (i32.shl
             (get_local $3)
             (i32.const 2)
            )
           )
          )
         )
         (f32.const 0.7071067690849304)
        )
       )
      )
     )
     (f32.store
      (get_local $4)
      (f32.sub
       (get_local $6)
       (get_local $5)
      )
     )
     (set_local $3
      (i32.add
       (get_local $3)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
 )
 (func $_stereo_merge (; 54 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 f32) (param $3 i32)
  (local $4 i32)
  (local $5 f32)
  (local $6 i32)
  (local $7 f32)
  (local $8 f32)
  (local $9 i32)
  (local $10 f32)
  (set_local $6
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.const 16)
   )
  )
  (f32.store
   (tee_local $4
    (i32.add
     (get_local $6)
     (i32.const 4)
    )
   )
   (f32.const 0)
  )
  (f32.store
   (get_local $6)
   (f32.const 0)
  )
  (call $_dual_inner_prod_c
   (get_local $1)
   (get_local $0)
   (get_local $1)
   (get_local $3)
   (get_local $4)
   (get_local $6)
  )
  (f32.store
   (get_local $4)
   (tee_local $5
    (f32.mul
     (f32.load
      (get_local $4)
     )
     (get_local $2)
    )
   )
  )
  (set_local $5
   (f32.sub
    (tee_local $7
     (f32.add
      (f32.mul
       (get_local $2)
       (get_local $2)
      )
      (f32.load
       (get_local $6)
      )
     )
    )
    (tee_local $8
     (f32.mul
      (get_local $5)
      (f32.const 2)
     )
    )
   )
  )
  (if
   (i32.or
    (f32.lt
     (tee_local $7
      (f32.add
       (get_local $7)
       (get_local $8)
      )
     )
     (f32.const 6.000000284984708e-04)
    )
    (f32.lt
     (get_local $5)
     (f32.const 6.000000284984708e-04)
    )
   )
   (block
    (drop
     (call $_memcpy
      (get_local $1)
      (get_local $0)
      (i32.shl
       (get_local $3)
       (i32.const 2)
      )
     )
    )
    (set_global $STACKTOP
     (get_local $6)
    )
    (return)
   )
  )
  (set_local $8
   (f32.div
    (f32.const 1)
    (f32.sqrt
     (get_local $5)
    )
   )
  )
  (set_local $7
   (f32.div
    (f32.const 1)
    (f32.sqrt
     (get_local $7)
    )
   )
  )
  (set_local $4
   (i32.const 0)
  )
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $4)
     (get_local $3)
    )
    (block
     (set_local $5
      (f32.mul
       (f32.load
        (tee_local $9
         (i32.add
          (get_local $0)
          (i32.shl
           (get_local $4)
           (i32.const 2)
          )
         )
        )
       )
       (get_local $2)
      )
     )
     (f32.store
      (get_local $9)
      (f32.mul
       (get_local $8)
       (f32.sub
        (get_local $5)
        (tee_local $10
         (f32.load
          (tee_local $9
           (i32.add
            (get_local $1)
            (i32.shl
             (get_local $4)
             (i32.const 2)
            )
           )
          )
         )
        )
       )
      )
     )
     (f32.store
      (get_local $9)
      (f32.mul
       (get_local $7)
       (f32.add
        (get_local $5)
        (get_local $10)
       )
      )
     )
     (set_local $4
      (i32.add
       (get_local $4)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (set_global $STACKTOP
   (get_local $6)
  )
 )
 (func $_dual_inner_prod_c (; 55 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32)
  (local $6 i32)
  (local $7 f32)
  (local $8 f32)
  (local $9 f32)
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $6)
     (get_local $3)
    )
    (block
     (set_local $7
      (f32.add
       (get_local $7)
       (f32.mul
        (tee_local $9
         (f32.load
          (i32.add
           (get_local $0)
           (i32.shl
            (get_local $6)
            (i32.const 2)
           )
          )
         )
        )
        (f32.load
         (i32.add
          (get_local $2)
          (i32.shl
           (get_local $6)
           (i32.const 2)
          )
         )
        )
       )
      )
     )
     (set_local $8
      (f32.add
       (get_local $8)
       (f32.mul
        (get_local $9)
        (f32.load
         (i32.add
          (get_local $1)
          (i32.shl
           (get_local $6)
           (i32.const 2)
          )
         )
        )
       )
      )
     )
     (set_local $6
      (i32.add
       (get_local $6)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (f32.store
   (get_local $4)
   (get_local $8)
  )
  (f32.store
   (get_local $5)
   (get_local $7)
  )
 )
 (func $_celt_fatal (; 56 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (set_local $3
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store
   (get_local $3)
   (get_local $1)
  )
  (i32.store offset=4
   (get_local $3)
   (get_local $2)
  )
  (i32.store offset=8
   (get_local $3)
   (get_local $0)
  )
  (call $_fprintf
   (get_local $3)
  )
  (call $_abort)
 )
 (func $_resampling_factor (; 57 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (block $__rjto$1
   (block $__rjti$1
    (block $__rjti$0
     (if
      (i32.lt_s
       (get_local $0)
       (i32.const 16000)
      )
      (if
       (i32.lt_s
        (get_local $0)
        (i32.const 12000)
       )
       (block
        (br_if $__rjti$0
         (i32.sub
          (get_local $0)
          (i32.const 8000)
         )
        )
        (set_local $1
         (i32.const 6)
        )
        (br $__rjti$1)
       )
       (block
        (br_if $__rjti$0
         (i32.sub
          (get_local $0)
          (i32.const 12000)
         )
        )
        (set_local $1
         (i32.const 4)
        )
        (br $__rjti$1)
       )
      )
      (block
       (if
        (i32.lt_s
         (get_local $0)
         (i32.const 24000)
        )
        (block
         (br_if $__rjti$0
          (i32.sub
           (get_local $0)
           (i32.const 16000)
          )
         )
         (set_local $1
          (i32.const 3)
         )
         (br $__rjti$1)
        )
       )
       (if
        (i32.ge_s
         (get_local $0)
         (i32.const 48000)
        )
        (block $switch-default8
         (br_if $__rjti$0
          (i32.sub
           (get_local $0)
           (i32.const 48000)
          )
         )
         (set_local $1
          (i32.const 1)
         )
         (br $__rjti$1)
        )
       )
       (br_if $__rjti$0
        (i32.sub
         (get_local $0)
         (i32.const 24000)
        )
       )
       (set_local $1
        (i32.const 2)
       )
       (br $__rjti$1)
      )
     )
    )
    (call $_celt_fatal
     (i32.const 49348)
     (i32.const 41461)
     (i32.const 84)
    )
    (br $__rjto$1)
   )
   (return
    (get_local $1)
   )
  )
  (i32.const 0)
 )
 (func $_comb_filter (; 58 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 f32) (param $6 f32) (param $7 i32) (param $8 i32) (param $9 i32) (param $10 i32)
  (local $11 f32)
  (local $12 f32)
  (local $13 f32)
  (local $14 f32)
  (local $15 f32)
  (local $16 f32)
  (local $17 f32)
  (local $18 f32)
  (local $19 f32)
  (local $20 f32)
  (local $21 f32)
  (local $22 f32)
  (if
   (i32.and
    (f32.eq
     (get_local $5)
     (f32.const 0)
    )
    (f32.eq
     (get_local $6)
     (f32.const 0)
    )
   )
   (block
    (if
     (i32.eq
      (get_local $1)
      (get_local $0)
     )
     (return)
    )
    (drop
     (call $_memmove
      (get_local $0)
      (get_local $1)
      (i32.shl
       (get_local $4)
       (i32.const 2)
      )
     )
    )
    (return)
   )
  )
  (if
   (i32.le_s
    (get_local $2)
    (i32.const 15)
   )
   (set_local $2
    (i32.const 15)
   )
  )
  (set_local $19
   (f32.mul
    (f32.load
     (i32.add
      (i32.mul
       (get_local $7)
       (i32.const 12)
      )
      (i32.const 1232)
     )
    )
    (get_local $5)
   )
  )
  (set_local $20
   (f32.mul
    (f32.load
     (i32.add
      (i32.mul
       (get_local $7)
       (i32.const 12)
      )
      (i32.const 1236)
     )
    )
    (get_local $5)
   )
  )
  (set_local $21
   (f32.mul
    (f32.load
     (i32.add
      (i32.mul
       (get_local $7)
       (i32.const 12)
      )
      (i32.const 1240)
     )
    )
    (get_local $5)
   )
  )
  (set_local $15
   (f32.mul
    (f32.load
     (i32.add
      (i32.mul
       (get_local $8)
       (i32.const 12)
      )
      (i32.const 1232)
     )
    )
    (get_local $6)
   )
  )
  (set_local $16
   (f32.mul
    (f32.load
     (i32.add
      (i32.mul
       (get_local $8)
       (i32.const 12)
      )
      (i32.const 1236)
     )
    )
    (get_local $6)
   )
  )
  (set_local $17
   (f32.mul
    (f32.load
     (i32.add
      (i32.mul
       (get_local $8)
       (i32.const 12)
      )
      (i32.const 1240)
     )
    )
    (get_local $6)
   )
  )
  (set_local $13
   (f32.load
    (i32.add
     (get_local $1)
     (i32.shl
      (i32.sub
       (i32.const 1)
       (if (result i32)
        (i32.gt_s
         (get_local $3)
         (i32.const 15)
        )
        (get_local $3)
        (tee_local $3
         (i32.const 15)
        )
       )
      )
      (i32.const 2)
     )
    )
   )
  )
  (set_local $14
   (f32.load
    (i32.add
     (get_local $1)
     (i32.shl
      (i32.sub
       (i32.const 0)
       (get_local $3)
      )
      (i32.const 2)
     )
    )
   )
  )
  (set_local $11
   (f32.load
    (i32.add
     (get_local $1)
     (i32.shl
      (i32.xor
       (get_local $3)
       (i32.const -1)
      )
      (i32.const 2)
     )
    )
   )
  )
  (set_local $18
   (f32.load
    (i32.add
     (get_local $1)
     (i32.shl
      (i32.sub
       (i32.const -2)
       (get_local $3)
      )
      (i32.const 2)
     )
    )
   )
  )
  (if
   (i32.and
    (i32.and
     (f32.eq
      (get_local $5)
      (get_local $6)
     )
     (i32.eq
      (get_local $2)
      (get_local $3)
     )
    )
    (i32.eq
     (get_local $7)
     (get_local $8)
    )
   )
   (set_local $10
    (i32.const 0)
   )
  )
  (set_local $5
   (get_local $11)
  )
  (set_local $7
   (i32.const 0)
  )
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $7)
     (get_local $10)
    )
    (block
     (f32.store
      (i32.add
       (get_local $0)
       (i32.shl
        (get_local $7)
        (i32.const 2)
       )
      )
      (f32.add
       (f32.add
        (f32.add
         (f32.add
          (f32.add
           (f32.add
            (f32.load
             (i32.add
              (get_local $1)
              (i32.shl
               (get_local $7)
               (i32.const 2)
              )
             )
            )
            (f32.mul
             (f32.mul
              (tee_local $12
               (f32.sub
                (f32.const 1)
                (tee_local $11
                 (f32.mul
                  (tee_local $11
                   (f32.load
                    (i32.add
                     (get_local $9)
                     (i32.shl
                      (get_local $7)
                      (i32.const 2)
                     )
                    )
                   )
                  )
                  (get_local $11)
                 )
                )
               )
              )
              (get_local $19)
             )
             (f32.load
              (i32.add
               (get_local $1)
               (i32.shl
                (tee_local $8
                 (i32.sub
                  (get_local $7)
                  (get_local $2)
                 )
                )
                (i32.const 2)
               )
              )
             )
            )
           )
           (f32.mul
            (f32.mul
             (get_local $12)
             (get_local $20)
            )
            (f32.add
             (f32.load
              (i32.add
               (get_local $1)
               (i32.shl
                (i32.add
                 (get_local $8)
                 (i32.const 1)
                )
                (i32.const 2)
               )
              )
             )
             (f32.load
              (i32.add
               (get_local $1)
               (i32.shl
                (i32.add
                 (get_local $8)
                 (i32.const -1)
                )
                (i32.const 2)
               )
              )
             )
            )
           )
          )
          (f32.mul
           (f32.mul
            (get_local $12)
            (get_local $21)
           )
           (f32.add
            (f32.load
             (i32.add
              (get_local $1)
              (i32.shl
               (i32.add
                (get_local $8)
                (i32.const 2)
               )
               (i32.const 2)
              )
             )
            )
            (f32.load
             (i32.add
              (get_local $1)
              (i32.shl
               (i32.add
                (get_local $8)
                (i32.const -2)
               )
               (i32.const 2)
              )
             )
            )
           )
          )
         )
         (f32.mul
          (f32.mul
           (get_local $11)
           (get_local $15)
          )
          (get_local $14)
         )
        )
        (f32.mul
         (f32.mul
          (get_local $11)
          (get_local $16)
         )
         (f32.add
          (get_local $13)
          (get_local $5)
         )
        )
       )
       (f32.mul
        (f32.mul
         (get_local $11)
         (get_local $17)
        )
        (f32.add
         (tee_local $22
          (f32.load
           (i32.add
            (get_local $1)
            (i32.shl
             (i32.add
              (i32.sub
               (get_local $7)
               (get_local $3)
              )
              (i32.const 2)
             )
             (i32.const 2)
            )
           )
          )
         )
         (get_local $18)
        )
       )
      )
     )
     (set_local $11
      (get_local $13)
     )
     (set_local $12
      (get_local $14)
     )
     (set_local $18
      (get_local $5)
     )
     (set_local $13
      (get_local $22)
     )
     (set_local $7
      (i32.add
       (get_local $7)
       (i32.const 1)
      )
     )
     (set_local $14
      (get_local $11)
     )
     (set_local $5
      (get_local $12)
     )
     (br $while-in)
    )
   )
  )
  (if
   (f32.ne
    (get_local $6)
    (f32.const 0)
   )
   (block
    (call $_comb_filter_const_c
     (i32.add
      (get_local $0)
      (i32.shl
       (get_local $7)
       (i32.const 2)
      )
     )
     (i32.add
      (get_local $1)
      (i32.shl
       (get_local $7)
       (i32.const 2)
      )
     )
     (get_local $3)
     (i32.sub
      (get_local $4)
      (get_local $7)
     )
     (get_local $15)
     (get_local $16)
     (get_local $17)
    )
    (return)
   )
  )
  (if
   (i32.eq
    (get_local $1)
    (get_local $0)
   )
   (return)
  )
  (drop
   (call $_memmove
    (i32.add
     (get_local $0)
     (i32.shl
      (get_local $10)
      (i32.const 2)
     )
    )
    (i32.add
     (get_local $1)
     (i32.shl
      (get_local $10)
      (i32.const 2)
     )
    )
    (i32.shl
     (i32.sub
      (get_local $4)
      (get_local $10)
     )
     (i32.const 2)
    )
   )
  )
 )
 (func $_comb_filter_const_c (; 59 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 f32) (param $5 f32) (param $6 f32)
  (local $7 i32)
  (local $8 f32)
  (local $9 f32)
  (local $10 f32)
  (local $11 f32)
  (local $12 f32)
  (local $13 f32)
  (local $14 f32)
  (set_local $11
   (f32.load
    (i32.add
     (get_local $1)
     (i32.shl
      (i32.sub
       (i32.const -2)
       (get_local $2)
      )
      (i32.const 2)
     )
    )
   )
  )
  (set_local $8
   (f32.load
    (i32.add
     (get_local $1)
     (i32.shl
      (i32.xor
       (get_local $2)
       (i32.const -1)
      )
      (i32.const 2)
     )
    )
   )
  )
  (set_local $9
   (f32.load
    (i32.add
     (get_local $1)
     (i32.shl
      (i32.sub
       (i32.const 0)
       (get_local $2)
      )
      (i32.const 2)
     )
    )
   )
  )
  (set_local $10
   (f32.load
    (i32.add
     (get_local $1)
     (i32.shl
      (i32.sub
       (i32.const 1)
       (get_local $2)
      )
      (i32.const 2)
     )
    )
   )
  )
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $7)
     (get_local $3)
    )
    (block
     (f32.store
      (i32.add
       (get_local $0)
       (i32.shl
        (get_local $7)
        (i32.const 2)
       )
      )
      (f32.add
       (f32.add
        (f32.add
         (f32.load
          (i32.add
           (get_local $1)
           (i32.shl
            (get_local $7)
            (i32.const 2)
           )
          )
         )
         (f32.mul
          (get_local $9)
          (get_local $4)
         )
        )
        (f32.mul
         (f32.add
          (get_local $10)
          (get_local $8)
         )
         (get_local $5)
        )
       )
       (f32.mul
        (f32.add
         (tee_local $12
          (f32.load
           (i32.add
            (get_local $1)
            (i32.shl
             (i32.add
              (i32.sub
               (get_local $7)
               (get_local $2)
              )
              (i32.const 2)
             )
             (i32.const 2)
            )
           )
          )
         )
         (get_local $11)
        )
        (get_local $6)
       )
      )
     )
     (set_local $13
      (get_local $10)
     )
     (set_local $14
      (get_local $9)
     )
     (set_local $11
      (get_local $8)
     )
     (set_local $7
      (i32.add
       (get_local $7)
       (i32.const 1)
      )
     )
     (set_local $10
      (get_local $12)
     )
     (set_local $9
      (get_local $13)
     )
     (set_local $8
      (get_local $14)
     )
     (br $while-in)
    )
   )
  )
 )
 (func $_init_caps (; 60 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (set_local $5
   (i32.add
    (get_local $0)
    (i32.const 8)
   )
  )
  (set_local $6
   (i32.add
    (get_local $0)
    (i32.const 32)
   )
  )
  (set_local $7
   (i32.add
    (get_local $0)
    (i32.const 104)
   )
  )
  (set_local $8
   (i32.add
    (i32.add
     (i32.shl
      (get_local $2)
      (i32.const 1)
     )
     (get_local $3)
    )
    (i32.const -1)
   )
  )
  (set_local $0
   (i32.const 0)
  )
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $0)
     (tee_local $4
      (i32.load
       (get_local $5)
      )
     )
    )
    (block
     (i32.store
      (i32.add
       (get_local $1)
       (i32.shl
        (get_local $0)
        (i32.const 2)
       )
      )
      (i32.shr_s
       (i32.mul
        (i32.mul
         (i32.sub
          (i32.load8_u
           (i32.add
            (i32.load
             (get_local $7)
            )
            (i32.add
             (i32.mul
              (get_local $4)
              (get_local $8)
             )
             (get_local $0)
            )
           )
          )
          (i32.const -64)
         )
         (get_local $3)
        )
        (i32.shl
         (i32.sub
          (i32.load16_s
           (i32.add
            (tee_local $9
             (i32.load
              (get_local $6)
             )
            )
            (i32.shl
             (tee_local $4
              (i32.add
               (get_local $0)
               (i32.const 1)
              )
             )
             (i32.const 1)
            )
           )
          )
          (i32.load16_s
           (i32.add
            (get_local $9)
            (i32.shl
             (get_local $0)
             (i32.const 1)
            )
           )
          )
         )
         (get_local $2)
        )
       )
       (i32.const 2)
      )
     )
     (set_local $0
      (get_local $4)
     )
     (br $while-in)
    )
   )
  )
 )
 (func $_celt_encoder_get_size (; 61 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (call $_opus_custom_encoder_get_size
   (i32.load offset=4
    (tee_local $1
     (call $_opus_custom_mode_create)
    )
   )
   (i32.load offset=8
    (get_local $1)
   )
   (get_local $0)
  )
 )
 (func $_opus_custom_encoder_get_size (; 62 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (i32.add
   (i32.add
    (i32.add
     (i32.shl
      (i32.mul
       (get_local $0)
       (get_local $2)
      )
      (i32.const 2)
     )
     (i32.const 244)
    )
    (i32.shl
     (get_local $2)
     (i32.const 12)
    )
   )
   (i32.shl
    (i32.mul
     (i32.shl
      (get_local $2)
      (i32.const 2)
     )
     (get_local $1)
    )
    (i32.const 2)
   )
  )
 )
 (func $_celt_encoder_init (; 63 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (set_local $4
   (call $_opus_custom_mode_create)
  )
  (if
   (tee_local $2
    (call $_opus_custom_encoder_init_arch
     (get_local $0)
     (get_local $4)
     (get_local $2)
     (get_local $3)
    )
   )
   (return
    (get_local $2)
   )
  )
  (set_local $1
   (call $_resampling_factor
    (get_local $1)
   )
  )
  (i32.store offset=28
   (get_local $0)
   (get_local $1)
  )
  (i32.const 0)
 )
 (func $_opus_custom_encoder_init_arch (; 64 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  (set_local $4
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.gt_u
    (get_local $2)
    (i32.const 2)
   )
   (block
    (set_global $STACKTOP
     (get_local $4)
    )
    (return
     (i32.const -1)
    )
   )
  )
  (if
   (i32.or
    (i32.eqz
     (get_local $0)
    )
    (i32.eqz
     (get_local $1)
    )
   )
   (block
    (set_global $STACKTOP
     (get_local $4)
    )
    (return
     (i32.const -7)
    )
   )
  )
  (set_local $5
   (call $_opus_custom_encoder_get_size
    (i32.load offset=4
     (get_local $1)
    )
    (i32.load offset=8
     (get_local $1)
    )
    (get_local $2)
   )
  )
  (drop
   (call $_memset
    (get_local $0)
    (i32.const 0)
    (get_local $5)
   )
  )
  (i32.store
   (get_local $0)
   (get_local $1)
  )
  (i32.store offset=4
   (get_local $0)
   (get_local $2)
  )
  (i32.store offset=8
   (get_local $0)
   (get_local $2)
  )
  (i32.store offset=28
   (get_local $0)
   (i32.const 1)
  )
  (i32.store offset=32
   (get_local $0)
   (i32.const 0)
  )
  (i32.store offset=36
   (get_local $0)
   (i32.load offset=12
    (get_local $1)
   )
  )
  (i32.store offset=48
   (get_local $0)
   (i32.const 1)
  )
  (i32.store offset=72
   (get_local $0)
   (get_local $3)
  )
  (i32.store offset=52
   (get_local $0)
   (i32.const 1)
  )
  (i32.store offset=16
   (get_local $0)
   (i32.const 1)
  )
  (i32.store offset=40
   (get_local $0)
   (i32.const -1)
  )
  (i32.store offset=44
   (get_local $0)
   (i32.const 0)
  )
  (i32.store offset=12
   (get_local $0)
   (i32.const 0)
  )
  (i32.store offset=24
   (get_local $0)
   (i32.const 5)
  )
  (i32.store offset=60
   (get_local $0)
   (i32.const 24)
  )
  (drop
   (call $_opus_custom_encoder_ctl
    (get_local $0)
    (i32.const 4028)
    (get_local $4)
   )
  )
  (set_global $STACKTOP
   (get_local $4)
  )
  (i32.const 0)
 )
 (func $_opus_custom_encoder_ctl (; 65 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (set_local $3
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store
   (get_local $3)
   (get_local $2)
  )
  (block $__rjto$1 (result i32)
   (block $__rjti$1
    (block $__rjti$0
     (block $switch-default
      (block $switch-case19
       (block $switch-case18
        (block $switch-case17
         (block $switch-case16
          (block $switch-case15
           (block $switch-case14
            (block $switch-case13
             (block $switch-case12
              (block $switch-case11
               (block $switch-case10
                (block $switch-case9
                 (block $switch-case8
                  (block $switch-case7
                   (block $switch-case6
                    (block $switch-case5
                     (block $switch-case4
                      (block $switch-case3
                       (block $switch-case2
                        (block $switch-case1
                         (block $switch-case0
                          (block $switch-case
                           (br_table $switch-case6 $switch-default $switch-default $switch-default $switch-case5 $switch-default $switch-default $switch-default $switch-case $switch-default $switch-default $switch-default $switch-case3 $switch-default $switch-default $switch-default $switch-default $switch-default $switch-case4 $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-case12 $switch-default $switch-default $switch-case17 $switch-default $switch-default $switch-default $switch-default $switch-case8 $switch-case9 $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-case10 $switch-case11 $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-case2 $switch-default $switch-default $switch-default $switch-default $switch-default $switch-case7 $switch-default $switch-case0 $switch-default $switch-case1 $switch-default $switch-default $switch-case16 $switch-case13 $switch-default $switch-default $switch-default $switch-default $switch-default $switch-case14 $switch-default $switch-case18 $switch-default $switch-case19 $switch-default $switch-case15 $switch-default
                            (i32.sub
                             (get_local $1)
                             (i32.const 4002)
                            )
                           )
                          )
                          (set_local $2
                           (i32.load
                            (tee_local $1
                             (i32.and
                              (i32.add
                               (i32.load
                                (get_local $3)
                               )
                               (i32.const 3)
                              )
                              (i32.const -4)
                             )
                            )
                           )
                          )
                          (i32.store
                           (get_local $3)
                           (i32.add
                            (get_local $1)
                            (i32.const 4)
                           )
                          )
                          (br_if $__rjti$1
                           (i32.gt_u
                            (get_local $2)
                            (i32.const 10)
                           )
                          )
                          (i32.store offset=24
                           (get_local $0)
                           (get_local $2)
                          )
                          (br $__rjti$0)
                         )
                         (set_local $2
                          (i32.load
                           (tee_local $1
                            (i32.and
                             (i32.add
                              (i32.load
                               (get_local $3)
                              )
                              (i32.const 3)
                             )
                             (i32.const -4)
                            )
                           )
                          )
                         )
                         (i32.store
                          (get_local $3)
                          (i32.add
                           (get_local $1)
                           (i32.const 4)
                          )
                         )
                         (br_if $__rjti$1
                          (i32.lt_s
                           (get_local $2)
                           (i32.const 0)
                          )
                         )
                         (br_if $__rjti$1
                          (i32.ge_s
                           (get_local $2)
                           (i32.load offset=8
                            (i32.load
                             (get_local $0)
                            )
                           )
                          )
                         )
                         (i32.store offset=32
                          (get_local $0)
                          (get_local $2)
                         )
                         (br $__rjti$0)
                        )
                        (set_local $2
                         (i32.load
                          (tee_local $1
                           (i32.and
                            (i32.add
                             (i32.load
                              (get_local $3)
                             )
                             (i32.const 3)
                            )
                            (i32.const -4)
                           )
                          )
                         )
                        )
                        (i32.store
                         (get_local $3)
                         (i32.add
                          (get_local $1)
                          (i32.const 4)
                         )
                        )
                        (br_if $__rjti$1
                         (i32.lt_s
                          (get_local $2)
                          (i32.const 1)
                         )
                        )
                        (br_if $__rjti$1
                         (i32.gt_s
                          (get_local $2)
                          (i32.load offset=8
                           (i32.load
                            (get_local $0)
                           )
                          )
                         )
                        )
                        (i32.store offset=36
                         (get_local $0)
                         (get_local $2)
                        )
                        (br $__rjti$0)
                       )
                       (set_local $2
                        (i32.load
                         (tee_local $1
                          (i32.and
                           (i32.add
                            (i32.load
                             (get_local $3)
                            )
                            (i32.const 3)
                           )
                           (i32.const -4)
                          )
                         )
                        )
                       )
                       (i32.store
                        (get_local $3)
                        (i32.add
                         (get_local $1)
                         (i32.const 4)
                        )
                       )
                       (br_if $__rjti$1
                        (i32.gt_u
                         (get_local $2)
                         (i32.const 2)
                        )
                       )
                       (i32.store offset=20
                        (get_local $0)
                        (i32.ne
                         (get_local $2)
                         (i32.const 2)
                        )
                       )
                       (i32.store offset=12
                        (get_local $0)
                        (i32.eqz
                         (get_local $2)
                        )
                       )
                       (br $__rjti$0)
                      )
                      (set_local $2
                       (i32.load
                        (tee_local $1
                         (i32.and
                          (i32.add
                           (i32.load
                            (get_local $3)
                           )
                           (i32.const 3)
                          )
                          (i32.const -4)
                         )
                        )
                       )
                      )
                      (i32.store
                       (get_local $3)
                       (i32.add
                        (get_local $1)
                        (i32.const 4)
                       )
                      )
                      (br_if $__rjti$1
                       (i32.gt_u
                        (get_local $2)
                        (i32.const 100)
                       )
                      )
                      (i32.store offset=56
                       (get_local $0)
                       (get_local $2)
                      )
                      (br $__rjti$0)
                     )
                     (set_local $1
                      (i32.load
                       (tee_local $2
                        (i32.and
                         (i32.add
                          (i32.load
                           (get_local $3)
                          )
                          (i32.const 3)
                         )
                         (i32.const -4)
                        )
                       )
                      )
                     )
                     (i32.store
                      (get_local $3)
                      (i32.add
                       (get_local $2)
                       (i32.const 4)
                      )
                     )
                     (i32.store offset=52
                      (get_local $0)
                      (get_local $1)
                     )
                     (br $__rjti$0)
                    )
                    (set_local $1
                     (i32.load
                      (tee_local $2
                       (i32.and
                        (i32.add
                         (i32.load
                          (get_local $3)
                         )
                         (i32.const 3)
                        )
                        (i32.const -4)
                       )
                      )
                     )
                    )
                    (i32.store
                     (get_local $3)
                     (i32.add
                      (get_local $2)
                      (i32.const 4)
                     )
                    )
                    (i32.store offset=44
                     (get_local $0)
                     (get_local $1)
                    )
                    (br $__rjti$0)
                   )
                   (set_local $2
                    (i32.load
                     (tee_local $1
                      (i32.and
                       (i32.add
                        (i32.load
                         (get_local $3)
                        )
                        (i32.const 3)
                       )
                       (i32.const -4)
                      )
                     )
                    )
                   )
                   (i32.store
                    (get_local $3)
                    (i32.add
                     (get_local $1)
                     (i32.const 4)
                    )
                   )
                   (br_if $__rjti$1
                    (i32.eqz
                     (i32.or
                      (i32.gt_s
                       (get_local $2)
                       (i32.const 500)
                      )
                      (i32.eq
                       (get_local $2)
                       (i32.const -1)
                      )
                     )
                    )
                   )
                   (i32.store offset=40
                    (get_local $0)
                    (if (result i32)
                     (i32.lt_s
                      (get_local $2)
                      (tee_local $0
                       (i32.mul
                        (i32.load offset=4
                         (get_local $0)
                        )
                        (i32.const 260000)
                       )
                      )
                     )
                     (get_local $2)
                     (get_local $0)
                    )
                   )
                   (br $__rjti$0)
                  )
                  (set_local $2
                   (i32.load
                    (tee_local $1
                     (i32.and
                      (i32.add
                       (i32.load
                        (get_local $3)
                       )
                       (i32.const 3)
                      )
                      (i32.const -4)
                     )
                    )
                   )
                  )
                  (i32.store
                   (get_local $3)
                   (i32.add
                    (get_local $1)
                    (i32.const 4)
                   )
                  )
                  (br_if $__rjti$1
                   (i32.gt_u
                    (i32.add
                     (get_local $2)
                     (i32.const -1)
                    )
                    (i32.const 1)
                   )
                  )
                  (i32.store offset=8
                   (get_local $0)
                   (get_local $2)
                  )
                  (br $__rjti$0)
                 )
                 (set_local $2
                  (i32.load
                   (tee_local $1
                    (i32.and
                     (i32.add
                      (i32.load
                       (get_local $3)
                      )
                      (i32.const 3)
                     )
                     (i32.const -4)
                    )
                   )
                  )
                 )
                 (i32.store
                  (get_local $3)
                  (i32.add
                   (get_local $1)
                   (i32.const 4)
                  )
                 )
                 (br_if $__rjti$1
                  (i32.gt_u
                   (i32.add
                    (get_local $2)
                    (i32.const -8)
                   )
                   (i32.const 16)
                  )
                 )
                 (i32.store offset=60
                  (get_local $0)
                  (get_local $2)
                 )
                 (br $__rjti$0)
                )
                (set_local $1
                 (i32.load
                  (tee_local $2
                   (i32.and
                    (i32.add
                     (i32.load
                      (get_local $3)
                     )
                     (i32.const 3)
                    )
                    (i32.const -4)
                   )
                  )
                 )
                )
                (i32.store
                 (get_local $3)
                 (i32.add
                  (get_local $2)
                  (i32.const 4)
                 )
                )
                (i32.store
                 (get_local $1)
                 (i32.load offset=60
                  (get_local $0)
                 )
                )
                (br $__rjti$0)
               )
               (set_local $2
                (i32.load
                 (tee_local $1
                  (i32.and
                   (i32.add
                    (i32.load
                     (get_local $3)
                    )
                    (i32.const 3)
                   )
                   (i32.const -4)
                  )
                 )
                )
               )
               (i32.store
                (get_local $3)
                (i32.add
                 (get_local $1)
                 (i32.const 4)
                )
               )
               (br_if $__rjti$1
                (i32.gt_u
                 (get_local $2)
                 (i32.const 1)
                )
               )
               (i32.store offset=68
                (get_local $0)
                (get_local $2)
               )
               (br $__rjti$0)
              )
              (set_local $2
               (i32.load
                (tee_local $1
                 (i32.and
                  (i32.add
                   (i32.load
                    (get_local $3)
                   )
                   (i32.const 3)
                  )
                  (i32.const -4)
                 )
                )
               )
              )
              (i32.store
               (get_local $3)
               (i32.add
                (get_local $1)
                (i32.const 4)
               )
              )
              (br_if $__rjti$1
               (i32.eqz
                (get_local $2)
               )
              )
              (i32.store
               (get_local $2)
               (i32.load offset=68
                (get_local $0)
               )
              )
              (br $__rjti$0)
             )
             (set_local $6
              (i32.load offset=4
               (tee_local $2
                (i32.load
                 (get_local $0)
                )
               )
              )
             )
             (set_local $5
              (i32.mul
               (tee_local $1
                (i32.load
                 (tee_local $7
                  (i32.add
                   (get_local $0)
                   (i32.const 4)
                  )
                 )
                )
               )
               (tee_local $4
                (i32.load offset=8
                 (get_local $2)
                )
               )
              )
             )
             (set_local $9
              (i32.add
               (tee_local $8
                (i32.add
                 (i32.add
                  (i32.add
                   (get_local $0)
                   (i32.const 244)
                  )
                  (i32.shl
                   (i32.mul
                    (get_local $1)
                    (i32.add
                     (get_local $6)
                     (i32.const 1024)
                    )
                   )
                   (i32.const 2)
                  )
                 )
                 (i32.shl
                  (get_local $5)
                  (i32.const 2)
                 )
                )
               )
               (i32.shl
                (get_local $5)
                (i32.const 2)
               )
              )
             )
             (set_local $5
              (i32.add
               (get_local $0)
               (i32.const 76)
              )
             )
             (set_local $4
              (i32.add
               (call $_opus_custom_encoder_get_size
                (get_local $6)
                (get_local $4)
                (get_local $1)
               )
               (i32.const -76)
              )
             )
             (drop
              (call $_memset
               (get_local $5)
               (i32.const 0)
               (get_local $4)
              )
             )
             (set_local $4
              (i32.const 0)
             )
             (loop $while-in
              (if
               (i32.lt_s
                (get_local $4)
                (i32.mul
                 (get_local $1)
                 (i32.load offset=8
                  (get_local $2)
                 )
                )
               )
               (block
                (f32.store
                 (i32.add
                  (get_local $9)
                  (i32.shl
                   (get_local $4)
                   (i32.const 2)
                  )
                 )
                 (f32.const -28)
                )
                (f32.store
                 (i32.add
                  (get_local $8)
                  (i32.shl
                   (get_local $4)
                   (i32.const 2)
                  )
                 )
                 (f32.const -28)
                )
                (set_local $4
                 (i32.add
                  (get_local $4)
                  (i32.const 1)
                 )
                )
                (set_local $2
                 (i32.load
                  (get_local $0)
                 )
                )
                (set_local $1
                 (i32.load
                  (get_local $7)
                 )
                )
                (br $while-in)
               )
              )
             )
             (i32.store offset=216
              (get_local $0)
              (i32.const 0)
             )
             (f32.store offset=84
              (get_local $0)
              (f32.const 1)
             )
             (i32.store offset=80
              (get_local $0)
              (i32.const 2)
             )
             (i32.store offset=88
              (get_local $0)
              (i32.const 256)
             )
             (i32.store offset=96
              (get_local $0)
              (i32.const 0)
             )
             (i32.store offset=100
              (get_local $0)
              (i32.const 0)
             )
             (br $__rjti$0)
            )
            (set_local $1
             (i32.load
              (tee_local $2
               (i32.and
                (i32.add
                 (i32.load
                  (get_local $3)
                 )
                 (i32.const 3)
                )
                (i32.const -4)
               )
              )
             )
            )
            (i32.store
             (get_local $3)
             (i32.add
              (get_local $2)
              (i32.const 4)
             )
            )
            (i32.store offset=48
             (get_local $0)
             (get_local $1)
            )
            (br $__rjti$0)
           )
           (set_local $2
            (i32.load
             (tee_local $1
              (i32.and
               (i32.add
                (i32.load
                 (get_local $3)
                )
                (i32.const 3)
               )
               (i32.const -4)
              )
             )
            )
           )
           (i32.store
            (get_local $3)
            (i32.add
             (get_local $1)
             (i32.const 4)
            )
           )
           (br_if $__rjti$0
            (i32.eqz
             (get_local $2)
            )
           )
           (i64.store align=4
            (tee_local $0
             (i32.add
              (get_local $0)
              (i32.const 120)
             )
            )
            (i64.load align=4
             (get_local $2)
            )
           )
           (i64.store offset=8 align=4
            (get_local $0)
            (i64.load offset=8 align=4
             (get_local $2)
            )
           )
           (i64.store offset=16 align=4
            (get_local $0)
            (i64.load offset=16 align=4
             (get_local $2)
            )
           )
           (i64.store offset=24 align=4
            (get_local $0)
            (i64.load offset=24 align=4
             (get_local $2)
            )
           )
           (i64.store offset=32 align=4
            (get_local $0)
            (i64.load offset=32 align=4
             (get_local $2)
            )
           )
           (i64.store offset=40 align=4
            (get_local $0)
            (i64.load offset=40 align=4
             (get_local $2)
            )
           )
           (i64.store offset=48 align=4
            (get_local $0)
            (i64.load offset=48 align=4
             (get_local $2)
            )
           )
           (i64.store offset=56 align=4
            (get_local $0)
            (i64.load offset=56 align=4
             (get_local $2)
            )
           )
           (br $__rjti$0)
          )
          (set_local $2
           (i32.load
            (tee_local $1
             (i32.and
              (i32.add
               (i32.load
                (get_local $3)
               )
               (i32.const 3)
              )
              (i32.const -4)
             )
            )
           )
          )
          (i32.store
           (get_local $3)
           (i32.add
            (get_local $1)
            (i32.const 4)
           )
          )
          (br_if $__rjti$0
           (i32.eqz
            (get_local $2)
           )
          )
          (i64.store offset=184 align=4
           (get_local $0)
           (i64.load align=4
            (get_local $2)
           )
          )
          (br $__rjti$0)
         )
         (set_local $2
          (i32.load
           (tee_local $1
            (i32.and
             (i32.add
              (i32.load
               (get_local $3)
              )
              (i32.const 3)
             )
             (i32.const -4)
            )
           )
          )
         )
         (i32.store
          (get_local $3)
          (i32.add
           (get_local $1)
           (i32.const 4)
          )
         )
         (br_if $__rjti$1
          (i32.eqz
           (get_local $2)
          )
         )
         (i32.store
          (get_local $2)
          (i32.load
           (get_local $0)
          )
         )
         (br $__rjti$0)
        )
        (set_local $2
         (i32.load
          (tee_local $1
           (i32.and
            (i32.add
             (i32.load
              (get_local $3)
             )
             (i32.const 3)
            )
            (i32.const -4)
           )
          )
         )
        )
        (i32.store
         (get_local $3)
         (i32.add
          (get_local $1)
          (i32.const 4)
         )
        )
        (br_if $__rjti$1
         (i32.eqz
          (get_local $2)
         )
        )
        (i32.store
         (get_local $2)
         (i32.load offset=76
          (get_local $0)
         )
        )
        (br $__rjti$0)
       )
       (set_local $1
        (i32.load
         (tee_local $2
          (i32.and
           (i32.add
            (i32.load
             (get_local $3)
            )
            (i32.const 3)
           )
           (i32.const -4)
          )
         )
        )
       )
       (i32.store
        (get_local $3)
        (i32.add
         (get_local $2)
         (i32.const 4)
        )
       )
       (i32.store
        (i32.sub
         (get_local $0)
         (i32.const -64)
        )
        (get_local $1)
       )
       (br $__rjti$0)
      )
      (set_local $1
       (i32.load
        (tee_local $2
         (i32.and
          (i32.add
           (i32.load
            (get_local $3)
           )
           (i32.const 3)
          )
          (i32.const -4)
         )
        )
       )
      )
      (i32.store
       (get_local $3)
       (i32.add
        (get_local $2)
        (i32.const 4)
       )
      )
      (i32.store offset=236
       (get_local $0)
       (get_local $1)
      )
      (br $__rjti$0)
     )
     (set_global $STACKTOP
      (get_local $3)
     )
     (return
      (i32.const -5)
     )
    )
    (set_global $STACKTOP
     (get_local $3)
    )
    (return
     (i32.const 0)
    )
   )
   (set_global $STACKTOP
    (get_local $3)
   )
   (i32.const -1)
  )
 )
 (func $_celt_preemphasis (; 66 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 f32) (param $6 f32) (param $7 i32) (param $8 i32)
  (local $9 i32)
  (local $10 f32)
  (local $11 i32)
  (local $12 i32)
  (local $13 f32)
  (set_local $10
   (f32.load
    (get_local $7)
   )
  )
  (block $__rjto$0
   (block $__rjti$0
    (if
     (f32.eq
      (get_local $6)
      (f32.const 0)
     )
     (block
      (if
       (i32.ne
        (get_local $4)
        (i32.const 1)
       )
       (block
        (set_local $11
         (i32.div_s
          (get_local $2)
          (get_local $4)
         )
        )
        (br $__rjti$0)
       )
      )
      (set_local $11
       (if (result i32)
        (get_local $8)
        (get_local $2)
        (block
         (set_local $4
          (i32.const 0)
         )
         (loop $while-in
          (if
           (i32.lt_s
            (get_local $4)
            (get_local $2)
           )
           (block
            (f32.store
             (i32.add
              (get_local $1)
              (i32.shl
               (get_local $4)
               (i32.const 2)
              )
             )
             (f32.sub
              (tee_local $6
               (f32.mul
                (f32.load
                 (i32.add
                  (get_local $0)
                  (i32.shl
                   (i32.mul
                    (get_local $4)
                    (get_local $3)
                   )
                   (i32.const 2)
                  )
                 )
                )
                (f32.const 32768)
               )
              )
              (get_local $10)
             )
            )
            (set_local $10
             (f32.mul
              (get_local $6)
              (get_local $5)
             )
            )
            (set_local $4
             (i32.add
              (get_local $4)
              (i32.const 1)
             )
            )
            (br $while-in)
           )
          )
         )
         (f32.store
          (get_local $7)
          (get_local $10)
         )
         (return)
        )
       )
      )
     )
     (block
      (set_local $11
       (i32.div_s
        (get_local $2)
        (get_local $4)
       )
      )
      (br_if $__rjti$0
       (i32.ne
        (get_local $4)
        (i32.const 1)
       )
      )
     )
    )
    (br $__rjto$0)
   )
   (drop
    (call $_memset
     (get_local $1)
     (i32.const 0)
     (i32.shl
      (get_local $2)
      (i32.const 2)
     )
    )
   )
  )
  (loop $while-in1
   (if
    (i32.lt_s
     (get_local $9)
     (get_local $11)
    )
    (block
     (f32.store
      (i32.add
       (get_local $1)
       (i32.shl
        (i32.mul
         (get_local $9)
         (get_local $4)
        )
        (i32.const 2)
       )
      )
      (f32.mul
       (f32.load
        (i32.add
         (get_local $0)
         (i32.shl
          (i32.mul
           (get_local $9)
           (get_local $3)
          )
          (i32.const 2)
         )
        )
       )
       (f32.const 32768)
      )
     )
     (set_local $9
      (i32.add
       (get_local $9)
       (i32.const 1)
      )
     )
     (br $while-in1)
    )
   )
  )
  (block $label$break$L19
   (if
    (get_local $8)
    (loop $while-in4
     (br_if $label$break$L19
      (i32.ge_s
       (get_local $12)
       (get_local $11)
      )
     )
     (set_local $9
      (f32.gt
       (tee_local $13
        (f32.load
         (tee_local $8
          (i32.add
           (get_local $1)
           (i32.shl
            (i32.mul
             (get_local $12)
             (get_local $4)
            )
            (i32.const 2)
           )
          )
         )
        )
       )
       (f32.const 65536)
      )
     )
     (set_local $0
      (i32.or
       (tee_local $3
        (f32.lt
         (get_local $13)
         (f32.const -65536)
        )
       )
       (get_local $9)
      )
     )
     (set_local $6
      (if (result f32)
       (i32.and
        (get_local $3)
        (i32.xor
         (get_local $9)
         (i32.const 1)
        )
       )
       (f32.const -65536)
       (f32.const 65536)
      )
     )
     (f32.store
      (get_local $8)
      (if (result f32)
       (get_local $0)
       (get_local $6)
       (get_local $13)
      )
     )
     (set_local $12
      (i32.add
       (get_local $12)
       (i32.const 1)
      )
     )
     (br $while-in4)
    )
   )
  )
  (set_local $3
   (i32.const 0)
  )
  (loop $while-in6
   (if
    (i32.lt_s
     (get_local $3)
     (get_local $2)
    )
    (block
     (set_local $6
      (f32.load
       (tee_local $0
        (i32.add
         (get_local $1)
         (i32.shl
          (get_local $3)
          (i32.const 2)
         )
        )
       )
      )
     )
     (f32.store
      (get_local $0)
      (f32.sub
       (get_local $6)
       (get_local $10)
      )
     )
     (set_local $10
      (f32.mul
       (get_local $6)
       (get_local $5)
      )
     )
     (set_local $3
      (i32.add
       (get_local $3)
       (i32.const 1)
      )
     )
     (br $while-in6)
    )
   )
  )
  (f32.store
   (get_local $7)
   (get_local $10)
  )
 )
 (func $_celt_encode_with_ec (; 67 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (result i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 f32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 f32)
  (local $23 i32)
  (local $24 i32)
  (local $25 f32)
  (local $26 i32)
  (local $27 i32)
  (local $28 i32)
  (local $29 i32)
  (local $30 i32)
  (local $31 i32)
  (local $32 i32)
  (local $33 f32)
  (local $34 i32)
  (local $35 i32)
  (local $36 i32)
  (local $37 i32)
  (local $38 i32)
  (local $39 i32)
  (local $40 i32)
  (local $41 i32)
  (local $42 i32)
  (local $43 i32)
  (local $44 f32)
  (local $45 i32)
  (local $46 i32)
  (local $47 i32)
  (local $48 i32)
  (local $49 i32)
  (local $50 i32)
  (local $51 i32)
  (local $52 i32)
  (local $53 i32)
  (local $54 i32)
  (local $55 i32)
  (local $56 i32)
  (local $57 i32)
  (local $58 i32)
  (local $59 i32)
  (local $60 i32)
  (local $61 i32)
  (local $62 i32)
  (local $63 i32)
  (local $64 i32)
  (local $65 f32)
  (local $66 i32)
  (local $67 i32)
  (local $68 i32)
  (local $69 i32)
  (local $70 i32)
  (local $71 i32)
  (local $72 i32)
  (local $73 i32)
  (local $74 i32)
  (local $75 i32)
  (local $76 i32)
  (local $77 i32)
  (local $78 f32)
  (local $79 f64)
  (local $80 f64)
  (local $81 i32)
  (local $82 i32)
  (set_local $7
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.const 96)
   )
  )
  (set_local $27
   (i32.load offset=4
    (get_local $0)
   )
  )
  (set_local $11
   (i32.load offset=8
    (get_local $0)
   )
  )
  (i32.store
   (tee_local $49
    (i32.add
     (get_local $7)
     (i32.const 32)
    )
   )
   (i32.const 15)
  )
  (f32.store
   (tee_local $17
    (i32.add
     (get_local $7)
     (i32.const 28)
    )
   )
   (f32.const 0)
  )
  (i32.store
   (tee_local $57
    (i32.add
     (get_local $7)
     (i32.const 24)
    )
   )
   (i32.const 0)
  )
  (i32.store
   (tee_local $41
    (i32.add
     (get_local $7)
     (i32.const 16)
    )
   )
   (i32.const 0)
  )
  (i32.store
   (tee_local $53
    (i32.add
     (get_local $7)
     (i32.const 4)
    )
   )
   (i32.const 0)
  )
  (set_local $23
   (i32.load
    (tee_local $73
     (i32.add
      (tee_local $15
       (i32.load
        (get_local $0)
       )
      )
      (i32.const 8)
     )
    )
   )
  )
  (set_local $6
   (i32.load offset=4
    (get_local $15)
   )
  )
  (set_local $42
   (i32.load
    (tee_local $74
     (i32.add
      (get_local $15)
      (i32.const 32)
     )
    )
   )
  )
  (set_local $26
   (i32.load offset=32
    (get_local $0)
   )
  )
  (set_local $16
   (i32.load offset=36
    (get_local $0)
   )
  )
  (f32.store
   (tee_local $45
    (i32.add
     (get_local $7)
     (i32.const 12)
    )
   )
   (f32.const 0)
  )
  (if
   (i32.or
    (i32.lt_s
     (get_local $4)
     (i32.const 2)
    )
    (i32.eqz
     (get_local $1)
    )
   )
   (block
    (set_global $STACKTOP
     (get_local $7)
    )
    (return
     (i32.const -1)
    )
   )
  )
  (set_local $13
   (i32.add
    (get_local $7)
    (i32.const 40)
   )
  )
  (set_local $66
   (i32.add
    (get_local $7)
    (i32.const 20)
   )
  )
  (set_local $67
   (i32.add
    (get_local $7)
    (i32.const 8)
   )
  )
  (set_local $54
   (get_local $7)
  )
  (set_local $35
   (i32.ne
    (get_local $26)
    (i32.const 0)
   )
  )
  (set_local $2
   (i32.mul
    (i32.load
     (tee_local $30
      (i32.add
       (get_local $0)
       (i32.const 28)
      )
     )
    )
    (get_local $2)
   )
  )
  (set_local $7
   (i32.add
    (get_local $15)
    (i32.const 44)
   )
  )
  (set_local $8
   (i32.load
    (tee_local $75
     (i32.add
      (get_local $15)
      (i32.const 36)
     )
    )
   )
  )
  (block $__rjto$1
   (block $__rjti$1
    (loop $while-in
     (block $while-out
      (br_if $__rjti$1
       (i32.gt_s
        (get_local $14)
        (get_local $8)
       )
      )
      (if
       (i32.ne
        (i32.shl
         (i32.load
          (get_local $7)
         )
         (get_local $14)
        )
        (get_local $2)
       )
       (block
        (set_local $14
         (i32.add
          (get_local $14)
          (i32.const 1)
         )
        )
        (br $while-in)
       )
      )
     )
    )
    (br $__rjto$1)
   )
   (set_global $STACKTOP
    (get_local $54)
   )
   (return
    (i32.const -1)
   )
  )
  (set_local $21
   (i32.load
    (get_local $7)
   )
  )
  (set_local $8
   (if (result i32)
    (tee_local $19
     (i32.eqz
      (get_local $5)
     )
    )
    (block (result i32)
     (set_local $12
      (i32.const 1)
     )
     (set_local $55
      (i32.const 1)
     )
     (i32.const 0)
    )
    (block (result i32)
     (set_local $55
      (call $_ec_tell_frac
       (tee_local $7
        (i32.load offset=20
         (get_local $5)
        )
       )
       (tee_local $8
        (i32.load offset=28
         (get_local $5)
        )
       )
      )
     )
     (i32.shr_s
      (i32.add
       (tee_local $12
        (call $_ec_tell
         (get_local $7)
         (get_local $8)
        )
       )
       (i32.const 4)
      )
      (i32.const 3)
     )
    )
   )
  )
  (if
   (i32.load offset=48
    (get_local $0)
   )
   (call $_celt_fatal
    (i32.const 41473)
    (i32.const 41509)
    (i32.const 1547)
   )
  )
  (if
   (i32.ge_s
    (get_local $4)
    (i32.const 1275)
   )
   (set_local $4
    (i32.const 1275)
   )
  )
  (set_local $7
   (i32.load offset=40
    (get_local $0)
   )
  )
  (block $__rjto$2
   (block $__rjti$2
    (set_local $2
     (if (result i32)
      (i32.load
       (tee_local $58
        (i32.add
         (get_local $0)
         (i32.const 44)
        )
       )
      )
      (if (result i32)
       (i32.eq
        (get_local $7)
        (i32.const -1)
       )
       (block
        (set_local $2
         (get_local $4)
        )
        (set_local $7
         (i32.const -1)
        )
        (br $__rjti$2)
       )
       (block (result i32)
        (set_local $10
         (i32.shr_s
          (tee_local $36
           (i32.div_s
            (i32.add
             (i32.mul
              (get_local $7)
              (get_local $2)
             )
             (i32.shr_s
              (tee_local $2
               (i32.load
                (get_local $15)
               )
              )
              (i32.const 4)
             )
            )
            (i32.shr_s
             (get_local $2)
             (i32.const 3)
            )
           )
          )
          (i32.const 6)
         )
        )
        (get_local $4)
       )
      )
      (block
       (if
        (i32.eq
         (get_local $7)
         (i32.const -1)
        )
        (set_local $2
         (get_local $4)
        )
        (block
         (set_local $10
          (i32.load
           (get_local $15)
          )
         )
         (set_local $20
          (i32.lt_s
           (if (result i32)
            (tee_local $10
             (i32.lt_s
              (get_local $4)
              (tee_local $2
               (i32.div_s
                (i32.add
                 (i32.add
                  (i32.mul
                   (get_local $7)
                   (get_local $2)
                  )
                  (if (result i32)
                   (i32.gt_s
                    (get_local $12)
                    (i32.const 1)
                   )
                   (get_local $12)
                   (i32.const 0)
                  )
                 )
                 (i32.shl
                  (get_local $10)
                  (i32.const 2)
                 )
                )
                (i32.shl
                 (get_local $10)
                 (i32.const 3)
                )
               )
              )
             )
            )
            (get_local $4)
            (get_local $2)
           )
           (i32.const 2)
          )
         )
         (if
          (get_local $10)
          (set_local $2
           (get_local $4)
          )
         )
         (if
          (get_local $20)
          (set_local $2
           (i32.const 2)
          )
         )
        )
       )
       (br $__rjti$2)
      )
     )
    )
    (br $__rjto$2)
   )
   (set_local $10
    (i32.sub
     (get_local $2)
     (get_local $8)
    )
   )
  )
  (set_local $34
   (i32.sub
    (i32.shr_s
     (i32.mul
      (get_local $2)
      (i32.const 400)
     )
     (tee_local $59
      (i32.sub
       (i32.const 3)
       (get_local $14)
      )
     )
    )
    (tee_local $20
     (i32.mul
      (i32.add
       (i32.mul
        (get_local $11)
        (i32.const 40)
       )
       (i32.const 20)
      )
      (i32.add
       (i32.shr_u
        (i32.const 400)
        (get_local $14)
       )
       (i32.const -50)
      )
     )
    )
   )
  )
  (if
   (i32.ne
    (get_local $7)
    (i32.const -1)
   )
   (if
    (i32.ge_s
     (get_local $34)
     (tee_local $7
      (i32.sub
       (get_local $7)
       (get_local $20)
      )
     )
    )
    (set_local $34
     (get_local $7)
    )
   )
  )
  (if
   (get_local $19)
   (call $_ec_enc_init
    (get_local $13)
    (get_local $3)
    (get_local $2)
   )
   (set_local $13
    (get_local $5)
   )
  )
  (set_local $3
   (i32.sub
    (get_local $4)
    (get_local $8)
   )
  )
  (if
   (tee_local $68
    (i32.gt_s
     (get_local $36)
     (i32.const 0)
    )
   )
   (if
    (i32.load offset=52
     (get_local $0)
    )
    (if
     (i32.lt_s
      (if (result i32)
       (tee_local $7
        (i32.gt_s
         (tee_local $4
          (if (result i32)
           (i32.eq
            (get_local $12)
            (i32.const 1)
           )
           (i32.const 2)
           (i32.const 0)
          )
         )
         (tee_local $5
          (i32.shr_s
           (i32.sub
            (i32.shl
             (get_local $36)
             (i32.const 1)
            )
            (i32.load offset=208
             (get_local $0)
            )
           )
           (i32.const 6)
          )
         )
        )
       )
       (get_local $4)
       (get_local $5)
      )
      (get_local $3)
     )
     (if
      (i32.lt_s
       (if (result i32)
        (get_local $7)
        (get_local $4)
        (tee_local $4
         (get_local $5)
        )
       )
       (get_local $3)
      )
      (block
       (call $_ec_enc_shrink
        (get_local $13)
        (tee_local $2
         (i32.add
          (get_local $8)
          (get_local $4)
         )
        )
       )
       (set_local $3
        (get_local $4)
       )
      )
     )
    )
   )
  )
  (set_local $7
   (i32.shl
    (i32.const 1)
    (get_local $14)
   )
  )
  (set_local $31
   (i32.shl
    (get_local $21)
    (get_local $14)
   )
  )
  (set_local $46
   (i32.add
    (i32.add
     (get_local $0)
     (i32.const 244)
    )
    (i32.shl
     (i32.mul
      (get_local $27)
      (get_local $6)
     )
     (i32.const 2)
    )
   )
  )
  (set_local $61
   (i32.add
    (tee_local $60
     (i32.add
      (tee_local $50
       (i32.add
        (tee_local $32
         (i32.add
          (i32.add
           (get_local $0)
           (i32.const 244)
          )
          (i32.shl
           (i32.mul
            (get_local $27)
            (i32.add
             (get_local $6)
             (i32.const 1024)
            )
           )
           (i32.const 2)
          )
         )
        )
        (i32.shl
         (tee_local $38
          (i32.mul
           (get_local $27)
           (get_local $23)
          )
         )
         (i32.const 2)
        )
       )
      )
      (i32.shl
       (get_local $38)
       (i32.const 2)
      )
     )
    )
    (i32.shl
     (get_local $38)
     (i32.const 2)
    )
   )
  )
  (set_local $4
   (i32.shl
    (get_local $2)
    (i32.const 3)
   )
  )
  (if
   (i32.le_s
    (get_local $16)
    (tee_local $20
     (i32.load offset=12
      (get_local $15)
     )
    )
   )
   (set_local $20
    (get_local $16)
   )
  )
  (set_local $5
   (i32.mul
    (get_local $27)
    (tee_local $19
     (i32.add
      (get_local $31)
      (get_local $6)
     )
    )
   )
  )
  (set_local $76
   (call $_llvm_stacksave)
  )
  (set_local $28
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (get_local $5)
       (i32.const 2)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (set_local $9
   (f32.load
    (tee_local $5
     (i32.add
      (get_local $0)
      (i32.const 224)
     )
    )
   )
  )
  (set_local $22
   (call $_celt_maxabs16
    (get_local $1)
    (tee_local $18
     (i32.div_s
      (i32.mul
       (get_local $11)
       (i32.sub
        (get_local $31)
        (get_local $6)
       )
      )
      (tee_local $21
       (i32.load
        (get_local $30)
       )
      )
     )
    )
   )
  )
  (if
   (i32.eqz
    (f32.gt
     (get_local $9)
     (get_local $22)
    )
   )
   (set_local $9
    (get_local $22)
   )
  )
  (set_local $22
   (call $_celt_maxabs16
    (i32.add
     (get_local $1)
     (i32.shl
      (get_local $18)
      (i32.const 2)
     )
    )
    (i32.div_s
     (i32.mul
      (get_local $11)
      (get_local $6)
     )
     (get_local $21)
    )
   )
  )
  (f32.store
   (get_local $5)
   (get_local $22)
  )
  (set_local $47
   (tee_local $5
    (f32.le
     (if (result f32)
      (f32.gt
       (get_local $9)
       (get_local $22)
      )
      (get_local $9)
      (tee_local $9
       (get_local $22)
      )
     )
     (f32.div
      (f32.const 1)
      (f32.convert_s/i32
       (i32.shl
        (i32.const 1)
        (i32.load
         (tee_local $77
          (i32.add
           (get_local $0)
           (i32.const 60)
          )
         )
        )
       )
      )
     )
    )
   )
  )
  (set_local $4
   (if (result i32)
    (i32.eq
     (get_local $12)
     (i32.const 1)
    )
    (block (result i32)
     (call $_ec_enc_bit_logp
      (get_local $13)
      (get_local $47)
      (i32.const 15)
     )
     (if
      (get_local $5)
      (block
       (set_local $5
        (if (result i32)
         (get_local $68)
         (block (result i32)
          (set_local $5
           (i32.lt_s
            (get_local $2)
            (tee_local $3
             (i32.add
              (get_local $8)
              (i32.const 2)
             )
            )
           )
          )
          (set_local $8
           (i32.shl
            (get_local $3)
            (i32.const 3)
           )
          )
          (if
           (i32.eqz
            (get_local $5)
           )
           (set_local $4
            (get_local $8)
           )
          )
          (call $_ec_enc_shrink
           (get_local $13)
           (if (result i32)
            (get_local $5)
            (get_local $2)
            (tee_local $2
             (get_local $3)
            )
           )
          )
          (set_local $3
           (i32.const 2)
          )
          (get_local $2)
         )
         (get_local $10)
        )
       )
       (set_local $12
        (call $_ec_tell
         (tee_local $10
          (i32.load
           (tee_local $8
            (i32.add
             (get_local $13)
             (i32.const 20)
            )
           )
          )
         )
         (i32.load offset=28
          (get_local $13)
         )
        )
       )
       (i32.store
        (get_local $8)
        (i32.add
         (get_local $10)
         (i32.sub
          (get_local $4)
          (get_local $12)
         )
        )
       )
       (set_local $12
        (tee_local $8
         (get_local $4)
        )
       )
       (set_local $10
        (get_local $5)
       )
      )
      (block
       (set_local $47
        (i32.const 0)
       )
       (set_local $8
        (get_local $4)
       )
       (set_local $12
        (i32.const 1)
       )
      )
     )
     (set_local $21
      (get_local $3)
     )
     (get_local $2)
    )
    (block (result i32)
     (set_local $47
      (i32.const 0)
     )
     (set_local $8
      (get_local $4)
     )
     (set_local $21
      (get_local $3)
     )
     (get_local $2)
    )
   )
  )
  (set_local $3
   (i32.add
    (get_local $0)
    (i32.const 16)
   )
  )
  (set_local $5
   (i32.add
    (get_local $15)
    (i32.const 16)
   )
  )
  (set_local $18
   (i32.add
    (get_local $15)
    (i32.const 20)
   )
  )
  (set_local $51
   (f32.gt
    (get_local $9)
    (f32.const 65536)
   )
  )
  (set_local $2
   (i32.const 0)
  )
  (loop $while-in1
   (call $_celt_preemphasis
    (i32.add
     (get_local $1)
     (i32.shl
      (get_local $2)
      (i32.const 2)
     )
    )
    (i32.add
     (i32.add
      (get_local $28)
      (i32.shl
       (i32.mul
        (get_local $2)
        (get_local $19)
       )
       (i32.const 2)
      )
     )
     (i32.shl
      (get_local $6)
      (i32.const 2)
     )
    )
    (get_local $31)
    (get_local $27)
    (i32.load
     (get_local $30)
    )
    (f32.load
     (get_local $5)
    )
    (f32.load
     (get_local $18)
    )
    (i32.add
     (i32.add
      (get_local $0)
      (i32.const 192)
     )
     (i32.shl
      (get_local $2)
      (i32.const 2)
     )
    )
    (i32.and
     (get_local $51)
     (i32.ne
      (i32.load
       (get_local $3)
      )
      (i32.const 0)
     )
    )
   )
   (br_if $while-in1
    (i32.lt_s
     (tee_local $2
      (i32.add
       (get_local $2)
       (i32.const 1)
      )
     )
     (get_local $27)
    )
   )
  )
  (set_local $1
   (call $_run_prefilter
    (get_local $0)
    (get_local $28)
    (get_local $46)
    (get_local $27)
    (get_local $31)
    (tee_local $69
     (i32.load
      (tee_local $56
       (i32.add
        (get_local $0)
        (i32.const 100)
       )
      )
     )
    )
    (get_local $49)
    (get_local $17)
    (get_local $54)
    (i32.and
     (tee_local $1
      (if (result i32)
       (i32.and
        (i32.and
         (i32.or
          (i32.and
           (i32.ne
            (i32.load
             (tee_local $29
              (i32.sub
               (get_local $0)
               (i32.const -64)
              )
             )
            )
            (i32.const 0)
           )
           (i32.gt_s
            (get_local $21)
            (i32.const 3)
           )
          )
          (i32.gt_s
           (get_local $21)
           (i32.mul
            (get_local $11)
            (i32.const 12)
           )
          )
         )
         (i32.xor
          (get_local $35)
          (i32.const 1)
         )
        )
        (i32.eqz
         (get_local $47)
        )
       )
       (if (result i32)
        (i32.load offset=20
         (get_local $0)
        )
        (i32.const 0)
        (i32.gt_s
         (i32.load offset=24
          (get_local $0)
         )
         (i32.const 4)
        )
       )
       (i32.const 0)
      )
     )
     (i32.const 1)
    )
    (get_local $21)
    (tee_local $62
     (i32.add
      (get_local $0)
      (i32.const 120)
     )
    )
   )
  )
  (set_local $81
   (block $do-once (result i32)
    (block $__rjti$3
     (br_if $__rjti$3
      (f32.gt
       (tee_local $78
        (f32.load
         (get_local $17)
        )
       )
       (f32.const 0.4000000059604645)
      )
     )
     (br_if $__rjti$3
      (f32.gt
       (f32.load offset=108
        (get_local $0)
       )
       (f32.const 0.4000000059604645)
      )
     )
     (br $do-once
      (i32.const 0)
     )
    )
    (if
     (i32.load offset=120
      (get_local $0)
     )
     (drop
      (br_if $do-once
       (i32.const 0)
       (i32.eqz
        (f64.gt
         (f64.promote/f32
          (f32.load offset=124
           (get_local $0)
          )
         )
         (f64.const 0.3)
        )
       )
      )
     )
    )
    (i32.or
     (f64.lt
      (f64.mul
       (tee_local $79
        (f64.convert_s/i32
         (i32.load offset=104
          (get_local $0)
         )
        )
       )
       (f64.const 1.26)
      )
      (tee_local $80
       (f64.convert_s/i32
        (i32.load
         (get_local $49)
        )
       )
      )
     )
     (f64.gt
      (f64.mul
       (get_local $79)
       (f64.const 0.79)
      )
      (get_local $80)
     )
    )
   )
  )
  (if
   (tee_local $82
    (i32.eqz
     (get_local $1)
    )
   )
   (if
    (i32.eqz
     (i32.or
      (get_local $35)
      (i32.gt_s
       (i32.add
        (get_local $12)
        (i32.const 16)
       )
       (get_local $8)
      )
     )
    )
    (call $_ec_enc_bit_logp
     (get_local $13)
     (i32.const 0)
     (i32.const 1)
    )
   )
   (block
    (call $_ec_enc_bit_logp
     (get_local $13)
     (i32.const 1)
     (i32.const 1)
    )
    (call $_ec_enc_uint
     (get_local $13)
     (tee_local $5
      (i32.add
       (tee_local $3
        (i32.sub
         (i32.const 32)
         (i32.clz
          (tee_local $2
           (i32.add
            (tee_local $1
             (i32.load
              (get_local $49)
             )
            )
            (i32.const 1)
           )
          )
         )
        )
       )
       (i32.const -5)
      )
     )
     (i32.const 6)
    )
    (call $_ec_enc_bits
     (get_local $13)
     (i32.sub
      (get_local $2)
      (i32.shl
       (i32.const 16)
       (get_local $5)
      )
     )
     (i32.add
      (get_local $3)
      (i32.const -1)
     )
    )
    (i32.store
     (get_local $49)
     (get_local $1)
    )
    (call $_ec_enc_bits
     (get_local $13)
     (i32.load
      (get_local $54)
     )
     (i32.const 3)
    )
    (call $_ec_enc_icdf
     (get_local $13)
     (get_local $69)
     (i32.const 41529)
     (i32.const 2)
    )
   )
  )
  (set_local $5
   (if (result i32)
    (i32.gt_s
     (i32.load
      (tee_local $43
       (i32.add
        (get_local $0)
        (i32.const 24)
       )
      )
     )
     (i32.const 0)
    )
    (if (result i32)
     (i32.load
      (get_local $29)
     )
     (i32.const 0)
     (call $_transient_analysis
      (get_local $28)
      (get_local $19)
      (get_local $27)
      (get_local $45)
      (get_local $41)
      (i32.and
       (tee_local $1
        (if (result i32)
         (i32.and
          (get_local $35)
          (i32.lt_s
           (get_local $10)
           (i32.const 15)
          )
         )
         (i32.ne
          (i32.load offset=184
           (get_local $0)
          )
          (i32.const 2)
         )
         (i32.const 0)
        )
       )
       (i32.const 1)
      )
      (get_local $53)
     )
    )
    (i32.const 0)
   )
  )
  (set_local $2
   (block $__rjto$4 (result i32)
    (block $__rjti$4
     (br $__rjto$4
      (if (result i32)
       (tee_local $70
        (i32.eqz
         (get_local $14)
        )
       )
       (block
        (set_local $1
         (i32.const 1)
        )
        (set_local $5
         (i32.const 0)
        )
        (br $__rjti$4)
       )
       (if (result i32)
        (i32.gt_s
         (i32.add
          (call $_ec_tell
           (i32.load offset=20
            (get_local $13)
           )
           (i32.load offset=28
            (get_local $13)
           )
          )
          (i32.const 3)
         )
         (get_local $8)
        )
        (block
         (set_local $1
          (i32.const 1)
         )
         (set_local $5
          (i32.const 0)
         )
         (br $__rjti$4)
        )
        (if (result i32)
         (get_local $5)
         (block (result i32)
          (set_local $12
           (get_global $STACKTOP)
          )
          (set_global $STACKTOP
           (i32.add
            (get_global $STACKTOP)
            (i32.and
             (i32.add
              (i32.shl
               (i32.mul
                (get_local $27)
                (get_local $31)
               )
               (i32.const 2)
              )
              (i32.const 15)
             )
             (i32.const -16)
            )
           )
          )
          (set_local $3
           (get_global $STACKTOP)
          )
          (set_global $STACKTOP
           (i32.add
            (get_global $STACKTOP)
            (i32.and
             (i32.add
              (i32.shl
               (get_local $38)
               (i32.const 2)
              )
              (i32.const 15)
             )
             (i32.const -16)
            )
           )
          )
          (set_local $1
           (get_global $STACKTOP)
          )
          (set_global $STACKTOP
           (i32.add
            (get_global $STACKTOP)
            (i32.and
             (i32.add
              (i32.shl
               (get_local $38)
               (i32.const 2)
              )
              (i32.const 15)
             )
             (i32.const -16)
            )
           )
          )
          (set_local $2
           (i32.gt_s
            (i32.load
             (get_local $43)
            )
            (i32.const 7)
           )
          )
          (set_local $17
           (get_global $STACKTOP)
          )
          (set_global $STACKTOP
           (i32.add
            (get_global $STACKTOP)
            (i32.and
             (i32.add
              (i32.shl
               (tee_local $6
                (i32.mul
                 (get_local $11)
                 (get_local $23)
                )
               )
               (i32.const 2)
              )
              (i32.const 15)
             )
             (i32.const -16)
            )
           )
          )
          (if (result i32)
           (get_local $2)
           (block (result i32)
            (call $_compute_mdcts
             (get_local $15)
             (i32.const 0)
             (get_local $28)
             (get_local $12)
             (get_local $11)
             (get_local $27)
             (get_local $14)
             (i32.load
              (get_local $30)
             )
            )
            (call $_compute_band_energies
             (get_local $15)
             (get_local $12)
             (get_local $3)
             (get_local $20)
             (get_local $11)
             (get_local $14)
            )
            (call $_amp2Log2
             (get_local $15)
             (get_local $20)
             (get_local $16)
             (get_local $3)
             (get_local $17)
             (get_local $11)
            )
            (set_local $9
             (f32.mul
              (f32.convert_s/i32
               (get_local $14)
              )
              (f32.const 0.5)
             )
            )
            (set_local $2
             (i32.const 0)
            )
            (loop $while-in4 (result i32)
             (if (result i32)
              (i32.lt_s
               (get_local $2)
               (get_local $6)
              )
              (block
               (f32.store
                (tee_local $19
                 (i32.add
                  (get_local $17)
                  (i32.shl
                   (get_local $2)
                   (i32.const 2)
                  )
                 )
                )
                (f32.add
                 (f32.load
                  (get_local $19)
                 )
                 (get_local $9)
                )
               )
               (set_local $2
                (i32.add
                 (get_local $2)
                 (i32.const 1)
                )
               )
               (br $while-in4)
              )
              (block (result i32)
               (set_local $51
                (i32.const 0)
               )
               (set_local $48
                (i32.const 1)
               )
               (get_local $7)
              )
             )
            )
           )
           (block (result i32)
            (set_local $51
             (i32.const 0)
            )
            (get_local $7)
           )
          )
         )
         (block
          (set_local $1
           (i32.const 0)
          )
          (br $__rjti$4)
         )
        )
       )
      )
     )
    )
    (set_local $12
     (get_global $STACKTOP)
    )
    (set_global $STACKTOP
     (i32.add
      (get_global $STACKTOP)
      (i32.and
       (i32.add
        (i32.shl
         (i32.mul
          (get_local $27)
          (get_local $31)
         )
         (i32.const 2)
        )
        (i32.const 15)
       )
       (i32.const -16)
      )
     )
    )
    (set_local $3
     (get_global $STACKTOP)
    )
    (set_global $STACKTOP
     (i32.add
      (get_global $STACKTOP)
      (i32.and
       (i32.add
        (i32.shl
         (get_local $38)
         (i32.const 2)
        )
        (i32.const 15)
       )
       (i32.const -16)
      )
     )
    )
    (set_local $6
     (get_global $STACKTOP)
    )
    (set_global $STACKTOP
     (i32.add
      (get_global $STACKTOP)
      (i32.and
       (i32.add
        (i32.shl
         (get_local $38)
         (i32.const 2)
        )
        (i32.const 15)
       )
       (i32.const -16)
      )
     )
    )
    (set_local $17
     (get_global $STACKTOP)
    )
    (set_global $STACKTOP
     (i32.add
      (get_global $STACKTOP)
      (i32.and
       (i32.add
        (i32.shl
         (i32.mul
          (get_local $11)
          (get_local $23)
         )
         (i32.const 2)
        )
        (i32.const 15)
       )
       (i32.const -16)
      )
     )
    )
    (set_local $51
     (get_local $1)
    )
    (set_local $1
     (get_local $6)
    )
    (set_local $39
     (i32.const 1)
    )
    (i32.const 0)
   )
  )
  (call $_compute_mdcts
   (get_local $15)
   (get_local $2)
   (get_local $28)
   (get_local $12)
   (get_local $11)
   (get_local $27)
   (get_local $14)
   (i32.load
    (get_local $30)
   )
  )
  (if
   (f32.ne
    (tee_local $9
     (f32.load
      (get_local $12)
     )
    )
    (get_local $9)
   )
   (call $_celt_fatal
    (i32.const 41532)
    (i32.const 41509)
    (i32.const 1729)
   )
  )
  (if
   (tee_local $71
    (i32.eq
     (get_local $11)
     (i32.const 1)
    )
   )
   (if
    (i32.and
     (tee_local $72
      (i32.eq
       (get_local $27)
       (i32.const 2)
      )
     )
     (get_local $71)
    )
    (i32.store
     (get_local $41)
     (i32.const 0)
    )
   )
   (if
    (f32.ne
     (tee_local $9
      (f32.load
       (i32.add
        (get_local $12)
        (i32.shl
         (get_local $31)
         (i32.const 2)
        )
       )
      )
     )
     (get_local $9)
    )
    (call $_celt_fatal
     (i32.const 41532)
     (i32.const 41509)
     (i32.const 1729)
    )
    (set_local $72
     (i32.eq
      (get_local $27)
      (i32.const 2)
     )
    )
   )
  )
  (call $_compute_band_energies
   (get_local $15)
   (get_local $12)
   (get_local $3)
   (get_local $20)
   (get_local $11)
   (get_local $14)
  )
  (call $_amp2Log2
   (get_local $15)
   (get_local $20)
   (get_local $16)
   (tee_local $46
    (if (result i32)
     (i32.load
      (get_local $29)
     )
     (block (result i32)
      (set_local $6
       (i32.const 2)
      )
      (loop $while-in9 (result i32)
       (if (result i32)
        (i32.lt_s
         (get_local $6)
         (get_local $16)
        )
        (block
         (if
          (i32.eqz
           (f32.lt
            (tee_local $9
             (f32.load
              (tee_local $19
               (i32.add
                (get_local $3)
                (i32.shl
                 (get_local $6)
                 (i32.const 2)
                )
               )
              )
             )
            )
            (tee_local $22
             (f32.mul
              (f32.load
               (get_local $3)
              )
              (f32.const 9.999999747378752e-05)
             )
            )
           )
          )
          (set_local $9
           (get_local $22)
          )
         )
         (f32.store
          (get_local $19)
          (if (result f32)
           (f32.gt
            (get_local $9)
            (f32.const 1.0000000036274937e-15)
           )
           (get_local $9)
           (f32.const 1.0000000036274937e-15)
          )
         )
         (set_local $6
          (i32.add
           (get_local $6)
           (i32.const 1)
          )
         )
         (br $while-in9)
        )
        (get_local $3)
       )
      )
     )
     (get_local $3)
    )
   )
   (get_local $1)
   (get_local $11)
  )
  (set_local $37
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (tee_local $52
        (i32.mul
         (get_local $11)
         (get_local $23)
        )
       )
       (i32.const 2)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (drop
   (call $_memset
    (get_local $37)
    (i32.const 0)
    (i32.shl
     (get_local $16)
     (i32.const 2)
    )
   )
  )
  (set_local $6
   (block $__rjto$5 (result i32)
    (set_local $22
     (if (result f32)
      (get_local $35)
      (f32.const 0)
      (if (result f32)
       (tee_local $40
        (i32.load offset=236
         (get_local $0)
        )
       )
       (block (result f32)
        (if
         (tee_local $3
          (i32.load
           (get_local $29)
          )
         )
         (block
          (set_local $22
           (f32.const 0)
          )
          (set_local $9
           (f32.const 0)
          )
          (set_local $3
           (i32.eqz
            (get_local $3)
           )
          )
          (br $__rjto$5
           (get_local $1)
          )
         )
        )
        (if
         (i32.le_s
          (tee_local $18
           (i32.load offset=92
            (get_local $0)
           )
          )
          (i32.const 2)
         )
         (set_local $18
          (i32.const 2)
         )
        )
        (set_local $3
         (i32.const 0)
        )
        (set_local $9
         (f32.const 0)
        )
        (set_local $22
         (f32.const 0)
        )
        (loop $while-in13
         (if
          (i32.lt_s
           (get_local $24)
           (get_local $11)
          )
          (block
           (set_local $63
            (i32.mul
             (get_local $23)
             (get_local $24)
            )
           )
           (set_local $6
            (i32.const 0)
           )
           (loop $while-in15
            (if
             (i32.lt_u
              (get_local $6)
              (get_local $18)
             )
             (block
              (set_local $19
               (f32.lt
                (tee_local $25
                 (f32.load
                  (i32.add
                   (get_local $40)
                   (i32.shl
                    (i32.add
                     (get_local $63)
                     (get_local $6)
                    )
                    (i32.const 2)
                   )
                  )
                 )
                )
                (f32.const 0.25)
               )
              )
              (block $do-once16
               (set_local $25
                (if (result f32)
                 (i32.or
                  (f32.gt
                   (get_local $25)
                   (f32.const -2)
                  )
                  (i32.xor
                   (get_local $19)
                   (i32.const 1)
                  )
                 )
                 (block (result f32)
                  (if
                   (get_local $19)
                   (br_if $do-once16
                    (i32.eqz
                     (f32.gt
                      (get_local $25)
                      (f32.const 0)
                     )
                    )
                   )
                   (set_local $25
                    (f32.const 0.25)
                   )
                  )
                  (f32.mul
                   (get_local $25)
                   (f32.const 0.5)
                  )
                 )
                 (f32.const -2)
                )
               )
              )
              (set_local $3
               (i32.add
                (get_local $3)
                (tee_local $64
                 (i32.sub
                  (i32.load16_s
                   (i32.add
                    (get_local $42)
                    (i32.shl
                     (tee_local $19
                      (i32.add
                       (get_local $6)
                       (i32.const 1)
                      )
                     )
                     (i32.const 1)
                    )
                   )
                  )
                  (i32.load16_s
                   (i32.add
                    (get_local $42)
                    (i32.shl
                     (get_local $6)
                     (i32.const 1)
                    )
                   )
                  )
                 )
                )
               )
              )
              (set_local $9
               (f32.add
                (get_local $9)
                (f32.mul
                 (get_local $25)
                 (f32.convert_s/i32
                  (i32.sub
                   (i32.or
                    (i32.shl
                     (get_local $6)
                     (i32.const 1)
                    )
                    (i32.const 1)
                   )
                   (get_local $18)
                  )
                 )
                )
               )
              )
              (set_local $22
               (f32.add
                (get_local $22)
                (f32.mul
                 (get_local $25)
                 (f32.convert_s/i32
                  (get_local $64)
                 )
                )
               )
              )
              (set_local $6
               (get_local $19)
              )
              (br $while-in15)
             )
            )
           )
           (set_local $24
            (i32.add
             (get_local $24)
             (i32.const 1)
            )
           )
           (br $while-in13)
          )
         )
        )
        (if
         (i32.le_s
          (get_local $3)
          (i32.const 0)
         )
         (call $_celt_fatal
          (i32.const 41605)
          (i32.const 41509)
          (i32.const 1770)
         )
        )
        (set_local $22
         (f32.add
          (f32.div
           (get_local $22)
           (f32.convert_s/i32
            (get_local $3)
           )
          )
          (f32.const 0.20000000298023224)
         )
        )
        (if
         (i32.and
          (tee_local $3
           (f32.lt
            (tee_local $9
             (f32.mul
              (f32.div
               (f32.mul
                (get_local $9)
                (f32.const 6)
               )
               (f32.convert_s/i32
                (i32.mul
                 (i32.mul
                  (i32.mul
                   (get_local $11)
                   (i32.add
                    (get_local $18)
                    (i32.const -1)
                   )
                  )
                  (i32.add
                   (get_local $18)
                   (i32.const 1)
                  )
                 )
                 (get_local $18)
                )
               )
              )
              (f32.const 0.5)
             )
            )
            (f32.const 0.03099999949336052)
           )
          )
          (i32.eqz
           (f32.gt
            (get_local $9)
            (f32.const -0.03099999949336052)
           )
          )
         )
         (set_local $9
          (f32.const -0.03099999949336052)
         )
        )
        (if
         (i32.eqz
          (get_local $3)
         )
         (set_local $9
          (f32.const 0.03099999949336052)
         )
        )
        (set_local $6
         (i32.div_s
          (i32.load16_s
           (i32.add
            (get_local $42)
            (i32.shl
             (get_local $18)
             (i32.const 1)
            )
           )
          )
          (i32.const 2)
         )
        )
        (set_local $19
         (i32.const 0)
        )
        (loop $while-in19
         (if
          (i32.lt_s
           (i32.load16_s
            (i32.add
             (get_local $42)
             (i32.shl
              (tee_local $3
               (i32.add
                (get_local $19)
                (i32.const 1)
               )
              )
              (i32.const 1)
             )
            )
           )
           (i32.shr_s
            (i32.shl
             (get_local $6)
             (i32.const 16)
            )
            (i32.const 16)
           )
          )
          (block
           (set_local $19
            (get_local $3)
           )
           (br $while-in19)
          )
         )
        )
        (set_local $63
         (i32.eq
          (get_local $11)
          (i32.const 2)
         )
        )
        (set_local $3
         (i32.const 0)
        )
        (set_local $24
         (i32.const 0)
        )
        (loop $while-in21
         (if
          (i32.lt_u
           (get_local $24)
           (get_local $18)
          )
          (block
           (set_local $6
            (i32.add
             (get_local $40)
             (i32.shl
              (get_local $24)
              (i32.const 2)
             )
            )
           )
           (if
            (get_local $63)
            (if
             (i32.eqz
              (f32.gt
               (f32.load
                (get_local $6)
               )
               (f32.load
                (tee_local $64
                 (i32.add
                  (get_local $40)
                  (i32.shl
                   (i32.add
                    (get_local $23)
                    (get_local $24)
                   )
                   (i32.const 2)
                  )
                 )
                )
               )
              )
             )
             (set_local $6
              (get_local $64)
             )
            )
           )
           (set_local $25
            (f32.add
             (get_local $22)
             (f32.mul
              (get_local $9)
              (f32.convert_s/i32
               (i32.sub
                (get_local $24)
                (get_local $19)
               )
              )
             )
            )
           )
           (if
            (f32.gt
             (tee_local $25
              (f32.sub
               (if (result f32)
                (f32.lt
                 (tee_local $33
                  (f32.load
                   (get_local $6)
                  )
                 )
                 (f32.const 0)
                )
                (get_local $33)
                (f32.const 0)
               )
               (get_local $25)
              )
             )
             (f32.const 0.25)
            )
            (block
             (f32.store
              (i32.add
               (get_local $37)
               (i32.shl
                (get_local $24)
                (i32.const 2)
               )
              )
              (f32.add
               (get_local $25)
               (f32.const -0.25)
              )
             )
             (set_local $3
              (i32.add
               (get_local $3)
               (i32.const 1)
              )
             )
            )
           )
           (set_local $24
            (i32.add
             (get_local $24)
             (i32.const 1)
            )
           )
           (br $while-in21)
          )
         )
        )
        (block $label$break$L136
         (if
          (i32.gt_s
           (get_local $3)
           (i32.const 2)
          )
          (block
           (if
            (f32.gt
             (tee_local $22
              (f32.add
               (get_local $22)
               (f32.const 0.25)
              )
             )
             (f32.const 0)
            )
            (block
             (drop
              (call $_memset
               (get_local $37)
               (i32.const 0)
               (i32.shl
                (get_local $18)
                (i32.const 2)
               )
              )
             )
             (set_local $9
              (f32.const 0)
             )
             (set_local $22
              (f32.const 0)
             )
             (br $label$break$L136)
            )
           )
           (set_local $3
            (i32.const 0)
           )
           (loop $while-in24
            (if
             (i32.lt_u
              (get_local $3)
              (get_local $18)
             )
             (block
              (set_local $25
               (f32.add
                (f32.load
                 (tee_local $6
                  (i32.add
                   (get_local $37)
                   (i32.shl
                    (get_local $3)
                    (i32.const 2)
                   )
                  )
                 )
                )
                (f32.const -0.25)
               )
              )
              (f32.store
               (get_local $6)
               (if (result f32)
                (f32.lt
                 (get_local $25)
                 (f32.const 0)
                )
                (f32.const 0)
                (get_local $25)
               )
              )
              (set_local $3
               (i32.add
                (get_local $3)
                (i32.const 1)
               )
              )
              (br $while-in24)
             )
            )
           )
          )
         )
        )
        (set_local $25
         (f32.mul
          (get_local $9)
          (f32.const 64)
         )
        )
        (f32.add
         (get_local $22)
         (f32.const 0.20000000298023224)
        )
       )
       (f32.const 0)
      )
     )
    )
    (if
     (tee_local $3
      (i32.eqz
       (i32.load
        (get_local $29)
       )
      )
     )
     (block
      (set_local $33
       (f32.mul
        (f32.convert_s/i32
         (get_local $14)
        )
        (f32.const 0.5)
       )
      )
      (if
       (get_local $39)
       (set_local $33
        (f32.const 0)
       )
      )
      (set_local $19
       (i32.eq
        (get_local $11)
        (i32.const 2)
       )
      )
      (set_local $9
       (f32.const -10)
      )
      (set_local $6
       (get_local $26)
      )
      (loop $while-in26
       (if
        (i32.lt_s
         (get_local $6)
         (get_local $16)
        )
        (block
         (if
          (i32.eqz
           (f32.gt
            (tee_local $9
             (f32.add
              (get_local $9)
              (f32.const -1)
             )
            )
            (tee_local $44
             (f32.sub
              (f32.load
               (i32.add
                (get_local $1)
                (i32.shl
                 (get_local $6)
                 (i32.const 2)
                )
               )
              )
              (get_local $33)
             )
            )
           )
          )
          (set_local $9
           (get_local $44)
          )
         )
         (block $do-once27
          (if
           (get_local $19)
           (block
            (br_if $do-once27
             (f32.gt
              (get_local $9)
              (tee_local $44
               (f32.sub
                (f32.load
                 (i32.add
                  (get_local $1)
                  (i32.shl
                   (i32.add
                    (get_local $6)
                    (get_local $23)
                   )
                   (i32.const 2)
                  )
                 )
                )
                (get_local $33)
               )
              )
             )
            )
            (set_local $9
             (get_local $44)
            )
           )
          )
         )
         (set_local $65
          (f32.add
           (get_local $65)
           (get_local $9)
          )
         )
         (set_local $6
          (i32.add
           (get_local $6)
           (i32.const 1)
          )
         )
         (br $while-in26)
        )
       )
      )
      (set_local $6
       (f32.lt
        (tee_local $33
         (f32.sub
          (f32.div
           (get_local $65)
           (f32.convert_s/i32
            (i32.sub
             (get_local $16)
             (get_local $26)
            )
           )
          )
          (tee_local $44
           (f32.load
            (tee_local $19
             (i32.add
              (get_local $0)
              (i32.const 240)
             )
            )
           )
          )
         )
        )
        (f32.const -1.5)
       )
      )
      (set_local $24
       (i32.or
        (tee_local $18
         (f32.gt
          (get_local $33)
          (f32.const 3)
         )
        )
        (get_local $6)
       )
      )
      (set_local $9
       (if (result f32)
        (i32.and
         (get_local $18)
         (i32.xor
          (get_local $6)
          (i32.const 1)
         )
        )
        (f32.const 3)
        (f32.const -1.5)
       )
      )
      (f32.store
       (get_local $19)
       (f32.add
        (get_local $44)
        (f32.mul
         (if (result f32)
          (get_local $24)
          (get_local $9)
          (tee_local $9
           (get_local $33)
          )
         )
         (f32.const 0.019999999552965164)
        )
       )
      )
     )
     (set_local $9
      (f32.const 0)
     )
    )
    (get_local $1)
   )
  )
  (if
   (i32.eqz
    (get_local $48)
   )
   (drop
    (call $_memcpy
     (get_local $17)
     (get_local $6)
     (i32.shl
      (get_local $52)
      (i32.const 2)
     )
    )
   )
  )
  (set_local $19
   (block $do-once29 (result i32)
    (if
     (i32.eqz
      (get_local $70)
     )
     (block
      (block $do-once31
       (if
        (i32.and
         (i32.le_s
          (tee_local $1
           (i32.add
            (call $_ec_tell
             (i32.load
              (tee_local $19
               (i32.add
                (get_local $13)
                (i32.const 20)
               )
              )
             )
             (i32.load
              (tee_local $18
               (i32.add
                (get_local $13)
                (i32.const 28)
               )
              )
             )
            )
            (i32.const 3)
           )
          )
          (get_local $8)
         )
         (i32.eqz
          (get_local $5)
         )
        )
        (block
         (if
          (i32.or
           (i32.or
            (i32.lt_s
             (i32.load
              (get_local $43)
             )
             (i32.const 5)
            )
            (i32.xor
             (get_local $3)
             (i32.const 1)
            )
           )
           (get_local $35)
          )
          (block
           (set_local $5
            (i32.const 0)
           )
           (br $do-once31)
          )
         )
         (if
          (i32.eqz
           (call $_patch_transient_decision
            (get_local $6)
            (get_local $32)
            (get_local $23)
            (get_local $16)
            (get_local $11)
           )
          )
          (block
           (set_local $5
            (i32.const 0)
           )
           (br $do-once31)
          )
         )
         (call $_compute_mdcts
          (get_local $15)
          (get_local $7)
          (get_local $28)
          (get_local $12)
          (get_local $11)
          (get_local $27)
          (get_local $14)
          (i32.load
           (get_local $30)
          )
         )
         (call $_compute_band_energies
          (get_local $15)
          (get_local $12)
          (get_local $46)
          (get_local $20)
          (get_local $11)
          (get_local $14)
         )
         (call $_amp2Log2
          (get_local $15)
          (get_local $20)
          (get_local $16)
          (get_local $46)
          (get_local $6)
          (get_local $11)
         )
         (set_local $33
          (f32.mul
           (f32.convert_s/i32
            (get_local $14)
           )
           (f32.const 0.5)
          )
         )
         (set_local $1
          (i32.const 0)
         )
         (loop $while-in34
          (if
           (i32.lt_s
            (get_local $1)
            (get_local $52)
           )
           (block
            (f32.store
             (tee_local $2
              (i32.add
               (get_local $17)
               (i32.shl
                (get_local $1)
                (i32.const 2)
               )
              )
             )
             (f32.add
              (f32.load
               (get_local $2)
              )
              (get_local $33)
             )
            )
            (set_local $1
             (i32.add
              (get_local $1)
              (i32.const 1)
             )
            )
            (br $while-in34)
           )
          )
         )
         (f32.store
          (get_local $45)
          (f32.const 0.20000000298023224)
         )
         (set_local $1
          (i32.add
           (call $_ec_tell
            (i32.load
             (get_local $19)
            )
            (i32.load
             (get_local $18)
            )
           )
           (i32.const 3)
          )
         )
         (set_local $2
          (get_local $7)
         )
         (set_local $5
          (i32.const 1)
         )
        )
       )
      )
      (drop
       (br_if $do-once29
        (get_local $2)
        (i32.gt_s
         (get_local $1)
         (get_local $8)
        )
       )
      )
      (call $_ec_enc_bit_logp
       (get_local $13)
       (get_local $5)
       (i32.const 3)
      )
     )
    )
    (get_local $2)
   )
  )
  (set_local $24
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (i32.mul
        (get_local $11)
        (get_local $31)
       )
       (i32.const 2)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (call $_normalise_bands
   (get_local $15)
   (get_local $12)
   (get_local $24)
   (get_local $46)
   (get_local $20)
   (get_local $11)
   (get_local $7)
  )
  (set_local $1
   (block $do-once35 (result i32)
    (if (result i32)
     (i32.or
      (i32.lt_s
       (get_local $10)
       (i32.mul
        (get_local $11)
        (i32.const 15)
       )
      )
      (get_local $35)
     )
     (i32.const 0)
     (block (result i32)
      (drop
       (br_if $do-once35
        (i32.const 0)
        (i32.le_s
         (i32.load
          (get_local $43)
         )
         (i32.const 1)
        )
       )
      )
      (i32.eqz
       (i32.load
        (get_local $29)
       )
      )
     )
    )
   )
  )
  (set_local $39
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (get_local $23)
       (i32.const 2)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (set_local $2
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (get_local $23)
       (i32.const 2)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (set_local $12
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (get_local $23)
       (i32.const 2)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (set_local $33
   (call $_dynalloc_analysis
    (get_local $6)
    (get_local $17)
    (get_local $23)
    (get_local $26)
    (get_local $16)
    (get_local $11)
    (get_local $39)
    (i32.load
     (get_local $77)
    )
    (i32.load offset=56
     (get_local $15)
    )
    (get_local $5)
    (i32.load
     (get_local $58)
    )
    (i32.load
     (tee_local $58
      (i32.add
       (get_local $0)
       (i32.const 52)
      )
     )
    )
    (get_local $42)
    (get_local $14)
    (get_local $10)
    (get_local $67)
    (i32.load
     (get_local $29)
    )
    (get_local $37)
    (get_local $62)
    (get_local $2)
    (get_local $12)
   )
  )
  (set_local $18
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (get_local $23)
       (i32.const 2)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (set_local $1
   (block $label$break$L177 (result i32)
    (if (result i32)
     (get_local $1)
     (block (result i32)
      (set_local $3
       (i32.add
        (tee_local $1
         (i32.div_s
          (i32.const 20480)
          (get_local $10)
         )
        )
        (i32.const 2)
       )
      )
      (set_local $2
       (call $_tf_analysis
        (get_local $15)
        (get_local $20)
        (get_local $5)
        (get_local $18)
        (if (result i32)
         (i32.lt_s
          (get_local $1)
          (i32.const 78)
         )
         (i32.const 80)
         (get_local $3)
        )
        (get_local $24)
        (get_local $31)
        (get_local $14)
        (f32.load
         (get_local $45)
        )
        (i32.load
         (get_local $41)
        )
        (get_local $2)
       )
      )
      (set_local $3
       (i32.add
        (get_local $18)
        (i32.shl
         (i32.add
          (get_local $20)
          (i32.const -1)
         )
         (i32.const 2)
        )
       )
      )
      (set_local $1
       (get_local $20)
      )
      (loop $while-in39 (result i32)
       (if (result i32)
        (i32.lt_s
         (get_local $1)
         (get_local $16)
        )
        (block
         (i32.store
          (i32.add
           (get_local $18)
           (i32.shl
            (get_local $1)
            (i32.const 2)
           )
          )
          (i32.load
           (get_local $3)
          )
         )
         (set_local $1
          (i32.add
           (get_local $1)
           (i32.const 1)
          )
         )
         (br $while-in39)
        )
        (get_local $2)
       )
      )
     )
     (block (result i32)
      (block $do-once40
       (if
        (get_local $35)
        (block
         (if
          (i32.load
           (get_local $53)
          )
          (block
           (set_local $1
            (i32.const 0)
           )
           (loop $while-in43
            (if
             (i32.lt_s
              (get_local $1)
              (get_local $16)
             )
             (block
              (i32.store
               (i32.add
                (get_local $18)
                (i32.shl
                 (get_local $1)
                 (i32.const 2)
                )
               )
               (i32.const 1)
              )
              (set_local $1
               (i32.add
                (get_local $1)
                (i32.const 1)
               )
              )
              (br $while-in43)
             )
             (br $label$break$L177
              (i32.const 0)
             )
            )
           )
          )
         )
         (br_if $do-once40
          (i32.ge_s
           (get_local $10)
           (i32.const 15)
          )
         )
         (br_if $do-once40
          (i32.eq
           (i32.load offset=184
            (get_local $0)
           )
           (i32.const 2)
          )
         )
         (set_local $1
          (i32.const 0)
         )
         (loop $while-in45
          (if
           (i32.lt_s
            (get_local $1)
            (get_local $16)
           )
           (block
            (i32.store
             (i32.add
              (get_local $18)
              (i32.shl
               (get_local $1)
               (i32.const 2)
              )
             )
             (i32.const 0)
            )
            (set_local $1
             (i32.add
              (get_local $1)
              (i32.const 1)
             )
            )
            (br $while-in45)
           )
           (br $label$break$L177
            (get_local $5)
           )
          )
         )
        )
       )
      )
      (set_local $1
       (i32.const 0)
      )
      (loop $while-in47 (result i32)
       (if (result i32)
        (i32.lt_s
         (get_local $1)
         (get_local $16)
        )
        (block
         (i32.store
          (i32.add
           (get_local $18)
           (i32.shl
            (get_local $1)
            (i32.const 2)
           )
          )
          (get_local $5)
         )
         (set_local $1
          (i32.add
           (get_local $1)
           (i32.const 1)
          )
         )
         (br $while-in47)
        )
        (i32.const 0)
       )
      )
     )
    )
   )
  )
  (set_local $37
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (get_local $52)
       (i32.const 2)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (set_local $2
   (i32.const 0)
  )
  (loop $while-in49
   (set_local $28
    (i32.mul
     (get_local $2)
     (get_local $23)
    )
   )
   (set_local $3
    (get_local $26)
   )
   (loop $while-in51
    (if
     (i32.lt_s
      (get_local $3)
      (get_local $16)
     )
     (block
      (if
       (f32.lt
        (f32.abs
         (f32.sub
          (tee_local $44
           (f32.load
            (tee_local $30
             (i32.add
              (get_local $6)
              (i32.shl
               (tee_local $17
                (i32.add
                 (get_local $3)
                 (get_local $28)
                )
               )
               (i32.const 2)
              )
             )
            )
           )
          )
          (f32.load
           (i32.add
            (get_local $32)
            (i32.shl
             (get_local $17)
             (i32.const 2)
            )
           )
          )
         )
        )
        (f32.const 2)
       )
       (f32.store
        (get_local $30)
        (f32.sub
         (get_local $44)
         (f32.mul
          (f32.load
           (i32.add
            (get_local $61)
            (i32.shl
             (get_local $17)
             (i32.const 2)
            )
           )
          )
          (f32.const 0.25)
         )
        )
       )
      )
      (set_local $3
       (i32.add
        (get_local $3)
        (i32.const 1)
       )
      )
      (br $while-in51)
     )
    )
   )
   (br_if $while-in49
    (i32.lt_s
     (tee_local $2
      (i32.add
       (get_local $2)
       (i32.const 1)
      )
     )
     (get_local $11)
    )
   )
  )
  (call $_quant_coarse_energy
   (get_local $15)
   (get_local $26)
   (get_local $16)
   (get_local $20)
   (get_local $6)
   (get_local $32)
   (get_local $8)
   (get_local $37)
   (get_local $13)
   (get_local $11)
   (get_local $14)
   (get_local $21)
   (i32.load offset=12
    (get_local $0)
   )
   (i32.add
    (get_local $0)
    (i32.const 84)
   )
   (i32.gt_s
    (i32.load
     (get_local $43)
    )
    (i32.const 3)
   )
   (i32.load offset=56
    (get_local $0)
   )
   (i32.load
    (get_local $29)
   )
  )
  (call $_tf_encode
   (get_local $26)
   (get_local $16)
   (get_local $5)
   (get_local $18)
   (get_local $14)
   (get_local $1)
   (get_local $13)
  )
  (if
   (i32.le_s
    (i32.add
     (call $_ec_tell
      (i32.load
       (tee_local $30
        (i32.add
         (get_local $13)
         (i32.const 20)
        )
       )
      )
      (i32.load
       (tee_local $28
        (i32.add
         (get_local $13)
         (i32.const 28)
        )
       )
      )
     )
     (i32.const 4)
    )
    (get_local $8)
   )
   (block
    (block $do-once52
     (set_local $1
      (if (result i32)
       (i32.load
        (get_local $29)
       )
       (block (result i32)
        (i32.store
         (get_local $56)
         (i32.const 0)
        )
        (i32.store offset=80
         (get_local $0)
         (i32.const 2)
        )
        (i32.const 2)
       )
       (if (result i32)
        (get_local $35)
        (block (result i32)
         (if
          (i32.eqz
           (i32.load
            (get_local $43)
           )
          )
          (block
           (i32.store offset=80
            (get_local $0)
            (i32.const 0)
           )
           (set_local $1
            (i32.const 0)
           )
           (br $do-once52)
          )
         )
         (set_local $1
          (i32.add
           (get_local $0)
           (i32.const 80)
          )
         )
         (if (result i32)
          (get_local $5)
          (block (result i32)
           (i32.store
            (get_local $1)
            (i32.const 2)
           )
           (i32.const 2)
          )
          (block (result i32)
           (i32.store
            (get_local $1)
            (i32.const 3)
           )
           (i32.const 3)
          )
         )
        )
        (block (result i32)
         (if
          (i32.eqz
           (i32.or
            (i32.or
             (i32.ne
              (get_local $19)
              (i32.const 0)
             )
             (i32.lt_s
              (tee_local $2
               (i32.load
                (get_local $43)
               )
              )
              (i32.const 3)
             )
            )
            (i32.lt_s
             (get_local $21)
             (i32.mul
              (get_local $11)
              (i32.const 10)
             )
            )
           )
          )
          (block
           (set_local $1
            (call $_spreading_decision
             (get_local $15)
             (get_local $24)
             (i32.add
              (get_local $0)
              (i32.const 88)
             )
             (i32.load
              (tee_local $2
               (i32.add
                (get_local $0)
                (i32.const 80)
               )
              )
             )
             (i32.add
              (get_local $0)
              (i32.const 96)
             )
             (get_local $56)
             (i32.xor
              (get_local $82)
              (i32.const 1)
             )
             (get_local $20)
             (get_local $11)
             (get_local $7)
             (get_local $12)
            )
           )
           (i32.store
            (get_local $2)
            (get_local $1)
           )
           (br $do-once52)
          )
         )
         (set_local $1
          (i32.add
           (get_local $0)
           (i32.const 80)
          )
         )
         (if (result i32)
          (get_local $2)
          (block (result i32)
           (i32.store
            (get_local $1)
            (i32.const 2)
           )
           (i32.const 2)
          )
          (block (result i32)
           (i32.store
            (get_local $1)
            (i32.const 0)
           )
           (i32.const 0)
          )
         )
        )
       )
      )
     )
    )
    (call $_ec_enc_icdf
     (get_local $13)
     (get_local $1)
     (i32.const 41631)
     (i32.const 5)
    )
   )
  )
  (if
   (i32.load
    (get_local $29)
   )
   (block
    (set_local $1
     (i32.div_s
      (get_local $10)
      (i32.const 3)
     )
    )
    (i32.store
     (get_local $39)
     (if (result i32)
      (i32.gt_s
       (get_local $10)
       (i32.const 26)
      )
      (i32.const 8)
      (get_local $1)
     )
    )
   )
  )
  (set_local $41
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (get_local $23)
       (i32.const 2)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (call $_init_caps
   (get_local $15)
   (get_local $41)
   (get_local $14)
   (get_local $11)
  )
  (set_local $48
   (i32.shl
    (get_local $8)
    (i32.const 3)
   )
  )
  (set_local $1
   (call $_ec_tell_frac
    (tee_local $2
     (i32.load
      (get_local $30)
     )
    )
    (tee_local $3
     (i32.load
      (get_local $28)
     )
    )
   )
  )
  (set_local $7
   (i32.const 6)
  )
  (set_local $8
   (i32.const 0)
  )
  (set_local $10
   (get_local $26)
  )
  (loop $while-in55
   (if
    (i32.lt_s
     (get_local $10)
     (get_local $16)
    )
    (block
     (set_local $40
      (i32.lt_s
       (tee_local $17
        (i32.shl
         (tee_local $21
          (i32.shl
           (i32.mul
            (get_local $11)
            (i32.sub
             (i32.load16_s
              (i32.add
               (get_local $42)
               (i32.shl
                (tee_local $12
                 (i32.add
                  (get_local $10)
                  (i32.const 1)
                 )
                )
                (i32.const 1)
               )
              )
             )
             (i32.load16_s
              (i32.add
               (get_local $42)
               (i32.shl
                (get_local $10)
                (i32.const 1)
               )
              )
             )
            )
           )
           (get_local $14)
          )
         )
         (i32.const 3)
        )
       )
       (if (result i32)
        (tee_local $20
         (i32.lt_s
          (get_local $21)
          (i32.const 48)
         )
        )
        (i32.const 48)
        (get_local $21)
       )
      )
     )
     (if
      (get_local $20)
      (set_local $21
       (i32.const 48)
      )
     )
     (if
      (get_local $40)
      (set_local $21
       (get_local $17)
      )
     )
     (set_local $53
      (i32.add
       (get_local $41)
       (i32.shl
        (get_local $10)
        (i32.const 2)
       )
      )
     )
     (set_local $40
      (i32.add
       (get_local $39)
       (i32.shl
        (get_local $10)
        (i32.const 2)
       )
      )
     )
     (set_local $17
      (i32.const 0)
     )
     (set_local $20
      (i32.const 0)
     )
     (set_local $10
      (get_local $7)
     )
     (loop $while-in57
      (block $while-out56
       (br_if $while-out56
        (i32.ge_s
         (i32.add
          (get_local $1)
          (i32.shl
           (get_local $10)
           (i32.const 3)
          )
         )
         (i32.sub
          (get_local $48)
          (get_local $8)
         )
        )
       )
       (br_if $while-out56
        (i32.ge_s
         (get_local $20)
         (i32.load
          (get_local $53)
         )
        )
       )
       (call $_ec_enc_bit_logp
        (get_local $13)
        (tee_local $56
         (i32.lt_s
          (get_local $17)
          (i32.load
           (get_local $40)
          )
         )
        )
        (get_local $10)
       )
       (set_local $1
        (call $_ec_tell_frac
         (tee_local $2
          (i32.load
           (get_local $30)
          )
         )
         (tee_local $3
          (i32.load
           (get_local $28)
          )
         )
        )
       )
       (if
        (get_local $56)
        (block
         (set_local $17
          (i32.add
           (get_local $17)
           (i32.const 1)
          )
         )
         (set_local $20
          (i32.add
           (get_local $20)
           (get_local $21)
          )
         )
         (set_local $10
          (i32.const 1)
         )
         (set_local $8
          (i32.add
           (get_local $8)
           (get_local $21)
          )
         )
         (br $while-in57)
        )
       )
      )
     )
     (if
      (get_local $17)
      (block
       (set_local $10
        (i32.add
         (get_local $7)
         (i32.const -1)
        )
       )
       (set_local $7
        (if (result i32)
         (i32.lt_s
          (get_local $7)
          (i32.const 3)
         )
         (i32.const 2)
         (get_local $10)
        )
       )
      )
     )
     (i32.store
      (get_local $40)
      (get_local $20)
     )
     (set_local $10
      (get_local $12)
     )
     (br $while-in55)
    )
   )
  )
  (if
   (tee_local $20
    (i32.eq
     (get_local $11)
     (i32.const 2)
    )
   )
   (block
    (if
     (i32.eqz
      (get_local $70)
     )
     (block
      (set_local $7
       (call $_stereo_analysis
        (get_local $15)
        (get_local $24)
        (get_local $14)
        (get_local $31)
       )
      )
      (i32.store
       (get_local $57)
       (get_local $7)
      )
     )
    )
    (set_local $7
     (call $_hysteresis_decision
      (f32.convert_s/i32
       (i32.div_s
        (get_local $34)
        (i32.const 1000)
       )
      )
      (i32.load
       (tee_local $10
        (i32.add
         (get_local $0)
         (i32.const 232)
        )
       )
      )
     )
    )
    (set_local $21
     (i32.lt_s
      (get_local $16)
      (if (result i32)
       (tee_local $12
        (i32.gt_s
         (get_local $26)
         (get_local $7)
        )
       )
       (get_local $26)
       (get_local $7)
      )
     )
    )
    (if
     (get_local $12)
     (set_local $7
      (get_local $26)
     )
    )
    (i32.store
     (get_local $10)
     (if (result i32)
      (get_local $21)
      (get_local $16)
      (get_local $7)
     )
    )
   )
  )
  (if
   (i32.gt_s
    (i32.add
     (get_local $1)
     (i32.const 48)
    )
    (i32.sub
     (get_local $48)
     (get_local $8)
    )
   )
   (set_local $7
    (i32.const 5)
   )
   (block
    (set_local $1
     (block $__rjto$0 (result i32)
      (block $__rjti$0
       (br_if $__rjti$0
        (i32.gt_s
         (get_local $26)
         (i32.const 0)
        )
       )
       (br_if $__rjti$0
        (i32.load
         (get_local $29)
        )
       )
       (br $__rjto$0
        (call $_alloc_trim_analysis
         (get_local $15)
         (get_local $24)
         (get_local $6)
         (get_local $16)
         (get_local $14)
         (get_local $11)
         (get_local $31)
         (get_local $62)
         (i32.add
          (get_local $0)
          (i32.const 228)
         )
         (f32.load
          (get_local $45)
         )
         (i32.load offset=232
          (get_local $0)
         )
         (get_local $25)
         (get_local $34)
        )
       )
      )
      (f32.store offset=228
       (get_local $0)
       (f32.const 0)
      )
      (i32.const 5)
     )
    )
    (call $_ec_enc_icdf
     (get_local $13)
     (get_local $1)
     (i32.const 41635)
     (i32.const 7)
    )
    (set_local $10
     (call $_ec_tell_frac
      (tee_local $2
       (i32.load
        (get_local $30)
       )
      )
      (tee_local $3
       (i32.load
        (get_local $28)
       )
      )
     )
    )
    (set_local $7
     (get_local $1)
    )
    (set_local $1
     (get_local $10)
    )
   )
  )
  (if
   (get_local $68)
   (block
    (set_local $3
     (i32.load
      (get_local $75)
     )
    )
    (if
     (get_local $35)
     (block
      (set_local $2
       (i32.sub
        (get_local $36)
        (tee_local $10
         (i32.add
          (i32.mul
           (get_local $11)
           (i32.const 72)
          )
          (i32.const 32)
         )
        )
       )
      )
      (if
       (i32.lt_s
        (get_local $36)
        (get_local $10)
       )
       (set_local $2
        (i32.const 0)
       )
      )
     )
     (set_local $2
      (i32.sub
       (get_local $36)
       (i32.add
        (i32.mul
         (get_local $11)
         (i32.const 320)
        )
        (i32.const 160)
       )
      )
     )
    )
    (set_local $10
     (i32.sub
      (get_local $3)
      (get_local $14)
     )
    )
    (if
     (i32.eqz
      (tee_local $12
       (i32.eqz
        (tee_local $3
         (i32.load
          (get_local $58)
         )
        )
       )
      )
     )
     (set_local $2
      (i32.add
       (get_local $2)
       (i32.shr_s
        (i32.load offset=216
         (get_local $0)
        )
        (get_local $10)
       )
      )
     )
    )
    (if
     (get_local $35)
     (block
      (set_local $3
       (i32.shr_u
        (i32.const 96)
        (get_local $59)
       )
      )
      (set_local $6
       (i32.shr_u
        (i32.const 144)
        (get_local $59)
       )
      )
      (if
       (i32.eqz
        (i32.or
         (i32.eqz
          (f32.gt
           (tee_local $9
            (f32.load
             (get_local $45)
            )
           )
           (f32.const 0.699999988079071)
          )
         )
         (i32.gt_s
          (tee_local $3
           (i32.add
            (i32.sub
             (i32.add
              (get_local $2)
              (if (result i32)
               (i32.lt_s
                (tee_local $2
                 (i32.load offset=188
                  (get_local $0)
                 )
                )
                (i32.const 100)
               )
               (get_local $3)
               (i32.const 0)
              )
             )
             (if (result i32)
              (i32.gt_s
               (get_local $2)
               (i32.const 100)
              )
              (get_local $6)
              (i32.const 0)
             )
            )
            (i32.trunc_s/f32
             (f32.mul
              (f32.add
               (get_local $9)
               (f32.const -0.25)
              )
              (f32.const 400)
             )
            )
           )
          )
          (i32.const 400)
         )
        )
       )
       (set_local $3
        (i32.const 400)
       )
      )
      (if
       (i32.le_s
        (tee_local $2
         (i32.add
          (i32.shr_s
           (i32.add
            (i32.add
             (get_local $1)
             (get_local $8)
            )
            (i32.const 63)
           )
           (i32.const 6)
          )
          (i32.const 2)
         )
        )
        (tee_local $8
         (i32.shr_s
          (i32.add
           (i32.add
            (get_local $55)
            (get_local $8)
           )
           (i32.const 359)
          )
          (i32.const 6)
         )
        )
       )
       (set_local $2
        (get_local $8)
       )
      )
     )
     (block
      (set_local $3
       (call $_compute_vbr
        (i32.load
         (get_local $73)
        )
        (i32.load
         (get_local $74)
        )
        (get_local $62)
        (get_local $2)
        (get_local $14)
        (get_local $34)
        (i32.load offset=92
         (get_local $0)
        )
        (get_local $11)
        (i32.load offset=232
         (get_local $0)
        )
        (get_local $3)
        (f32.load offset=228
         (get_local $0)
        )
        (i32.load
         (get_local $67)
        )
        (f32.load
         (get_local $45)
        )
        (get_local $81)
        (get_local $33)
        (i32.load
         (get_local $29)
        )
        (i32.ne
         (i32.load offset=236
          (get_local $0)
         )
         (i32.const 0)
        )
        (get_local $22)
        (get_local $9)
       )
      )
      (set_local $2
       (i32.add
        (i32.shr_s
         (i32.add
          (i32.add
           (get_local $1)
           (get_local $8)
          )
          (i32.const 63)
         )
         (i32.const 6)
        )
        (i32.const 2)
       )
      )
     )
    )
    (set_local $9
     (if (result f32)
      (i32.lt_s
       (tee_local $8
        (i32.load
         (tee_local $6
          (i32.add
           (get_local $0)
           (i32.const 220)
          )
         )
        )
       )
       (i32.const 970)
      )
      (block (result f32)
       (i32.store
        (get_local $6)
        (i32.add
         (get_local $8)
         (i32.const 1)
        )
       )
       (f32.div
        (f32.const 1)
        (f32.convert_s/i32
         (i32.add
          (get_local $8)
          (i32.const 21)
         )
        )
       )
      )
      (f32.const 1.0000000474974513e-03)
     )
    )
    (set_local $1
     (if (result i32)
      (i32.lt_s
       (if (result i32)
        (i32.lt_s
         (get_local $4)
         (tee_local $8
          (i32.shr_u
           (i32.const 1275)
           (get_local $59)
          )
         )
        )
        (get_local $4)
        (tee_local $4
         (get_local $8)
        )
       )
       (if (result i32)
        (i32.gt_s
         (get_local $2)
         (tee_local $1
          (i32.shr_s
           (i32.add
            (tee_local $3
             (i32.add
              (get_local $3)
              (get_local $1)
             )
            )
            (i32.const 32)
           )
           (i32.const 6)
          )
         )
        )
        (get_local $2)
        (tee_local $2
         (get_local $1)
        )
       )
      )
      (get_local $4)
      (get_local $2)
     )
    )
    (set_local $2
     (i32.sub
      (get_local $3)
      (get_local $36)
     )
    )
    (set_local $3
     (i32.shl
      (get_local $1)
      (i32.const 6)
     )
    )
    (if
     (i32.eqz
      (tee_local $8
       (i32.eqz
        (get_local $47)
       )
      )
     )
     (set_local $1
      (i32.const 2)
     )
    )
    (if
     (i32.eqz
      (get_local $8)
     )
     (set_local $2
      (i32.const 0)
     )
    )
    (if
     (i32.eqz
      (get_local $8)
     )
     (set_local $3
      (i32.const 128)
     )
    )
    (block $do-once60
     (if
      (i32.eqz
       (get_local $12)
      )
      (block
       (i32.store
        (tee_local $12
         (i32.add
          (get_local $0)
          (i32.const 208)
         )
        )
        (i32.add
         (i32.load
          (get_local $12)
         )
         (i32.sub
          (get_local $3)
          (get_local $36)
         )
        )
       )
       (set_local $2
        (i32.add
         (tee_local $12
          (i32.load
           (tee_local $3
            (i32.add
             (get_local $0)
             (i32.const 212)
            )
           )
          )
         )
         (i32.trunc_s/f32
          (f32.mul
           (get_local $9)
           (f32.convert_s/i32
            (i32.sub
             (i32.sub
              (i32.shl
               (get_local $2)
               (get_local $10)
              )
              (i32.load
               (tee_local $10
                (i32.add
                 (get_local $0)
                 (i32.const 216)
                )
               )
              )
             )
             (get_local $12)
            )
           )
          )
         )
        )
       )
       (i32.store
        (get_local $3)
        (get_local $2)
       )
       (i32.store
        (get_local $10)
        (i32.sub
         (i32.const 0)
         (get_local $2)
        )
       )
       (br_if $do-once60
        (i32.ge_s
         (tee_local $3
          (i32.load
           (tee_local $2
            (i32.add
             (get_local $0)
             (i32.const 208)
            )
           )
          )
         )
         (i32.const 0)
        )
       )
       (set_local $3
        (i32.div_s
         (get_local $3)
         (i32.const -64)
        )
       )
       (i32.store
        (get_local $2)
        (i32.const 0)
       )
       (set_local $1
        (i32.add
         (get_local $1)
         (if (result i32)
          (get_local $8)
          (get_local $3)
          (i32.const 0)
         )
        )
       )
      )
     )
    )
    (call $_ec_enc_shrink
     (get_local $13)
     (if (result i32)
      (i32.lt_s
       (get_local $4)
       (get_local $1)
      )
      (get_local $4)
      (tee_local $4
       (get_local $1)
      )
     )
    )
    (set_local $2
     (i32.load
      (get_local $30)
     )
    )
    (set_local $3
     (i32.load
      (get_local $28)
     )
    )
   )
  )
  (set_local $8
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (get_local $23)
       (i32.const 2)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (set_local $12
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (get_local $23)
       (i32.const 2)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (set_local $6
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (get_local $23)
       (i32.const 2)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (set_local $21
   (i32.shl
    (get_local $4)
    (i32.const 6)
   )
  )
  (set_local $1
   (call $_ec_tell_frac
    (get_local $2)
    (get_local $3)
   )
  )
  (set_local $17
   (i32.add
    (i32.sub
     (get_local $21)
     (get_local $1)
    )
    (i32.const -1)
   )
  )
  (set_local $10
   (if (result i32)
    (i32.and
     (i32.gt_u
      (get_local $14)
      (i32.const 1)
     )
     (i32.xor
      (tee_local $36
       (i32.eqz
        (get_local $5)
       )
      )
      (i32.const 1)
     )
    )
    (block (result i32)
     (set_local $3
      (i32.xor
       (tee_local $1
        (i32.lt_s
         (get_local $17)
         (i32.add
          (i32.shl
           (get_local $14)
           (i32.const 3)
          )
          (i32.const 16)
         )
        )
       )
       (i32.const 1)
      )
     )
     (if (result i32)
      (get_local $1)
      (i32.const 0)
      (i32.const 8)
     )
    )
    (block (result i32)
     (set_local $3
      (i32.const 0)
     )
     (i32.const 0)
    )
   )
  )
  (set_local $1
   (i32.add
    (get_local $16)
    (i32.const -1)
   )
  )
  (if
   (i32.load offset=120
    (get_local $0)
   )
   (if
    (i32.le_s
     (tee_local $1
      (i32.load offset=152
       (get_local $0)
      )
     )
     (tee_local $2
      (block $do-once62 (result i32)
       (if (result i32)
        (i32.lt_s
         (get_local $34)
         (i32.mul
          (get_local $11)
          (i32.const 32000)
         )
        )
        (i32.const 13)
        (block (result i32)
         (drop
          (br_if $do-once62
           (i32.const 16)
           (i32.lt_s
            (get_local $34)
            (i32.mul
             (get_local $11)
             (i32.const 48000)
            )
           )
          )
         )
         (drop
          (br_if $do-once62
           (i32.const 18)
           (i32.lt_s
            (get_local $34)
            (i32.mul
             (get_local $11)
             (i32.const 60000)
            )
           )
          )
         )
         (if (result i32)
          (i32.lt_s
           (get_local $34)
           (i32.mul
            (get_local $11)
            (i32.const 80000)
           )
          )
          (i32.const 19)
          (i32.const 20)
         )
        )
       )
      )
     )
    )
    (set_local $1
     (get_local $2)
    )
   )
  )
  (set_local $2
   (call $_clt_compute_allocation
    (get_local $15)
    (get_local $26)
    (get_local $16)
    (get_local $39)
    (get_local $41)
    (get_local $7)
    (tee_local $34
     (i32.add
      (get_local $0)
      (i32.const 232)
     )
    )
    (get_local $57)
    (i32.sub
     (get_local $17)
     (get_local $10)
    )
    (get_local $66)
    (get_local $12)
    (get_local $8)
    (get_local $6)
    (get_local $11)
    (get_local $14)
    (get_local $13)
    (i32.const 1)
    (i32.load
     (tee_local $17
      (i32.add
       (get_local $0)
       (i32.const 92)
      )
     )
    )
    (if (result i32)
     (i32.load
      (get_local $29)
     )
     (i32.const 1)
     (get_local $1)
    )
   )
  )
  (if
   (tee_local $1
    (i32.load
     (get_local $17)
    )
   )
   (block
    (set_local $29
     (i32.lt_s
      (tee_local $7
       (i32.add
        (get_local $1)
        (i32.const 1)
       )
      )
      (if (result i32)
       (tee_local $55
        (i32.gt_s
         (tee_local $1
          (i32.add
           (get_local $1)
           (i32.const -1)
          )
         )
         (get_local $2)
        )
       )
       (get_local $1)
       (get_local $2)
      )
     )
    )
    (if
     (i32.eqz
      (get_local $55)
     )
     (set_local $1
      (get_local $2)
     )
    )
    (if
     (get_local $29)
     (set_local $1
      (get_local $7)
     )
    )
   )
   (set_local $1
    (get_local $2)
   )
  )
  (i32.store
   (get_local $17)
   (get_local $1)
  )
  (call $_quant_fine_energy
   (get_local $15)
   (get_local $26)
   (get_local $16)
   (get_local $32)
   (get_local $37)
   (get_local $8)
   (get_local $13)
   (get_local $11)
  )
  (set_local $1
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.and
     (i32.add
      (get_local $52)
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (set_local $17
   (i32.add
    (get_local $24)
    (i32.shl
     (get_local $31)
     (i32.const 2)
    )
   )
  )
  (set_local $7
   (i32.add
    (get_local $0)
    (i32.const 76)
   )
  )
  (call $_quant_all_bands
   (i32.const 1)
   (get_local $15)
   (get_local $26)
   (get_local $16)
   (get_local $24)
   (if (result i32)
    (get_local $20)
    (get_local $17)
    (i32.const 0)
   )
   (get_local $1)
   (get_local $46)
   (get_local $12)
   (get_local $19)
   (i32.load offset=80
    (get_local $0)
   )
   (i32.load
    (get_local $57)
   )
   (i32.load
    (get_local $34)
   )
   (get_local $18)
   (i32.sub
    (get_local $21)
    (get_local $10)
   )
   (i32.load
    (get_local $66)
   )
   (get_local $13)
   (get_local $14)
   (get_local $2)
   (get_local $7)
   (i32.load
    (get_local $43)
   )
   (i32.load offset=72
    (get_local $0)
   )
   (i32.load offset=68
    (get_local $0)
   )
  )
  (if
   (get_local $3)
   (call $_ec_enc_bits
    (get_local $13)
    (i32.lt_s
     (i32.load offset=116
      (get_local $0)
     )
     (i32.const 2)
    )
    (i32.const 1)
   )
  )
  (set_local $1
   (i32.shl
    (get_local $4)
    (i32.const 3)
   )
  )
  (set_local $2
   (call $_ec_tell
    (i32.load
     (get_local $30)
    )
    (i32.load
     (get_local $28)
    )
   )
  )
  (call $_quant_energy_finalise
   (get_local $15)
   (get_local $26)
   (get_local $16)
   (get_local $32)
   (get_local $37)
   (get_local $8)
   (get_local $6)
   (i32.sub
    (get_local $1)
    (get_local $2)
   )
   (get_local $13)
   (get_local $11)
  )
  (drop
   (call $_memset
    (get_local $61)
    (i32.const 0)
    (tee_local $3
     (i32.shl
      (get_local $38)
      (i32.const 2)
     )
    )
   )
  )
  (set_local $1
   (i32.const 0)
  )
  (loop $while-in65
   (set_local $10
    (i32.mul
     (get_local $1)
     (get_local $23)
    )
   )
   (set_local $2
    (get_local $26)
   )
   (loop $while-in67
    (if
     (i32.lt_s
      (get_local $2)
      (get_local $16)
     )
     (block
      (set_local $8
       (f32.gt
        (tee_local $9
         (f32.load
          (i32.add
           (get_local $37)
           (i32.shl
            (tee_local $12
             (i32.add
              (get_local $2)
              (get_local $10)
             )
            )
            (i32.const 2)
           )
          )
         )
        )
        (f32.const 0.5)
       )
      )
      (set_local $21
       (i32.or
        (tee_local $6
         (f32.lt
          (get_local $9)
          (f32.const -0.5)
         )
        )
        (get_local $8)
       )
      )
      (set_local $22
       (if (result f32)
        (i32.and
         (get_local $6)
         (i32.xor
          (get_local $8)
          (i32.const 1)
         )
        )
        (f32.const -0.5)
        (f32.const 0.5)
       )
      )
      (f32.store
       (i32.add
        (get_local $61)
        (i32.shl
         (get_local $12)
         (i32.const 2)
        )
       )
       (if (result f32)
        (get_local $21)
        (get_local $22)
        (get_local $9)
       )
      )
      (set_local $2
       (i32.add
        (get_local $2)
        (i32.const 1)
       )
      )
      (br $while-in67)
     )
    )
   )
   (br_if $while-in65
    (i32.lt_s
     (tee_local $1
      (i32.add
       (get_local $1)
       (i32.const 1)
      )
     )
     (get_local $11)
    )
   )
  )
  (block $label$break$L309
   (if
    (get_local $47)
    (block
     (set_local $1
      (i32.const 0)
     )
     (loop $while-in70
      (br_if $label$break$L309
       (i32.ge_s
        (get_local $1)
        (get_local $52)
       )
      )
      (f32.store
       (i32.add
        (get_local $32)
        (i32.shl
         (get_local $1)
         (i32.const 2)
        )
       )
       (f32.const -28)
      )
      (set_local $1
       (i32.add
        (get_local $1)
        (i32.const 1)
       )
      )
      (br $while-in70)
     )
    )
   )
  )
  (i32.store offset=104
   (get_local $0)
   (i32.load
    (get_local $49)
   )
  )
  (f32.store offset=108
   (get_local $0)
   (get_local $78)
  )
  (i32.store offset=112
   (get_local $0)
   (get_local $69)
  )
  (if
   (i32.and
    (get_local $72)
    (get_local $71)
   )
   (drop
    (call $_memcpy
     (i32.add
      (get_local $32)
      (i32.shl
       (get_local $23)
       (i32.const 2)
      )
     )
     (get_local $32)
     (i32.shl
      (get_local $23)
      (i32.const 2)
     )
    )
   )
  )
  (block $label$break$L318
   (if
    (get_local $36)
    (block
     (drop
      (call $_memcpy
       (get_local $60)
       (get_local $50)
       (get_local $3)
      )
     )
     (drop
      (call $_memcpy
       (get_local $50)
       (get_local $32)
       (get_local $3)
      )
     )
    )
    (block
     (set_local $1
      (i32.const 0)
     )
     (loop $while-in73
      (br_if $label$break$L318
       (i32.ge_s
        (get_local $1)
        (get_local $38)
       )
      )
      (set_local $9
       (f32.load
        (tee_local $2
         (i32.add
          (get_local $50)
          (i32.shl
           (get_local $1)
           (i32.const 2)
          )
         )
        )
       )
      )
      (f32.store
       (get_local $2)
       (if (result f32)
        (f32.lt
         (get_local $9)
         (tee_local $22
          (f32.load
           (i32.add
            (get_local $32)
            (i32.shl
             (get_local $1)
             (i32.const 2)
            )
           )
          )
         )
        )
        (get_local $9)
        (get_local $22)
       )
      )
      (set_local $1
       (i32.add
        (get_local $1)
        (i32.const 1)
       )
      )
      (br $while-in73)
     )
    )
   )
  )
  (set_local $1
   (i32.const 0)
  )
  (loop $while-in75
   (set_local $3
    (i32.mul
     (get_local $1)
     (get_local $23)
    )
   )
   (set_local $2
    (i32.const 0)
   )
   (loop $while-in77
    (if
     (i32.lt_s
      (get_local $2)
      (get_local $26)
     )
     (block
      (f32.store
       (i32.add
        (get_local $32)
        (i32.shl
         (tee_local $8
          (i32.add
           (get_local $3)
           (get_local $2)
          )
         )
         (i32.const 2)
        )
       )
       (f32.const 0)
      )
      (f32.store
       (i32.add
        (get_local $60)
        (i32.shl
         (get_local $8)
         (i32.const 2)
        )
       )
       (f32.const -28)
      )
      (f32.store
       (i32.add
        (get_local $50)
        (i32.shl
         (get_local $8)
         (i32.const 2)
        )
       )
       (f32.const -28)
      )
      (set_local $2
       (i32.add
        (get_local $2)
        (i32.const 1)
       )
      )
      (br $while-in77)
     )
    )
   )
   (set_local $2
    (get_local $16)
   )
   (loop $while-in79
    (if
     (i32.lt_s
      (get_local $2)
      (get_local $23)
     )
     (block
      (f32.store
       (i32.add
        (get_local $32)
        (i32.shl
         (tee_local $8
          (i32.add
           (get_local $3)
           (get_local $2)
          )
         )
         (i32.const 2)
        )
       )
       (f32.const 0)
      )
      (f32.store
       (i32.add
        (get_local $60)
        (i32.shl
         (get_local $8)
         (i32.const 2)
        )
       )
       (f32.const -28)
      )
      (f32.store
       (i32.add
        (get_local $50)
        (i32.shl
         (get_local $8)
         (i32.const 2)
        )
       )
       (f32.const -28)
      )
      (set_local $2
       (i32.add
        (get_local $2)
        (i32.const 1)
       )
      )
      (br $while-in79)
     )
    )
   )
   (br_if $while-in75
    (i32.lt_s
     (tee_local $1
      (i32.add
       (get_local $1)
       (i32.const 1)
      )
     )
     (get_local $27)
    )
   )
  )
  (i32.store
   (tee_local $0
    (i32.add
     (get_local $0)
     (i32.const 116)
    )
   )
   (tee_local $1
    (if (result i32)
     (i32.or
      (get_local $5)
      (get_local $51)
     )
     (i32.add
      (i32.load
       (get_local $0)
      )
      (i32.const 1)
     )
     (i32.const 0)
    )
   )
  )
  (i32.store
   (get_local $7)
   (i32.load
    (get_local $28)
   )
  )
  (call $_ec_enc_done
   (get_local $13)
  )
  (if
   (call $_ec_get_error
    (i32.load offset=44
     (get_local $13)
    )
   )
   (set_local $4
    (i32.const -3)
   )
  )
  (call $_llvm_stackrestore
   (get_local $76)
  )
  (set_global $STACKTOP
   (get_local $54)
  )
  (get_local $4)
 )
 (func $_ec_tell (; 68 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (i32.add
   (i32.add
    (i32.clz
     (get_local $1)
    )
    (i32.const -32)
   )
   (get_local $0)
  )
 )
 (func $_celt_maxabs16 (; 69 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result f32)
  (local $2 f32)
  (local $3 f32)
  (local $4 i32)
  (local $5 f32)
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $4)
     (get_local $1)
    )
    (block
     (if
      (i32.eqz
       (f32.gt
        (get_local $3)
        (tee_local $5
         (f32.load
          (i32.add
           (get_local $0)
           (i32.shl
            (get_local $4)
            (i32.const 2)
           )
          )
         )
        )
       )
      )
      (set_local $3
       (get_local $5)
      )
     )
     (if
      (i32.eqz
       (f32.lt
        (get_local $2)
        (get_local $5)
       )
      )
      (set_local $2
       (get_local $5)
      )
     )
     (set_local $4
      (i32.add
       (get_local $4)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (if (result f32)
   (f32.gt
    (get_local $3)
    (tee_local $2
     (f32.neg
      (get_local $2)
     )
    )
   )
   (get_local $3)
   (get_local $2)
  )
 )
 (func $_run_prefilter (; 70 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (param $8 i32) (param $9 i32) (param $10 i32) (param $11 i32) (result i32)
  (local $12 f32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 f32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 f32)
  (local $22 i32)
  (local $23 f32)
  (local $24 i32)
  (local $25 i32)
  (local $26 i32)
  (local $27 i32)
  (local $28 i32)
  (local $29 i32)
  (local $30 i32)
  (local $31 i32)
  (local $32 i32)
  (local $33 i32)
  (local $34 i32)
  (local $35 i32)
  (local $36 i32)
  (set_local $15
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.const 16)
   )
  )
  (set_local $17
   (i32.load offset=4
    (tee_local $14
     (i32.load
      (get_local $0)
     )
    )
   )
  )
  (set_local $13
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (i32.mul
        (tee_local $18
         (i32.add
          (get_local $4)
          (i32.const 1024)
         )
        )
        (get_local $3)
       )
       (i32.const 2)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (i32.store
   (tee_local $20
    (i32.add
     (get_local $15)
     (i32.const 8)
    )
   )
   (get_local $13)
  )
  (i32.store offset=4
   (get_local $20)
   (i32.add
    (get_local $13)
    (i32.shl
     (get_local $18)
     (i32.const 2)
    )
   )
  )
  (set_local $26
   (i32.add
    (get_local $17)
    (get_local $4)
   )
  )
  (set_local $22
   (i32.shl
    (get_local $4)
    (i32.const 2)
   )
  )
  (set_local $13
   (i32.const 0)
  )
  (loop $while-in
   (drop
    (call $_memcpy
     (tee_local $19
      (i32.load
       (i32.add
        (get_local $20)
        (i32.shl
         (get_local $13)
         (i32.const 2)
        )
       )
      )
     )
     (i32.add
      (get_local $2)
      (i32.shl
       (get_local $13)
       (i32.const 12)
      )
     )
     (i32.const 4096)
    )
   )
   (drop
    (call $_memcpy
     (i32.add
      (get_local $19)
      (i32.const 4096)
     )
     (i32.add
      (i32.add
       (get_local $1)
       (i32.shl
        (i32.mul
         (get_local $13)
         (get_local $26)
        )
        (i32.const 2)
       )
      )
      (i32.shl
       (get_local $17)
       (i32.const 2)
      )
     )
     (get_local $22)
    )
   )
   (br_if $while-in
    (i32.lt_s
     (tee_local $13
      (i32.add
       (get_local $13)
       (i32.const 1)
      )
     )
     (get_local $3)
    )
   )
  )
  (set_local $13
   (if (result i32)
    (get_local $9)
    (block (result i32)
     (set_local $13
      (i32.shr_s
       (get_local $18)
       (i32.const 1)
      )
     )
     (set_local $19
      (call $_llvm_stacksave)
     )
     (set_local $9
      (get_global $STACKTOP)
     )
     (set_global $STACKTOP
      (i32.add
       (get_global $STACKTOP)
       (i32.and
        (i32.add
         (i32.shl
          (get_local $13)
          (i32.const 2)
         )
         (i32.const 15)
        )
        (i32.const -16)
       )
      )
     )
     (call $_pitch_downsample
      (get_local $20)
      (get_local $9)
      (get_local $18)
      (get_local $3)
     )
     (call $_pitch_search
      (i32.add
       (get_local $9)
       (i32.const 2048)
      )
      (get_local $9)
      (get_local $4)
      (i32.const 979)
      (get_local $15)
     )
     (i32.store
      (get_local $15)
      (i32.sub
       (i32.const 1024)
       (i32.load
        (get_local $15)
       )
      )
     )
     (set_local $12
      (call $_remove_doubling
       (get_local $9)
       (get_local $4)
       (get_local $15)
       (i32.load offset=104
        (get_local $0)
       )
       (f32.load offset=108
        (get_local $0)
       )
      )
     )
     (if
      (i32.gt_s
       (tee_local $9
        (i32.load
         (get_local $15)
        )
       )
       (i32.const 1022)
      )
      (block
       (i32.store
        (get_local $15)
        (i32.const 1022)
       )
       (set_local $9
        (i32.const 1022)
       )
      )
     )
     (set_local $12
      (f32.mul
       (tee_local $16
        (f32.mul
         (get_local $12)
         (f32.const 0.699999988079071)
        )
       )
       (f32.const 0.5)
      )
     )
     (set_local $16
      (f32.mul
       (if (result f32)
        (i32.gt_s
         (tee_local $13
          (i32.load offset=56
           (get_local $0)
          )
         )
         (i32.const 2)
        )
        (get_local $12)
        (tee_local $12
         (get_local $16)
        )
       )
       (f32.const 0.5)
      )
     )
     (if
      (i32.gt_s
       (get_local $13)
       (i32.const 4)
      )
      (set_local $12
       (get_local $16)
      )
     )
     (if
      (i32.gt_s
       (get_local $13)
       (i32.const 8)
      )
      (set_local $12
       (f32.const 0)
      )
     )
     (call $_llvm_stackrestore
      (get_local $19)
     )
     (get_local $9)
    )
    (block (result i32)
     (i32.store
      (get_local $15)
      (i32.const 15)
     )
     (i32.const 15)
    )
   )
  )
  (set_local $16
   (if (result f32)
    (i32.load
     (get_local $11)
    )
    (f32.mul
     (get_local $12)
     (f32.load offset=40
      (get_local $11)
     )
    )
    (get_local $12)
   )
  )
  (set_local $18
   (i32.sub
    (i32.const 0)
    (tee_local $9
     (i32.sub
      (get_local $13)
      (tee_local $11
       (i32.load
        (tee_local $19
         (i32.add
          (get_local $0)
          (i32.const 104)
         )
        )
       )
      )
     )
    )
   )
  )
  (set_local $12
   (if (result f32)
    (i32.gt_s
     (i32.mul
      (if (result i32)
       (i32.gt_s
        (get_local $9)
        (i32.const -1)
       )
       (get_local $9)
       (get_local $18)
      )
      (i32.const 10)
     )
     (get_local $13)
    )
    (f32.const 0.4000000059604645)
    (f32.const 0.20000000298023224)
   )
  )
  (block $__rjto$1
   (block $__rjti$1
    (if
     (i32.lt_s
      (get_local $10)
      (i32.const 25)
     )
     (block
      (set_local $12
       (f32.add
        (get_local $12)
        (f32.const 0.10000000149011612)
       )
      )
      (br $__rjti$1)
     )
     (br_if $__rjti$1
      (i32.lt_s
       (get_local $10)
       (i32.const 35)
      )
     )
    )
    (br $__rjto$1)
   )
   (set_local $12
    (f32.add
     (get_local $12)
     (f32.const 0.10000000149011612)
    )
   )
  )
  (set_local $21
   (f32.add
    (get_local $12)
    (f32.const -0.10000000149011612)
   )
  )
  (set_local $12
   (f32.add
    (if (result f32)
     (f32.gt
      (tee_local $23
       (f32.load
        (tee_local $27
         (i32.add
          (get_local $0)
          (i32.const 108)
         )
        )
       )
      )
      (f32.const 0.4000000059604645)
     )
     (get_local $21)
     (tee_local $21
      (get_local $12)
     )
    )
    (f32.const -0.10000000149011612)
   )
  )
  (set_local $31
   (i32.add
    (get_local $14)
    (i32.const 44)
   )
  )
  (set_local $28
   (i32.shl
    (get_local $17)
    (i32.const 2)
   )
  )
  (set_local $16
   (f32.neg
    (tee_local $12
     (if (result f32)
      (f32.lt
       (get_local $16)
       (if (result f32)
        (f32.gt
         (if (result f32)
          (f32.gt
           (get_local $23)
           (f32.const 0.550000011920929)
          )
          (get_local $12)
          (tee_local $12
           (get_local $21)
          )
         )
         (f32.const 0.20000000298023224)
        )
        (get_local $12)
        (f32.const 0.20000000298023224)
       )
      )
      (block (result f32)
       (set_local $18
        (i32.const 0)
       )
       (f32.const 0)
      )
      (block (result f32)
       (block $__rjto$0
        (set_local $9
         (if (result i32)
          (i32.gt_s
           (tee_local $10
            (i32.trunc_s/f32
             (f32.floor
              (f32.add
               (f32.div
                (f32.mul
                 (if (result f32)
                  (f32.lt
                   (f32.abs
                    (f32.sub
                     (get_local $16)
                     (get_local $23)
                    )
                   )
                   (f32.const 0.10000000149011612)
                  )
                  (get_local $23)
                  (get_local $16)
                 )
                 (f32.const 32)
                )
                (f32.const 3)
               )
               (f32.const 0.5)
              )
             )
            )
           )
           (i32.const 8)
          )
          (block
           (set_local $9
            (i32.const 7)
           )
           (br $__rjto$0)
          )
          (block (result i32)
           (set_local $9
            (i32.add
             (get_local $10)
             (i32.const -1)
            )
           )
           (if (result i32)
            (i32.lt_s
             (get_local $10)
             (i32.const 1)
            )
            (i32.const 0)
            (br $__rjto$0)
           )
          )
         )
        )
       )
       (set_local $29
        (i32.const 1)
       )
       (f32.mul
        (f32.convert_s/i32
         (i32.add
          (tee_local $18
           (get_local $9)
          )
          (i32.const 1)
         )
        )
        (f32.const 0.09375)
       )
      )
     )
    )
   )
  )
  (set_local $30
   (i32.add
    (get_local $0)
    (i32.const 112)
   )
  )
  (set_local $32
   (i32.add
    (get_local $14)
    (i32.const 60)
   )
  )
  (set_local $33
   (i32.gt_s
    (get_local $4)
    (i32.const 1024)
   )
  )
  (set_local $34
   (i32.sub
    (i32.const 4096)
    (get_local $22)
   )
  )
  (set_local $35
   (i32.sub
    (i32.const 0)
    (get_local $4)
   )
  )
  (set_local $10
   (i32.const 0)
  )
  (set_local $9
   (get_local $11)
  )
  (loop $while-in1
   (set_local $14
    (i32.sub
     (i32.load
      (get_local $31)
     )
     (get_local $17)
    )
   )
   (i32.store
    (get_local $19)
    (if (result i32)
     (i32.gt_s
      (get_local $9)
      (i32.const 15)
     )
     (get_local $9)
     (i32.const 15)
    )
   )
   (drop
    (call $_memcpy
     (tee_local $24
      (i32.add
       (get_local $1)
       (i32.shl
        (i32.mul
         (get_local $10)
         (get_local $26)
        )
        (i32.const 2)
       )
      )
     )
     (tee_local $36
      (i32.add
       (i32.add
        (get_local $0)
        (i32.const 244)
       )
       (i32.shl
        (i32.mul
         (get_local $10)
         (get_local $17)
        )
        (i32.const 2)
       )
      )
     )
     (get_local $28)
    )
   )
   (if
    (get_local $14)
    (call $_comb_filter
     (i32.add
      (get_local $24)
      (i32.shl
       (get_local $17)
       (i32.const 2)
      )
     )
     (tee_local $11
      (i32.add
       (tee_local $9
        (i32.load
         (i32.add
          (get_local $20)
          (i32.shl
           (get_local $10)
           (i32.const 2)
          )
         )
        )
       )
       (i32.const 4096)
      )
     )
     (tee_local $25
      (i32.load
       (get_local $19)
      )
     )
     (get_local $25)
     (get_local $14)
     (tee_local $21
      (f32.neg
       (f32.load
        (get_local $27)
       )
      )
     )
     (get_local $21)
     (tee_local $25
      (i32.load
       (get_local $30)
      )
     )
     (get_local $25)
     (i32.const 0)
     (i32.const 0)
    )
    (set_local $11
     (i32.add
      (tee_local $9
       (i32.load
        (i32.add
         (get_local $20)
         (i32.shl
          (get_local $10)
          (i32.const 2)
         )
        )
       )
      )
      (i32.const 4096)
     )
    )
   )
   (call $_comb_filter
    (i32.add
     (i32.add
      (get_local $24)
      (i32.shl
       (get_local $17)
       (i32.const 2)
      )
     )
     (i32.shl
      (get_local $14)
      (i32.const 2)
     )
    )
    (i32.add
     (get_local $11)
     (i32.shl
      (get_local $14)
      (i32.const 2)
     )
    )
    (i32.load
     (get_local $19)
    )
    (get_local $13)
    (i32.sub
     (get_local $4)
     (get_local $14)
    )
    (f32.neg
     (f32.load
      (get_local $27)
     )
    )
    (get_local $16)
    (i32.load
     (get_local $30)
    )
    (get_local $5)
    (i32.load
     (get_local $32)
    )
    (get_local $17)
   )
   (drop
    (call $_memcpy
     (get_local $36)
     (i32.add
      (get_local $24)
      (i32.shl
       (get_local $4)
       (i32.const 2)
      )
     )
     (get_local $28)
    )
   )
   (set_local $14
    (i32.add
     (get_local $2)
     (i32.shl
      (get_local $10)
      (i32.const 12)
     )
    )
   )
   (if
    (get_local $33)
    (drop
     (call $_memcpy
      (get_local $14)
      (i32.add
       (get_local $9)
       (i32.shl
        (get_local $4)
        (i32.const 2)
       )
      )
      (i32.const 4096)
     )
    )
    (block
     (drop
      (call $_memmove
       (get_local $14)
       (i32.add
        (get_local $14)
        (i32.shl
         (get_local $4)
         (i32.const 2)
        )
       )
       (get_local $34)
      )
     )
     (drop
      (call $_memcpy
       (i32.add
        (i32.add
         (get_local $14)
         (i32.const 4096)
        )
        (i32.shl
         (get_local $35)
         (i32.const 2)
        )
       )
       (get_local $11)
       (get_local $22)
      )
     )
    )
   )
   (if
    (i32.lt_s
     (tee_local $10
      (i32.add
       (get_local $10)
       (i32.const 1)
      )
     )
     (get_local $3)
    )
    (block
     (set_local $9
      (i32.load
       (get_local $19)
      )
     )
     (br $while-in1)
    )
   )
  )
  (f32.store
   (get_local $7)
   (get_local $12)
  )
  (i32.store
   (get_local $6)
   (get_local $13)
  )
  (i32.store
   (get_local $8)
   (get_local $18)
  )
  (set_global $STACKTOP
   (get_local $15)
  )
  (get_local $29)
 )
 (func $_transient_analysis (; 71 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (result i32)
  (local $7 i32)
  (local $8 f32)
  (local $9 f32)
  (local $10 i32)
  (local $11 i32)
  (local $12 f32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 f32)
  (local $17 i32)
  (local $18 i32)
  (local $19 f32)
  (local $20 f64)
  (local $21 f32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local $26 f64)
  (local $27 f64)
  (set_local $15
   (get_global $STACKTOP)
  )
  (set_local $10
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (get_local $1)
       (i32.const 2)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (i32.store
   (get_local $6)
   (i32.const 0)
  )
  (set_local $19
   (if (result f32)
    (tee_local $18
     (i32.eqz
      (get_local $5)
     )
    )
    (f32.const 0.0625)
    (f32.const 0.03125)
   )
  )
  (set_local $20
   (f64.convert_s/i32
    (tee_local $13
     (i32.div_s
      (get_local $1)
      (i32.const 2)
     )
    )
   )
  )
  (set_local $21
   (f32.convert_s/i32
    (get_local $13)
   )
  )
  (set_local $22
   (i32.add
    (get_local $13)
    (i32.const -5)
   )
  )
  (set_local $23
   (i32.add
    (i32.mul
     (get_local $13)
     (i32.const 6)
    )
    (i32.const -102)
   )
  )
  (set_local $5
   (i32.const 0)
  )
  (block $__rjto$3
   (block $__rjti$3
    (block $__rjti$2
     (block $__rjti$1
      (loop $while-in
       (block $while-out
        (br_if $__rjti$3
         (i32.ge_s
          (get_local $14)
          (get_local $2)
         )
        )
        (set_local $11
         (i32.mul
          (get_local $14)
          (get_local $1)
         )
        )
        (set_local $9
         (f32.const 0)
        )
        (set_local $7
         (i32.const 0)
        )
        (set_local $8
         (f32.const 0)
        )
        (loop $while-in1
         (if
          (i32.lt_s
           (get_local $7)
           (get_local $1)
          )
          (block
           (f32.store
            (i32.add
             (get_local $10)
             (i32.shl
              (get_local $7)
              (i32.const 2)
             )
            )
            (tee_local $16
             (f32.add
              (get_local $8)
              (tee_local $12
               (f32.load
                (i32.add
                 (get_local $0)
                 (i32.shl
                  (i32.add
                   (get_local $7)
                   (get_local $11)
                  )
                  (i32.const 2)
                 )
                )
               )
              )
             )
            )
           )
           (set_local $8
            (f32.sub
             (f32.add
              (get_local $9)
              (get_local $16)
             )
             (f32.mul
              (get_local $12)
              (f32.const 2)
             )
            )
           )
           (set_local $9
            (f32.sub
             (get_local $12)
             (f32.mul
              (get_local $16)
              (f32.const 0.5)
             )
            )
           )
           (set_local $7
            (i32.add
             (get_local $7)
             (i32.const 1)
            )
           )
           (br $while-in1)
          )
         )
        )
        (i64.store
         (get_local $10)
         (i64.const 0)
        )
        (i64.store offset=8
         (get_local $10)
         (i64.const 0)
        )
        (i64.store offset=16
         (get_local $10)
         (i64.const 0)
        )
        (i64.store offset=24
         (get_local $10)
         (i64.const 0)
        )
        (i64.store offset=32
         (get_local $10)
         (i64.const 0)
        )
        (i64.store offset=40
         (get_local $10)
         (i64.const 0)
        )
        (set_local $12
         (f32.const 0)
        )
        (set_local $8
         (f32.const 0)
        )
        (set_local $7
         (i32.const 0)
        )
        (loop $while-in3
         (if
          (i32.lt_s
           (get_local $7)
           (get_local $13)
          )
          (block
           (f32.store
            (i32.add
             (get_local $10)
             (i32.shl
              (get_local $7)
              (i32.const 2)
             )
            )
            (tee_local $8
             (f32.add
              (get_local $8)
              (f32.mul
               (get_local $19)
               (f32.sub
                (tee_local $9
                 (f32.add
                  (f32.mul
                   (tee_local $9
                    (f32.load
                     (i32.add
                      (get_local $10)
                      (i32.shl
                       (tee_local $11
                        (i32.shl
                         (get_local $7)
                         (i32.const 1)
                        )
                       )
                       (i32.const 2)
                      )
                     )
                    )
                   )
                   (get_local $9)
                  )
                  (f32.mul
                   (tee_local $9
                    (f32.load
                     (i32.add
                      (get_local $10)
                      (i32.shl
                       (i32.or
                        (get_local $11)
                        (i32.const 1)
                       )
                       (i32.const 2)
                      )
                     )
                    )
                   )
                   (get_local $9)
                  )
                 )
                )
                (get_local $8)
               )
              )
             )
            )
           )
           (set_local $12
            (f32.add
             (get_local $12)
             (get_local $9)
            )
           )
           (set_local $7
            (i32.add
             (get_local $7)
             (i32.const 1)
            )
           )
           (br $while-in3)
          )
         )
        )
        (set_local $8
         (f32.const 0)
        )
        (set_local $7
         (get_local $13)
        )
        (set_local $9
         (f32.const 0)
        )
        (loop $while-in5
         (set_local $11
          (i32.add
           (get_local $7)
           (i32.const -1)
          )
         )
         (if
          (i32.gt_s
           (get_local $7)
           (i32.const 0)
          )
          (block
           (set_local $9
            (f32.add
             (get_local $9)
             (f32.mul
              (f32.sub
               (f32.load
                (tee_local $7
                 (i32.add
                  (get_local $10)
                  (i32.shl
                   (get_local $11)
                   (i32.const 2)
                  )
                 )
                )
               )
               (get_local $9)
              )
              (f32.const 0.125)
             )
            )
           )
           (f32.store
            (get_local $7)
            (get_local $9)
           )
           (if
            (i32.eqz
             (f32.gt
              (get_local $8)
              (get_local $9)
             )
            )
            (set_local $8
             (get_local $9)
            )
           )
           (set_local $7
            (get_local $11)
           )
           (br $while-in5)
          )
         )
        )
        (br_if $__rjti$1
         (f32.ne
          (tee_local $9
           (f32.load
            (get_local $10)
           )
          )
          (get_local $9)
         )
        )
        (br_if $__rjti$2
         (f32.ne
          (tee_local $8
           (f32.div
            (get_local $21)
            (f32.add
             (f32.demote/f64
              (f64.sqrt
               (f64.mul
                (f64.mul
                 (f64.promote/f32
                  (f32.mul
                   (get_local $12)
                   (get_local $8)
                  )
                 )
                 (f64.const 0.5)
                )
                (get_local $20)
               )
              )
             )
             (f32.const 1.0000000036274937e-15)
            )
           )
          )
          (get_local $8)
         )
        )
        (set_local $9
         (f32.mul
          (get_local $8)
          (f32.const 64)
         )
        )
        (set_local $11
         (i32.const 0)
        )
        (set_local $7
         (i32.const 12)
        )
        (loop $while-in7
         (if
          (i32.lt_s
           (get_local $7)
           (get_local $22)
          )
          (block
           (set_local $17
            (f32.gt
             (tee_local $8
              (f32.floor
               (f32.mul
                (get_local $9)
                (f32.add
                 (f32.load
                  (i32.add
                   (get_local $10)
                   (i32.shl
                    (get_local $7)
                    (i32.const 2)
                   )
                  )
                 )
                 (f32.const 1.0000000036274937e-15)
                )
               )
              )
             )
             (f32.const 127)
            )
           )
           (set_local $25
            (i32.or
             (tee_local $24
              (f32.lt
               (get_local $8)
               (f32.const 0)
              )
             )
             (get_local $17)
            )
           )
           (set_local $26
            (if (result f64)
             (i32.and
              (get_local $24)
              (i32.xor
               (get_local $17)
               (i32.const 1)
              )
             )
             (f64.const 0)
             (f64.const 127)
            )
           )
           (set_local $27
            (f64.promote/f32
             (get_local $8)
            )
           )
           (set_local $11
            (i32.add
             (get_local $11)
             (i32.load8_u
              (i32.add
               (i32.trunc_s/f64
                (if (result f64)
                 (get_local $25)
                 (get_local $26)
                 (get_local $27)
                )
               )
               (i32.const 1472)
              )
             )
            )
           )
           (set_local $7
            (i32.add
             (get_local $7)
             (i32.const 4)
            )
           )
           (br $while-in7)
          )
         )
        )
        (if
         (i32.gt_s
          (tee_local $7
           (i32.div_s
            (i32.shl
             (get_local $11)
             (i32.const 8)
            )
            (get_local $23)
           )
          )
          (get_local $5)
         )
         (block
          (i32.store
           (get_local $4)
           (get_local $14)
          )
          (set_local $5
           (get_local $7)
          )
         )
        )
        (set_local $14
         (i32.add
          (get_local $14)
          (i32.const 1)
         )
        )
        (br $while-in)
       )
      )
     )
     (call $_celt_fatal
      (i32.const 41646)
      (i32.const 41509)
      (i32.const 369)
     )
     (br $__rjto$3)
    )
    (call $_celt_fatal
     (i32.const 41684)
     (i32.const 41509)
     (i32.const 370)
    )
    (br $__rjto$3)
   )
   (set_local $0
    (i32.gt_s
     (get_local $5)
     (i32.const 200)
    )
   )
   (if
    (i32.and
     (i32.lt_u
      (i32.add
       (get_local $5)
       (i32.const -201)
      )
      (i32.const 399)
     )
     (i32.xor
      (get_local $18)
      (i32.const 1)
     )
    )
    (block
     (i32.store
      (get_local $6)
      (i32.const 1)
     )
     (set_local $0
      (i32.const 0)
     )
    )
   )
   (if
    (f64.lt
     (f64.add
      (f64.promote/f32
       (f32.mul
        (tee_local $9
         (block $__rjto$0 (result f32)
          (block $__rjti$0
           (br $__rjto$0
            (if (result f32)
             (f32.lt
              (tee_local $8
               (f32.add
                (f32.demote/f64
                 (f64.sqrt
                  (f64.convert_s/i32
                   (i32.mul
                    (get_local $5)
                    (i32.const 27)
                   )
                  )
                 )
                )
                (f32.const -42)
               )
              )
              (f32.const 0)
             )
             (block
              (set_local $8
               (f32.const 0)
              )
              (br $__rjti$0)
             )
             (if (result f32)
              (f32.gt
               (get_local $8)
               (f32.const 163)
              )
              (f32.const 163)
              (br $__rjti$0)
             )
            )
           )
          )
          (get_local $8)
         )
        )
        (f32.const 0.006899999920278788)
       )
      )
      (f64.const -0.139)
     )
     (f64.const 0)
    )
    (block
     (f32.store
      (get_local $3)
      (f32.const 0)
     )
     (set_global $STACKTOP
      (get_local $15)
     )
     (return
      (get_local $0)
     )
    )
   )
   (f32.store
    (get_local $3)
    (f32.demote/f64
     (f64.sqrt
      (f64.add
       (f64.promote/f32
        (f32.mul
         (if (result f32)
          (f32.gt
           (get_local $8)
           (f32.const 163)
          )
          (f32.const 163)
          (get_local $8)
         )
         (f32.const 0.006899999920278788)
        )
       )
       (f64.const -0.139)
      )
     )
    )
   )
   (set_global $STACKTOP
    (get_local $15)
   )
   (return
    (get_local $0)
   )
  )
  (i32.const 0)
 )
 (func $_compute_mdcts (; 72 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 f32)
  (set_local $12
   (i32.load offset=4
    (get_local $0)
   )
  )
  (set_local $8
   (i32.load offset=44
    (get_local $0)
   )
  )
  (set_local $13
   (if (result i32)
    (get_local $1)
    (i32.load offset=36
     (get_local $0)
    )
    (block (result i32)
     (set_local $1
      (i32.const 1)
     )
     (set_local $8
      (i32.shl
       (get_local $8)
       (get_local $6)
      )
     )
     (i32.sub
      (i32.load offset=36
       (get_local $0)
      )
      (get_local $6)
     )
    )
   )
  )
  (set_local $14
   (i32.sub
    (get_local $0)
    (i32.const -64)
   )
  )
  (set_local $15
   (i32.add
    (tee_local $11
     (i32.mul
      (get_local $1)
      (get_local $8)
     )
    )
    (get_local $12)
   )
  )
  (set_local $16
   (i32.add
    (get_local $0)
    (i32.const 60)
   )
  )
  (set_local $0
   (i32.const 0)
  )
  (loop $while-in
   (set_local $9
    (i32.add
     (get_local $2)
     (i32.shl
      (i32.mul
       (get_local $0)
       (get_local $15)
      )
      (i32.const 2)
     )
    )
   )
   (set_local $6
    (i32.mul
     (i32.mul
      (get_local $0)
      (get_local $8)
     )
     (get_local $1)
    )
   )
   (set_local $10
    (i32.const 0)
   )
   (loop $while-in1
    (if
     (i32.lt_s
      (get_local $10)
      (get_local $1)
     )
     (block
      (call $_clt_mdct_forward_c
       (get_local $14)
       (i32.add
        (get_local $9)
        (i32.shl
         (i32.mul
          (get_local $10)
          (get_local $8)
         )
         (i32.const 2)
        )
       )
       (i32.add
        (get_local $3)
        (i32.shl
         (i32.add
          (get_local $10)
          (get_local $6)
         )
         (i32.const 2)
        )
       )
       (i32.load
        (get_local $16)
       )
       (get_local $12)
       (get_local $13)
       (get_local $1)
      )
      (set_local $10
       (i32.add
        (get_local $10)
        (i32.const 1)
       )
      )
      (br $while-in1)
     )
    )
   )
   (br_if $while-in
    (i32.lt_s
     (tee_local $0
      (i32.add
       (get_local $0)
       (i32.const 1)
      )
     )
     (get_local $5)
    )
   )
  )
  (block $label$break$L12
   (if
    (i32.and
     (i32.eq
      (get_local $5)
      (i32.const 2)
     )
     (i32.eq
      (get_local $4)
      (i32.const 1)
     )
    )
    (block
     (set_local $2
      (i32.const 0)
     )
     (loop $while-in3
      (br_if $label$break$L12
       (i32.ge_s
        (get_local $2)
        (get_local $11)
       )
      )
      (f32.store
       (tee_local $0
        (i32.add
         (get_local $3)
         (i32.shl
          (get_local $2)
          (i32.const 2)
         )
        )
       )
       (f32.add
        (f32.mul
         (f32.load
          (get_local $0)
         )
         (f32.const 0.5)
        )
        (f32.mul
         (f32.load
          (i32.add
           (get_local $3)
           (i32.shl
            (i32.add
             (get_local $11)
             (get_local $2)
            )
            (i32.const 2)
           )
          )
         )
         (f32.const 0.5)
        )
       )
      )
      (set_local $2
       (i32.add
        (get_local $2)
        (i32.const 1)
       )
      )
      (br $while-in3)
     )
    )
   )
  )
  (if
   (i32.eq
    (get_local $7)
    (i32.const 1)
   )
   (return)
  )
  (set_local $17
   (f32.convert_s/i32
    (get_local $7)
   )
  )
  (set_local $5
   (i32.shl
    (i32.sub
     (get_local $11)
     (tee_local $7
      (i32.div_s
       (get_local $11)
       (get_local $7)
      )
     )
    )
    (i32.const 2)
   )
  )
  (set_local $0
   (i32.const 0)
  )
  (loop $while-in5
   (set_local $6
    (i32.mul
     (i32.mul
      (get_local $0)
      (get_local $1)
     )
     (get_local $8)
    )
   )
   (set_local $9
    (i32.const 0)
   )
   (loop $while-in7
    (if
     (i32.lt_s
      (get_local $9)
      (get_local $7)
     )
     (block
      (f32.store
       (tee_local $2
        (i32.add
         (get_local $3)
         (i32.shl
          (i32.add
           (get_local $6)
           (get_local $9)
          )
          (i32.const 2)
         )
        )
       )
       (f32.mul
        (f32.load
         (get_local $2)
        )
        (get_local $17)
       )
      )
      (set_local $9
       (i32.add
        (get_local $9)
        (i32.const 1)
       )
      )
      (br $while-in7)
     )
    )
   )
   (drop
    (call $_memset
     (i32.add
      (get_local $3)
      (i32.shl
       (i32.add
        (get_local $6)
        (get_local $7)
       )
       (i32.const 2)
      )
     )
     (i32.const 0)
     (get_local $5)
    )
   )
   (br_if $while-in5
    (i32.lt_s
     (tee_local $0
      (i32.add
       (get_local $0)
       (i32.const 1)
      )
     )
     (get_local $4)
    )
   )
  )
 )
 (func $_patch_transient_decision (; 73 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (local $5 f32)
  (local $6 i32)
  (local $7 f32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 f32)
  (set_local $8
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.const 112)
   )
  )
  (set_local $6
   (get_local $1)
  )
  (block $label$break$L1
   (if
    (i32.eq
     (get_local $4)
     (i32.const 1)
    )
    (block
     (i32.store
      (get_local $8)
      (tee_local $9
       (i32.load
        (get_local $6)
       )
      )
     )
     (set_local $6
      (i32.const 0)
     )
     (set_local $5
      (f32.reinterpret/i32
       (get_local $9)
      )
     )
     (loop $while-in
      (br_if $label$break$L1
       (i32.ge_s
        (tee_local $6
         (i32.add
          (get_local $6)
          (i32.const 1)
         )
        )
        (get_local $3)
       )
      )
      (set_local $7
       (f32.add
        (get_local $5)
        (f32.const -1)
       )
      )
      (f32.store
       (i32.add
        (get_local $8)
        (i32.shl
         (get_local $6)
         (i32.const 2)
        )
       )
       (if (result f32)
        (f32.gt
         (f32.add
          (get_local $5)
          (f32.const -1)
         )
         (tee_local $5
          (f32.load
           (i32.add
            (get_local $1)
            (i32.shl
             (get_local $6)
             (i32.const 2)
            )
           )
          )
         )
        )
        (tee_local $5
         (get_local $7)
        )
        (get_local $5)
       )
      )
      (br $while-in)
     )
    )
    (block
     (f32.store
      (get_local $8)
      (if (result f32)
       (f32.gt
        (tee_local $5
         (f32.load
          (get_local $6)
         )
        )
        (tee_local $7
         (f32.load
          (i32.add
           (get_local $1)
           (i32.shl
            (get_local $2)
            (i32.const 2)
           )
          )
         )
        )
       )
       (get_local $5)
       (tee_local $5
        (get_local $7)
       )
      )
     )
     (set_local $6
      (i32.const 0)
     )
     (loop $while-in1
      (br_if $label$break$L1
       (i32.ge_s
        (tee_local $6
         (i32.add
          (get_local $6)
          (i32.const 1)
         )
        )
        (get_local $3)
       )
      )
      (set_local $10
       (f32.gt
        (f32.add
         (get_local $5)
         (f32.const -1)
        )
        (if (result f32)
         (tee_local $9
          (f32.gt
           (tee_local $7
            (f32.load
             (i32.add
              (get_local $1)
              (i32.shl
               (get_local $6)
               (i32.const 2)
              )
             )
            )
           )
           (tee_local $11
            (f32.load
             (i32.add
              (get_local $1)
              (i32.shl
               (i32.add
                (get_local $6)
                (get_local $2)
               )
               (i32.const 2)
              )
             )
            )
           )
          )
         )
         (get_local $7)
         (get_local $11)
        )
       )
      )
      (set_local $5
       (f32.add
        (get_local $5)
        (f32.const -1)
       )
      )
      (if
       (i32.eqz
        (get_local $9)
       )
       (set_local $7
        (get_local $11)
       )
      )
      (f32.store
       (i32.add
        (get_local $8)
        (i32.shl
         (get_local $6)
         (i32.const 2)
        )
       )
       (if (result f32)
        (get_local $10)
        (get_local $5)
        (tee_local $5
         (get_local $7)
        )
       )
      )
      (br $while-in1)
     )
    )
   )
  )
  (set_local $1
   (i32.add
    (get_local $3)
    (i32.const -2)
   )
  )
  (loop $while-in3
   (if
    (i32.ge_s
     (get_local $1)
     (i32.const 0)
    )
    (block
     (set_local $5
      (f32.load
       (tee_local $6
        (i32.add
         (get_local $8)
         (i32.shl
          (get_local $1)
          (i32.const 2)
         )
        )
       )
      )
     )
     (f32.store
      (get_local $6)
      (if (result f32)
       (f32.gt
        (get_local $5)
        (tee_local $7
         (f32.add
          (f32.load
           (i32.add
            (get_local $8)
            (i32.shl
             (i32.add
              (get_local $1)
              (i32.const 1)
             )
             (i32.const 2)
            )
           )
          )
          (f32.const -1)
         )
        )
       )
       (get_local $5)
       (get_local $7)
      )
     )
     (set_local $1
      (i32.add
       (get_local $1)
       (i32.const -1)
      )
     )
     (br $while-in3)
    )
   )
  )
  (set_local $9
   (i32.add
    (get_local $3)
    (i32.const -1)
   )
  )
  (set_local $5
   (f32.const 0)
  )
  (set_local $1
   (i32.const 0)
  )
  (loop $while-in5
   (set_local $10
    (i32.mul
     (get_local $1)
     (get_local $2)
    )
   )
   (set_local $3
    (i32.const 2)
   )
   (loop $while-in7
    (if
     (i32.lt_s
      (get_local $3)
      (get_local $9)
     )
     (block
      (set_local $5
       (f32.add
        (get_local $5)
        (if (result f32)
         (f32.lt
          (tee_local $5
           (f32.sub
            (if (result f32)
             (f32.lt
              (tee_local $5
               (f32.load
                (i32.add
                 (get_local $0)
                 (i32.shl
                  (i32.add
                   (get_local $3)
                   (get_local $10)
                  )
                  (i32.const 2)
                 )
                )
               )
              )
              (f32.const 0)
             )
             (f32.const 0)
             (get_local $5)
            )
            (if (result f32)
             (f32.lt
              (tee_local $5
               (f32.load
                (i32.add
                 (get_local $8)
                 (i32.shl
                  (get_local $3)
                  (i32.const 2)
                 )
                )
               )
              )
              (f32.const 0)
             )
             (f32.const 0)
             (get_local $5)
            )
           )
          )
          (f32.const 0)
         )
         (f32.const 0)
         (get_local $5)
        )
       )
      )
      (set_local $3
       (i32.add
        (get_local $3)
        (i32.const 1)
       )
      )
      (br $while-in7)
     )
    )
   )
   (br_if $while-in5
    (i32.lt_s
     (tee_local $1
      (i32.add
       (get_local $1)
       (i32.const 1)
      )
     )
     (get_local $4)
    )
   )
  )
  (set_global $STACKTOP
   (get_local $8)
  )
  (f32.gt
   (f32.div
    (get_local $5)
    (f32.convert_s/i32
     (i32.mul
      (i32.sub
       (get_local $9)
       (i32.const 2)
      )
      (get_local $4)
     )
    )
   )
   (f32.const 1)
  )
 )
 (func $_dynalloc_analysis (; 74 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (param $8 i32) (param $9 i32) (param $10 i32) (param $11 i32) (param $12 i32) (param $13 i32) (param $14 i32) (param $15 i32) (param $16 i32) (param $17 i32) (param $18 i32) (param $19 i32) (param $20 i32) (result f32)
  (local $21 f32)
  (local $22 f32)
  (local $23 i32)
  (local $24 i32)
  (local $25 f32)
  (local $26 i32)
  (local $27 f32)
  (local $28 i32)
  (local $29 i32)
  (local $30 i32)
  (local $31 i32)
  (local $32 i32)
  (local $33 i32)
  (local $34 i32)
  (local $35 i32)
  (set_local $31
   (get_global $STACKTOP)
  )
  (set_local $24
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (tee_local $23
        (i32.mul
         (get_local $5)
         (get_local $2)
        )
       )
       (i32.const 2)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (set_local $29
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (get_local $23)
       (i32.const 2)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (drop
   (call $_memset
    (get_local $6)
    (i32.const 0)
    (i32.shl
     (get_local $2)
     (i32.const 2)
    )
   )
  )
  (set_local $25
   (f32.convert_s/i32
    (i32.sub
     (i32.const 9)
     (get_local $7)
    )
   )
  )
  (set_local $7
   (i32.const 0)
  )
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $7)
     (get_local $4)
    )
    (block
     (f32.store
      (i32.add
       (get_local $29)
       (i32.shl
        (get_local $7)
        (i32.const 2)
       )
      )
      (f32.add
       (f32.sub
        (f32.add
         (f32.add
          (f32.mul
           (f32.convert_s/i32
            (i32.load16_s
             (i32.add
              (get_local $8)
              (i32.shl
               (get_local $7)
               (i32.const 1)
              )
             )
            )
           )
           (f32.const 0.0625)
          )
          (f32.const 0.5)
         )
         (get_local $25)
        )
        (f32.load
         (i32.add
          (i32.shl
           (get_local $7)
           (i32.const 2)
          )
          (i32.const 21312)
         )
        )
       )
       (f32.mul
        (f32.convert_s/i32
         (i32.mul
          (tee_local $23
           (i32.add
            (get_local $7)
            (i32.const 5)
           )
          )
          (get_local $23)
         )
        )
        (f32.const 0.006200000178068876)
       )
      )
     )
     (set_local $7
      (i32.add
       (get_local $7)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (set_local $7
   (i32.const 0)
  )
  (set_local $25
   (f32.const -31.899999618530273)
  )
  (loop $while-in1
   (set_local $23
    (i32.mul
     (get_local $7)
     (get_local $2)
    )
   )
   (set_local $8
    (i32.const 0)
   )
   (loop $while-in3
    (if
     (i32.lt_s
      (get_local $8)
      (get_local $4)
     )
     (block
      (set_local $21
       (f32.sub
        (f32.load
         (i32.add
          (get_local $0)
          (i32.shl
           (i32.add
            (get_local $23)
            (get_local $8)
           )
           (i32.const 2)
          )
         )
        )
        (f32.load
         (i32.add
          (get_local $29)
          (i32.shl
           (get_local $8)
           (i32.const 2)
          )
         )
        )
       )
      )
      (set_local $8
       (i32.add
        (get_local $8)
        (i32.const 1)
       )
      )
      (if
       (i32.eqz
        (f32.gt
         (get_local $25)
         (get_local $21)
        )
       )
       (set_local $25
        (get_local $21)
       )
      )
      (br $while-in3)
     )
    )
   )
   (br_if $while-in1
    (i32.lt_s
     (tee_local $7
      (i32.add
       (get_local $7)
       (i32.const 1)
      )
     )
     (get_local $5)
    )
   )
  )
  (set_local $32
   (call $_llvm_stacksave)
  )
  (set_local $8
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (get_local $2)
       (i32.const 2)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (set_local $26
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (get_local $2)
       (i32.const 2)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (set_local $7
   (i32.const 0)
  )
  (loop $while-in5
   (if
    (i32.lt_s
     (get_local $7)
     (get_local $4)
    )
    (block
     (f32.store
      (i32.add
       (get_local $8)
       (i32.shl
        (get_local $7)
        (i32.const 2)
       )
      )
      (f32.sub
       (f32.load
        (i32.add
         (get_local $0)
         (i32.shl
          (get_local $7)
          (i32.const 2)
         )
        )
       )
       (f32.load
        (i32.add
         (get_local $29)
         (i32.shl
          (get_local $7)
          (i32.const 2)
         )
        )
       )
      )
     )
     (set_local $7
      (i32.add
       (get_local $7)
       (i32.const 1)
      )
     )
     (br $while-in5)
    )
   )
  )
  (block $label$break$L16
   (if
    (tee_local $35
     (i32.eq
      (get_local $5)
      (i32.const 2)
     )
    )
    (block
     (set_local $7
      (i32.const 0)
     )
     (loop $while-in7
      (br_if $label$break$L16
       (i32.ge_s
        (get_local $7)
        (get_local $4)
       )
      )
      (set_local $21
       (f32.load
        (tee_local $23
         (i32.add
          (get_local $8)
          (i32.shl
           (get_local $7)
           (i32.const 2)
          )
         )
        )
       )
      )
      (f32.store
       (get_local $23)
       (if (result f32)
        (f32.gt
         (get_local $21)
         (tee_local $22
          (f32.sub
           (f32.load
            (i32.add
             (get_local $0)
             (i32.shl
              (i32.add
               (get_local $7)
               (get_local $2)
              )
              (i32.const 2)
             )
            )
           )
           (f32.load
            (i32.add
             (get_local $29)
             (i32.shl
              (get_local $7)
              (i32.const 2)
             )
            )
           )
          )
         )
        )
        (get_local $21)
        (get_local $22)
       )
      )
      (set_local $7
       (i32.add
        (get_local $7)
        (i32.const 1)
       )
      )
      (br $while-in7)
     )
    )
   )
  )
  (drop
   (call $_memcpy
    (get_local $26)
    (get_local $8)
    (i32.shl
     (get_local $4)
     (i32.const 2)
    )
   )
  )
  (set_local $7
   (i32.const 1)
  )
  (loop $while-in9
   (if
    (i32.lt_s
     (get_local $7)
     (get_local $4)
    )
    (block
     (set_local $21
      (f32.load
       (tee_local $23
        (i32.add
         (get_local $8)
         (i32.shl
          (get_local $7)
          (i32.const 2)
         )
        )
       )
      )
     )
     (f32.store
      (get_local $23)
      (if (result f32)
       (f32.gt
        (get_local $21)
        (tee_local $22
         (f32.add
          (f32.load
           (i32.add
            (get_local $8)
            (i32.shl
             (i32.add
              (get_local $7)
              (i32.const -1)
             )
             (i32.const 2)
            )
           )
          )
          (f32.const -2)
         )
        )
       )
       (get_local $21)
       (get_local $22)
      )
     )
     (set_local $7
      (i32.add
       (get_local $7)
       (i32.const 1)
      )
     )
     (br $while-in9)
    )
   )
  )
  (set_local $7
   (tee_local $34
    (i32.add
     (get_local $4)
     (i32.const -2)
    )
   )
  )
  (loop $while-in11
   (if
    (i32.gt_s
     (get_local $7)
     (i32.const -1)
    )
    (block
     (set_local $21
      (f32.load
       (tee_local $23
        (i32.add
         (get_local $8)
         (i32.shl
          (get_local $7)
          (i32.const 2)
         )
        )
       )
      )
     )
     (f32.store
      (get_local $23)
      (if (result f32)
       (f32.gt
        (get_local $21)
        (tee_local $22
         (f32.add
          (f32.load
           (i32.add
            (get_local $8)
            (i32.shl
             (i32.add
              (get_local $7)
              (i32.const 1)
             )
             (i32.const 2)
            )
           )
          )
          (f32.const -3)
         )
        )
       )
       (get_local $21)
       (get_local $22)
      )
     )
     (set_local $7
      (i32.add
       (get_local $7)
       (i32.const -1)
      )
     )
     (br $while-in11)
    )
   )
  )
  (set_local $30
   (f32.lt
    (tee_local $22
     (f32.add
      (get_local $25)
      (f32.const -12)
     )
    )
    (f32.const 0)
   )
  )
  (set_local $23
   (i32.const 0)
  )
  (loop $while-in13
   (if
    (i32.lt_s
     (get_local $23)
     (get_local $4)
    )
    (block
     (set_local $27
      (f32.load
       (i32.add
        (get_local $26)
        (i32.shl
         (get_local $23)
         (i32.const 2)
        )
       )
      )
     )
     (set_local $21
      (f32.load
       (i32.add
        (get_local $8)
        (i32.shl
         (get_local $23)
         (i32.const 2)
        )
       )
      )
     )
     (set_local $28
      (i32.or
       (tee_local $7
        (i32.eqz
         (f32.gt
          (if (result f32)
           (get_local $30)
           (f32.const 0)
           (get_local $22)
          )
          (get_local $21)
         )
        )
       )
       (get_local $30)
      )
     )
     (if
      (i32.eqz
       (get_local $7)
      )
      (set_local $21
       (f32.const 0)
      )
     )
     (set_local $33
      (i32.lt_s
       (tee_local $28
        (i32.trunc_s/f32
         (f32.floor
          (f32.add
           (f32.sub
            (get_local $27)
            (if (result f32)
             (get_local $28)
             (get_local $21)
             (get_local $22)
            )
           )
           (f32.const 0.5)
          )
         )
        )
       )
       (i32.const -5)
      )
     )
     (set_local $7
      (i32.shr_u
       (i32.const 32)
       (i32.sub
        (i32.const 0)
        (get_local $28)
       )
      )
     )
     (if
      (i32.gt_s
       (get_local $28)
       (i32.const 0)
      )
      (set_local $7
       (i32.const 32)
      )
     )
     (i32.store
      (i32.add
       (get_local $20)
       (i32.shl
        (get_local $23)
        (i32.const 2)
       )
      )
      (if (result i32)
       (get_local $33)
       (i32.const 1)
       (get_local $7)
      )
     )
     (set_local $23
      (i32.add
       (get_local $23)
       (i32.const 1)
      )
     )
     (br $while-in13)
    )
   )
  )
  (call $_llvm_stackrestore
   (get_local $32)
  )
  (if
   (i32.eqz
    (i32.and
     (i32.and
      (i32.gt_s
       (get_local $14)
       (i32.const 50)
      )
      (i32.gt_s
       (get_local $13)
       (i32.const 0)
      )
     )
     (i32.eqz
      (get_local $16)
     )
    )
   )
   (block
    (loop $while-in15
     (if
      (i32.lt_s
       (get_local $3)
       (get_local $4)
      )
      (block
       (i32.store
        (i32.add
         (get_local $19)
         (i32.shl
          (get_local $3)
          (i32.const 2)
         )
        )
        (i32.const 13)
       )
       (set_local $3
        (i32.add
         (get_local $3)
         (i32.const 1)
        )
       )
       (br $while-in15)
      )
     )
    )
    (i32.store
     (get_local $15)
     (i32.const 0)
    )
    (set_global $STACKTOP
     (get_local $31)
    )
    (return
     (get_local $25)
    )
   )
  )
  (set_local $30
   (i32.add
    (get_local $4)
    (i32.const -1)
   )
  )
  (set_local $7
   (i32.const 0)
  )
  (set_local $16
   (i32.const 0)
  )
  (loop $while-in17
   (i32.store
    (tee_local $23
     (i32.add
      (get_local $24)
      (i32.shl
       (tee_local $26
        (i32.mul
         (get_local $16)
         (get_local $2)
        )
       )
       (i32.const 2)
      )
     )
    )
    (tee_local $20
     (i32.load
      (tee_local $28
       (i32.add
        (get_local $1)
        (i32.shl
         (get_local $26)
         (i32.const 2)
        )
       )
      )
     )
    )
   )
   (set_local $8
    (i32.const 1)
   )
   (set_local $21
    (f32.reinterpret/i32
     (get_local $20)
    )
   )
   (loop $while-in19
    (if
     (i32.lt_s
      (get_local $8)
      (get_local $4)
     )
     (block
      (if
       (f32.gt
        (tee_local $27
         (f32.load
          (i32.add
           (get_local $1)
           (i32.shl
            (tee_local $20
             (i32.add
              (get_local $26)
              (get_local $8)
             )
            )
            (i32.const 2)
           )
          )
         )
        )
        (f32.add
         (f32.load
          (i32.add
           (get_local $1)
           (i32.shl
            (i32.add
             (get_local $20)
             (i32.const -1)
            )
            (i32.const 2)
           )
          )
         )
         (f32.const 0.5)
        )
       )
       (set_local $7
        (get_local $8)
       )
      )
      (set_local $22
       (f32.add
        (get_local $21)
        (f32.const 1.5)
       )
      )
      (f32.store
       (i32.add
        (get_local $23)
        (i32.shl
         (get_local $8)
         (i32.const 2)
        )
       )
       (tee_local $21
        (if (result f32)
         (f32.lt
          (f32.add
           (get_local $21)
           (f32.const 1.5)
          )
          (get_local $27)
         )
         (get_local $22)
         (get_local $27)
        )
       )
      )
      (set_local $8
       (i32.add
        (get_local $8)
        (i32.const 1)
       )
      )
      (br $while-in19)
     )
    )
   )
   (set_local $8
    (get_local $7)
   )
   (loop $while-in21
    (set_local $20
     (i32.add
      (get_local $8)
      (i32.const -1)
     )
    )
    (if
     (i32.gt_s
      (get_local $8)
      (i32.const 0)
     )
     (block
      (set_local $33
       (f32.lt
        (tee_local $27
         (f32.load
          (tee_local $32
           (i32.add
            (get_local $23)
            (i32.shl
             (get_local $20)
             (i32.const 2)
            )
           )
          )
         )
        )
        (if (result f32)
         (tee_local $8
          (f32.lt
           (tee_local $21
            (f32.add
             (f32.load
              (i32.add
               (get_local $23)
               (i32.shl
                (get_local $8)
                (i32.const 2)
               )
              )
             )
             (f32.const 2)
            )
           )
           (tee_local $22
            (f32.load
             (i32.add
              (get_local $1)
              (i32.shl
               (i32.add
                (get_local $26)
                (get_local $20)
               )
               (i32.const 2)
              )
             )
            )
           )
          )
         )
         (get_local $21)
         (get_local $22)
        )
       )
      )
      (if
       (i32.eqz
        (get_local $8)
       )
       (set_local $21
        (get_local $22)
       )
      )
      (f32.store
       (get_local $32)
       (if (result f32)
        (get_local $33)
        (get_local $27)
        (get_local $21)
       )
      )
      (set_local $8
       (get_local $20)
      )
      (br $while-in21)
     )
    )
   )
   (set_local $8
    (i32.const 2)
   )
   (loop $while-in23
    (if
     (i32.lt_s
      (get_local $8)
      (get_local $34)
     )
     (block
      (set_local $21
       (f32.load
        (tee_local $20
         (i32.add
          (get_local $23)
          (i32.shl
           (get_local $8)
           (i32.const 2)
          )
         )
        )
       )
      )
      (set_local $22
       (f32.add
        (call $_median_of_5
         (i32.add
          (get_local $1)
          (i32.shl
           (i32.add
            (i32.add
             (get_local $26)
             (get_local $8)
            )
            (i32.const -2)
           )
           (i32.const 2)
          )
         )
        )
        (f32.const -1)
       )
      )
      (f32.store
       (get_local $20)
       (if (result f32)
        (f32.gt
         (get_local $21)
         (get_local $22)
        )
        (get_local $21)
        (get_local $22)
       )
      )
      (set_local $8
       (i32.add
        (get_local $8)
        (i32.const 1)
       )
      )
      (br $while-in23)
     )
    )
   )
   (set_local $21
    (f32.add
     (call $_median_of_3
      (get_local $28)
     )
     (f32.const -1)
    )
   )
   (f32.store
    (get_local $23)
    (if (result f32)
     (f32.gt
      (tee_local $22
       (f32.load
        (get_local $23)
       )
      )
      (get_local $21)
     )
     (get_local $22)
     (get_local $21)
    )
   )
   (set_local $22
    (f32.load
     (tee_local $8
      (i32.add
       (get_local $23)
       (i32.const 4)
      )
     )
    )
   )
   (f32.store
    (get_local $8)
    (if (result f32)
     (f32.gt
      (get_local $22)
      (get_local $21)
     )
     (get_local $22)
     (get_local $21)
    )
   )
   (set_local $21
    (f32.add
     (call $_median_of_3
      (i32.add
       (get_local $1)
       (i32.shl
        (i32.add
         (i32.add
          (get_local $26)
          (get_local $4)
         )
         (i32.const -3)
        )
        (i32.const 2)
       )
      )
     )
     (f32.const -1)
    )
   )
   (set_local $22
    (f32.load
     (tee_local $8
      (i32.add
       (get_local $23)
       (i32.shl
        (get_local $34)
        (i32.const 2)
       )
      )
     )
    )
   )
   (f32.store
    (get_local $8)
    (if (result f32)
     (f32.gt
      (get_local $22)
      (get_local $21)
     )
     (get_local $22)
     (get_local $21)
    )
   )
   (set_local $22
    (f32.load
     (tee_local $8
      (i32.add
       (get_local $23)
       (i32.shl
        (get_local $30)
        (i32.const 2)
       )
      )
     )
    )
   )
   (f32.store
    (get_local $8)
    (if (result f32)
     (f32.gt
      (get_local $22)
      (get_local $21)
     )
     (get_local $22)
     (get_local $21)
    )
   )
   (set_local $8
    (i32.const 0)
   )
   (loop $while-in25
    (if
     (i32.lt_s
      (get_local $8)
      (get_local $4)
     )
     (block
      (set_local $21
       (f32.load
        (tee_local $20
         (i32.add
          (get_local $23)
          (i32.shl
           (get_local $8)
           (i32.const 2)
          )
         )
        )
       )
      )
      (f32.store
       (get_local $20)
       (if (result f32)
        (f32.gt
         (get_local $21)
         (tee_local $22
          (f32.load
           (i32.add
            (get_local $29)
            (i32.shl
             (get_local $8)
             (i32.const 2)
            )
           )
          )
         )
        )
        (get_local $21)
        (get_local $22)
       )
      )
      (set_local $8
       (i32.add
        (get_local $8)
        (i32.const 1)
       )
      )
      (br $while-in25)
     )
    )
   )
   (br_if $while-in17
    (i32.lt_s
     (tee_local $16
      (i32.add
       (get_local $16)
       (i32.const 1)
      )
     )
     (get_local $5)
    )
   )
  )
  (block $label$break$L60
   (if
    (get_local $35)
    (block
     (set_local $1
      (get_local $3)
     )
     (loop $while-in28
      (br_if $label$break$L60
       (i32.ge_s
        (get_local $1)
        (get_local $4)
       )
      )
      (if
       (i32.eqz
        (f32.gt
         (tee_local $21
          (f32.load
           (tee_local $8
            (i32.add
             (get_local $24)
             (i32.shl
              (tee_local $16
               (i32.add
                (get_local $1)
                (get_local $2)
               )
              )
              (i32.const 2)
             )
            )
           )
          )
         )
         (tee_local $22
          (f32.add
           (f32.load
            (tee_local $7
             (i32.add
              (get_local $24)
              (i32.shl
               (get_local $1)
               (i32.const 2)
              )
             )
            )
           )
           (f32.const -4)
          )
         )
        )
       )
       (set_local $21
        (get_local $22)
       )
      )
      (f32.store
       (get_local $8)
       (get_local $21)
      )
      (f32.store
       (get_local $7)
       (if (result f32)
        (f32.gt
         (tee_local $22
          (f32.load
           (get_local $7)
          )
         )
         (tee_local $21
          (f32.add
           (get_local $21)
           (f32.const -4)
          )
         )
        )
        (get_local $22)
        (tee_local $22
         (get_local $21)
        )
       )
      )
      (f32.store
       (get_local $7)
       (f32.mul
        (f32.add
         (if (result f32)
          (f32.lt
           (tee_local $21
            (f32.sub
             (f32.load
              (i32.add
               (get_local $0)
               (i32.shl
                (get_local $1)
                (i32.const 2)
               )
              )
             )
             (get_local $22)
            )
           )
           (f32.const 0)
          )
          (f32.const 0)
          (get_local $21)
         )
         (if (result f32)
          (f32.lt
           (tee_local $21
            (f32.sub
             (f32.load
              (i32.add
               (get_local $0)
               (i32.shl
                (get_local $16)
                (i32.const 2)
               )
              )
             )
             (f32.load
              (get_local $8)
             )
            )
           )
           (f32.const 0)
          )
          (f32.const 0)
          (get_local $21)
         )
        )
        (f32.const 0.5)
       )
      )
      (set_local $1
       (i32.add
        (get_local $1)
        (i32.const 1)
       )
      )
      (br $while-in28)
     )
    )
    (block
     (set_local $1
      (get_local $3)
     )
     (loop $while-in30
      (br_if $label$break$L60
       (i32.ge_s
        (get_local $1)
        (get_local $4)
       )
      )
      (set_local $21
       (f32.sub
        (f32.load
         (i32.add
          (get_local $0)
          (i32.shl
           (get_local $1)
           (i32.const 2)
          )
         )
        )
        (f32.load
         (tee_local $2
          (i32.add
           (get_local $24)
           (i32.shl
            (get_local $1)
            (i32.const 2)
           )
          )
         )
        )
       )
      )
      (f32.store
       (get_local $2)
       (if (result f32)
        (f32.lt
         (get_local $21)
         (f32.const 0)
        )
        (f32.const 0)
        (get_local $21)
       )
      )
      (set_local $1
       (i32.add
        (get_local $1)
        (i32.const 1)
       )
      )
      (br $while-in30)
     )
    )
   )
  )
  (set_local $0
   (get_local $3)
  )
  (loop $while-in32
   (if
    (i32.lt_s
     (get_local $0)
     (get_local $4)
    )
    (block
     (set_local $21
      (f32.load
       (tee_local $1
        (i32.add
         (get_local $24)
         (i32.shl
          (get_local $0)
          (i32.const 2)
         )
        )
       )
      )
     )
     (f32.store
      (get_local $1)
      (if (result f32)
       (f32.gt
        (get_local $21)
        (tee_local $22
         (f32.load
          (i32.add
           (get_local $17)
           (i32.shl
            (get_local $0)
            (i32.const 2)
           )
          )
         )
        )
       )
       (get_local $21)
       (get_local $22)
      )
     )
     (set_local $0
      (i32.add
       (get_local $0)
       (i32.const 1)
      )
     )
     (br $while-in32)
    )
   )
  )
  (set_local $0
   (get_local $3)
  )
  (loop $while-in34
   (if
    (i32.lt_s
     (get_local $0)
     (get_local $4)
    )
    (block
     (set_local $1
      (i32.trunc_s/f32
       (f32.floor
        (f32.add
         (f32.mul
          (f32.demote/f64
           (call $Math_exp
            (f64.mul
             (f64.promote/f32
              (if (result f32)
               (f32.lt
                (tee_local $21
                 (f32.load
                  (i32.add
                   (get_local $24)
                   (i32.shl
                    (get_local $0)
                    (i32.const 2)
                   )
                  )
                 )
                )
                (f32.const 4)
               )
               (get_local $21)
               (f32.const 4)
              )
             )
             (f64.const 0.6931471805599453)
            )
           )
          )
          (f32.const 13)
         )
         (f32.const 0.5)
        )
       )
      )
     )
     (i32.store
      (i32.add
       (get_local $19)
       (i32.shl
        (get_local $0)
        (i32.const 2)
       )
      )
      (get_local $1)
     )
     (set_local $0
      (i32.add
       (get_local $0)
       (i32.const 1)
      )
     )
     (br $while-in34)
    )
   )
  )
  (block $label$break$L78
   (if
    (i32.and
     (i32.or
      (tee_local $10
       (i32.eqz
        (get_local $10)
       )
      )
      (i32.ne
       (get_local $11)
       (i32.const 0)
      )
     )
     (i32.eqz
      (get_local $9)
     )
    )
    (block
     (set_local $0
      (get_local $3)
     )
     (loop $while-in37
      (br_if $label$break$L78
       (i32.ge_s
        (get_local $0)
        (get_local $4)
       )
      )
      (f32.store
       (tee_local $1
        (i32.add
         (get_local $24)
         (i32.shl
          (get_local $0)
          (i32.const 2)
         )
        )
       )
       (f32.mul
        (f32.load
         (get_local $1)
        )
        (f32.const 0.5)
       )
      )
      (set_local $0
       (i32.add
        (get_local $0)
        (i32.const 1)
       )
      )
      (br $while-in37)
     )
    )
   )
  )
  (set_local $0
   (get_local $3)
  )
  (loop $while-in39
   (if
    (i32.lt_s
     (get_local $0)
     (get_local $4)
    )
    (block
     (if
      (i32.lt_s
       (get_local $0)
       (i32.const 8)
      )
      (f32.store
       (tee_local $1
        (i32.add
         (get_local $24)
         (i32.shl
          (get_local $0)
          (i32.const 2)
         )
        )
       )
       (f32.mul
        (f32.load
         (get_local $1)
        )
        (f32.const 2)
       )
      )
      (if
       (i32.gt_s
        (get_local $0)
        (i32.const 11)
       )
       (f32.store
        (tee_local $1
         (i32.add
          (get_local $24)
          (i32.shl
           (get_local $0)
           (i32.const 2)
          )
         )
        )
        (f32.mul
         (f32.load
          (get_local $1)
         )
         (f32.const 0.5)
        )
       )
      )
     )
     (set_local $0
      (i32.add
       (get_local $0)
       (i32.const 1)
      )
     )
     (br $while-in39)
    )
   )
  )
  (block $label$break$L93
   (if
    (i32.load
     (get_local $18)
    )
    (block
     (set_local $0
      (get_local $3)
     )
     (loop $while-in42
      (br_if $label$break$L93
       (i32.ge_s
        (get_local $0)
        (if (result i32)
         (i32.lt_s
          (get_local $4)
          (i32.const 19)
         )
         (get_local $4)
         (i32.const 19)
        )
       )
      )
      (f32.store
       (tee_local $1
        (i32.add
         (get_local $24)
         (i32.shl
          (get_local $0)
          (i32.const 2)
         )
        )
       )
       (f32.add
        (f32.load
         (get_local $1)
        )
        (f32.mul
         (f32.convert_s/i32
          (i32.load8_u
           (i32.add
            (i32.add
             (get_local $18)
             (i32.const 44)
            )
            (get_local $0)
           )
          )
         )
         (f32.const 0.015625)
        )
       )
      )
      (set_local $0
       (i32.add
        (get_local $0)
        (i32.const 1)
       )
      )
      (br $while-in42)
     )
    )
   )
  )
  (set_local $8
   (i32.div_s
    (i32.shl
     (get_local $14)
     (i32.const 1)
    )
    (i32.const 3)
   )
  )
  (set_local $11
   (i32.eqz
    (get_local $11)
   )
  )
  (set_local $9
   (i32.ne
    (get_local $9)
    (i32.const 0)
   )
  )
  (set_local $2
   (i32.const 0)
  )
  (block $__rjto$0
   (block $__rjti$0
    (loop $while-in44
     (block $while-out43
      (if
       (i32.ge_s
        (get_local $3)
        (get_local $4)
       )
       (block
        (set_local $0
         (get_local $2)
        )
        (br $__rjti$0)
       )
      )
      (if
       (i32.eqz
        (f32.lt
         (tee_local $21
          (f32.load
           (tee_local $0
            (i32.add
             (get_local $24)
             (i32.shl
              (get_local $3)
              (i32.const 2)
             )
            )
           )
          )
         )
         (f32.const 4)
        )
       )
       (set_local $21
        (f32.const 4)
       )
      )
      (f32.store
       (get_local $0)
       (get_local $21)
      )
      (set_local $7
       (if (result i32)
        (i32.lt_s
         (tee_local $0
          (i32.shl
           (i32.mul
            (i32.sub
             (i32.load16_s
              (i32.add
               (get_local $12)
               (i32.shl
                (tee_local $1
                 (i32.add
                  (get_local $3)
                  (i32.const 1)
                 )
                )
                (i32.const 1)
               )
              )
             )
             (i32.load16_s
              (i32.add
               (get_local $12)
               (i32.shl
                (get_local $3)
                (i32.const 1)
               )
              )
             )
            )
            (get_local $5)
           )
           (get_local $13)
          )
         )
         (i32.const 6)
        )
        (i32.shl
         (i32.mul
          (get_local $0)
          (tee_local $0
           (i32.trunc_s/f32
            (get_local $21)
           )
          )
         )
         (i32.const 3)
        )
        (if (result i32)
         (i32.gt_s
          (get_local $0)
          (i32.const 48)
         )
         (i32.div_s
          (i32.shl
           (i32.mul
            (get_local $0)
            (tee_local $0
             (i32.trunc_s/f32
              (f32.mul
               (get_local $21)
               (f32.const 8)
              )
             )
            )
           )
           (i32.const 3)
          )
          (i32.const 8)
         )
         (i32.mul
          (tee_local $0
           (i32.trunc_s/f32
            (f32.div
             (f32.mul
              (get_local $21)
              (f32.convert_s/i32
               (get_local $0)
              )
             )
             (f32.const 6)
            )
           )
          )
          (i32.const 48)
         )
        )
       )
      )
      (if
       (i32.eqz
        (i32.and
         (i32.or
          (get_local $11)
          (get_local $9)
         )
         (i32.xor
          (get_local $10)
          (i32.const 1)
         )
        )
       )
       (br_if $while-out43
        (i32.gt_s
         (i32.shr_s
          (i32.add
           (get_local $2)
           (get_local $7)
          )
          (i32.const 6)
         )
         (get_local $8)
        )
       )
      )
      (i32.store
       (i32.add
        (get_local $6)
        (i32.shl
         (get_local $3)
         (i32.const 2)
        )
       )
       (get_local $0)
      )
      (set_local $2
       (i32.add
        (get_local $2)
        (get_local $7)
       )
      )
      (set_local $3
       (get_local $1)
      )
      (br $while-in44)
     )
    )
    (br $__rjto$0)
   )
   (i32.store
    (get_local $15)
    (get_local $0)
   )
   (set_global $STACKTOP
    (get_local $31)
   )
   (return
    (get_local $25)
   )
  )
  (i32.store
   (i32.add
    (get_local $6)
    (i32.shl
     (get_local $3)
     (i32.const 2)
    )
   )
   (i32.sub
    (tee_local $0
     (i32.shl
      (get_local $8)
      (i32.const 6)
     )
    )
    (get_local $2)
   )
  )
  (i32.store
   (get_local $15)
   (get_local $0)
  )
  (set_global $STACKTOP
   (get_local $31)
  )
  (get_local $25)
 )
 (func $_tf_analysis (; 75 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (param $8 f32) (param $9 i32) (param $10 i32) (result i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 f32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 f32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local $26 i32)
  (local $27 i32)
  (local $28 i32)
  (local $29 i32)
  (local $30 i32)
  (set_local $20
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.const 16)
   )
  )
  (set_local $16
   (f32.mul
    (tee_local $8
     (f32.sub
      (f32.const 0.5)
      (get_local $8)
     )
    )
    (f32.const 0.03999999910593033)
   )
  )
  (if
   (f32.lt
    (get_local $8)
    (f32.const -0.25)
   )
   (set_local $16
    (f32.const -0.009999999776482582)
   )
  )
  (set_local $17
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (get_local $1)
       (i32.const 2)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (set_local $13
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (tee_local $0
        (i32.shl
         (i32.sub
          (i32.load16_s
           (i32.add
            (tee_local $0
             (i32.load
              (tee_local $24
               (i32.add
                (get_local $0)
                (i32.const 32)
               )
              )
             )
            )
            (i32.shl
             (get_local $1)
             (i32.const 1)
            )
           )
          )
          (i32.load16_s
           (i32.add
            (get_local $0)
            (i32.shl
             (tee_local $25
              (i32.add
               (get_local $1)
               (i32.const -1)
              )
             )
             (i32.const 1)
            )
           )
          )
         )
         (get_local $7)
        )
       )
       (i32.const 2)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (set_local $18
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (get_local $0)
       (i32.const 2)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (set_local $22
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (get_local $1)
       (i32.const 2)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (set_local $23
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (get_local $1)
       (i32.const 2)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (set_local $26
   (i32.mul
    (get_local $9)
    (get_local $6)
   )
  )
  (set_local $12
   (i32.eqz
    (get_local $2)
   )
  )
  (set_local $27
   (i32.shl
    (i32.const 1)
    (get_local $7)
   )
  )
  (set_local $28
   (i32.add
    (get_local $7)
    (i32.const 1)
   )
  )
  (set_local $29
   (i32.mul
    (get_local $7)
    (i32.const -2)
   )
  )
  (set_local $9
   (i32.const 0)
  )
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $9)
     (get_local $1)
    )
    (block
     (set_local $0
      (i32.load16_s
       (i32.add
        (tee_local $6
         (i32.load
          (get_local $24)
         )
        )
        (i32.shl
         (get_local $9)
         (i32.const 1)
        )
       )
      )
     )
     (set_local $11
      (i32.shl
       (tee_local $6
        (i32.sub
         (i32.load16_s
          (i32.add
           (get_local $6)
           (i32.shl
            (tee_local $15
             (i32.add
              (get_local $9)
              (i32.const 1)
             )
            )
            (i32.const 1)
           )
          )
         )
         (get_local $0)
        )
       )
       (get_local $7)
      )
     )
     (set_local $19
      (i32.eq
       (get_local $6)
       (i32.const 1)
      )
     )
     (drop
      (call $_memcpy
       (get_local $13)
       (i32.add
        (get_local $5)
        (i32.shl
         (i32.add
          (get_local $26)
          (i32.shl
           (get_local $0)
           (get_local $7)
          )
         )
         (i32.const 2)
        )
       )
       (tee_local $0
        (i32.shl
         (get_local $11)
         (i32.const 2)
        )
       )
      )
     )
     (set_local $6
      (if (result i32)
       (get_local $12)
       (block (result i32)
        (set_local $8
         (call $_l1_metric
          (get_local $13)
          (get_local $11)
          (i32.const 0)
          (get_local $16)
         )
        )
        (i32.const 0)
       )
       (block (result i32)
        (set_local $8
         (call $_l1_metric
          (get_local $13)
          (get_local $11)
          (get_local $7)
          (get_local $16)
         )
        )
        (if (result i32)
         (get_local $19)
         (i32.const 0)
         (block (result i32)
          (drop
           (call $_memcpy
            (get_local $18)
            (get_local $13)
            (get_local $0)
           )
          )
          (call $_haar1
           (get_local $18)
           (i32.shr_s
            (get_local $11)
            (get_local $7)
           )
           (get_local $27)
          )
          (if (result i32)
           (f32.lt
            (tee_local $21
             (call $_l1_metric
              (get_local $18)
              (get_local $11)
              (get_local $28)
              (get_local $16)
             )
            )
            (get_local $8)
           )
           (block (result i32)
            (set_local $8
             (get_local $21)
            )
            (i32.const -1)
           )
           (i32.const 0)
          )
         )
        )
       )
      )
     )
     (set_local $0
      (i32.const 0)
     )
     (loop $while-in1
      (if
       (i32.lt_s
        (get_local $0)
        (i32.add
         (i32.and
          (i32.and
           (get_local $12)
           (i32.xor
            (get_local $19)
            (i32.const 1)
           )
          )
          (i32.const 1)
         )
         (get_local $7)
        )
       )
       (block
        (set_local $30
         (i32.add
          (i32.sub
           (get_local $7)
           (get_local $0)
          )
          (i32.const -1)
         )
        )
        (set_local $14
         (i32.add
          (get_local $0)
          (i32.const 1)
         )
        )
        (if
         (i32.eqz
          (get_local $12)
         )
         (set_local $14
          (get_local $30)
         )
        )
        (call $_haar1
         (get_local $13)
         (i32.shr_s
          (get_local $11)
          (get_local $0)
         )
         (i32.shl
          (i32.const 1)
          (get_local $0)
         )
        )
        (set_local $14
         (f32.lt
          (tee_local $21
           (call $_l1_metric
            (get_local $13)
            (get_local $11)
            (get_local $14)
            (get_local $16)
           )
          )
          (get_local $8)
         )
        )
        (set_local $0
         (i32.add
          (get_local $0)
          (i32.const 1)
         )
        )
        (if
         (get_local $14)
         (set_local $8
          (get_local $21)
         )
        )
        (if
         (get_local $14)
         (set_local $6
          (get_local $0)
         )
        )
        (br $while-in1)
       )
      )
     )
     (set_local $0
      (i32.mul
       (get_local $6)
       (i32.const -2)
      )
     )
     (set_local $6
      (i32.shl
       (get_local $6)
       (i32.const 1)
      )
     )
     (i32.store
      (tee_local $9
       (i32.add
        (get_local $17)
        (i32.shl
         (get_local $9)
         (i32.const 2)
        )
       )
      )
      (if (result i32)
       (get_local $12)
       (get_local $0)
       (tee_local $0
        (get_local $6)
       )
      )
     )
     (if
      (get_local $19)
      (if
       (i32.or
        (i32.eqz
         (get_local $0)
        )
        (i32.eq
         (get_local $0)
         (get_local $29)
        )
       )
       (i32.store
        (get_local $9)
        (i32.add
         (get_local $0)
         (i32.const -1)
        )
       )
      )
     )
     (set_local $9
      (get_local $15)
     )
     (br $while-in)
    )
   )
  )
  (set_local $14
   (i32.shl
    (get_local $2)
    (i32.const 2)
   )
  )
  (set_local $6
   (i32.const 0)
  )
  (loop $while-in3
   (if
    (i32.ne
     (get_local $6)
     (i32.const 2)
    )
    (block
     (set_local $9
      (i32.sub
       (i32.const 0)
       (tee_local $0
        (i32.sub
         (tee_local $2
          (i32.load
           (get_local $17)
          )
         )
         (tee_local $13
          (i32.shl
           (i32.load8_s
            (i32.add
             (i32.add
              (i32.shl
               (get_local $7)
               (i32.const 3)
              )
              (i32.const 1200)
             )
             (tee_local $5
              (i32.add
               (get_local $14)
               (i32.shl
                (get_local $6)
                (i32.const 1)
               )
              )
             )
            )
           )
           (i32.const 1)
          )
         )
        )
       )
      )
     )
     (set_local $15
      (i32.sub
       (i32.const 0)
       (tee_local $5
        (i32.sub
         (get_local $2)
         (tee_local $18
          (i32.shl
           (i32.load8_s
            (i32.add
             (i32.add
              (i32.shl
               (get_local $7)
               (i32.const 3)
              )
              (i32.const 1200)
             )
             (i32.or
              (get_local $5)
              (i32.const 1)
             )
            )
           )
           (i32.const 1)
          )
         )
        )
       )
      )
     )
     (set_local $2
      (i32.mul
       (tee_local $11
        (i32.load
         (get_local $10)
        )
       )
       (if (result i32)
        (i32.gt_s
         (get_local $0)
         (i32.const -1)
        )
        (get_local $0)
        (get_local $9)
       )
      )
     )
     (set_local $0
      (i32.add
       (i32.mul
        (get_local $11)
        (if (result i32)
         (i32.gt_s
          (get_local $5)
          (i32.const -1)
         )
         (get_local $5)
         (get_local $15)
        )
       )
       (if (result i32)
        (get_local $12)
        (get_local $4)
        (i32.const 0)
       )
      )
     )
     (set_local $9
      (i32.const 1)
     )
     (loop $while-in5
      (if
       (i32.lt_s
        (get_local $9)
        (get_local $1)
       )
       (block
        (if
         (i32.lt_s
          (get_local $2)
          (tee_local $5
           (i32.add
            (get_local $0)
            (get_local $4)
           )
          )
         )
         (set_local $5
          (get_local $2)
         )
        )
        (set_local $15
         (i32.sub
          (tee_local $11
           (i32.load
            (i32.add
             (get_local $17)
             (i32.shl
              (get_local $9)
              (i32.const 2)
             )
            )
           )
          )
          (get_local $13)
         )
        )
        (set_local $19
         (i32.sub
          (i32.const 0)
          (tee_local $11
           (i32.sub
            (get_local $11)
            (get_local $18)
           )
          )
         )
        )
        (set_local $0
         (i32.add
          (if (result i32)
           (i32.lt_s
            (tee_local $2
             (i32.add
              (get_local $2)
              (get_local $4)
             )
            )
            (get_local $0)
           )
           (get_local $2)
           (get_local $0)
          )
          (i32.mul
           (tee_local $2
            (i32.load
             (i32.add
              (get_local $10)
              (i32.shl
               (get_local $9)
               (i32.const 2)
              )
             )
            )
           )
           (if (result i32)
            (i32.gt_s
             (get_local $11)
             (i32.const -1)
            )
            (get_local $11)
            (get_local $19)
           )
          )
         )
        )
        (set_local $11
         (i32.sub
          (i32.const 0)
          (get_local $15)
         )
        )
        (set_local $2
         (i32.add
          (get_local $5)
          (i32.mul
           (get_local $2)
           (if (result i32)
            (i32.gt_s
             (get_local $15)
             (i32.const -1)
            )
            (get_local $15)
            (get_local $11)
           )
          )
         )
        )
        (set_local $9
         (i32.add
          (get_local $9)
          (i32.const 1)
         )
        )
        (br $while-in5)
       )
      )
     )
     (i32.store
      (i32.add
       (get_local $20)
       (i32.shl
        (get_local $6)
        (i32.const 2)
       )
      )
      (if (result i32)
       (i32.lt_s
        (get_local $2)
        (get_local $0)
       )
       (get_local $2)
       (get_local $0)
      )
     )
     (set_local $6
      (i32.add
       (get_local $6)
       (i32.const 1)
      )
     )
     (br $while-in3)
    )
   )
  )
  (set_local $6
   (i32.sub
    (i32.const 0)
    (tee_local $0
     (i32.sub
      (tee_local $2
       (i32.load
        (get_local $17)
       )
      )
      (tee_local $15
       (i32.shl
        (i32.load8_s
         (i32.add
          (i32.add
           (i32.shl
            (get_local $7)
            (i32.const 3)
           )
           (i32.const 1200)
          )
          (tee_local $5
           (i32.or
            (get_local $14)
            (i32.shl
             (tee_local $9
              (i32.and
               (i32.lt_s
                (i32.load offset=4
                 (get_local $20)
                )
                (i32.load
                 (get_local $20)
                )
               )
               (i32.xor
                (get_local $12)
                (i32.const 1)
               )
              )
             )
             (i32.const 1)
            )
           )
          )
         )
        )
        (i32.const 1)
       )
      )
     )
    )
   )
  )
  (set_local $7
   (i32.sub
    (i32.const 0)
    (tee_local $5
     (i32.sub
      (get_local $2)
      (tee_local $14
       (i32.shl
        (i32.load8_s
         (i32.add
          (i32.add
           (i32.shl
            (get_local $7)
            (i32.const 3)
           )
           (i32.const 1200)
          )
          (i32.or
           (get_local $5)
           (i32.const 1)
          )
         )
        )
        (i32.const 1)
       )
      )
     )
    )
   )
  )
  (set_local $2
   (i32.mul
    (tee_local $11
     (i32.load
      (get_local $10)
     )
    )
    (if (result i32)
     (i32.gt_s
      (get_local $0)
      (i32.const -1)
     )
     (get_local $0)
     (get_local $6)
    )
   )
  )
  (set_local $0
   (i32.add
    (i32.mul
     (get_local $11)
     (if (result i32)
      (i32.gt_s
       (get_local $5)
       (i32.const -1)
      )
      (get_local $5)
      (get_local $7)
     )
    )
    (if (result i32)
     (get_local $12)
     (get_local $4)
     (i32.const 0)
    )
   )
  )
  (set_local $6
   (i32.const 1)
  )
  (loop $while-in7
   (if
    (i32.lt_s
     (get_local $6)
     (get_local $1)
    )
    (block
     (set_local $12
      (i32.xor
       (tee_local $7
        (i32.lt_s
         (get_local $2)
         (tee_local $5
          (i32.add
           (get_local $0)
           (get_local $4)
          )
         )
        )
       )
       (i32.const 1)
      )
     )
     (if
      (get_local $7)
      (set_local $5
       (get_local $2)
      )
     )
     (i32.store
      (i32.add
       (get_local $22)
       (i32.shl
        (get_local $6)
        (i32.const 2)
       )
      )
      (get_local $12)
     )
     (i32.store
      (i32.add
       (get_local $23)
       (i32.shl
        (get_local $6)
        (i32.const 2)
       )
      )
      (i32.xor
       (tee_local $11
        (i32.lt_s
         (tee_local $12
          (i32.add
           (get_local $2)
           (get_local $4)
          )
         )
         (get_local $0)
        )
       )
       (i32.const 1)
      )
     )
     (set_local $2
      (i32.sub
       (tee_local $7
        (i32.load
         (i32.add
          (get_local $17)
          (i32.shl
           (get_local $6)
           (i32.const 2)
          )
         )
        )
       )
       (get_local $15)
      )
     )
     (set_local $13
      (i32.sub
       (i32.const 0)
       (tee_local $7
        (i32.sub
         (get_local $7)
         (get_local $14)
        )
       )
      )
     )
     (set_local $0
      (i32.add
       (if (result i32)
        (get_local $11)
        (get_local $12)
        (get_local $0)
       )
       (i32.mul
        (tee_local $12
         (i32.load
          (i32.add
           (get_local $10)
           (i32.shl
            (get_local $6)
            (i32.const 2)
           )
          )
         )
        )
        (if (result i32)
         (i32.gt_s
          (get_local $7)
          (i32.const -1)
         )
         (get_local $7)
         (get_local $13)
        )
       )
      )
     )
     (set_local $7
      (i32.sub
       (i32.const 0)
       (get_local $2)
      )
     )
     (set_local $2
      (i32.add
       (get_local $5)
       (i32.mul
        (get_local $12)
        (if (result i32)
         (i32.gt_s
          (get_local $2)
          (i32.const -1)
         )
         (get_local $2)
         (get_local $7)
        )
       )
      )
     )
     (set_local $6
      (i32.add
       (get_local $6)
       (i32.const 1)
      )
     )
     (br $while-in7)
    )
   )
  )
  (i32.store
   (i32.add
    (get_local $3)
    (i32.shl
     (get_local $25)
     (i32.const 2)
    )
   )
   (tee_local $0
    (i32.ge_s
     (get_local $2)
     (get_local $0)
    )
   )
  )
  (set_local $1
   (i32.add
    (get_local $1)
    (i32.const -2)
   )
  )
  (loop $while-in9
   (if
    (i32.gt_s
     (get_local $1)
     (i32.const -1)
    )
    (block
     (set_local $2
      (i32.add
       (get_local $1)
       (i32.const 1)
      )
     )
     (i32.store
      (i32.add
       (get_local $3)
       (i32.shl
        (get_local $1)
        (i32.const 2)
       )
      )
      (tee_local $0
       (i32.load
        (i32.add
         (if (result i32)
          (i32.eq
           (get_local $0)
           (i32.const 1)
          )
          (get_local $23)
          (get_local $22)
         )
         (i32.shl
          (get_local $2)
          (i32.const 2)
         )
        )
       )
      )
     )
     (set_local $1
      (i32.add
       (get_local $1)
       (i32.const -1)
      )
     )
     (br $while-in9)
    )
   )
  )
  (set_global $STACKTOP
   (get_local $20)
  )
  (get_local $9)
 )
 (func $_tf_encode (; 76 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (set_local $7
   (i32.shl
    (i32.load offset=4
     (get_local $6)
    )
    (i32.const 3)
   )
  )
  (set_local $11
   (call $_ec_tell
    (i32.load
     (tee_local $13
      (i32.add
       (get_local $6)
       (i32.const 20)
      )
     )
    )
    (i32.load
     (tee_local $14
      (i32.add
       (get_local $6)
       (i32.const 28)
      )
     )
    )
   )
  )
  (set_local $9
   (if (result i32)
    (tee_local $8
     (i32.eqz
      (get_local $2)
     )
    )
    (i32.const 4)
    (i32.const 2)
   )
  )
  (set_local $16
   (i32.sub
    (get_local $7)
    (tee_local $15
     (if (result i32)
      (i32.gt_s
       (get_local $4)
       (i32.const 0)
      )
      (i32.le_u
       (i32.add
        (i32.add
         (get_local $11)
         (get_local $9)
        )
        (i32.const 1)
       )
       (get_local $7)
      )
      (i32.const 0)
     )
    )
   )
  )
  (set_local $17
   (if (result i32)
    (get_local $8)
    (i32.const 5)
    (i32.const 4)
   )
  )
  (set_local $8
   (i32.const 0)
  )
  (set_local $10
   (get_local $0)
  )
  (set_local $7
   (i32.const 0)
  )
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $10)
     (get_local $1)
    )
    (block
     (set_local $12
      (i32.add
       (get_local $3)
       (i32.shl
        (get_local $10)
        (i32.const 2)
       )
      )
     )
     (if
      (i32.gt_u
       (i32.add
        (get_local $11)
        (get_local $9)
       )
       (get_local $16)
      )
      (i32.store
       (get_local $12)
       (get_local $7)
      )
      (block
       (call $_ec_enc_bit_logp
        (get_local $6)
        (i32.xor
         (i32.load
          (get_local $12)
         )
         (get_local $7)
        )
        (get_local $9)
       )
       (set_local $11
        (call $_ec_tell
         (i32.load
          (get_local $13)
         )
         (i32.load
          (get_local $14)
         )
        )
       )
       (set_local $8
        (i32.or
         (get_local $8)
         (tee_local $7
          (i32.load
           (get_local $12)
          )
         )
        )
       )
      )
     )
     (set_local $9
      (get_local $17)
     )
     (set_local $10
      (i32.add
       (get_local $10)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (set_local $2
   (i32.shl
    (get_local $2)
    (i32.const 2)
   )
  )
  (set_local $5
   (if (result i32)
    (get_local $15)
    (if (result i32)
     (i32.eq
      (i32.load8_s
       (i32.add
        (i32.add
         (i32.shl
          (get_local $4)
          (i32.const 3)
         )
         (i32.const 1200)
        )
        (i32.add
         (get_local $2)
         (get_local $8)
        )
       )
      )
      (i32.load8_s
       (i32.add
        (i32.add
         (i32.shl
          (get_local $4)
          (i32.const 3)
         )
         (i32.const 1200)
        )
        (i32.add
         (i32.or
          (get_local $2)
          (i32.const 2)
         )
         (get_local $8)
        )
       )
      )
     )
     (i32.const 0)
     (block (result i32)
      (call $_ec_enc_bit_logp
       (get_local $6)
       (get_local $5)
       (i32.const 1)
      )
      (i32.shl
       (get_local $5)
       (i32.const 1)
      )
     )
    )
    (i32.const 0)
   )
  )
  (set_local $2
   (i32.add
    (get_local $2)
    (get_local $5)
   )
  )
  (loop $while-in1
   (if
    (i32.lt_s
     (get_local $0)
     (get_local $1)
    )
    (block
     (i32.store
      (tee_local $5
       (i32.add
        (get_local $3)
        (i32.shl
         (get_local $0)
         (i32.const 2)
        )
       )
      )
      (i32.load8_s
       (i32.add
        (i32.add
         (i32.shl
          (get_local $4)
          (i32.const 3)
         )
         (i32.const 1200)
        )
        (i32.add
         (get_local $2)
         (i32.load
          (get_local $5)
         )
        )
       )
      )
     )
     (set_local $0
      (i32.add
       (get_local $0)
       (i32.const 1)
      )
     )
     (br $while-in1)
    )
   )
  )
 )
 (func $_stereo_analysis (; 77 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 f32)
  (local $5 f32)
  (local $6 f32)
  (local $7 f32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (set_local $8
   (i32.add
    (get_local $0)
    (i32.const 32)
   )
  )
  (set_local $4
   (f32.const 1.0000000036274937e-15)
  )
  (set_local $5
   (f32.const 1.0000000036274937e-15)
  )
  (set_local $0
   (i32.const 0)
  )
  (loop $while-in
   (if
    (i32.ne
     (get_local $0)
     (i32.const 13)
    )
    (block
     (set_local $11
      (i32.shl
       (i32.load16_s
        (i32.add
         (tee_local $9
          (i32.load
           (get_local $8)
          )
         )
         (i32.shl
          (tee_local $10
           (i32.add
            (get_local $0)
            (i32.const 1)
           )
          )
          (i32.const 1)
         )
        )
       )
       (get_local $2)
      )
     )
     (set_local $0
      (i32.shl
       (i32.load16_s
        (i32.add
         (get_local $9)
         (i32.shl
          (get_local $0)
          (i32.const 1)
         )
        )
       )
       (get_local $2)
      )
     )
     (loop $while-in1
      (if
       (i32.lt_s
        (get_local $0)
        (get_local $11)
       )
       (block
        (set_local $6
         (f32.load
          (i32.add
           (get_local $1)
           (i32.shl
            (get_local $0)
            (i32.const 2)
           )
          )
         )
        )
        (set_local $7
         (f32.load
          (i32.add
           (get_local $1)
           (i32.shl
            (i32.add
             (get_local $0)
             (get_local $3)
            )
            (i32.const 2)
           )
          )
         )
        )
        (set_local $0
         (i32.add
          (get_local $0)
          (i32.const 1)
         )
        )
        (set_local $4
         (f32.add
          (get_local $4)
          (f32.add
           (f32.abs
            (f32.add
             (get_local $6)
             (get_local $7)
            )
           )
           (f32.abs
            (f32.sub
             (get_local $6)
             (get_local $7)
            )
           )
          )
         )
        )
        (set_local $5
         (f32.add
          (get_local $5)
          (f32.add
           (f32.abs
            (get_local $6)
           )
           (f32.abs
            (get_local $7)
           )
          )
         )
        )
        (br $while-in1)
       )
      )
     )
     (set_local $0
      (get_local $10)
     )
     (br $while-in)
    )
   )
  )
  (f32.gt
   (f32.mul
    (f32.mul
     (get_local $4)
     (f32.const 0.7071070075035095)
    )
    (f32.convert_s/i32
     (i32.add
      (tee_local $0
       (i32.shl
        (i32.load16_s offset=26
         (i32.load
          (get_local $8)
         )
        )
        (i32.add
         (get_local $2)
         (i32.const 1)
        )
       )
      )
      (if (result i32)
       (i32.lt_s
        (get_local $2)
        (i32.const 2)
       )
       (i32.const 5)
       (i32.const 13)
      )
     )
    )
   )
   (f32.mul
    (get_local $5)
    (f32.convert_s/i32
     (get_local $0)
    )
   )
  )
 )
 (func $_alloc_trim_analysis (; 78 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (param $8 i32) (param $9 f32) (param $10 i32) (param $11 f32) (param $12 i32) (result i32)
  (local $13 f32)
  (local $14 f32)
  (local $15 f32)
  (local $16 f32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (set_local $16
   (if (result f32)
    (i32.lt_s
     (get_local $12)
     (i32.const 64000)
    )
    (f32.const 4)
    (if (result f32)
     (i32.lt_s
      (get_local $12)
      (i32.const 80000)
     )
     (f32.add
      (f32.mul
       (f32.convert_s/i32
        (i32.shr_s
         (i32.add
          (get_local $12)
          (i32.const -64000)
         )
         (i32.const 10)
        )
       )
       (f32.const 0.0625)
      )
      (f32.const 4)
     )
     (f32.const 5)
    )
   )
  )
  (if
   (i32.eq
    (get_local $5)
    (i32.const 2)
   )
   (block
    (set_local $20
     (i32.add
      (get_local $0)
      (i32.const 32)
     )
    )
    (set_local $12
     (i32.const 0)
    )
    (loop $while-in
     (if
      (i32.ne
       (get_local $12)
       (i32.const 8)
      )
      (block
       (set_local $14
        (call $_celt_inner_prod_c
         (i32.add
          (get_local $1)
          (i32.shl
           (tee_local $19
            (i32.shl
             (tee_local $18
              (i32.load16_s
               (i32.add
                (tee_local $17
                 (i32.load
                  (get_local $20)
                 )
                )
                (i32.shl
                 (get_local $12)
                 (i32.const 1)
                )
               )
              )
             )
             (get_local $4)
            )
           )
           (i32.const 2)
          )
         )
         (i32.add
          (get_local $1)
          (i32.shl
           (i32.add
            (get_local $19)
            (get_local $6)
           )
           (i32.const 2)
          )
         )
         (i32.shl
          (i32.sub
           (i32.load16_s
            (i32.add
             (get_local $17)
             (i32.shl
              (tee_local $12
               (i32.add
                (get_local $12)
                (i32.const 1)
               )
              )
              (i32.const 1)
             )
            )
           )
           (get_local $18)
          )
          (get_local $4)
         )
        )
       )
       (set_local $13
        (f32.add
         (get_local $13)
         (get_local $14)
        )
       )
       (br $while-in)
      )
     )
    )
    (set_local $13
     (if (result f32)
      (f32.gt
       (tee_local $14
        (f32.abs
         (f32.mul
          (get_local $13)
          (f32.const 0.125)
         )
        )
       )
       (f32.const 1)
      )
      (tee_local $14
       (f32.const 1)
      )
      (get_local $14)
     )
    )
    (set_local $12
     (i32.const 8)
    )
    (loop $while-in1
     (if
      (i32.lt_s
       (get_local $12)
       (get_local $10)
      )
      (block
       (set_local $15
        (f32.abs
         (call $_celt_inner_prod_c
          (i32.add
           (get_local $1)
           (i32.shl
            (tee_local $19
             (i32.shl
              (tee_local $18
               (i32.load16_s
                (i32.add
                 (tee_local $17
                  (i32.load
                   (get_local $20)
                  )
                 )
                 (i32.shl
                  (get_local $12)
                  (i32.const 1)
                 )
                )
               )
              )
              (get_local $4)
             )
            )
            (i32.const 2)
           )
          )
          (i32.add
           (get_local $1)
           (i32.shl
            (i32.add
             (get_local $19)
             (get_local $6)
            )
            (i32.const 2)
           )
          )
          (i32.shl
           (i32.sub
            (i32.load16_s
             (i32.add
              (get_local $17)
              (i32.shl
               (tee_local $12
                (i32.add
                 (get_local $12)
                 (i32.const 1)
                )
               )
               (i32.const 1)
              )
             )
            )
            (get_local $18)
           )
           (get_local $4)
          )
         )
        )
       )
       (if
        (i32.eqz
         (f32.lt
          (get_local $13)
          (get_local $15)
         )
        )
        (set_local $13
         (get_local $15)
        )
       )
       (br $while-in1)
      )
     )
    )
    (if
     (f32.gt
      (tee_local $13
       (f32.abs
        (get_local $13)
       )
      )
      (f32.const 1)
     )
     (set_local $13
      (f32.const 1)
     )
    )
    (set_local $14
     (f32.mul
      (tee_local $15
       (f32.demote/f64
        (f64.mul
         (call $Math_log
          (f64.promote/f32
           (f32.sub
            (f32.const 1.0010000467300415)
            (f32.mul
             (get_local $14)
             (get_local $14)
            )
           )
          )
         )
         (f64.const 1.4426950408889634)
        )
       )
      )
      (f32.const 0.5)
     )
    )
    (set_local $13
     (f32.demote/f64
      (f64.mul
       (call $Math_log
        (f64.promote/f32
         (f32.sub
          (f32.const 1.0010000467300415)
          (f32.mul
           (get_local $13)
           (get_local $13)
          )
         )
        )
       )
       (f64.const 1.4426950408889634)
      )
     )
    )
    (if
     (i32.eqz
      (f32.gt
       (get_local $14)
       (get_local $13)
      )
     )
     (set_local $14
      (get_local $13)
     )
    )
    (set_local $16
     (f32.add
      (get_local $16)
      (if (result f32)
       (f32.lt
        (tee_local $13
         (f32.mul
          (get_local $15)
          (f32.const 0.75)
         )
        )
        (f32.const -4)
       )
       (f32.const -4)
       (get_local $13)
      )
     )
    )
    (f32.store
     (get_local $8)
     (if (result f32)
      (f32.lt
       (tee_local $13
        (f32.add
         (f32.load
          (get_local $8)
         )
         (f32.const 0.25)
        )
       )
       (tee_local $14
        (f32.neg
         (f32.mul
          (get_local $14)
          (f32.const 0.5)
         )
        )
       )
      )
      (get_local $13)
      (get_local $14)
     )
    )
   )
  )
  (set_local $4
   (i32.add
    (get_local $3)
    (i32.const -1)
   )
  )
  (set_local $6
   (i32.add
    (get_local $0)
    (i32.const 8)
   )
  )
  (set_local $0
   (i32.const 0)
  )
  (set_local $13
   (f32.const 0)
  )
  (loop $while-in3
   (set_local $1
    (i32.const 0)
   )
   (loop $while-in5
    (if
     (i32.lt_s
      (get_local $1)
      (get_local $4)
     )
     (block
      (set_local $13
       (f32.add
        (get_local $13)
        (f32.mul
         (f32.load
          (i32.add
           (get_local $2)
           (i32.shl
            (i32.add
             (get_local $1)
             (i32.mul
              (get_local $0)
              (i32.load
               (get_local $6)
              )
             )
            )
            (i32.const 2)
           )
          )
         )
         (f32.convert_s/i32
          (i32.sub
           (i32.add
            (i32.shl
             (get_local $1)
             (i32.const 1)
            )
            (i32.const 2)
           )
           (get_local $3)
          )
         )
        )
       )
      )
      (set_local $1
       (i32.add
        (get_local $1)
        (i32.const 1)
       )
      )
      (br $while-in5)
     )
    )
   )
   (br_if $while-in3
    (i32.lt_s
     (tee_local $0
      (i32.add
       (get_local $0)
       (i32.const 1)
      )
     )
     (get_local $5)
    )
   )
  )
  (set_local $0
   (f32.gt
    (tee_local $13
     (f32.div
      (f32.add
       (f32.div
        (get_local $13)
        (f32.convert_s/i32
         (i32.mul
          (get_local $4)
          (get_local $5)
         )
        )
       )
       (f32.const 1)
      )
      (f32.const 6)
     )
    )
    (f32.const 2)
   )
  )
  (set_local $2
   (i32.or
    (tee_local $1
     (f32.lt
      (get_local $13)
      (f32.const -2)
     )
    )
    (get_local $0)
   )
  )
  (set_local $14
   (if (result f32)
    (i32.and
     (get_local $1)
     (i32.xor
      (get_local $0)
      (i32.const 1)
     )
    )
    (f32.const -2)
    (f32.const 2)
   )
  )
  (set_local $9
   (f32.sub
    (f32.sub
     (f32.sub
      (get_local $16)
      (if (result f32)
       (get_local $2)
       (get_local $14)
       (get_local $13)
      )
     )
     (get_local $11)
    )
    (f32.mul
     (get_local $9)
     (f32.const 2)
    )
   )
  )
  (if
   (i32.load
    (get_local $7)
   )
   (block
    (set_local $0
     (f32.gt
      (tee_local $11
       (f32.mul
        (f32.add
         (f32.load offset=8
          (get_local $7)
         )
         (f32.const 0.05000000074505806)
        )
        (f32.const 2)
       )
      )
      (f32.const 2)
     )
    )
    (set_local $2
     (i32.or
      (tee_local $1
       (f32.lt
        (get_local $11)
        (f32.const -2)
       )
      )
      (get_local $0)
     )
    )
    (set_local $13
     (if (result f32)
      (i32.and
       (get_local $1)
       (i32.xor
        (get_local $0)
        (i32.const 1)
       )
      )
      (f32.const -2)
      (f32.const 2)
     )
    )
    (set_local $9
     (f32.sub
      (get_local $9)
      (if (result f32)
       (get_local $2)
       (get_local $13)
       (get_local $11)
      )
     )
    )
   )
  )
  (if
   (i32.gt_s
    (tee_local $0
     (i32.trunc_s/f32
      (f32.floor
       (f32.add
        (get_local $9)
        (f32.const 0.5)
       )
      )
     )
    )
    (i32.const 10)
   )
   (set_local $0
    (i32.const 10)
   )
   (if
    (i32.lt_s
     (get_local $0)
     (i32.const 0)
    )
    (return
     (i32.const 0)
    )
   )
  )
  (get_local $0)
 )
 (func $_compute_vbr (; 79 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (param $8 i32) (param $9 i32) (param $10 f32) (param $11 i32) (param $12 f32) (param $13 i32) (param $14 f32) (param $15 i32) (param $16 i32) (param $17 f32) (param $18 f32) (result i32)
  (local $19 i32)
  (local $20 f32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 f32)
  (block $folding-inner0
   (set_local $19
    (i32.shl
     (i32.load16_s
      (i32.add
       (get_local $1)
       (i32.shl
        (tee_local $21
         (if (result i32)
          (get_local $6)
          (get_local $6)
          (get_local $0)
         )
        )
        (i32.const 1)
       )
      )
     )
     (get_local $4)
    )
   )
   (if
    (tee_local $22
     (i32.eq
      (get_local $7)
      (i32.const 2)
     )
    )
    (set_local $19
     (i32.add
      (get_local $19)
      (i32.shl
       (i32.load16_s
        (i32.add
         (get_local $1)
         (i32.shl
          (if (result i32)
           (i32.gt_s
            (get_local $21)
            (get_local $8)
           )
           (get_local $8)
           (get_local $21)
          )
          (i32.const 1)
         )
        )
       )
       (get_local $4)
      )
     )
    )
   )
   (set_local $6
    (if (result i32)
     (tee_local $23
      (i32.eqz
       (i32.load
        (get_local $2)
       )
      )
     )
     (get_local $3)
     (if (result i32)
      (f64.lt
       (f64.promote/f32
        (tee_local $20
         (f32.load offset=16
          (get_local $2)
         )
        )
       )
       (f64.const 0.4)
      )
      (i32.sub
       (get_local $3)
       (i32.trunc_s/f32
        (f32.mul
         (f32.sub
          (f32.const 0.4000000059604645)
          (get_local $20)
         )
         (f32.convert_s/i32
          (i32.shl
           (get_local $19)
           (i32.const 3)
          )
         )
        )
       )
      )
      (get_local $3)
     )
    )
   )
   (if
    (get_local $22)
    (set_local $6
     (i32.sub
      (get_local $6)
      (i32.trunc_s/f32
       (if (result f32)
        (f32.lt
         (tee_local $20
          (f32.mul
           (f32.div
            (f32.mul
             (f32.convert_s/i32
              (tee_local $8
               (i32.sub
                (i32.shl
                 (i32.load16_s
                  (i32.add
                   (get_local $1)
                   (i32.shl
                    (if (result i32)
                     (i32.gt_s
                      (get_local $21)
                      (get_local $8)
                     )
                     (get_local $8)
                     (tee_local $8
                      (get_local $21)
                     )
                    )
                    (i32.const 1)
                   )
                  )
                 )
                 (get_local $4)
                )
                (get_local $8)
               )
              )
             )
             (f32.const 0.800000011920929)
            )
            (f32.convert_s/i32
             (get_local $19)
            )
           )
           (f32.convert_s/i32
            (get_local $6)
           )
          )
         )
         (tee_local $10
          (f32.mul
           (f32.add
            (if (result f32)
             (f32.lt
              (get_local $10)
              (f32.const 1)
             )
             (get_local $10)
             (f32.const 1)
            )
            (f32.const -0.10000000149011612)
           )
           (f32.convert_s/i32
            (i32.shl
             (get_local $8)
             (i32.const 3)
            )
           )
          )
         )
        )
        (get_local $20)
        (get_local $10)
       )
      )
     )
    )
   )
   (set_local $6
    (i32.add
     (tee_local $6
      (i32.add
       (get_local $6)
       (i32.sub
        (get_local $11)
        (i32.shl
         (i32.const 19)
         (get_local $4)
        )
       )
      )
     )
     (i32.trunc_s/f32
      (f32.mul
       (f32.add
        (get_local $12)
        (f32.const -0.04399999976158142)
       )
       (f32.convert_s/i32
        (get_local $6)
       )
      )
     )
    )
   )
   (if
    (i32.and
     (i32.eqz
      (get_local $15)
     )
     (i32.xor
      (get_local $23)
      (i32.const 1)
     )
    )
    (block
     (set_local $20
      (f32.add
       (tee_local $10
        (f32.add
         (f32.load offset=4
          (get_local $2)
         )
         (f32.const -0.15000000596046448)
        )
       )
       (f32.const -0.11999999731779099)
      )
     )
     (set_local $2
      (i32.add
       (get_local $6)
       (i32.trunc_s/f32
        (f32.mul
         (f32.mul
          (tee_local $24
           (f32.convert_s/i32
            (i32.shl
             (get_local $19)
             (i32.const 3)
            )
           )
          )
          (f32.const 1.2000000476837158)
         )
         (if (result f32)
          (f32.lt
           (get_local $10)
           (f32.const 0)
          )
          (f32.const -0.11999999731779099)
          (get_local $20)
         )
        )
       )
      )
     )
     (if
      (get_local $13)
      (set_local $2
       (i32.add
        (get_local $2)
        (i32.trunc_s/f32
         (f32.mul
          (get_local $24)
          (f32.const 0.800000011920929)
         )
        )
       )
      )
     )
    )
    (set_local $2
     (get_local $6)
    )
   )
   (if
    (i32.and
     (i32.eqz
      (get_local $15)
     )
     (i32.xor
      (tee_local $8
       (i32.eqz
        (get_local $16)
       )
      )
      (i32.const 1)
     )
    )
    (if
     (i32.gt_s
      (tee_local $6
       (i32.div_s
        (get_local $2)
        (i32.const 4)
       )
      )
      (tee_local $2
       (i32.add
        (get_local $2)
        (i32.trunc_s/f32
         (f32.mul
          (f32.convert_s/i32
           (i32.shl
            (get_local $19)
            (i32.const 3)
           )
          )
          (get_local $17)
         )
        )
       )
      )
     )
     (set_local $2
      (get_local $6)
     )
    )
   )
   (if
    (i32.ge_s
     (get_local $2)
     (if (result i32)
      (i32.lt_s
       (tee_local $6
        (i32.shr_s
         (get_local $2)
         (i32.const 2)
        )
       )
       (tee_local $0
        (i32.trunc_s/f32
         (f32.mul
          (f32.convert_s/i32
           (i32.shl
            (i32.mul
             (i32.shl
              (i32.load16_s
               (i32.add
                (get_local $1)
                (i32.shl
                 (i32.add
                  (get_local $0)
                  (i32.const -2)
                 )
                 (i32.const 1)
                )
               )
              )
              (get_local $4)
             )
             (get_local $7)
            )
            (i32.const 3)
           )
          )
          (get_local $14)
         )
        )
       )
      )
      (get_local $0)
      (tee_local $0
       (get_local $6)
      )
     )
    )
    (set_local $2
     (get_local $0)
    )
   )
   (br_if $folding-inner0
    (i32.and
     (i32.eqz
      (get_local $15)
     )
     (i32.xor
      (get_local $8)
      (i32.const 1)
     )
    )
   )
   (if
    (get_local $9)
    (set_local $2
     (i32.add
      (i32.trunc_s/f32
       (f32.mul
        (f32.convert_s/i32
         (i32.sub
          (get_local $2)
          (get_local $3)
         )
        )
        (f32.const 0.6700000166893005)
       )
      )
      (get_local $3)
     )
    )
   )
   (br_if $folding-inner0
    (i32.eqz
     (i32.and
      (get_local $8)
      (f32.lt
       (get_local $12)
       (f32.const 0.20000000298023224)
      )
     )
    )
   )
   (set_local $5
    (i32.or
     (tee_local $0
      (i32.gt_s
       (get_local $5)
       (i32.const 96000)
      )
     )
     (tee_local $4
      (i32.gt_s
       (tee_local $1
        (i32.sub
         (i32.const 96000)
         (get_local $5)
        )
       )
       (i32.const 32000)
      )
     )
    )
   )
   (set_local $10
    (if (result f32)
     (i32.and
      (get_local $0)
      (i32.xor
       (get_local $4)
       (i32.const 1)
      )
     )
     (f32.const 0)
     (f32.const 0.09919999539852142)
    )
   )
   (set_local $12
    (f32.mul
     (f32.convert_s/i32
      (get_local $1)
     )
     (f32.const 3.099999958067201e-06)
    )
   )
   (return
    (if (result i32)
     (i32.lt_s
      (tee_local $0
       (i32.shl
        (get_local $3)
        (i32.const 1)
       )
      )
      (tee_local $2
       (i32.add
        (get_local $2)
        (i32.trunc_s/f32
         (f32.mul
          (f32.mul
           (if (result f32)
            (get_local $5)
            (get_local $10)
            (get_local $12)
           )
           (get_local $18)
          )
          (f32.convert_s/i32
           (get_local $2)
          )
         )
        )
       )
      )
     )
     (get_local $0)
     (get_local $2)
    )
   )
  )
  (if (result i32)
   (i32.lt_s
    (tee_local $0
     (i32.shl
      (get_local $3)
      (i32.const 1)
     )
    )
    (get_local $2)
   )
   (get_local $0)
   (get_local $2)
  )
 )
 (func $_ec_get_error (; 80 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (get_local $0)
 )
 (func $_l1_metric (; 81 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 f32) (result f32)
  (local $4 f32)
  (local $5 i32)
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $5)
     (get_local $1)
    )
    (block
     (set_local $4
      (f32.add
       (get_local $4)
       (f32.abs
        (f32.load
         (i32.add
          (get_local $0)
          (i32.shl
           (get_local $5)
           (i32.const 2)
          )
         )
        )
       )
      )
     )
     (set_local $5
      (i32.add
       (get_local $5)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (f32.add
   (get_local $4)
   (f32.mul
    (f32.mul
     (f32.convert_s/i32
      (get_local $2)
     )
     (get_local $3)
    )
    (get_local $4)
   )
  )
 )
 (func $_median_of_5 (; 82 ;) (; has Stack IR ;) (param $0 i32) (result f32)
  (local $1 f32)
  (local $2 f32)
  (local $3 f32)
  (local $4 f32)
  (local $5 f32)
  (local $6 f32)
  (local $7 i32)
  (set_local $3
   (f32.load offset=8
    (get_local $0)
   )
  )
  (set_local $4
   (if (result f32)
    (tee_local $7
     (f32.gt
      (tee_local $1
       (f32.load
        (get_local $0)
       )
      )
      (tee_local $2
       (f32.load offset=4
        (get_local $0)
       )
      )
     )
    )
    (get_local $1)
    (get_local $2)
   )
  )
  (if
   (get_local $7)
   (set_local $1
    (get_local $2)
   )
  )
  (set_local $6
   (if (result f32)
    (tee_local $0
     (f32.gt
      (tee_local $5
       (f32.load offset=12
        (get_local $0)
       )
      )
      (tee_local $2
       (f32.load offset=16
        (get_local $0)
       )
      )
     )
    )
    (get_local $2)
    (get_local $5)
   )
  )
  (if
   (i32.eqz
    (get_local $0)
   )
   (set_local $5
    (get_local $2)
   )
  )
  (if
   (i32.eqz
    (tee_local $0
     (f32.gt
      (get_local $1)
      (get_local $6)
     )
    )
   )
   (set_local $1
    (get_local $6)
   )
  )
  (set_local $2
   (if (result f32)
    (get_local $0)
    (get_local $5)
    (get_local $4)
   )
  )
  (if
   (i32.eqz
    (get_local $0)
   )
   (set_local $4
    (get_local $5)
   )
  )
  (block $do-once
   (if
    (f32.gt
     (get_local $3)
     (get_local $2)
    )
    (if
     (f32.lt
      (get_local $2)
      (get_local $1)
     )
     (if
      (f32.lt
       (get_local $3)
       (get_local $1)
      )
      (set_local $1
       (get_local $3)
      )
     )
     (block
      (if
       (f32.lt
        (get_local $4)
        (get_local $2)
       )
       (block
        (set_local $1
         (get_local $4)
        )
        (br $do-once)
       )
      )
      (set_local $1
       (get_local $2)
      )
     )
    )
    (if
     (f32.lt
      (get_local $3)
      (get_local $1)
     )
     (if
      (f32.lt
       (get_local $2)
       (get_local $1)
      )
      (set_local $1
       (get_local $2)
      )
     )
     (block
      (if
       (f32.lt
        (get_local $3)
        (get_local $4)
       )
       (block
        (set_local $1
         (get_local $3)
        )
        (br $do-once)
       )
      )
      (set_local $1
       (get_local $4)
      )
     )
    )
   )
  )
  (get_local $1)
 )
 (func $_median_of_3 (; 83 ;) (; has Stack IR ;) (param $0 i32) (result f32)
  (local $1 f32)
  (local $2 f32)
  (local $3 f32)
  (local $4 i32)
  (set_local $3
   (if (result f32)
    (tee_local $4
     (f32.gt
      (tee_local $2
       (f32.load
        (get_local $0)
       )
      )
      (tee_local $1
       (f32.load offset=4
        (get_local $0)
       )
      )
     )
    )
    (get_local $1)
    (get_local $2)
   )
  )
  (if
   (f32.lt
    (if (result f32)
     (get_local $4)
     (get_local $2)
     (tee_local $2
      (get_local $1)
     )
    )
    (tee_local $1
     (f32.load offset=8
      (get_local $0)
     )
    )
   )
   (set_local $3
    (get_local $2)
   )
   (if
    (f32.lt
     (get_local $3)
     (get_local $1)
    )
    (set_local $3
     (get_local $1)
    )
   )
  )
  (get_local $3)
 )
 (func $_validate_celt_decoder (; 84 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (set_local $1
   (i32.load
    (get_local $0)
   )
  )
  (set_local $2
   (call $_opus_custom_mode_create)
  )
  (if
   (i32.ne
    (get_local $1)
    (get_local $2)
   )
   (call $_celt_fatal
    (i32.const 41720)
    (i32.const 41792)
    (i32.const 118)
   )
  )
  (if
   (i32.ne
    (i32.load offset=4
     (get_local $0)
    )
    (i32.const 120)
   )
   (call $_celt_fatal
    (i32.const 41812)
    (i32.const 41792)
    (i32.const 119)
   )
  )
  (if
   (i32.ge_u
    (i32.add
     (i32.load offset=8
      (get_local $0)
     )
     (i32.const -1)
    )
    (i32.const 2)
   )
   (call $_celt_fatal
    (i32.const 50286)
    (i32.const 41792)
    (i32.const 121)
   )
  )
  (if
   (i32.ge_u
    (i32.add
     (i32.load offset=12
      (get_local $0)
     )
     (i32.const -1)
    )
    (i32.const 2)
   )
   (call $_celt_fatal
    (i32.const 51189)
    (i32.const 41792)
    (i32.const 122)
   )
  )
  (if
   (i32.le_s
    (i32.load offset=16
     (get_local $0)
    )
    (i32.const 0)
   )
   (call $_celt_fatal
    (i32.const 41849)
    (i32.const 41792)
    (i32.const 123)
   )
  )
  (block $switch
   (block $switch-default
    (block $switch-case
     (br_table $switch-case $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-case $switch-default
      (tee_local $1
       (i32.load offset=20
        (get_local $0)
       )
      )
     )
    )
    (br $switch)
   )
   (call $_celt_fatal
    (i32.const 41886)
    (i32.const 41792)
    (i32.const 124)
   )
  )
  (if
   (i32.ge_s
    (get_local $1)
    (tee_local $1
     (i32.load offset=24
      (get_local $0)
     )
    )
   )
   (call $_celt_fatal
    (i32.const 41938)
    (i32.const 41792)
    (i32.const 125)
   )
  )
  (if
   (i32.ge_s
    (get_local $1)
    (i32.const 22)
   )
   (call $_celt_fatal
    (i32.const 41976)
    (i32.const 41792)
    (i32.const 126)
   )
  )
  (if
   (i32.le_s
    (tee_local $1
     (i32.load offset=36
      (get_local $0)
     )
    )
    (i32.const -1)
   )
   (call $_celt_fatal
    (i32.const 51113)
    (i32.const 41792)
    (i32.const 128)
   )
  )
  (if
   (get_local $1)
   (call $_celt_fatal
    (i32.const 51145)
    (i32.const 41792)
    (i32.const 129)
   )
  )
  (if
   (i32.ge_s
    (tee_local $1
     (i32.load offset=48
      (get_local $0)
     )
    )
    (i32.const 721)
   )
   (call $_celt_fatal
    (i32.const 42008)
    (i32.const 41792)
    (i32.const 131)
   )
  )
  (if
   (i32.eqz
    (i32.or
     (i32.gt_s
      (get_local $1)
      (i32.const 99)
     )
     (i32.eqz
      (get_local $1)
     )
    )
   )
   (call $_celt_fatal
    (i32.const 42068)
    (i32.const 41792)
    (i32.const 132)
   )
  )
  (if
   (i32.ge_s
    (tee_local $1
     (i32.load offset=60
      (get_local $0)
     )
    )
    (i32.const 1024)
   )
   (call $_celt_fatal
    (i32.const 42157)
    (i32.const 41792)
    (i32.const 133)
   )
  )
  (if
   (i32.eqz
    (i32.or
     (i32.gt_s
      (get_local $1)
      (i32.const 14)
     )
     (i32.eqz
      (get_local $1)
     )
    )
   )
   (call $_celt_fatal
    (i32.const 42210)
    (i32.const 41792)
    (i32.const 134)
   )
  )
  (if
   (i32.ge_s
    (tee_local $1
     (i32.load
      (i32.sub
       (get_local $0)
       (i32.const -64)
      )
     )
    )
    (i32.const 1024)
   )
   (call $_celt_fatal
    (i32.const 42304)
    (i32.const 41792)
    (i32.const 135)
   )
  )
  (if
   (i32.eqz
    (i32.or
     (i32.gt_s
      (get_local $1)
      (i32.const 14)
     )
     (i32.eqz
      (get_local $1)
     )
    )
   )
   (call $_celt_fatal
    (i32.const 42361)
    (i32.const 41792)
    (i32.const 136)
   )
  )
  (if
   (i32.ge_s
    (tee_local $1
     (i32.load offset=76
      (get_local $0)
     )
    )
    (i32.const 3)
   )
   (call $_celt_fatal
    (i32.const 42463)
    (i32.const 41792)
    (i32.const 137)
   )
  )
  (if
   (i32.le_s
    (get_local $1)
    (i32.const -1)
   )
   (call $_celt_fatal
    (i32.const 42508)
    (i32.const 41792)
    (i32.const 138)
   )
  )
  (if
   (i32.ge_s
    (tee_local $0
     (i32.load offset=80
      (get_local $0)
     )
    )
    (i32.const 3)
   )
   (call $_celt_fatal
    (i32.const 42553)
    (i32.const 41792)
    (i32.const 139)
   )
  )
  (if
   (i32.le_s
    (get_local $0)
    (i32.const -1)
   )
   (call $_celt_fatal
    (i32.const 42602)
    (i32.const 41792)
    (i32.const 140)
   )
  )
 )
 (func $_celt_decoder_get_size (; 85 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (call $_opus_custom_decoder_get_size
   (i32.load offset=4
    (tee_local $1
     (call $_opus_custom_mode_create)
    )
   )
   (i32.load offset=8
    (get_local $1)
   )
   (get_local $0)
  )
 )
 (func $_opus_custom_decoder_get_size (; 86 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (i32.add
   (i32.add
    (i32.add
     (i32.shl
      (i32.mul
       (i32.add
        (get_local $0)
        (i32.const 2048)
       )
       (get_local $2)
      )
      (i32.const 2)
     )
     (i32.const 92)
    )
    (i32.mul
     (get_local $2)
     (i32.const 96)
    )
   )
   (i32.shl
    (get_local $1)
    (i32.const 5)
   )
  )
 )
 (func $_celt_decoder_init (; 87 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (set_local $3
   (call $_opus_custom_mode_create)
  )
  (if (result i32)
   (tee_local $2
    (call $_opus_custom_decoder_init
     (get_local $0)
     (get_local $3)
     (get_local $2)
    )
   )
   (get_local $2)
   (block (result i32)
    (set_local $1
     (call $_resampling_factor
      (get_local $1)
     )
    )
    (i32.store offset=16
     (get_local $0)
     (get_local $1)
    )
    (i32.shr_s
     (i32.shl
      (i32.eqz
       (get_local $1)
      )
      (i32.const 31)
     )
     (i32.const 31)
    )
   )
  )
 )
 (func $_opus_custom_decoder_init (; 88 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (set_local $3
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.gt_u
    (get_local $2)
    (i32.const 2)
   )
   (block
    (set_global $STACKTOP
     (get_local $3)
    )
    (return
     (i32.const -1)
    )
   )
  )
  (if
   (i32.eqz
    (get_local $0)
   )
   (block
    (set_global $STACKTOP
     (get_local $3)
    )
    (return
     (i32.const -7)
    )
   )
  )
  (set_local $5
   (call $_opus_custom_decoder_get_size
    (i32.load
     (tee_local $4
      (i32.add
       (get_local $1)
       (i32.const 4)
      )
     )
    )
    (i32.load offset=8
     (get_local $1)
    )
    (get_local $2)
   )
  )
  (drop
   (call $_memset
    (get_local $0)
    (i32.const 0)
    (get_local $5)
   )
  )
  (i32.store
   (get_local $0)
   (get_local $1)
  )
  (i32.store offset=4
   (get_local $0)
   (i32.load
    (get_local $4)
   )
  )
  (i32.store offset=8
   (get_local $0)
   (get_local $2)
  )
  (i32.store offset=12
   (get_local $0)
   (get_local $2)
  )
  (i32.store offset=16
   (get_local $0)
   (i32.const 1)
  )
  (i32.store offset=20
   (get_local $0)
   (i32.const 0)
  )
  (i32.store offset=24
   (get_local $0)
   (i32.load offset=12
    (get_local $1)
   )
  )
  (i32.store offset=28
   (get_local $0)
   (i32.const 1)
  )
  (i32.store offset=32
   (get_local $0)
   (i32.eq
    (get_local $2)
    (i32.const 1)
   )
  )
  (i32.store offset=36
   (get_local $0)
   (i32.const 0)
  )
  (drop
   (call $_opus_custom_decoder_ctl
    (get_local $0)
    (i32.const 4028)
    (get_local $3)
   )
  )
  (set_global $STACKTOP
   (get_local $3)
  )
  (i32.const 0)
 )
 (func $_opus_custom_decoder_ctl (; 89 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (set_local $3
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store
   (get_local $3)
   (get_local $2)
  )
  (block $__rjto$1 (result i32)
   (block $__rjti$1
    (block $__rjti$0
     (block $switch-default
      (block $switch-case10
       (block $switch-case9
        (block $switch-case8
         (block $switch-case7
          (block $switch-case6
           (block $switch-case5
            (block $switch-case4
             (block $switch-case3
              (block $switch-case2
               (block $switch-case1
                (block $switch-case0
                 (block $switch-case
                  (br_table $switch-case3 $switch-case4 $switch-default $switch-default $switch-case8 $switch-default $switch-case5 $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-case9 $switch-case10 $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-case2 $switch-case1 $switch-default $switch-case $switch-default $switch-case0 $switch-default $switch-default $switch-case6 $switch-case7 $switch-default
                   (i32.sub
                    (get_local $1)
                    (i32.const 4027)
                   )
                  )
                 )
                 (set_local $2
                  (i32.load
                   (tee_local $1
                    (i32.and
                     (i32.add
                      (i32.load
                       (get_local $3)
                      )
                      (i32.const 3)
                     )
                     (i32.const -4)
                    )
                   )
                  )
                 )
                 (i32.store
                  (get_local $3)
                  (i32.add
                   (get_local $1)
                   (i32.const 4)
                  )
                 )
                 (br_if $__rjti$1
                  (i32.lt_s
                   (get_local $2)
                   (i32.const 0)
                  )
                 )
                 (br_if $__rjti$1
                  (i32.ge_s
                   (get_local $2)
                   (i32.load offset=8
                    (i32.load
                     (get_local $0)
                    )
                   )
                  )
                 )
                 (i32.store offset=20
                  (get_local $0)
                  (get_local $2)
                 )
                 (br $__rjti$0)
                )
                (set_local $2
                 (i32.load
                  (tee_local $1
                   (i32.and
                    (i32.add
                     (i32.load
                      (get_local $3)
                     )
                     (i32.const 3)
                    )
                    (i32.const -4)
                   )
                  )
                 )
                )
                (i32.store
                 (get_local $3)
                 (i32.add
                  (get_local $1)
                  (i32.const 4)
                 )
                )
                (br_if $__rjti$1
                 (i32.lt_s
                  (get_local $2)
                  (i32.const 1)
                 )
                )
                (br_if $__rjti$1
                 (i32.gt_s
                  (get_local $2)
                  (i32.load offset=8
                   (i32.load
                    (get_local $0)
                   )
                  )
                 )
                )
                (i32.store offset=24
                 (get_local $0)
                 (get_local $2)
                )
                (br $__rjti$0)
               )
               (set_local $2
                (i32.load
                 (tee_local $1
                  (i32.and
                   (i32.add
                    (i32.load
                     (get_local $3)
                    )
                    (i32.const 3)
                   )
                   (i32.const -4)
                  )
                 )
                )
               )
               (i32.store
                (get_local $3)
                (i32.add
                 (get_local $1)
                 (i32.const 4)
                )
               )
               (br_if $__rjti$1
                (i32.gt_u
                 (i32.add
                  (get_local $2)
                  (i32.const -1)
                 )
                 (i32.const 1)
                )
               )
               (i32.store offset=12
                (get_local $0)
                (get_local $2)
               )
               (br $__rjti$0)
              )
              (set_local $2
               (i32.load
                (tee_local $1
                 (i32.and
                  (i32.add
                   (i32.load
                    (get_local $3)
                   )
                   (i32.const 3)
                  )
                  (i32.const -4)
                 )
                )
               )
              )
              (i32.store
               (get_local $3)
               (i32.add
                (get_local $1)
                (i32.const 4)
               )
              )
              (br_if $__rjti$1
               (i32.eqz
                (get_local $2)
               )
              )
              (i32.store
               (get_local $2)
               (i32.load
                (tee_local $0
                 (i32.add
                  (get_local $0)
                  (i32.const 44)
                 )
                )
               )
              )
              (i32.store
               (get_local $0)
               (i32.const 0)
              )
              (br $__rjti$0)
             )
             (set_local $2
              (i32.load
               (tee_local $1
                (i32.and
                 (i32.add
                  (i32.load
                   (get_local $3)
                  )
                  (i32.const 3)
                 )
                 (i32.const -4)
                )
               )
              )
             )
             (i32.store
              (get_local $3)
              (i32.add
               (get_local $1)
               (i32.const 4)
              )
             )
             (br_if $__rjti$1
              (i32.eqz
               (get_local $2)
              )
             )
             (i32.store
              (get_local $2)
              (i32.div_s
               (i32.load offset=4
                (get_local $0)
               )
               (i32.load offset=16
                (get_local $0)
               )
              )
             )
             (br $__rjti$0)
            )
            (set_local $7
             (i32.add
              (tee_local $6
               (i32.add
                (i32.add
                 (i32.add
                  (i32.add
                   (get_local $0)
                   (i32.const 92)
                  )
                  (i32.shl
                   (i32.mul
                    (i32.add
                     (i32.load offset=4
                      (get_local $0)
                     )
                     (i32.const 2048)
                    )
                    (tee_local $4
                     (i32.load offset=8
                      (get_local $0)
                     )
                    )
                   )
                   (i32.const 2)
                  )
                 )
                 (i32.shl
                  (i32.mul
                   (get_local $4)
                   (i32.const 24)
                  )
                  (i32.const 2)
                 )
                )
                (i32.shl
                 (tee_local $2
                  (i32.shl
                   (tee_local $5
                    (i32.load offset=8
                     (tee_local $1
                      (i32.load
                       (get_local $0)
                      )
                     )
                    )
                   )
                   (i32.const 1)
                  )
                 )
                 (i32.const 2)
                )
               )
              )
              (i32.shl
               (get_local $2)
               (i32.const 2)
              )
             )
            )
            (set_local $8
             (i32.add
              (get_local $0)
              (i32.const 40)
             )
            )
            (set_local $2
             (i32.add
              (call $_opus_custom_decoder_get_size
               (i32.load offset=4
                (get_local $1)
               )
               (get_local $5)
               (get_local $4)
              )
              (i32.const -40)
             )
            )
            (drop
             (call $_memset
              (get_local $8)
              (i32.const 0)
              (get_local $2)
             )
            )
            (set_local $2
             (i32.const 0)
            )
            (loop $while-in
             (if
              (i32.lt_s
               (get_local $2)
               (i32.shl
                (i32.load offset=8
                 (get_local $1)
                )
                (i32.const 1)
               )
              )
              (block
               (f32.store
                (i32.add
                 (get_local $7)
                 (i32.shl
                  (get_local $2)
                  (i32.const 2)
                 )
                )
                (f32.const -28)
               )
               (f32.store
                (i32.add
                 (get_local $6)
                 (i32.shl
                  (get_local $2)
                  (i32.const 2)
                 )
                )
                (f32.const -28)
               )
               (set_local $2
                (i32.add
                 (get_local $2)
                 (i32.const 1)
                )
               )
               (set_local $1
                (i32.load
                 (get_local $0)
                )
               )
               (br $while-in)
              )
             )
            )
            (i32.store offset=56
             (get_local $0)
             (i32.const 1)
            )
            (br $__rjti$0)
           )
           (set_local $2
            (i32.load
             (tee_local $1
              (i32.and
               (i32.add
                (i32.load
                 (get_local $3)
                )
                (i32.const 3)
               )
               (i32.const -4)
              )
             )
            )
           )
           (i32.store
            (get_local $3)
            (i32.add
             (get_local $1)
             (i32.const 4)
            )
           )
           (br_if $__rjti$1
            (i32.eqz
             (get_local $2)
            )
           )
           (i32.store
            (get_local $2)
            (i32.load offset=60
             (get_local $0)
            )
           )
           (br $__rjti$0)
          )
          (set_local $2
           (i32.load
            (tee_local $1
             (i32.and
              (i32.add
               (i32.load
                (get_local $3)
               )
               (i32.const 3)
              )
              (i32.const -4)
             )
            )
           )
          )
          (i32.store
           (get_local $3)
           (i32.add
            (get_local $1)
            (i32.const 4)
           )
          )
          (br_if $__rjti$1
           (i32.eqz
            (get_local $2)
           )
          )
          (i32.store
           (get_local $2)
           (i32.load
            (get_local $0)
           )
          )
          (br $__rjti$0)
         )
         (set_local $1
          (i32.load
           (tee_local $2
            (i32.and
             (i32.add
              (i32.load
               (get_local $3)
              )
              (i32.const 3)
             )
             (i32.const -4)
            )
           )
          )
         )
         (i32.store
          (get_local $3)
          (i32.add
           (get_local $2)
           (i32.const 4)
          )
         )
         (i32.store offset=28
          (get_local $0)
          (get_local $1)
         )
         (br $__rjti$0)
        )
        (set_local $2
         (i32.load
          (tee_local $1
           (i32.and
            (i32.add
             (i32.load
              (get_local $3)
             )
             (i32.const 3)
            )
            (i32.const -4)
           )
          )
         )
        )
        (i32.store
         (get_local $3)
         (i32.add
          (get_local $1)
          (i32.const 4)
         )
        )
        (br_if $__rjti$1
         (i32.eqz
          (get_local $2)
         )
        )
        (i32.store
         (get_local $2)
         (i32.load offset=40
          (get_local $0)
         )
        )
        (br $__rjti$0)
       )
       (set_local $2
        (i32.load
         (tee_local $1
          (i32.and
           (i32.add
            (i32.load
             (get_local $3)
            )
            (i32.const 3)
           )
           (i32.const -4)
          )
         )
        )
       )
       (i32.store
        (get_local $3)
        (i32.add
         (get_local $1)
         (i32.const 4)
        )
       )
       (br_if $__rjti$1
        (i32.gt_u
         (get_local $2)
         (i32.const 1)
        )
       )
       (i32.store offset=32
        (get_local $0)
        (get_local $2)
       )
       (br $__rjti$0)
      )
      (set_local $2
       (i32.load
        (tee_local $1
         (i32.and
          (i32.add
           (i32.load
            (get_local $3)
           )
           (i32.const 3)
          )
          (i32.const -4)
         )
        )
       )
      )
      (i32.store
       (get_local $3)
       (i32.add
        (get_local $1)
        (i32.const 4)
       )
      )
      (br_if $__rjti$1
       (i32.eqz
        (get_local $2)
       )
      )
      (i32.store
       (get_local $2)
       (i32.load offset=32
        (get_local $0)
       )
      )
      (br $__rjti$0)
     )
     (set_global $STACKTOP
      (get_local $3)
     )
     (return
      (i32.const -5)
     )
    )
    (set_global $STACKTOP
     (get_local $3)
    )
    (return
     (i32.const 0)
    )
   )
   (set_global $STACKTOP
    (get_local $3)
   )
   (i32.const -1)
  )
 )
 (func $_celt_decode_with_ec (; 90 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (result i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 f32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local $26 i32)
  (local $27 i32)
  (local $28 i32)
  (local $29 i32)
  (local $30 f32)
  (local $31 i32)
  (local $32 i32)
  (local $33 i32)
  (local $34 i32)
  (local $35 i32)
  (local $36 i32)
  (local $37 i32)
  (local $38 i32)
  (local $39 i32)
  (local $40 i32)
  (local $41 i32)
  (local $42 i32)
  (local $43 i32)
  (local $44 i32)
  (local $45 i32)
  (local $46 i32)
  (local $47 i32)
  (local $48 i32)
  (local $49 i32)
  (local $50 i32)
  (local $51 i32)
  (local $52 i32)
  (local $53 i32)
  (local $54 i32)
  (local $55 i32)
  (local $56 i32)
  (local $57 i32)
  (local $58 i32)
  (local $59 f32)
  (set_local $7
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.const 80)
   )
  )
  (set_local $6
   (i32.add
    (get_local $7)
    (i32.const 32)
   )
  )
  (set_local $43
   (i32.add
    (get_local $7)
    (i32.const 24)
   )
  )
  (set_local $33
   (i32.add
    (get_local $7)
    (i32.const 16)
   )
  )
  (set_local $25
   (i32.load offset=8
    (get_local $0)
   )
  )
  (i32.store
   (tee_local $44
    (i32.add
     (tee_local $28
      (get_local $7)
     )
     (i32.const 8)
    )
   )
   (i32.const 0)
  )
  (i32.store
   (tee_local $45
    (i32.add
     (get_local $7)
     (i32.const 4)
    )
   )
   (i32.const 0)
  )
  (set_local $15
   (i32.load offset=12
    (get_local $0)
   )
  )
  (call $_validate_celt_decoder
   (get_local $0)
  )
  (set_local $10
   (i32.load offset=8
    (tee_local $9
     (i32.load
      (get_local $0)
     )
    )
   )
  )
  (set_local $46
   (i32.load offset=32
    (get_local $9)
   )
  )
  (set_local $16
   (i32.load offset=20
    (get_local $0)
   )
  )
  (set_local $13
   (i32.load offset=24
    (get_local $0)
   )
  )
  (set_local $39
   (i32.mul
    (i32.load
     (tee_local $34
      (i32.add
       (get_local $0)
       (i32.const 16)
      )
     )
    )
    (get_local $4)
   )
  )
  (set_local $52
   (i32.add
    (tee_local $29
     (i32.add
      (tee_local $26
       (i32.add
        (tee_local $8
         (i32.add
          (i32.add
           (i32.add
            (get_local $0)
            (i32.const 92)
           )
           (i32.shl
            (i32.mul
             (tee_local $7
              (i32.add
               (tee_local $40
                (i32.load offset=4
                 (get_local $9)
                )
               )
               (i32.const 2048)
              )
             )
             (get_local $25)
            )
            (i32.const 2)
           )
          )
          (i32.shl
           (i32.mul
            (get_local $25)
            (i32.const 24)
           )
           (i32.const 2)
          )
         )
        )
        (i32.shl
         (tee_local $37
          (i32.shl
           (get_local $10)
           (i32.const 1)
          )
         )
         (i32.const 2)
        )
       )
      )
      (i32.shl
       (get_local $37)
       (i32.const 2)
      )
     )
    )
    (i32.shl
     (get_local $37)
     (i32.const 2)
    )
   )
  )
  (set_local $38
   (i32.add
    (get_local $9)
    (i32.const 44)
   )
  )
  (set_local $4
   (i32.load offset=36
    (get_local $9)
   )
  )
  (block $__rjto$0
   (block $__rjti$0
    (loop $while-in
     (br_if $__rjti$0
      (i32.gt_s
       (get_local $11)
       (get_local $4)
      )
     )
     (if
      (i32.ne
       (i32.shl
        (i32.load
         (get_local $38)
        )
        (get_local $11)
       )
       (get_local $39)
      )
      (block
       (set_local $11
        (i32.add
         (get_local $11)
         (i32.const 1)
        )
       )
       (br $while-in)
      )
     )
    )
    (br $__rjto$0)
   )
   (set_global $STACKTOP
    (get_local $28)
   )
   (return
    (i32.const -1)
   )
  )
  (if
   (i32.or
    (i32.gt_u
     (get_local $2)
     (i32.const 1275)
    )
    (i32.eqz
     (get_local $3)
    )
   )
   (block
    (set_global $STACKTOP
     (get_local $28)
    )
    (return
     (i32.const -1)
    )
   )
  )
  (set_local $14
   (i32.sub
    (i32.const 0)
    (tee_local $22
     (i32.shl
      (i32.load
       (get_local $38)
      )
      (get_local $11)
     )
    )
   )
  )
  (set_local $4
   (i32.const 0)
  )
  (loop $while-in1
   (i32.store
    (i32.add
     (get_local $43)
     (i32.shl
      (get_local $4)
      (i32.const 2)
     )
    )
    (tee_local $12
     (i32.add
      (i32.add
       (get_local $0)
       (i32.const 92)
      )
      (i32.shl
       (i32.mul
        (get_local $4)
        (get_local $7)
       )
       (i32.const 2)
      )
     )
    )
   )
   (i32.store
    (i32.add
     (get_local $33)
     (i32.shl
      (get_local $4)
      (i32.const 2)
     )
    )
    (i32.add
     (i32.sub
      (get_local $12)
      (i32.const -8192)
     )
     (i32.shl
      (get_local $14)
      (i32.const 2)
     )
    )
   )
   (br_if $while-in1
    (i32.lt_s
     (tee_local $4
      (i32.add
       (get_local $4)
       (i32.const 1)
      )
     )
     (get_local $25)
    )
   )
  )
  (set_local $4
   (i32.load offset=12
    (get_local $9)
   )
  )
  (if
   (i32.or
    (i32.eqz
     (get_local $1)
    )
    (i32.lt_s
     (get_local $2)
     (i32.const 2)
    )
   )
   (block
    (call $_celt_decode_lost
     (get_local $0)
     (get_local $22)
     (get_local $11)
    )
    (call $_deemphasis
     (get_local $33)
     (get_local $3)
     (get_local $22)
     (get_local $25)
     (i32.load
      (get_local $34)
     )
     (i32.add
      (get_local $9)
      (i32.const 16)
     )
     (i32.add
      (get_local $0)
      (i32.const 84)
     )
     (i32.const 0)
    )
    (set_local $0
     (i32.div_s
      (get_local $39)
      (i32.load
       (get_local $34)
      )
     )
    )
    (set_global $STACKTOP
     (get_local $28)
    )
    (return
     (get_local $0)
    )
   )
  )
  (i32.store offset=56
   (get_local $0)
   (i32.ne
    (i32.load
     (tee_local $47
      (i32.add
       (get_local $0)
       (i32.const 52)
      )
     )
    )
    (i32.const 0)
   )
  )
  (if
   (get_local $5)
   (set_local $6
    (get_local $5)
   )
   (call $_ec_dec_init
    (get_local $6)
    (get_local $1)
    (get_local $2)
   )
  )
  (set_local $48
   (i32.shl
    (i32.const 1)
    (get_local $11)
   )
  )
  (set_local $53
   (if (result i32)
    (i32.gt_s
     (get_local $13)
     (get_local $4)
    )
    (get_local $4)
    (get_local $13)
   )
  )
  (block $label$break$L21
   (if
    (tee_local $54
     (i32.eq
      (get_local $15)
      (i32.const 1)
     )
    )
    (block
     (set_local $1
      (i32.const 0)
     )
     (loop $while-in3
      (br_if $label$break$L21
       (i32.ge_s
        (get_local $1)
        (get_local $10)
       )
      )
      (set_local $17
       (f32.load
        (tee_local $4
         (i32.add
          (get_local $8)
          (i32.shl
           (get_local $1)
           (i32.const 2)
          )
         )
        )
       )
      )
      (f32.store
       (get_local $4)
       (if (result f32)
        (f32.gt
         (get_local $17)
         (tee_local $30
          (f32.load
           (i32.add
            (get_local $8)
            (i32.shl
             (i32.add
              (get_local $10)
              (get_local $1)
             )
             (i32.const 2)
            )
           )
          )
         )
        )
        (get_local $17)
        (get_local $30)
       )
      )
      (set_local $1
       (i32.add
        (get_local $1)
        (i32.const 1)
       )
      )
      (br $while-in3)
     )
    )
   )
  )
  (set_local $20
   (i32.shl
    (get_local $2)
    (i32.const 3)
   )
  )
  (block $__rjto$1
   (block $__rjti$1
    (if
     (i32.lt_s
      (tee_local $1
       (call $_ec_tell
        (tee_local $4
         (i32.load
          (tee_local $18
           (i32.add
            (get_local $6)
            (i32.const 20)
           )
          )
         )
        )
        (i32.load
         (tee_local $19
          (i32.add
           (get_local $6)
           (i32.const 28)
          )
         )
        )
       )
      )
      (get_local $20)
     )
     (if
      (i32.eq
       (get_local $1)
       (i32.const 1)
      )
      (set_local $1
       (if (result i32)
        (tee_local $5
         (call $_ec_dec_bit_logp
          (get_local $6)
          (i32.const 15)
         )
        )
        (block
         (set_local $1
          (call $_ec_tell
           (tee_local $4
            (i32.load
             (get_local $18)
            )
           )
           (i32.load
            (get_local $19)
           )
          )
         )
         (br $__rjti$1)
        )
        (i32.const 1)
       )
      )
     )
     (block
      (set_local $5
       (i32.const 1)
      )
      (br $__rjti$1)
     )
    )
    (br $__rjto$1)
   )
   (i32.store
    (get_local $18)
    (i32.add
     (get_local $4)
     (i32.sub
      (get_local $20)
      (get_local $1)
     )
    )
   )
   (set_local $1
    (get_local $20)
   )
   (set_local $31
    (get_local $5)
   )
  )
  (set_local $42
   (if (result i32)
    (i32.or
     (get_local $16)
     (i32.gt_s
      (i32.add
       (get_local $1)
       (i32.const 16)
      )
      (get_local $20)
     )
    )
    (block (result i32)
     (set_local $17
      (f32.const 0)
     )
     (i32.const 0)
    )
    (block (result i32)
     (set_local $17
      (if (result f32)
       (call $_ec_dec_bit_logp
        (get_local $6)
        (i32.const 1)
       )
       (block (result f32)
        (set_local $4
         (i32.shl
          (i32.const 16)
          (tee_local $1
           (call $_ec_dec_uint
            (get_local $6)
            (i32.const 6)
           )
          )
         )
        )
        (set_local $1
         (call $_ec_dec_bits
          (get_local $6)
          (i32.add
           (get_local $1)
           (i32.const 4)
          )
         )
        )
        (set_local $4
         (i32.add
          (i32.add
           (get_local $4)
           (get_local $1)
          )
          (i32.const -1)
         )
        )
        (set_local $1
         (call $_ec_dec_bits
          (get_local $6)
          (i32.const 3)
         )
        )
        (set_local $5
         (if (result i32)
          (i32.gt_s
           (i32.add
            (call $_ec_tell
             (i32.load
              (get_local $18)
             )
             (i32.load
              (get_local $19)
             )
            )
            (i32.const 2)
           )
           (get_local $20)
          )
          (i32.const 0)
          (call $_ec_dec_icdf
           (get_local $6)
           (i32.const 42651)
           (i32.const 2)
          )
         )
        )
        (f32.mul
         (f32.convert_s/i32
          (i32.add
           (get_local $1)
           (i32.const 1)
          )
         )
         (f32.const 0.09375)
        )
       )
       (block (result f32)
        (set_local $4
         (i32.const 0)
        )
        (set_local $5
         (i32.const 0)
        )
        (f32.const 0)
       )
      )
     )
     (set_local $1
      (call $_ec_tell
       (i32.load
        (get_local $18)
       )
       (i32.load
        (get_local $19)
       )
      )
     )
     (set_local $41
      (get_local $5)
     )
     (get_local $4)
    )
   )
  )
  (set_local $55
   (block $__rjto$2 (result i32)
    (block $__rjti$2
     (br $__rjto$2
      (if (result i32)
       (i32.or
        (tee_local $49
         (i32.eqz
          (get_local $11)
         )
        )
        (i32.gt_s
         (i32.add
          (get_local $1)
          (i32.const 3)
         )
         (get_local $20)
        )
       )
       (br $__rjti$2)
       (block (result i32)
        (set_local $23
         (call $_ec_dec_bit_logp
          (get_local $6)
          (i32.const 3)
         )
        )
        (set_local $1
         (call $_ec_tell
          (i32.load
           (get_local $18)
          )
          (i32.load
           (get_local $19)
          )
         )
        )
        (if (result i32)
         (get_local $23)
         (get_local $48)
         (br $__rjti$2)
        )
       )
      )
     )
    )
    (set_local $23
     (i32.const 0)
    )
    (i32.const 0)
   )
  )
  (set_local $1
   (if (result i32)
    (i32.gt_s
     (i32.add
      (get_local $1)
      (i32.const 3)
     )
     (get_local $20)
    )
    (i32.const 0)
    (call $_ec_dec_bit_logp
     (get_local $6)
     (i32.const 3)
    )
   )
  )
  (call $_unquant_coarse_energy
   (get_local $9)
   (get_local $16)
   (get_local $13)
   (get_local $8)
   (get_local $1)
   (get_local $6)
   (get_local $15)
   (get_local $11)
  )
  (set_local $56
   (call $_llvm_stacksave)
  )
  (set_local $50
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (get_local $10)
       (i32.const 2)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (call $_tf_decode
   (get_local $16)
   (get_local $13)
   (get_local $23)
   (get_local $50)
   (get_local $11)
   (get_local $6)
  )
  (set_local $57
   (if (result i32)
    (i32.gt_s
     (i32.add
      (call $_ec_tell
       (i32.load
        (get_local $18)
       )
       (i32.load
        (get_local $19)
       )
      )
      (i32.const 4)
     )
     (get_local $20)
    )
    (i32.const 2)
    (call $_ec_dec_icdf
     (get_local $6)
     (i32.const 42654)
     (i32.const 5)
    )
   )
  )
  (set_local $35
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (get_local $10)
       (i32.const 2)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (call $_init_caps
   (get_local $9)
   (get_local $35)
   (get_local $11)
   (get_local $15)
  )
  (set_local $51
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (get_local $10)
       (i32.const 2)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (set_local $32
   (i32.shl
    (get_local $2)
    (i32.const 6)
   )
  )
  (set_local $5
   (call $_ec_tell_frac
    (tee_local $1
     (i32.load
      (get_local $18)
     )
    )
    (tee_local $2
     (i32.load
      (get_local $19)
     )
    )
   )
  )
  (set_local $7
   (i32.const 6)
  )
  (set_local $14
   (get_local $32)
  )
  (set_local $12
   (get_local $16)
  )
  (loop $while-in5
   (if
    (i32.lt_s
     (get_local $12)
     (get_local $13)
    )
    (block
     (set_local $24
      (i32.lt_s
       (tee_local $36
        (i32.shl
         (tee_local $4
          (i32.shl
           (i32.mul
            (get_local $15)
            (i32.sub
             (i32.load16_s
              (i32.add
               (get_local $46)
               (i32.shl
                (tee_local $27
                 (i32.add
                  (get_local $12)
                  (i32.const 1)
                 )
                )
                (i32.const 1)
               )
              )
             )
             (i32.load16_s
              (i32.add
               (get_local $46)
               (i32.shl
                (get_local $12)
                (i32.const 1)
               )
              )
             )
            )
           )
           (get_local $11)
          )
         )
         (i32.const 3)
        )
       )
       (if (result i32)
        (tee_local $21
         (i32.lt_s
          (get_local $4)
          (i32.const 48)
         )
        )
        (i32.const 48)
        (get_local $4)
       )
      )
     )
     (if
      (get_local $21)
      (set_local $4
       (i32.const 48)
      )
     )
     (if
      (i32.eqz
       (get_local $24)
      )
      (set_local $36
       (get_local $4)
      )
     )
     (set_local $58
      (i32.add
       (get_local $35)
       (i32.shl
        (get_local $12)
        (i32.const 2)
       )
      )
     )
     (set_local $24
      (i32.const 0)
     )
     (set_local $21
      (get_local $7)
     )
     (set_local $4
      (get_local $1)
     )
     (set_local $1
      (get_local $5)
     )
     (set_local $5
      (loop $while-in7 (result i32)
       (block $while-out6 (result i32)
        (drop
         (br_if $while-out6
          (get_local $1)
          (i32.ge_s
           (i32.add
            (get_local $1)
            (i32.shl
             (get_local $21)
             (i32.const 3)
            )
           )
           (get_local $14)
          )
         )
        )
        (drop
         (br_if $while-out6
          (get_local $1)
          (i32.ge_s
           (get_local $24)
           (i32.load
            (get_local $58)
           )
          )
         )
        )
        (set_local $5
         (call $_ec_dec_bit_logp
          (get_local $6)
          (get_local $21)
         )
        )
        (set_local $1
         (call $_ec_tell_frac
          (tee_local $4
           (i32.load
            (get_local $18)
           )
          )
          (tee_local $2
           (i32.load
            (get_local $19)
           )
          )
         )
        )
        (if (result i32)
         (get_local $5)
         (block
          (set_local $24
           (i32.add
            (get_local $24)
            (get_local $36)
           )
          )
          (set_local $21
           (i32.const 1)
          )
          (set_local $14
           (i32.sub
            (get_local $14)
            (get_local $36)
           )
          )
          (br $while-in7)
         )
         (get_local $1)
        )
       )
      )
     )
     (i32.store
      (i32.add
       (get_local $51)
       (i32.shl
        (get_local $12)
        (i32.const 2)
       )
      )
      (get_local $24)
     )
     (if
      (i32.gt_s
       (get_local $24)
       (i32.const 0)
      )
      (block
       (set_local $1
        (i32.add
         (get_local $7)
         (i32.const -1)
        )
       )
       (set_local $7
        (if (result i32)
         (i32.lt_s
          (get_local $7)
          (i32.const 3)
         )
         (i32.const 2)
         (get_local $1)
        )
       )
      )
     )
     (set_local $1
      (get_local $4)
     )
     (set_local $12
      (get_local $27)
     )
     (br $while-in5)
    )
   )
  )
  (set_local $7
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (get_local $10)
       (i32.const 2)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (if
   (i32.gt_s
    (i32.add
     (get_local $5)
     (i32.const 48)
    )
    (get_local $14)
   )
   (set_local $4
    (i32.const 5)
   )
   (block
    (set_local $4
     (call $_ec_dec_icdf
      (get_local $6)
      (i32.const 42658)
      (i32.const 7)
     )
    )
    (set_local $1
     (i32.load
      (get_local $18)
     )
    )
    (set_local $2
     (i32.load
      (get_local $19)
     )
    )
   )
  )
  (set_local $1
   (call $_ec_tell_frac
    (get_local $1)
    (get_local $2)
   )
  )
  (set_local $14
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (get_local $10)
       (i32.const 2)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (set_local $12
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (get_local $10)
       (i32.const 2)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (set_local $21
   (call $_clt_compute_allocation
    (get_local $9)
    (get_local $16)
    (get_local $13)
    (get_local $51)
    (get_local $35)
    (get_local $4)
    (get_local $44)
    (get_local $45)
    (i32.sub
     (tee_local $1
      (i32.add
       (i32.sub
        (get_local $32)
        (get_local $1)
       )
       (i32.const -1)
      )
     )
     (tee_local $5
      (if (result i32)
       (i32.and
        (i32.gt_u
         (get_local $11)
         (i32.const 1)
        )
        (i32.xor
         (tee_local $36
          (i32.eqz
           (get_local $23)
          )
         )
         (i32.const 1)
        )
       )
       (block (result i32)
        (set_local $2
         (i32.xor
          (tee_local $5
           (i32.lt_s
            (get_local $1)
            (i32.add
             (i32.shl
              (get_local $11)
              (i32.const 3)
             )
             (i32.const 16)
            )
           )
          )
          (i32.const 1)
         )
        )
        (if (result i32)
         (get_local $5)
         (i32.const 0)
         (i32.const 8)
        )
       )
       (block (result i32)
        (set_local $2
         (i32.const 0)
        )
        (i32.const 0)
       )
      )
     )
    )
    (get_local $28)
    (get_local $14)
    (get_local $7)
    (get_local $12)
    (get_local $15)
    (get_local $11)
    (get_local $6)
    (i32.const 0)
    (i32.const 0)
    (i32.const 0)
   )
  )
  (call $_unquant_fine_energy
   (get_local $9)
   (get_local $16)
   (get_local $13)
   (get_local $8)
   (get_local $7)
   (get_local $6)
   (get_local $15)
  )
  (set_local $4
   (i32.shl
    (i32.add
     (i32.sub
      (i32.const 2048)
      (get_local $22)
     )
     (i32.div_s
      (get_local $40)
      (i32.const 2)
     )
    )
    (i32.const 2)
   )
  )
  (set_local $1
   (i32.const 0)
  )
  (loop $while-in9
   (drop
    (call $_memmove
     (tee_local $27
      (i32.load
       (i32.add
        (get_local $43)
        (i32.shl
         (get_local $1)
         (i32.const 2)
        )
       )
      )
     )
     (i32.add
      (get_local $27)
      (i32.shl
       (get_local $22)
       (i32.const 2)
      )
     )
     (get_local $4)
    )
   )
   (br_if $while-in9
    (i32.lt_s
     (tee_local $1
      (i32.add
       (get_local $1)
       (i32.const 1)
      )
     )
     (get_local $25)
    )
   )
  )
  (set_local $4
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.and
     (i32.add
      (tee_local $24
       (i32.mul
        (get_local $15)
        (get_local $10)
       )
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (set_local $1
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (i32.mul
        (get_local $15)
        (get_local $22)
       )
       (i32.const 2)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (set_local $35
   (i32.add
    (get_local $1)
    (i32.shl
     (get_local $22)
     (i32.const 2)
    )
   )
  )
  (set_local $27
   (i32.add
    (get_local $0)
    (i32.const 40)
   )
  )
  (call $_quant_all_bands
   (i32.const 0)
   (get_local $9)
   (get_local $16)
   (get_local $13)
   (get_local $1)
   (if (result i32)
    (i32.eq
     (get_local $15)
     (i32.const 2)
    )
    (get_local $35)
    (i32.const 0)
   )
   (get_local $4)
   (i32.const 0)
   (get_local $14)
   (get_local $55)
   (get_local $57)
   (i32.load
    (get_local $45)
   )
   (i32.load
    (get_local $44)
   )
   (get_local $50)
   (i32.sub
    (get_local $32)
    (get_local $5)
   )
   (i32.load
    (get_local $28)
   )
   (get_local $6)
   (get_local $11)
   (get_local $21)
   (get_local $27)
   (i32.const 0)
   (i32.load offset=36
    (get_local $0)
   )
   (i32.load offset=32
    (get_local $0)
   )
  )
  (if
   (get_local $2)
   (block
    (set_local $2
     (i32.eqz
      (call $_ec_dec_bits
       (get_local $6)
       (i32.const 1)
      )
     )
    )
    (set_local $5
     (call $_ec_tell
      (i32.load
       (get_local $18)
      )
      (i32.load
       (get_local $19)
      )
     )
    )
    (call $_unquant_energy_finalise
     (get_local $9)
     (get_local $16)
     (get_local $13)
     (get_local $8)
     (get_local $7)
     (get_local $12)
     (i32.sub
      (get_local $20)
      (get_local $5)
     )
     (get_local $6)
     (get_local $15)
    )
    (if
     (i32.eqz
      (get_local $2)
     )
     (call $_anti_collapse
      (get_local $9)
      (get_local $1)
      (get_local $4)
      (get_local $11)
      (get_local $15)
      (get_local $22)
      (get_local $16)
      (get_local $13)
      (get_local $8)
      (get_local $26)
      (get_local $29)
      (get_local $14)
      (i32.load
       (get_local $27)
      )
     )
    )
   )
   (block
    (set_local $2
     (call $_ec_tell
      (i32.load
       (get_local $18)
      )
      (i32.load
       (get_local $19)
      )
     )
    )
    (call $_unquant_energy_finalise
     (get_local $9)
     (get_local $16)
     (get_local $13)
     (get_local $8)
     (get_local $7)
     (get_local $12)
     (i32.sub
      (get_local $20)
      (get_local $2)
     )
     (get_local $6)
     (get_local $15)
    )
   )
  )
  (block $label$break$L81
   (if
    (get_local $31)
    (block
     (set_local $2
      (i32.const 0)
     )
     (loop $while-in12
      (br_if $label$break$L81
       (i32.ge_s
        (get_local $2)
        (get_local $24)
       )
      )
      (f32.store
       (i32.add
        (get_local $8)
        (i32.shl
         (get_local $2)
         (i32.const 2)
        )
       )
       (f32.const -28)
      )
      (set_local $2
       (i32.add
        (get_local $2)
        (i32.const 1)
       )
      )
      (br $while-in12)
     )
    )
   )
  )
  (call $_celt_synthesis
   (get_local $9)
   (get_local $1)
   (get_local $33)
   (get_local $8)
   (get_local $16)
   (get_local $53)
   (get_local $15)
   (get_local $25)
   (get_local $23)
   (get_local $11)
   (i32.load
    (get_local $34)
   )
   (get_local $31)
  )
  (set_local $5
   (i32.add
    (get_local $0)
    (i32.const 60)
   )
  )
  (set_local $7
   (i32.sub
    (get_local $0)
    (i32.const -64)
   )
  )
  (set_local $31
   (i32.add
    (get_local $0)
    (i32.const 72)
   )
  )
  (set_local $14
   (i32.add
    (get_local $0)
    (i32.const 68)
   )
  )
  (set_local $23
   (i32.add
    (get_local $0)
    (i32.const 80)
   )
  )
  (set_local $12
   (i32.add
    (get_local $0)
    (i32.const 76)
   )
  )
  (set_local $32
   (i32.add
    (get_local $9)
    (i32.const 60)
   )
  )
  (set_local $1
   (i32.const 0)
  )
  (loop $while-in14
   (i32.store
    (get_local $5)
    (if (result i32)
     (i32.gt_s
      (tee_local $2
       (i32.load
        (get_local $5)
       )
      )
      (i32.const 15)
     )
     (get_local $2)
     (tee_local $2
      (i32.const 15)
     )
    )
   )
   (i32.store
    (get_local $7)
    (if (result i32)
     (i32.gt_s
      (tee_local $4
       (i32.load
        (get_local $7)
       )
      )
      (i32.const 15)
     )
     (get_local $4)
     (tee_local $4
      (i32.const 15)
     )
    )
   )
   (call $_comb_filter
    (tee_local $21
     (i32.load
      (i32.add
       (get_local $33)
       (i32.shl
        (get_local $1)
        (i32.const 2)
       )
      )
     )
    )
    (get_local $21)
    (get_local $4)
    (get_local $2)
    (i32.load
     (get_local $38)
    )
    (f32.load
     (get_local $31)
    )
    (f32.load
     (get_local $14)
    )
    (i32.load
     (get_local $23)
    )
    (i32.load
     (get_local $12)
    )
    (i32.load
     (get_local $32)
    )
    (get_local $40)
   )
   (if
    (i32.eqz
     (get_local $49)
    )
    (call $_comb_filter
     (tee_local $4
      (i32.add
       (get_local $21)
       (i32.shl
        (tee_local $2
         (i32.load
          (get_local $38)
         )
        )
        (i32.const 2)
       )
      )
     )
     (get_local $4)
     (i32.load
      (get_local $5)
     )
     (get_local $42)
     (i32.sub
      (get_local $22)
      (get_local $2)
     )
     (f32.load
      (get_local $14)
     )
     (get_local $17)
     (i32.load
      (get_local $12)
     )
     (get_local $41)
     (i32.load
      (get_local $32)
     )
     (get_local $40)
    )
   )
   (br_if $while-in14
    (i32.lt_s
     (tee_local $1
      (i32.add
       (get_local $1)
       (i32.const 1)
      )
     )
     (get_local $25)
    )
   )
  )
  (i32.store
   (get_local $7)
   (i32.load
    (get_local $5)
   )
  )
  (i32.store
   (get_local $31)
   (i32.load
    (get_local $14)
   )
  )
  (i32.store
   (get_local $23)
   (i32.load
    (get_local $12)
   )
  )
  (i32.store
   (get_local $5)
   (get_local $42)
  )
  (f32.store
   (get_local $14)
   (get_local $17)
  )
  (i32.store
   (get_local $12)
   (get_local $41)
  )
  (if
   (i32.eqz
    (get_local $49)
   )
   (block
    (i32.store
     (get_local $7)
     (get_local $42)
    )
    (f32.store
     (get_local $31)
     (get_local $17)
    )
    (i32.store
     (get_local $23)
     (get_local $41)
    )
   )
  )
  (if
   (get_local $54)
   (drop
    (call $_memcpy
     (i32.add
      (get_local $8)
      (i32.shl
       (get_local $10)
       (i32.const 2)
      )
     )
     (get_local $8)
     (i32.shl
      (get_local $10)
      (i32.const 2)
     )
    )
   )
  )
  (block $label$break$L99
   (if
    (get_local $36)
    (block
     (drop
      (call $_memcpy
       (get_local $29)
       (get_local $26)
       (tee_local $1
        (i32.shl
         (get_local $10)
         (i32.const 3)
        )
       )
      )
     )
     (drop
      (call $_memcpy
       (get_local $26)
       (get_local $8)
       (get_local $1)
      )
     )
     (set_local $17
      (f32.mul
       (f32.convert_s/i32
        (get_local $48)
       )
       (f32.const 1.0000000474974513e-03)
      )
     )
     (if
      (i32.ge_s
       (i32.load
        (get_local $47)
       )
       (i32.const 10)
      )
      (set_local $17
       (f32.const 1)
      )
     )
     (set_local $1
      (i32.const 0)
     )
     (loop $while-in17
      (br_if $label$break$L99
       (i32.ge_s
        (get_local $1)
        (get_local $37)
       )
      )
      (set_local $30
       (f32.add
        (f32.load
         (tee_local $2
          (i32.add
           (get_local $52)
           (i32.shl
            (get_local $1)
            (i32.const 2)
           )
          )
         )
        )
        (get_local $17)
       )
      )
      (f32.store
       (get_local $2)
       (if (result f32)
        (f32.lt
         (get_local $30)
         (tee_local $59
          (f32.load
           (i32.add
            (get_local $8)
            (i32.shl
             (get_local $1)
             (i32.const 2)
            )
           )
          )
         )
        )
        (get_local $30)
        (get_local $59)
       )
      )
      (set_local $1
       (i32.add
        (get_local $1)
        (i32.const 1)
       )
      )
      (br $while-in17)
     )
    )
    (block
     (set_local $1
      (i32.const 0)
     )
     (loop $while-in19
      (br_if $label$break$L99
       (i32.ge_s
        (get_local $1)
        (get_local $37)
       )
      )
      (set_local $17
       (f32.load
        (tee_local $2
         (i32.add
          (get_local $26)
          (i32.shl
           (get_local $1)
           (i32.const 2)
          )
         )
        )
       )
      )
      (f32.store
       (get_local $2)
       (if (result f32)
        (f32.lt
         (get_local $17)
         (tee_local $30
          (f32.load
           (i32.add
            (get_local $8)
            (i32.shl
             (get_local $1)
             (i32.const 2)
            )
           )
          )
         )
        )
        (get_local $17)
        (get_local $30)
       )
      )
      (set_local $1
       (i32.add
        (get_local $1)
        (i32.const 1)
       )
      )
      (br $while-in19)
     )
    )
   )
  )
  (set_local $1
   (i32.const 0)
  )
  (loop $while-in21
   (if
    (i32.lt_s
     (get_local $1)
     (get_local $16)
    )
    (block
     (f32.store
      (i32.add
       (get_local $8)
       (i32.shl
        (get_local $1)
        (i32.const 2)
       )
      )
      (f32.const 0)
     )
     (f32.store
      (i32.add
       (get_local $29)
       (i32.shl
        (get_local $1)
        (i32.const 2)
       )
      )
      (f32.const -28)
     )
     (f32.store
      (i32.add
       (get_local $26)
       (i32.shl
        (get_local $1)
        (i32.const 2)
       )
      )
      (f32.const -28)
     )
     (set_local $1
      (i32.add
       (get_local $1)
       (i32.const 1)
      )
     )
     (br $while-in21)
    )
   )
  )
  (set_local $1
   (get_local $13)
  )
  (loop $while-in23
   (if
    (i32.lt_s
     (get_local $1)
     (get_local $10)
    )
    (block
     (f32.store
      (i32.add
       (get_local $8)
       (i32.shl
        (get_local $1)
        (i32.const 2)
       )
      )
      (f32.const 0)
     )
     (f32.store
      (i32.add
       (get_local $29)
       (i32.shl
        (get_local $1)
        (i32.const 2)
       )
      )
      (f32.const -28)
     )
     (f32.store
      (i32.add
       (get_local $26)
       (i32.shl
        (get_local $1)
        (i32.const 2)
       )
      )
      (f32.const -28)
     )
     (set_local $1
      (i32.add
       (get_local $1)
       (i32.const 1)
      )
     )
     (br $while-in23)
    )
   )
  )
  (set_local $1
   (i32.const 0)
  )
  (loop $while-in25
   (if
    (i32.lt_s
     (get_local $1)
     (get_local $16)
    )
    (block
     (f32.store
      (i32.add
       (get_local $8)
       (i32.shl
        (tee_local $2
         (i32.add
          (get_local $10)
          (get_local $1)
         )
        )
        (i32.const 2)
       )
      )
      (f32.const 0)
     )
     (f32.store
      (i32.add
       (get_local $29)
       (i32.shl
        (get_local $2)
        (i32.const 2)
       )
      )
      (f32.const -28)
     )
     (f32.store
      (i32.add
       (get_local $26)
       (i32.shl
        (get_local $2)
        (i32.const 2)
       )
      )
      (f32.const -28)
     )
     (set_local $1
      (i32.add
       (get_local $1)
       (i32.const 1)
      )
     )
     (br $while-in25)
    )
   )
  )
  (loop $while-in27
   (if
    (i32.lt_s
     (get_local $13)
     (get_local $10)
    )
    (block
     (f32.store
      (i32.add
       (get_local $8)
       (i32.shl
        (tee_local $1
         (i32.add
          (get_local $10)
          (get_local $13)
         )
        )
        (i32.const 2)
       )
      )
      (f32.const 0)
     )
     (f32.store
      (i32.add
       (get_local $29)
       (i32.shl
        (get_local $1)
        (i32.const 2)
       )
      )
      (f32.const -28)
     )
     (f32.store
      (i32.add
       (get_local $26)
       (i32.shl
        (get_local $1)
        (i32.const 2)
       )
      )
      (f32.const -28)
     )
     (set_local $13
      (i32.add
       (get_local $13)
       (i32.const 1)
      )
     )
     (br $while-in27)
    )
   )
  )
  (i32.store
   (get_local $27)
   (i32.load
    (get_local $19)
   )
  )
  (call $_deemphasis
   (get_local $33)
   (get_local $3)
   (get_local $22)
   (get_local $25)
   (i32.load
    (get_local $34)
   )
   (i32.add
    (get_local $9)
    (i32.const 16)
   )
   (i32.add
    (get_local $0)
    (i32.const 84)
   )
   (i32.const 0)
  )
  (i32.store
   (get_local $47)
   (i32.const 0)
  )
  (set_local $0
   (if (result i32)
    (i32.gt_s
     (call $_ec_tell
      (i32.load
       (get_local $18)
      )
      (i32.load
       (get_local $19)
      )
     )
     (get_local $20)
    )
    (i32.const -3)
    (block (result i32)
     (if
      (call $_ec_get_error
       (i32.load offset=44
        (get_local $6)
       )
      )
      (i32.store offset=44
       (get_local $0)
       (i32.const 1)
      )
     )
     (i32.div_s
      (get_local $39)
      (i32.load
       (get_local $34)
      )
     )
    )
   )
  )
  (call $_llvm_stackrestore
   (get_local $56)
  )
  (set_global $STACKTOP
   (get_local $28)
  )
  (get_local $0)
 )
 (func $_celt_decode_lost (; 91 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 f32)
  (local $6 i32)
  (local $7 i32)
  (local $8 f32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local $26 f32)
  (local $27 i32)
  (local $28 f32)
  (local $29 i32)
  (local $30 i32)
  (local $31 i32)
  (local $32 i32)
  (local $33 i32)
  (local $34 i32)
  (local $35 i32)
  (local $36 i32)
  (local $37 i32)
  (local $38 i32)
  (local $39 i32)
  (local $40 i32)
  (local $41 i32)
  (local $42 i32)
  (local $43 i32)
  (local $44 f32)
  (local $45 i32)
  (set_local $4
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.const 4416)
   )
  )
  (set_local $21
   (i32.add
    (get_local $4)
    (i32.const 4408)
   )
  )
  (set_local $18
   (i32.add
    (get_local $4)
    (i32.const 4400)
   )
  )
  (set_local $19
   (i32.add
    (get_local $4)
    (i32.const 208)
   )
  )
  (set_local $10
   (i32.add
    (get_local $4)
    (i32.const 96)
   )
  )
  (set_local $22
   (get_local $4)
  )
  (set_local $12
   (i32.load offset=8
    (get_local $0)
   )
  )
  (set_local $6
   (i32.load offset=8
    (tee_local $13
     (i32.load
      (get_local $0)
     )
    )
   )
  )
  (set_local $20
   (i32.load offset=32
    (get_local $13)
   )
  )
  (set_local $3
   (i32.add
    (tee_local $11
     (i32.load offset=4
      (get_local $13)
     )
    )
    (i32.const 2048)
   )
  )
  (set_local $23
   (i32.sub
    (i32.const 0)
    (get_local $1)
   )
  )
  (set_local $4
   (i32.const 0)
  )
  (loop $while-in
   (i32.store
    (i32.add
     (get_local $21)
     (i32.shl
      (get_local $4)
      (i32.const 2)
     )
    )
    (tee_local $7
     (i32.add
      (i32.add
       (get_local $0)
       (i32.const 92)
      )
      (i32.shl
       (i32.mul
        (get_local $4)
        (get_local $3)
       )
       (i32.const 2)
      )
     )
    )
   )
   (i32.store
    (i32.add
     (get_local $18)
     (i32.shl
      (get_local $4)
      (i32.const 2)
     )
    )
    (i32.add
     (i32.sub
      (get_local $7)
      (i32.const -8192)
     )
     (i32.shl
      (get_local $23)
      (i32.const 2)
     )
    )
   )
   (br_if $while-in
    (i32.lt_s
     (tee_local $4
      (i32.add
       (get_local $4)
       (i32.const 1)
      )
     )
     (get_local $12)
    )
   )
  )
  (set_local $15
   (i32.add
    (i32.add
     (get_local $0)
     (i32.const 92)
    )
    (i32.shl
     (i32.mul
      (get_local $3)
      (get_local $12)
     )
     (i32.const 2)
    )
   )
  )
  (if
   (i32.and
    (i32.lt_s
     (tee_local $24
      (i32.load
       (tee_local $27
        (i32.add
         (get_local $0)
         (i32.const 52)
        )
       )
      )
     )
     (i32.const 5)
    )
    (i32.eqz
     (tee_local $3
      (i32.load offset=20
       (get_local $0)
      )
     )
    )
   )
   (if
    (i32.eqz
     (i32.load offset=56
      (get_local $0)
     )
    )
    (block
     (set_local $26
      (if (result f32)
       (tee_local $29
        (i32.eqz
         (get_local $24)
        )
       )
       (block (result f32)
        (set_local $2
         (call $_celt_plc_pitch_search
          (get_local $21)
          (get_local $12)
         )
        )
        (i32.store offset=48
         (get_local $0)
         (get_local $2)
        )
        (f32.const 1)
       )
       (block (result f32)
        (set_local $2
         (i32.load offset=48
          (get_local $0)
         )
        )
        (f32.const 0.800000011920929)
       )
      )
     )
     (set_local $4
      (i32.shl
       (get_local $2)
       (i32.const 1)
      )
     )
     (if
      (i32.ge_s
       (get_local $2)
       (i32.const 512)
      )
      (set_local $4
       (i32.const 1024)
      )
     )
     (set_local $30
      (call $_llvm_stacksave)
     )
     (set_local $20
      (get_global $STACKTOP)
     )
     (set_global $STACKTOP
      (i32.add
       (get_global $STACKTOP)
       (i32.and
        (i32.add
         (i32.shl
          (get_local $11)
          (i32.const 2)
         )
         (i32.const 15)
        )
        (i32.const -16)
       )
      )
     )
     (set_local $16
      (get_global $STACKTOP)
     )
     (set_global $STACKTOP
      (i32.add
       (get_global $STACKTOP)
       (i32.and
        (i32.add
         (i32.shl
          (get_local $4)
          (i32.const 2)
         )
         (i32.const 15)
        )
        (i32.const -16)
       )
      )
     )
     (set_local $17
      (i32.add
       (get_local $19)
       (i32.const 96)
      )
     )
     (set_local $18
      (i32.load offset=60
       (get_local $13)
      )
     )
     (set_local $25
      (i32.add
       (i32.add
        (get_local $19)
        (i32.const 4192)
       )
       (i32.shl
        (i32.sub
         (i32.const 0)
         (get_local $4)
        )
        (i32.const 2)
       )
      )
     )
     (set_local $31
      (i32.shl
       (get_local $4)
       (i32.const 2)
      )
     )
     (set_local $33
      (i32.sub
       (i32.const 1024)
       (tee_local $32
        (i32.shr_s
         (get_local $4)
         (i32.const 1)
        )
       )
      )
     )
     (set_local $34
      (i32.sub
       (i32.const 1024)
       (get_local $4)
      )
     )
     (set_local $35
      (i32.sub
       (i32.const 8192)
       (i32.shl
        (get_local $1)
        (i32.const 2)
       )
      )
     )
     (set_local $14
      (i32.add
       (get_local $11)
       (get_local $1)
      )
     )
     (set_local $37
      (i32.add
       (i32.sub
        (i32.const 1024)
        (get_local $1)
       )
       (tee_local $36
        (i32.sub
         (i32.const 1024)
         (get_local $2)
        )
       )
      )
     )
     (set_local $38
      (i32.add
       (tee_local $13
        (i32.sub
         (i32.const 2048)
         (get_local $1)
        )
       )
       (i32.const -1)
      )
     )
     (set_local $39
      (i32.add
       (get_local $0)
       (i32.const 60)
      )
     )
     (set_local $40
      (i32.add
       (get_local $0)
       (i32.const 68)
      )
     )
     (set_local $41
      (i32.add
       (get_local $0)
       (i32.const 76)
      )
     )
     (set_local $42
      (i32.div_s
       (get_local $11)
       (i32.const 2)
      )
     )
     (set_local $43
      (i32.add
       (get_local $11)
       (i32.const -1)
      )
     )
     (set_local $0
      (i32.const 0)
     )
     (loop $while-in1
      (set_local $7
       (i32.load
        (i32.add
         (get_local $21)
         (i32.shl
          (get_local $0)
          (i32.const 2)
         )
        )
       )
      )
      (set_local $3
       (i32.const 0)
      )
      (loop $while-in3
       (if
        (i32.ne
         (get_local $3)
         (i32.const 1048)
        )
        (block
         (i32.store
          (i32.add
           (get_local $19)
           (i32.shl
            (get_local $3)
            (i32.const 2)
           )
          )
          (i32.load
           (i32.add
            (get_local $7)
            (i32.shl
             (i32.add
              (get_local $3)
              (i32.const 1000)
             )
             (i32.const 2)
            )
           )
          )
         )
         (set_local $3
          (i32.add
           (get_local $3)
           (i32.const 1)
          )
         )
         (br $while-in3)
        )
       )
      )
      (if
       (get_local $29)
       (block
        (call $__celt_autocorr
         (get_local $17)
         (get_local $10)
         (get_local $18)
         (get_local $11)
         (i32.const 24)
         (i32.const 1024)
        )
        (f32.store
         (get_local $10)
         (f32.mul
          (f32.load
           (get_local $10)
          )
          (f32.const 1.000100016593933)
         )
        )
        (set_local $3
         (i32.const 1)
        )
        (loop $while-in5
         (if
          (i32.ne
           (get_local $3)
           (i32.const 25)
          )
          (block
           (set_local $5
            (f32.load
             (tee_local $6
              (i32.add
               (get_local $10)
               (i32.shl
                (get_local $3)
                (i32.const 2)
               )
              )
             )
            )
           )
           (f32.store
            (get_local $6)
            (f32.sub
             (get_local $5)
             (f32.mul
              (f32.mul
               (f32.mul
                (get_local $5)
                (f32.const 6.400000711437315e-05)
               )
               (tee_local $5
                (f32.convert_s/i32
                 (get_local $3)
                )
               )
              )
              (get_local $5)
             )
            )
           )
           (set_local $3
            (i32.add
             (get_local $3)
             (i32.const 1)
            )
           )
           (br $while-in5)
          )
         )
        )
        (call $__celt_lpc
         (tee_local $3
          (i32.add
           (get_local $15)
           (i32.shl
            (i32.mul
             (get_local $0)
             (i32.const 24)
            )
            (i32.const 2)
           )
          )
         )
         (get_local $10)
         (i32.const 24)
        )
       )
       (set_local $3
        (i32.add
         (get_local $15)
         (i32.shl
          (i32.mul
           (get_local $0)
           (i32.const 24)
          )
          (i32.const 2)
         )
        )
       )
      )
      (call $_celt_fir_c
       (get_local $25)
       (get_local $3)
       (get_local $16)
       (get_local $4)
      )
      (drop
       (call $_memcpy
        (get_local $25)
        (get_local $16)
        (get_local $31)
       )
      )
      (set_local $5
       (f32.const 1)
      )
      (set_local $8
       (f32.const 1)
      )
      (set_local $6
       (i32.const 0)
      )
      (loop $while-in7
       (if
        (i32.lt_s
         (get_local $6)
         (get_local $32)
        )
        (block
         (set_local $5
          (f32.add
           (get_local $5)
           (f32.mul
            (tee_local $5
             (f32.load
              (i32.add
               (get_local $17)
               (i32.shl
                (i32.add
                 (get_local $34)
                 (get_local $6)
                )
                (i32.const 2)
               )
              )
             )
            )
            (get_local $5)
           )
          )
         )
         (set_local $8
          (f32.add
           (get_local $8)
           (f32.mul
            (tee_local $8
             (f32.load
              (i32.add
               (get_local $17)
               (i32.shl
                (i32.add
                 (get_local $33)
                 (get_local $6)
                )
                (i32.const 2)
               )
              )
             )
            )
            (get_local $8)
           )
          )
         )
         (set_local $6
          (i32.add
           (get_local $6)
           (i32.const 1)
          )
         )
         (br $while-in7)
        )
       )
      )
      (set_local $28
       (f32.sqrt
        (f32.div
         (if (result f32)
          (f32.lt
           (get_local $8)
           (get_local $5)
          )
          (get_local $8)
          (get_local $5)
         )
         (get_local $5)
        )
       )
      )
      (drop
       (call $_memmove
        (get_local $7)
        (i32.add
         (get_local $7)
         (i32.shl
          (get_local $1)
          (i32.const 2)
         )
        )
        (get_local $35)
       )
      )
      (set_local $8
       (f32.const 0)
      )
      (set_local $5
       (f32.mul
        (get_local $26)
        (get_local $28)
       )
      )
      (set_local $9
       (i32.const 0)
      )
      (set_local $6
       (i32.const 0)
      )
      (loop $while-in9
       (if
        (i32.lt_s
         (get_local $6)
         (get_local $14)
        )
        (block
         (set_local $44
          (f32.mul
           (get_local $5)
           (get_local $28)
          )
         )
         (f32.store
          (i32.add
           (get_local $7)
           (i32.shl
            (i32.add
             (get_local $13)
             (get_local $6)
            )
            (i32.const 2)
           )
          )
          (f32.mul
           (if (result f32)
            (tee_local $45
             (i32.lt_s
              (get_local $9)
              (get_local $2)
             )
            )
            (get_local $5)
            (tee_local $5
             (get_local $44)
            )
           )
           (f32.load
            (i32.add
             (get_local $17)
             (i32.shl
              (i32.add
               (get_local $36)
               (tee_local $9
                (i32.sub
                 (get_local $9)
                 (if (result i32)
                  (get_local $45)
                  (i32.const 0)
                  (get_local $2)
                 )
                )
               )
              )
              (i32.const 2)
             )
            )
           )
          )
         )
         (set_local $8
          (f32.add
           (get_local $8)
           (f32.mul
            (tee_local $8
             (f32.load
              (i32.add
               (get_local $7)
               (i32.shl
                (i32.add
                 (get_local $37)
                 (get_local $9)
                )
                (i32.const 2)
               )
              )
             )
            )
            (get_local $8)
           )
          )
         )
         (set_local $9
          (i32.add
           (get_local $9)
           (i32.const 1)
          )
         )
         (set_local $6
          (i32.add
           (get_local $6)
           (i32.const 1)
          )
         )
         (br $while-in9)
        )
       )
      )
      (set_local $6
       (i32.const 0)
      )
      (loop $while-in11
       (if
        (i32.ne
         (get_local $6)
         (i32.const 24)
        )
        (block
         (i32.store
          (i32.add
           (get_local $22)
           (i32.shl
            (get_local $6)
            (i32.const 2)
           )
          )
          (i32.load
           (i32.add
            (get_local $7)
            (i32.shl
             (i32.sub
              (get_local $38)
              (get_local $6)
             )
             (i32.const 2)
            )
           )
          )
         )
         (set_local $6
          (i32.add
           (get_local $6)
           (i32.const 1)
          )
         )
         (br $while-in11)
        )
       )
      )
      (call $_celt_iir
       (tee_local $9
        (i32.add
         (tee_local $6
          (i32.sub
           (get_local $7)
           (i32.const -8192)
          )
         )
         (i32.shl
          (get_local $23)
          (i32.const 2)
         )
        )
       )
       (get_local $3)
       (get_local $9)
       (get_local $14)
       (get_local $22)
      )
      (set_local $5
       (f32.const 0)
      )
      (set_local $3
       (i32.const 0)
      )
      (loop $while-in13
       (if
        (i32.lt_s
         (get_local $3)
         (get_local $14)
        )
        (block
         (set_local $5
          (f32.add
           (get_local $5)
           (f32.mul
            (tee_local $5
             (f32.load
              (i32.add
               (get_local $7)
               (i32.shl
                (i32.add
                 (get_local $13)
                 (get_local $3)
                )
                (i32.const 2)
               )
              )
             )
            )
            (get_local $5)
           )
          )
         )
         (set_local $3
          (i32.add
           (get_local $3)
           (i32.const 1)
          )
         )
         (br $while-in13)
        )
       )
      )
      (block $label$break$L41
       (if
        (f32.gt
         (get_local $8)
         (f32.mul
          (get_local $5)
          (f32.const 0.20000000298023224)
         )
        )
        (if
         (f32.lt
          (get_local $8)
          (get_local $5)
         )
         (block
          (set_local $8
           (f32.sub
            (f32.const 1)
            (tee_local $5
             (f32.sqrt
              (f32.div
               (f32.add
                (get_local $8)
                (f32.const 1)
               )
               (f32.add
                (get_local $5)
                (f32.const 1)
               )
              )
             )
            )
           )
          )
          (set_local $3
           (i32.const 0)
          )
          (loop $while-in15
           (if
            (i32.lt_s
             (get_local $3)
             (get_local $11)
            )
            (block
             (f32.store
              (tee_local $9
               (i32.add
                (get_local $7)
                (i32.shl
                 (i32.add
                  (get_local $13)
                  (get_local $3)
                 )
                 (i32.const 2)
                )
               )
              )
              (f32.mul
               (f32.sub
                (f32.const 1)
                (f32.mul
                 (f32.load
                  (i32.add
                   (get_local $18)
                   (i32.shl
                    (get_local $3)
                    (i32.const 2)
                   )
                  )
                 )
                 (get_local $8)
                )
               )
               (f32.load
                (get_local $9)
               )
              )
             )
             (set_local $3
              (i32.add
               (get_local $3)
               (i32.const 1)
              )
             )
             (br $while-in15)
            )
           )
          )
          (set_local $3
           (get_local $11)
          )
          (loop $while-in17
           (br_if $label$break$L41
            (i32.ge_s
             (get_local $3)
             (get_local $14)
            )
           )
           (f32.store
            (tee_local $9
             (i32.add
              (get_local $7)
              (i32.shl
               (i32.add
                (get_local $13)
                (get_local $3)
               )
               (i32.const 2)
              )
             )
            )
            (f32.mul
             (get_local $5)
             (f32.load
              (get_local $9)
             )
            )
           )
           (set_local $3
            (i32.add
             (get_local $3)
             (i32.const 1)
            )
           )
           (br $while-in17)
          )
         )
        )
        (block
         (set_local $3
          (i32.const 0)
         )
         (loop $while-in19
          (br_if $label$break$L41
           (i32.ge_s
            (get_local $3)
            (get_local $14)
           )
          )
          (f32.store
           (i32.add
            (get_local $7)
            (i32.shl
             (i32.add
              (get_local $13)
              (get_local $3)
             )
             (i32.const 2)
            )
           )
           (f32.const 0)
          )
          (set_local $3
           (i32.add
            (get_local $3)
            (i32.const 1)
           )
          )
          (br $while-in19)
         )
        )
       )
      )
      (call $_comb_filter
       (get_local $20)
       (get_local $6)
       (tee_local $3
        (i32.load
         (get_local $39)
        )
       )
       (get_local $3)
       (get_local $11)
       (tee_local $5
        (f32.neg
         (f32.load
          (get_local $40)
         )
        )
       )
       (get_local $5)
       (tee_local $3
        (i32.load
         (get_local $41)
        )
       )
       (get_local $3)
       (i32.const 0)
       (i32.const 0)
      )
      (set_local $3
       (i32.const 0)
      )
      (loop $while-in21
       (if
        (i32.lt_s
         (get_local $3)
         (get_local $42)
        )
        (block
         (f32.store
          (i32.add
           (get_local $7)
           (i32.shl
            (i32.add
             (get_local $3)
             (i32.const 2048)
            )
            (i32.const 2)
           )
          )
          (f32.add
           (f32.mul
            (f32.load
             (i32.add
              (get_local $18)
              (i32.shl
               (get_local $3)
               (i32.const 2)
              )
             )
            )
            (f32.load
             (i32.add
              (get_local $20)
              (i32.shl
               (i32.sub
                (get_local $43)
                (get_local $3)
               )
               (i32.const 2)
              )
             )
            )
           )
           (f32.mul
            (f32.load
             (i32.add
              (get_local $18)
              (i32.shl
               (i32.add
                (i32.sub
                 (get_local $11)
                 (get_local $3)
                )
                (i32.const -1)
               )
               (i32.const 2)
              )
             )
            )
            (f32.load
             (i32.add
              (get_local $20)
              (i32.shl
               (get_local $3)
               (i32.const 2)
              )
             )
            )
           )
          )
         )
         (set_local $3
          (i32.add
           (get_local $3)
           (i32.const 1)
          )
         )
         (br $while-in21)
        )
       )
      )
      (br_if $while-in1
       (i32.lt_s
        (tee_local $0
         (i32.add
          (get_local $0)
          (i32.const 1)
         )
        )
        (get_local $12)
       )
      )
     )
     (call $_llvm_stackrestore
      (get_local $30)
     )
     (i32.store
      (get_local $27)
      (i32.add
       (get_local $24)
       (i32.const 1)
      )
     )
     (set_global $STACKTOP
      (get_local $22)
     )
     (return)
    )
   )
  )
  (set_local $15
   (i32.add
    (i32.add
     (i32.add
      (tee_local $19
       (i32.add
        (get_local $15)
        (i32.shl
         (i32.mul
          (get_local $12)
          (i32.const 24)
         )
         (i32.const 2)
        )
       )
      )
      (i32.shl
       (tee_local $4
        (i32.shl
         (get_local $6)
         (i32.const 1)
        )
       )
       (i32.const 2)
      )
     )
     (i32.shl
      (get_local $4)
      (i32.const 2)
     )
    )
    (i32.shl
     (get_local $4)
     (i32.const 2)
    )
   )
  )
  (set_local $14
   (i32.gt_s
    (get_local $3)
    (if (result i32)
     (tee_local $7
      (i32.lt_s
       (tee_local $10
        (i32.load offset=24
         (get_local $0)
        )
       )
       (tee_local $4
        (i32.load offset=12
         (get_local $13)
        )
       )
      )
     )
     (get_local $10)
     (get_local $4)
    )
   )
  )
  (if
   (get_local $7)
   (set_local $4
    (get_local $10)
   )
  )
  (set_local $14
   (if (result i32)
    (get_local $14)
    (get_local $3)
    (get_local $4)
   )
  )
  (set_local $4
   (i32.mul
    (get_local $12)
    (get_local $1)
   )
  )
  (set_local $23
   (call $_llvm_stacksave)
  )
  (set_local $17
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (get_local $4)
       (i32.const 2)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (set_local $26
   (if (result f32)
    (get_local $24)
    (f32.const 0.5)
    (f32.const 1.5)
   )
  )
  (set_local $4
   (i32.const 0)
  )
  (loop $while-in23
   (set_local $9
    (i32.mul
     (get_local $4)
     (get_local $6)
    )
   )
   (set_local $7
    (get_local $3)
   )
   (loop $while-in25
    (if
     (i32.lt_s
      (get_local $7)
      (get_local $10)
     )
     (block
      (set_local $5
       (f32.load
        (i32.add
         (get_local $15)
         (i32.shl
          (tee_local $16
           (i32.add
            (get_local $9)
            (get_local $7)
           )
          )
          (i32.const 2)
         )
        )
       )
      )
      (set_local $8
       (f32.sub
        (f32.load
         (tee_local $16
          (i32.add
           (get_local $19)
           (i32.shl
            (get_local $16)
            (i32.const 2)
           )
          )
         )
        )
        (get_local $26)
       )
      )
      (f32.store
       (get_local $16)
       (if (result f32)
        (f32.gt
         (get_local $5)
         (get_local $8)
        )
        (get_local $5)
        (get_local $8)
       )
      )
      (set_local $7
       (i32.add
        (get_local $7)
        (i32.const 1)
       )
      )
      (br $while-in25)
     )
    )
   )
   (br_if $while-in23
    (i32.lt_s
     (tee_local $4
      (i32.add
       (get_local $4)
       (i32.const 1)
      )
     )
     (get_local $12)
    )
   )
  )
  (set_local $4
   (i32.load
    (tee_local $16
     (i32.add
      (get_local $0)
      (i32.const 40)
     )
    )
   )
  )
  (set_local $10
   (i32.const 0)
  )
  (loop $while-in27
   (if
    (i32.lt_s
     (get_local $10)
     (get_local $12)
    )
    (block
     (set_local $25
      (i32.mul
       (get_local $10)
       (get_local $1)
      )
     )
     (set_local $7
      (get_local $3)
     )
     (loop $while-in29
      (if
       (i32.lt_s
        (get_local $7)
        (get_local $14)
       )
       (block
        (set_local $15
         (i32.add
          (get_local $25)
          (i32.shl
           (tee_local $6
            (i32.load16_s
             (i32.add
              (get_local $20)
              (i32.shl
               (get_local $7)
               (i32.const 1)
              )
             )
            )
           )
           (get_local $2)
          )
         )
        )
        (set_local $9
         (i32.shl
          (i32.sub
           (i32.load16_s
            (i32.add
             (get_local $20)
             (i32.shl
              (tee_local $7
               (i32.add
                (get_local $7)
                (i32.const 1)
               )
              )
              (i32.const 1)
             )
            )
           )
           (get_local $6)
          )
          (get_local $2)
         )
        )
        (set_local $6
         (i32.const 0)
        )
        (loop $while-in31
         (if
          (i32.lt_s
           (get_local $6)
           (get_local $9)
          )
          (block
           (set_local $4
            (call $_celt_lcg_rand
             (get_local $4)
            )
           )
           (f32.store
            (i32.add
             (get_local $17)
             (i32.shl
              (i32.add
               (get_local $15)
               (get_local $6)
              )
              (i32.const 2)
             )
            )
            (f32.convert_s/i32
             (i32.shr_s
              (get_local $4)
              (i32.const 20)
             )
            )
           )
           (set_local $6
            (i32.add
             (get_local $6)
             (i32.const 1)
            )
           )
           (br $while-in31)
          )
         )
        )
        (call $_renormalise_vector
         (i32.add
          (get_local $17)
          (i32.shl
           (get_local $15)
           (i32.const 2)
          )
         )
         (get_local $9)
         (f32.const 1)
        )
        (br $while-in29)
       )
      )
     )
     (set_local $10
      (i32.add
       (get_local $10)
       (i32.const 1)
      )
     )
     (br $while-in27)
    )
   )
  )
  (i32.store
   (get_local $16)
   (get_local $4)
  )
  (set_local $7
   (i32.shl
    (i32.add
     (i32.sub
      (i32.const 2048)
      (get_local $1)
     )
     (i32.shr_u
      (get_local $11)
      (i32.const 1)
     )
    )
    (i32.const 2)
   )
  )
  (set_local $4
   (i32.const 0)
  )
  (loop $while-in33
   (drop
    (call $_memmove
     (tee_local $11
      (i32.load
       (i32.add
        (get_local $21)
        (i32.shl
         (get_local $4)
         (i32.const 2)
        )
       )
      )
     )
     (i32.add
      (get_local $11)
      (i32.shl
       (get_local $1)
       (i32.const 2)
      )
     )
     (get_local $7)
    )
   )
   (br_if $while-in33
    (i32.lt_s
     (tee_local $4
      (i32.add
       (get_local $4)
       (i32.const 1)
      )
     )
     (get_local $12)
    )
   )
  )
  (call $_celt_synthesis
   (get_local $13)
   (get_local $17)
   (get_local $18)
   (get_local $19)
   (get_local $3)
   (get_local $14)
   (get_local $12)
   (get_local $12)
   (i32.const 0)
   (get_local $2)
   (i32.load offset=16
    (get_local $0)
   )
   (i32.const 0)
  )
  (call $_llvm_stackrestore
   (get_local $23)
  )
  (i32.store
   (get_local $27)
   (i32.add
    (get_local $24)
    (i32.const 1)
   )
  )
  (set_global $STACKTOP
   (get_local $22)
  )
 )
 (func $_deemphasis (; 92 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32)
  (local $8 i32)
  (local $9 f32)
  (local $10 i32)
  (local $11 i32)
  (local $12 f32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (set_local $10
   (get_global $STACKTOP)
  )
  (set_local $7
   (i32.eqz
    (get_local $7)
   )
  )
  (if
   (i32.and
    (i32.eq
     (get_local $4)
     (i32.const 1)
    )
    (i32.eq
     (get_local $3)
     (i32.const 2)
    )
   )
   (block
    (if
     (i32.eqz
      (get_local $7)
     )
     (call $_celt_fatal
      (i32.const 42669)
      (i32.const 41792)
      (i32.const 279)
     )
    )
    (call $_deemphasis_stereo_simple
     (i32.load
      (get_local $0)
     )
     (i32.load offset=4
      (get_local $0)
     )
     (get_local $1)
     (get_local $2)
     (f32.load
      (get_local $5)
     )
     (get_local $6)
    )
    (set_global $STACKTOP
     (get_local $10)
    )
    (return)
   )
  )
  (if
   (i32.eqz
    (get_local $7)
   )
   (call $_celt_fatal
    (i32.const 42669)
    (i32.const 41792)
    (i32.const 279)
   )
  )
  (set_local $16
   (call $_llvm_stacksave)
  )
  (set_local $11
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (get_local $2)
       (i32.const 2)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (set_local $12
   (f32.load
    (get_local $5)
   )
  )
  (set_local $17
   (i32.div_s
    (get_local $2)
    (get_local $4)
   )
  )
  (set_local $18
   (i32.gt_s
    (get_local $4)
    (i32.const 1)
   )
  )
  (set_local $5
   (i32.const 0)
  )
  (set_local $7
   (i32.const 0)
  )
  (loop $while-in
   (set_local $9
    (f32.load
     (tee_local $13
      (i32.add
       (get_local $6)
       (i32.shl
        (get_local $7)
        (i32.const 2)
       )
      )
     )
    )
   )
   (set_local $14
    (i32.load
     (i32.add
      (get_local $0)
      (i32.shl
       (get_local $7)
       (i32.const 2)
      )
     )
    )
   )
   (set_local $15
    (i32.add
     (get_local $1)
     (i32.shl
      (get_local $7)
      (i32.const 2)
     )
    )
   )
   (block $label$break$L24
    (block $__rjti$0
     (set_local $5
      (if (result i32)
       (get_local $18)
       (block
        (set_local $5
         (i32.const 0)
        )
        (loop $while-in1
         (if
          (i32.lt_s
           (get_local $5)
           (get_local $2)
          )
          (block
           (f32.store
            (i32.add
             (get_local $11)
             (i32.shl
              (get_local $5)
              (i32.const 2)
             )
            )
            (tee_local $9
             (f32.add
              (f32.add
               (f32.load
                (i32.add
                 (get_local $14)
                 (i32.shl
                  (get_local $5)
                  (i32.const 2)
                 )
                )
               )
               (f32.const 1.0000000031710769e-30)
              )
              (get_local $9)
             )
            )
           )
           (set_local $9
            (f32.mul
             (get_local $12)
             (get_local $9)
            )
           )
           (set_local $5
            (i32.add
             (get_local $5)
             (i32.const 1)
            )
           )
           (br $while-in1)
          )
         )
        )
        (f32.store
         (get_local $13)
         (get_local $9)
        )
        (set_local $5
         (i32.const 1)
        )
        (br $__rjti$0)
       )
       (block (result i32)
        (set_local $8
         (i32.const 0)
        )
        (loop $while-in3
         (if
          (i32.lt_s
           (get_local $8)
           (get_local $2)
          )
          (block
           (f32.store
            (i32.add
             (get_local $15)
             (i32.shl
              (i32.mul
               (get_local $8)
               (get_local $3)
              )
              (i32.const 2)
             )
            )
            (f32.mul
             (tee_local $9
              (f32.add
               (f32.add
                (f32.load
                 (i32.add
                  (get_local $14)
                  (i32.shl
                   (get_local $8)
                   (i32.const 2)
                  )
                 )
                )
                (f32.const 1.0000000031710769e-30)
               )
               (get_local $9)
              )
             )
             (f32.const 0.000030517578125)
            )
           )
           (set_local $9
            (f32.mul
             (get_local $12)
             (get_local $9)
            )
           )
           (set_local $8
            (i32.add
             (get_local $8)
             (i32.const 1)
            )
           )
           (br $while-in3)
          )
         )
        )
        (f32.store
         (get_local $13)
         (get_local $9)
        )
        (if (result i32)
         (get_local $5)
         (br $__rjti$0)
         (i32.const 0)
        )
       )
      )
     )
     (br $label$break$L24)
    )
    (set_local $8
     (i32.const 0)
    )
    (loop $while-in5
     (if
      (i32.lt_s
       (get_local $8)
       (get_local $17)
      )
      (block
       (f32.store
        (i32.add
         (get_local $15)
         (i32.shl
          (i32.mul
           (get_local $8)
           (get_local $3)
          )
          (i32.const 2)
         )
        )
        (f32.mul
         (f32.load
          (i32.add
           (get_local $11)
           (i32.shl
            (i32.mul
             (get_local $8)
             (get_local $4)
            )
            (i32.const 2)
           )
          )
         )
         (f32.const 0.000030517578125)
        )
       )
       (set_local $8
        (i32.add
         (get_local $8)
         (i32.const 1)
        )
       )
       (br $while-in5)
      )
     )
    )
   )
   (br_if $while-in
    (i32.lt_s
     (tee_local $7
      (i32.add
       (get_local $7)
       (i32.const 1)
      )
     )
     (get_local $3)
    )
   )
  )
  (call $_llvm_stackrestore
   (get_local $16)
  )
  (set_global $STACKTOP
   (get_local $10)
  )
 )
 (func $_tf_decode (; 93 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (set_local $6
   (i32.shl
    (i32.load offset=4
     (get_local $5)
    )
    (i32.const 3)
   )
  )
  (set_local $8
   (call $_ec_tell
    (i32.load
     (tee_local $11
      (i32.add
       (get_local $5)
       (i32.const 20)
      )
     )
    )
    (i32.load
     (tee_local $12
      (i32.add
       (get_local $5)
       (i32.const 28)
      )
     )
    )
   )
  )
  (set_local $9
   (if (result i32)
    (tee_local $7
     (i32.eqz
      (get_local $2)
     )
    )
    (i32.const 4)
    (i32.const 2)
   )
  )
  (set_local $14
   (i32.sub
    (get_local $6)
    (tee_local $13
     (if (result i32)
      (i32.gt_s
       (get_local $4)
       (i32.const 0)
      )
      (i32.le_u
       (i32.add
        (i32.add
         (get_local $8)
         (get_local $9)
        )
        (i32.const 1)
       )
       (get_local $6)
      )
      (i32.const 0)
     )
    )
   )
  )
  (set_local $15
   (if (result i32)
    (get_local $7)
    (i32.const 5)
    (i32.const 4)
   )
  )
  (set_local $7
   (i32.const 0)
  )
  (set_local $6
   (i32.const 0)
  )
  (set_local $10
   (get_local $0)
  )
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $10)
     (get_local $1)
    )
    (block
     (if
      (i32.le_u
       (i32.add
        (get_local $8)
        (get_local $9)
       )
       (get_local $14)
      )
      (block
       (set_local $8
        (call $_ec_dec_bit_logp
         (get_local $5)
         (get_local $9)
        )
       )
       (set_local $6
        (i32.xor
         (get_local $6)
         (get_local $8)
        )
       )
       (set_local $8
        (call $_ec_tell
         (i32.load
          (get_local $11)
         )
         (i32.load
          (get_local $12)
         )
        )
       )
       (set_local $7
        (i32.or
         (get_local $7)
         (get_local $6)
        )
       )
      )
     )
     (i32.store
      (i32.add
       (get_local $3)
       (i32.shl
        (get_local $10)
        (i32.const 2)
       )
      )
      (get_local $6)
     )
     (set_local $9
      (get_local $15)
     )
     (set_local $10
      (i32.add
       (get_local $10)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (set_local $2
   (i32.shl
    (get_local $2)
    (i32.const 2)
   )
  )
  (set_local $5
   (if (result i32)
    (get_local $13)
    (if (result i32)
     (i32.eq
      (i32.load8_s
       (i32.add
        (i32.add
         (i32.shl
          (get_local $4)
          (i32.const 3)
         )
         (i32.const 1200)
        )
        (i32.add
         (get_local $2)
         (get_local $7)
        )
       )
      )
      (i32.load8_s
       (i32.add
        (i32.add
         (i32.shl
          (get_local $4)
          (i32.const 3)
         )
         (i32.const 1200)
        )
        (i32.add
         (i32.or
          (get_local $2)
          (i32.const 2)
         )
         (get_local $7)
        )
       )
      )
     )
     (i32.const 0)
     (i32.shl
      (call $_ec_dec_bit_logp
       (get_local $5)
       (i32.const 1)
      )
      (i32.const 1)
     )
    )
    (i32.const 0)
   )
  )
  (set_local $2
   (i32.add
    (get_local $2)
    (get_local $5)
   )
  )
  (loop $while-in1
   (if
    (i32.lt_s
     (get_local $0)
     (get_local $1)
    )
    (block
     (i32.store
      (tee_local $5
       (i32.add
        (get_local $3)
        (i32.shl
         (get_local $0)
         (i32.const 2)
        )
       )
      )
      (i32.load8_s
       (i32.add
        (i32.add
         (i32.shl
          (get_local $4)
          (i32.const 3)
         )
         (i32.const 1200)
        )
        (i32.add
         (get_local $2)
         (i32.load
          (get_local $5)
         )
        )
       )
      )
     )
     (set_local $0
      (i32.add
       (get_local $0)
       (i32.const 1)
      )
     )
     (br $while-in1)
    )
   )
  )
 )
 (func $_celt_synthesis (; 94 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (param $8 i32) (param $9 i32) (param $10 i32) (param $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (set_local $19
   (get_global $STACKTOP)
  )
  (set_local $14
   (i32.load offset=4
    (get_local $0)
   )
  )
  (set_local $21
   (i32.load offset=8
    (get_local $0)
   )
  )
  (set_local $12
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (tee_local $15
        (i32.shl
         (tee_local $13
          (i32.load
           (tee_local $22
            (i32.add
             (get_local $0)
             (i32.const 44)
            )
           )
          )
         )
         (get_local $9)
        )
       )
       (i32.const 2)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (set_local $16
   (i32.shl
    (i32.const 1)
    (get_local $9)
   )
  )
  (set_local $20
   (i32.load offset=36
    (get_local $0)
   )
  )
  (set_local $8
   (if (result i32)
    (tee_local $17
     (i32.eqz
      (get_local $8)
     )
    )
    (i32.const 1)
    (get_local $16)
   )
  )
  (set_local $18
   (if (result i32)
    (get_local $17)
    (get_local $15)
    (get_local $13)
   )
  )
  (set_local $9
   (i32.sub
    (get_local $20)
    (if (result i32)
     (get_local $17)
     (get_local $9)
     (i32.const 0)
    )
   )
  )
  (block $switch-default
   (block $switch-case6
    (block $switch-case
     (br_table $switch-case6 $switch-case $switch-default
      (i32.sub
       (get_local $7)
       (i32.const 1)
      )
     )
    )
    (if
     (i32.eq
      (get_local $6)
      (i32.const 1)
     )
     (block
      (call $_denormalise_bands
       (i32.load offset=32
        (get_local $0)
       )
       (get_local $13)
       (get_local $1)
       (get_local $12)
       (get_local $3)
       (get_local $4)
       (get_local $5)
       (get_local $16)
       (get_local $10)
       (get_local $11)
      )
      (drop
       (call $_memcpy
        (tee_local $5
         (i32.add
          (i32.load
           (tee_local $4
            (i32.add
             (get_local $2)
             (i32.const 4)
            )
           )
          )
          (i32.shl
           (i32.div_s
            (get_local $14)
            (i32.const 2)
           )
           (i32.const 2)
          )
         )
        )
        (get_local $12)
        (i32.shl
         (get_local $15)
         (i32.const 2)
        )
       )
      )
      (set_local $1
       (i32.sub
        (get_local $0)
        (i32.const -64)
       )
      )
      (set_local $3
       (i32.add
        (get_local $0)
        (i32.const 60)
       )
      )
      (set_local $0
       (i32.const 0)
      )
      (loop $while-in
       (if
        (i32.lt_s
         (get_local $0)
         (get_local $8)
        )
        (block
         (call $_clt_mdct_backward_c
          (get_local $1)
          (i32.add
           (get_local $5)
           (i32.shl
            (get_local $0)
            (i32.const 2)
           )
          )
          (i32.add
           (i32.load
            (get_local $2)
           )
           (i32.shl
            (i32.mul
             (get_local $18)
             (get_local $0)
            )
            (i32.const 2)
           )
          )
          (i32.load
           (get_local $3)
          )
          (get_local $14)
          (get_local $9)
          (get_local $8)
         )
         (set_local $0
          (i32.add
           (get_local $0)
           (i32.const 1)
          )
         )
         (br $while-in)
        )
       )
      )
      (set_local $0
       (i32.const 0)
      )
      (loop $while-in1
       (if
        (i32.lt_s
         (get_local $0)
         (get_local $8)
        )
        (block
         (call $_clt_mdct_backward_c
          (get_local $1)
          (i32.add
           (get_local $12)
           (i32.shl
            (get_local $0)
            (i32.const 2)
           )
          )
          (i32.add
           (i32.load
            (get_local $4)
           )
           (i32.shl
            (i32.mul
             (get_local $18)
             (get_local $0)
            )
            (i32.const 2)
           )
          )
          (i32.load
           (get_local $3)
          )
          (get_local $14)
          (get_local $9)
          (get_local $8)
         )
         (set_local $0
          (i32.add
           (get_local $0)
           (i32.const 1)
          )
         )
         (br $while-in1)
        )
       )
      )
      (set_global $STACKTOP
       (get_local $19)
      )
      (return)
     )
    )
    (br $switch-default)
   )
   (if
    (i32.eq
     (get_local $6)
     (i32.const 2)
    )
    (block
     (set_local $6
      (i32.add
       (i32.load
        (get_local $2)
       )
       (i32.shl
        (i32.div_s
         (get_local $14)
         (i32.const 2)
        )
        (i32.const 2)
       )
      )
     )
     (call $_denormalise_bands
      (i32.load
       (tee_local $7
        (i32.add
         (get_local $0)
         (i32.const 32)
        )
       )
      )
      (get_local $13)
      (get_local $1)
      (get_local $12)
      (get_local $3)
      (get_local $4)
      (get_local $5)
      (get_local $16)
      (get_local $10)
      (get_local $11)
     )
     (call $_denormalise_bands
      (i32.load
       (get_local $7)
      )
      (i32.load
       (get_local $22)
      )
      (i32.add
       (get_local $1)
       (i32.shl
        (get_local $15)
        (i32.const 2)
       )
      )
      (get_local $6)
      (i32.add
       (get_local $3)
       (i32.shl
        (get_local $21)
        (i32.const 2)
       )
      )
      (get_local $4)
      (get_local $5)
      (get_local $16)
      (get_local $10)
      (get_local $11)
     )
     (set_local $1
      (i32.const 0)
     )
     (loop $while-in3
      (if
       (i32.lt_s
        (get_local $1)
        (get_local $15)
       )
       (block
        (f32.store
         (tee_local $3
          (i32.add
           (get_local $12)
           (i32.shl
            (get_local $1)
            (i32.const 2)
           )
          )
         )
         (f32.add
          (f32.mul
           (f32.load
            (get_local $3)
           )
           (f32.const 0.5)
          )
          (f32.mul
           (f32.load
            (i32.add
             (get_local $6)
             (i32.shl
              (get_local $1)
              (i32.const 2)
             )
            )
           )
           (f32.const 0.5)
          )
         )
        )
        (set_local $1
         (i32.add
          (get_local $1)
          (i32.const 1)
         )
        )
        (br $while-in3)
       )
      )
     )
     (set_local $1
      (i32.sub
       (get_local $0)
       (i32.const -64)
      )
     )
     (set_local $3
      (i32.add
       (get_local $0)
       (i32.const 60)
      )
     )
     (set_local $0
      (i32.const 0)
     )
     (loop $while-in5
      (if
       (i32.lt_s
        (get_local $0)
        (get_local $8)
       )
       (block
        (call $_clt_mdct_backward_c
         (get_local $1)
         (i32.add
          (get_local $12)
          (i32.shl
           (get_local $0)
           (i32.const 2)
          )
         )
         (i32.add
          (i32.load
           (get_local $2)
          )
          (i32.shl
           (i32.mul
            (get_local $18)
            (get_local $0)
           )
           (i32.const 2)
          )
         )
         (i32.load
          (get_local $3)
         )
         (get_local $14)
         (get_local $9)
         (get_local $8)
        )
        (set_local $0
         (i32.add
          (get_local $0)
          (i32.const 1)
         )
        )
        (br $while-in5)
       )
      )
     )
     (set_global $STACKTOP
      (get_local $19)
     )
     (return)
    )
   )
  )
  (set_local $17
   (i32.add
    (get_local $0)
    (i32.const 32)
   )
  )
  (set_local $20
   (i32.sub
    (get_local $0)
    (i32.const -64)
   )
  )
  (set_local $23
   (i32.add
    (get_local $0)
    (i32.const 60)
   )
  )
  (set_local $0
   (i32.const 0)
  )
  (loop $while-in8
   (call $_denormalise_bands
    (i32.load
     (get_local $17)
    )
    (get_local $13)
    (i32.add
     (get_local $1)
     (i32.shl
      (i32.mul
       (get_local $0)
       (get_local $15)
      )
      (i32.const 2)
     )
    )
    (get_local $12)
    (i32.add
     (get_local $3)
     (i32.shl
      (i32.mul
       (get_local $0)
       (get_local $21)
      )
      (i32.const 2)
     )
    )
    (get_local $4)
    (get_local $5)
    (get_local $16)
    (get_local $10)
    (get_local $11)
   )
   (set_local $13
    (i32.add
     (get_local $2)
     (i32.shl
      (get_local $0)
      (i32.const 2)
     )
    )
   )
   (set_local $6
    (i32.const 0)
   )
   (loop $while-in10
    (if
     (i32.lt_s
      (get_local $6)
      (get_local $8)
     )
     (block
      (call $_clt_mdct_backward_c
       (get_local $20)
       (i32.add
        (get_local $12)
        (i32.shl
         (get_local $6)
         (i32.const 2)
        )
       )
       (i32.add
        (i32.load
         (get_local $13)
        )
        (i32.shl
         (i32.mul
          (get_local $18)
          (get_local $6)
         )
         (i32.const 2)
        )
       )
       (i32.load
        (get_local $23)
       )
       (get_local $14)
       (get_local $9)
       (get_local $8)
      )
      (set_local $6
       (i32.add
        (get_local $6)
        (i32.const 1)
       )
      )
      (br $while-in10)
     )
    )
   )
   (if
    (i32.lt_s
     (tee_local $0
      (i32.add
       (get_local $0)
       (i32.const 1)
      )
     )
     (get_local $7)
    )
    (block
     (set_local $13
      (i32.load
       (get_local $22)
      )
     )
     (br $while-in8)
    )
   )
  )
  (set_global $STACKTOP
   (get_local $19)
  )
 )
 (func $_deemphasis_stereo_simple (; 95 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 f32) (param $5 i32)
  (local $6 i32)
  (local $7 f32)
  (local $8 f32)
  (local $9 i32)
  (local $10 i32)
  (set_local $7
   (f32.load
    (tee_local $9
     (i32.add
      (get_local $5)
      (i32.const 4)
     )
    )
   )
  )
  (set_local $8
   (f32.load
    (get_local $5)
   )
  )
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $6)
     (get_local $3)
    )
    (block
     (set_local $7
      (f32.add
       (f32.add
        (f32.load
         (i32.add
          (get_local $1)
          (i32.shl
           (get_local $6)
           (i32.const 2)
          )
         )
        )
        (f32.const 1.0000000031710769e-30)
       )
       (get_local $7)
      )
     )
     (f32.store
      (i32.add
       (get_local $2)
       (i32.shl
        (tee_local $10
         (i32.shl
          (get_local $6)
          (i32.const 1)
         )
        )
        (i32.const 2)
       )
      )
      (f32.mul
       (tee_local $8
        (f32.add
         (f32.add
          (f32.load
           (i32.add
            (get_local $0)
            (i32.shl
             (get_local $6)
             (i32.const 2)
            )
           )
          )
          (f32.const 1.0000000031710769e-30)
         )
         (get_local $8)
        )
       )
       (f32.const 0.000030517578125)
      )
     )
     (f32.store
      (i32.add
       (get_local $2)
       (i32.shl
        (i32.or
         (get_local $10)
         (i32.const 1)
        )
        (i32.const 2)
       )
      )
      (f32.mul
       (get_local $7)
       (f32.const 0.000030517578125)
      )
     )
     (set_local $6
      (i32.add
       (get_local $6)
       (i32.const 1)
      )
     )
     (set_local $7
      (f32.mul
       (get_local $7)
       (get_local $4)
      )
     )
     (set_local $8
      (f32.mul
       (get_local $8)
       (get_local $4)
      )
     )
     (br $while-in)
    )
   )
  )
  (f32.store
   (get_local $5)
   (get_local $8)
  )
  (f32.store
   (get_local $9)
   (get_local $7)
  )
 )
 (func $_celt_plc_pitch_search (; 96 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (set_local $2
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.const 4112)
   )
  )
  (set_local $3
   (i32.add
    (get_local $2)
    (i32.const 4096)
   )
  )
  (call $_pitch_downsample
   (get_local $0)
   (get_local $2)
   (i32.const 2048)
   (get_local $1)
  )
  (call $_pitch_search
   (i32.add
    (get_local $2)
    (i32.const 1440)
   )
   (get_local $2)
   (i32.const 1328)
   (i32.const 620)
   (get_local $3)
  )
  (set_local $0
   (i32.sub
    (i32.const 720)
    (i32.load
     (get_local $3)
    )
   )
  )
  (set_global $STACKTOP
   (get_local $2)
  )
  (get_local $0)
 )
 (func $_encode_pulses (; 97 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (if
   (i32.gt_s
    (get_local $2)
    (i32.const 0)
   )
   (block
    (set_local $4
     (call $_icwrs
      (get_local $1)
      (get_local $0)
     )
    )
    (set_local $0
     (i32.add
      (get_local $2)
      (i32.const 1)
     )
    )
    (call $_ec_enc_uint
     (get_local $3)
     (get_local $4)
     (i32.add
      (i32.load
       (i32.add
        (i32.load
         (i32.add
          (i32.shl
           (if (result i32)
            (i32.lt_s
             (get_local $1)
             (get_local $2)
            )
            (get_local $1)
            (get_local $2)
           )
           (i32.const 2)
          )
          (i32.const 1600)
         )
        )
        (i32.shl
         (if (result i32)
          (tee_local $3
           (i32.gt_s
            (get_local $1)
            (get_local $2)
           )
          )
          (get_local $1)
          (get_local $2)
         )
         (i32.const 2)
        )
       )
      )
      (i32.load
       (i32.add
        (i32.load
         (i32.add
          (i32.shl
           (if (result i32)
            (get_local $3)
            (get_local $0)
            (get_local $1)
           )
           (i32.const 2)
          )
          (i32.const 1600)
         )
        )
        (i32.shl
         (if (result i32)
          (i32.lt_s
           (get_local $0)
           (get_local $1)
          )
          (get_local $1)
          (get_local $0)
         )
         (i32.const 2)
        )
       )
      )
     )
    )
   )
   (call $_celt_fatal
    (i32.const 42696)
    (i32.const 42719)
    (i32.const 459)
   )
  )
 )
 (func $_icwrs (; 98 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (if
   (i32.le_s
    (get_local $0)
    (i32.const 1)
   )
   (call $_celt_fatal
    (i32.const 42731)
    (i32.const 42719)
    (i32.const 444)
   )
  )
  (set_local $4
   (i32.shr_u
    (tee_local $2
     (i32.load
      (i32.add
       (get_local $1)
       (i32.shl
        (tee_local $7
         (i32.add
          (get_local $0)
          (i32.const -1)
         )
        )
        (i32.const 2)
       )
      )
     )
    )
    (i32.const 31)
   )
  )
  (set_local $6
   (i32.sub
    (i32.const 0)
    (get_local $2)
   )
  )
  (if
   (i32.le_s
    (get_local $2)
    (i32.const -1)
   )
   (set_local $2
    (get_local $6)
   )
  )
  (loop $while-in
   (set_local $4
    (i32.add
     (get_local $4)
     (i32.load
      (i32.add
       (i32.load
        (i32.add
         (i32.shl
          (if (result i32)
           (i32.lt_s
            (tee_local $3
             (i32.sub
              (get_local $0)
              (tee_local $6
               (i32.add
                (get_local $7)
                (i32.const -1)
               )
              )
             )
            )
            (get_local $2)
           )
           (get_local $3)
           (get_local $2)
          )
          (i32.const 2)
         )
         (i32.const 1600)
        )
       )
       (i32.shl
        (if (result i32)
         (i32.gt_s
          (get_local $3)
          (get_local $2)
         )
         (get_local $3)
         (get_local $2)
        )
        (i32.const 2)
       )
      )
     )
    )
   )
   (set_local $5
    (i32.sub
     (i32.const 0)
     (tee_local $8
      (i32.load
       (i32.add
        (get_local $1)
        (i32.shl
         (get_local $6)
         (i32.const 2)
        )
       )
      )
     )
    )
   )
   (set_local $2
    (i32.add
     (get_local $2)
     (if (result i32)
      (i32.gt_s
       (get_local $8)
       (i32.const -1)
      )
      (get_local $8)
      (get_local $5)
     )
    )
   )
   (if
    (i32.lt_s
     (get_local $8)
     (i32.const 0)
    )
    (block
     (set_local $5
      (i32.add
       (get_local $2)
       (i32.const 1)
      )
     )
     (set_local $4
      (i32.add
       (get_local $4)
       (i32.load
        (i32.add
         (i32.load
          (i32.add
           (i32.shl
            (if (result i32)
             (i32.gt_s
              (get_local $3)
              (get_local $2)
             )
             (get_local $5)
             (get_local $3)
            )
            (i32.const 2)
           )
           (i32.const 1600)
          )
         )
         (i32.shl
          (if (result i32)
           (i32.gt_s
            (get_local $3)
            (get_local $5)
           )
           (get_local $3)
           (get_local $5)
          )
          (i32.const 2)
         )
        )
       )
      )
     )
    )
   )
   (if
    (i32.gt_s
     (get_local $7)
     (i32.const 1)
    )
    (block
     (set_local $7
      (get_local $6)
     )
     (br $while-in)
    )
   )
  )
  (get_local $4)
 )
 (func $_decode_pulses (; 99 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result f32)
  (local $4 i32)
  (set_local $4
   (i32.add
    (get_local $2)
    (i32.const 1)
   )
  )
  (set_local $3
   (call $_ec_dec_uint
    (get_local $3)
    (i32.add
     (i32.load
      (i32.add
       (i32.load
        (i32.add
         (i32.shl
          (if (result i32)
           (i32.lt_s
            (get_local $1)
            (get_local $2)
           )
           (get_local $1)
           (get_local $2)
          )
          (i32.const 2)
         )
         (i32.const 1600)
        )
       )
       (i32.shl
        (if (result i32)
         (tee_local $3
          (i32.gt_s
           (get_local $1)
           (get_local $2)
          )
         )
         (get_local $1)
         (get_local $2)
        )
        (i32.const 2)
       )
      )
     )
     (i32.load
      (i32.add
       (i32.load
        (i32.add
         (i32.shl
          (if (result i32)
           (get_local $3)
           (get_local $4)
           (get_local $1)
          )
          (i32.const 2)
         )
         (i32.const 1600)
        )
       )
       (i32.shl
        (if (result i32)
         (i32.lt_s
          (get_local $4)
          (get_local $1)
         )
         (get_local $1)
         (get_local $4)
        )
        (i32.const 2)
       )
      )
     )
    )
   )
  )
  (call $_cwrsi
   (get_local $1)
   (get_local $2)
   (get_local $3)
   (get_local $0)
  )
 )
 (func $_cwrsi (; 100 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result f32)
  (local $4 i32)
  (local $5 f32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (if
   (i32.le_s
    (get_local $1)
    (i32.const 0)
   )
   (call $_celt_fatal
    (i32.const 42696)
    (i32.const 42719)
    (i32.const 469)
   )
  )
  (if
   (i32.le_s
    (get_local $0)
    (i32.const 1)
   )
   (call $_celt_fatal
    (i32.const 42755)
    (i32.const 42719)
    (i32.const 470)
   )
  )
  (set_local $4
   (get_local $0)
  )
  (loop $while-in
   (if
    (i32.gt_s
     (get_local $4)
     (i32.const 2)
    )
    (block
     (block $do-once
      (set_local $1
       (if (result i32)
        (i32.lt_s
         (get_local $1)
         (get_local $4)
        )
        (block (result i32)
         (if
          (i32.and
           (i32.ge_u
            (get_local $2)
            (tee_local $6
             (i32.load
              (i32.add
               (i32.load
                (i32.add
                 (i32.shl
                  (get_local $1)
                  (i32.const 2)
                 )
                 (i32.const 1600)
                )
               )
               (i32.shl
                (get_local $4)
                (i32.const 2)
               )
              )
             )
            )
           )
           (i32.lt_u
            (get_local $2)
            (tee_local $0
             (i32.load
              (i32.add
               (i32.load
                (i32.add
                 (i32.shl
                  (get_local $1)
                  (i32.const 2)
                 )
                 (i32.const 1604)
                )
               )
               (i32.shl
                (get_local $4)
                (i32.const 2)
               )
              )
             )
            )
           )
          )
          (block
           (i32.store
            (get_local $3)
            (i32.const 0)
           )
           (set_local $2
            (i32.sub
             (get_local $2)
             (get_local $6)
            )
           )
           (br $do-once)
          )
         )
         (set_local $6
          (i32.sub
           (get_local $2)
           (i32.and
            (get_local $0)
            (tee_local $2
             (i32.shr_s
              (i32.shl
               (i32.ge_u
                (get_local $2)
                (get_local $0)
               )
               (i32.const 31)
              )
              (i32.const 31)
             )
            )
           )
          )
         )
         (set_local $0
          (get_local $1)
         )
         (loop $while-in1
          (br_if $while-in1
           (i32.lt_u
            (get_local $6)
            (tee_local $7
             (i32.load
              (i32.add
               (i32.load
                (i32.add
                 (i32.shl
                  (tee_local $0
                   (i32.add
                    (get_local $0)
                    (i32.const -1)
                   )
                  )
                  (i32.const 2)
                 )
                 (i32.const 1600)
                )
               )
               (i32.shl
                (get_local $4)
                (i32.const 2)
               )
              )
             )
            )
           )
          )
         )
         (i32.store
          (get_local $3)
          (i32.shr_s
           (i32.shl
            (tee_local $1
             (i32.xor
              (i32.add
               (i32.sub
                (get_local $1)
                (get_local $0)
               )
               (get_local $2)
              )
              (get_local $2)
             )
            )
            (i32.const 16)
           )
           (i32.const 16)
          )
         )
         (set_local $5
          (f32.add
           (get_local $5)
           (f32.mul
            (tee_local $5
             (f32.convert_s/i32
              (i32.shr_s
               (i32.shl
                (i32.and
                 (get_local $1)
                 (i32.const 65535)
                )
                (i32.const 16)
               )
               (i32.const 16)
              )
             )
            )
            (get_local $5)
           )
          )
         )
         (set_local $2
          (i32.sub
           (get_local $6)
           (get_local $7)
          )
         )
         (get_local $0)
        )
        (block (result i32)
         (set_local $6
          (i32.shr_s
           (i32.shl
            (i32.ge_u
             (get_local $2)
             (tee_local $0
              (i32.load
               (i32.add
                (tee_local $8
                 (i32.load
                  (i32.add
                   (i32.shl
                    (get_local $4)
                    (i32.const 2)
                   )
                   (i32.const 1600)
                  )
                 )
                )
                (i32.shl
                 (i32.add
                  (get_local $1)
                  (i32.const 1)
                 )
                 (i32.const 2)
                )
               )
              )
             )
            )
            (i32.const 31)
           )
           (i32.const 31)
          )
         )
         (if
          (i32.gt_u
           (i32.load
            (i32.add
             (get_local $8)
             (i32.shl
              (get_local $4)
              (i32.const 2)
             )
            )
           )
           (tee_local $7
            (i32.sub
             (get_local $2)
             (i32.and
              (get_local $0)
              (get_local $6)
             )
            )
           )
          )
          (block
           (set_local $0
            (get_local $4)
           )
           (loop $while-in4
            (br_if $while-in4
             (i32.gt_u
              (tee_local $2
               (i32.load
                (i32.add
                 (i32.load
                  (i32.add
                   (i32.shl
                    (tee_local $0
                     (i32.add
                      (get_local $0)
                      (i32.const -1)
                     )
                    )
                    (i32.const 2)
                   )
                   (i32.const 1600)
                  )
                 )
                 (i32.shl
                  (get_local $4)
                  (i32.const 2)
                 )
                )
               )
              )
              (get_local $7)
             )
            )
           )
          )
          (block
           (set_local $0
            (get_local $1)
           )
           (loop $while-in6
            (if
             (i32.gt_u
              (tee_local $2
               (i32.load
                (i32.add
                 (get_local $8)
                 (i32.shl
                  (get_local $0)
                  (i32.const 2)
                 )
                )
               )
              )
              (get_local $7)
             )
             (block
              (set_local $0
               (i32.add
                (get_local $0)
                (i32.const -1)
               )
              )
              (br $while-in6)
             )
            )
           )
          )
         )
         (i32.store
          (get_local $3)
          (i32.shr_s
           (i32.shl
            (tee_local $1
             (i32.xor
              (i32.add
               (i32.sub
                (get_local $1)
                (get_local $0)
               )
               (get_local $6)
              )
              (get_local $6)
             )
            )
            (i32.const 16)
           )
           (i32.const 16)
          )
         )
         (set_local $5
          (f32.add
           (get_local $5)
           (f32.mul
            (tee_local $5
             (f32.convert_s/i32
              (i32.shr_s
               (i32.shl
                (i32.and
                 (get_local $1)
                 (i32.const 65535)
                )
                (i32.const 16)
               )
               (i32.const 16)
              )
             )
            )
            (get_local $5)
           )
          )
         )
         (set_local $2
          (i32.sub
           (get_local $7)
           (get_local $2)
          )
         )
         (get_local $0)
        )
       )
      )
     )
     (set_local $4
      (i32.add
       (get_local $4)
       (i32.const -1)
      )
     )
     (set_local $3
      (i32.add
       (get_local $3)
       (i32.const 4)
      )
     )
     (br $while-in)
    )
   )
  )
  (set_local $4
   (i32.shr_s
    (i32.shl
     (i32.ge_u
      (get_local $2)
      (tee_local $0
       (i32.or
        (i32.shl
         (get_local $1)
         (i32.const 1)
        )
        (i32.const 1)
       )
      )
     )
     (i32.const 31)
    )
    (i32.const 31)
   )
  )
  (if
   (tee_local $2
    (i32.shr_u
     (tee_local $6
      (i32.add
       (tee_local $0
        (i32.sub
         (get_local $2)
         (i32.and
          (get_local $0)
          (get_local $4)
         )
        )
       )
       (i32.const 1)
      )
     )
     (i32.const 1)
    )
   )
   (set_local $0
    (i32.sub
     (get_local $0)
     (i32.add
      (i32.and
       (get_local $6)
       (i32.const -2)
      )
      (i32.const -1)
     )
    )
   )
  )
  (i32.store
   (get_local $3)
   (i32.shr_s
    (i32.shl
     (tee_local $1
      (i32.xor
       (i32.add
        (i32.sub
         (get_local $1)
         (get_local $2)
        )
        (get_local $4)
       )
       (get_local $4)
      )
     )
     (i32.const 16)
    )
    (i32.const 16)
   )
  )
  (i32.store offset=4
   (get_local $3)
   (i32.shr_s
    (i32.shl
     (tee_local $0
      (i32.xor
       (i32.sub
        (get_local $2)
        (get_local $0)
       )
       (i32.sub
        (i32.const 0)
        (get_local $0)
       )
      )
     )
     (i32.const 16)
    )
    (i32.const 16)
   )
  )
  (f32.add
   (f32.add
    (get_local $5)
    (f32.mul
     (tee_local $5
      (f32.convert_s/i32
       (i32.shr_s
        (i32.shl
         (i32.and
          (get_local $1)
          (i32.const 65535)
         )
         (i32.const 16)
        )
        (i32.const 16)
       )
      )
     )
     (get_local $5)
    )
   )
   (f32.mul
    (tee_local $5
     (f32.convert_s/i32
      (i32.shr_s
       (i32.shl
        (i32.and
         (get_local $0)
         (i32.const 65535)
        )
        (i32.const 16)
       )
       (i32.const 16)
      )
     )
    )
    (get_local $5)
   )
  )
 )
 (func $_ec_tell_frac (; 101 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (set_local $1
   (i32.add
    (i32.shr_u
     (tee_local $3
      (i32.shr_u
       (get_local $1)
       (i32.add
        (tee_local $2
         (i32.sub
          (i32.const 32)
          (i32.clz
           (get_local $1)
          )
         )
        )
        (i32.const -16)
       )
      )
     )
     (i32.const 12)
    )
    (i32.const -8)
   )
  )
  (i32.sub
   (i32.shl
    (get_local $0)
    (i32.const 3)
   )
   (i32.add
    (i32.shl
     (get_local $2)
     (i32.const 3)
    )
    (i32.add
     (get_local $1)
     (i32.gt_u
      (get_local $3)
      (i32.load
       (i32.add
        (i32.shl
         (get_local $1)
         (i32.const 2)
        )
        (i32.const 6752)
       )
      )
     )
    )
   )
  )
 )
 (func $_ec_dec_init (; 102 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (i32.store
   (get_local $0)
   (get_local $1)
  )
  (i32.store offset=4
   (get_local $0)
   (get_local $2)
  )
  (i32.store offset=8
   (get_local $0)
   (i32.const 0)
  )
  (i32.store offset=12
   (get_local $0)
   (i32.const 0)
  )
  (i32.store offset=16
   (get_local $0)
   (i32.const 0)
  )
  (i32.store offset=20
   (get_local $0)
   (i32.const 9)
  )
  (i32.store offset=24
   (get_local $0)
   (i32.const 0)
  )
  (i32.store
   (tee_local $2
    (i32.add
     (get_local $0)
     (i32.const 28)
    )
   )
   (i32.const 128)
  )
  (set_local $1
   (call $_ec_read_byte
    (get_local $0)
   )
  )
  (i32.store offset=40
   (get_local $0)
   (get_local $1)
  )
  (i32.store offset=32
   (get_local $0)
   (i32.sub
    (i32.add
     (i32.load
      (get_local $2)
     )
     (i32.const -1)
    )
    (i32.shr_s
     (get_local $1)
     (i32.const 1)
    )
   )
  )
  (i32.store offset=44
   (get_local $0)
   (i32.const 0)
  )
  (call $_ec_dec_normalize
   (get_local $0)
  )
 )
 (func $_ec_read_byte (; 103 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (if
   (i32.ge_u
    (tee_local $1
     (i32.load
      (tee_local $2
       (i32.add
        (get_local $0)
        (i32.const 24)
       )
      )
     )
    )
    (i32.load offset=4
     (get_local $0)
    )
   )
   (return
    (i32.const 0)
   )
  )
  (set_local $0
   (i32.load
    (get_local $0)
   )
  )
  (i32.store
   (get_local $2)
   (i32.add
    (get_local $1)
    (i32.const 1)
   )
  )
  (i32.load8_u
   (i32.add
    (get_local $0)
    (get_local $1)
   )
  )
 )
 (func $_ec_dec_normalize (; 104 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (set_local $2
   (i32.add
    (get_local $0)
    (i32.const 28)
   )
  )
  (set_local $3
   (i32.add
    (get_local $0)
    (i32.const 20)
   )
  )
  (set_local $4
   (i32.add
    (get_local $0)
    (i32.const 40)
   )
  )
  (set_local $5
   (i32.add
    (get_local $0)
    (i32.const 32)
   )
  )
  (loop $while-in
   (if
    (i32.lt_u
     (tee_local $1
      (i32.load
       (get_local $2)
      )
     )
     (i32.const 8388609)
    )
    (block
     (i32.store
      (get_local $3)
      (i32.add
       (i32.load
        (get_local $3)
       )
       (i32.const 8)
      )
     )
     (i32.store
      (get_local $2)
      (i32.shl
       (get_local $1)
       (i32.const 8)
      )
     )
     (set_local $6
      (i32.load
       (get_local $4)
      )
     )
     (set_local $1
      (call $_ec_read_byte
       (get_local $0)
      )
     )
     (i32.store
      (get_local $4)
      (get_local $1)
     )
     (i32.store
      (get_local $5)
      (i32.xor
       (i32.or
        (i32.and
         (i32.shr_u
          (i32.or
           (i32.shl
            (get_local $6)
            (i32.const 8)
           )
           (get_local $1)
          )
          (i32.const 1)
         )
         (i32.const 255)
        )
        (i32.and
         (i32.shl
          (i32.load
           (get_local $5)
          )
          (i32.const 8)
         )
         (i32.const 2147483392)
        )
       )
       (i32.const 255)
      )
     )
     (br $while-in)
    )
   )
  )
 )
 (func $_ec_decode (; 105 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (set_local $2
   (call $_celt_udiv
    (i32.load offset=28
     (get_local $0)
    )
    (get_local $1)
   )
  )
  (i32.store offset=36
   (get_local $0)
   (get_local $2)
  )
  (i32.sub
   (get_local $1)
   (if (result i32)
    (i32.gt_u
     (tee_local $0
      (i32.add
       (i32.div_u
        (i32.load offset=32
         (get_local $0)
        )
        (get_local $2)
       )
       (i32.const 1)
      )
     )
     (get_local $1)
    )
    (get_local $1)
    (get_local $0)
   )
  )
 )
 (func $_ec_decode_bin (; 106 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (i32.store offset=36
   (get_local $0)
   (tee_local $1
    (i32.shr_u
     (i32.load offset=28
      (get_local $0)
     )
     (i32.const 15)
    )
   )
  )
  (set_local $0
   (i32.add
    (tee_local $1
     (i32.div_u
      (i32.load offset=32
       (get_local $0)
      )
      (get_local $1)
     )
    )
    (i32.const 1)
   )
  )
  (set_local $1
   (i32.sub
    (i32.const 32767)
    (get_local $1)
   )
  )
  (i32.sub
   (i32.const 32768)
   (i32.add
    (get_local $0)
    (if (result i32)
     (i32.gt_u
      (get_local $0)
      (i32.const 32768)
     )
     (get_local $1)
     (i32.const 0)
    )
   )
  )
 )
 (func $_ec_dec_update (; 107 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (i32.store
   (tee_local $4
    (i32.add
     (get_local $0)
     (i32.const 32)
    )
   )
   (i32.sub
    (i32.load
     (get_local $4)
    )
    (tee_local $3
     (i32.mul
      (tee_local $4
       (i32.load offset=36
        (get_local $0)
       )
      )
      (i32.sub
       (get_local $3)
       (get_local $2)
      )
     )
    )
   )
  )
  (if
   (get_local $1)
   (i32.store offset=28
    (get_local $0)
    (i32.mul
     (get_local $4)
     (i32.sub
      (get_local $2)
      (get_local $1)
     )
    )
   )
   (i32.store
    (tee_local $1
     (i32.add
      (get_local $0)
      (i32.const 28)
     )
    )
    (i32.sub
     (i32.load
      (get_local $1)
     )
     (get_local $3)
    )
   )
  )
  (call $_ec_dec_normalize
   (get_local $0)
  )
 )
 (func $_ec_dec_bit_logp (; 108 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (if
   (i32.eqz
    (tee_local $6
     (i32.lt_u
      (tee_local $3
       (i32.load
        (tee_local $2
         (i32.add
          (get_local $0)
          (i32.const 32)
         )
        )
       )
      )
      (tee_local $1
       (i32.shr_u
        (tee_local $5
         (i32.load
          (tee_local $4
           (i32.add
            (get_local $0)
            (i32.const 28)
           )
          )
         )
        )
        (get_local $1)
       )
      )
     )
    )
   )
   (block
    (i32.store
     (get_local $2)
     (i32.sub
      (get_local $3)
      (get_local $1)
     )
    )
    (set_local $1
     (i32.sub
      (get_local $5)
      (get_local $1)
     )
    )
   )
  )
  (i32.store
   (get_local $4)
   (get_local $1)
  )
  (call $_ec_dec_normalize
   (get_local $0)
  )
  (get_local $6)
 )
 (func $_ec_dec_icdf (; 109 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (set_local $5
   (i32.load
    (tee_local $6
     (i32.add
      (get_local $0)
      (i32.const 32)
     )
    )
   )
  )
  (set_local $8
   (i32.shr_u
    (tee_local $3
     (i32.load
      (tee_local $7
       (i32.add
        (get_local $0)
        (i32.const 28)
       )
      )
     )
    )
    (get_local $2)
   )
  )
  (set_local $4
   (i32.const -1)
  )
  (set_local $2
   (get_local $3)
  )
  (loop $while-in
   (if
    (i32.lt_u
     (get_local $5)
     (tee_local $3
      (i32.mul
       (get_local $8)
       (i32.load8_u
        (i32.add
         (get_local $1)
         (tee_local $4
          (i32.add
           (get_local $4)
           (i32.const 1)
          )
         )
        )
       )
      )
     )
    )
    (block
     (set_local $2
      (get_local $3)
     )
     (br $while-in)
    )
   )
  )
  (i32.store
   (get_local $6)
   (i32.sub
    (get_local $5)
    (get_local $3)
   )
  )
  (i32.store
   (get_local $7)
   (i32.sub
    (get_local $2)
    (get_local $3)
   )
  )
  (call $_ec_dec_normalize
   (get_local $0)
  )
  (get_local $4)
 )
 (func $_ec_dec_uint (; 110 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (if
   (i32.le_u
    (get_local $1)
    (i32.const 1)
   )
   (call $_celt_fatal
    (i32.const 42792)
    (i32.const 42778)
    (i32.const 203)
   )
  )
  (if
   (i32.le_s
    (tee_local $3
     (i32.sub
      (i32.const 32)
      (i32.clz
       (tee_local $2
        (i32.add
         (get_local $1)
         (i32.const -1)
        )
       )
      )
     )
    )
    (i32.const 8)
   )
   (block
    (set_local $2
     (call $_ec_decode
      (get_local $0)
      (get_local $1)
     )
    )
    (call $_ec_dec_update
     (get_local $0)
     (get_local $2)
     (i32.add
      (get_local $2)
      (i32.const 1)
     )
     (get_local $1)
    )
    (return
     (get_local $2)
    )
   )
  )
  (set_local $1
   (call $_ec_decode
    (get_local $0)
    (tee_local $4
     (i32.add
      (i32.shr_u
       (get_local $2)
       (tee_local $3
        (i32.add
         (get_local $3)
         (i32.const -8)
        )
       )
      )
      (i32.const 1)
     )
    )
   )
  )
  (call $_ec_dec_update
   (get_local $0)
   (get_local $1)
   (i32.add
    (get_local $1)
    (i32.const 1)
   )
   (get_local $4)
  )
  (set_local $1
   (i32.shl
    (get_local $1)
    (get_local $3)
   )
  )
  (set_local $3
   (call $_ec_dec_bits
    (get_local $0)
    (get_local $3)
   )
  )
  (if
   (i32.le_u
    (tee_local $1
     (i32.or
      (get_local $1)
      (get_local $3)
     )
    )
    (get_local $2)
   )
   (return
    (get_local $1)
   )
  )
  (i32.store offset=44
   (get_local $0)
   (i32.const 1)
  )
  (get_local $2)
 )
 (func $_ec_dec_bits (; 111 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (set_local $3
   (i32.load
    (tee_local $5
     (i32.add
      (get_local $0)
      (i32.const 12)
     )
    )
   )
  )
  (if
   (i32.lt_u
    (tee_local $2
     (i32.load
      (tee_local $6
       (i32.add
        (get_local $0)
        (i32.const 16)
       )
      )
     )
    )
    (get_local $1)
   )
   (block
    (set_local $7
     (i32.add
      (get_local $2)
      (i32.and
       (i32.sub
        (i32.add
         (if (result i32)
          (i32.gt_s
           (get_local $2)
           (i32.const 17)
          )
          (get_local $2)
          (i32.const 17)
         )
         (i32.const 7)
        )
        (get_local $2)
       )
       (i32.const -8)
      )
     )
    )
    (loop $while-in
     (set_local $4
      (i32.shl
       (call $_ec_read_byte_from_end
        (get_local $0)
       )
       (get_local $2)
      )
     )
     (set_local $3
      (i32.or
       (get_local $3)
       (get_local $4)
      )
     )
     (set_local $4
      (i32.add
       (get_local $2)
       (i32.const 8)
      )
     )
     (if
      (i32.lt_s
       (get_local $2)
       (i32.const 17)
      )
      (block
       (set_local $2
        (get_local $4)
       )
       (br $while-in)
      )
     )
    )
    (set_local $2
     (i32.add
      (get_local $7)
      (i32.const 8)
     )
    )
   )
  )
  (i32.store
   (get_local $5)
   (i32.shr_u
    (get_local $3)
    (get_local $1)
   )
  )
  (i32.store
   (get_local $6)
   (i32.sub
    (get_local $2)
    (get_local $1)
   )
  )
  (i32.store
   (tee_local $0
    (i32.add
     (get_local $0)
     (i32.const 20)
    )
   )
   (i32.add
    (i32.load
     (get_local $0)
    )
    (get_local $1)
   )
  )
  (i32.and
   (get_local $3)
   (i32.add
    (i32.shl
     (i32.const 1)
     (get_local $1)
    )
    (i32.const -1)
   )
  )
 )
 (func $_ec_read_byte_from_end (; 112 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (if
   (i32.ge_u
    (tee_local $2
     (i32.load
      (tee_local $1
       (i32.add
        (get_local $0)
        (i32.const 8)
       )
      )
     )
    )
    (tee_local $3
     (i32.load offset=4
      (get_local $0)
     )
    )
   )
   (return
    (i32.const 0)
   )
  )
  (set_local $0
   (i32.load
    (get_local $0)
   )
  )
  (i32.store
   (get_local $1)
   (tee_local $1
    (i32.add
     (get_local $2)
     (i32.const 1)
    )
   )
  )
  (i32.load8_u
   (i32.add
    (get_local $0)
    (i32.sub
     (get_local $3)
     (get_local $1)
    )
   )
  )
 )
 (func $_ec_enc_init (; 113 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (i32.store
   (get_local $0)
   (get_local $1)
  )
  (i32.store offset=8
   (get_local $0)
   (i32.const 0)
  )
  (i32.store offset=12
   (get_local $0)
   (i32.const 0)
  )
  (i32.store offset=16
   (get_local $0)
   (i32.const 0)
  )
  (i32.store offset=20
   (get_local $0)
   (i32.const 33)
  )
  (i32.store offset=24
   (get_local $0)
   (i32.const 0)
  )
  (i32.store offset=28
   (get_local $0)
   (i32.const -2147483648)
  )
  (i32.store offset=40
   (get_local $0)
   (i32.const -1)
  )
  (i32.store offset=32
   (get_local $0)
   (i32.const 0)
  )
  (i32.store offset=36
   (get_local $0)
   (i32.const 0)
  )
  (i32.store offset=4
   (get_local $0)
   (get_local $2)
  )
  (i32.store offset=44
   (get_local $0)
   (i32.const 0)
  )
 )
 (func $_ec_encode (; 114 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (set_local $4
   (call $_celt_udiv
    (tee_local $6
     (i32.load
      (tee_local $5
       (i32.add
        (get_local $0)
        (i32.const 28)
       )
      )
     )
    )
    (get_local $3)
   )
  )
  (if
   (get_local $1)
   (block
    (i32.store
     (tee_local $7
      (i32.add
       (get_local $0)
       (i32.const 32)
      )
     )
     (i32.add
      (i32.load
       (get_local $7)
      )
      (i32.sub
       (get_local $6)
       (i32.mul
        (get_local $4)
        (i32.sub
         (get_local $3)
         (get_local $1)
        )
       )
      )
     )
    )
    (i32.store
     (get_local $5)
     (i32.mul
      (get_local $4)
      (i32.sub
       (get_local $2)
       (get_local $1)
      )
     )
    )
   )
   (i32.store
    (get_local $5)
    (i32.sub
     (get_local $6)
     (i32.mul
      (get_local $4)
      (i32.sub
       (get_local $3)
       (get_local $2)
      )
     )
    )
   )
  )
  (call $_ec_enc_normalize
   (get_local $0)
  )
 )
 (func $_ec_enc_normalize (; 115 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (set_local $1
   (i32.add
    (get_local $0)
    (i32.const 32)
   )
  )
  (set_local $2
   (i32.add
    (get_local $0)
    (i32.const 20)
   )
  )
  (set_local $4
   (i32.load
    (tee_local $3
     (i32.add
      (get_local $0)
      (i32.const 28)
     )
    )
   )
  )
  (loop $while-in
   (if
    (i32.lt_u
     (get_local $4)
     (i32.const 8388609)
    )
    (block
     (call $_ec_enc_carry_out
      (get_local $0)
      (i32.shr_u
       (i32.load
        (get_local $1)
       )
       (i32.const 23)
      )
     )
     (i32.store
      (get_local $1)
      (i32.and
       (i32.shl
        (i32.load
         (get_local $1)
        )
        (i32.const 8)
       )
       (i32.const 2147483392)
      )
     )
     (i32.store
      (get_local $3)
      (tee_local $4
       (i32.shl
        (i32.load
         (get_local $3)
        )
        (i32.const 8)
       )
      )
     )
     (i32.store
      (get_local $2)
      (i32.add
       (i32.load
        (get_local $2)
       )
       (i32.const 8)
      )
     )
     (br $while-in)
    )
   )
  )
 )
 (func $_ec_enc_carry_out (; 116 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (if
   (i32.eq
    (get_local $1)
    (i32.const 255)
   )
   (block
    (i32.store
     (tee_local $0
      (i32.add
       (get_local $0)
       (i32.const 36)
      )
     )
     (i32.add
      (i32.load
       (get_local $0)
      )
      (i32.const 1)
     )
    )
    (return)
   )
  )
  (set_local $3
   (i32.shr_s
    (get_local $1)
    (i32.const 8)
   )
  )
  (if
   (i32.gt_s
    (tee_local $2
     (i32.load
      (tee_local $6
       (i32.add
        (get_local $0)
        (i32.const 40)
       )
      )
     )
    )
    (i32.const -1)
   )
   (block
    (set_local $2
     (call $_ec_write_byte
      (get_local $0)
      (i32.add
       (get_local $2)
       (get_local $3)
      )
     )
    )
    (i32.store
     (tee_local $4
      (i32.add
       (get_local $0)
       (i32.const 44)
      )
     )
     (i32.or
      (i32.load
       (get_local $4)
      )
      (get_local $2)
     )
    )
   )
  )
  (if
   (i32.load
    (tee_local $2
     (i32.add
      (get_local $0)
      (i32.const 36)
     )
    )
   )
   (block
    (set_local $4
     (i32.and
      (i32.add
       (get_local $3)
       (i32.const 255)
      )
      (i32.const 255)
     )
    )
    (set_local $3
     (i32.add
      (get_local $0)
      (i32.const 44)
     )
    )
    (loop $while-in
     (set_local $5
      (call $_ec_write_byte
       (get_local $0)
       (get_local $4)
      )
     )
     (i32.store
      (get_local $3)
      (i32.or
       (i32.load
        (get_local $3)
       )
       (get_local $5)
      )
     )
     (i32.store
      (get_local $2)
      (tee_local $5
       (i32.add
        (i32.load
         (get_local $2)
        )
        (i32.const -1)
       )
      )
     )
     (br_if $while-in
      (get_local $5)
     )
    )
   )
  )
  (i32.store
   (get_local $6)
   (i32.and
    (get_local $1)
    (i32.const 255)
   )
  )
 )
 (func $_ec_write_byte (; 117 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (if
   (i32.ge_u
    (i32.add
     (tee_local $2
      (i32.load
       (tee_local $3
        (i32.add
         (get_local $0)
         (i32.const 24)
        )
       )
      )
     )
     (i32.load offset=8
      (get_local $0)
     )
    )
    (i32.load offset=4
     (get_local $0)
    )
   )
   (return
    (i32.const -1)
   )
  )
  (set_local $0
   (i32.load
    (get_local $0)
   )
  )
  (i32.store
   (get_local $3)
   (i32.add
    (get_local $2)
    (i32.const 1)
   )
  )
  (i32.store8
   (i32.add
    (get_local $0)
    (get_local $2)
   )
   (get_local $1)
  )
  (i32.const 0)
 )
 (func $_ec_encode_bin (; 118 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (set_local $3
   (i32.shr_u
    (tee_local $5
     (i32.load
      (tee_local $4
       (i32.add
        (get_local $0)
        (i32.const 28)
       )
      )
     )
    )
    (i32.const 15)
   )
  )
  (if
   (get_local $1)
   (block
    (i32.store
     (tee_local $6
      (i32.add
       (get_local $0)
       (i32.const 32)
      )
     )
     (i32.add
      (i32.load
       (get_local $6)
      )
      (i32.sub
       (get_local $5)
       (i32.mul
        (get_local $3)
        (i32.sub
         (i32.const 32768)
         (get_local $1)
        )
       )
      )
     )
    )
    (i32.store
     (get_local $4)
     (i32.mul
      (get_local $3)
      (i32.sub
       (get_local $2)
       (get_local $1)
      )
     )
    )
   )
   (i32.store
    (get_local $4)
    (i32.sub
     (get_local $5)
     (i32.mul
      (get_local $3)
      (i32.sub
       (i32.const 32768)
       (get_local $2)
      )
     )
    )
   )
  )
  (call $_ec_enc_normalize
   (get_local $0)
  )
 )
 (func $_ec_enc_bit_logp (; 119 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (set_local $2
   (i32.shr_u
    (tee_local $3
     (i32.load
      (tee_local $4
       (i32.add
        (get_local $0)
        (i32.const 28)
       )
      )
     )
    )
    (get_local $2)
   )
  )
  (set_local $3
   (i32.sub
    (get_local $3)
    (get_local $2)
   )
  )
  (i32.store
   (get_local $4)
   (tee_local $1
    (if (result i32)
     (get_local $1)
     (block (result i32)
      (i32.store
       (tee_local $1
        (i32.add
         (get_local $0)
         (i32.const 32)
        )
       )
       (i32.add
        (i32.load
         (get_local $1)
        )
        (get_local $3)
       )
      )
      (get_local $2)
     )
     (get_local $3)
    )
   )
  )
  (call $_ec_enc_normalize
   (get_local $0)
  )
 )
 (func $_ec_enc_icdf (; 120 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (set_local $3
   (i32.shr_u
    (tee_local $4
     (i32.load
      (tee_local $5
       (i32.add
        (get_local $0)
        (i32.const 28)
       )
      )
     )
    )
    (get_local $3)
   )
  )
  (if
   (i32.gt_s
    (get_local $1)
    (i32.const 0)
   )
   (block
    (i32.store
     (tee_local $6
      (i32.add
       (get_local $0)
       (i32.const 32)
      )
     )
     (i32.add
      (i32.load
       (get_local $6)
      )
      (i32.sub
       (get_local $4)
       (i32.mul
        (get_local $3)
        (i32.load8_u
         (tee_local $4
          (i32.add
           (get_local $2)
           (i32.add
            (get_local $1)
            (i32.const -1)
           )
          )
         )
        )
       )
      )
     )
    )
    (i32.store
     (get_local $5)
     (i32.mul
      (get_local $3)
      (i32.sub
       (i32.load8_u
        (get_local $4)
       )
       (i32.load8_u
        (i32.add
         (get_local $2)
         (get_local $1)
        )
       )
      )
     )
    )
   )
   (i32.store
    (get_local $5)
    (i32.sub
     (get_local $4)
     (i32.mul
      (get_local $3)
      (i32.load8_u
       (i32.add
        (get_local $2)
        (get_local $1)
       )
      )
     )
    )
   )
  )
  (call $_ec_enc_normalize
   (get_local $0)
  )
 )
 (func $_ec_enc_uint (; 121 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (if
   (i32.le_u
    (get_local $2)
    (i32.const 1)
   )
   (call $_celt_fatal
    (i32.const 42792)
    (i32.const 42816)
    (i32.const 180)
   )
  )
  (if
   (i32.gt_s
    (tee_local $3
     (i32.sub
      (i32.const 32)
      (i32.clz
       (tee_local $4
        (i32.add
         (get_local $2)
         (i32.const -1)
        )
       )
      )
     )
    )
    (i32.const 8)
   )
   (block
    (call $_ec_encode
     (get_local $0)
     (tee_local $3
      (i32.shr_u
       (get_local $1)
       (tee_local $2
        (i32.add
         (get_local $3)
         (i32.const -8)
        )
       )
      )
     )
     (i32.add
      (get_local $3)
      (i32.const 1)
     )
     (i32.add
      (i32.shr_u
       (get_local $4)
       (get_local $2)
      )
      (i32.const 1)
     )
    )
    (call $_ec_enc_bits
     (get_local $0)
     (i32.and
      (i32.add
       (i32.shl
        (i32.const 1)
        (get_local $2)
       )
       (i32.const -1)
      )
      (get_local $1)
     )
     (get_local $2)
    )
   )
   (call $_ec_encode
    (get_local $0)
    (get_local $1)
    (i32.add
     (get_local $1)
     (i32.const 1)
    )
    (get_local $2)
   )
  )
 )
 (func $_ec_enc_bits (; 122 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (set_local $5
   (i32.load
    (tee_local $8
     (i32.add
      (get_local $0)
      (i32.const 12)
     )
    )
   )
  )
  (set_local $4
   (i32.load
    (tee_local $9
     (i32.add
      (get_local $0)
      (i32.const 16)
     )
    )
   )
  )
  (if
   (i32.eqz
    (get_local $2)
   )
   (call $_celt_fatal
    (i32.const 42830)
    (i32.const 42816)
    (i32.const 198)
   )
  )
  (if
   (i32.gt_u
    (tee_local $3
     (i32.add
      (get_local $4)
      (get_local $2)
     )
    )
    (i32.const 32)
   )
   (block
    (set_local $7
     (i32.add
      (get_local $0)
      (i32.const 44)
     )
    )
    (set_local $10
     (i32.and
      (i32.add
       (i32.add
        (get_local $4)
        (if (result i32)
         (i32.gt_s
          (tee_local $3
           (i32.xor
            (get_local $4)
            (i32.const -1)
           )
          )
          (i32.const -16)
         )
         (get_local $3)
         (i32.const -16)
        )
       )
       (i32.const 8)
      )
      (i32.const -8)
     )
    )
    (set_local $3
     (get_local $4)
    )
    (loop $while-in
     (set_local $6
      (call $_ec_write_byte_at_end
       (get_local $0)
       (i32.and
        (get_local $5)
        (i32.const 255)
       )
      )
     )
     (i32.store
      (get_local $7)
      (i32.or
       (i32.load
        (get_local $7)
       )
       (get_local $6)
      )
     )
     (set_local $5
      (i32.shr_u
       (get_local $5)
       (i32.const 8)
      )
     )
     (set_local $6
      (i32.add
       (get_local $3)
       (i32.const -8)
      )
     )
     (if
      (i32.gt_s
       (get_local $3)
       (i32.const 15)
      )
      (block
       (set_local $3
        (get_local $6)
       )
       (br $while-in)
      )
     )
    )
    (set_local $4
     (tee_local $3
      (i32.sub
       (i32.add
        (get_local $4)
        (i32.const -8)
       )
       (get_local $10)
      )
     )
    )
    (set_local $3
     (i32.add
      (get_local $3)
      (get_local $2)
     )
    )
   )
  )
  (i32.store
   (get_local $8)
   (i32.or
    (get_local $5)
    (i32.shl
     (get_local $1)
     (get_local $4)
    )
   )
  )
  (i32.store
   (get_local $9)
   (get_local $3)
  )
  (i32.store
   (tee_local $0
    (i32.add
     (get_local $0)
     (i32.const 20)
    )
   )
   (i32.add
    (i32.load
     (get_local $0)
    )
    (get_local $2)
   )
  )
 )
 (func $_ec_write_byte_at_end (; 123 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (if
   (i32.ge_u
    (i32.add
     (i32.load offset=24
      (get_local $0)
     )
     (tee_local $3
      (i32.load
       (tee_local $2
        (i32.add
         (get_local $0)
         (i32.const 8)
        )
       )
      )
     )
    )
    (tee_local $4
     (i32.load offset=4
      (get_local $0)
     )
    )
   )
   (return
    (i32.const -1)
   )
  )
  (set_local $0
   (i32.load
    (get_local $0)
   )
  )
  (i32.store
   (get_local $2)
   (tee_local $2
    (i32.add
     (get_local $3)
     (i32.const 1)
    )
   )
  )
  (i32.store8
   (i32.add
    (get_local $0)
    (i32.sub
     (get_local $4)
     (get_local $2)
    )
   )
   (get_local $1)
  )
  (i32.const 0)
 )
 (func $_ec_enc_patch_initial_bits (; 124 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (if
   (i32.ge_u
    (get_local $2)
    (i32.const 9)
   )
   (call $_celt_fatal
    (i32.const 42856)
    (i32.const 42816)
    (i32.const 217)
   )
  )
  (set_local $4
   (i32.shl
    (i32.add
     (i32.shl
      (i32.const 1)
      (get_local $2)
     )
     (i32.const -1)
    )
    (tee_local $3
     (i32.sub
      (i32.const 8)
      (get_local $2)
     )
    )
   )
  )
  (if
   (i32.load offset=24
    (get_local $0)
   )
   (block
    (i32.store8
     (tee_local $0
      (i32.load
       (get_local $0)
      )
     )
     (i32.or
      (i32.and
       (i32.xor
        (get_local $4)
        (i32.const 255)
       )
       (i32.load8_u
        (get_local $0)
       )
      )
      (i32.shl
       (get_local $1)
       (get_local $3)
      )
     )
    )
    (return)
   )
  )
  (if
   (i32.gt_s
    (tee_local $6
     (i32.load
      (tee_local $5
       (i32.add
        (get_local $0)
        (i32.const 40)
       )
      )
     )
    )
    (i32.const -1)
   )
   (block
    (i32.store
     (get_local $5)
     (i32.or
      (i32.and
       (get_local $6)
       (i32.xor
        (get_local $4)
        (i32.const -1)
       )
      )
      (i32.shl
       (get_local $1)
       (get_local $3)
      )
     )
    )
    (return)
   )
  )
  (if
   (i32.gt_u
    (i32.load offset=28
     (get_local $0)
    )
    (i32.shr_u
     (i32.const -2147483648)
     (get_local $2)
    )
   )
   (i32.store offset=44
    (get_local $0)
    (i32.const -1)
   )
   (i32.store
    (tee_local $0
     (i32.add
      (get_local $0)
      (i32.const 32)
     )
    )
    (i32.or
     (i32.and
      (i32.load
       (get_local $0)
      )
      (i32.xor
       (i32.shl
        (get_local $4)
        (i32.const 23)
       )
       (i32.const -1)
      )
     )
     (i32.shl
      (get_local $1)
      (i32.add
       (get_local $3)
       (i32.const 23)
      )
     )
    )
   )
  )
 )
 (func $_ec_enc_shrink (; 125 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (if
   (i32.gt_u
    (i32.add
     (i32.load offset=24
      (get_local $0)
     )
     (tee_local $2
      (i32.load offset=8
       (get_local $0)
      )
     )
    )
    (get_local $1)
   )
   (call $_celt_fatal
    (i32.const 42894)
    (i32.const 42816)
    (i32.const 238)
   )
   (block
    (drop
     (call $_memmove
      (i32.add
       (i32.add
        (tee_local $3
         (i32.load
          (get_local $0)
         )
        )
        (get_local $1)
       )
       (tee_local $4
        (i32.sub
         (i32.const 0)
         (get_local $2)
        )
       )
      )
      (i32.add
       (i32.add
        (get_local $3)
        (i32.load
         (tee_local $0
          (i32.add
           (get_local $0)
           (i32.const 4)
          )
         )
        )
       )
       (get_local $4)
      )
      (get_local $2)
     )
    )
    (i32.store
     (get_local $0)
     (get_local $1)
    )
   )
  )
 )
 (func $_ec_enc_done (; 126 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (if
   (i32.ge_u
    (i32.or
     (tee_local $2
      (i32.and
       (i32.add
        (tee_local $5
         (i32.load offset=32
          (get_local $0)
         )
        )
        (tee_local $3
         (i32.shr_u
          (i32.const 2147483647)
          (tee_local $4
           (i32.clz
            (tee_local $1
             (i32.load offset=28
              (get_local $0)
             )
            )
           )
          )
         )
        )
       )
       (i32.shr_s
        (i32.const -2147483648)
        (get_local $4)
       )
      )
     )
     (get_local $3)
    )
    (i32.add
     (get_local $5)
     (get_local $1)
    )
   )
   (block
    (set_local $4
     (i32.add
      (get_local $4)
      (i32.const 1)
     )
    )
    (set_local $2
     (i32.and
      (i32.add
       (get_local $5)
       (tee_local $2
        (i32.shr_u
         (get_local $3)
         (i32.const 1)
        )
       )
      )
      (i32.xor
       (get_local $2)
       (i32.const -1)
      )
     )
    )
   )
  )
  (set_local $8
   (i32.and
    (i32.add
     (i32.add
      (get_local $4)
      (if (result i32)
       (i32.gt_s
        (tee_local $1
         (i32.xor
          (get_local $4)
          (i32.const -1)
         )
        )
        (i32.const -1)
       )
       (get_local $1)
       (i32.const -1)
      )
     )
     (i32.const 8)
    )
    (i32.const -8)
   )
  )
  (set_local $1
   (get_local $4)
  )
  (loop $while-in
   (if
    (i32.gt_s
     (get_local $1)
     (i32.const 0)
    )
    (block
     (call $_ec_enc_carry_out
      (get_local $0)
      (i32.shr_u
       (get_local $2)
       (i32.const 23)
      )
     )
     (set_local $1
      (i32.add
       (get_local $1)
       (i32.const -8)
      )
     )
     (set_local $2
      (i32.and
       (i32.shl
        (get_local $2)
        (i32.const 8)
       )
       (i32.const 2147483392)
      )
     )
     (br $while-in)
    )
   )
  )
  (block $__rjto$0
   (block $__rjti$0
    (br_if $__rjti$0
     (i32.gt_s
      (i32.load offset=40
       (get_local $0)
      )
      (i32.const -1)
     )
    )
    (br_if $__rjti$0
     (i32.load offset=36
      (get_local $0)
     )
    )
    (br $__rjto$0)
   )
   (call $_ec_enc_carry_out
    (get_local $0)
    (i32.const 0)
   )
  )
  (set_local $2
   (i32.load offset=12
    (get_local $0)
   )
  )
  (set_local $6
   (i32.add
    (get_local $0)
    (i32.const 44)
   )
  )
  (set_local $1
   (i32.xor
    (tee_local $3
     (i32.load offset=16
      (get_local $0)
     )
    )
    (i32.const -1)
   )
  )
  (set_local $7
   (i32.and
    (i32.add
     (i32.add
      (get_local $3)
      (if (result i32)
       (i32.gt_s
        (get_local $1)
        (i32.const -8)
       )
       (get_local $1)
       (i32.const -8)
      )
     )
     (i32.const 8)
    )
    (i32.const -8)
   )
  )
  (set_local $1
   (get_local $3)
  )
  (loop $while-in1
   (if
    (i32.gt_s
     (get_local $1)
     (i32.const 7)
    )
    (block
     (set_local $5
      (call $_ec_write_byte_at_end
       (get_local $0)
       (i32.and
        (get_local $2)
        (i32.const 255)
       )
      )
     )
     (i32.store
      (get_local $6)
      (i32.or
       (i32.load
        (get_local $6)
       )
       (get_local $5)
      )
     )
     (set_local $2
      (i32.shr_u
       (get_local $2)
       (i32.const 8)
      )
     )
     (set_local $1
      (i32.add
       (get_local $1)
       (i32.const -8)
      )
     )
     (br $while-in1)
    )
   )
  )
  (if
   (i32.load
    (get_local $6)
   )
   (return)
  )
  (set_local $7
   (i32.sub
    (get_local $3)
    (get_local $7)
   )
  )
  (drop
   (call $_memset
    (i32.add
     (i32.load
      (get_local $0)
     )
     (tee_local $1
      (i32.load
       (tee_local $5
        (i32.add
         (get_local $0)
         (i32.const 24)
        )
       )
      )
     )
    )
    (i32.const 0)
    (i32.sub
     (i32.sub
      (i32.load
       (tee_local $3
        (i32.add
         (get_local $0)
         (i32.const 4)
        )
       )
      )
      (get_local $1)
     )
     (i32.load
      (tee_local $1
       (i32.add
        (get_local $0)
        (i32.const 8)
       )
      )
     )
    )
   )
  )
  (if
   (i32.le_s
    (get_local $7)
    (i32.const 0)
   )
   (return)
  )
  (if
   (i32.le_u
    (tee_local $3
     (i32.load
      (get_local $3)
     )
    )
    (tee_local $1
     (i32.load
      (get_local $1)
     )
    )
   )
   (block
    (i32.store
     (get_local $6)
     (i32.const -1)
    )
    (return)
   )
  )
  (if
   (i32.and
    (i32.ge_u
     (i32.add
      (i32.load
       (get_local $5)
      )
      (get_local $1)
     )
     (get_local $3)
    )
    (i32.gt_s
     (get_local $7)
     (tee_local $4
      (i32.sub
       (get_local $8)
       (get_local $4)
      )
     )
    )
   )
   (block
    (i32.store
     (get_local $6)
     (i32.const -1)
    )
    (set_local $2
     (i32.and
      (get_local $2)
      (i32.add
       (i32.shl
        (i32.const 1)
        (get_local $4)
       )
       (i32.const -1)
      )
     )
    )
   )
  )
  (i32.store8
   (tee_local $0
    (i32.add
     (i32.load
      (get_local $0)
     )
     (i32.add
      (i32.sub
       (get_local $3)
       (get_local $1)
      )
      (i32.const -1)
     )
    )
   )
   (i32.or
    (get_local $2)
    (i32.load8_u
     (get_local $0)
    )
   )
  )
 )
 (func $_opus_fft_impl (; 127 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (set_local $5
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.const 32)
   )
  )
  (if
   (i32.le_s
    (tee_local $7
     (i32.load offset=8
      (get_local $0)
     )
    )
    (i32.const 0)
   )
   (set_local $7
    (i32.const 0)
   )
  )
  (i32.store
   (get_local $5)
   (i32.const 1)
  )
  (set_local $6
   (i32.const 1)
  )
  (loop $while-in
   (set_local $8
    (i32.load16_s
     (i32.add
      (i32.add
       (get_local $0)
       (i32.const 12)
      )
      (i32.shl
       (i32.or
        (tee_local $2
         (i32.shl
          (get_local $4)
          (i32.const 1)
         )
        )
        (i32.const 1)
       )
       (i32.const 1)
      )
     )
    )
   )
   (i32.store
    (i32.add
     (get_local $5)
     (i32.shl
      (tee_local $3
       (i32.add
        (get_local $4)
        (i32.const 1)
       )
      )
      (i32.const 2)
     )
    )
    (tee_local $6
     (i32.mul
      (get_local $6)
      (i32.load16_s
       (i32.add
        (i32.add
         (get_local $0)
         (i32.const 12)
        )
        (i32.shl
         (get_local $2)
         (i32.const 1)
        )
       )
      )
     )
    )
   )
   (if
    (i32.ne
     (get_local $8)
     (i32.const 1)
    )
    (block
     (set_local $4
      (get_local $3)
     )
     (br $while-in)
    )
   )
  )
  (set_local $8
   (i32.add
    (get_local $0)
    (i32.const 48)
   )
  )
  (set_local $2
   (get_local $4)
  )
  (set_local $4
   (i32.load16_s offset=10
    (i32.add
     (get_local $0)
     (i32.shl
      (get_local $3)
      (i32.const 2)
     )
    )
   )
  )
  (loop $while-in1
   (if
    (i32.gt_s
     (get_local $2)
     (i32.const -1)
    )
    (block
     (set_local $3
      (i32.shl
       (get_local $2)
       (i32.const 1)
      )
     )
     (set_local $6
      (if (result i32)
       (get_local $2)
       (i32.load16_s offset=10
        (i32.add
         (get_local $0)
         (i32.shl
          (get_local $3)
          (i32.const 1)
         )
        )
       )
       (i32.const 1)
      )
     )
     (block $switch-default
      (block $switch-case4
       (block $switch-case3
        (block $switch-case2
         (block $switch-case
          (br_table $switch-case $switch-case3 $switch-case2 $switch-case4 $switch-default
           (i32.sub
            (i32.load16_s
             (i32.add
              (i32.add
               (get_local $0)
               (i32.const 12)
              )
              (i32.shl
               (get_local $3)
               (i32.const 1)
              )
             )
            )
            (i32.const 2)
           )
          )
         )
         (call $_kf_bfly2
          (get_local $1)
          (get_local $4)
          (i32.load
           (i32.add
            (get_local $5)
            (i32.shl
             (get_local $2)
             (i32.const 2)
            )
           )
          )
         )
         (br $switch-default)
        )
        (call $_kf_bfly4
         (get_local $1)
         (i32.shl
          (tee_local $3
           (i32.load
            (i32.add
             (get_local $5)
             (i32.shl
              (get_local $2)
              (i32.const 2)
             )
            )
           )
          )
          (get_local $7)
         )
         (get_local $0)
         (get_local $4)
         (get_local $3)
         (get_local $6)
        )
        (br $switch-default)
       )
       (call $_kf_bfly3
        (get_local $1)
        (i32.shl
         (tee_local $3
          (i32.load
           (i32.add
            (get_local $5)
            (i32.shl
             (get_local $2)
             (i32.const 2)
            )
           )
          )
         )
         (get_local $7)
        )
        (get_local $0)
        (get_local $4)
        (get_local $3)
        (get_local $6)
       )
       (br $switch-default)
      )
      (call $_kf_bfly5
       (get_local $1)
       (i32.shl
        (tee_local $3
         (i32.load
          (i32.add
           (get_local $5)
           (i32.shl
            (get_local $2)
            (i32.const 2)
           )
          )
         )
        )
        (get_local $7)
       )
       (i32.load
        (get_local $8)
       )
       (get_local $4)
       (get_local $3)
       (get_local $6)
      )
     )
     (set_local $2
      (i32.add
       (get_local $2)
       (i32.const -1)
      )
     )
     (set_local $4
      (get_local $6)
     )
     (br $while-in1)
    )
   )
  )
  (set_global $STACKTOP
   (get_local $5)
  )
 )
 (func $_kf_bfly2 (; 128 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 f32)
  (local $6 f32)
  (local $7 f32)
  (local $8 f32)
  (local $9 f32)
  (if
   (i32.ne
    (get_local $1)
    (i32.const 4)
   )
   (call $_celt_fatal
    (i32.const 42947)
    (i32.const 42970)
    (i32.const 76)
   )
  )
  (set_local $1
   (i32.const 0)
  )
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $1)
     (get_local $2)
    )
    (block
     (set_local $6
      (f32.load
       (tee_local $3
        (i32.add
         (get_local $0)
         (i32.const 32)
        )
       )
      )
     )
     (set_local $5
      (f32.load
       (tee_local $4
        (i32.add
         (get_local $0)
         (i32.const 36)
        )
       )
      )
     )
     (f32.store
      (get_local $3)
      (f32.sub
       (tee_local $7
        (f32.load
         (get_local $0)
        )
       )
       (get_local $6)
      )
     )
     (f32.store
      (get_local $4)
      (f32.sub
       (tee_local $8
        (f32.load
         (tee_local $3
          (i32.add
           (get_local $0)
           (i32.const 4)
          )
         )
        )
       )
       (get_local $5)
      )
     )
     (f32.store
      (get_local $0)
      (f32.add
       (get_local $7)
       (get_local $6)
      )
     )
     (f32.store
      (get_local $3)
      (f32.add
       (get_local $8)
       (get_local $5)
      )
     )
     (set_local $6
      (f32.mul
       (f32.add
        (tee_local $5
         (f32.load
          (tee_local $3
           (i32.add
            (get_local $0)
            (i32.const 40)
           )
          )
         )
        )
        (tee_local $7
         (f32.load
          (tee_local $4
           (i32.add
            (get_local $0)
            (i32.const 44)
           )
          )
         )
        )
       )
       (f32.const 0.7071067690849304)
      )
     )
     (f32.store
      (get_local $3)
      (f32.sub
       (tee_local $8
        (f32.load
         (tee_local $3
          (i32.add
           (get_local $0)
           (i32.const 8)
          )
         )
        )
       )
       (get_local $6)
      )
     )
     (f32.store
      (get_local $4)
      (f32.sub
       (tee_local $9
        (f32.load
         (tee_local $4
          (i32.add
           (get_local $0)
           (i32.const 12)
          )
         )
        )
       )
       (tee_local $5
        (f32.mul
         (f32.sub
          (get_local $7)
          (get_local $5)
         )
         (f32.const 0.7071067690849304)
        )
       )
      )
     )
     (f32.store
      (get_local $3)
      (f32.add
       (get_local $8)
       (get_local $6)
      )
     )
     (f32.store
      (get_local $4)
      (f32.add
       (get_local $9)
       (get_local $5)
      )
     )
     (set_local $6
      (f32.load
       (tee_local $3
        (i32.add
         (get_local $0)
         (i32.const 48)
        )
       )
      )
     )
     (f32.store
      (get_local $3)
      (f32.sub
       (tee_local $5
        (f32.load
         (tee_local $3
          (i32.add
           (get_local $0)
           (i32.const 16)
          )
         )
        )
       )
       (tee_local $7
        (f32.load
         (tee_local $4
          (i32.add
           (get_local $0)
           (i32.const 52)
          )
         )
        )
       )
      )
     )
     (f32.store
      (get_local $4)
      (f32.add
       (tee_local $8
        (f32.load
         (tee_local $4
          (i32.add
           (get_local $0)
           (i32.const 20)
          )
         )
        )
       )
       (get_local $6)
      )
     )
     (f32.store
      (get_local $3)
      (f32.add
       (get_local $5)
       (get_local $7)
      )
     )
     (f32.store
      (get_local $4)
      (f32.sub
       (get_local $8)
       (get_local $6)
      )
     )
     (set_local $6
      (f32.mul
       (f32.sub
        (tee_local $5
         (f32.load
          (tee_local $3
           (i32.add
            (get_local $0)
            (i32.const 60)
           )
          )
         )
        )
        (tee_local $7
         (f32.load
          (tee_local $4
           (i32.add
            (get_local $0)
            (i32.const 56)
           )
          )
         )
        )
       )
       (f32.const 0.7071067690849304)
      )
     )
     (f32.store
      (get_local $4)
      (f32.sub
       (tee_local $8
        (f32.load
         (tee_local $4
          (i32.add
           (get_local $0)
           (i32.const 24)
          )
         )
        )
       )
       (get_local $6)
      )
     )
     (f32.store
      (get_local $3)
      (f32.sub
       (tee_local $9
        (f32.load
         (tee_local $3
          (i32.add
           (get_local $0)
           (i32.const 28)
          )
         )
        )
       )
       (tee_local $5
        (f32.mul
         (f32.add
          (get_local $5)
          (get_local $7)
         )
         (f32.const -0.7071067690849304)
        )
       )
      )
     )
     (f32.store
      (get_local $4)
      (f32.add
       (get_local $8)
       (get_local $6)
      )
     )
     (f32.store
      (get_local $3)
      (f32.add
       (get_local $9)
       (get_local $5)
      )
     )
     (set_local $0
      (i32.sub
       (get_local $0)
       (i32.const -64)
      )
     )
     (set_local $1
      (i32.add
       (get_local $1)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
 )
 (func $_kf_bfly4 (; 129 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32)
  (local $6 i32)
  (local $7 f32)
  (local $8 f32)
  (local $9 f32)
  (local $10 f32)
  (local $11 f32)
  (local $12 i32)
  (local $13 i32)
  (local $14 f32)
  (local $15 f32)
  (local $16 f32)
  (local $17 f32)
  (local $18 i32)
  (local $19 f32)
  (local $20 f32)
  (local $21 f32)
  (local $22 f32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local $26 i32)
  (local $27 i32)
  (local $28 i32)
  (local $29 i32)
  (local $30 i32)
  (local $31 i32)
  (local $32 i32)
  (local $33 i32)
  (local $34 f32)
  (local $35 i32)
  (local $36 i32)
  (local $37 f32)
  (local $38 f32)
  (local $39 f32)
  (local $40 f32)
  (if
   (i32.eq
    (get_local $3)
    (i32.const 1)
   )
   (block
    (set_local $1
     (i32.const 0)
    )
    (loop $while-in
     (if
      (i32.lt_s
       (get_local $1)
       (get_local $4)
      )
      (block
       (set_local $9
        (f32.sub
         (tee_local $7
          (f32.load
           (get_local $0)
          )
         )
         (tee_local $8
          (f32.load
           (tee_local $2
            (i32.add
             (get_local $0)
             (i32.const 16)
            )
           )
          )
         )
        )
       )
       (set_local $15
        (f32.sub
         (tee_local $10
          (f32.load
           (tee_local $3
            (i32.add
             (get_local $0)
             (i32.const 4)
            )
           )
          )
         )
         (tee_local $14
          (f32.load
           (tee_local $5
            (i32.add
             (get_local $0)
             (i32.const 20)
            )
           )
          )
         )
        )
       )
       (set_local $11
        (f32.add
         (tee_local $19
          (f32.load
           (tee_local $6
            (i32.add
             (get_local $0)
             (i32.const 12)
            )
           )
          )
         )
         (tee_local $20
          (f32.load
           (tee_local $12
            (i32.add
             (get_local $0)
             (i32.const 28)
            )
           )
          )
         )
        )
       )
       (f32.store
        (get_local $2)
        (f32.sub
         (tee_local $7
          (f32.add
           (get_local $7)
           (get_local $8)
          )
         )
         (tee_local $22
          (f32.add
           (tee_local $8
            (f32.load
             (tee_local $2
              (i32.add
               (get_local $0)
               (i32.const 8)
              )
             )
            )
           )
           (tee_local $21
            (f32.load
             (tee_local $13
              (i32.add
               (get_local $0)
               (i32.const 24)
              )
             )
            )
           )
          )
         )
        )
       )
       (f32.store
        (get_local $5)
        (f32.sub
         (tee_local $10
          (f32.add
           (get_local $10)
           (get_local $14)
          )
         )
         (get_local $11)
        )
       )
       (f32.store
        (get_local $0)
        (f32.add
         (get_local $7)
         (get_local $22)
        )
       )
       (f32.store
        (get_local $3)
        (f32.add
         (get_local $10)
         (get_local $11)
        )
       )
       (f32.store
        (get_local $2)
        (f32.add
         (get_local $9)
         (tee_local $11
          (f32.sub
           (get_local $19)
           (get_local $20)
          )
         )
        )
       )
       (f32.store
        (get_local $6)
        (f32.sub
         (get_local $15)
         (tee_local $7
          (f32.sub
           (get_local $8)
           (get_local $21)
          )
         )
        )
       )
       (f32.store
        (get_local $13)
        (f32.sub
         (get_local $9)
         (get_local $11)
        )
       )
       (f32.store
        (get_local $12)
        (f32.add
         (get_local $15)
         (get_local $7)
        )
       )
       (set_local $0
        (i32.add
         (get_local $0)
         (i32.const 32)
        )
       )
       (set_local $1
        (i32.add
         (get_local $1)
         (i32.const 1)
        )
       )
       (br $while-in)
      )
     )
    )
    (return)
   )
  )
  (set_local $25
   (i32.shl
    (get_local $3)
    (i32.const 1)
   )
  )
  (set_local $26
   (i32.mul
    (get_local $3)
    (i32.const 3)
   )
  )
  (set_local $27
   (i32.add
    (get_local $2)
    (i32.const 48)
   )
  )
  (set_local $28
   (i32.shl
    (get_local $1)
    (i32.const 1)
   )
  )
  (set_local $29
   (i32.mul
    (get_local $1)
    (i32.const 3)
   )
  )
  (loop $while-in1
   (if
    (i32.lt_s
     (get_local $12)
     (get_local $4)
    )
    (block
     (set_local $13
      (tee_local $2
       (i32.load
        (get_local $27)
       )
      )
     )
     (set_local $18
      (get_local $2)
     )
     (set_local $23
      (i32.const 0)
     )
     (set_local $6
      (i32.add
       (get_local $0)
       (i32.shl
        (i32.mul
         (get_local $12)
         (get_local $5)
        )
        (i32.const 3)
       )
      )
     )
     (loop $while-in3
      (if
       (i32.lt_s
        (get_local $23)
        (get_local $3)
       )
       (block
        (set_local $9
         (f32.sub
          (f32.mul
           (tee_local $8
            (f32.load
             (tee_local $30
              (i32.add
               (get_local $6)
               (i32.shl
                (get_local $3)
                (i32.const 3)
               )
              )
             )
            )
           )
           (tee_local $10
            (f32.load
             (get_local $18)
            )
           )
          )
          (f32.mul
           (tee_local $14
            (f32.load
             (tee_local $31
              (i32.add
               (i32.add
                (get_local $6)
                (i32.shl
                 (get_local $3)
                 (i32.const 3)
                )
               )
               (i32.const 4)
              )
             )
            )
           )
           (tee_local $19
            (f32.load offset=4
             (get_local $18)
            )
           )
          )
         )
        )
        (set_local $15
         (f32.sub
          (f32.mul
           (tee_local $20
            (f32.load
             (tee_local $32
              (i32.add
               (get_local $6)
               (i32.shl
                (get_local $26)
                (i32.const 3)
               )
              )
             )
            )
           )
           (tee_local $21
            (f32.load
             (get_local $13)
            )
           )
          )
          (f32.mul
           (tee_local $22
            (f32.load
             (tee_local $33
              (i32.add
               (i32.add
                (get_local $6)
                (i32.shl
                 (get_local $26)
                 (i32.const 3)
                )
               )
               (i32.const 4)
              )
             )
            )
           )
           (tee_local $34
            (f32.load offset=4
             (get_local $13)
            )
           )
          )
         )
        )
        (set_local $11
         (f32.sub
          (tee_local $16
           (f32.load
            (get_local $6)
           )
          )
          (tee_local $39
           (f32.sub
            (f32.mul
             (tee_local $7
              (f32.load
               (tee_local $35
                (i32.add
                 (get_local $6)
                 (i32.shl
                  (get_local $25)
                  (i32.const 3)
                 )
                )
               )
              )
             )
             (tee_local $17
              (f32.load
               (get_local $2)
              )
             )
            )
            (f32.mul
             (tee_local $37
              (f32.load
               (tee_local $36
                (i32.add
                 (i32.add
                  (get_local $6)
                  (i32.shl
                   (get_local $25)
                   (i32.const 3)
                  )
                 )
                 (i32.const 4)
                )
               )
              )
             )
             (tee_local $38
              (f32.load offset=4
               (get_local $2)
              )
             )
            )
           )
          )
         )
        )
        (set_local $7
         (f32.sub
          (tee_local $40
           (f32.load
            (tee_local $24
             (i32.add
              (get_local $6)
              (i32.const 4)
             )
            )
           )
          )
          (tee_local $17
           (f32.add
            (f32.mul
             (get_local $7)
             (get_local $38)
            )
            (f32.mul
             (get_local $37)
             (get_local $17)
            )
           )
          )
         )
        )
        (f32.store
         (get_local $6)
         (tee_local $16
          (f32.add
           (get_local $16)
           (get_local $39)
          )
         )
        )
        (f32.store
         (get_local $24)
         (tee_local $17
          (f32.add
           (get_local $40)
           (get_local $17)
          )
         )
        )
        (f32.store
         (get_local $35)
         (f32.sub
          (get_local $16)
          (tee_local $16
           (f32.add
            (get_local $9)
            (get_local $15)
           )
          )
         )
        )
        (f32.store
         (get_local $36)
         (f32.sub
          (get_local $17)
          (tee_local $14
           (f32.add
            (tee_local $8
             (f32.add
              (f32.mul
               (get_local $8)
               (get_local $19)
              )
              (f32.mul
               (get_local $14)
               (get_local $10)
              )
             )
            )
            (tee_local $10
             (f32.add
              (f32.mul
               (get_local $20)
               (get_local $34)
              )
              (f32.mul
               (get_local $22)
               (get_local $21)
              )
             )
            )
           )
          )
         )
        )
        (f32.store
         (get_local $6)
         (f32.add
          (f32.load
           (get_local $6)
          )
          (get_local $16)
         )
        )
        (f32.store
         (get_local $24)
         (f32.add
          (f32.load
           (get_local $24)
          )
          (get_local $14)
         )
        )
        (f32.store
         (get_local $30)
         (f32.add
          (get_local $11)
          (tee_local $8
           (f32.sub
            (get_local $8)
            (get_local $10)
           )
          )
         )
        )
        (f32.store
         (get_local $31)
         (f32.sub
          (get_local $7)
          (tee_local $9
           (f32.sub
            (get_local $9)
            (get_local $15)
           )
          )
         )
        )
        (f32.store
         (get_local $32)
         (f32.sub
          (get_local $11)
          (get_local $8)
         )
        )
        (f32.store
         (get_local $33)
         (f32.add
          (get_local $7)
          (get_local $9)
         )
        )
        (set_local $13
         (i32.add
          (get_local $13)
          (i32.shl
           (get_local $29)
           (i32.const 3)
          )
         )
        )
        (set_local $2
         (i32.add
          (get_local $2)
          (i32.shl
           (get_local $28)
           (i32.const 3)
          )
         )
        )
        (set_local $18
         (i32.add
          (get_local $18)
          (i32.shl
           (get_local $1)
           (i32.const 3)
          )
         )
        )
        (set_local $23
         (i32.add
          (get_local $23)
          (i32.const 1)
         )
        )
        (set_local $6
         (i32.add
          (get_local $6)
          (i32.const 8)
         )
        )
        (br $while-in3)
       )
      )
     )
     (set_local $12
      (i32.add
       (get_local $12)
       (i32.const 1)
      )
     )
     (br $while-in1)
    )
   )
  )
 )
 (func $_kf_bfly3 (; 130 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 f32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 f32)
  (local $13 f32)
  (local $14 f32)
  (local $15 i32)
  (local $16 f32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 f32)
  (local $21 i32)
  (local $22 i32)
  (local $23 f32)
  (local $24 f32)
  (local $25 i32)
  (local $26 f32)
  (local $27 f32)
  (local $28 f32)
  (local $29 f32)
  (set_local $15
   (i32.shl
    (get_local $3)
    (i32.const 1)
   )
  )
  (set_local $16
   (f32.load offset=4
    (i32.add
     (i32.load
      (tee_local $18
       (i32.add
        (get_local $2)
        (i32.const 48)
       )
      )
     )
     (i32.shl
      (i32.mul
       (get_local $1)
       (get_local $3)
      )
      (i32.const 3)
     )
    )
   )
  )
  (set_local $19
   (i32.shl
    (get_local $1)
    (i32.const 1)
   )
  )
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $9)
     (get_local $4)
    )
    (block
     (set_local $6
      (i32.add
       (get_local $0)
       (i32.shl
        (i32.mul
         (get_local $9)
         (get_local $5)
        )
        (i32.const 3)
       )
      )
     )
     (set_local $7
      (tee_local $2
       (i32.load
        (get_local $18)
       )
      )
     )
     (set_local $17
      (get_local $3)
     )
     (loop $while-in1
      (set_local $12
       (f32.sub
        (f32.mul
         (tee_local $8
          (f32.load
           (tee_local $10
            (i32.add
             (get_local $6)
             (i32.shl
              (get_local $3)
              (i32.const 3)
             )
            )
           )
          )
         )
         (tee_local $13
          (f32.load
           (get_local $2)
          )
         )
        )
        (f32.mul
         (tee_local $14
          (f32.load
           (tee_local $11
            (i32.add
             (i32.add
              (get_local $6)
              (i32.shl
               (get_local $3)
               (i32.const 3)
              )
             )
             (i32.const 4)
            )
           )
          )
         )
         (tee_local $20
          (f32.load offset=4
           (get_local $2)
          )
         )
        )
       )
      )
      (set_local $2
       (i32.add
        (get_local $2)
        (i32.shl
         (get_local $1)
         (i32.const 3)
        )
       )
      )
      (set_local $21
       (i32.add
        (get_local $7)
        (i32.shl
         (get_local $19)
         (i32.const 3)
        )
       )
      )
      (f32.store
       (get_local $10)
       (f32.sub
        (f32.load
         (get_local $6)
        )
        (f32.mul
         (tee_local $29
          (f32.add
           (get_local $12)
           (tee_local $28
            (f32.sub
             (f32.mul
              (tee_local $23
               (f32.load
                (tee_local $22
                 (i32.add
                  (get_local $6)
                  (i32.shl
                   (get_local $15)
                   (i32.const 3)
                  )
                 )
                )
               )
              )
              (tee_local $24
               (f32.load
                (get_local $7)
               )
              )
             )
             (f32.mul
              (tee_local $26
               (f32.load
                (tee_local $25
                 (i32.add
                  (i32.add
                   (get_local $6)
                   (i32.shl
                    (get_local $15)
                    (i32.const 3)
                   )
                  )
                  (i32.const 4)
                 )
                )
               )
              )
              (tee_local $27
               (f32.load offset=4
                (get_local $7)
               )
              )
             )
            )
           )
          )
         )
         (f32.const 0.5)
        )
       )
      )
      (f32.store
       (get_local $11)
       (f32.sub
        (f32.load
         (tee_local $7
          (i32.add
           (get_local $6)
           (i32.const 4)
          )
         )
        )
        (f32.mul
         (tee_local $14
          (f32.add
           (tee_local $8
            (f32.add
             (f32.mul
              (get_local $8)
              (get_local $20)
             )
             (f32.mul
              (get_local $14)
              (get_local $13)
             )
            )
           )
           (tee_local $13
            (f32.add
             (f32.mul
              (get_local $23)
              (get_local $27)
             )
             (f32.mul
              (get_local $26)
              (get_local $24)
             )
            )
           )
          )
         )
         (f32.const 0.5)
        )
       )
      )
      (f32.store
       (get_local $6)
       (f32.add
        (f32.load
         (get_local $6)
        )
        (get_local $29)
       )
      )
      (f32.store
       (get_local $7)
       (f32.add
        (f32.load
         (get_local $7)
        )
        (get_local $14)
       )
      )
      (f32.store
       (get_local $22)
       (f32.add
        (f32.load
         (get_local $10)
        )
        (tee_local $8
         (f32.mul
          (f32.sub
           (get_local $8)
           (get_local $13)
          )
          (get_local $16)
         )
        )
       )
      )
      (f32.store
       (get_local $25)
       (f32.sub
        (f32.load
         (get_local $11)
        )
        (tee_local $12
         (f32.mul
          (f32.sub
           (get_local $12)
           (get_local $28)
          )
          (get_local $16)
         )
        )
       )
      )
      (f32.store
       (get_local $10)
       (f32.sub
        (f32.load
         (get_local $10)
        )
        (get_local $8)
       )
      )
      (f32.store
       (get_local $11)
       (f32.add
        (f32.load
         (get_local $11)
        )
        (get_local $12)
       )
      )
      (set_local $6
       (i32.add
        (get_local $6)
        (i32.const 8)
       )
      )
      (if
       (tee_local $17
        (i32.add
         (get_local $17)
         (i32.const -1)
        )
       )
       (block
        (set_local $7
         (get_local $21)
        )
        (br $while-in1)
       )
      )
     )
     (set_local $9
      (i32.add
       (get_local $9)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
 )
 (func $_kf_bfly5 (; 131 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 f32)
  (local $14 f32)
  (local $15 f32)
  (local $16 f32)
  (local $17 f32)
  (local $18 f32)
  (local $19 f32)
  (local $20 f32)
  (local $21 f32)
  (local $22 i32)
  (local $23 f32)
  (local $24 f32)
  (local $25 f32)
  (local $26 f32)
  (local $27 f32)
  (local $28 f32)
  (local $29 f32)
  (local $30 f32)
  (local $31 f32)
  (local $32 i32)
  (local $33 i32)
  (local $34 i32)
  (local $35 i32)
  (local $36 i32)
  (local $37 i32)
  (local $38 f32)
  (local $39 f32)
  (local $40 i32)
  (local $41 f32)
  (local $42 f32)
  (local $43 f32)
  (local $44 f32)
  (local $45 f32)
  (local $46 i32)
  (local $47 f32)
  (local $48 f32)
  (local $49 f32)
  (set_local $18
   (f32.load
    (i32.add
     (get_local $2)
     (i32.shl
      (tee_local $6
       (i32.mul
        (get_local $1)
        (get_local $3)
       )
      )
      (i32.const 3)
     )
    )
   )
  )
  (set_local $19
   (f32.load offset=4
    (i32.add
     (get_local $2)
     (i32.shl
      (get_local $6)
      (i32.const 3)
     )
    )
   )
  )
  (set_local $20
   (f32.load
    (i32.add
     (get_local $2)
     (i32.shl
      (tee_local $6
       (i32.mul
        (i32.shl
         (get_local $1)
         (i32.const 1)
        )
        (get_local $3)
       )
      )
      (i32.const 3)
     )
    )
   )
  )
  (set_local $21
   (f32.load offset=4
    (i32.add
     (get_local $2)
     (i32.shl
      (get_local $6)
      (i32.const 3)
     )
    )
   )
  )
  (set_local $32
   (i32.shl
    (get_local $3)
    (i32.const 1)
   )
  )
  (set_local $33
   (i32.mul
    (get_local $3)
    (i32.const 3)
   )
  )
  (set_local $34
   (i32.shl
    (get_local $3)
    (i32.const 2)
   )
  )
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $22)
     (get_local $4)
    )
    (block
     (set_local $7
      (i32.const 0)
     )
     (set_local $9
      (i32.add
       (tee_local $6
        (i32.add
         (get_local $0)
         (i32.shl
          (i32.mul
           (get_local $22)
           (get_local $5)
          )
          (i32.const 3)
         )
        )
       )
       (i32.shl
        (get_local $34)
        (i32.const 3)
       )
      )
     )
     (set_local $10
      (i32.add
       (get_local $6)
       (i32.shl
        (get_local $33)
        (i32.const 3)
       )
      )
     )
     (set_local $11
      (i32.add
       (get_local $6)
       (i32.shl
        (get_local $32)
        (i32.const 3)
       )
      )
     )
     (set_local $12
      (i32.add
       (get_local $6)
       (i32.shl
        (get_local $3)
        (i32.const 3)
       )
      )
     )
     (loop $while-in1
      (if
       (i32.lt_s
        (get_local $7)
        (get_local $3)
       )
       (block
        (set_local $13
         (f32.load
          (tee_local $35
           (i32.add
            (get_local $6)
            (i32.const 4)
           )
          )
         )
        )
        (f32.store
         (get_local $6)
         (f32.add
          (tee_local $23
           (f32.load
            (get_local $6)
           )
          )
          (f32.add
           (tee_local $26
            (f32.add
             (tee_local $28
              (f32.sub
               (f32.mul
                (tee_local $24
                 (f32.load
                  (get_local $12)
                 )
                )
                (tee_local $25
                 (f32.load
                  (i32.add
                   (get_local $2)
                   (i32.shl
                    (tee_local $8
                     (i32.mul
                      (get_local $7)
                      (get_local $1)
                     )
                    )
                    (i32.const 3)
                   )
                  )
                 )
                )
               )
               (f32.mul
                (tee_local $14
                 (f32.load
                  (tee_local $36
                   (i32.add
                    (get_local $12)
                    (i32.const 4)
                   )
                  )
                 )
                )
                (tee_local $15
                 (f32.load offset=4
                  (i32.add
                   (get_local $2)
                   (i32.shl
                    (get_local $8)
                    (i32.const 3)
                   )
                  )
                 )
                )
               )
              )
             )
             (tee_local $31
              (f32.sub
               (f32.mul
                (tee_local $16
                 (f32.load
                  (get_local $9)
                 )
                )
                (tee_local $17
                 (f32.load
                  (i32.add
                   (get_local $2)
                   (i32.shl
                    (tee_local $8
                     (i32.mul
                      (i32.shl
                       (get_local $7)
                       (i32.const 2)
                      )
                      (get_local $1)
                     )
                    )
                    (i32.const 3)
                   )
                  )
                 )
                )
               )
               (f32.mul
                (tee_local $29
                 (f32.load
                  (tee_local $37
                   (i32.add
                    (get_local $9)
                    (i32.const 4)
                   )
                  )
                 )
                )
                (tee_local $30
                 (f32.load offset=4
                  (i32.add
                   (get_local $2)
                   (i32.shl
                    (get_local $8)
                    (i32.const 3)
                   )
                  )
                 )
                )
               )
              )
             )
            )
           )
           (tee_local $27
            (f32.add
             (tee_local $43
              (f32.sub
               (f32.mul
                (tee_local $38
                 (f32.load
                  (get_local $11)
                 )
                )
                (tee_local $39
                 (f32.load
                  (i32.add
                   (get_local $2)
                   (i32.shl
                    (tee_local $8
                     (i32.mul
                      (i32.shl
                       (get_local $7)
                       (i32.const 1)
                      )
                      (get_local $1)
                     )
                    )
                    (i32.const 3)
                   )
                  )
                 )
                )
               )
               (f32.mul
                (tee_local $41
                 (f32.load
                  (tee_local $40
                   (i32.add
                    (get_local $11)
                    (i32.const 4)
                   )
                  )
                 )
                )
                (tee_local $42
                 (f32.load offset=4
                  (i32.add
                   (get_local $2)
                   (i32.shl
                    (get_local $8)
                    (i32.const 3)
                   )
                  )
                 )
                )
               )
              )
             )
             (tee_local $49
              (f32.sub
               (f32.mul
                (tee_local $44
                 (f32.load
                  (get_local $10)
                 )
                )
                (tee_local $45
                 (f32.load
                  (i32.add
                   (get_local $2)
                   (i32.shl
                    (tee_local $8
                     (i32.mul
                      (i32.mul
                       (get_local $7)
                       (i32.const 3)
                      )
                      (get_local $1)
                     )
                    )
                    (i32.const 3)
                   )
                  )
                 )
                )
               )
               (f32.mul
                (tee_local $47
                 (f32.load
                  (tee_local $46
                   (i32.add
                    (get_local $10)
                    (i32.const 4)
                   )
                  )
                 )
                )
                (tee_local $48
                 (f32.load offset=4
                  (i32.add
                   (get_local $2)
                   (i32.shl
                    (get_local $8)
                    (i32.const 3)
                   )
                  )
                 )
                )
               )
              )
             )
            )
           )
          )
         )
        )
        (f32.store
         (get_local $35)
         (f32.add
          (get_local $13)
          (f32.add
           (tee_local $24
            (f32.add
             (tee_local $14
              (f32.add
               (f32.mul
                (get_local $24)
                (get_local $15)
               )
               (f32.mul
                (get_local $14)
                (get_local $25)
               )
              )
             )
             (tee_local $15
              (f32.add
               (f32.mul
                (get_local $16)
                (get_local $30)
               )
               (f32.mul
                (get_local $29)
                (get_local $17)
               )
              )
             )
            )
           )
           (tee_local $25
            (f32.add
             (tee_local $16
              (f32.add
               (f32.mul
                (get_local $38)
                (get_local $42)
               )
               (f32.mul
                (get_local $41)
                (get_local $39)
               )
              )
             )
             (tee_local $17
              (f32.add
               (f32.mul
                (get_local $44)
                (get_local $48)
               )
               (f32.mul
                (get_local $47)
                (get_local $45)
               )
              )
             )
            )
           )
          )
         )
        )
        (f32.store
         (get_local $12)
         (f32.sub
          (tee_local $29
           (f32.add
            (get_local $23)
            (f32.add
             (f32.mul
              (get_local $26)
              (get_local $18)
             )
             (f32.mul
              (get_local $27)
              (get_local $20)
             )
            )
           )
          )
          (tee_local $16
           (f32.add
            (f32.mul
             (tee_local $14
              (f32.sub
               (get_local $14)
               (get_local $15)
              )
             )
             (get_local $19)
            )
            (f32.mul
             (tee_local $15
              (f32.sub
               (get_local $16)
               (get_local $17)
              )
             )
             (get_local $21)
            )
           )
          )
         )
        )
        (f32.store
         (get_local $36)
         (f32.add
          (tee_local $17
           (f32.add
            (get_local $13)
            (f32.add
             (f32.mul
              (get_local $24)
              (get_local $18)
             )
             (f32.mul
              (get_local $25)
              (get_local $20)
             )
            )
           )
          )
          (tee_local $31
           (f32.add
            (f32.mul
             (tee_local $28
              (f32.sub
               (get_local $28)
               (get_local $31)
              )
             )
             (get_local $19)
            )
            (f32.mul
             (tee_local $30
              (f32.sub
               (get_local $43)
               (get_local $49)
              )
             )
             (get_local $21)
            )
           )
          )
         )
        )
        (f32.store
         (get_local $9)
         (f32.add
          (get_local $29)
          (get_local $16)
         )
        )
        (f32.store
         (get_local $37)
         (f32.sub
          (get_local $17)
          (get_local $31)
         )
        )
        (f32.store
         (get_local $11)
         (f32.add
          (tee_local $23
           (f32.add
            (get_local $23)
            (f32.add
             (f32.mul
              (get_local $26)
              (get_local $20)
             )
             (f32.mul
              (get_local $27)
              (get_local $18)
             )
            )
           )
          )
          (tee_local $26
           (f32.sub
            (f32.mul
             (get_local $15)
             (get_local $19)
            )
            (f32.mul
             (get_local $14)
             (get_local $21)
            )
           )
          )
         )
        )
        (f32.store
         (get_local $40)
         (f32.add
          (tee_local $13
           (f32.add
            (get_local $13)
            (f32.add
             (f32.mul
              (get_local $24)
              (get_local $20)
             )
             (f32.mul
              (get_local $25)
              (get_local $18)
             )
            )
           )
          )
          (tee_local $27
           (f32.sub
            (f32.mul
             (get_local $28)
             (get_local $21)
            )
            (f32.mul
             (get_local $30)
             (get_local $19)
            )
           )
          )
         )
        )
        (f32.store
         (get_local $10)
         (f32.sub
          (get_local $23)
          (get_local $26)
         )
        )
        (f32.store
         (get_local $46)
         (f32.sub
          (get_local $13)
          (get_local $27)
         )
        )
        (set_local $7
         (i32.add
          (get_local $7)
          (i32.const 1)
         )
        )
        (set_local $9
         (i32.add
          (get_local $9)
          (i32.const 8)
         )
        )
        (set_local $10
         (i32.add
          (get_local $10)
          (i32.const 8)
         )
        )
        (set_local $11
         (i32.add
          (get_local $11)
          (i32.const 8)
         )
        )
        (set_local $6
         (i32.add
          (get_local $6)
          (i32.const 8)
         )
        )
        (set_local $12
         (i32.add
          (get_local $12)
          (i32.const 8)
         )
        )
        (br $while-in1)
       )
      )
     )
     (set_local $22
      (i32.add
       (get_local $22)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
 )
 (func $_opus_fft_c (; 132 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 f32)
  (local $5 i32)
  (local $6 f32)
  (set_local $4
   (f32.load offset=4
    (get_local $0)
   )
  )
  (if
   (i32.eq
    (get_local $1)
    (get_local $2)
   )
   (call $_celt_fatal
    (i32.const 42986)
    (i32.const 42970)
    (i32.const 580)
   )
  )
  (set_local $5
   (i32.add
    (get_local $0)
    (i32.const 44)
   )
  )
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $3)
     (i32.load
      (get_local $0)
     )
    )
    (block
     (set_local $6
      (f32.load offset=4
       (i32.add
        (get_local $1)
        (i32.shl
         (get_local $3)
         (i32.const 3)
        )
       )
      )
     )
     (f32.store
      (i32.add
       (get_local $2)
       (i32.shl
        (i32.load16_s
         (i32.add
          (i32.load
           (get_local $5)
          )
          (i32.shl
           (get_local $3)
           (i32.const 1)
          )
         )
        )
        (i32.const 3)
       )
      )
      (f32.mul
       (get_local $4)
       (f32.load
        (i32.add
         (get_local $1)
         (i32.shl
          (get_local $3)
          (i32.const 3)
         )
        )
       )
      )
     )
     (f32.store offset=4
      (i32.add
       (get_local $2)
       (i32.shl
        (i32.load16_s
         (i32.add
          (i32.load
           (get_local $5)
          )
          (i32.shl
           (get_local $3)
           (i32.const 1)
          )
         )
        )
        (i32.const 3)
       )
      )
      (f32.mul
       (get_local $4)
       (get_local $6)
      )
     )
     (set_local $3
      (i32.add
       (get_local $3)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (call $_opus_fft_impl
   (get_local $0)
   (get_local $2)
  )
 )
 (func $_ec_laplace_encode (; 133 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (if
   (i32.eqz
    (tee_local $4
     (i32.load
      (get_local $1)
     )
    )
   )
   (block
    (call $_ec_encode_bin
     (get_local $0)
     (i32.const 0)
     (get_local $2)
    )
    (return)
   )
  )
  (set_local $7
   (i32.xor
    (i32.add
     (get_local $4)
     (tee_local $5
      (i32.shr_s
       (get_local $4)
       (i32.const 31)
      )
     )
    )
    (get_local $5)
   )
  )
  (set_local $4
   (call $_ec_laplace_get_freq1
    (get_local $2)
    (get_local $3)
   )
  )
  (set_local $6
   (i32.const 1)
  )
  (if
   (i32.ge_u
    (i32.add
     (tee_local $1
      (block $__rjto$1 (result i32)
       (block $__rjti$1
        (block $__rjti$0
         (loop $while-in
          (block $while-out
           (br_if $__rjti$0
            (i32.eqz
             (get_local $4)
            )
           )
           (br_if $__rjti$1
            (i32.le_s
             (get_local $7)
             (get_local $6)
            )
           )
           (set_local $6
            (i32.add
             (get_local $6)
             (i32.const 1)
            )
           )
           (set_local $4
            (i32.shr_u
             (i32.mul
              (tee_local $8
               (i32.shl
                (get_local $4)
                (i32.const 1)
               )
              )
              (get_local $3)
             )
             (i32.const 15)
            )
           )
           (set_local $2
            (i32.add
             (get_local $2)
             (i32.add
              (get_local $8)
              (i32.const 2)
             )
            )
           )
           (br $while-in)
          )
         )
        )
        (set_local $2
         (i32.add
          (get_local $2)
          (i32.add
           (i32.or
            (i32.shl
             (if (result i32)
              (i32.lt_s
               (tee_local $3
                (i32.sub
                 (get_local $7)
                 (get_local $6)
                )
               )
               (tee_local $2
                (i32.add
                 (i32.shr_s
                  (i32.sub
                   (i32.sub
                    (i32.const 32768)
                    (get_local $2)
                   )
                   (get_local $5)
                  )
                  (i32.const 1)
                 )
                 (i32.const -1)
                )
               )
              )
              (get_local $3)
              (tee_local $3
               (get_local $2)
              )
             )
             (i32.const 1)
            )
            (i32.const 1)
           )
           (get_local $5)
          )
         )
        )
        (i32.store
         (get_local $1)
         (i32.xor
          (i32.add
           (i32.add
            (get_local $6)
            (get_local $3)
           )
           (get_local $5)
          )
          (get_local $5)
         )
        )
        (set_local $3
         (i32.ne
          (get_local $2)
          (i32.const 32768)
         )
        )
        (br $__rjto$1
         (get_local $2)
        )
       )
       (set_local $3
        (tee_local $1
         (i32.add
          (get_local $4)
          (i32.const 1)
         )
        )
       )
       (i32.add
        (get_local $2)
        (i32.and
         (get_local $1)
         (i32.xor
          (get_local $5)
          (i32.const -1)
         )
        )
       )
      )
     )
     (get_local $3)
    )
    (i32.const 32769)
   )
   (call $_celt_fatal
    (i32.const 43043)
    (i32.const 43074)
    (i32.const 88)
   )
  )
  (if
   (get_local $3)
   (call $_ec_encode_bin
    (get_local $0)
    (get_local $1)
    (i32.add
     (get_local $1)
     (get_local $3)
    )
   )
   (call $_celt_fatal
    (i32.const 43089)
    (i32.const 43074)
    (i32.const 89)
   )
  )
 )
 (func $_ec_laplace_get_freq1 (; 134 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (i32.shr_u
   (i32.mul
    (i32.sub
     (i32.const 32736)
     (get_local $0)
    )
    (i32.sub
     (i32.const 16384)
     (get_local $1)
    )
   )
   (i32.const 15)
  )
 )
 (func $_ec_laplace_decode (; 135 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (if
   (i32.lt_u
    (tee_local $5
     (call $_ec_decode_bin
      (get_local $0)
     )
    )
    (get_local $1)
   )
   (set_local $8
    (get_local $1)
   )
   (block
    (set_local $3
     (call $_ec_laplace_get_freq1
      (get_local $1)
      (get_local $2)
     )
    )
    (set_local $4
     (i32.const 1)
    )
    (block $__rjto$0
     (block $__rjti$0
      (loop $while-in
       (block $while-out
        (br_if $__rjti$0
         (i32.le_u
          (tee_local $6
           (i32.add
            (get_local $3)
            (i32.const 1)
           )
          )
          (i32.const 1)
         )
        )
        (if
         (i32.ge_u
          (get_local $5)
          (tee_local $3
           (i32.add
            (get_local $1)
            (tee_local $10
             (i32.shl
              (get_local $6)
              (i32.const 1)
             )
            )
           )
          )
         )
         (block
          (set_local $1
           (get_local $3)
          )
          (set_local $3
           (i32.shr_u
            (i32.mul
             (i32.add
              (get_local $10)
              (i32.const -2)
             )
             (get_local $2)
            )
            (i32.const 15)
           )
          )
          (set_local $4
           (i32.add
            (get_local $4)
            (i32.const 1)
           )
          )
          (br $while-in)
         )
        )
       )
      )
      (br $__rjto$0)
     )
     (set_local $1
      (i32.add
       (get_local $1)
       (i32.and
        (tee_local $2
         (i32.sub
          (get_local $5)
          (get_local $1)
         )
        )
        (i32.const -2)
       )
      )
     )
     (set_local $4
      (i32.add
       (get_local $4)
       (i32.shr_u
        (get_local $2)
        (i32.const 1)
       )
      )
     )
    )
    (if
     (i32.ge_u
      (if (result i32)
       (tee_local $3
        (i32.lt_u
         (get_local $5)
         (tee_local $2
          (i32.add
           (get_local $1)
           (get_local $6)
          )
         )
        )
       )
       (get_local $1)
       (tee_local $1
        (get_local $2)
       )
      )
      (i32.const 32768)
     )
     (call $_celt_fatal
      (i32.const 43112)
      (i32.const 43074)
      (i32.const 128)
     )
    )
    (if
     (i32.eqz
      (get_local $6)
     )
     (call $_celt_fatal
      (i32.const 43089)
      (i32.const 43074)
      (i32.const 129)
     )
    )
    (set_local $2
     (i32.sub
      (i32.const 0)
      (get_local $4)
     )
    )
    (if
     (i32.eqz
      (get_local $3)
     )
     (set_local $2
      (get_local $4)
     )
    )
    (if
     (i32.gt_u
      (get_local $1)
      (get_local $5)
     )
     (call $_celt_fatal
      (i32.const 43139)
      (i32.const 43074)
      (i32.const 130)
     )
     (block
      (set_local $8
       (get_local $6)
      )
      (set_local $7
       (get_local $1)
      )
      (set_local $9
       (get_local $2)
      )
     )
    )
   )
  )
  (if
   (i32.lt_u
    (get_local $5)
    (if (result i32)
     (tee_local $2
      (i32.lt_u
       (tee_local $1
        (i32.add
         (get_local $7)
         (get_local $8)
        )
       )
       (i32.const 32768)
      )
     )
     (get_local $1)
     (i32.const 32768)
    )
   )
   (block
    (call $_ec_dec_update
     (get_local $0)
     (get_local $7)
     (if (result i32)
      (get_local $2)
      (get_local $1)
      (i32.const 32768)
     )
     (i32.const 32768)
    )
    (return
     (get_local $9)
    )
   )
   (call $_celt_fatal
    (i32.const 43164)
    (i32.const 43074)
    (i32.const 131)
   )
  )
  (i32.const 0)
 )
 (func $_isqrt32 (; 136 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (set_local $2
   (i32.shl
    (i32.const 1)
    (tee_local $1
     (i32.shr_s
      (i32.sub
       (i32.const 31)
       (i32.clz
        (get_local $0)
       )
      )
      (i32.const 1)
     )
    )
   )
  )
  (loop $while-in
   (set_local $3
    (i32.add
     (get_local $3)
     (if (result i32)
      (tee_local $4
       (i32.lt_u
        (get_local $0)
        (tee_local $5
         (i32.shl
          (i32.add
           (i32.shl
            (get_local $3)
            (i32.const 1)
           )
           (get_local $2)
          )
          (get_local $1)
         )
        )
       )
      )
      (i32.const 0)
      (get_local $2)
     )
    )
   )
   (set_local $0
    (i32.sub
     (get_local $0)
     (if (result i32)
      (get_local $4)
      (i32.const 0)
      (get_local $5)
     )
    )
   )
   (set_local $4
    (i32.add
     (get_local $1)
     (i32.const -1)
    )
   )
   (set_local $2
    (i32.shr_u
     (get_local $2)
     (i32.const 1)
    )
   )
   (if
    (i32.gt_s
     (get_local $1)
     (i32.const 0)
    )
    (block
     (set_local $1
      (get_local $4)
     )
     (br $while-in)
    )
   )
  )
  (get_local $3)
 )
 (func $_clt_mdct_forward_c (; 137 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 f32)
  (local $16 f32)
  (local $17 f32)
  (local $18 f32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 f32)
  (set_local $22
   (get_global $STACKTOP)
  )
  (set_local $17
   (f32.load offset=4
    (tee_local $19
     (i32.load
      (i32.add
       (i32.add
        (get_local $0)
        (i32.const 8)
       )
       (i32.shl
        (get_local $5)
        (i32.const 2)
       )
      )
     )
    )
   )
  )
  (set_local $7
   (i32.load
    (get_local $0)
   )
  )
  (set_local $11
   (i32.load offset=24
    (get_local $0)
   )
  )
  (loop $while-in
   (set_local $9
    (i32.shr_s
     (get_local $7)
     (i32.const 1)
    )
   )
   (if
    (i32.lt_s
     (get_local $8)
     (get_local $5)
    )
    (block
     (set_local $8
      (i32.add
       (get_local $8)
       (i32.const 1)
      )
     )
     (set_local $11
      (i32.add
       (get_local $11)
       (i32.shl
        (tee_local $7
         (get_local $9)
        )
        (i32.const 2)
       )
      )
     )
     (br $while-in)
    )
   )
  )
  (set_local $8
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (get_local $9)
       (i32.const 2)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (set_local $10
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (tee_local $12
        (i32.shr_s
         (get_local $7)
         (i32.const 2)
        )
       )
       (i32.const 3)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (set_local $13
   (i32.add
    (get_local $3)
    (i32.shl
     (tee_local $7
      (i32.shr_s
       (get_local $4)
       (i32.const 1)
      )
     )
     (i32.const 2)
    )
   )
  )
  (set_local $20
   (i32.shr_s
    (i32.add
     (get_local $4)
     (i32.const 3)
    )
    (i32.const 2)
   )
  )
  (set_local $21
   (i32.sub
    (i32.const 0)
    (get_local $9)
   )
  )
  (set_local $5
   (i32.add
    (get_local $1)
    (i32.shl
     (get_local $7)
     (i32.const 2)
    )
   )
  )
  (set_local $14
   (i32.add
    (get_local $13)
    (i32.const -4)
   )
  )
  (set_local $0
   (get_local $8)
  )
  (set_local $1
   (i32.add
    (i32.add
     (i32.add
      (get_local $1)
      (i32.shl
       (get_local $9)
       (i32.const 2)
      )
     )
     (i32.const -4)
    )
    (i32.shl
     (get_local $7)
     (i32.const 2)
    )
   )
  )
  (set_local $7
   (i32.const 0)
  )
  (loop $while-in1
   (if
    (i32.lt_s
     (get_local $7)
     (get_local $20)
    )
    (block
     (f32.store
      (get_local $0)
      (f32.add
       (f32.mul
        (tee_local $15
         (f32.load
          (get_local $14)
         )
        )
        (f32.load
         (i32.add
          (get_local $5)
          (i32.shl
           (get_local $9)
           (i32.const 2)
          )
         )
        )
       )
       (f32.mul
        (tee_local $16
         (f32.load
          (get_local $13)
         )
        )
        (f32.load
         (get_local $1)
        )
       )
      )
     )
     (f32.store offset=4
      (get_local $0)
      (f32.sub
       (f32.mul
        (get_local $16)
        (f32.load
         (get_local $5)
        )
       )
       (f32.mul
        (get_local $15)
        (f32.load
         (i32.add
          (get_local $1)
          (i32.shl
           (get_local $21)
           (i32.const 2)
          )
         )
        )
       )
      )
     )
     (set_local $5
      (i32.add
       (get_local $5)
       (i32.const 8)
      )
     )
     (set_local $14
      (i32.add
       (get_local $14)
       (i32.const -8)
      )
     )
     (set_local $13
      (i32.add
       (get_local $13)
       (i32.const 8)
      )
     )
     (set_local $0
      (i32.add
       (get_local $0)
       (i32.const 8)
      )
     )
     (set_local $1
      (i32.add
       (get_local $1)
       (i32.const -8)
      )
     )
     (set_local $7
      (i32.add
       (get_local $7)
       (i32.const 1)
      )
     )
     (br $while-in1)
    )
   )
  )
  (set_local $13
   (i32.add
    (get_local $3)
    (i32.shl
     (get_local $4)
     (i32.const 2)
    )
   )
  )
  (set_local $14
   (i32.sub
    (get_local $12)
    (get_local $20)
   )
  )
  (set_local $4
   (get_local $5)
  )
  (set_local $5
   (get_local $7)
  )
  (loop $while-in3
   (if
    (i32.lt_s
     (get_local $5)
     (get_local $14)
    )
    (block
     (i32.store
      (get_local $0)
      (i32.load
       (get_local $1)
      )
     )
     (i32.store offset=4
      (get_local $0)
      (i32.load
       (get_local $4)
      )
     )
     (set_local $1
      (i32.add
       (get_local $1)
       (i32.const -8)
      )
     )
     (set_local $4
      (i32.add
       (get_local $4)
       (i32.const 8)
      )
     )
     (set_local $0
      (i32.add
       (get_local $0)
       (i32.const 8)
      )
     )
     (set_local $5
      (i32.add
       (get_local $5)
       (i32.const 1)
      )
     )
     (br $while-in3)
    )
   )
  )
  (set_local $7
   (i32.add
    (get_local $13)
    (i32.const -4)
   )
  )
  (loop $while-in5
   (if
    (i32.lt_s
     (get_local $5)
     (get_local $12)
    )
    (block
     (f32.store
      (get_local $0)
      (f32.sub
       (f32.mul
        (f32.load
         (get_local $7)
        )
        (f32.load
         (get_local $1)
        )
       )
       (f32.mul
        (f32.load
         (get_local $3)
        )
        (f32.load
         (i32.add
          (get_local $4)
          (i32.shl
           (get_local $21)
           (i32.const 2)
          )
         )
        )
       )
      )
     )
     (f32.store offset=4
      (get_local $0)
      (f32.add
       (f32.mul
        (f32.load
         (get_local $7)
        )
        (f32.load
         (get_local $4)
        )
       )
       (f32.mul
        (f32.load
         (get_local $3)
        )
        (f32.load
         (i32.add
          (get_local $1)
          (i32.shl
           (get_local $9)
           (i32.const 2)
          )
         )
        )
       )
      )
     )
     (set_local $7
      (i32.add
       (get_local $7)
       (i32.const -8)
      )
     )
     (set_local $3
      (i32.add
       (get_local $3)
       (i32.const 8)
      )
     )
     (set_local $0
      (i32.add
       (get_local $0)
       (i32.const 8)
      )
     )
     (set_local $1
      (i32.add
       (get_local $1)
       (i32.const -8)
      )
     )
     (set_local $4
      (i32.add
       (get_local $4)
       (i32.const 8)
      )
     )
     (set_local $5
      (i32.add
       (get_local $5)
       (i32.const 1)
      )
     )
     (br $while-in5)
    )
   )
  )
  (set_local $1
   (i32.add
    (get_local $19)
    (i32.const 44)
   )
  )
  (set_local $0
   (i32.const 0)
  )
  (loop $while-in7
   (if
    (i32.lt_s
     (get_local $0)
     (get_local $12)
    )
    (block
     (f32.store
      (i32.add
       (get_local $10)
       (i32.shl
        (tee_local $3
         (i32.load16_s
          (i32.add
           (i32.load
            (get_local $1)
           )
           (i32.shl
            (get_local $0)
            (i32.const 1)
           )
          )
         )
        )
        (i32.const 3)
       )
      )
      (f32.mul
       (get_local $17)
       (f32.sub
        (f32.mul
         (tee_local $15
          (f32.load
           (get_local $8)
          )
         )
         (tee_local $16
          (f32.load
           (i32.add
            (get_local $11)
            (i32.shl
             (get_local $0)
             (i32.const 2)
            )
           )
          )
         )
        )
        (f32.mul
         (tee_local $18
          (f32.load offset=4
           (get_local $8)
          )
         )
         (tee_local $23
          (f32.load
           (i32.add
            (get_local $11)
            (i32.shl
             (i32.add
              (get_local $12)
              (get_local $0)
             )
             (i32.const 2)
            )
           )
          )
         )
        )
       )
      )
     )
     (f32.store offset=4
      (i32.add
       (get_local $10)
       (i32.shl
        (get_local $3)
        (i32.const 3)
       )
      )
      (f32.mul
       (get_local $17)
       (f32.add
        (f32.mul
         (get_local $18)
         (get_local $16)
        )
        (f32.mul
         (get_local $15)
         (get_local $23)
        )
       )
      )
     )
     (set_local $8
      (i32.add
       (get_local $8)
       (i32.const 8)
      )
     )
     (set_local $0
      (i32.add
       (get_local $0)
       (i32.const 1)
      )
     )
     (br $while-in7)
    )
   )
  )
  (call $_opus_fft_impl
   (get_local $19)
   (get_local $10)
  )
  (set_local $4
   (i32.sub
    (i32.const 0)
    (tee_local $3
     (i32.shl
      (get_local $6)
      (i32.const 1)
     )
    )
   )
  )
  (set_local $1
   (i32.add
    (get_local $2)
    (i32.shl
     (i32.mul
      (i32.add
       (get_local $9)
       (i32.const -1)
      )
      (get_local $6)
     )
     (i32.const 2)
    )
   )
  )
  (set_local $0
   (i32.const 0)
  )
  (loop $while-in9
   (if
    (i32.lt_s
     (get_local $0)
     (get_local $12)
    )
    (block
     (f32.store
      (get_local $2)
      (f32.sub
       (f32.mul
        (tee_local $17
         (f32.load offset=4
          (get_local $10)
         )
        )
        (tee_local $15
         (f32.load
          (i32.add
           (get_local $11)
           (i32.shl
            (i32.add
             (get_local $12)
             (get_local $0)
            )
            (i32.const 2)
           )
          )
         )
        )
       )
       (f32.mul
        (tee_local $16
         (f32.load
          (get_local $10)
         )
        )
        (tee_local $18
         (f32.load
          (i32.add
           (get_local $11)
           (i32.shl
            (get_local $0)
            (i32.const 2)
           )
          )
         )
        )
       )
      )
     )
     (f32.store
      (get_local $1)
      (f32.add
       (f32.mul
        (get_local $16)
        (get_local $15)
       )
       (f32.mul
        (get_local $17)
        (get_local $18)
       )
      )
     )
     (set_local $1
      (i32.add
       (get_local $1)
       (i32.shl
        (get_local $4)
        (i32.const 2)
       )
      )
     )
     (set_local $2
      (i32.add
       (get_local $2)
       (i32.shl
        (get_local $3)
        (i32.const 2)
       )
      )
     )
     (set_local $10
      (i32.add
       (get_local $10)
       (i32.const 8)
      )
     )
     (set_local $0
      (i32.add
       (get_local $0)
       (i32.const 1)
      )
     )
     (br $while-in9)
    )
   )
  )
  (set_global $STACKTOP
   (get_local $22)
  )
 )
 (func $_clt_mdct_backward_c (; 138 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 f32)
  (local $11 f32)
  (local $12 f32)
  (local $13 f32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 f32)
  (local $20 f32)
  (set_local $9
   (i32.load offset=24
    (get_local $0)
   )
  )
  (set_local $7
   (i32.load
    (get_local $0)
   )
  )
  (loop $while-in
   (set_local $14
    (i32.shr_s
     (get_local $7)
     (i32.const 1)
    )
   )
   (if
    (i32.lt_s
     (get_local $8)
     (get_local $5)
    )
    (block
     (set_local $9
      (i32.add
       (get_local $9)
       (i32.shl
        (get_local $14)
        (i32.const 2)
       )
      )
     )
     (set_local $8
      (i32.add
       (get_local $8)
       (i32.const 1)
      )
     )
     (set_local $7
      (get_local $14)
     )
     (br $while-in)
    )
   )
  )
  (set_local $8
   (i32.shr_s
    (get_local $7)
    (i32.const 2)
   )
  )
  (set_local $7
   (i32.add
    (get_local $2)
    (i32.shl
     (i32.shr_s
      (get_local $4)
      (i32.const 1)
     )
     (i32.const 2)
    )
   )
  )
  (set_local $16
   (i32.sub
    (i32.const 0)
    (tee_local $15
     (i32.shl
      (get_local $6)
      (i32.const 1)
     )
    )
   )
  )
  (set_local $5
   (i32.load offset=44
    (tee_local $17
     (i32.load
      (i32.add
       (i32.add
        (get_local $0)
        (i32.const 8)
       )
       (i32.shl
        (get_local $5)
        (i32.const 2)
       )
      )
     )
    )
   )
  )
  (set_local $6
   (i32.add
    (get_local $1)
    (i32.shl
     (i32.mul
      (i32.add
       (get_local $14)
       (i32.const -1)
      )
      (get_local $6)
     )
     (i32.const 2)
    )
   )
  )
  (set_local $0
   (i32.const 0)
  )
  (loop $while-in1
   (if
    (i32.lt_s
     (get_local $0)
     (get_local $8)
    )
    (block
     (f32.store
      (i32.add
       (get_local $7)
       (i32.shl
        (i32.or
         (tee_local $18
          (i32.shl
           (i32.load16_s
            (get_local $5)
           )
           (i32.const 1)
          )
         )
         (i32.const 1)
        )
        (i32.const 2)
       )
      )
      (f32.add
       (f32.mul
        (tee_local $12
         (f32.load
          (get_local $6)
         )
        )
        (tee_local $13
         (f32.load
          (i32.add
           (get_local $9)
           (i32.shl
            (get_local $0)
            (i32.const 2)
           )
          )
         )
        )
       )
       (f32.mul
        (tee_local $10
         (f32.load
          (get_local $1)
         )
        )
        (tee_local $11
         (f32.load
          (i32.add
           (get_local $9)
           (i32.shl
            (i32.add
             (get_local $8)
             (get_local $0)
            )
            (i32.const 2)
           )
          )
         )
        )
       )
      )
     )
     (f32.store
      (i32.add
       (get_local $7)
       (i32.shl
        (get_local $18)
        (i32.const 2)
       )
      )
      (f32.sub
       (f32.mul
        (get_local $10)
        (get_local $13)
       )
       (f32.mul
        (get_local $12)
        (get_local $11)
       )
      )
     )
     (set_local $1
      (i32.add
       (get_local $1)
       (i32.shl
        (get_local $15)
        (i32.const 2)
       )
      )
     )
     (set_local $5
      (i32.add
       (get_local $5)
       (i32.const 2)
      )
     )
     (set_local $6
      (i32.add
       (get_local $6)
       (i32.shl
        (get_local $16)
        (i32.const 2)
       )
      )
     )
     (set_local $0
      (i32.add
       (get_local $0)
       (i32.const 1)
      )
     )
     (br $while-in1)
    )
   )
  )
  (call $_opus_fft_impl
   (get_local $17)
   (get_local $7)
  )
  (set_local $6
   (i32.shr_s
    (i32.add
     (get_local $8)
     (i32.const 1)
    )
    (i32.const 1)
   )
  )
  (set_local $5
   (i32.const 0)
  )
  (set_local $0
   (i32.add
    (get_local $7)
    (i32.shl
     (get_local $14)
     (i32.const 2)
    )
   )
  )
  (loop $while-in3
   (set_local $1
    (i32.add
     (get_local $0)
     (i32.const -8)
    )
   )
   (if
    (i32.lt_s
     (get_local $5)
     (get_local $6)
    )
    (block
     (set_local $12
      (f32.load
       (tee_local $0
        (i32.add
         (get_local $0)
         (i32.const -4)
        )
       )
      )
     )
     (set_local $13
      (f32.load
       (get_local $1)
      )
     )
     (f32.store
      (get_local $7)
      (f32.add
       (f32.mul
        (tee_local $10
         (f32.load
          (tee_local $15
           (i32.add
            (get_local $7)
            (i32.const 4)
           )
          )
         )
        )
        (tee_local $11
         (f32.load
          (i32.add
           (get_local $9)
           (i32.shl
            (get_local $5)
            (i32.const 2)
           )
          )
         )
        )
       )
       (f32.mul
        (tee_local $19
         (f32.load
          (get_local $7)
         )
        )
        (tee_local $20
         (f32.load
          (i32.add
           (get_local $9)
           (i32.shl
            (i32.add
             (get_local $8)
             (get_local $5)
            )
            (i32.const 2)
           )
          )
         )
        )
       )
      )
     )
     (f32.store
      (get_local $0)
      (f32.sub
       (f32.mul
        (get_local $10)
        (get_local $20)
       )
       (f32.mul
        (get_local $19)
        (get_local $11)
       )
      )
     )
     (f32.store
      (get_local $1)
      (f32.add
       (f32.mul
        (get_local $12)
        (tee_local $10
         (f32.load
          (i32.add
           (get_local $9)
           (i32.shl
            (i32.add
             (i32.sub
              (get_local $8)
              (get_local $5)
             )
             (i32.const -1)
            )
            (i32.const 2)
           )
          )
         )
        )
       )
       (f32.mul
        (get_local $13)
        (tee_local $11
         (f32.load
          (i32.add
           (get_local $9)
           (i32.shl
            (i32.add
             (i32.sub
              (get_local $14)
              (get_local $5)
             )
             (i32.const -1)
            )
            (i32.const 2)
           )
          )
         )
        )
       )
      )
     )
     (f32.store
      (get_local $15)
      (f32.sub
       (f32.mul
        (get_local $12)
        (get_local $11)
       )
       (f32.mul
        (get_local $13)
        (get_local $10)
       )
      )
     )
     (set_local $7
      (i32.add
       (get_local $7)
       (i32.const 8)
      )
     )
     (set_local $5
      (i32.add
       (get_local $5)
       (i32.const 1)
      )
     )
     (set_local $0
      (get_local $1)
     )
     (br $while-in3)
    )
   )
  )
  (set_local $6
   (i32.div_s
    (get_local $4)
    (i32.const 2)
   )
  )
  (set_local $5
   (i32.const 0)
  )
  (set_local $0
   (i32.add
    (get_local $2)
    (i32.shl
     (get_local $4)
     (i32.const 2)
    )
   )
  )
  (set_local $1
   (i32.add
    (get_local $3)
    (i32.shl
     (get_local $4)
     (i32.const 2)
    )
   )
  )
  (loop $while-in5
   (set_local $1
    (i32.add
     (get_local $1)
     (i32.const -4)
    )
   )
   (set_local $0
    (i32.add
     (get_local $0)
     (i32.const -4)
    )
   )
   (if
    (i32.lt_s
     (get_local $5)
     (get_local $6)
    )
    (block
     (f32.store
      (get_local $2)
      (f32.sub
       (f32.mul
        (tee_local $12
         (f32.load
          (get_local $1)
         )
        )
        (tee_local $13
         (f32.load
          (get_local $2)
         )
        )
       )
       (f32.mul
        (tee_local $10
         (f32.load
          (get_local $3)
         )
        )
        (tee_local $11
         (f32.load
          (get_local $0)
         )
        )
       )
      )
     )
     (f32.store
      (get_local $0)
      (f32.add
       (f32.mul
        (get_local $10)
        (get_local $13)
       )
       (f32.mul
        (get_local $12)
        (get_local $11)
       )
      )
     )
     (set_local $3
      (i32.add
       (get_local $3)
       (i32.const 4)
      )
     )
     (set_local $2
      (i32.add
       (get_local $2)
       (i32.const 4)
      )
     )
     (set_local $5
      (i32.add
       (get_local $5)
       (i32.const 1)
      )
     )
     (br $while-in5)
    )
   )
  )
 )
 (func $_opus_custom_mode_create (; 139 ;) (; has Stack IR ;) (result i32)
  (i32.const 40464)
 )
 (func $_pitch_downsample (; 140 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 f32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 f32)
  (set_local $6
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.const 80)
   )
  )
  (set_local $8
   (i32.shr_s
    (get_local $2)
    (i32.const 1)
   )
  )
  (set_local $7
   (i32.const 1)
  )
  (loop $while-in
   (set_local $4
    (i32.load
     (get_local $0)
    )
   )
   (if
    (i32.lt_s
     (get_local $7)
     (get_local $8)
    )
    (block
     (f32.store
      (i32.add
       (get_local $1)
       (i32.shl
        (get_local $7)
        (i32.const 2)
       )
      )
      (f32.mul
       (f32.add
        (f32.mul
         (f32.add
          (f32.load
           (i32.add
            (get_local $4)
            (i32.shl
             (i32.add
              (tee_local $2
               (i32.shl
                (get_local $7)
                (i32.const 1)
               )
              )
              (i32.const -1)
             )
             (i32.const 2)
            )
           )
          )
          (f32.load
           (i32.add
            (get_local $4)
            (i32.shl
             (i32.or
              (get_local $2)
              (i32.const 1)
             )
             (i32.const 2)
            )
           )
          )
         )
         (f32.const 0.5)
        )
        (f32.load
         (i32.add
          (get_local $4)
          (i32.shl
           (get_local $2)
           (i32.const 2)
          )
         )
        )
       )
       (f32.const 0.5)
      )
     )
     (set_local $7
      (i32.add
       (get_local $7)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (f32.store
   (get_local $1)
   (f32.mul
    (f32.add
     (f32.mul
      (f32.load offset=4
       (get_local $4)
      )
      (f32.const 0.5)
     )
     (f32.load
      (get_local $4)
     )
    )
    (f32.const 0.5)
   )
  )
  (if
   (i32.eq
    (get_local $3)
    (i32.const 2)
   )
   (block
    (set_local $2
     (i32.add
      (get_local $0)
      (i32.const 4)
     )
    )
    (set_local $4
     (i32.const 1)
    )
    (loop $while-in1
     (set_local $3
      (i32.load
       (get_local $2)
      )
     )
     (if
      (i32.lt_s
       (get_local $4)
       (get_local $8)
      )
      (block
       (f32.store
        (tee_local $0
         (i32.add
          (get_local $1)
          (i32.shl
           (get_local $4)
           (i32.const 2)
          )
         )
        )
        (f32.add
         (f32.load
          (get_local $0)
         )
         (f32.mul
          (f32.add
           (f32.mul
            (f32.add
             (f32.load
              (i32.add
               (get_local $3)
               (i32.shl
                (i32.add
                 (tee_local $0
                  (i32.shl
                   (get_local $4)
                   (i32.const 1)
                  )
                 )
                 (i32.const -1)
                )
                (i32.const 2)
               )
              )
             )
             (f32.load
              (i32.add
               (get_local $3)
               (i32.shl
                (i32.or
                 (get_local $0)
                 (i32.const 1)
                )
                (i32.const 2)
               )
              )
             )
            )
            (f32.const 0.5)
           )
           (f32.load
            (i32.add
             (get_local $3)
             (i32.shl
              (get_local $0)
              (i32.const 2)
             )
            )
           )
          )
          (f32.const 0.5)
         )
        )
       )
       (set_local $4
        (i32.add
         (get_local $4)
         (i32.const 1)
        )
       )
       (br $while-in1)
      )
     )
    )
    (f32.store
     (get_local $1)
     (f32.add
      (f32.load
       (get_local $1)
      )
      (f32.mul
       (f32.add
        (f32.mul
         (f32.load offset=4
          (get_local $3)
         )
         (f32.const 0.5)
        )
        (f32.load
         (get_local $3)
        )
       )
       (f32.const 0.5)
      )
     )
    )
   )
  )
  (set_local $4
   (i32.add
    (get_local $6)
    (i32.const 32)
   )
  )
  (call $__celt_autocorr
   (get_local $1)
   (tee_local $2
    (i32.add
     (get_local $6)
     (i32.const 48)
    )
   )
   (i32.const 0)
   (i32.const 0)
   (i32.const 4)
   (get_local $8)
  )
  (f32.store
   (get_local $2)
   (f32.mul
    (f32.load
     (get_local $2)
    )
    (f32.const 1.000100016593933)
   )
  )
  (set_local $3
   (i32.const 1)
  )
  (loop $while-in3
   (if
    (i32.ne
     (get_local $3)
     (i32.const 5)
    )
    (block
     (set_local $5
      (f32.load
       (tee_local $0
        (i32.add
         (get_local $2)
         (i32.shl
          (get_local $3)
          (i32.const 2)
         )
        )
       )
      )
     )
     (f32.store
      (get_local $0)
      (f32.sub
       (get_local $5)
       (f32.mul
        (f32.mul
         (get_local $5)
         (tee_local $5
          (f32.mul
           (f32.convert_s/i32
            (get_local $3)
           )
           (f32.const 0.00800000037997961)
          )
         )
        )
        (get_local $5)
       )
      )
     )
     (set_local $3
      (i32.add
       (get_local $3)
       (i32.const 1)
      )
     )
     (br $while-in3)
    )
   )
  )
  (call $__celt_lpc
   (get_local $4)
   (get_local $2)
   (i32.const 4)
  )
  (set_local $5
   (f32.const 1)
  )
  (set_local $2
   (i32.const 0)
  )
  (loop $while-in5
   (if
    (i32.ne
     (get_local $2)
     (i32.const 4)
    )
    (block
     (f32.store
      (tee_local $0
       (i32.add
        (get_local $4)
        (i32.shl
         (get_local $2)
         (i32.const 2)
        )
       )
      )
      (f32.mul
       (f32.load
        (get_local $0)
       )
       (tee_local $5
        (f32.mul
         (get_local $5)
         (f32.const 0.8999999761581421)
        )
       )
      )
     )
     (set_local $2
      (i32.add
       (get_local $2)
       (i32.const 1)
      )
     )
     (br $while-in5)
    )
   )
  )
  (f32.store
   (get_local $6)
   (f32.add
    (tee_local $9
     (f32.load
      (get_local $4)
     )
    )
    (f32.const 0.800000011920929)
   )
  )
  (f32.store offset=4
   (get_local $6)
   (f32.add
    (tee_local $5
     (f32.load offset=4
      (get_local $4)
     )
    )
    (f32.mul
     (get_local $9)
     (f32.const 0.800000011920929)
    )
   )
  )
  (f32.store offset=8
   (get_local $6)
   (f32.add
    (tee_local $9
     (f32.load offset=8
      (get_local $4)
     )
    )
    (f32.mul
     (get_local $5)
     (f32.const 0.800000011920929)
    )
   )
  )
  (f32.store offset=12
   (get_local $6)
   (f32.add
    (tee_local $5
     (f32.load offset=12
      (get_local $4)
     )
    )
    (f32.mul
     (get_local $9)
     (f32.const 0.800000011920929)
    )
   )
  )
  (f32.store offset=16
   (get_local $6)
   (f32.mul
    (get_local $5)
    (f32.const 0.800000011920929)
   )
  )
  (call $_celt_fir5
   (get_local $1)
   (get_local $6)
   (get_local $8)
  )
  (set_global $STACKTOP
   (get_local $6)
  )
 )
 (func $_celt_fir5 (; 141 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 f32)
  (local $5 f32)
  (local $6 f32)
  (local $7 f32)
  (local $8 f32)
  (local $9 f32)
  (local $10 f32)
  (local $11 f32)
  (local $12 f32)
  (local $13 f32)
  (local $14 f32)
  (local $15 f32)
  (local $16 f32)
  (local $17 f32)
  (set_local $10
   (f32.load
    (get_local $1)
   )
  )
  (set_local $11
   (f32.load offset=4
    (get_local $1)
   )
  )
  (set_local $12
   (f32.load offset=8
    (get_local $1)
   )
  )
  (set_local $13
   (f32.load offset=12
    (get_local $1)
   )
  )
  (set_local $14
   (f32.load offset=16
    (get_local $1)
   )
  )
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $3)
     (get_local $2)
    )
    (block
     (set_local $9
      (f32.load
       (tee_local $1
        (i32.add
         (get_local $0)
         (i32.shl
          (get_local $3)
          (i32.const 2)
         )
        )
       )
      )
     )
     (f32.store
      (get_local $1)
      (f32.add
       (f32.add
        (f32.add
         (f32.add
          (f32.add
           (get_local $9)
           (f32.mul
            (get_local $10)
            (get_local $7)
           )
          )
          (f32.mul
           (get_local $11)
           (get_local $6)
          )
         )
         (f32.mul
          (get_local $12)
          (get_local $5)
         )
        )
        (f32.mul
         (get_local $13)
         (get_local $4)
        )
       )
       (f32.mul
        (get_local $14)
        (get_local $8)
       )
      )
     )
     (set_local $15
      (get_local $7)
     )
     (set_local $16
      (get_local $6)
     )
     (set_local $17
      (get_local $5)
     )
     (set_local $8
      (get_local $4)
     )
     (set_local $3
      (i32.add
       (get_local $3)
       (i32.const 1)
      )
     )
     (set_local $7
      (get_local $9)
     )
     (set_local $6
      (get_local $15)
     )
     (set_local $5
      (get_local $16)
     )
     (set_local $4
      (get_local $17)
     )
     (br $while-in)
    )
   )
  )
 )
 (func $_celt_pitch_xcorr_c (; 142 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 f32)
  (set_local $5
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.le_s
    (get_local $4)
    (i32.const 0)
   )
   (call $_celt_fatal
    (i32.const 43203)
    (i32.const 43233)
    (i32.const 251)
   )
  )
  (set_local $8
   (i32.add
    (get_local $4)
    (i32.const -3)
   )
  )
  (set_local $9
   (i32.add
    (get_local $5)
    (i32.const 4)
   )
  )
  (set_local $10
   (i32.add
    (get_local $5)
    (i32.const 8)
   )
  )
  (set_local $11
   (i32.add
    (get_local $5)
    (i32.const 12)
   )
  )
  (set_local $7
   (i32.and
    (get_local $4)
    (i32.const -4)
   )
  )
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $6)
     (get_local $8)
    )
    (block
     (i64.store
      (get_local $5)
      (i64.const 0)
     )
     (i64.store offset=8
      (get_local $5)
      (i64.const 0)
     )
     (call $_xcorr_kernel_c
      (get_local $0)
      (i32.add
       (get_local $1)
       (i32.shl
        (get_local $6)
        (i32.const 2)
       )
      )
      (get_local $5)
      (get_local $3)
     )
     (i32.store
      (i32.add
       (get_local $2)
       (i32.shl
        (get_local $6)
        (i32.const 2)
       )
      )
      (i32.load
       (get_local $5)
      )
     )
     (i32.store
      (i32.add
       (get_local $2)
       (i32.shl
        (i32.or
         (get_local $6)
         (i32.const 1)
        )
        (i32.const 2)
       )
      )
      (i32.load
       (get_local $9)
      )
     )
     (i32.store
      (i32.add
       (get_local $2)
       (i32.shl
        (i32.or
         (get_local $6)
         (i32.const 2)
        )
        (i32.const 2)
       )
      )
      (i32.load
       (get_local $10)
      )
     )
     (i32.store
      (i32.add
       (get_local $2)
       (i32.shl
        (i32.or
         (get_local $6)
         (i32.const 3)
        )
        (i32.const 2)
       )
      )
      (i32.load
       (get_local $11)
      )
     )
     (set_local $6
      (i32.add
       (get_local $6)
       (i32.const 4)
      )
     )
     (br $while-in)
    )
   )
  )
  (loop $while-in1
   (if
    (i32.lt_s
     (get_local $7)
     (get_local $4)
    )
    (block
     (set_local $12
      (call $_celt_inner_prod_c
       (get_local $0)
       (i32.add
        (get_local $1)
        (i32.shl
         (get_local $7)
         (i32.const 2)
        )
       )
       (get_local $3)
      )
     )
     (f32.store
      (i32.add
       (get_local $2)
       (i32.shl
        (get_local $7)
        (i32.const 2)
       )
      )
      (get_local $12)
     )
     (set_local $7
      (i32.add
       (get_local $7)
       (i32.const 1)
      )
     )
     (br $while-in1)
    )
   )
  )
  (set_global $STACKTOP
   (get_local $5)
  )
 )
 (func $_xcorr_kernel_c (; 143 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 f32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 f32)
  (local $9 f32)
  (local $10 f32)
  (local $11 i32)
  (local $12 f32)
  (local $13 i32)
  (local $14 f32)
  (local $15 f32)
  (local $16 f32)
  (local $17 f32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (if
   (i32.le_s
    (get_local $3)
    (i32.const 2)
   )
   (call $_celt_fatal
    (i32.const 43311)
    (i32.const 43336)
    (i32.const 69)
   )
  )
  (set_local $21
   (i32.add
    (get_local $3)
    (i32.const -3)
   )
  )
  (set_local $5
   (i32.add
    (get_local $2)
    (i32.const 4)
   )
  )
  (set_local $6
   (i32.add
    (get_local $2)
    (i32.const 8)
   )
  )
  (set_local $7
   (i32.add
    (get_local $2)
    (i32.const 12)
   )
  )
  (set_local $18
   (i32.and
    (get_local $3)
    (i32.const -4)
   )
  )
  (set_local $19
   (i32.add
    (get_local $1)
    (i32.shl
     (i32.or
      (get_local $3)
      (i32.const 3)
     )
     (i32.const 2)
    )
   )
  )
  (set_local $11
   (get_local $0)
  )
  (set_local $13
   (i32.add
    (get_local $1)
    (i32.const 12)
   )
  )
  (set_local $8
   (f32.load offset=4
    (get_local $1)
   )
  )
  (set_local $12
   (f32.load offset=8
    (get_local $1)
   )
  )
  (set_local $10
   (f32.load
    (get_local $1)
   )
  )
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $20)
     (get_local $21)
    )
    (block
     (set_local $9
      (f32.load
       (get_local $13)
      )
     )
     (f32.store
      (get_local $2)
      (tee_local $14
       (f32.add
        (f32.load
         (get_local $2)
        )
        (f32.mul
         (tee_local $4
          (f32.load
           (get_local $11)
          )
         )
         (get_local $10)
        )
       )
      )
     )
     (f32.store
      (get_local $5)
      (tee_local $15
       (f32.add
        (f32.load
         (get_local $5)
        )
        (f32.mul
         (get_local $4)
         (get_local $8)
        )
       )
      )
     )
     (f32.store
      (get_local $6)
      (tee_local $16
       (f32.add
        (f32.load
         (get_local $6)
        )
        (f32.mul
         (get_local $4)
         (get_local $12)
        )
       )
      )
     )
     (f32.store
      (get_local $7)
      (tee_local $17
       (f32.add
        (f32.load
         (get_local $7)
        )
        (f32.mul
         (get_local $4)
         (get_local $9)
        )
       )
      )
     )
     (set_local $10
      (f32.load offset=4
       (get_local $13)
      )
     )
     (f32.store
      (get_local $2)
      (tee_local $14
       (f32.add
        (get_local $14)
        (f32.mul
         (tee_local $4
          (f32.load offset=4
           (get_local $11)
          )
         )
         (get_local $8)
        )
       )
      )
     )
     (f32.store
      (get_local $5)
      (tee_local $15
       (f32.add
        (get_local $15)
        (f32.mul
         (get_local $4)
         (get_local $12)
        )
       )
      )
     )
     (f32.store
      (get_local $6)
      (tee_local $16
       (f32.add
        (get_local $16)
        (f32.mul
         (get_local $4)
         (get_local $9)
        )
       )
      )
     )
     (f32.store
      (get_local $7)
      (tee_local $17
       (f32.add
        (get_local $17)
        (f32.mul
         (get_local $4)
         (get_local $10)
        )
       )
      )
     )
     (set_local $8
      (f32.load offset=8
       (get_local $13)
      )
     )
     (f32.store
      (get_local $2)
      (tee_local $14
       (f32.add
        (get_local $14)
        (f32.mul
         (tee_local $4
          (f32.load offset=8
           (get_local $11)
          )
         )
         (get_local $12)
        )
       )
      )
     )
     (f32.store
      (get_local $5)
      (tee_local $15
       (f32.add
        (get_local $15)
        (f32.mul
         (get_local $4)
         (get_local $9)
        )
       )
      )
     )
     (f32.store
      (get_local $6)
      (tee_local $16
       (f32.add
        (get_local $16)
        (f32.mul
         (get_local $4)
         (get_local $10)
        )
       )
      )
     )
     (f32.store
      (get_local $7)
      (tee_local $17
       (f32.add
        (get_local $17)
        (f32.mul
         (get_local $4)
         (get_local $8)
        )
       )
      )
     )
     (set_local $12
      (f32.load offset=12
       (get_local $13)
      )
     )
     (f32.store
      (get_local $2)
      (f32.add
       (get_local $14)
       (f32.mul
        (tee_local $4
         (f32.load offset=12
          (get_local $11)
         )
        )
        (get_local $9)
       )
      )
     )
     (f32.store
      (get_local $5)
      (f32.add
       (get_local $15)
       (f32.mul
        (get_local $4)
        (get_local $10)
       )
      )
     )
     (f32.store
      (get_local $6)
      (f32.add
       (get_local $16)
       (f32.mul
        (get_local $4)
        (get_local $8)
       )
      )
     )
     (f32.store
      (get_local $7)
      (f32.add
       (get_local $17)
       (f32.mul
        (get_local $4)
        (get_local $12)
       )
      )
     )
     (set_local $11
      (i32.add
       (get_local $11)
       (i32.const 16)
      )
     )
     (set_local $13
      (i32.add
       (get_local $13)
       (i32.const 16)
      )
     )
     (set_local $20
      (i32.add
       (get_local $20)
       (i32.const 4)
      )
     )
     (br $while-in)
    )
   )
  )
  (set_local $0
   (i32.add
    (get_local $0)
    (i32.shl
     (get_local $18)
     (i32.const 2)
    )
   )
  )
  (set_local $1
   (if (result i32)
    (i32.lt_s
     (get_local $18)
     (get_local $3)
    )
    (block (result i32)
     (set_local $9
      (f32.load
       (get_local $19)
      )
     )
     (f32.store
      (get_local $2)
      (f32.add
       (f32.load
        (get_local $2)
       )
       (f32.mul
        (tee_local $4
         (f32.load
          (get_local $0)
         )
        )
        (get_local $10)
       )
      )
     )
     (f32.store
      (get_local $5)
      (f32.add
       (f32.load
        (get_local $5)
       )
       (f32.mul
        (get_local $4)
        (get_local $8)
       )
      )
     )
     (f32.store
      (get_local $6)
      (f32.add
       (f32.load
        (get_local $6)
       )
       (f32.mul
        (get_local $4)
        (get_local $12)
       )
      )
     )
     (f32.store
      (get_local $7)
      (f32.add
       (f32.load
        (get_local $7)
       )
       (f32.mul
        (get_local $4)
        (get_local $9)
       )
      )
     )
     (set_local $0
      (i32.add
       (get_local $0)
       (i32.const 4)
      )
     )
     (i32.add
      (get_local $19)
      (i32.const 4)
     )
    )
    (get_local $19)
   )
  )
  (if
   (i32.lt_s
    (tee_local $11
     (i32.or
      (get_local $18)
      (i32.const 1)
     )
    )
    (get_local $3)
   )
   (block
    (set_local $10
     (f32.load
      (get_local $1)
     )
    )
    (f32.store
     (get_local $2)
     (f32.add
      (f32.load
       (get_local $2)
      )
      (f32.mul
       (tee_local $4
        (f32.load
         (get_local $0)
        )
       )
       (get_local $8)
      )
     )
    )
    (f32.store
     (get_local $5)
     (f32.add
      (f32.load
       (get_local $5)
      )
      (f32.mul
       (get_local $4)
       (get_local $12)
      )
     )
    )
    (f32.store
     (get_local $6)
     (f32.add
      (f32.load
       (get_local $6)
      )
      (f32.mul
       (get_local $4)
       (get_local $9)
      )
     )
    )
    (f32.store
     (get_local $7)
     (f32.add
      (f32.load
       (get_local $7)
      )
      (f32.mul
       (get_local $4)
       (get_local $10)
      )
     )
    )
    (set_local $0
     (i32.add
      (get_local $0)
      (i32.const 4)
     )
    )
    (set_local $1
     (i32.add
      (get_local $1)
      (i32.const 4)
     )
    )
   )
  )
  (if
   (i32.ge_s
    (i32.add
     (get_local $11)
     (i32.const 1)
    )
    (get_local $3)
   )
   (return)
  )
  (set_local $4
   (f32.load
    (get_local $1)
   )
  )
  (f32.store
   (get_local $2)
   (f32.add
    (f32.load
     (get_local $2)
    )
    (f32.mul
     (tee_local $8
      (f32.load
       (get_local $0)
      )
     )
     (get_local $12)
    )
   )
  )
  (f32.store
   (get_local $5)
   (f32.add
    (f32.load
     (get_local $5)
    )
    (f32.mul
     (get_local $8)
     (get_local $9)
    )
   )
  )
  (f32.store
   (get_local $6)
   (f32.add
    (f32.load
     (get_local $6)
    )
    (f32.mul
     (get_local $8)
     (get_local $10)
    )
   )
  )
  (f32.store
   (get_local $7)
   (f32.add
    (f32.load
     (get_local $7)
    )
    (f32.mul
     (get_local $8)
     (get_local $4)
    )
   )
  )
 )
 (func $_pitch_search (; 144 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 f32)
  (local $12 i32)
  (local $13 i32)
  (local $14 f32)
  (local $15 f32)
  (set_local $6
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.const 16)
   )
  )
  (i64.store
   (get_local $6)
   (i64.const 0)
  )
  (if
   (i32.le_s
    (get_local $2)
    (i32.const 0)
   )
   (call $_celt_fatal
    (i32.const 43246)
    (i32.const 43233)
    (i32.const 302)
   )
  )
  (if
   (i32.le_s
    (get_local $3)
    (i32.const 0)
   )
   (call $_celt_fatal
    (i32.const 43203)
    (i32.const 43233)
    (i32.const 303)
   )
  )
  (set_local $12
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (tee_local $8
        (i32.shr_s
         (get_local $2)
         (i32.const 2)
        )
       )
       (i32.const 2)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (set_local $9
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (tee_local $10
        (i32.shr_s
         (i32.add
          (get_local $2)
          (get_local $3)
         )
         (i32.const 2)
        )
       )
       (i32.const 2)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (set_local $7
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (tee_local $13
        (i32.shr_s
         (get_local $3)
         (i32.const 1)
        )
       )
       (i32.const 2)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $5)
     (get_local $8)
    )
    (block
     (i32.store
      (i32.add
       (get_local $12)
       (i32.shl
        (get_local $5)
        (i32.const 2)
       )
      )
      (i32.load
       (i32.add
        (get_local $0)
        (i32.shl
         (get_local $5)
         (i32.const 3)
        )
       )
      )
     )
     (set_local $5
      (i32.add
       (get_local $5)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (set_local $5
   (i32.const 0)
  )
  (loop $while-in1
   (if
    (i32.lt_s
     (get_local $5)
     (get_local $10)
    )
    (block
     (i32.store
      (i32.add
       (get_local $9)
       (i32.shl
        (get_local $5)
        (i32.const 2)
       )
      )
      (i32.load
       (i32.add
        (get_local $1)
        (i32.shl
         (get_local $5)
         (i32.const 3)
        )
       )
      )
     )
     (set_local $5
      (i32.add
       (get_local $5)
       (i32.const 1)
      )
     )
     (br $while-in1)
    )
   )
  )
  (call $_celt_pitch_xcorr_c
   (get_local $12)
   (get_local $9)
   (get_local $7)
   (get_local $8)
   (tee_local $3
    (i32.shr_s
     (get_local $3)
     (i32.const 2)
    )
   )
  )
  (call $_find_best_pitch
   (get_local $7)
   (get_local $9)
   (get_local $8)
   (get_local $3)
   (get_local $6)
  )
  (set_local $8
   (i32.shl
    (i32.load
     (get_local $6)
    )
    (i32.const 1)
   )
  )
  (set_local $9
   (i32.shl
    (i32.load offset=4
     (get_local $6)
    )
    (i32.const 1)
   )
  )
  (set_local $3
   (i32.shr_s
    (get_local $2)
    (i32.const 1)
   )
  )
  (set_local $2
   (i32.const 0)
  )
  (loop $while-in3
   (if
    (i32.lt_s
     (get_local $2)
     (get_local $13)
    )
    (block
     (f32.store
      (tee_local $12
       (i32.add
        (get_local $7)
        (i32.shl
         (get_local $2)
         (i32.const 2)
        )
       )
      )
      (f32.const 0)
     )
     (set_local $10
      (i32.sub
       (i32.const 0)
       (tee_local $5
        (i32.sub
         (get_local $2)
         (get_local $8)
        )
       )
      )
     )
     (block $__rjto$0
      (block $__rjti$0
       (br_if $__rjti$0
        (i32.le_s
         (if (result i32)
          (i32.gt_s
           (get_local $5)
           (i32.const -1)
          )
          (get_local $5)
          (get_local $10)
         )
         (i32.const 2)
        )
       )
       (set_local $10
        (i32.sub
         (i32.const 0)
         (tee_local $5
          (i32.sub
           (get_local $2)
           (get_local $9)
          )
         )
        )
       )
       (br_if $__rjti$0
        (i32.le_s
         (if (result i32)
          (i32.gt_s
           (get_local $5)
           (i32.const -1)
          )
          (get_local $5)
          (get_local $10)
         )
         (i32.const 2)
        )
       )
       (br $__rjto$0)
      )
      (set_local $11
       (call $_celt_inner_prod_c
        (get_local $0)
        (i32.add
         (get_local $1)
         (i32.shl
          (get_local $2)
          (i32.const 2)
         )
        )
        (get_local $3)
       )
      )
      (f32.store
       (get_local $12)
       (if (result f32)
        (f32.lt
         (get_local $11)
         (f32.const -1)
        )
        (f32.const -1)
        (get_local $11)
       )
      )
     )
     (set_local $2
      (i32.add
       (get_local $2)
       (i32.const 1)
      )
     )
     (br $while-in3)
    )
   )
  )
  (call $_find_best_pitch
   (get_local $7)
   (get_local $1)
   (get_local $3)
   (get_local $13)
   (get_local $6)
  )
  (if
   (i32.eqz
    (i32.and
     (i32.gt_s
      (tee_local $0
       (i32.load
        (get_local $6)
       )
      )
      (i32.const 0)
     )
     (i32.lt_s
      (get_local $0)
      (i32.add
       (get_local $13)
       (i32.const -1)
      )
     )
    )
   )
   (block
    (i32.store
     (get_local $4)
     (i32.shl
      (get_local $0)
      (i32.const 1)
     )
    )
    (set_global $STACKTOP
     (get_local $6)
    )
    (return)
   )
  )
  (if
   (f32.gt
    (f32.sub
     (tee_local $11
      (f32.load
       (i32.add
        (get_local $7)
        (i32.shl
         (i32.add
          (get_local $0)
          (i32.const 1)
         )
         (i32.const 2)
        )
       )
      )
     )
     (tee_local $14
      (f32.load
       (i32.add
        (get_local $7)
        (i32.shl
         (i32.add
          (get_local $0)
          (i32.const -1)
         )
         (i32.const 2)
        )
       )
      )
     )
    )
    (f32.mul
     (f32.sub
      (tee_local $15
       (f32.load
        (i32.add
         (get_local $7)
         (i32.shl
          (get_local $0)
          (i32.const 2)
         )
        )
       )
      )
      (get_local $14)
     )
     (f32.const 0.699999988079071)
    )
   )
   (block
    (i32.store
     (get_local $4)
     (i32.sub
      (i32.shl
       (get_local $0)
       (i32.const 1)
      )
      (i32.const 1)
     )
    )
    (set_global $STACKTOP
     (get_local $6)
    )
    (return)
   )
  )
  (if
   (f32.gt
    (f32.sub
     (get_local $14)
     (get_local $11)
    )
    (f32.mul
     (f32.sub
      (get_local $15)
      (get_local $11)
     )
     (f32.const 0.699999988079071)
    )
   )
   (block
    (i32.store
     (get_local $4)
     (i32.sub
      (i32.shl
       (get_local $0)
       (i32.const 1)
      )
      (i32.const -1)
     )
    )
    (set_global $STACKTOP
     (get_local $6)
    )
    (return)
   )
  )
  (i32.store
   (get_local $4)
   (i32.shl
    (get_local $0)
    (i32.const 1)
   )
  )
  (set_global $STACKTOP
   (get_local $6)
  )
 )
 (func $_find_best_pitch (; 145 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 f32)
  (local $6 i32)
  (local $7 i32)
  (local $8 f32)
  (local $9 f32)
  (local $10 f32)
  (local $11 f32)
  (local $12 i32)
  (local $13 f32)
  (local $14 f32)
  (local $15 f32)
  (i32.store
   (get_local $4)
   (i32.const 0)
  )
  (i32.store
   (tee_local $12
    (i32.add
     (get_local $4)
     (i32.const 4)
    )
   )
   (i32.const 1)
  )
  (set_local $5
   (f32.const 1)
  )
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $7)
     (get_local $2)
    )
    (block
     (set_local $5
      (f32.add
       (get_local $5)
       (f32.mul
        (tee_local $9
         (f32.load
          (i32.add
           (get_local $1)
           (i32.shl
            (get_local $7)
            (i32.const 2)
           )
          )
         )
        )
        (get_local $9)
       )
      )
     )
     (set_local $7
      (i32.add
       (get_local $7)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (set_local $11
   (f32.const -1)
  )
  (set_local $14
   (f32.const -1)
  )
  (set_local $7
   (i32.const 0)
  )
  (set_local $15
   (f32.const -1)
  )
  (set_local $9
   (f32.const 0)
  )
  (loop $while-in1
   (if
    (i32.lt_s
     (get_local $6)
     (get_local $3)
    )
    (block
     (if
      (f32.gt
       (tee_local $8
        (f32.load
         (i32.add
          (get_local $0)
          (i32.shl
           (get_local $6)
           (i32.const 2)
          )
         )
        )
       )
       (f32.const 0)
      )
      (if
       (f32.gt
        (f32.mul
         (tee_local $8
          (f32.mul
           (tee_local $8
            (f32.mul
             (get_local $8)
             (f32.const 9.999999960041972e-13)
            )
           )
           (get_local $8)
          )
         )
         (get_local $10)
        )
        (f32.mul
         (get_local $11)
         (get_local $5)
        )
       )
       (if
        (f32.gt
         (f32.mul
          (get_local $8)
          (get_local $13)
         )
         (f32.mul
          (get_local $14)
          (get_local $5)
         )
        )
        (block
         (i32.store
          (get_local $12)
          (get_local $7)
         )
         (i32.store
          (get_local $4)
          (get_local $6)
         )
         (set_local $7
          (get_local $6)
         )
         (set_local $11
          (get_local $15)
         )
         (set_local $14
          (tee_local $15
           (get_local $8)
          )
         )
         (set_local $10
          (get_local $9)
         )
         (set_local $13
          (tee_local $9
           (get_local $5)
          )
         )
        )
        (block
         (i32.store
          (get_local $12)
          (get_local $6)
         )
         (set_local $11
          (get_local $8)
         )
         (set_local $10
          (get_local $5)
         )
        )
       )
      )
     )
     (set_local $5
      (f32.add
       (get_local $5)
       (f32.sub
        (f32.mul
         (tee_local $5
          (f32.load
           (i32.add
            (get_local $1)
            (i32.shl
             (i32.add
              (get_local $6)
              (get_local $2)
             )
             (i32.const 2)
            )
           )
          )
         )
         (get_local $5)
        )
        (f32.mul
         (tee_local $5
          (f32.load
           (i32.add
            (get_local $1)
            (i32.shl
             (get_local $6)
             (i32.const 2)
            )
           )
          )
         )
         (get_local $5)
        )
       )
      )
     )
     (set_local $6
      (i32.add
       (get_local $6)
       (i32.const 1)
      )
     )
     (if
      (f32.lt
       (get_local $5)
       (f32.const 1)
      )
      (set_local $5
       (f32.const 1)
      )
     )
     (br $while-in1)
    )
   )
  )
 )
 (func $_remove_doubling (; 146 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 f32) (result f32)
  (local $5 f32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 f32)
  (local $11 f32)
  (local $12 f32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 f32)
  (local $19 f32)
  (local $20 f32)
  (local $21 f32)
  (local $22 i32)
  (local $23 f32)
  (local $24 f32)
  (local $25 f32)
  (local $26 f32)
  (local $27 i32)
  (set_local $8
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.const 2080)
   )
  )
  (set_local $13
   (i32.add
    (get_local $8)
    (i32.const 2072)
   )
  )
  (set_local $6
   (i32.add
    (get_local $8)
    (i32.const 2068)
   )
  )
  (set_local $17
   (i32.add
    (get_local $8)
    (i32.const 2064)
   )
  )
  (set_local $14
   (i32.add
    (get_local $8)
    (i32.const 2052)
   )
  )
  (set_local $7
   (i32.div_s
    (tee_local $16
     (i32.load
      (get_local $2)
     )
    )
    (i32.const 2)
   )
  )
  (set_local $22
   (i32.div_s
    (get_local $3)
    (i32.const 2)
   )
  )
  (set_local $15
   (i32.div_s
    (get_local $1)
    (i32.const 2)
   )
  )
  (set_local $9
   (i32.add
    (get_local $0)
    (i32.const 2048)
   )
  )
  (i32.store
   (get_local $2)
   (tee_local $1
    (if (result i32)
     (i32.gt_s
      (get_local $16)
      (i32.const 1023)
     )
     (i32.const 511)
     (get_local $7)
    )
   )
  )
  (call $_dual_inner_prod_c
   (get_local $9)
   (get_local $9)
   (i32.add
    (get_local $9)
    (i32.shl
     (i32.sub
      (i32.const 0)
      (get_local $1)
     )
     (i32.const 2)
    )
   )
   (get_local $15)
   (get_local $6)
   (get_local $13)
  )
  (i32.store
   (get_local $8)
   (tee_local $0
    (i32.load
     (get_local $6)
    )
   )
  )
  (set_local $5
   (tee_local $18
    (f32.reinterpret/i32
     (get_local $0)
    )
   )
  )
  (set_local $0
   (i32.const 1)
  )
  (loop $while-in
   (if
    (i32.ne
     (get_local $0)
     (i32.const 513)
    )
    (block
     (f32.store
      (i32.add
       (get_local $8)
       (i32.shl
        (get_local $0)
        (i32.const 2)
       )
      )
      (if (result f32)
       (f32.lt
        (tee_local $5
         (f32.sub
          (f32.add
           (get_local $5)
           (f32.mul
            (tee_local $5
             (f32.load
              (i32.add
               (get_local $9)
               (i32.shl
                (i32.sub
                 (i32.const 0)
                 (get_local $0)
                )
                (i32.const 2)
               )
              )
             )
            )
            (get_local $5)
           )
          )
          (f32.mul
           (tee_local $5
            (f32.load
             (i32.add
              (get_local $9)
              (i32.shl
               (i32.sub
                (get_local $15)
                (get_local $0)
               )
               (i32.const 2)
              )
             )
            )
           )
           (get_local $5)
          )
         )
        )
        (f32.const 0)
       )
       (f32.const 0)
       (get_local $5)
      )
     )
     (set_local $0
      (i32.add
       (get_local $0)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (set_local $5
   (call $_compute_pitch_gain
    (tee_local $10
     (f32.load
      (get_local $13)
     )
    )
    (get_local $18)
    (tee_local $12
     (f32.load
      (i32.add
       (get_local $8)
       (i32.shl
        (get_local $1)
        (i32.const 2)
       )
      )
     )
    )
   )
  )
  (set_local $16
   (i32.shl
    (get_local $1)
    (i32.const 1)
   )
  )
  (set_local $23
   (f32.mul
    (get_local $5)
    (f32.const 0.699999988079071)
   )
  )
  (set_local $24
   (f32.mul
    (get_local $5)
    (f32.const 0.8500000238418579)
   )
  )
  (set_local $25
   (f32.mul
    (get_local $4)
    (f32.const 0.5)
   )
  )
  (set_local $6
   (i32.const 2)
  )
  (set_local $0
   (get_local $1)
  )
  (loop $while-in1
   (block $while-out0
    (br_if $while-out0
     (i32.ge_u
      (get_local $6)
      (i32.const 16)
     )
    )
    (br_if $while-out0
     (i32.lt_s
      (tee_local $3
       (call $_celt_udiv
        (i32.add
         (get_local $16)
         (get_local $6)
        )
        (tee_local $7
         (i32.shl
          (get_local $6)
          (i32.const 1)
         )
        )
       )
      )
      (i32.const 7)
     )
    )
    (if
     (i32.eq
      (get_local $6)
      (i32.const 2)
     )
     (if
      (i32.gt_s
       (tee_local $7
        (i32.add
         (get_local $3)
         (get_local $1)
        )
       )
       (i32.const 512)
      )
      (set_local $7
       (get_local $1)
      )
     )
     (set_local $7
      (call $_celt_udiv
       (i32.add
        (i32.mul
         (i32.shl
          (i32.load
           (i32.add
            (i32.shl
             (get_local $6)
             (i32.const 2)
            )
            (i32.const 21248)
           )
          )
          (i32.const 1)
         )
         (get_local $1)
        )
        (get_local $6)
       )
       (get_local $7)
      )
     )
    )
    (call $_dual_inner_prod_c
     (get_local $9)
     (i32.add
      (get_local $9)
      (i32.shl
       (i32.sub
        (i32.const 0)
        (get_local $3)
       )
       (i32.const 2)
      )
     )
     (i32.add
      (get_local $9)
      (i32.shl
       (i32.sub
        (i32.const 0)
        (get_local $7)
       )
       (i32.const 2)
      )
     )
     (get_local $15)
     (get_local $13)
     (get_local $17)
    )
    (f32.store
     (get_local $13)
     (tee_local $19
      (f32.mul
       (f32.add
        (f32.load
         (get_local $13)
        )
        (f32.load
         (get_local $17)
        )
       )
       (f32.const 0.5)
      )
     )
    )
    (set_local $20
     (call $_compute_pitch_gain
      (get_local $19)
      (get_local $18)
      (tee_local $26
       (f32.mul
        (f32.add
         (f32.load
          (i32.add
           (get_local $8)
           (i32.shl
            (get_local $3)
            (i32.const 2)
           )
          )
         )
         (f32.load
          (i32.add
           (get_local $8)
           (i32.shl
            (get_local $7)
            (i32.const 2)
           )
          )
         )
        )
        (f32.const 0.5)
       )
      )
     )
    )
    (set_local $27
     (i32.sub
      (i32.const 0)
      (tee_local $7
       (i32.sub
        (get_local $3)
        (get_local $22)
       )
      )
     )
    )
    (if
     (f32.lt
      (tee_local $21
       (f32.sub
        (get_local $23)
        (tee_local $11
         (if (result f32)
          (i32.lt_s
           (if (result i32)
            (i32.gt_s
             (get_local $7)
             (i32.const -1)
            )
            (get_local $7)
            (tee_local $7
             (get_local $27)
            )
           )
           (i32.const 2)
          )
          (get_local $4)
          (if (result f32)
           (i32.eq
            (get_local $7)
            (i32.const 2)
           )
           (if (result f32)
            (i32.lt_s
             (i32.mul
              (i32.mul
               (get_local $6)
               (i32.const 5)
              )
              (get_local $6)
             )
             (get_local $1)
            )
            (get_local $25)
            (f32.const 0)
           )
           (f32.const 0)
          )
         )
        )
       )
      )
      (f32.const 0.30000001192092896)
     )
     (set_local $21
      (f32.const 0.30000001192092896)
     )
    )
    (if
     (i32.lt_s
      (get_local $3)
      (i32.const 21)
     )
     (if
      (f32.lt
       (tee_local $11
        (f32.sub
         (get_local $24)
         (get_local $11)
        )
       )
       (f32.const 0.4000000059604645)
      )
      (set_local $11
       (f32.const 0.4000000059604645)
      )
     )
     (set_local $11
      (get_local $21)
     )
    )
    (if
     (f32.gt
      (get_local $20)
      (get_local $11)
     )
     (block
      (set_local $5
       (get_local $20)
      )
      (set_local $12
       (get_local $26)
      )
      (set_local $10
       (get_local $19)
      )
      (set_local $0
       (get_local $3)
      )
     )
    )
    (set_local $6
     (i32.add
      (get_local $6)
      (i32.const 1)
     )
    )
    (br $while-in1)
   )
  )
  (set_local $4
   (if (result f32)
    (f32.le
     (get_local $12)
     (if (result f32)
      (f32.lt
       (get_local $10)
       (f32.const 0)
      )
      (tee_local $10
       (f32.const 0)
      )
      (get_local $10)
     )
    )
    (f32.const 1)
    (f32.div
     (get_local $10)
     (f32.add
      (get_local $12)
      (f32.const 1)
     )
    )
   )
  )
  (set_local $1
   (i32.const 0)
  )
  (loop $while-in3
   (if
    (i32.ne
     (get_local $1)
     (i32.const 3)
    )
    (block
     (set_local $10
      (call $_celt_inner_prod_c
       (get_local $9)
       (i32.add
        (get_local $9)
        (i32.shl
         (i32.sub
          (i32.const 1)
          (i32.add
           (get_local $0)
           (get_local $1)
          )
         )
         (i32.const 2)
        )
       )
       (get_local $15)
      )
     )
     (f32.store
      (i32.add
       (get_local $14)
       (i32.shl
        (get_local $1)
        (i32.const 2)
       )
      )
      (get_local $10)
     )
     (set_local $1
      (i32.add
       (get_local $1)
       (i32.const 1)
      )
     )
     (br $while-in3)
    )
   )
  )
  (if
   (f32.gt
    (f32.sub
     (tee_local $10
      (f32.load offset=8
       (get_local $14)
      )
     )
     (tee_local $12
      (f32.load
       (get_local $14)
      )
     )
    )
    (f32.mul
     (f32.sub
      (tee_local $11
       (f32.load offset=4
        (get_local $14)
       )
      )
      (get_local $12)
     )
     (f32.const 0.699999988079071)
    )
   )
   (block
    (if
     (i32.eqz
      (f32.gt
       (get_local $4)
       (get_local $5)
      )
     )
     (set_local $5
      (get_local $4)
     )
    )
    (i32.store
     (get_local $2)
     (if (result i32)
      (i32.gt_s
       (tee_local $0
        (i32.add
         (i32.shl
          (get_local $0)
          (i32.const 1)
         )
         (i32.const 1)
        )
       )
       (i32.const 15)
      )
      (get_local $0)
      (i32.const 15)
     )
    )
    (set_global $STACKTOP
     (get_local $8)
    )
    (return
     (get_local $5)
    )
   )
  )
  (if
   (f32.gt
    (f32.sub
     (get_local $12)
     (get_local $10)
    )
    (f32.mul
     (f32.sub
      (get_local $11)
      (get_local $10)
     )
     (f32.const 0.699999988079071)
    )
   )
   (block
    (if
     (i32.eqz
      (f32.gt
       (get_local $4)
       (get_local $5)
      )
     )
     (set_local $5
      (get_local $4)
     )
    )
    (i32.store
     (get_local $2)
     (if (result i32)
      (i32.gt_s
       (tee_local $0
        (i32.add
         (i32.shl
          (get_local $0)
          (i32.const 1)
         )
         (i32.const -1)
        )
       )
       (i32.const 15)
      )
      (get_local $0)
      (i32.const 15)
     )
    )
    (set_global $STACKTOP
     (get_local $8)
    )
    (return
     (get_local $5)
    )
   )
  )
  (if
   (i32.eqz
    (f32.gt
     (get_local $4)
     (get_local $5)
    )
   )
   (set_local $5
    (get_local $4)
   )
  )
  (i32.store
   (get_local $2)
   (if (result i32)
    (i32.gt_s
     (tee_local $0
      (i32.shl
       (get_local $0)
       (i32.const 1)
      )
     )
     (i32.const 15)
    )
    (get_local $0)
    (i32.const 15)
   )
  )
  (set_global $STACKTOP
   (get_local $8)
  )
  (get_local $5)
 )
 (func $_compute_pitch_gain (; 147 ;) (; has Stack IR ;) (param $0 f32) (param $1 f32) (param $2 f32) (result f32)
  (f32.div
   (get_local $0)
   (f32.sqrt
    (f32.add
     (f32.mul
      (get_local $1)
      (get_local $2)
     )
     (f32.const 1)
    )
   )
  )
 )
 (func $__celt_lpc (; 148 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 f32)
  (local $6 f32)
  (local $7 i32)
  (local $8 i32)
  (local $9 f32)
  (local $10 f32)
  (local $11 i32)
  (local $12 i32)
  (local $13 f32)
  (set_local $6
   (f32.load
    (get_local $1)
   )
  )
  (drop
   (call $_memset
    (get_local $0)
    (i32.const 0)
    (i32.shl
     (get_local $2)
     (i32.const 2)
    )
   )
  )
  (if
   (f32.eq
    (f32.load
     (get_local $1)
    )
    (f32.const 0)
   )
   (return)
  )
  (set_local $7
   (i32.const 1)
  )
  (block $__rjto$0
   (loop $while-in
    (block $while-out
     (br_if $__rjto$0
      (i32.ge_s
       (get_local $3)
       (get_local $2)
      )
     )
     (set_local $11
      (i32.shr_u
       (get_local $7)
       (i32.const 1)
      )
     )
     (set_local $5
      (f32.const 0)
     )
     (set_local $4
      (i32.const 0)
     )
     (loop $while-in1
      (if
       (i32.ne
        (get_local $3)
        (get_local $4)
       )
       (block
        (set_local $5
         (f32.add
          (get_local $5)
          (f32.mul
           (f32.load
            (i32.add
             (get_local $0)
             (i32.shl
              (get_local $4)
              (i32.const 2)
             )
            )
           )
           (f32.load
            (i32.add
             (get_local $1)
             (i32.shl
              (i32.sub
               (get_local $3)
               (get_local $4)
              )
              (i32.const 2)
             )
            )
           )
          )
         )
        )
        (set_local $4
         (i32.add
          (get_local $4)
          (i32.const 1)
         )
        )
        (br $while-in1)
       )
      )
     )
     (f32.store
      (i32.add
       (get_local $0)
       (i32.shl
        (get_local $3)
        (i32.const 2)
       )
      )
      (tee_local $9
       (f32.neg
        (tee_local $5
         (f32.div
          (f32.add
           (get_local $5)
           (f32.load
            (i32.add
             (get_local $1)
             (i32.shl
              (tee_local $4
               (i32.add
                (get_local $3)
                (i32.const 1)
               )
              )
              (i32.const 2)
             )
            )
           )
          )
          (get_local $6)
         )
        )
       )
      )
     )
     (set_local $12
      (i32.add
       (get_local $3)
       (i32.const -1)
      )
     )
     (set_local $3
      (i32.const 0)
     )
     (loop $while-in3
      (if
       (i32.ne
        (get_local $3)
        (get_local $11)
       )
       (block
        (set_local $10
         (f32.load
          (tee_local $8
           (i32.add
            (get_local $0)
            (i32.shl
             (get_local $3)
             (i32.const 2)
            )
           )
          )
         )
        )
        (f32.store
         (get_local $8)
         (f32.add
          (get_local $10)
          (f32.mul
           (tee_local $13
            (f32.load
             (tee_local $8
              (i32.add
               (get_local $0)
               (i32.shl
                (i32.sub
                 (get_local $12)
                 (get_local $3)
                )
                (i32.const 2)
               )
              )
             )
            )
           )
           (get_local $9)
          )
         )
        )
        (f32.store
         (get_local $8)
         (f32.add
          (get_local $13)
          (f32.mul
           (get_local $10)
           (get_local $9)
          )
         )
        )
        (set_local $3
         (i32.add
          (get_local $3)
          (i32.const 1)
         )
        )
        (br $while-in3)
       )
      )
     )
     (if
      (i32.eqz
       (f32.lt
        (tee_local $6
         (f32.sub
          (get_local $6)
          (f32.mul
           (f32.mul
            (get_local $5)
            (get_local $5)
           )
           (get_local $6)
          )
         )
        )
        (f32.mul
         (f32.load
          (get_local $1)
         )
         (f32.const 1.0000000474974513e-03)
        )
       )
      )
      (block
       (set_local $3
        (get_local $4)
       )
       (set_local $7
        (i32.add
         (get_local $7)
         (i32.const 1)
        )
       )
       (br $while-in)
      )
     )
    )
   )
  )
 )
 (func $_celt_fir_c (; 149 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 f32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (set_local $5
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.eq
    (get_local $0)
    (get_local $2)
   )
   (call $_celt_fatal
    (i32.const 43270)
    (i32.const 43295)
    (i32.const 102)
   )
  )
  (set_local $6
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.const 96)
   )
  )
  (loop $while-in
   (if
    (i32.ne
     (get_local $4)
     (i32.const 24)
    )
    (block
     (i32.store
      (i32.add
       (get_local $6)
       (i32.shl
        (get_local $4)
        (i32.const 2)
       )
      )
      (i32.load
       (i32.add
        (get_local $1)
        (i32.shl
         (i32.sub
          (i32.const 23)
          (get_local $4)
         )
         (i32.const 2)
        )
       )
      )
     )
     (set_local $4
      (i32.add
       (get_local $4)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (set_local $8
   (i32.add
    (get_local $5)
    (i32.const 4)
   )
  )
  (set_local $9
   (i32.add
    (get_local $5)
    (i32.const 8)
   )
  )
  (set_local $10
   (i32.add
    (get_local $5)
    (i32.const 12)
   )
  )
  (set_local $1
   (i32.and
    (i32.add
     (if (result i32)
      (i32.gt_s
       (tee_local $11
        (i32.add
         (get_local $3)
         (i32.const -3)
        )
       )
       (i32.const 0)
      )
      (get_local $11)
      (i32.const 0)
     )
     (i32.const 3)
    )
    (i32.const -4)
   )
  )
  (set_local $4
   (i32.const 0)
  )
  (loop $while-in1
   (if
    (i32.lt_s
     (get_local $4)
     (get_local $11)
    )
    (block
     (i32.store
      (get_local $5)
      (i32.load
       (tee_local $12
        (i32.add
         (get_local $0)
         (i32.shl
          (get_local $4)
          (i32.const 2)
         )
        )
       )
      )
     )
     (i32.store
      (get_local $8)
      (i32.load
       (i32.add
        (get_local $0)
        (i32.shl
         (tee_local $13
          (i32.or
           (get_local $4)
           (i32.const 1)
          )
         )
         (i32.const 2)
        )
       )
      )
     )
     (i32.store
      (get_local $9)
      (i32.load
       (i32.add
        (get_local $0)
        (i32.shl
         (tee_local $14
          (i32.or
           (get_local $4)
           (i32.const 2)
          )
         )
         (i32.const 2)
        )
       )
      )
     )
     (i32.store
      (get_local $10)
      (i32.load
       (i32.add
        (get_local $0)
        (i32.shl
         (tee_local $15
          (i32.or
           (get_local $4)
           (i32.const 3)
          )
         )
         (i32.const 2)
        )
       )
      )
     )
     (call $_xcorr_kernel_c_127
      (get_local $6)
      (i32.add
       (get_local $12)
       (i32.const -96)
      )
      (get_local $5)
     )
     (i32.store
      (i32.add
       (get_local $2)
       (i32.shl
        (get_local $4)
        (i32.const 2)
       )
      )
      (i32.load
       (get_local $5)
      )
     )
     (i32.store
      (i32.add
       (get_local $2)
       (i32.shl
        (get_local $13)
        (i32.const 2)
       )
      )
      (i32.load
       (get_local $8)
      )
     )
     (i32.store
      (i32.add
       (get_local $2)
       (i32.shl
        (get_local $14)
        (i32.const 2)
       )
      )
      (i32.load
       (get_local $9)
      )
     )
     (i32.store
      (i32.add
       (get_local $2)
       (i32.shl
        (get_local $15)
        (i32.const 2)
       )
      )
      (i32.load
       (get_local $10)
      )
     )
     (set_local $4
      (i32.add
       (get_local $4)
       (i32.const 4)
      )
     )
     (br $while-in1)
    )
   )
  )
  (loop $while-in3
   (if
    (i32.lt_s
     (get_local $1)
     (get_local $3)
    )
    (block
     (set_local $7
      (f32.load
       (i32.add
        (get_local $0)
        (i32.shl
         (get_local $1)
         (i32.const 2)
        )
       )
      )
     )
     (set_local $4
      (i32.const 0)
     )
     (loop $while-in5
      (if
       (i32.ne
        (get_local $4)
        (i32.const 24)
       )
       (block
        (set_local $7
         (f32.add
          (get_local $7)
          (f32.mul
           (f32.load
            (i32.add
             (get_local $6)
             (i32.shl
              (get_local $4)
              (i32.const 2)
             )
            )
           )
           (f32.load
            (i32.add
             (get_local $0)
             (i32.shl
              (i32.add
               (i32.add
                (get_local $1)
                (get_local $4)
               )
               (i32.const -24)
              )
              (i32.const 2)
             )
            )
           )
          )
         )
        )
        (set_local $4
         (i32.add
          (get_local $4)
          (i32.const 1)
         )
        )
        (br $while-in5)
       )
      )
     )
     (f32.store
      (i32.add
       (get_local $2)
       (i32.shl
        (get_local $1)
        (i32.const 2)
       )
      )
      (get_local $7)
     )
     (set_local $1
      (i32.add
       (get_local $1)
       (i32.const 1)
      )
     )
     (br $while-in3)
    )
   )
  )
  (set_global $STACKTOP
   (get_local $5)
  )
 )
 (func $_xcorr_kernel_c_127 (; 150 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 f32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 f32)
  (local $8 i32)
  (local $9 i32)
  (local $10 f32)
  (local $11 f32)
  (local $12 f32)
  (local $13 f32)
  (local $14 f32)
  (local $15 f32)
  (local $16 f32)
  (local $17 i32)
  (local $18 i32)
  (set_local $4
   (i32.add
    (get_local $2)
    (i32.const 4)
   )
  )
  (set_local $5
   (i32.add
    (get_local $2)
    (i32.const 8)
   )
  )
  (set_local $6
   (i32.add
    (get_local $2)
    (i32.const 12)
   )
  )
  (set_local $18
   (i32.add
    (get_local $1)
    (i32.const 108)
   )
  )
  (set_local $8
   (get_local $0)
  )
  (set_local $9
   (i32.add
    (get_local $1)
    (i32.const 12)
   )
  )
  (set_local $10
   (f32.load offset=4
    (get_local $1)
   )
  )
  (set_local $11
   (f32.load offset=8
    (get_local $1)
   )
  )
  (set_local $7
   (f32.load
    (get_local $1)
   )
  )
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $17)
     (i32.const 21)
    )
    (block
     (set_local $12
      (f32.load
       (get_local $9)
      )
     )
     (f32.store
      (get_local $2)
      (tee_local $13
       (f32.add
        (f32.load
         (get_local $2)
        )
        (f32.mul
         (tee_local $3
          (f32.load
           (get_local $8)
          )
         )
         (get_local $7)
        )
       )
      )
     )
     (f32.store
      (get_local $4)
      (tee_local $14
       (f32.add
        (f32.load
         (get_local $4)
        )
        (f32.mul
         (get_local $3)
         (get_local $10)
        )
       )
      )
     )
     (f32.store
      (get_local $5)
      (tee_local $15
       (f32.add
        (f32.load
         (get_local $5)
        )
        (f32.mul
         (get_local $3)
         (get_local $11)
        )
       )
      )
     )
     (f32.store
      (get_local $6)
      (tee_local $16
       (f32.add
        (f32.load
         (get_local $6)
        )
        (f32.mul
         (get_local $3)
         (get_local $12)
        )
       )
      )
     )
     (set_local $7
      (f32.load offset=4
       (get_local $9)
      )
     )
     (f32.store
      (get_local $2)
      (tee_local $13
       (f32.add
        (get_local $13)
        (f32.mul
         (tee_local $3
          (f32.load offset=4
           (get_local $8)
          )
         )
         (get_local $10)
        )
       )
      )
     )
     (f32.store
      (get_local $4)
      (tee_local $14
       (f32.add
        (get_local $14)
        (f32.mul
         (get_local $3)
         (get_local $11)
        )
       )
      )
     )
     (f32.store
      (get_local $5)
      (tee_local $15
       (f32.add
        (get_local $15)
        (f32.mul
         (get_local $3)
         (get_local $12)
        )
       )
      )
     )
     (f32.store
      (get_local $6)
      (tee_local $16
       (f32.add
        (get_local $16)
        (f32.mul
         (get_local $3)
         (get_local $7)
        )
       )
      )
     )
     (set_local $10
      (f32.load offset=8
       (get_local $9)
      )
     )
     (f32.store
      (get_local $2)
      (tee_local $13
       (f32.add
        (get_local $13)
        (f32.mul
         (tee_local $3
          (f32.load offset=8
           (get_local $8)
          )
         )
         (get_local $11)
        )
       )
      )
     )
     (f32.store
      (get_local $4)
      (tee_local $14
       (f32.add
        (get_local $14)
        (f32.mul
         (get_local $3)
         (get_local $12)
        )
       )
      )
     )
     (f32.store
      (get_local $5)
      (tee_local $15
       (f32.add
        (get_local $15)
        (f32.mul
         (get_local $3)
         (get_local $7)
        )
       )
      )
     )
     (f32.store
      (get_local $6)
      (tee_local $16
       (f32.add
        (get_local $16)
        (f32.mul
         (get_local $3)
         (get_local $10)
        )
       )
      )
     )
     (set_local $11
      (f32.load offset=12
       (get_local $9)
      )
     )
     (f32.store
      (get_local $2)
      (f32.add
       (get_local $13)
       (f32.mul
        (tee_local $3
         (f32.load offset=12
          (get_local $8)
         )
        )
        (get_local $12)
       )
      )
     )
     (f32.store
      (get_local $4)
      (f32.add
       (get_local $14)
       (f32.mul
        (get_local $3)
        (get_local $7)
       )
      )
     )
     (f32.store
      (get_local $5)
      (f32.add
       (get_local $15)
       (f32.mul
        (get_local $3)
        (get_local $10)
       )
      )
     )
     (f32.store
      (get_local $6)
      (f32.add
       (get_local $16)
       (f32.mul
        (get_local $3)
        (get_local $11)
       )
      )
     )
     (set_local $8
      (i32.add
       (get_local $8)
       (i32.const 16)
      )
     )
     (set_local $9
      (i32.add
       (get_local $9)
       (i32.const 16)
      )
     )
     (set_local $17
      (i32.add
       (get_local $17)
       (i32.const 4)
      )
     )
     (br $while-in)
    )
   )
  )
  (set_local $0
   (i32.add
    (get_local $0)
    (i32.const 96)
   )
  )
  (set_local $1
   (get_local $18)
  )
 )
 (func $_celt_iir (; 151 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local $6 f32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 f32)
  (local $16 i32)
  (local $17 i32)
  (local $18 f32)
  (local $19 f32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (set_local $11
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.const 112)
   )
  )
  (set_local $10
   (i32.add
    (get_local $11)
    (i32.const 96)
   )
  )
  (set_local $8
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (tee_local $9
        (i32.add
         (get_local $3)
         (i32.const 24)
        )
       )
       (i32.const 2)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (loop $while-in
   (if
    (i32.ne
     (get_local $5)
     (i32.const 24)
    )
    (block
     (i32.store
      (i32.add
       (get_local $11)
       (i32.shl
        (get_local $5)
        (i32.const 2)
       )
      )
      (i32.load
       (i32.add
        (get_local $1)
        (i32.shl
         (i32.sub
          (i32.const 23)
          (get_local $5)
         )
         (i32.const 2)
        )
       )
      )
     )
     (set_local $5
      (i32.add
       (get_local $5)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (set_local $5
   (i32.const 0)
  )
  (loop $while-in1
   (if
    (i32.ne
     (get_local $5)
     (i32.const 24)
    )
    (block
     (f32.store
      (i32.add
       (get_local $8)
       (i32.shl
        (get_local $5)
        (i32.const 2)
       )
      )
      (f32.neg
       (f32.load
        (i32.add
         (get_local $4)
         (i32.shl
          (i32.sub
           (i32.const 23)
           (get_local $5)
          )
          (i32.const 2)
         )
        )
       )
      )
     )
     (set_local $5
      (i32.add
       (get_local $5)
       (i32.const 1)
      )
     )
     (br $while-in1)
    )
   )
  )
  (set_local $5
   (i32.const 24)
  )
  (loop $while-in3
   (if
    (i32.lt_s
     (get_local $5)
     (get_local $9)
    )
    (block
     (f32.store
      (i32.add
       (get_local $8)
       (i32.shl
        (get_local $5)
        (i32.const 2)
       )
      )
      (f32.const 0)
     )
     (set_local $5
      (i32.add
       (get_local $5)
       (i32.const 1)
      )
     )
     (br $while-in3)
    )
   )
  )
  (set_local $12
   (i32.add
    (get_local $10)
    (i32.const 4)
   )
  )
  (set_local $13
   (i32.add
    (get_local $10)
    (i32.const 8)
   )
  )
  (set_local $14
   (i32.add
    (get_local $10)
    (i32.const 12)
   )
  )
  (set_local $16
   (i32.add
    (get_local $1)
    (i32.const 4)
   )
  )
  (set_local $20
   (i32.add
    (get_local $1)
    (i32.const 8)
   )
  )
  (set_local $9
   (i32.and
    (i32.add
     (if (result i32)
      (i32.gt_s
       (tee_local $17
        (i32.add
         (get_local $3)
         (i32.const -3)
        )
       )
       (i32.const 0)
      )
      (get_local $17)
      (i32.const 0)
     )
     (i32.const 3)
    )
    (i32.const -4)
   )
  )
  (loop $while-in5
   (if
    (i32.lt_s
     (get_local $7)
     (get_local $17)
    )
    (block
     (i32.store
      (get_local $10)
      (i32.load
       (i32.add
        (get_local $0)
        (i32.shl
         (get_local $7)
         (i32.const 2)
        )
       )
      )
     )
     (i32.store
      (get_local $12)
      (i32.load
       (i32.add
        (get_local $0)
        (i32.shl
         (tee_local $21
          (i32.or
           (get_local $7)
           (i32.const 1)
          )
         )
         (i32.const 2)
        )
       )
      )
     )
     (i32.store
      (get_local $13)
      (i32.load
       (i32.add
        (get_local $0)
        (i32.shl
         (tee_local $22
          (i32.or
           (get_local $7)
           (i32.const 2)
          )
         )
         (i32.const 2)
        )
       )
      )
     )
     (i32.store
      (get_local $14)
      (i32.load
       (i32.add
        (get_local $0)
        (i32.shl
         (tee_local $5
          (i32.or
           (get_local $7)
           (i32.const 3)
          )
         )
         (i32.const 2)
        )
       )
      )
     )
     (call $_xcorr_kernel_c_127
      (get_local $11)
      (i32.add
       (get_local $8)
       (i32.shl
        (get_local $7)
        (i32.const 2)
       )
      )
      (get_local $10)
     )
     (f32.store
      (i32.add
       (get_local $8)
       (i32.shl
        (i32.add
         (get_local $7)
         (i32.const 24)
        )
        (i32.const 2)
       )
      )
      (tee_local $15
       (f32.neg
        (tee_local $6
         (f32.load
          (get_local $10)
         )
        )
       )
      )
     )
     (f32.store
      (i32.add
       (get_local $2)
       (i32.shl
        (get_local $7)
        (i32.const 2)
       )
      )
      (get_local $6)
     )
     (f32.store
      (get_local $12)
      (tee_local $6
       (f32.add
        (f32.load
         (get_local $12)
        )
        (f32.mul
         (f32.load
          (get_local $1)
         )
         (get_local $15)
        )
       )
      )
     )
     (f32.store
      (i32.add
       (get_local $8)
       (i32.shl
        (i32.add
         (get_local $7)
         (i32.const 25)
        )
        (i32.const 2)
       )
      )
      (tee_local $18
       (f32.neg
        (get_local $6)
       )
      )
     )
     (f32.store
      (i32.add
       (get_local $2)
       (i32.shl
        (get_local $21)
        (i32.const 2)
       )
      )
      (get_local $6)
     )
     (f32.store
      (get_local $13)
      (tee_local $19
       (f32.add
        (f32.add
         (f32.load
          (get_local $13)
         )
         (f32.mul
          (f32.load
           (get_local $1)
          )
          (get_local $18)
         )
        )
        (f32.mul
         (f32.load
          (get_local $16)
         )
         (get_local $15)
        )
       )
      )
     )
     (f32.store
      (i32.add
       (get_local $8)
       (i32.shl
        (i32.add
         (get_local $7)
         (i32.const 26)
        )
        (i32.const 2)
       )
      )
      (tee_local $6
       (f32.neg
        (get_local $19)
       )
      )
     )
     (f32.store
      (i32.add
       (get_local $2)
       (i32.shl
        (get_local $22)
        (i32.const 2)
       )
      )
      (get_local $19)
     )
     (f32.store
      (get_local $14)
      (tee_local $6
       (f32.add
        (f32.add
         (f32.add
          (f32.load
           (get_local $14)
          )
          (f32.mul
           (f32.load
            (get_local $1)
           )
           (get_local $6)
          )
         )
         (f32.mul
          (f32.load
           (get_local $16)
          )
          (get_local $18)
         )
        )
        (f32.mul
         (f32.load
          (get_local $20)
         )
         (get_local $15)
        )
       )
      )
     )
     (f32.store
      (i32.add
       (get_local $8)
       (i32.shl
        (i32.add
         (get_local $7)
         (i32.const 27)
        )
        (i32.const 2)
       )
      )
      (f32.neg
       (get_local $6)
      )
     )
     (f32.store
      (i32.add
       (get_local $2)
       (i32.shl
        (get_local $5)
        (i32.const 2)
       )
      )
      (get_local $6)
     )
     (set_local $7
      (i32.add
       (get_local $7)
       (i32.const 4)
      )
     )
     (br $while-in5)
    )
   )
  )
  (loop $while-in7
   (if
    (i32.lt_s
     (get_local $9)
     (get_local $3)
    )
    (block
     (set_local $6
      (f32.load
       (i32.add
        (get_local $0)
        (i32.shl
         (get_local $9)
         (i32.const 2)
        )
       )
      )
     )
     (set_local $1
      (i32.const 0)
     )
     (loop $while-in9
      (if
       (i32.ne
        (get_local $1)
        (i32.const 24)
       )
       (block
        (set_local $6
         (f32.sub
          (get_local $6)
          (f32.mul
           (f32.load
            (i32.add
             (get_local $11)
             (i32.shl
              (get_local $1)
              (i32.const 2)
             )
            )
           )
           (f32.load
            (i32.add
             (get_local $8)
             (i32.shl
              (i32.add
               (get_local $9)
               (get_local $1)
              )
              (i32.const 2)
             )
            )
           )
          )
         )
        )
        (set_local $1
         (i32.add
          (get_local $1)
          (i32.const 1)
         )
        )
        (br $while-in9)
       )
      )
     )
     (f32.store
      (i32.add
       (get_local $8)
       (i32.shl
        (i32.add
         (get_local $9)
         (i32.const 24)
        )
        (i32.const 2)
       )
      )
      (get_local $6)
     )
     (f32.store
      (i32.add
       (get_local $2)
       (i32.shl
        (get_local $9)
        (i32.const 2)
       )
      )
      (get_local $6)
     )
     (set_local $9
      (i32.add
       (get_local $9)
       (i32.const 1)
      )
     )
     (br $while-in7)
    )
   )
  )
  (set_local $0
   (i32.const 0)
  )
  (loop $while-in11
   (if
    (i32.ne
     (get_local $0)
     (i32.const 24)
    )
    (block
     (i32.store
      (i32.add
       (get_local $4)
       (i32.shl
        (get_local $0)
        (i32.const 2)
       )
      )
      (i32.load
       (i32.add
        (get_local $2)
        (i32.shl
         (i32.add
          (i32.sub
           (get_local $3)
           (get_local $0)
          )
          (i32.const -1)
         )
         (i32.const 2)
        )
       )
      )
     )
     (set_local $0
      (i32.add
       (get_local $0)
       (i32.const 1)
      )
     )
     (br $while-in11)
    )
   )
  )
  (set_global $STACKTOP
   (get_local $11)
  )
 )
 (func $__celt_autocorr (; 152 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32)
  (local $6 i32)
  (local $7 f32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (set_local $10
   (get_global $STACKTOP)
  )
  (set_local $8
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (get_local $5)
       (i32.const 2)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (if
   (i32.le_s
    (get_local $5)
    (i32.const 0)
   )
   (call $_celt_fatal
    (i32.const 43351)
    (i32.const 43295)
    (i32.const 228)
   )
  )
  (if
   (i32.le_s
    (get_local $3)
    (i32.const -1)
   )
   (call $_celt_fatal
    (i32.const 43373)
    (i32.const 43295)
    (i32.const 229)
   )
  )
  (set_local $9
   (i32.sub
    (get_local $5)
    (get_local $4)
   )
  )
  (if
   (get_local $3)
   (block
    (loop $while-in
     (if
      (i32.ne
       (get_local $6)
       (get_local $5)
      )
      (block
       (i32.store
        (i32.add
         (get_local $8)
         (i32.shl
          (get_local $6)
          (i32.const 2)
         )
        )
        (i32.load
         (i32.add
          (get_local $0)
          (i32.shl
           (get_local $6)
           (i32.const 2)
          )
         )
        )
       )
       (set_local $6
        (i32.add
         (get_local $6)
         (i32.const 1)
        )
       )
       (br $while-in)
      )
     )
    )
    (set_local $6
     (i32.const 0)
    )
    (set_local $0
     (loop $while-in1 (result i32)
      (if (result i32)
       (i32.eq
        (get_local $6)
        (get_local $3)
       )
       (get_local $8)
       (block
        (f32.store
         (i32.add
          (get_local $8)
          (i32.shl
           (get_local $6)
           (i32.const 2)
          )
         )
         (f32.mul
          (f32.load
           (i32.add
            (get_local $0)
            (i32.shl
             (get_local $6)
             (i32.const 2)
            )
           )
          )
          (tee_local $7
           (f32.load
            (i32.add
             (get_local $2)
             (i32.shl
              (get_local $6)
              (i32.const 2)
             )
            )
           )
          )
         )
        )
        (f32.store
         (i32.add
          (get_local $8)
          (i32.shl
           (tee_local $11
            (i32.add
             (i32.sub
              (get_local $5)
              (get_local $6)
             )
             (i32.const -1)
            )
           )
           (i32.const 2)
          )
         )
         (f32.mul
          (f32.load
           (i32.add
            (get_local $0)
            (i32.shl
             (get_local $11)
             (i32.const 2)
            )
           )
          )
          (get_local $7)
         )
        )
        (set_local $6
         (i32.add
          (get_local $6)
          (i32.const 1)
         )
        )
        (br $while-in1)
       )
      )
     )
    )
   )
  )
  (call $_celt_pitch_xcorr_c
   (get_local $0)
   (get_local $0)
   (get_local $1)
   (get_local $9)
   (i32.add
    (get_local $4)
    (i32.const 1)
   )
  )
  (set_local $2
   (i32.const 0)
  )
  (loop $while-in3
   (if
    (i32.le_s
     (get_local $2)
     (get_local $4)
    )
    (block
     (set_local $7
      (f32.const 0)
     )
     (set_local $3
      (i32.add
       (get_local $2)
       (get_local $9)
      )
     )
     (loop $while-in5
      (if
       (i32.lt_s
        (get_local $3)
        (get_local $5)
       )
       (block
        (set_local $7
         (f32.add
          (get_local $7)
          (f32.mul
           (f32.load
            (i32.add
             (get_local $0)
             (i32.shl
              (get_local $3)
              (i32.const 2)
             )
            )
           )
           (f32.load
            (i32.add
             (get_local $0)
             (i32.shl
              (i32.sub
               (get_local $3)
               (get_local $2)
              )
              (i32.const 2)
             )
            )
           )
          )
         )
        )
        (set_local $3
         (i32.add
          (get_local $3)
          (i32.const 1)
         )
        )
        (br $while-in5)
       )
      )
     )
     (f32.store
      (tee_local $3
       (i32.add
        (get_local $1)
        (i32.shl
         (get_local $2)
         (i32.const 2)
        )
       )
      )
      (f32.add
       (f32.load
        (get_local $3)
       )
       (get_local $7)
      )
     )
     (set_local $2
      (i32.add
       (get_local $2)
       (i32.const 1)
      )
     )
     (br $while-in3)
    )
   )
  )
  (set_global $STACKTOP
   (get_local $10)
  )
 )
 (func $_quant_coarse_energy (; 153 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (param $8 i32) (param $9 i32) (param $10 i32) (param $11 i32) (param $12 i32) (param $13 i32) (param $14 i32) (param $15 i32) (param $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 f32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local $26 i32)
  (local $27 i32)
  (local $28 i32)
  (local $29 i32)
  (local $30 f32)
  (local $31 i32)
  (local $32 i32)
  (local $33 i32)
  (local $34 i32)
  (local $35 i32)
  (local $36 i32)
  (local $37 i32)
  (local $38 i32)
  (block $folding-inner0
   (set_local $18
    (get_global $STACKTOP)
   )
   (set_global $STACKTOP
    (i32.add
     (get_global $STACKTOP)
     (i32.const 96)
    )
   )
   (set_local $12
    (if (result i32)
     (get_local $12)
     (i32.const 1)
     (if (result i32)
      (get_local $14)
      (i32.const 0)
      (if (result i32)
       (f32.gt
        (f32.load
         (get_local $13)
        )
        (f32.convert_s/i32
         (i32.mul
          (i32.shl
           (get_local $9)
           (i32.const 1)
          )
          (tee_local $12
           (i32.sub
            (get_local $2)
            (get_local $1)
           )
          )
         )
        )
       )
       (i32.lt_s
        (i32.mul
         (get_local $12)
         (get_local $9)
        )
        (get_local $11)
       )
       (i32.const 0)
      )
     )
    )
   )
   (set_local $21
    (i32.add
     (get_local $18)
     (i32.const 72)
    )
   )
   (set_local $22
    (i32.add
     (get_local $18)
     (i32.const 48)
    )
   )
   (set_local $23
    (i32.add
     (get_local $18)
     (i32.const 24)
    )
   )
   (set_local $36
    (i32.trunc_s/f32
     (f32.div
      (f32.mul
       (f32.mul
        (f32.load
         (get_local $13)
        )
        (f32.convert_u/i32
         (get_local $6)
        )
       )
       (f32.convert_s/i32
        (get_local $15)
       )
      )
      (f32.convert_s/i32
       (i32.shl
        (get_local $9)
        (i32.const 9)
       )
      )
     )
    )
   )
   (set_local $30
    (call $_loss_distortion
     (get_local $4)
     (get_local $5)
     (get_local $1)
     (get_local $3)
     (tee_local $20
      (i32.load
       (tee_local $26
        (i32.add
         (get_local $0)
         (i32.const 8)
        )
       )
      )
     )
     (get_local $9)
    )
   )
   (set_local $27
    (call $_ec_tell
     (tee_local $24
      (i32.load
       (tee_local $32
        (i32.add
         (get_local $8)
         (i32.const 20)
        )
       )
      )
     )
     (tee_local $15
      (i32.load
       (tee_local $17
        (i32.add
         (get_local $8)
         (i32.const 28)
        )
       )
      )
     )
    )
   )
   (if
    (i32.gt_s
     (i32.sub
      (get_local $2)
      (get_local $1)
     )
     (i32.const 10)
    )
    (if
     (f32.gt
      (tee_local $19
       (f32.mul
        (f32.convert_s/i32
         (get_local $11)
        )
        (f32.const 0.125)
       )
      )
      (f32.const 16)
     )
     (set_local $19
      (f32.const 16)
     )
    )
    (set_local $19
     (f32.const 16)
    )
   )
   (if
    (tee_local $28
     (i32.gt_u
      (i32.add
       (get_local $27)
       (i32.const 3)
      )
      (get_local $6)
     )
    )
    (set_local $12
     (i32.const 0)
    )
   )
   (if
    (get_local $16)
    (set_local $19
     (f32.const 3)
    )
   )
   (i64.store align=4
    (get_local $21)
    (i64.load align=4
     (get_local $8)
    )
   )
   (i64.store offset=8 align=4
    (get_local $21)
    (i64.load offset=8 align=4
     (get_local $8)
    )
   )
   (i64.store offset=16 align=4
    (get_local $21)
    (i64.load offset=16 align=4
     (get_local $8)
    )
   )
   (set_local $3
    (i32.load
     (tee_local $31
      (i32.add
       (get_local $8)
       (i32.const 24)
      )
     )
    )
   )
   (i64.store align=4
    (get_local $22)
    (i64.load align=4
     (get_local $17)
    )
   )
   (i64.store offset=8 align=4
    (get_local $22)
    (i64.load offset=8 align=4
     (get_local $17)
    )
   )
   (i32.store offset=16
    (get_local $22)
    (i32.load offset=16
     (get_local $17)
    )
   )
   (set_local $25
    (get_global $STACKTOP)
   )
   (set_global $STACKTOP
    (i32.add
     (get_global $STACKTOP)
     (i32.and
      (i32.add
       (i32.shl
        (tee_local $11
         (i32.mul
          (get_local $20)
          (get_local $9)
         )
        )
        (i32.const 2)
       )
       (i32.const 15)
      )
      (i32.const -16)
     )
    )
   )
   (set_local $29
    (get_global $STACKTOP)
   )
   (set_global $STACKTOP
    (i32.add
     (get_global $STACKTOP)
     (i32.and
      (i32.add
       (i32.shl
        (get_local $11)
        (i32.const 2)
       )
       (i32.const 15)
      )
      (i32.const -16)
     )
    )
   )
   (drop
    (call $_memcpy
     (get_local $25)
     (get_local $5)
     (i32.shl
      (get_local $11)
      (i32.const 2)
     )
    )
   )
   (block $__rjto$0
    (block $__rjti$0
     (if
      (tee_local $37
       (i32.or
        (get_local $28)
        (i32.eqz
         (get_local $14)
        )
       )
      )
      (set_local $11
       (if (result i32)
        (get_local $12)
        (block
         (drop
          (call $_quant_coarse_energy_impl
           (get_local $0)
           (get_local $1)
           (get_local $2)
           (get_local $4)
           (get_local $25)
           (get_local $6)
           (get_local $27)
           (i32.add
            (i32.mul
             (get_local $10)
             (i32.const 84)
            )
            (i32.const 21466)
           )
           (get_local $29)
           (get_local $8)
           (get_local $9)
           (get_local $10)
           (i32.const 1)
           (get_local $19)
           (get_local $16)
          )
         )
         (br $__rjti$0)
        )
        (block (result i32)
         (set_local $14
          (get_local $3)
         )
         (i32.const 0)
        )
       )
      )
      (block
       (set_local $11
        (call $_quant_coarse_energy_impl
         (get_local $0)
         (get_local $1)
         (get_local $2)
         (get_local $4)
         (get_local $25)
         (get_local $6)
         (get_local $27)
         (i32.add
          (i32.mul
           (get_local $10)
           (i32.const 84)
          )
          (i32.const 21466)
         )
         (get_local $29)
         (get_local $8)
         (get_local $9)
         (get_local $10)
         (i32.const 1)
         (get_local $19)
         (get_local $16)
        )
       )
       (br_if $__rjti$0
        (get_local $12)
       )
       (set_local $15
        (i32.load
         (get_local $17)
        )
       )
       (set_local $24
        (i32.load
         (get_local $32)
        )
       )
       (set_local $14
        (i32.load
         (get_local $31)
        )
       )
      )
     )
     (br $__rjto$0)
    )
    (drop
     (call $_memcpy
      (get_local $5)
      (get_local $25)
      (i32.shl
       (i32.mul
        (i32.load
         (get_local $26)
        )
        (get_local $9)
       )
       (i32.const 2)
      )
     )
    )
    (drop
     (call $_memcpy
      (get_local $7)
      (get_local $29)
      (i32.shl
       (i32.mul
        (i32.load
         (get_local $26)
        )
        (get_local $9)
       )
       (i32.const 2)
      )
     )
    )
    (br $folding-inner0)
   )
   (set_local $38
    (call $_ec_tell_frac
     (get_local $24)
     (get_local $15)
    )
   )
   (set_local $28
    (i32.load
     (get_local $8)
    )
   )
   (i64.store align=4
    (get_local $23)
    (i64.load align=4
     (tee_local $20
      (i32.add
       (get_local $8)
       (i32.const 4)
      )
     )
    )
   )
   (i64.store offset=8 align=4
    (get_local $23)
    (i64.load offset=8 align=4
     (get_local $20)
    )
   )
   (i32.store offset=16
    (get_local $23)
    (i32.load offset=16
     (get_local $20)
    )
   )
   (i64.store align=4
    (get_local $18)
    (i64.load align=4
     (get_local $17)
    )
   )
   (i64.store offset=8 align=4
    (get_local $18)
    (i64.load offset=8 align=4
     (get_local $17)
    )
   )
   (i32.store offset=16
    (get_local $18)
    (i32.load offset=16
     (get_local $17)
    )
   )
   (set_local $15
    (call $_ec_get_error
     (get_local $3)
    )
   )
   (set_local $24
    (call $_ec_get_error
     (get_local $14)
    )
   )
   (set_local $33
    (i32.add
     (get_local $28)
     (get_local $15)
    )
   )
   (set_local $24
    (if (result i32)
     (tee_local $15
      (i32.sub
       (get_local $24)
       (get_local $15)
      )
     )
     (get_local $15)
     (i32.const 1)
    )
   )
   (set_local $34
    (call $_llvm_stacksave)
   )
   (set_local $35
    (get_global $STACKTOP)
   )
   (set_global $STACKTOP
    (i32.add
     (get_global $STACKTOP)
     (i32.and
      (i32.add
       (get_local $24)
       (i32.const 15)
      )
      (i32.const -16)
     )
    )
   )
   (drop
    (call $_memcpy
     (get_local $35)
     (get_local $33)
     (get_local $15)
    )
   )
   (i64.store align=4
    (get_local $8)
    (i64.load align=4
     (get_local $21)
    )
   )
   (i64.store offset=8 align=4
    (get_local $8)
    (i64.load offset=8 align=4
     (get_local $21)
    )
   )
   (i64.store offset=16 align=4
    (get_local $8)
    (i64.load offset=16 align=4
     (get_local $21)
    )
   )
   (i32.store
    (get_local $31)
    (get_local $3)
   )
   (i64.store align=4
    (get_local $17)
    (i64.load align=4
     (get_local $22)
    )
   )
   (i64.store offset=8 align=4
    (get_local $17)
    (i64.load offset=8 align=4
     (get_local $22)
    )
   )
   (i32.store offset=16
    (get_local $17)
    (i32.load offset=16
     (get_local $22)
    )
   )
   (set_local $0
    (call $_quant_coarse_energy_impl
     (get_local $0)
     (get_local $1)
     (get_local $2)
     (get_local $4)
     (get_local $5)
     (get_local $6)
     (get_local $27)
     (i32.add
      (i32.add
       (i32.mul
        (get_local $10)
        (i32.const 84)
       )
       (i32.const 21424)
      )
      (i32.mul
       (get_local $12)
       (i32.const 42)
      )
     )
     (get_local $7)
     (get_local $8)
     (get_local $9)
     (get_local $10)
     (i32.const 0)
     (get_local $19)
     (get_local $16)
    )
   )
   (block $do-once
    (if
     (i32.eqz
      (get_local $37)
     )
     (block
      (if
       (i32.ge_s
        (get_local $11)
        (get_local $0)
       )
       (block
        (br_if $do-once
         (i32.ne
          (get_local $11)
          (get_local $0)
         )
        )
        (br_if $do-once
         (i32.le_s
          (i32.add
           (call $_ec_tell_frac
            (i32.load
             (get_local $32)
            )
            (i32.load
             (get_local $17)
            )
           )
           (get_local $36)
          )
          (get_local $38)
         )
        )
       )
      )
      (i32.store
       (get_local $8)
       (get_local $28)
      )
      (i64.store align=4
       (get_local $20)
       (i64.load align=4
        (get_local $23)
       )
      )
      (i64.store offset=8 align=4
       (get_local $20)
       (i64.load offset=8 align=4
        (get_local $23)
       )
      )
      (i32.store offset=16
       (get_local $20)
       (i32.load offset=16
        (get_local $23)
       )
      )
      (i32.store
       (get_local $31)
       (get_local $14)
      )
      (i64.store align=4
       (get_local $17)
       (i64.load align=4
        (get_local $18)
       )
      )
      (i64.store offset=8 align=4
       (get_local $17)
       (i64.load offset=8 align=4
        (get_local $18)
       )
      )
      (i32.store offset=16
       (get_local $17)
       (i32.load offset=16
        (get_local $18)
       )
      )
      (drop
       (call $_memcpy
        (get_local $33)
        (get_local $35)
        (get_local $15)
       )
      )
      (drop
       (call $_memcpy
        (get_local $5)
        (get_local $25)
        (i32.shl
         (i32.mul
          (i32.load
           (get_local $26)
          )
          (get_local $9)
         )
         (i32.const 2)
        )
       )
      )
      (drop
       (call $_memcpy
        (get_local $7)
        (get_local $29)
        (i32.shl
         (i32.mul
          (i32.load
           (get_local $26)
          )
          (get_local $9)
         )
         (i32.const 2)
        )
       )
      )
      (call $_llvm_stackrestore
       (get_local $34)
      )
      (br $folding-inner0)
     )
    )
   )
   (call $_llvm_stackrestore
    (get_local $34)
   )
   (f32.store
    (get_local $13)
    (f32.add
     (f32.mul
      (f32.mul
       (tee_local $19
        (f32.load
         (i32.add
          (i32.shl
           (get_local $10)
           (i32.const 2)
          )
          (i32.const 21760)
         )
        )
       )
       (get_local $19)
      )
      (f32.load
       (get_local $13)
      )
     )
     (get_local $30)
    )
   )
   (set_global $STACKTOP
    (get_local $18)
   )
   (return)
  )
  (f32.store
   (get_local $13)
   (get_local $30)
  )
  (set_global $STACKTOP
   (get_local $18)
  )
 )
 (func $_loss_distortion (; 154 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (result f32)
  (local $6 f32)
  (local $7 i32)
  (local $8 i32)
  (local $9 f32)
  (local $10 i32)
  (local $11 i32)
  (loop $while-in
   (set_local $10
    (i32.mul
     (get_local $8)
     (get_local $4)
    )
   )
   (set_local $7
    (get_local $2)
   )
   (loop $while-in1
    (if
     (i32.lt_s
      (get_local $7)
      (get_local $3)
     )
     (block
      (set_local $9
       (f32.sub
        (f32.load
         (i32.add
          (get_local $0)
          (i32.shl
           (tee_local $11
            (i32.add
             (get_local $7)
             (get_local $10)
            )
           )
           (i32.const 2)
          )
         )
        )
        (f32.load
         (i32.add
          (get_local $1)
          (i32.shl
           (get_local $11)
           (i32.const 2)
          )
         )
        )
       )
      )
      (set_local $7
       (i32.add
        (get_local $7)
        (i32.const 1)
       )
      )
      (set_local $6
       (f32.add
        (get_local $6)
        (f32.mul
         (get_local $9)
         (get_local $9)
        )
       )
      )
      (br $while-in1)
     )
    )
   )
   (br_if $while-in
    (i32.lt_s
     (tee_local $8
      (i32.add
       (get_local $8)
       (i32.const 1)
      )
     )
     (get_local $5)
    )
   )
  )
  (if (result f32)
   (f32.gt
    (get_local $6)
    (f32.const 200)
   )
   (f32.const 200)
   (get_local $6)
  )
 )
 (func $_quant_coarse_energy_impl (; 155 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (param $8 i32) (param $9 i32) (param $10 i32) (param $11 i32) (param $12 i32) (param $13 f32) (param $14 i32) (result i32)
  (local $15 i32)
  (local $16 f32)
  (local $17 i32)
  (local $18 i32)
  (local $19 f32)
  (local $20 i32)
  (local $21 f32)
  (local $22 f32)
  (local $23 i32)
  (local $24 i32)
  (local $25 f32)
  (local $26 i32)
  (local $27 i32)
  (local $28 i32)
  (local $29 i32)
  (local $30 i32)
  (local $31 i32)
  (local $32 i32)
  (local $33 f32)
  (local $34 i32)
  (local $35 f32)
  (local $36 i32)
  (set_local $17
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.const 16)
   )
  )
  (i64.store
   (get_local $17)
   (i64.const 0)
  )
  (if
   (i32.le_s
    (i32.add
     (get_local $6)
     (i32.const 3)
    )
    (get_local $5)
   )
   (call $_ec_enc_bit_logp
    (get_local $9)
    (get_local $12)
    (i32.const 3)
   )
  )
  (set_local $25
   (if (result f32)
    (get_local $12)
    (f32.const 0.149993896484375)
    (block (result f32)
     (set_local $19
      (f32.load
       (i32.add
        (i32.shl
         (get_local $11)
         (i32.const 2)
        )
        (i32.const 21760)
       )
      )
     )
     (f32.load
      (i32.add
       (i32.shl
        (get_local $11)
        (i32.const 2)
       )
       (i32.const 21776)
      )
     )
    )
   )
  )
  (set_local $15
   (i32.add
    (get_local $17)
    (i32.const 8)
   )
  )
  (set_local $18
   (i32.add
    (get_local $0)
    (i32.const 8)
   )
  )
  (set_local $26
   (i32.add
    (get_local $9)
    (i32.const 20)
   )
  )
  (set_local $27
   (i32.add
    (get_local $9)
    (i32.const 28)
   )
  )
  (set_local $28
   (i32.mul
    (get_local $10)
    (i32.const 3)
   )
  )
  (set_local $20
   (i32.eqz
    (get_local $14)
   )
  )
  (set_local $0
   (i32.const 0)
  )
  (set_local $14
   (get_local $1)
  )
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $14)
     (get_local $2)
    )
    (block
     (set_local $29
      (i32.mul
       (get_local $28)
       (i32.sub
        (get_local $2)
        (get_local $14)
       )
      )
     )
     (set_local $30
      (i32.ne
       (get_local $14)
       (get_local $1)
      )
     )
     (set_local $31
      (i32.lt_s
       (get_local $14)
       (i32.const 2)
      )
     )
     (set_local $32
      (i32.lt_s
       (get_local $14)
       (i32.const 20)
      )
     )
     (set_local $12
      (i32.const 0)
     )
     (set_local $11
      (get_local $0)
     )
     (loop $while-in1
      (if
       (i32.and
        (i32.lt_s
         (tee_local $6
          (i32.trunc_s/f32
           (f32.floor
            (f32.add
             (tee_local $35
              (f32.sub
               (f32.sub
                (tee_local $21
                 (f32.load
                  (i32.add
                   (get_local $3)
                   (i32.shl
                    (tee_local $0
                     (i32.add
                      (get_local $14)
                      (i32.mul
                       (get_local $12)
                       (i32.load
                        (get_local $18)
                       )
                      )
                     )
                    )
                    (i32.const 2)
                   )
                  )
                 )
                )
                (tee_local $33
                 (f32.mul
                  (get_local $19)
                  (if (result f32)
                   (f32.lt
                    (tee_local $16
                     (f32.load
                      (i32.add
                       (get_local $4)
                       (i32.shl
                        (get_local $0)
                        (i32.const 2)
                       )
                      )
                     )
                    )
                    (f32.const -9)
                   )
                   (f32.const -9)
                   (get_local $16)
                  )
                 )
                )
               )
               (tee_local $22
                (f32.load
                 (tee_local $34
                  (i32.add
                   (get_local $17)
                   (i32.shl
                    (get_local $12)
                    (i32.const 2)
                   )
                  )
                 )
                )
               )
              )
             )
             (f32.const 0.5)
            )
           )
          )
         )
         (i32.const 0)
        )
        (f32.lt
         (get_local $21)
         (tee_local $16
          (f32.sub
           (if (result f32)
            (f32.lt
             (get_local $16)
             (f32.const -28)
            )
            (f32.const -28)
            (get_local $16)
           )
           (get_local $13)
          )
         )
        )
       )
       (if
        (i32.ge_s
         (tee_local $6
          (i32.add
           (get_local $6)
           (i32.trunc_s/f32
            (f32.sub
             (get_local $16)
             (get_local $21)
            )
           )
          )
         )
         (i32.const 0)
        )
        (set_local $6
         (i32.const 0)
        )
       )
      )
      (i32.store
       (get_local $15)
       (get_local $6)
      )
      (set_local $23
       (call $_ec_tell
        (i32.load
         (get_local $26)
        )
        (i32.load
         (get_local $27)
        )
       )
      )
      (if
       (i32.and
        (get_local $30)
        (i32.lt_s
         (tee_local $36
          (i32.sub
           (tee_local $24
            (i32.sub
             (get_local $5)
             (get_local $23)
            )
           )
           (get_local $29)
          )
         )
         (i32.const 24)
        )
       )
       (block
        (i32.store
         (get_local $15)
         (tee_local $0
          (if (result i32)
           (i32.lt_s
            (get_local $6)
            (i32.const 1)
           )
           (get_local $6)
           (i32.const 1)
          )
         )
        )
        (if
         (i32.lt_s
          (get_local $36)
          (i32.const 16)
         )
         (i32.store
          (get_local $15)
          (if (result i32)
           (i32.gt_s
            (get_local $0)
            (i32.const -1)
           )
           (get_local $0)
           (tee_local $0
            (i32.const -1)
           )
          )
         )
        )
       )
       (set_local $0
        (get_local $6)
       )
      )
      (if
       (i32.eqz
        (i32.or
         (get_local $20)
         (get_local $31)
        )
       )
       (i32.store
        (get_local $15)
        (if (result i32)
         (i32.lt_s
          (get_local $0)
          (i32.const 0)
         )
         (get_local $0)
         (tee_local $0
          (i32.const 0)
         )
        )
       )
      )
      (block $do-once
       (if
        (i32.gt_s
         (get_local $24)
         (i32.const 14)
        )
        (block
         (call $_ec_laplace_encode
          (get_local $9)
          (get_local $15)
          (i32.shl
           (i32.load8_u
            (i32.add
             (get_local $7)
             (tee_local $0
              (i32.shl
               (if (result i32)
                (get_local $32)
                (get_local $14)
                (i32.const 20)
               )
               (i32.const 1)
              )
             )
            )
           )
           (i32.const 7)
          )
          (i32.shl
           (i32.load8_u
            (i32.add
             (get_local $7)
             (i32.or
              (get_local $0)
              (i32.const 1)
             )
            )
           )
           (i32.const 6)
          )
         )
         (set_local $0
          (i32.load
           (get_local $15)
          )
         )
        )
        (block
         (if
          (i32.gt_s
           (get_local $24)
           (i32.const 1)
          )
          (block
           (i32.store
            (get_local $15)
            (if (result i32)
             (i32.lt_s
              (if (result i32)
               (i32.gt_s
                (get_local $0)
                (i32.const -1)
               )
               (get_local $0)
               (tee_local $0
                (i32.const -1)
               )
              )
              (i32.const 1)
             )
             (get_local $0)
             (tee_local $0
              (i32.const 1)
             )
            )
           )
           (call $_ec_enc_icdf
            (get_local $9)
            (i32.xor
             (i32.shl
              (get_local $0)
              (i32.const 1)
             )
             (i32.shr_s
              (get_local $0)
              (i32.const 31)
             )
            )
            (i32.const 43402)
            (i32.const 2)
           )
           (br $do-once)
          )
         )
         (if
          (i32.lt_s
           (get_local $23)
           (get_local $5)
          )
          (block
           (i32.store
            (get_local $15)
            (if (result i32)
             (i32.lt_s
              (get_local $0)
              (i32.const 0)
             )
             (get_local $0)
             (tee_local $0
              (i32.const 0)
             )
            )
           )
           (call $_ec_enc_bit_logp
            (get_local $9)
            (i32.sub
             (i32.const 0)
             (get_local $0)
            )
            (i32.const 1)
           )
          )
          (block
           (i32.store
            (get_local $15)
            (i32.const -1)
           )
           (set_local $0
            (i32.const -1)
           )
          )
         )
        )
       )
      )
      (f32.store
       (i32.add
        (get_local $8)
        (i32.shl
         (i32.add
          (get_local $14)
          (i32.mul
           (get_local $12)
           (i32.load
            (get_local $18)
           )
          )
         )
         (i32.const 2)
        )
       )
       (f32.sub
        (get_local $35)
        (tee_local $16
         (f32.convert_s/i32
          (get_local $0)
         )
        )
       )
      )
      (set_local $6
       (i32.sub
        (i32.const 0)
        (tee_local $0
         (i32.sub
          (get_local $6)
          (get_local $0)
         )
        )
       )
      )
      (set_local $0
       (i32.add
        (get_local $11)
        (if (result i32)
         (i32.gt_s
          (get_local $0)
          (i32.const -1)
         )
         (get_local $0)
         (get_local $6)
        )
       )
      )
      (f32.store
       (i32.add
        (get_local $4)
        (i32.shl
         (i32.add
          (get_local $14)
          (i32.mul
           (get_local $12)
           (i32.load
            (get_local $18)
           )
          )
         )
         (i32.const 2)
        )
       )
       (f32.add
        (f32.add
         (get_local $33)
         (get_local $22)
        )
        (get_local $16)
       )
      )
      (f32.store
       (get_local $34)
       (f32.sub
        (f32.add
         (get_local $22)
         (get_local $16)
        )
        (f32.mul
         (get_local $25)
         (get_local $16)
        )
       )
      )
      (if
       (i32.lt_s
        (tee_local $12
         (i32.add
          (get_local $12)
          (i32.const 1)
         )
        )
        (get_local $10)
       )
       (block
        (set_local $11
         (get_local $0)
        )
        (br $while-in1)
       )
      )
     )
     (set_local $14
      (i32.add
       (get_local $14)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (set_global $STACKTOP
   (get_local $17)
  )
  (if (result i32)
   (get_local $20)
   (get_local $0)
   (i32.const 0)
  )
 )
 (func $_quant_fine_energy (; 156 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 f32)
  (local $13 i32)
  (local $14 i32)
  (local $15 f32)
  (set_local $9
   (i32.add
    (get_local $0)
    (i32.const 8)
   )
  )
  (set_local $8
   (get_local $1)
  )
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $8)
     (get_local $2)
    )
    (block
     (if
      (i32.ge_s
       (tee_local $0
        (i32.load
         (tee_local $10
          (i32.add
           (get_local $5)
           (i32.shl
            (get_local $8)
            (i32.const 2)
           )
          )
         )
        )
       )
       (i32.const 1)
      )
      (block
       (set_local $12
        (f32.convert_s/i32
         (tee_local $11
          (i32.shr_s
           (i32.shl
            (i32.const 65536)
            (get_local $0)
           )
           (i32.const 16)
          )
         )
        )
       )
       (set_local $13
        (i32.add
         (get_local $11)
         (i32.const -1)
        )
       )
       (set_local $1
        (i32.const 0)
       )
       (loop $while-in1
        (call $_ec_enc_bits
         (get_local $6)
         (if (result i32)
          (i32.gt_s
           (if (result i32)
            (i32.gt_s
             (get_local $11)
             (tee_local $0
              (i32.trunc_s/f32
               (f32.floor
                (f32.mul
                 (f32.add
                  (f32.load
                   (i32.add
                    (get_local $4)
                    (i32.shl
                     (i32.add
                      (get_local $8)
                      (i32.mul
                       (get_local $1)
                       (i32.load
                        (get_local $9)
                       )
                      )
                     )
                     (i32.const 2)
                    )
                   )
                  )
                  (f32.const 0.5)
                 )
                 (get_local $12)
                )
               )
              )
             )
            )
            (get_local $0)
            (tee_local $0
             (get_local $13)
            )
           )
           (i32.const 0)
          )
          (get_local $0)
          (tee_local $0
           (i32.const 0)
          )
         )
         (i32.load
          (get_local $10)
         )
        )
        (f32.store
         (tee_local $14
          (i32.add
           (get_local $3)
           (i32.shl
            (i32.add
             (get_local $8)
             (i32.mul
              (get_local $1)
              (i32.load
               (get_local $9)
              )
             )
            )
            (i32.const 2)
           )
          )
         )
         (f32.add
          (f32.load
           (get_local $14)
          )
          (tee_local $15
           (f32.add
            (f32.mul
             (f32.mul
              (f32.add
               (f32.convert_s/i32
                (get_local $0)
               )
               (f32.const 0.5)
              )
              (f32.convert_s/i32
               (i32.shl
                (i32.const 1)
                (i32.sub
                 (i32.const 14)
                 (i32.load
                  (get_local $10)
                 )
                )
               )
              )
             )
             (f32.const 0.00006103515625)
            )
            (f32.const -0.5)
           )
          )
         )
        )
        (f32.store
         (tee_local $0
          (i32.add
           (get_local $4)
           (i32.shl
            (i32.add
             (get_local $8)
             (i32.mul
              (get_local $1)
              (i32.load
               (get_local $9)
              )
             )
            )
            (i32.const 2)
           )
          )
         )
         (f32.sub
          (f32.load
           (get_local $0)
          )
          (get_local $15)
         )
        )
        (br_if $while-in1
         (i32.lt_s
          (tee_local $1
           (i32.add
            (get_local $1)
            (i32.const 1)
           )
          )
          (get_local $7)
         )
        )
       )
      )
     )
     (set_local $8
      (i32.add
       (get_local $8)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
 )
 (func $_quant_energy_finalise (; 157 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (param $8 i32) (param $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 f32)
  (set_local $12
   (i32.add
    (get_local $0)
    (i32.const 8)
   )
  )
  (set_local $0
   (get_local $7)
  )
  (loop $while-in
   (if
    (i32.ne
     (get_local $11)
     (i32.const 2)
    )
    (block
     (set_local $10
      (get_local $1)
     )
     (loop $while-in1
      (if
       (i32.and
        (i32.lt_s
         (get_local $10)
         (get_local $2)
        )
        (i32.ge_s
         (get_local $0)
         (get_local $9)
        )
       )
       (block
        (if
         (i32.le_s
          (i32.load
           (tee_local $14
            (i32.add
             (get_local $5)
             (i32.shl
              (get_local $10)
              (i32.const 2)
             )
            )
           )
          )
          (i32.const 7)
         )
         (if
          (i32.eq
           (i32.load
            (i32.add
             (get_local $6)
             (i32.shl
              (get_local $10)
              (i32.const 2)
             )
            )
           )
           (get_local $11)
          )
          (block
           (set_local $7
            (i32.const 0)
           )
           (loop $while-in3
            (call $_ec_enc_bits
             (get_local $8)
             (tee_local $13
              (i32.eqz
               (f32.lt
                (f32.load
                 (i32.add
                  (get_local $4)
                  (i32.shl
                   (i32.add
                    (get_local $10)
                    (i32.mul
                     (get_local $7)
                     (i32.load
                      (get_local $12)
                     )
                    )
                   )
                   (i32.const 2)
                  )
                 )
                )
                (f32.const 0)
               )
              )
             )
             (i32.const 1)
            )
            (f32.store
             (tee_local $15
              (i32.add
               (get_local $3)
               (i32.shl
                (i32.add
                 (get_local $10)
                 (i32.mul
                  (get_local $7)
                  (i32.load
                   (get_local $12)
                  )
                 )
                )
                (i32.const 2)
               )
              )
             )
             (f32.add
              (f32.load
               (get_local $15)
              )
              (tee_local $16
               (f32.mul
                (f32.mul
                 (f32.add
                  (f32.convert_s/i32
                   (get_local $13)
                  )
                  (f32.const -0.5)
                 )
                 (f32.convert_s/i32
                  (i32.shl
                   (i32.const 1)
                   (i32.sub
                    (i32.const 13)
                    (i32.load
                     (get_local $14)
                    )
                   )
                  )
                 )
                )
                (f32.const 0.00006103515625)
               )
              )
             )
            )
            (f32.store
             (tee_local $13
              (i32.add
               (get_local $4)
               (i32.shl
                (i32.add
                 (get_local $10)
                 (i32.mul
                  (get_local $7)
                  (i32.load
                   (get_local $12)
                  )
                 )
                )
                (i32.const 2)
               )
              )
             )
             (f32.sub
              (f32.load
               (get_local $13)
              )
              (get_local $16)
             )
            )
            (set_local $0
             (i32.add
              (get_local $0)
              (i32.const -1)
             )
            )
            (br_if $while-in3
             (i32.lt_s
              (tee_local $7
               (i32.add
                (get_local $7)
                (i32.const 1)
               )
              )
              (get_local $9)
             )
            )
           )
          )
         )
        )
        (set_local $10
         (i32.add
          (get_local $10)
          (i32.const 1)
         )
        )
        (br $while-in1)
       )
      )
     )
     (set_local $11
      (i32.add
       (get_local $11)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
 )
 (func $_unquant_coarse_energy (; 158 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32)
  (local $8 i32)
  (local $9 f32)
  (local $10 i32)
  (local $11 f32)
  (local $12 f32)
  (local $13 i32)
  (local $14 i32)
  (local $15 f32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (set_local $10
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.const 16)
   )
  )
  (i64.store
   (get_local $10)
   (i64.const 0)
  )
  (set_local $15
   (if (result f32)
    (get_local $4)
    (f32.const 0.149993896484375)
    (block (result f32)
     (set_local $12
      (f32.load
       (i32.add
        (i32.shl
         (get_local $7)
         (i32.const 2)
        )
        (i32.const 21760)
       )
      )
     )
     (f32.load
      (i32.add
       (i32.shl
        (get_local $7)
        (i32.const 2)
       )
       (i32.const 21776)
      )
     )
    )
   )
  )
  (set_local $13
   (i32.shl
    (i32.load offset=4
     (get_local $5)
    )
    (i32.const 3)
   )
  )
  (set_local $16
   (i32.add
    (get_local $5)
    (i32.const 20)
   )
  )
  (set_local $17
   (i32.add
    (get_local $5)
    (i32.const 28)
   )
  )
  (set_local $14
   (i32.add
    (get_local $0)
    (i32.const 8)
   )
  )
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $1)
     (get_local $2)
    )
    (block
     (set_local $18
      (i32.lt_s
       (get_local $1)
       (i32.const 20)
      )
     )
     (set_local $0
      (i32.const 0)
     )
     (loop $while-in1
      (set_local $8
       (call $_ec_tell
        (i32.load
         (get_local $16)
        )
        (i32.load
         (get_local $17)
        )
       )
      )
      (set_local $11
       (f32.convert_s/i32
        (tee_local $8
         (block $do-once (result i32)
          (if (result i32)
           (i32.gt_s
            (tee_local $19
             (i32.sub
              (get_local $13)
              (get_local $8)
             )
            )
            (i32.const 14)
           )
           (call $_ec_laplace_decode
            (get_local $5)
            (i32.shl
             (i32.load8_u
              (i32.add
               (i32.add
                (i32.add
                 (i32.mul
                  (get_local $7)
                  (i32.const 84)
                 )
                 (i32.const 21424)
                )
                (i32.mul
                 (get_local $4)
                 (i32.const 42)
                )
               )
               (tee_local $8
                (i32.shl
                 (if (result i32)
                  (get_local $18)
                  (get_local $1)
                  (i32.const 20)
                 )
                 (i32.const 1)
                )
               )
              )
             )
             (i32.const 7)
            )
            (i32.shl
             (i32.load8_u
              (i32.add
               (i32.add
                (i32.add
                 (i32.mul
                  (get_local $7)
                  (i32.const 84)
                 )
                 (i32.const 21424)
                )
                (i32.mul
                 (get_local $4)
                 (i32.const 42)
                )
               )
               (i32.or
                (get_local $8)
                (i32.const 1)
               )
              )
             )
             (i32.const 6)
            )
           )
           (block (result i32)
            (if
             (i32.gt_s
              (get_local $19)
              (i32.const 1)
             )
             (br $do-once
              (i32.xor
               (i32.shr_s
                (tee_local $8
                 (call $_ec_dec_icdf
                  (get_local $5)
                  (i32.const 43402)
                  (i32.const 2)
                 )
                )
                (i32.const 1)
               )
               (i32.sub
                (i32.const 0)
                (i32.and
                 (get_local $8)
                 (i32.const 1)
                )
               )
              )
             )
            )
            (if (result i32)
             (i32.gt_s
              (get_local $13)
              (get_local $8)
             )
             (i32.sub
              (i32.const 0)
              (call $_ec_dec_bit_logp
               (get_local $5)
               (i32.const 1)
              )
             )
             (i32.const -1)
            )
           )
          )
         )
        )
       )
      )
      (set_local $9
       (f32.load
        (tee_local $8
         (i32.add
          (get_local $3)
          (i32.shl
           (i32.add
            (get_local $1)
            (i32.mul
             (get_local $0)
             (i32.load
              (get_local $14)
             )
            )
           )
           (i32.const 2)
          )
         )
        )
       )
      )
      (f32.store
       (get_local $8)
       (if (result f32)
        (f32.lt
         (get_local $9)
         (f32.const -9)
        )
        (f32.const -9)
        (get_local $9)
       )
      )
      (f32.store
       (tee_local $8
        (i32.add
         (get_local $3)
         (i32.shl
          (i32.add
           (get_local $1)
           (i32.mul
            (get_local $0)
            (i32.load
             (get_local $14)
            )
           )
          )
          (i32.const 2)
         )
        )
       )
       (f32.add
        (f32.add
         (f32.mul
          (get_local $12)
          (f32.load
           (get_local $8)
          )
         )
         (tee_local $9
          (f32.load
           (tee_local $8
            (i32.add
             (get_local $10)
             (i32.shl
              (get_local $0)
              (i32.const 2)
             )
            )
           )
          )
         )
        )
        (get_local $11)
       )
      )
      (f32.store
       (get_local $8)
       (f32.sub
        (f32.add
         (get_local $9)
         (get_local $11)
        )
        (f32.mul
         (get_local $15)
         (get_local $11)
        )
       )
      )
      (br_if $while-in1
       (i32.lt_s
        (tee_local $0
         (i32.add
          (get_local $0)
          (i32.const 1)
         )
        )
        (get_local $6)
       )
      )
     )
     (set_local $1
      (i32.add
       (get_local $1)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (set_global $STACKTOP
   (get_local $10)
  )
 )
 (func $_unquant_fine_energy (; 159 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 f32)
  (set_local $9
   (i32.add
    (get_local $0)
    (i32.const 8)
   )
  )
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $1)
     (get_local $2)
    )
    (block
     (block $label$break$L4
      (if
       (i32.ge_s
        (tee_local $7
         (i32.load
          (tee_local $8
           (i32.add
            (get_local $4)
            (i32.shl
             (get_local $1)
             (i32.const 2)
            )
           )
          )
         )
        )
        (i32.const 1)
       )
       (block
        (set_local $0
         (i32.const 0)
        )
        (loop $while-in1
         (set_local $10
          (f32.add
           (f32.convert_s/i32
            (call $_ec_dec_bits
             (get_local $5)
             (get_local $7)
            )
           )
           (f32.const 0.5)
          )
         )
         (f32.store
          (tee_local $7
           (i32.add
            (get_local $3)
            (i32.shl
             (i32.add
              (get_local $1)
              (i32.mul
               (get_local $0)
               (i32.load
                (get_local $9)
               )
              )
             )
             (i32.const 2)
            )
           )
          )
          (f32.add
           (f32.load
            (get_local $7)
           )
           (f32.add
            (f32.mul
             (f32.mul
              (get_local $10)
              (f32.convert_s/i32
               (i32.shl
                (i32.const 1)
                (i32.sub
                 (i32.const 14)
                 (i32.load
                  (get_local $8)
                 )
                )
               )
              )
             )
             (f32.const 0.00006103515625)
            )
            (f32.const -0.5)
           )
          )
         )
         (br_if $label$break$L4
          (i32.ge_s
           (tee_local $0
            (i32.add
             (get_local $0)
             (i32.const 1)
            )
           )
           (get_local $6)
          )
         )
         (set_local $7
          (i32.load
           (get_local $8)
          )
         )
         (br $while-in1)
        )
       )
      )
     )
     (set_local $1
      (i32.add
       (get_local $1)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
 )
 (func $_unquant_energy_finalise (; 160 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (param $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 f32)
  (local $14 i32)
  (set_local $11
   (i32.add
    (get_local $0)
    (i32.const 8)
   )
  )
  (set_local $0
   (get_local $6)
  )
  (loop $while-in
   (if
    (i32.ne
     (get_local $10)
     (i32.const 2)
    )
    (block
     (set_local $9
      (get_local $1)
     )
     (loop $while-in1
      (if
       (i32.and
        (i32.lt_s
         (get_local $9)
         (get_local $2)
        )
        (i32.ge_s
         (get_local $0)
         (get_local $8)
        )
       )
       (block
        (if
         (i32.le_s
          (i32.load
           (tee_local $12
            (i32.add
             (get_local $4)
             (i32.shl
              (get_local $9)
              (i32.const 2)
             )
            )
           )
          )
          (i32.const 7)
         )
         (if
          (i32.eq
           (i32.load
            (i32.add
             (get_local $5)
             (i32.shl
              (get_local $9)
              (i32.const 2)
             )
            )
           )
           (get_local $10)
          )
          (block
           (set_local $6
            (i32.const 0)
           )
           (loop $while-in3
            (set_local $13
             (f32.add
              (f32.convert_s/i32
               (call $_ec_dec_bits
                (get_local $7)
                (i32.const 1)
               )
              )
              (f32.const -0.5)
             )
            )
            (f32.store
             (tee_local $14
              (i32.add
               (get_local $3)
               (i32.shl
                (i32.add
                 (get_local $9)
                 (i32.mul
                  (get_local $6)
                  (i32.load
                   (get_local $11)
                  )
                 )
                )
                (i32.const 2)
               )
              )
             )
             (f32.add
              (f32.load
               (get_local $14)
              )
              (f32.mul
               (f32.mul
                (get_local $13)
                (f32.convert_s/i32
                 (i32.shl
                  (i32.const 1)
                  (i32.sub
                   (i32.const 13)
                   (i32.load
                    (get_local $12)
                   )
                  )
                 )
                )
               )
               (f32.const 0.00006103515625)
              )
             )
            )
            (set_local $0
             (i32.add
              (get_local $0)
              (i32.const -1)
             )
            )
            (br_if $while-in3
             (i32.lt_s
              (tee_local $6
               (i32.add
                (get_local $6)
                (i32.const 1)
               )
              )
              (get_local $8)
             )
            )
           )
          )
         )
        )
        (set_local $9
         (i32.add
          (get_local $9)
          (i32.const 1)
         )
        )
        (br $while-in1)
       )
      )
     )
     (set_local $10
      (i32.add
       (get_local $10)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
 )
 (func $_amp2Log2 (; 161 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 f32)
  (set_local $7
   (i32.add
    (get_local $0)
    (i32.const 8)
   )
  )
  (set_local $0
   (i32.const 0)
  )
  (loop $while-in
   (set_local $6
    (i32.const 0)
   )
   (loop $while-in1
    (if
     (i32.lt_s
      (get_local $6)
      (get_local $1)
     )
     (block
      (set_local $9
       (f32.demote/f64
        (f64.mul
         (call $Math_log
          (f64.promote/f32
           (f32.load
            (i32.add
             (get_local $3)
             (i32.shl
              (tee_local $8
               (i32.add
                (get_local $6)
                (i32.mul
                 (get_local $0)
                 (i32.load
                  (get_local $7)
                 )
                )
               )
              )
              (i32.const 2)
             )
            )
           )
          )
         )
         (f64.const 1.4426950408889634)
        )
       )
      )
      (f32.store
       (i32.add
        (get_local $4)
        (i32.shl
         (get_local $8)
         (i32.const 2)
        )
       )
       (f32.sub
        (get_local $9)
        (f32.load
         (i32.add
          (i32.shl
           (get_local $6)
           (i32.const 2)
          )
          (i32.const 21312)
         )
        )
       )
      )
      (set_local $6
       (i32.add
        (get_local $6)
        (i32.const 1)
       )
      )
      (br $while-in1)
     )
    )
   )
   (set_local $6
    (get_local $1)
   )
   (loop $while-in3
    (if
     (i32.lt_s
      (get_local $6)
      (get_local $2)
     )
     (block
      (f32.store
       (i32.add
        (get_local $4)
        (i32.shl
         (i32.add
          (i32.mul
           (get_local $0)
           (i32.load
            (get_local $7)
           )
          )
          (get_local $6)
         )
         (i32.const 2)
        )
       )
       (f32.const -14)
      )
      (set_local $6
       (i32.add
        (get_local $6)
        (i32.const 1)
       )
      )
      (br $while-in3)
     )
    )
   )
   (br_if $while-in
    (i32.lt_s
     (tee_local $0
      (i32.add
       (get_local $0)
       (i32.const 1)
      )
     )
     (get_local $5)
    )
   )
  )
 )
 (func $_clt_compute_allocation (; 162 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (param $8 i32) (param $9 i32) (param $10 i32) (param $11 i32) (param $12 i32) (param $13 i32) (param $14 i32) (param $15 i32) (param $16 i32) (param $17 i32) (param $18 i32) (result i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local $26 i32)
  (local $27 i32)
  (local $28 i32)
  (local $29 i32)
  (local $30 i32)
  (local $31 i32)
  (local $32 i32)
  (local $33 i32)
  (local $34 i32)
  (local $35 i32)
  (local $36 i32)
  (local $37 i32)
  (local $38 i32)
  (local $39 i32)
  (set_local $21
   (i32.load offset=8
    (get_local $0)
   )
  )
  (set_local $22
   (i32.gt_s
    (get_local $8)
    (i32.const 7)
   )
  )
  (set_local $8
   (i32.sub
    (if (result i32)
     (i32.gt_s
      (get_local $8)
      (i32.const 0)
     )
     (get_local $8)
     (i32.const 0)
    )
    (tee_local $37
     (if (result i32)
      (get_local $22)
      (i32.const 8)
      (i32.const 0)
     )
    )
   )
  )
  (set_local $33
   (if (result i32)
    (i32.eq
     (get_local $13)
     (i32.const 2)
    )
    (if (result i32)
     (i32.lt_s
      (get_local $8)
      (tee_local $25
       (i32.load8_u
        (i32.add
         (i32.sub
          (get_local $2)
          (get_local $1)
         )
         (i32.const 21792)
        )
       )
      )
     )
     (block (result i32)
      (set_local $25
       (i32.const 0)
      )
      (get_local $8)
     )
     (block (result i32)
      (set_local $26
       (if (result i32)
        (i32.gt_s
         (tee_local $8
          (i32.sub
           (get_local $8)
           (get_local $25)
          )
         )
         (i32.const 7)
        )
        (i32.const 8)
        (i32.const 0)
       )
      )
      (i32.sub
       (get_local $8)
       (get_local $26)
      )
     )
    )
    (get_local $8)
   )
  )
  (set_local $38
   (get_global $STACKTOP)
  )
  (set_local $34
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (get_local $21)
       (i32.const 2)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (set_local $35
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (get_local $21)
       (i32.const 2)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (set_local $29
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (get_local $21)
       (i32.const 2)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (set_local $27
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (get_local $21)
       (i32.const 2)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (set_local $23
   (i32.shl
    (get_local $13)
    (i32.const 3)
   )
  )
  (set_local $30
   (i32.add
    (get_local $0)
    (i32.const 32)
   )
  )
  (set_local $19
   (i32.sub
    (i32.add
     (get_local $5)
     (i32.const -5)
    )
    (get_local $14)
   )
  )
  (set_local $20
   (i32.add
    (get_local $14)
    (i32.const 3)
   )
  )
  (set_local $5
   (get_local $1)
  )
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $5)
     (get_local $2)
    )
    (block
     (i32.store
      (i32.add
       (get_local $29)
       (i32.shl
        (get_local $5)
        (i32.const 2)
       )
      )
      (if (result i32)
       (i32.gt_s
        (get_local $23)
        (tee_local $24
         (i32.shr_s
          (i32.shl
           (i32.shl
            (i32.mul
             (tee_local $22
              (i32.sub
               (i32.load16_s
                (i32.add
                 (tee_local $22
                  (i32.load
                   (get_local $30)
                  )
                 )
                 (i32.shl
                  (tee_local $8
                   (i32.add
                    (get_local $5)
                    (i32.const 1)
                   )
                  )
                  (i32.const 1)
                 )
                )
               )
               (i32.load16_s
                (i32.add
                 (get_local $22)
                 (i32.shl
                  (get_local $5)
                  (i32.const 1)
                 )
                )
               )
              )
             )
             (i32.const 3)
            )
            (get_local $14)
           )
           (i32.const 3)
          )
          (i32.const 4)
         )
        )
       )
       (get_local $23)
       (get_local $24)
      )
     )
     (i32.store
      (i32.add
       (get_local $27)
       (i32.shl
        (get_local $5)
        (i32.const 2)
       )
      )
      (i32.sub
       (i32.shr_s
        (i32.shl
         (i32.mul
          (i32.mul
           (i32.mul
            (get_local $22)
            (get_local $13)
           )
           (get_local $19)
          )
          (i32.add
           (i32.sub
            (get_local $2)
            (get_local $5)
           )
           (i32.const -1)
          )
         )
         (get_local $20)
        )
        (i32.const 6)
       )
       (if (result i32)
        (i32.eq
         (i32.shl
          (get_local $22)
          (get_local $14)
         )
         (i32.const 1)
        )
        (get_local $23)
        (i32.const 0)
       )
      )
     )
     (set_local $5
      (get_local $8)
     )
     (br $while-in)
    )
   )
  )
  (set_local $36
   (i32.add
    (get_local $0)
    (i32.const 52)
   )
  )
  (set_local $19
   (i32.add
    (tee_local $39
     (i32.load offset=48
      (get_local $0)
     )
    )
    (i32.const -1)
   )
  )
  (set_local $22
   (i32.const 1)
  )
  (loop $while-in1
   (set_local $31
    (i32.mul
     (tee_local $28
      (i32.shr_s
       (i32.add
        (get_local $22)
        (get_local $19)
       )
       (i32.const 1)
      )
     )
     (get_local $21)
    )
   )
   (set_local $24
    (i32.const 0)
   )
   (set_local $20
    (i32.const 0)
   )
   (set_local $5
    (get_local $2)
   )
   (loop $while-in3
    (if
     (i32.gt_s
      (get_local $5)
      (get_local $1)
     )
     (block
      (set_local $5
       (i32.shr_s
        (tee_local $32
         (i32.shl
          (i32.mul
           (i32.mul
            (i32.sub
             (i32.load16_s
              (i32.add
               (tee_local $8
                (i32.load
                 (get_local $30)
                )
               )
               (i32.shl
                (get_local $5)
                (i32.const 1)
               )
              )
             )
             (i32.load16_s
              (i32.add
               (get_local $8)
               (i32.shl
                (tee_local $8
                 (i32.add
                  (get_local $5)
                  (i32.const -1)
                 )
                )
                (i32.const 1)
               )
              )
             )
            )
            (get_local $13)
           )
           (i32.load8_u
            (i32.add
             (i32.load
              (get_local $36)
             )
             (i32.add
              (get_local $31)
              (get_local $8)
             )
            )
           )
          )
          (get_local $14)
         )
        )
        (i32.const 2)
       )
      )
      (if
       (i32.gt_s
        (get_local $32)
        (i32.const 3)
       )
       (if
        (i32.le_s
         (tee_local $5
          (i32.add
           (get_local $5)
           (i32.load
            (i32.add
             (get_local $27)
             (i32.shl
              (get_local $8)
              (i32.const 2)
             )
            )
           )
          )
         )
         (i32.const 0)
        )
        (set_local $5
         (i32.const 0)
        )
       )
      )
      (if
       (i32.and
        (i32.lt_s
         (tee_local $5
          (i32.add
           (get_local $5)
           (i32.load
            (i32.add
             (get_local $3)
             (i32.shl
              (get_local $8)
              (i32.const 2)
             )
            )
           )
          )
         )
         (i32.load
          (i32.add
           (get_local $29)
           (i32.shl
            (get_local $8)
            (i32.const 2)
           )
          )
         )
        )
        (i32.eqz
         (get_local $20)
        )
       )
       (block
        (set_local $20
         (i32.const 0)
        )
        (set_local $5
         (if (result i32)
          (i32.lt_s
           (get_local $5)
           (get_local $23)
          )
          (i32.const 0)
          (get_local $23)
         )
        )
       )
       (block
        (set_local $20
         (i32.const 1)
        )
        (if
         (i32.ge_s
          (get_local $5)
          (tee_local $32
           (i32.load
            (i32.add
             (get_local $4)
             (i32.shl
              (get_local $8)
              (i32.const 2)
             )
            )
           )
          )
         )
         (set_local $5
          (get_local $32)
         )
        )
       )
      )
      (set_local $24
       (i32.add
        (get_local $24)
        (get_local $5)
       )
      )
      (set_local $5
       (get_local $8)
      )
      (br $while-in3)
     )
    )
   )
   (set_local $5
    (i32.add
     (get_local $28)
     (i32.const -1)
    )
   )
   (set_local $8
    (i32.add
     (get_local $28)
     (i32.const 1)
    )
   )
   (if
    (i32.le_s
     (if (result i32)
      (tee_local $20
       (i32.gt_s
        (get_local $24)
        (get_local $33)
       )
      )
      (get_local $22)
      (tee_local $22
       (get_local $8)
      )
     )
     (if (result i32)
      (get_local $20)
      (get_local $5)
      (tee_local $5
       (get_local $19)
      )
     )
    )
    (block
     (set_local $19
      (get_local $5)
     )
     (br $while-in1)
    )
   )
  )
  (set_local $24
   (i32.mul
    (i32.add
     (get_local $22)
     (i32.const -1)
    )
    (get_local $21)
   )
  )
  (set_local $28
   (i32.mul
    (get_local $22)
    (get_local $21)
   )
  )
  (set_local $31
   (i32.gt_s
    (get_local $22)
    (i32.const 1)
   )
  )
  (set_local $5
   (tee_local $8
    (get_local $1)
   )
  )
  (loop $while-in5
   (if
    (i32.lt_s
     (get_local $5)
     (get_local $2)
    )
    (block
     (set_local $19
      (i32.mul
       (i32.sub
        (i32.load16_s
         (i32.add
          (tee_local $19
           (i32.load
            (get_local $30)
           )
          )
          (i32.shl
           (tee_local $23
            (i32.add
             (get_local $5)
             (i32.const 1)
            )
           )
           (i32.const 1)
          )
         )
        )
        (i32.load16_s
         (i32.add
          (get_local $19)
          (i32.shl
           (get_local $5)
           (i32.const 1)
          )
         )
        )
       )
       (get_local $13)
      )
     )
     (set_local $21
      (i32.load8_u
       (i32.add
        (tee_local $20
         (i32.load
          (get_local $36)
         )
        )
        (i32.add
         (get_local $24)
         (get_local $5)
        )
       )
      )
     )
     (set_local $20
      (if (result i32)
       (i32.lt_s
        (get_local $22)
        (get_local $39)
       )
       (i32.shr_s
        (i32.shl
         (i32.mul
          (get_local $19)
          (i32.load8_u
           (i32.add
            (get_local $20)
            (i32.add
             (get_local $28)
             (get_local $5)
            )
           )
          )
         )
         (get_local $14)
        )
        (i32.const 2)
       )
       (i32.load
        (i32.add
         (get_local $4)
         (i32.shl
          (get_local $5)
          (i32.const 2)
         )
        )
       )
      )
     )
     (set_local $19
      (i32.shr_s
       (tee_local $21
        (i32.shl
         (i32.mul
          (get_local $19)
          (i32.and
           (get_local $21)
           (i32.const 255)
          )
         )
         (get_local $14)
        )
       )
       (i32.const 2)
      )
     )
     (if
      (i32.gt_s
       (get_local $21)
       (i32.const 3)
      )
      (if
       (i32.le_s
        (tee_local $19
         (i32.add
          (get_local $19)
          (i32.load
           (i32.add
            (get_local $27)
            (i32.shl
             (get_local $5)
             (i32.const 2)
            )
           )
          )
         )
        )
        (i32.const 0)
       )
       (set_local $19
        (i32.const 0)
       )
      )
     )
     (if
      (i32.gt_s
       (get_local $20)
       (i32.const 0)
      )
      (if
       (i32.le_s
        (tee_local $20
         (i32.add
          (get_local $20)
          (i32.load
           (i32.add
            (get_local $27)
            (i32.shl
             (get_local $5)
             (i32.const 2)
            )
           )
          )
         )
        )
        (i32.const 0)
       )
       (set_local $20
        (i32.const 0)
       )
      )
     )
     (set_local $21
      (i32.load
       (i32.add
        (get_local $3)
        (i32.shl
         (get_local $5)
         (i32.const 2)
        )
       )
      )
     )
     (set_local $19
      (i32.add
       (get_local $19)
       (if (result i32)
        (get_local $31)
        (get_local $21)
        (i32.const 0)
       )
      )
     )
     (set_local $20
      (i32.add
       (get_local $20)
       (get_local $21)
      )
     )
     (if
      (i32.gt_s
       (get_local $21)
       (i32.const 0)
      )
      (set_local $8
       (get_local $5)
      )
     )
     (set_local $21
      (i32.sub
       (get_local $20)
       (get_local $19)
      )
     )
     (i32.store
      (i32.add
       (get_local $34)
       (i32.shl
        (get_local $5)
        (i32.const 2)
       )
      )
      (get_local $19)
     )
     (i32.store
      (i32.add
       (get_local $35)
       (i32.shl
        (get_local $5)
        (i32.const 2)
       )
      )
      (if (result i32)
       (i32.lt_s
        (get_local $20)
        (get_local $19)
       )
       (i32.const 0)
       (get_local $21)
      )
     )
     (set_local $5
      (get_local $23)
     )
     (br $while-in5)
    )
   )
  )
  (set_local $0
   (call $_interp_bits2pulses
    (get_local $0)
    (get_local $1)
    (get_local $2)
    (get_local $8)
    (get_local $34)
    (get_local $35)
    (get_local $29)
    (get_local $4)
    (get_local $33)
    (get_local $9)
    (get_local $37)
    (get_local $6)
    (get_local $25)
    (get_local $7)
    (get_local $26)
    (get_local $10)
    (get_local $11)
    (get_local $12)
    (get_local $13)
    (get_local $14)
    (get_local $15)
    (get_local $16)
    (get_local $17)
    (get_local $18)
   )
  )
  (set_global $STACKTOP
   (get_local $38)
  )
  (get_local $0)
 )
 (func $_interp_bits2pulses (; 163 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (param $8 i32) (param $9 i32) (param $10 i32) (param $11 i32) (param $12 i32) (param $13 i32) (param $14 i32) (param $15 i32) (param $16 i32) (param $17 i32) (param $18 i32) (param $19 i32) (param $20 i32) (param $21 i32) (param $22 i32) (param $23 i32) (result i32)
  (local $24 i32)
  (local $25 i32)
  (local $26 i32)
  (local $27 i32)
  (local $28 i32)
  (local $29 i32)
  (local $30 i32)
  (local $31 i32)
  (local $32 i32)
  (local $33 i32)
  (local $34 i32)
  (local $35 i32)
  (local $36 i32)
  (local $37 i32)
  (local $38 i32)
  (set_local $30
   (i32.shl
    (get_local $18)
    (i32.const 3)
   )
  )
  (set_local $36
   (tee_local $38
    (i32.gt_s
     (get_local $18)
     (i32.const 1)
    )
   )
  )
  (set_local $26
   (i32.const 64)
  )
  (loop $while-in
   (if
    (i32.ne
     (get_local $31)
     (i32.const 6)
    )
    (block
     (set_local $27
      (i32.shr_s
       (i32.add
        (get_local $29)
        (get_local $26)
       )
       (i32.const 1)
      )
     )
     (set_local $24
      (get_local $2)
     )
     (set_local $33
      (i32.const 0)
     )
     (set_local $28
      (i32.const 0)
     )
     (loop $while-in1
      (if
       (i32.gt_s
        (get_local $24)
        (get_local $1)
       )
       (block
        (if
         (i32.and
          (i32.lt_s
           (tee_local $25
            (i32.add
             (i32.load
              (i32.add
               (get_local $4)
               (i32.shl
                (tee_local $24
                 (i32.add
                  (get_local $24)
                  (i32.const -1)
                 )
                )
                (i32.const 2)
               )
              )
             )
             (i32.shr_s
              (i32.mul
               (get_local $27)
               (i32.load
                (i32.add
                 (get_local $5)
                 (i32.shl
                  (get_local $24)
                  (i32.const 2)
                 )
                )
               )
              )
              (i32.const 6)
             )
            )
           )
           (i32.load
            (i32.add
             (get_local $6)
             (i32.shl
              (get_local $24)
              (i32.const 2)
             )
            )
           )
          )
          (i32.eqz
           (get_local $28)
          )
         )
         (block
          (set_local $28
           (i32.const 0)
          )
          (set_local $25
           (if (result i32)
            (i32.lt_s
             (get_local $25)
             (get_local $30)
            )
            (i32.const 0)
            (get_local $30)
           )
          )
         )
         (block
          (set_local $28
           (i32.const 1)
          )
          (if
           (i32.ge_s
            (get_local $25)
            (tee_local $32
             (i32.load
              (i32.add
               (get_local $7)
               (i32.shl
                (get_local $24)
                (i32.const 2)
               )
              )
             )
            )
           )
           (set_local $25
            (get_local $32)
           )
          )
         )
        )
        (set_local $33
         (i32.add
          (get_local $33)
          (get_local $25)
         )
        )
        (br $while-in1)
       )
      )
     )
     (set_local $24
      (if (result i32)
       (tee_local $25
        (i32.gt_s
         (get_local $33)
         (get_local $8)
        )
       )
       (get_local $29)
       (get_local $27)
      )
     )
     (set_local $31
      (i32.add
       (get_local $31)
       (i32.const 1)
      )
     )
     (if
      (get_local $25)
      (set_local $26
       (get_local $27)
      )
     )
     (set_local $29
      (get_local $24)
     )
     (br $while-in)
    )
   )
  )
  (set_local $33
   (i32.shl
    (get_local $19)
    (i32.const 3)
   )
  )
  (set_local $24
   (get_local $2)
  )
  (set_local $28
   (i32.const 0)
  )
  (set_local $26
   (i32.const 0)
  )
  (loop $while-in3
   (set_local $27
    (i32.add
     (get_local $24)
     (i32.const -1)
    )
   )
   (if
    (i32.gt_s
     (get_local $24)
     (get_local $1)
    )
    (block
     (set_local $25
      (i32.and
       (tee_local $32
        (i32.lt_s
         (tee_local $31
          (i32.add
           (i32.load
            (i32.add
             (get_local $4)
             (i32.shl
              (get_local $27)
              (i32.const 2)
             )
            )
           )
           (i32.shr_s
            (i32.mul
             (get_local $29)
             (i32.load
              (i32.add
               (get_local $5)
               (i32.shl
                (get_local $27)
                (i32.const 2)
               )
              )
             )
            )
            (i32.const 6)
           )
          )
         )
         (i32.load
          (i32.add
           (get_local $6)
           (i32.shl
            (get_local $27)
            (i32.const 2)
           )
          )
         )
        )
       )
       (tee_local $28
        (i32.eqz
         (get_local $28)
        )
       )
      )
     )
     (set_local $24
      (if (result i32)
       (i32.lt_s
        (get_local $31)
        (get_local $30)
       )
       (i32.const 0)
       (get_local $30)
      )
     )
     (set_local $28
      (i32.and
       (i32.xor
        (i32.and
         (get_local $32)
         (get_local $28)
        )
        (i32.const 1)
       )
       (i32.const 1)
      )
     )
     (i32.store
      (i32.add
       (get_local $15)
       (i32.shl
        (get_local $27)
        (i32.const 2)
       )
      )
      (if (result i32)
       (i32.lt_s
        (if (result i32)
         (get_local $25)
         (get_local $24)
         (tee_local $24
          (get_local $31)
         )
        )
        (tee_local $25
         (i32.load
          (i32.add
           (get_local $7)
           (i32.shl
            (get_local $27)
            (i32.const 2)
           )
          )
         )
        )
       )
       (tee_local $25
        (get_local $24)
       )
       (get_local $25)
      )
     )
     (set_local $24
      (get_local $27)
     )
     (set_local $26
      (i32.add
       (get_local $26)
       (get_local $25)
      )
     )
     (br $while-in3)
    )
   )
  )
  (set_local $34
   (i32.add
    (get_local $0)
    (i32.const 32)
   )
  )
  (set_local $37
   (i32.add
    (get_local $30)
    (i32.const 8)
   )
  )
  (set_local $35
   (i32.eqz
    (get_local $21)
   )
  )
  (set_local $27
   (i32.add
    (get_local $1)
    (i32.const 2)
   )
  )
  (set_local $5
   (get_local $2)
  )
  (set_local $4
   (get_local $26)
  )
  (block $__rjto$3
   (block $__rjti$3
    (block $__rjti$2
     (loop $while-in5
      (block $while-out4
       (br_if $__rjti$2
        (i32.le_s
         (tee_local $29
          (i32.add
           (get_local $5)
           (i32.const -1)
          )
         )
         (get_local $3)
        )
       )
       (set_local $31
        (call $_celt_udiv
         (tee_local $28
          (i32.sub
           (get_local $8)
           (get_local $4)
          )
         )
         (tee_local $21
          (i32.sub
           (tee_local $25
            (i32.load16_s
             (i32.add
              (tee_local $26
               (i32.load
                (get_local $34)
               )
              )
              (i32.shl
               (get_local $5)
               (i32.const 1)
              )
             )
            )
           )
           (tee_local $24
            (i32.load16_s
             (i32.add
              (get_local $26)
              (i32.shl
               (get_local $1)
               (i32.const 1)
              )
             )
            )
           )
          )
         )
        )
       )
       (set_local $32
        (i32.add
         (i32.sub
          (get_local $28)
          (i32.mul
           (get_local $21)
           (get_local $31)
          )
         )
         (i32.sub
          (get_local $24)
          (tee_local $24
           (i32.load16_s
            (i32.add
             (get_local $26)
             (i32.shl
              (get_local $29)
              (i32.const 1)
             )
            )
           )
          )
         )
        )
       )
       (set_local $25
        (i32.add
         (i32.sub
          (tee_local $5
           (if (result i32)
            (i32.lt_s
             (tee_local $24
              (i32.add
               (i32.add
                (tee_local $21
                 (i32.load
                  (tee_local $26
                   (i32.add
                    (get_local $15)
                    (i32.shl
                     (get_local $29)
                     (i32.const 2)
                    )
                   )
                  )
                 )
                )
                (i32.mul
                 (get_local $31)
                 (tee_local $28
                  (i32.sub
                   (get_local $25)
                   (get_local $24)
                  )
                 )
                )
               )
               (if (result i32)
                (i32.gt_s
                 (get_local $32)
                 (i32.const 0)
                )
                (get_local $32)
                (i32.const 0)
               )
              )
             )
             (if (result i32)
              (i32.gt_s
               (tee_local $25
                (i32.load
                 (i32.add
                  (get_local $6)
                  (i32.shl
                   (get_local $29)
                   (i32.const 2)
                  )
                 )
                )
               )
               (get_local $37)
              )
              (get_local $25)
              (get_local $37)
             )
            )
            (get_local $4)
            (block (result i32)
             (if
              (get_local $35)
              (br_if $while-out4
               (call $_ec_dec_bit_logp
                (get_local $20)
                (i32.const 1)
               )
              )
              (block
               (br_if $__rjti$3
                (i32.le_s
                 (get_local $5)
                 (get_local $27)
                )
               )
               (set_local $25
                (i32.gt_s
                 (get_local $5)
                 (i32.const 17)
                )
               )
               (set_local $21
                (if (result i32)
                 (i32.gt_s
                  (get_local $5)
                  (get_local $22)
                 )
                 (i32.const 9)
                 (i32.const 7)
                )
               )
               (br_if $__rjti$3
                (i32.eqz
                 (if (result i32)
                  (i32.gt_s
                   (get_local $29)
                   (get_local $23)
                  )
                  (i32.const 1)
                  (i32.le_s
                   (get_local $24)
                   (i32.shr_s
                    (i32.shl
                     (i32.shl
                      (i32.mul
                       (if (result i32)
                        (get_local $25)
                        (get_local $21)
                        (i32.const 0)
                       )
                       (get_local $28)
                      )
                      (get_local $19)
                     )
                     (i32.const 3)
                    )
                    (i32.const 4)
                   )
                  )
                 )
                )
               )
               (call $_ec_enc_bit_logp
                (get_local $20)
                (i32.const 0)
                (i32.const 1)
               )
              )
             )
             (set_local $24
              (i32.add
               (get_local $24)
               (i32.const -8)
              )
             )
             (set_local $21
              (i32.load
               (get_local $26)
              )
             )
             (i32.add
              (get_local $4)
              (i32.const 8)
             )
            )
           )
          )
          (i32.add
           (get_local $21)
           (get_local $12)
          )
         )
         (tee_local $4
          (if (result i32)
           (i32.gt_s
            (get_local $12)
            (i32.const 0)
           )
           (i32.load8_u
            (i32.add
             (i32.sub
              (get_local $29)
              (get_local $1)
             )
             (i32.const 21792)
            )
           )
           (get_local $12)
          )
         )
        )
       )
       (i32.store
        (get_local $26)
        (if (result i32)
         (tee_local $21
          (i32.lt_s
           (get_local $24)
           (get_local $30)
          )
         )
         (i32.const 0)
         (get_local $30)
        )
       )
       (set_local $5
        (get_local $29)
       )
       (set_local $12
        (get_local $4)
       )
       (set_local $4
        (i32.add
         (get_local $25)
         (if (result i32)
          (get_local $21)
          (i32.const 0)
          (get_local $30)
         )
        )
       )
       (br $while-in5)
      )
     )
     (br $__rjto$3)
    )
    (set_local $8
     (i32.add
      (get_local $8)
      (get_local $10)
     )
    )
    (br $__rjto$3)
   )
   (call $_ec_enc_bit_logp
    (get_local $20)
    (i32.const 1)
    (i32.const 1)
   )
  )
  (if
   (i32.le_s
    (get_local $5)
    (get_local $1)
   )
   (call $_celt_fatal
    (i32.const 43405)
    (i32.const 43442)
    (i32.const 391)
   )
  )
  (if
   (i32.gt_s
    (get_local $12)
    (i32.const 0)
   )
   (if
    (get_local $35)
    (block
     (set_local $3
      (i32.add
       (call $_ec_dec_uint
        (get_local $20)
        (i32.sub
         (i32.add
          (get_local $5)
          (i32.const 1)
         )
         (get_local $1)
        )
       )
       (get_local $1)
      )
     )
     (i32.store
      (get_local $11)
      (get_local $3)
     )
    )
    (block
     (i32.store
      (get_local $11)
      (if (result i32)
       (i32.lt_s
        (tee_local $3
         (i32.load
          (get_local $11)
         )
        )
        (get_local $5)
       )
       (get_local $3)
       (tee_local $3
        (get_local $5)
       )
      )
     )
     (call $_ec_enc_uint
      (get_local $20)
      (i32.sub
       (get_local $3)
       (get_local $1)
      )
      (i32.sub
       (i32.add
        (get_local $5)
        (i32.const 1)
       )
       (get_local $1)
      )
     )
     (set_local $3
      (i32.load
       (get_local $11)
      )
     )
    )
   )
   (block
    (i32.store
     (get_local $11)
     (i32.const 0)
    )
    (set_local $3
     (i32.const 0)
    )
   )
  )
  (block $__rjto$4
   (block $__rjti$4
    (if
     (i32.gt_s
      (get_local $3)
      (get_local $1)
     )
     (if
      (i32.gt_s
       (get_local $14)
       (i32.const 0)
      )
      (if
       (get_local $35)
       (block
        (set_local $3
         (call $_ec_dec_bit_logp
          (get_local $20)
          (i32.const 1)
         )
        )
        (i32.store
         (get_local $13)
         (get_local $3)
        )
       )
       (call $_ec_enc_bit_logp
        (get_local $20)
        (i32.load
         (get_local $13)
        )
        (i32.const 1)
       )
      )
      (br $__rjti$4)
     )
     (block
      (set_local $8
       (i32.add
        (get_local $8)
        (get_local $14)
       )
      )
      (br $__rjti$4)
     )
    )
    (br $__rjto$4)
   )
   (i32.store
    (get_local $13)
    (i32.const 0)
   )
  )
  (set_local $12
   (call $_celt_udiv
    (tee_local $10
     (i32.sub
      (get_local $8)
      (get_local $4)
     )
    )
    (tee_local $3
     (i32.sub
      (i32.load16_s
       (i32.add
        (tee_local $3
         (i32.load
          (get_local $34)
         )
        )
        (i32.shl
         (get_local $5)
         (i32.const 1)
        )
       )
      )
      (i32.load16_s
       (i32.add
        (get_local $3)
        (i32.shl
         (get_local $1)
         (i32.const 1)
        )
       )
      )
     )
    )
   )
  )
  (set_local $8
   (i32.mul
    (get_local $3)
    (get_local $12)
   )
  )
  (set_local $3
   (get_local $1)
  )
  (loop $while-in9
   (if
    (i32.lt_s
     (get_local $3)
     (get_local $5)
    )
    (block
     (i32.store
      (tee_local $4
       (i32.add
        (get_local $15)
        (i32.shl
         (get_local $3)
         (i32.const 2)
        )
       )
      )
      (i32.add
       (i32.load
        (get_local $4)
       )
       (i32.mul
        (get_local $12)
        (i32.sub
         (i32.load16_s
          (i32.add
           (tee_local $6
            (i32.load
             (get_local $34)
            )
           )
           (i32.shl
            (tee_local $4
             (i32.add
              (get_local $3)
              (i32.const 1)
             )
            )
            (i32.const 1)
           )
          )
         )
         (i32.load16_s
          (i32.add
           (get_local $6)
           (i32.shl
            (get_local $3)
            (i32.const 1)
           )
          )
         )
        )
       )
      )
     )
     (set_local $3
      (get_local $4)
     )
     (br $while-in9)
    )
   )
  )
  (set_local $6
   (i32.sub
    (get_local $10)
    (get_local $8)
   )
  )
  (set_local $3
   (get_local $1)
  )
  (loop $while-in11
   (if
    (i32.lt_s
     (get_local $3)
     (get_local $5)
    )
    (block
     (i32.store
      (tee_local $4
       (i32.add
        (get_local $15)
        (i32.shl
         (get_local $3)
         (i32.const 2)
        )
       )
      )
      (i32.add
       (i32.load
        (get_local $4)
       )
       (if (result i32)
        (i32.lt_s
         (get_local $6)
         (tee_local $3
          (i32.sub
           (i32.load16_s
            (i32.add
             (tee_local $8
              (i32.load
               (get_local $34)
              )
             )
             (i32.shl
              (tee_local $4
               (i32.add
                (get_local $3)
                (i32.const 1)
               )
              )
              (i32.const 1)
             )
            )
           )
           (i32.load16_s
            (i32.add
             (get_local $8)
             (i32.shl
              (get_local $3)
              (i32.const 1)
             )
            )
           )
          )
         )
        )
        (tee_local $3
         (get_local $6)
        )
        (get_local $3)
       )
      )
     )
     (set_local $6
      (i32.sub
       (get_local $6)
       (get_local $3)
      )
     )
     (set_local $3
      (get_local $4)
     )
     (br $while-in11)
    )
   )
  )
  (set_local $21
   (i32.eq
    (get_local $18)
    (i32.const 2)
   )
  )
  (set_local $20
   (if (result i32)
    (get_local $38)
    (i32.const 4)
    (i32.const 3)
   )
  )
  (set_local $14
   (i32.add
    (get_local $0)
    (i32.const 56)
   )
  )
  (set_local $6
   (i32.const 0)
  )
  (block $__rjto$8
   (block $__rjti$8
    (block $__rjti$7
     (block $__rjti$6
      (block $__rjti$5
       (loop $while-in13
        (block $while-out12
         (br_if $__rjti$8
          (i32.ge_s
           (get_local $1)
           (get_local $5)
          )
         )
         (br_if $__rjti$5
          (i32.le_s
           (tee_local $0
            (i32.load
             (tee_local $23
              (i32.add
               (get_local $15)
               (i32.shl
                (get_local $1)
                (i32.const 2)
               )
              )
             )
            )
           )
           (i32.const -1)
          )
         )
         (set_local $10
          (i32.add
           (get_local $0)
           (get_local $6)
          )
         )
         (if
          (i32.gt_s
           (tee_local $8
            (i32.shl
             (i32.sub
              (i32.load16_s
               (i32.add
                (tee_local $0
                 (i32.load
                  (get_local $34)
                 )
                )
                (i32.shl
                 (tee_local $4
                  (i32.add
                   (get_local $1)
                   (i32.const 1)
                  )
                 )
                 (i32.const 1)
                )
               )
              )
              (i32.load16_s
               (i32.add
                (get_local $0)
                (i32.shl
                 (get_local $1)
                 (i32.const 1)
                )
               )
              )
             )
             (get_local $19)
            )
           )
           (i32.const 1)
          )
          (block
           (set_local $3
            (i32.sub
             (get_local $10)
             (tee_local $0
              (i32.load
               (i32.add
                (get_local $7)
                (i32.shl
                 (get_local $1)
                 (i32.const 2)
                )
               )
              )
             )
            )
           )
           (i32.store
            (get_local $23)
            (tee_local $12
             (i32.sub
              (get_local $10)
              (if (result i32)
               (i32.gt_s
                (get_local $10)
                (get_local $0)
               )
               (get_local $3)
               (tee_local $3
                (i32.const 0)
               )
              )
             )
            )
           )
           (set_local $0
            (i32.add
             (i32.shr_s
              (tee_local $10
               (i32.mul
                (tee_local $22
                 (i32.add
                  (i32.mul
                   (get_local $8)
                   (get_local $18)
                  )
                  (i32.and
                   (tee_local $0
                    (if (result i32)
                     (i32.and
                      (get_local $21)
                      (i32.ne
                       (get_local $8)
                       (i32.const 2)
                      )
                     )
                     (if (result i32)
                      (i32.load
                       (get_local $13)
                      )
                      (i32.const 0)
                      (i32.lt_s
                       (get_local $1)
                       (i32.load
                        (get_local $11)
                       )
                      )
                     )
                     (i32.const 0)
                    )
                   )
                   (i32.const 1)
                  )
                 )
                )
                (i32.add
                 (get_local $33)
                 (i32.load16_s
                  (i32.add
                   (i32.load
                    (get_local $14)
                   )
                   (i32.shl
                    (get_local $1)
                    (i32.const 1)
                   )
                  )
                 )
                )
               )
              )
              (i32.const 1)
             )
             (i32.mul
              (get_local $22)
              (i32.const -21)
             )
            )
           )
           (if
            (i32.eq
             (get_local $8)
             (i32.const 2)
            )
            (set_local $0
             (i32.add
              (get_local $0)
              (i32.shr_s
               (i32.shl
                (get_local $22)
                (i32.const 3)
               )
               (i32.const 2)
              )
             )
            )
           )
           (set_local $0
            (i32.shr_u
             (call $_celt_udiv
              (if (result i32)
               (i32.gt_s
                (tee_local $0
                 (i32.add
                  (i32.add
                   (get_local $12)
                   (tee_local $8
                    (if (result i32)
                     (i32.lt_s
                      (tee_local $8
                       (i32.add
                        (get_local $12)
                        (get_local $0)
                       )
                      )
                      (i32.shl
                       (get_local $22)
                       (i32.const 4)
                      )
                     )
                     (i32.add
                      (get_local $0)
                      (i32.shr_s
                       (get_local $10)
                       (i32.const 2)
                      )
                     )
                     (if (result i32)
                      (i32.lt_s
                       (get_local $8)
                       (i32.mul
                        (get_local $22)
                        (i32.const 24)
                       )
                      )
                      (i32.add
                       (get_local $0)
                       (i32.shr_s
                        (get_local $10)
                        (i32.const 3)
                       )
                      )
                      (get_local $0)
                     )
                    )
                   )
                  )
                  (i32.shl
                   (get_local $22)
                   (i32.const 2)
                  )
                 )
                )
                (i32.const 0)
               )
               (get_local $0)
               (i32.const 0)
              )
              (get_local $22)
             )
             (i32.const 3)
            )
           )
           (i32.store
            (tee_local $12
             (i32.add
              (get_local $16)
              (i32.shl
               (get_local $1)
               (i32.const 2)
              )
             )
            )
            (get_local $0)
           )
           (if
            (i32.gt_s
             (i32.mul
              (get_local $0)
              (get_local $18)
             )
             (i32.shr_s
              (tee_local $10
               (i32.load
                (get_local $23)
               )
              )
              (i32.const 3)
             )
            )
            (i32.store
             (get_local $12)
             (tee_local $0
              (i32.shr_s
               (i32.shr_s
                (get_local $10)
                (get_local $36)
               )
               (i32.const 3)
              )
             )
            )
           )
           (i32.store
            (get_local $12)
            (if (result i32)
             (i32.lt_s
              (get_local $0)
              (i32.const 8)
             )
             (get_local $0)
             (tee_local $0
              (i32.const 8)
             )
            )
           )
           (i32.store
            (i32.add
             (get_local $17)
             (i32.shl
              (get_local $1)
              (i32.const 2)
             )
            )
            (i32.ge_s
             (i32.mul
              (get_local $0)
              (i32.shl
               (get_local $22)
               (i32.const 3)
              )
             )
             (i32.add
              (i32.load
               (get_local $23)
              )
              (get_local $8)
             )
            )
           )
           (i32.store
            (get_local $23)
            (i32.sub
             (i32.load
              (get_local $23)
             )
             (i32.shl
              (i32.mul
               (i32.load
                (get_local $12)
               )
               (get_local $18)
              )
              (i32.const 3)
             )
            )
           )
           (set_local $0
            (get_local $3)
           )
          )
          (block
           (set_local $0
            (i32.sub
             (get_local $10)
             (get_local $30)
            )
           )
           (i32.store
            (get_local $23)
            (i32.sub
             (get_local $10)
             (if (result i32)
              (i32.lt_s
               (get_local $10)
               (get_local $30)
              )
              (tee_local $0
               (i32.const 0)
              )
              (get_local $0)
             )
            )
           )
           (i32.store
            (i32.add
             (get_local $16)
             (i32.shl
              (get_local $1)
              (i32.const 2)
             )
            )
            (i32.const 0)
           )
           (i32.store
            (i32.add
             (get_local $17)
             (i32.shl
              (get_local $1)
              (i32.const 2)
             )
            )
            (i32.const 1)
           )
          )
         )
         (if
          (get_local $0)
          (block
           (if
            (i32.ge_s
             (tee_local $3
              (i32.shr_u
               (get_local $0)
               (get_local $20)
              )
             )
             (tee_local $8
              (i32.sub
               (i32.const 8)
               (tee_local $10
                (i32.load
                 (tee_local $12
                  (i32.add
                   (get_local $16)
                   (i32.shl
                    (get_local $1)
                    (i32.const 2)
                   )
                  )
                 )
                )
               )
              )
             )
            )
            (set_local $3
             (get_local $8)
            )
           )
           (i32.store
            (get_local $12)
            (i32.add
             (get_local $10)
             (get_local $3)
            )
           )
           (i32.store
            (i32.add
             (get_local $17)
             (i32.shl
              (get_local $1)
              (i32.const 2)
             )
            )
            (i32.ge_s
             (tee_local $3
              (i32.shl
               (i32.mul
                (get_local $3)
                (get_local $18)
               )
               (i32.const 3)
              )
             )
             (i32.sub
              (get_local $0)
              (get_local $6)
             )
            )
           )
           (set_local $0
            (i32.sub
             (get_local $0)
             (get_local $3)
            )
           )
          )
         )
         (br_if $__rjti$6
          (i32.le_s
           (i32.load
            (get_local $23)
           )
           (i32.const -1)
          )
         )
         (br_if $__rjti$7
          (i32.le_s
           (i32.load
            (i32.add
             (get_local $16)
             (i32.shl
              (get_local $1)
              (i32.const 2)
             )
            )
           )
           (i32.const -1)
          )
         )
         (set_local $6
          (get_local $0)
         )
         (set_local $1
          (get_local $4)
         )
         (br $while-in13)
        )
       )
      )
      (call $_celt_fatal
       (i32.const 43454)
       (i32.const 43442)
       (i32.const 442)
      )
      (br $__rjto$8)
     )
     (call $_celt_fatal
      (i32.const 43454)
      (i32.const 43442)
      (i32.const 513)
     )
     (br $__rjto$8)
    )
    (call $_celt_fatal
     (i32.const 43485)
     (i32.const 43442)
     (i32.const 514)
    )
    (br $__rjto$8)
   )
   (i32.store
    (get_local $9)
    (get_local $6)
   )
   (block $__rjto$1
    (block $__rjti$1
     (loop $while-in15
      (block $while-out14
       (br_if $__rjti$1
        (i32.ge_s
         (get_local $1)
         (get_local $2)
        )
       )
       (i32.store
        (tee_local $3
         (i32.add
          (get_local $16)
          (i32.shl
           (get_local $1)
           (i32.const 2)
          )
         )
        )
        (tee_local $0
         (i32.shr_s
          (i32.shr_s
           (i32.load
            (tee_local $4
             (i32.add
              (get_local $15)
              (i32.shl
               (get_local $1)
               (i32.const 2)
              )
             )
            )
           )
           (get_local $36)
          )
          (i32.const 3)
         )
        )
       )
       (if
        (i32.eq
         (i32.shl
          (i32.mul
           (get_local $0)
           (get_local $18)
          )
          (i32.const 3)
         )
         (i32.load
          (get_local $4)
         )
        )
        (block
         (i32.store
          (get_local $4)
          (i32.const 0)
         )
         (i32.store
          (i32.add
           (get_local $17)
           (i32.shl
            (get_local $1)
            (i32.const 2)
           )
          )
          (i32.lt_s
           (i32.load
            (get_local $3)
           )
           (i32.const 1)
          )
         )
         (set_local $1
          (i32.add
           (get_local $1)
           (i32.const 1)
          )
         )
         (br $while-in15)
        )
       )
      )
     )
     (call $_celt_fatal
      (i32.const 43517)
      (i32.const 43442)
      (i32.const 524)
     )
     (br $__rjto$1)
    )
    (return
     (get_local $5)
    )
   )
  )
  (i32.const 0)
 )
 (func $_exp_rotation (; 164 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32)
  (local $6 f32)
  (local $7 f32)
  (local $8 i32)
  (local $9 i32)
  (local $10 f32)
  (local $11 f32)
  (if
   (i32.or
    (i32.ge_s
     (i32.shl
      (get_local $4)
      (i32.const 1)
     )
     (get_local $1)
    )
    (i32.eqz
     (get_local $5)
    )
   )
   (return)
  )
  (set_local $6
   (f32.demote/f64
    (call $_llvm_cos_f64
     (f64.promote/f32
      (f32.mul
       (tee_local $7
        (f32.mul
         (f32.mul
          (tee_local $6
           (f32.div
            (f32.convert_s/i32
             (get_local $1)
            )
            (f32.convert_s/i32
             (i32.add
              (i32.mul
               (i32.load
                (i32.add
                 (i32.shl
                  (get_local $5)
                  (i32.const 2)
                 )
                 (i32.const 40792)
                )
               )
               (get_local $4)
              )
              (get_local $1)
             )
            )
           )
          )
          (get_local $6)
         )
         (f32.const 0.5)
        )
       )
       (f32.const 1.5707963705062866)
      )
     )
    )
   )
  )
  (set_local $7
   (f32.demote/f64
    (call $_llvm_cos_f64
     (f64.promote/f32
      (f32.mul
       (f32.sub
        (f32.const 1)
        (get_local $7)
       )
       (f32.const 1.5707963705062866)
      )
     )
    )
   )
  )
  (if
   (i32.gt_s
    (i32.shl
     (get_local $3)
     (i32.const 3)
    )
    (get_local $1)
   )
   (set_local $4
    (i32.const 0)
   )
   (block
    (set_local $5
     (i32.shr_s
      (get_local $3)
      (i32.const 2)
     )
    )
    (set_local $4
     (i32.const 1)
    )
    (loop $while-in
     (if
      (i32.lt_s
       (i32.add
        (i32.mul
         (i32.add
          (i32.mul
           (get_local $4)
           (get_local $4)
          )
          (get_local $4)
         )
         (get_local $3)
        )
        (get_local $5)
       )
       (get_local $1)
      )
      (block
       (set_local $4
        (i32.add
         (get_local $4)
         (i32.const 1)
        )
       )
       (br $while-in)
      )
     )
    )
   )
  )
  (set_local $1
   (call $_celt_udiv
    (get_local $1)
    (get_local $3)
   )
  )
  (set_local $9
   (i32.lt_s
    (get_local $2)
    (i32.const 0)
   )
  )
  (set_local $8
   (i32.eqz
    (get_local $4)
   )
  )
  (set_local $10
   (f32.neg
    (get_local $7)
   )
  )
  (set_local $11
   (f32.neg
    (get_local $6)
   )
  )
  (set_local $2
   (i32.const 0)
  )
  (loop $while-in1
   (if
    (i32.lt_s
     (get_local $2)
     (get_local $3)
    )
    (block
     (set_local $5
      (i32.add
       (get_local $0)
       (i32.shl
        (i32.mul
         (get_local $2)
         (get_local $1)
        )
        (i32.const 2)
       )
      )
     )
     (if
      (get_local $9)
      (block
       (if
        (i32.eqz
         (get_local $8)
        )
        (call $_exp_rotation1
         (get_local $5)
         (get_local $1)
         (get_local $4)
         (get_local $7)
         (get_local $6)
        )
       )
       (call $_exp_rotation1
        (get_local $5)
        (get_local $1)
        (i32.const 1)
        (get_local $6)
        (get_local $7)
       )
      )
      (block
       (call $_exp_rotation1
        (get_local $5)
        (get_local $1)
        (i32.const 1)
        (get_local $6)
        (get_local $10)
       )
       (if
        (i32.eqz
         (get_local $8)
        )
        (call $_exp_rotation1
         (get_local $5)
         (get_local $1)
         (get_local $4)
         (get_local $7)
         (get_local $11)
        )
       )
      )
     )
     (set_local $2
      (i32.add
       (get_local $2)
       (i32.const 1)
      )
     )
     (br $while-in1)
    )
   )
  )
 )
 (func $_exp_rotation1 (; 165 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 f32) (param $4 f32)
  (local $5 i32)
  (local $6 f32)
  (local $7 i32)
  (local $8 f32)
  (local $9 f32)
  (local $10 i32)
  (local $11 i32)
  (set_local $9
   (f32.neg
    (get_local $4)
   )
  )
  (set_local $10
   (i32.sub
    (get_local $1)
    (get_local $2)
   )
  )
  (set_local $5
   (get_local $0)
  )
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $7)
     (get_local $10)
    )
    (block
     (set_local $6
      (f32.load
       (tee_local $11
        (i32.add
         (get_local $5)
         (i32.shl
          (get_local $2)
          (i32.const 2)
         )
        )
       )
      )
     )
     (f32.store
      (get_local $11)
      (f32.add
       (f32.mul
        (get_local $6)
        (get_local $3)
       )
       (f32.mul
        (tee_local $8
         (f32.load
          (get_local $5)
         )
        )
        (get_local $4)
       )
      )
     )
     (f32.store
      (get_local $5)
      (f32.add
       (f32.mul
        (get_local $8)
        (get_local $3)
       )
       (f32.mul
        (get_local $6)
        (get_local $9)
       )
      )
     )
     (set_local $5
      (i32.add
       (get_local $5)
       (i32.const 4)
      )
     )
     (set_local $7
      (i32.add
       (get_local $7)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (set_local $1
   (i32.add
    (get_local $0)
    (i32.shl
     (i32.add
      (tee_local $0
       (i32.sub
        (get_local $1)
        (i32.shl
         (get_local $2)
         (i32.const 1)
        )
       )
      )
      (i32.const -1)
     )
     (i32.const 2)
    )
   )
  )
  (loop $while-in1
   (if
    (i32.gt_s
     (get_local $0)
     (i32.const 0)
    )
    (block
     (set_local $6
      (f32.load
       (tee_local $5
        (i32.add
         (get_local $1)
         (i32.shl
          (get_local $2)
          (i32.const 2)
         )
        )
       )
      )
     )
     (f32.store
      (get_local $5)
      (f32.add
       (f32.mul
        (get_local $6)
        (get_local $3)
       )
       (f32.mul
        (tee_local $8
         (f32.load
          (get_local $1)
         )
        )
        (get_local $4)
       )
      )
     )
     (f32.store
      (get_local $1)
      (f32.add
       (f32.mul
        (get_local $8)
        (get_local $3)
       )
       (f32.mul
        (get_local $6)
        (get_local $9)
       )
      )
     )
     (set_local $1
      (i32.add
       (get_local $1)
       (i32.const -4)
      )
     )
     (set_local $0
      (i32.add
       (get_local $0)
       (i32.const -1)
      )
     )
     (br $while-in1)
    )
   )
  )
 )
 (func $_op_pvq_search_c (; 166 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result f32)
  (local $4 f32)
  (local $5 i32)
  (local $6 f32)
  (local $7 f32)
  (local $8 i32)
  (local $9 i32)
  (local $10 f32)
  (local $11 i32)
  (local $12 i32)
  (local $13 f32)
  (local $14 i32)
  (local $15 i32)
  (local $16 f32)
  (set_local $15
   (get_global $STACKTOP)
  )
  (set_local $8
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (get_local $3)
       (i32.const 2)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (set_local $12
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (get_local $3)
       (i32.const 2)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (loop $while-in
   (i32.store
    (i32.add
     (get_local $12)
     (i32.shl
      (get_local $5)
      (i32.const 2)
     )
    )
    (f32.lt
     (tee_local $4
      (f32.load
       (tee_local $9
        (i32.add
         (get_local $0)
         (i32.shl
          (get_local $5)
          (i32.const 2)
         )
        )
       )
      )
     )
     (f32.const 0)
    )
   )
   (f32.store
    (get_local $9)
    (f32.abs
     (get_local $4)
    )
   )
   (i32.store
    (i32.add
     (get_local $1)
     (i32.shl
      (get_local $5)
      (i32.const 2)
     )
    )
    (i32.const 0)
   )
   (f32.store
    (i32.add
     (get_local $8)
     (i32.shl
      (get_local $5)
      (i32.const 2)
     )
    )
    (f32.const 0)
   )
   (br_if $while-in
    (i32.lt_s
     (tee_local $5
      (i32.add
       (get_local $5)
       (i32.const 1)
      )
     )
     (get_local $3)
    )
   )
  )
  (if
   (i32.lt_s
    (i32.shr_s
     (get_local $3)
     (i32.const 1)
    )
    (get_local $2)
   )
   (block
    (set_local $4
     (f32.const 0)
    )
    (set_local $5
     (i32.const 0)
    )
    (loop $while-in1
     (set_local $4
      (f32.add
       (get_local $4)
       (f32.load
        (i32.add
         (get_local $0)
         (i32.shl
          (get_local $5)
          (i32.const 2)
         )
        )
       )
      )
     )
     (br_if $while-in1
      (i32.lt_s
       (tee_local $5
        (i32.add
         (get_local $5)
         (i32.const 1)
        )
       )
       (get_local $3)
      )
     )
    )
    (if
     (i32.eqz
      (i32.and
       (f32.gt
        (get_local $4)
        (f32.const 1.0000000036274937e-15)
       )
       (f32.lt
        (get_local $4)
        (f32.const 64)
       )
      )
     )
     (block
      (f32.store
       (get_local $0)
       (f32.const 1)
      )
      (set_local $5
       (i32.const 1)
      )
      (loop $while-in3
       (f32.store
        (i32.add
         (get_local $0)
         (i32.shl
          (get_local $5)
          (i32.const 2)
         )
        )
        (f32.const 0)
       )
       (br_if $while-in3
        (i32.lt_s
         (tee_local $5
          (i32.add
           (get_local $5)
           (i32.const 1)
          )
         )
         (get_local $3)
        )
       )
      )
      (set_local $4
       (f32.const 1)
      )
     )
    )
    (set_local $10
     (f32.mul
      (f32.add
       (f32.convert_s/i32
        (get_local $2)
       )
       (f32.const 0.800000011920929)
      )
      (f32.div
       (f32.const 1)
       (get_local $4)
      )
     )
    )
    (set_local $4
     (f32.const 0)
    )
    (set_local $5
     (i32.const 0)
    )
    (loop $while-in5
     (i32.store
      (i32.add
       (get_local $1)
       (i32.shl
        (get_local $5)
        (i32.const 2)
       )
      )
      (tee_local $9
       (i32.trunc_s/f32
        (f32.floor
         (f32.mul
          (get_local $10)
          (f32.load
           (tee_local $11
            (i32.add
             (get_local $0)
             (i32.shl
              (get_local $5)
              (i32.const 2)
             )
            )
           )
          )
         )
        )
       )
      )
     )
     (set_local $4
      (f32.add
       (get_local $4)
       (f32.mul
        (tee_local $7
         (f32.convert_s/i32
          (get_local $9)
         )
        )
        (get_local $7)
       )
      )
     )
     (set_local $6
      (f32.add
       (get_local $6)
       (f32.mul
        (f32.load
         (get_local $11)
        )
        (get_local $7)
       )
      )
     )
     (f32.store
      (i32.add
       (get_local $8)
       (i32.shl
        (get_local $5)
        (i32.const 2)
       )
      )
      (f32.mul
       (get_local $7)
       (f32.const 2)
      )
     )
     (set_local $2
      (i32.sub
       (get_local $2)
       (get_local $9)
      )
     )
     (br_if $while-in5
      (i32.lt_s
       (tee_local $5
        (i32.add
         (get_local $5)
         (i32.const 1)
        )
       )
       (get_local $3)
      )
     )
    )
   )
   (set_local $4
    (f32.const 0)
   )
  )
  (set_local $9
   (if (result i32)
    (i32.gt_s
     (get_local $2)
     (i32.add
      (get_local $3)
      (i32.const 3)
     )
    )
    (block (result i32)
     (set_local $4
      (f32.add
       (f32.add
        (get_local $4)
        (f32.mul
         (tee_local $4
          (f32.convert_s/i32
           (get_local $2)
          )
         )
         (get_local $4)
        )
       )
       (f32.mul
        (f32.load
         (get_local $8)
        )
        (get_local $4)
       )
      )
     )
     (i32.store
      (get_local $1)
      (i32.add
       (i32.load
        (get_local $1)
       )
       (get_local $2)
      )
     )
     (i32.const 0)
    )
    (get_local $2)
   )
  )
  (set_local $11
   (i32.const 0)
  )
  (set_local $7
   (get_local $6)
  )
  (loop $while-in7
   (if
    (i32.lt_s
     (get_local $11)
     (get_local $9)
    )
    (block
     (set_local $6
      (f32.add
       (tee_local $13
        (f32.add
         (get_local $4)
         (f32.const 1)
        )
       )
       (f32.load
        (get_local $8)
       )
      )
     )
     (set_local $4
      (f32.mul
       (tee_local $4
        (f32.add
         (get_local $7)
         (f32.load
          (get_local $0)
         )
        )
       )
       (get_local $4)
      )
     )
     (set_local $5
      (i32.const 0)
     )
     (set_local $2
      (i32.const 1)
     )
     (loop $while-in9
      (if
       (tee_local $14
        (f32.gt
         (f32.mul
          (get_local $6)
          (tee_local $10
           (f32.mul
            (tee_local $10
             (f32.add
              (get_local $7)
              (f32.load
               (i32.add
                (get_local $0)
                (i32.shl
                 (get_local $2)
                 (i32.const 2)
                )
               )
              )
             )
            )
            (get_local $10)
           )
          )
         )
         (f32.mul
          (tee_local $16
           (f32.add
            (get_local $13)
            (f32.load
             (i32.add
              (get_local $8)
              (i32.shl
               (get_local $2)
               (i32.const 2)
              )
             )
            )
           )
          )
          (get_local $4)
         )
        )
       )
       (set_local $5
        (get_local $2)
       )
      )
      (if
       (get_local $14)
       (set_local $4
        (get_local $10)
       )
      )
      (if
       (get_local $14)
       (set_local $6
        (get_local $16)
       )
      )
      (br_if $while-in9
       (i32.lt_s
        (tee_local $2
         (i32.add
          (get_local $2)
          (i32.const 1)
         )
        )
        (get_local $3)
       )
      )
     )
     (set_local $6
      (f32.load
       (i32.add
        (get_local $0)
        (i32.shl
         (get_local $5)
         (i32.const 2)
        )
       )
      )
     )
     (set_local $4
      (f32.load
       (tee_local $2
        (i32.add
         (get_local $8)
         (i32.shl
          (get_local $5)
          (i32.const 2)
         )
        )
       )
      )
     )
     (f32.store
      (get_local $2)
      (f32.add
       (get_local $4)
       (f32.const 2)
      )
     )
     (i32.store
      (tee_local $2
       (i32.add
        (get_local $1)
        (i32.shl
         (get_local $5)
         (i32.const 2)
        )
       )
      )
      (i32.add
       (i32.load
        (get_local $2)
       )
       (i32.const 1)
      )
     )
     (set_local $11
      (i32.add
       (get_local $11)
       (i32.const 1)
      )
     )
     (set_local $7
      (f32.add
       (get_local $7)
       (get_local $6)
      )
     )
     (set_local $4
      (f32.add
       (get_local $13)
       (get_local $4)
      )
     )
     (br $while-in7)
    )
   )
  )
  (set_local $0
   (i32.const 0)
  )
  (loop $while-in11
   (i32.store
    (tee_local $2
     (i32.add
      (get_local $1)
      (i32.shl
       (get_local $0)
       (i32.const 2)
      )
     )
    )
    (i32.add
     (i32.xor
      (i32.load
       (get_local $2)
      )
      (i32.sub
       (i32.const 0)
       (tee_local $2
        (i32.load
         (i32.add
          (get_local $12)
          (i32.shl
           (get_local $0)
           (i32.const 2)
          )
         )
        )
       )
      )
     )
     (get_local $2)
    )
   )
   (br_if $while-in11
    (i32.lt_s
     (tee_local $0
      (i32.add
       (get_local $0)
       (i32.const 1)
      )
     )
     (get_local $3)
    )
   )
  )
  (set_global $STACKTOP
   (get_local $15)
  )
  (get_local $4)
 )
 (func $_alg_quant (; 167 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 f32) (param $7 i32) (result i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 f32)
  (set_local $9
   (get_global $STACKTOP)
  )
  (if
   (i32.le_s
    (get_local $2)
    (i32.const 0)
   )
   (call $_celt_fatal
    (i32.const 43565)
    (i32.const 43624)
    (i32.const 334)
   )
  )
  (if
   (i32.le_s
    (get_local $1)
    (i32.const 1)
   )
   (call $_celt_fatal
    (i32.const 43634)
    (i32.const 43624)
    (i32.const 335)
   )
  )
  (set_local $8
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (get_local $1)
       (i32.const 2)
      )
      (i32.const 27)
     )
     (i32.const -16)
    )
   )
  )
  (call $_exp_rotation
   (get_local $0)
   (get_local $1)
   (i32.const 1)
   (get_local $4)
   (get_local $2)
   (get_local $3)
  )
  (set_local $10
   (call $_op_pvq_search_c
    (get_local $0)
    (get_local $8)
    (get_local $2)
    (get_local $1)
   )
  )
  (call $_encode_pulses
   (get_local $8)
   (get_local $1)
   (get_local $2)
   (get_local $5)
  )
  (if
   (i32.eqz
    (get_local $7)
   )
   (block
    (set_local $0
     (call $_extract_collapse_mask
      (get_local $8)
      (get_local $1)
      (get_local $4)
     )
    )
    (set_global $STACKTOP
     (get_local $9)
    )
    (return
     (get_local $0)
    )
   )
  )
  (call $_normalise_residual
   (get_local $8)
   (get_local $0)
   (get_local $1)
   (get_local $10)
   (get_local $6)
  )
  (call $_exp_rotation
   (get_local $0)
   (get_local $1)
   (i32.const -1)
   (get_local $4)
   (get_local $2)
   (get_local $3)
  )
  (set_local $0
   (call $_extract_collapse_mask
    (get_local $8)
    (get_local $1)
    (get_local $4)
   )
  )
  (set_global $STACKTOP
   (get_local $9)
  )
  (get_local $0)
 )
 (func $_normalise_residual (; 168 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 f32) (param $4 f32)
  (local $5 i32)
  (set_local $3
   (f32.mul
    (f32.div
     (f32.const 1)
     (f32.sqrt
      (get_local $3)
     )
    )
    (get_local $4)
   )
  )
  (loop $while-in
   (f32.store
    (i32.add
     (get_local $1)
     (i32.shl
      (get_local $5)
      (i32.const 2)
     )
    )
    (f32.mul
     (get_local $3)
     (f32.convert_s/i32
      (i32.load
       (i32.add
        (get_local $0)
        (i32.shl
         (get_local $5)
         (i32.const 2)
        )
       )
      )
     )
    )
   )
   (br_if $while-in
    (i32.lt_s
     (tee_local $5
      (i32.add
       (get_local $5)
       (i32.const 1)
      )
     )
     (get_local $2)
    )
   )
  )
 )
 (func $_extract_collapse_mask (; 169 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (if
   (i32.lt_s
    (get_local $2)
    (i32.const 2)
   )
   (return
    (i32.const 1)
   )
  )
  (set_local $5
   (call $_celt_udiv
    (get_local $1)
    (get_local $2)
   )
  )
  (loop $while-in
   (set_local $7
    (i32.mul
     (get_local $3)
     (get_local $5)
    )
   )
   (set_local $4
    (i32.const 0)
   )
   (set_local $1
    (i32.const 0)
   )
   (loop $while-in1
    (set_local $4
     (i32.or
      (get_local $4)
      (i32.load
       (i32.add
        (get_local $0)
        (i32.shl
         (i32.add
          (get_local $7)
          (get_local $1)
         )
         (i32.const 2)
        )
       )
      )
     )
    )
    (br_if $while-in1
     (i32.lt_s
      (tee_local $1
       (i32.add
        (get_local $1)
        (i32.const 1)
       )
      )
      (get_local $5)
     )
    )
   )
   (set_local $1
    (i32.or
     (get_local $6)
     (i32.shl
      (i32.ne
       (get_local $4)
       (i32.const 0)
      )
      (get_local $3)
     )
    )
   )
   (if
    (i32.ne
     (tee_local $3
      (i32.add
       (get_local $3)
       (i32.const 1)
      )
     )
     (get_local $2)
    )
    (block
     (set_local $6
      (get_local $1)
     )
     (br $while-in)
    )
   )
  )
  (get_local $1)
 )
 (func $_alg_unquant (; 170 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 f32) (result i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 f32)
  (set_local $8
   (get_global $STACKTOP)
  )
  (if
   (i32.le_s
    (get_local $2)
    (i32.const 0)
   )
   (call $_celt_fatal
    (i32.const 43698)
    (i32.const 43624)
    (i32.const 367)
   )
  )
  (if
   (i32.gt_s
    (get_local $1)
    (i32.const 1)
   )
   (block
    (set_local $7
     (get_global $STACKTOP)
    )
    (set_global $STACKTOP
     (i32.add
      (get_global $STACKTOP)
      (i32.and
       (i32.add
        (i32.shl
         (get_local $1)
         (i32.const 2)
        )
        (i32.const 15)
       )
       (i32.const -16)
      )
     )
    )
    (set_local $9
     (call $_decode_pulses
      (get_local $7)
      (get_local $1)
      (get_local $2)
      (get_local $5)
     )
    )
    (call $_normalise_residual
     (get_local $7)
     (get_local $0)
     (get_local $1)
     (get_local $9)
     (get_local $6)
    )
    (call $_exp_rotation
     (get_local $0)
     (get_local $1)
     (i32.const -1)
     (get_local $4)
     (get_local $2)
     (get_local $3)
    )
    (set_local $0
     (call $_extract_collapse_mask
      (get_local $7)
      (get_local $1)
      (get_local $4)
     )
    )
    (set_global $STACKTOP
     (get_local $8)
    )
    (return
     (get_local $0)
    )
   )
   (call $_celt_fatal
    (i32.const 43759)
    (i32.const 43624)
    (i32.const 368)
   )
  )
  (i32.const 0)
 )
 (func $_renormalise_vector (; 171 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 f32)
  (local $3 i32)
  (set_local $2
   (f32.mul
    (f32.div
     (f32.const 1)
     (f32.sqrt
      (f32.add
       (call $_celt_inner_prod_c
        (get_local $0)
        (get_local $0)
        (get_local $1)
       )
       (f32.const 1.0000000036274937e-15)
      )
     )
    )
    (get_local $2)
   )
  )
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $3)
     (get_local $1)
    )
    (block
     (f32.store
      (get_local $0)
      (f32.mul
       (get_local $2)
       (f32.load
        (get_local $0)
       )
      )
     )
     (set_local $0
      (i32.add
       (get_local $0)
       (i32.const 4)
      )
     )
     (set_local $3
      (i32.add
       (get_local $3)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
 )
 (func $_stereo_itheta (; 172 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 f32)
  (local $5 f32)
  (local $6 f32)
  (local $7 f32)
  (local $8 f32)
  (if
   (get_local $2)
   (block
    (set_local $4
     (f32.const 1.0000000036274937e-15)
    )
    (set_local $5
     (f32.const 1.0000000036274937e-15)
    )
    (set_local $2
     (i32.const 0)
    )
    (loop $while-in
     (if
      (i32.lt_s
       (get_local $2)
       (get_local $3)
      )
      (block
       (set_local $6
        (f32.add
         (tee_local $7
          (f32.load
           (i32.add
            (get_local $0)
            (i32.shl
             (get_local $2)
             (i32.const 2)
            )
           )
          )
         )
         (tee_local $8
          (f32.load
           (i32.add
            (get_local $1)
            (i32.shl
             (get_local $2)
             (i32.const 2)
            )
           )
          )
         )
        )
       )
       (set_local $4
        (f32.add
         (get_local $4)
         (f32.mul
          (tee_local $4
           (f32.sub
            (get_local $7)
            (get_local $8)
           )
          )
          (get_local $4)
         )
        )
       )
       (set_local $5
        (f32.add
         (get_local $5)
         (f32.mul
          (get_local $6)
          (get_local $6)
         )
        )
       )
       (set_local $2
        (i32.add
         (get_local $2)
         (i32.const 1)
        )
       )
       (br $while-in)
      )
     )
    )
   )
   (block
    (set_local $5
     (f32.add
      (call $_celt_inner_prod_c
       (get_local $0)
       (get_local $0)
       (get_local $3)
      )
      (f32.const 1.0000000036274937e-15)
     )
    )
    (set_local $4
     (f32.add
      (call $_celt_inner_prod_c
       (get_local $1)
       (get_local $1)
       (get_local $3)
      )
      (f32.const 1.0000000036274937e-15)
     )
    )
   )
  )
  (i32.trunc_s/f32
   (f32.floor
    (f32.add
     (f32.mul
      (call $_fast_atan2f
       (f32.sqrt
        (get_local $4)
       )
       (f32.sqrt
        (get_local $5)
       )
      )
      (f32.const 10430.3818359375)
     )
     (f32.const 0.5)
    )
   )
  )
 )
 (func $_fast_atan2f (; 173 ;) (; has Stack IR ;) (param $0 f32) (param $1 f32) (result f32)
  (local $2 f32)
  (local $3 f32)
  (if
   (f32.lt
    (f32.add
     (tee_local $2
      (f32.mul
       (get_local $1)
       (get_local $1)
      )
     )
     (tee_local $3
      (f32.mul
       (get_local $0)
       (get_local $0)
      )
     )
    )
    (f32.const 1.000000045813705e-18)
   )
   (return
    (f32.const 0)
   )
  )
  (if (result f32)
   (f32.lt
    (get_local $2)
    (get_local $3)
   )
   (f32.add
    (f32.div
     (f32.neg
      (f32.mul
       (f32.mul
        (get_local $1)
        (get_local $0)
       )
       (f32.add
        (get_local $3)
        (f32.mul
         (get_local $2)
         (f32.const 0.43157973885536194)
        )
       )
      )
     )
     (f32.mul
      (f32.add
       (get_local $3)
       (f32.mul
        (get_local $2)
        (f32.const 0.6784840226173401)
       )
      )
      (f32.add
       (get_local $3)
       (f32.mul
        (get_local $2)
        (f32.const 0.0859554186463356)
       )
      )
     )
    )
    (if (result f32)
     (f32.lt
      (get_local $0)
      (f32.const 0)
     )
     (f32.const -1.5707963705062866)
     (f32.const 1.5707963705062866)
    )
   )
   (f32.sub
    (f32.add
     (f32.div
      (f32.mul
       (tee_local $1
        (f32.mul
         (get_local $1)
         (get_local $0)
        )
       )
       (f32.add
        (get_local $2)
        (f32.mul
         (get_local $3)
         (f32.const 0.43157973885536194)
        )
       )
      )
      (f32.mul
       (f32.add
        (get_local $2)
        (f32.mul
         (get_local $3)
         (f32.const 0.6784840226173401)
        )
       )
       (f32.add
        (get_local $2)
        (f32.mul
         (get_local $3)
         (f32.const 0.0859554186463356)
        )
       )
      )
     )
     (if (result f32)
      (f32.lt
       (get_local $0)
       (f32.const 0)
      )
      (f32.const -1.5707963705062866)
      (f32.const 1.5707963705062866)
     )
    )
    (if (result f32)
     (f32.lt
      (get_local $1)
      (f32.const 0)
     )
     (f32.const -1.5707963705062866)
     (f32.const 1.5707963705062866)
    )
   )
  )
 )
 (func $_silk_CNG_Reset (; 174 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (set_local $4
   (i32.div_s
    (i32.const 32767)
    (i32.add
     (tee_local $3
      (i32.load
       (i32.add
        (get_local $0)
        (i32.const 2340)
       )
      )
     )
     (i32.const 1)
    )
   )
  )
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $1)
     (get_local $3)
    )
    (block
     (i32.store16
      (i32.add
       (i32.add
        (get_local $0)
        (i32.const 4052)
       )
       (i32.shl
        (get_local $1)
        (i32.const 1)
       )
      )
      (tee_local $2
       (i32.add
        (get_local $2)
        (get_local $4)
       )
      )
     )
     (set_local $1
      (i32.add
       (get_local $1)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (i32.store
   (i32.add
    (get_local $0)
    (i32.const 4148)
   )
   (i32.const 0)
  )
  (i32.store
   (i32.add
    (get_local $0)
    (i32.const 4152)
   )
   (i32.const 3176576)
  )
 )
 (func $_silk_CNG (; 175 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local $26 i32)
  (local $27 i32)
  (local $28 i32)
  (local $29 i32)
  (local $30 i32)
  (local $31 i32)
  (set_local $8
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.const 32)
   )
  )
  (if
   (i32.ne
    (i32.load
     (tee_local $4
      (i32.add
       (get_local $0)
       (i32.const 2316)
      )
     )
    )
    (i32.load
     (tee_local $5
      (i32.add
       (get_local $0)
       (i32.const 4156)
      )
     )
    )
   )
   (block
    (call $_silk_CNG_Reset
     (get_local $0)
    )
    (i32.store
     (get_local $5)
     (i32.load
      (get_local $4)
     )
    )
   )
  )
  (set_local $9
   (i32.add
    (get_local $0)
    (i32.const 2772)
   )
  )
  (block $do-once
   (if
    (i32.eqz
     (i32.load
      (tee_local $11
       (i32.add
        (get_local $0)
        (i32.const 4160)
       )
      )
     )
    )
    (block
     (if
      (i32.eqz
       (i32.load
        (i32.add
         (get_local $0)
         (i32.const 4164)
        )
       )
      )
      (block
       (set_local $6
        (i32.load
         (i32.add
          (get_local $0)
          (i32.const 2340)
         )
        )
       )
       (set_local $4
        (i32.const 0)
       )
       (loop $while-in
        (if
         (i32.lt_s
          (get_local $4)
          (get_local $6)
         )
         (block
          (set_local $5
           (i32.and
            (tee_local $10
             (i32.load16_s
              (tee_local $7
               (i32.add
                (i32.add
                 (get_local $0)
                 (i32.const 4052)
                )
                (i32.shl
                 (get_local $4)
                 (i32.const 1)
                )
               )
              )
             )
            )
            (i32.const 65535)
           )
          )
          (i32.store16
           (get_local $7)
           (i32.add
            (i32.add
             (i32.mul
              (i32.shr_s
               (i32.sub
                (tee_local $7
                 (i32.load16_s
                  (i32.add
                   (i32.add
                    (get_local $0)
                    (i32.const 2344)
                   )
                   (i32.shl
                    (get_local $4)
                    (i32.const 1)
                   )
                  )
                 )
                )
                (get_local $10)
               )
               (i32.const 16)
              )
              (i32.const 16348)
             )
             (i32.shr_u
              (i32.mul
               (i32.and
                (i32.sub
                 (i32.and
                  (get_local $7)
                  (i32.const 65535)
                 )
                 (get_local $5)
                )
                (i32.const 65535)
               )
               (i32.const 16348)
              )
              (i32.const 16)
             )
            )
            (get_local $5)
           )
          )
          (set_local $4
           (i32.add
            (get_local $4)
            (i32.const 1)
           )
          )
          (br $while-in)
         )
        )
       )
       (set_local $10
        (i32.load
         (tee_local $12
          (i32.add
           (get_local $0)
           (i32.const 2324)
          )
         )
        )
       )
       (set_local $5
        (i32.const 0)
       )
       (set_local $4
        (i32.const 0)
       )
       (set_local $7
        (i32.const 0)
       )
       (loop $while-in1
        (if
         (i32.lt_s
          (get_local $7)
          (get_local $10)
         )
         (block
          (if
           (tee_local $13
            (i32.gt_s
             (tee_local $6
              (i32.load
               (i32.add
                (i32.add
                 (get_local $1)
                 (i32.const 16)
                )
                (i32.shl
                 (get_local $7)
                 (i32.const 2)
                )
               )
              )
             )
             (get_local $5)
            )
           )
           (set_local $4
            (get_local $7)
           )
          )
          (if
           (get_local $13)
           (set_local $5
            (get_local $6)
           )
          )
          (set_local $7
           (i32.add
            (get_local $7)
            (i32.const 1)
           )
          )
          (br $while-in1)
         )
        )
       )
       (drop
        (call $_memmove
         (i32.add
          (i32.add
           (get_local $0)
           (i32.const 2772)
          )
          (i32.shl
           (tee_local $6
            (i32.load
             (tee_local $5
              (i32.add
               (get_local $0)
               (i32.const 2332)
              )
             )
            )
           )
           (i32.const 2)
          )
         )
         (get_local $9)
         (i32.shl
          (i32.mul
           (i32.add
            (get_local $10)
            (i32.const -1)
           )
           (get_local $6)
          )
          (i32.const 2)
         )
        )
       )
       (drop
        (call $_memcpy
         (get_local $9)
         (i32.add
          (i32.add
           (get_local $0)
           (i32.const 4)
          )
          (i32.shl
           (i32.mul
            (get_local $4)
            (tee_local $4
             (i32.load
              (get_local $5)
             )
            )
           )
           (i32.const 2)
          )
         )
         (i32.shl
          (get_local $4)
          (i32.const 2)
         )
        )
       )
       (set_local $5
        (i32.add
         (get_local $0)
         (i32.const 4148)
        )
       )
       (set_local $7
        (i32.load
         (get_local $12)
        )
       )
       (set_local $4
        (i32.const 0)
       )
       (loop $while-in3
        (if
         (i32.lt_s
          (get_local $4)
          (get_local $7)
         )
         (block
          (set_local $6
           (i32.sub
            (i32.load
             (i32.add
              (i32.add
               (get_local $1)
               (i32.const 16)
              )
              (i32.shl
               (get_local $4)
               (i32.const 2)
              )
             )
            )
            (tee_local $10
             (i32.load
              (get_local $5)
             )
            )
           )
          )
          (i32.store
           (get_local $5)
           (i32.add
            (get_local $10)
            (i32.add
             (i32.mul
              (i32.shr_s
               (get_local $6)
               (i32.const 16)
              )
              (i32.const 4634)
             )
             (i32.shr_u
              (i32.mul
               (i32.and
                (get_local $6)
                (i32.const 65535)
               )
               (i32.const 4634)
              )
              (i32.const 16)
             )
            )
           )
          )
          (set_local $4
           (i32.add
            (get_local $4)
            (i32.const 1)
           )
          )
          (br $while-in3)
         )
        )
       )
       (br_if $do-once
        (i32.load
         (get_local $11)
        )
       )
      )
     )
     (drop
      (call $_memset
       (i32.add
        (get_local $0)
        (i32.const 4084)
       )
       (i32.const 0)
       (i32.shl
        (i32.load
         (i32.add
          (get_local $0)
          (i32.const 2340)
         )
        )
        (i32.const 2)
       )
      )
     )
     (set_global $STACKTOP
      (get_local $8)
     )
     (return)
    )
   )
  )
  (set_local $1
   (i32.add
    (get_local $3)
    (i32.const 16)
   )
  )
  (set_local $29
   (call $_llvm_stacksave)
  )
  (set_local $4
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (get_local $1)
       (i32.const 2)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (set_local $6
   (i32.shr_s
    (tee_local $5
     (i32.add
      (i32.add
       (i32.mul
        (i32.shr_s
         (tee_local $5
          (tee_local $1
           (i32.load16_s
            (i32.add
             (get_local $0)
             (i32.const 4228)
            )
           )
          )
         )
         (i32.const 16)
        )
        (tee_local $7
         (i32.shr_s
          (i32.shl
           (tee_local $6
            (i32.load
             (i32.add
              (get_local $0)
              (i32.const 4248)
             )
            )
           )
           (i32.const 16)
          )
          (i32.const 16)
         )
        )
       )
       (i32.shr_s
        (i32.mul
         (get_local $7)
         (i32.and
          (get_local $1)
          (i32.const 65535)
         )
        )
        (i32.const 16)
       )
      )
      (i32.mul
       (i32.shr_s
        (i32.add
         (i32.shr_s
          (get_local $6)
          (i32.const 15)
         )
         (i32.const 1)
        )
        (i32.const 1)
       )
       (get_local $5)
      )
     )
    )
    (i32.const 16)
   )
  )
  (set_local $1
   (if (result i32)
    (i32.or
     (i32.gt_s
      (get_local $5)
      (i32.const 2097151)
     )
     (i32.gt_s
      (tee_local $1
       (i32.load
        (i32.add
         (get_local $0)
         (i32.const 4148)
        )
       )
      )
      (i32.const 8388608)
     )
    )
    (i32.shl
     (call $_silk_SQRT_APPROX
      (i32.sub
       (i32.mul
        (tee_local $1
         (i32.shr_s
          (get_local $1)
          (i32.const 16)
         )
        )
        (get_local $1)
       )
       (i32.shl
        (i32.mul
         (get_local $6)
         (get_local $6)
        )
        (i32.const 5)
       )
      )
     )
     (i32.const 16)
    )
    (i32.shl
     (call $_silk_SQRT_APPROX
      (i32.sub
       (i32.add
        (i32.add
         (i32.mul
          (i32.shr_s
           (get_local $1)
           (i32.const 16)
          )
          (tee_local $7
           (i32.shr_s
            (i32.shl
             (get_local $1)
             (i32.const 16)
            )
            (i32.const 16)
           )
          )
         )
         (i32.shr_s
          (i32.mul
           (i32.and
            (get_local $1)
            (i32.const 65535)
           )
           (get_local $7)
          )
          (i32.const 16)
         )
        )
        (i32.mul
         (get_local $1)
         (i32.shr_s
          (i32.add
           (i32.shr_s
            (get_local $1)
            (i32.const 15)
           )
           (i32.const 1)
          )
          (i32.const 1)
         )
        )
       )
       (i32.shl
        (i32.add
         (i32.add
          (i32.mul
           (get_local $6)
           (tee_local $1
            (i32.shr_s
             (i32.shl
              (get_local $5)
              (i32.const 16)
             )
             (i32.const 16)
            )
           )
          )
          (i32.shr_s
           (i32.mul
            (i32.and
             (get_local $5)
             (i32.const 65535)
            )
            (get_local $1)
           )
           (i32.const 16)
          )
         )
         (i32.mul
          (get_local $5)
          (i32.shr_s
           (i32.add
            (i32.shr_s
             (get_local $5)
             (i32.const 15)
            )
            (i32.const 1)
           )
           (i32.const 1)
          )
         )
        )
        (i32.const 5)
       )
      )
     )
     (i32.const 8)
    )
   )
  )
  (call $_silk_CNG_exc
   (i32.sub
    (get_local $4)
    (i32.const -64)
   )
   (get_local $9)
   (get_local $3)
   (i32.add
    (get_local $0)
    (i32.const 4152)
   )
  )
  (call $_silk_NLSF2A
   (get_local $8)
   (i32.add
    (get_local $0)
    (i32.const 4052)
   )
   (i32.load
    (tee_local $10
     (i32.add
      (get_local $0)
      (i32.const 2340)
     )
    )
   )
  )
  (i64.store align=4
   (get_local $4)
   (i64.load align=4
    (tee_local $6
     (i32.add
      (get_local $0)
      (i32.const 4084)
     )
    )
   )
  )
  (i64.store offset=8 align=4
   (get_local $4)
   (i64.load offset=8 align=4
    (get_local $6)
   )
  )
  (i64.store offset=16 align=4
   (get_local $4)
   (i64.load offset=16 align=4
    (get_local $6)
   )
  )
  (i64.store offset=24 align=4
   (get_local $4)
   (i64.load offset=24 align=4
    (get_local $6)
   )
  )
  (i64.store offset=32 align=4
   (get_local $4)
   (i64.load offset=32 align=4
    (get_local $6)
   )
  )
  (i64.store offset=40 align=4
   (get_local $4)
   (i64.load offset=40 align=4
    (get_local $6)
   )
  )
  (i64.store offset=48 align=4
   (get_local $4)
   (i64.load offset=48 align=4
    (get_local $6)
   )
  )
  (i64.store offset=56 align=4
   (get_local $4)
   (i64.load offset=56 align=4
    (get_local $6)
   )
  )
  (block $switch
   (block $switch-default
    (block $switch-case
     (br_table $switch-case $switch-default $switch-default $switch-default $switch-default $switch-default $switch-case $switch-default
      (i32.sub
       (i32.load
        (get_local $10)
       )
       (i32.const 10)
      )
     )
    )
    (br $switch)
   )
   (call $_celt_fatal
    (i32.const 43855)
    (i32.const 43825)
    (i32.const 149)
   )
  )
  (set_local $11
   (i32.load16_s
    (get_local $8)
   )
  )
  (set_local $12
   (i32.load16_s offset=2
    (get_local $8)
   )
  )
  (set_local $13
   (i32.load16_s offset=4
    (get_local $8)
   )
  )
  (set_local $15
   (i32.load16_s offset=6
    (get_local $8)
   )
  )
  (set_local $16
   (i32.load16_s offset=8
    (get_local $8)
   )
  )
  (set_local $17
   (i32.load16_s offset=10
    (get_local $8)
   )
  )
  (set_local $18
   (i32.load16_s offset=12
    (get_local $8)
   )
  )
  (set_local $19
   (i32.load16_s offset=14
    (get_local $8)
   )
  )
  (set_local $20
   (i32.load16_s offset=16
    (get_local $8)
   )
  )
  (set_local $21
   (i32.load16_s offset=18
    (get_local $8)
   )
  )
  (set_local $22
   (i32.load16_s offset=20
    (get_local $8)
   )
  )
  (set_local $23
   (i32.load16_s offset=22
    (get_local $8)
   )
  )
  (set_local $24
   (i32.load16_s offset=24
    (get_local $8)
   )
  )
  (set_local $25
   (i32.load16_s offset=26
    (get_local $8)
   )
  )
  (set_local $26
   (i32.load16_s offset=28
    (get_local $8)
   )
  )
  (set_local $27
   (i32.load16_s offset=30
    (get_local $8)
   )
  )
  (set_local $28
   (i32.shr_s
    (i32.shl
     (get_local $1)
     (i32.const 10)
    )
    (i32.const 16)
   )
  )
  (set_local $30
   (i32.shr_s
    (i32.add
     (i32.shr_s
      (get_local $1)
      (i32.const 21)
     )
     (i32.const 1)
    )
    (i32.const 1)
   )
  )
  (set_local $5
   (i32.const 0)
  )
  (loop $while-in6
   (if
    (i32.lt_s
     (get_local $5)
     (get_local $3)
    )
    (block
     (set_local $0
      (i32.add
       (i32.add
        (i32.add
         (i32.add
          (i32.add
           (i32.add
            (i32.add
             (i32.add
              (i32.add
               (i32.add
                (i32.shr_s
                 (i32.load
                  (get_local $10)
                 )
                 (i32.const 1)
                )
                (i32.add
                 (i32.mul
                  (i32.shr_s
                   (tee_local $0
                    (i32.load
                     (i32.add
                      (get_local $4)
                      (i32.shl
                       (i32.add
                        (get_local $5)
                        (i32.const 15)
                       )
                       (i32.const 2)
                      )
                     )
                    )
                   )
                   (i32.const 16)
                  )
                  (get_local $11)
                 )
                 (i32.shr_s
                  (i32.mul
                   (i32.and
                    (get_local $0)
                    (i32.const 65535)
                   )
                   (get_local $11)
                  )
                  (i32.const 16)
                 )
                )
               )
               (i32.add
                (i32.mul
                 (i32.shr_s
                  (tee_local $0
                   (i32.load
                    (i32.add
                     (get_local $4)
                     (i32.shl
                      (i32.add
                       (get_local $5)
                       (i32.const 14)
                      )
                      (i32.const 2)
                     )
                    )
                   )
                  )
                  (i32.const 16)
                 )
                 (get_local $12)
                )
                (i32.shr_s
                 (i32.mul
                  (i32.and
                   (get_local $0)
                   (i32.const 65535)
                  )
                  (get_local $12)
                 )
                 (i32.const 16)
                )
               )
              )
              (i32.add
               (i32.mul
                (i32.shr_s
                 (tee_local $0
                  (i32.load
                   (i32.add
                    (get_local $4)
                    (i32.shl
                     (i32.add
                      (get_local $5)
                      (i32.const 13)
                     )
                     (i32.const 2)
                    )
                   )
                  )
                 )
                 (i32.const 16)
                )
                (get_local $13)
               )
               (i32.shr_s
                (i32.mul
                 (i32.and
                  (get_local $0)
                  (i32.const 65535)
                 )
                 (get_local $13)
                )
                (i32.const 16)
               )
              )
             )
             (i32.add
              (i32.mul
               (i32.shr_s
                (tee_local $0
                 (i32.load
                  (i32.add
                   (get_local $4)
                   (i32.shl
                    (i32.add
                     (get_local $5)
                     (i32.const 12)
                    )
                    (i32.const 2)
                   )
                  )
                 )
                )
                (i32.const 16)
               )
               (get_local $15)
              )
              (i32.shr_s
               (i32.mul
                (i32.and
                 (get_local $0)
                 (i32.const 65535)
                )
                (get_local $15)
               )
               (i32.const 16)
              )
             )
            )
            (i32.add
             (i32.mul
              (i32.shr_s
               (tee_local $0
                (i32.load
                 (i32.add
                  (get_local $4)
                  (i32.shl
                   (i32.add
                    (get_local $5)
                    (i32.const 11)
                   )
                   (i32.const 2)
                  )
                 )
                )
               )
               (i32.const 16)
              )
              (get_local $16)
             )
             (i32.shr_s
              (i32.mul
               (i32.and
                (get_local $0)
                (i32.const 65535)
               )
               (get_local $16)
              )
              (i32.const 16)
             )
            )
           )
           (i32.add
            (i32.mul
             (i32.shr_s
              (tee_local $0
               (i32.load
                (i32.add
                 (get_local $4)
                 (i32.shl
                  (i32.add
                   (get_local $5)
                   (i32.const 10)
                  )
                  (i32.const 2)
                 )
                )
               )
              )
              (i32.const 16)
             )
             (get_local $17)
            )
            (i32.shr_s
             (i32.mul
              (i32.and
               (get_local $0)
               (i32.const 65535)
              )
              (get_local $17)
             )
             (i32.const 16)
            )
           )
          )
          (i32.add
           (i32.mul
            (i32.shr_s
             (tee_local $0
              (i32.load
               (i32.add
                (get_local $4)
                (i32.shl
                 (i32.add
                  (get_local $5)
                  (i32.const 9)
                 )
                 (i32.const 2)
                )
               )
              )
             )
             (i32.const 16)
            )
            (get_local $18)
           )
           (i32.shr_s
            (i32.mul
             (i32.and
              (get_local $0)
              (i32.const 65535)
             )
             (get_local $18)
            )
            (i32.const 16)
           )
          )
         )
         (i32.add
          (i32.mul
           (i32.shr_s
            (tee_local $0
             (i32.load
              (i32.add
               (get_local $4)
               (i32.shl
                (i32.add
                 (get_local $5)
                 (i32.const 8)
                )
                (i32.const 2)
               )
              )
             )
            )
            (i32.const 16)
           )
           (get_local $19)
          )
          (i32.shr_s
           (i32.mul
            (i32.and
             (get_local $0)
             (i32.const 65535)
            )
            (get_local $19)
           )
           (i32.const 16)
          )
         )
        )
        (i32.add
         (i32.mul
          (i32.shr_s
           (tee_local $0
            (i32.load
             (i32.add
              (get_local $4)
              (i32.shl
               (i32.add
                (get_local $5)
                (i32.const 7)
               )
               (i32.const 2)
              )
             )
            )
           )
           (i32.const 16)
          )
          (get_local $20)
         )
         (i32.shr_s
          (i32.mul
           (i32.and
            (get_local $0)
            (i32.const 65535)
           )
           (get_local $20)
          )
          (i32.const 16)
         )
        )
       )
       (i32.add
        (i32.mul
         (i32.shr_s
          (tee_local $0
           (i32.load
            (i32.add
             (get_local $4)
             (i32.shl
              (i32.add
               (get_local $5)
               (i32.const 6)
              )
              (i32.const 2)
             )
            )
           )
          )
          (i32.const 16)
         )
         (get_local $21)
        )
        (i32.shr_s
         (i32.mul
          (i32.and
           (get_local $0)
           (i32.const 65535)
          )
          (get_local $21)
         )
         (i32.const 16)
        )
       )
      )
     )
     (if
      (i32.eq
       (i32.load
        (get_local $10)
       )
       (i32.const 16)
      )
      (set_local $0
       (i32.add
        (i32.add
         (i32.add
          (i32.add
           (i32.add
            (i32.add
             (get_local $0)
             (i32.add
              (i32.mul
               (i32.shr_s
                (tee_local $0
                 (i32.load
                  (i32.add
                   (get_local $4)
                   (i32.shl
                    (i32.add
                     (get_local $5)
                     (i32.const 5)
                    )
                    (i32.const 2)
                   )
                  )
                 )
                )
                (i32.const 16)
               )
               (get_local $22)
              )
              (i32.shr_s
               (i32.mul
                (i32.and
                 (get_local $0)
                 (i32.const 65535)
                )
                (get_local $22)
               )
               (i32.const 16)
              )
             )
            )
            (i32.add
             (i32.mul
              (i32.shr_s
               (tee_local $0
                (i32.load
                 (i32.add
                  (get_local $4)
                  (i32.shl
                   (i32.add
                    (get_local $5)
                    (i32.const 4)
                   )
                   (i32.const 2)
                  )
                 )
                )
               )
               (i32.const 16)
              )
              (get_local $23)
             )
             (i32.shr_s
              (i32.mul
               (i32.and
                (get_local $0)
                (i32.const 65535)
               )
               (get_local $23)
              )
              (i32.const 16)
             )
            )
           )
           (i32.add
            (i32.mul
             (i32.shr_s
              (tee_local $0
               (i32.load
                (i32.add
                 (get_local $4)
                 (i32.shl
                  (i32.add
                   (get_local $5)
                   (i32.const 3)
                  )
                  (i32.const 2)
                 )
                )
               )
              )
              (i32.const 16)
             )
             (get_local $24)
            )
            (i32.shr_s
             (i32.mul
              (i32.and
               (get_local $0)
               (i32.const 65535)
              )
              (get_local $24)
             )
             (i32.const 16)
            )
           )
          )
          (i32.add
           (i32.mul
            (i32.shr_s
             (tee_local $0
              (i32.load
               (i32.add
                (get_local $4)
                (i32.shl
                 (i32.add
                  (get_local $5)
                  (i32.const 2)
                 )
                 (i32.const 2)
                )
               )
              )
             )
             (i32.const 16)
            )
            (get_local $25)
           )
           (i32.shr_s
            (i32.mul
             (i32.and
              (get_local $0)
              (i32.const 65535)
             )
             (get_local $25)
            )
            (i32.const 16)
           )
          )
         )
         (i32.add
          (i32.mul
           (i32.shr_s
            (tee_local $0
             (i32.load
              (i32.add
               (get_local $4)
               (i32.shl
                (i32.add
                 (get_local $5)
                 (i32.const 1)
                )
                (i32.const 2)
               )
              )
             )
            )
            (i32.const 16)
           )
           (get_local $26)
          )
          (i32.shr_s
           (i32.mul
            (i32.and
             (get_local $0)
             (i32.const 65535)
            )
            (get_local $26)
           )
           (i32.const 16)
          )
         )
        )
        (i32.add
         (i32.mul
          (i32.shr_s
           (tee_local $0
            (i32.load
             (i32.add
              (get_local $4)
              (i32.shl
               (get_local $5)
               (i32.const 2)
              )
             )
            )
           )
           (i32.const 16)
          )
          (get_local $27)
         )
         (i32.shr_s
          (i32.mul
           (i32.and
            (get_local $0)
            (i32.const 65535)
           )
           (get_local $27)
          )
          (i32.const 16)
         )
        )
       )
      )
     )
     (set_local $7
      (i32.load
       (tee_local $14
        (i32.add
         (get_local $4)
         (i32.shl
          (i32.add
           (get_local $5)
           (i32.const 16)
          )
          (i32.const 2)
         )
        )
       )
      )
     )
     (set_local $9
      (i32.gt_s
       (get_local $0)
       (i32.const 134217727)
      )
     )
     (set_local $1
      (i32.shl
       (if (result i32)
        (i32.gt_s
         (get_local $0)
         (i32.const -134217728)
        )
        (get_local $0)
        (i32.const -134217728)
       )
       (i32.const 4)
      )
     )
     (set_local $31
      (i32.gt_s
       (i32.add
        (get_local $7)
        (if (result i32)
         (get_local $9)
         (i32.const 2147483632)
         (get_local $1)
        )
       )
       (i32.const -1)
      )
     )
     (set_local $1
      (i32.shl
       (if (result i32)
        (i32.gt_s
         (get_local $0)
         (i32.const -134217728)
        )
        (get_local $0)
        (i32.const -134217728)
       )
       (i32.const 4)
      )
     )
     (if
      (get_local $9)
      (set_local $1
       (i32.const 2147483632)
      )
     )
     (i32.store
      (get_local $14)
      (tee_local $1
       (if (result i32)
        (get_local $31)
        (if (result i32)
         (i32.lt_s
          (i32.and
           (get_local $7)
           (get_local $1)
          )
          (i32.const 0)
         )
         (i32.const -2147483648)
         (block (result i32)
          (set_local $0
           (i32.shl
            (if (result i32)
             (i32.gt_s
              (get_local $0)
              (i32.const -134217728)
             )
             (get_local $0)
             (i32.const -134217728)
            )
            (i32.const 4)
           )
          )
          (i32.add
           (get_local $7)
           (if (result i32)
            (get_local $9)
            (i32.const 2147483632)
            (get_local $0)
           )
          )
         )
        )
        (if (result i32)
         (i32.gt_s
          (i32.or
           (get_local $7)
           (get_local $1)
          )
          (i32.const -1)
         )
         (i32.const 2147483647)
         (block (result i32)
          (set_local $0
           (i32.shl
            (if (result i32)
             (i32.gt_s
              (get_local $0)
              (i32.const -134217728)
             )
             (get_local $0)
             (i32.const -134217728)
            )
            (i32.const 4)
           )
          )
          (i32.add
           (get_local $7)
           (if (result i32)
            (get_local $9)
            (i32.const 2147483632)
            (get_local $0)
           )
          )
         )
        )
       )
      )
     )
     (set_local $0
      (i32.load16_s
       (tee_local $14
        (i32.add
         (get_local $2)
         (i32.shl
          (get_local $5)
          (i32.const 1)
         )
        )
       )
      )
     )
     (i32.store16
      (get_local $14)
      (tee_local $0
       (if (result i32)
        (i32.gt_s
         (i32.add
          (tee_local $7
           (if (result i32)
            (tee_local $9
             (i32.gt_s
              (tee_local $1
               (i32.add
                (i32.add
                 (i32.mul
                  (i32.shr_s
                   (get_local $1)
                   (i32.const 16)
                  )
                  (get_local $28)
                 )
                 (i32.shr_s
                  (i32.mul
                   (i32.and
                    (get_local $1)
                    (i32.const 65535)
                   )
                   (get_local $28)
                  )
                  (i32.const 16)
                 )
                )
                (i32.mul
                 (get_local $1)
                 (get_local $30)
                )
               )
              )
              (i32.const 8388479)
             )
            )
            (i32.const 32767)
            (if (result i32)
             (i32.lt_s
              (get_local $1)
              (i32.const -8388736)
             )
             (i32.const -32768)
             (i32.shr_s
              (i32.add
               (i32.shr_s
                (get_local $1)
                (i32.const 7)
               )
               (i32.const 1)
              )
              (i32.const 1)
             )
            )
           )
          )
          (get_local $0)
         )
         (i32.const 32767)
        )
        (i32.const 32767)
        (if (result i32)
         (i32.lt_s
          (i32.add
           (tee_local $7
            (if (result i32)
             (get_local $9)
             (i32.const 32767)
             (if (result i32)
              (i32.lt_s
               (get_local $1)
               (i32.const -8388736)
              )
              (i32.const -32768)
              (i32.shr_s
               (i32.add
                (i32.shr_s
                 (get_local $1)
                 (i32.const 7)
                )
                (i32.const 1)
               )
               (i32.const 1)
              )
             )
            )
           )
           (get_local $0)
          )
          (i32.const -32768)
         )
         (i32.const -32768)
         (i32.add
          (tee_local $1
           (if (result i32)
            (get_local $9)
            (i32.const 32767)
            (if (result i32)
             (i32.lt_s
              (get_local $1)
              (i32.const -8388736)
             )
             (i32.const -32768)
             (i32.shr_s
              (i32.add
               (i32.shr_s
                (get_local $1)
                (i32.const 7)
               )
               (i32.const 1)
              )
              (i32.const 1)
             )
            )
           )
          )
          (get_local $0)
         )
        )
       )
      )
     )
     (set_local $5
      (i32.add
       (get_local $5)
       (i32.const 1)
      )
     )
     (br $while-in6)
    )
   )
  )
  (i64.store align=4
   (get_local $6)
   (i64.load align=4
    (tee_local $0
     (i32.add
      (get_local $4)
      (i32.shl
       (get_local $3)
       (i32.const 2)
      )
     )
    )
   )
  )
  (i64.store offset=8 align=4
   (get_local $6)
   (i64.load offset=8 align=4
    (get_local $0)
   )
  )
  (i64.store offset=16 align=4
   (get_local $6)
   (i64.load offset=16 align=4
    (get_local $0)
   )
  )
  (i64.store offset=24 align=4
   (get_local $6)
   (i64.load offset=24 align=4
    (get_local $0)
   )
  )
  (i64.store offset=32 align=4
   (get_local $6)
   (i64.load offset=32 align=4
    (get_local $0)
   )
  )
  (i64.store offset=40 align=4
   (get_local $6)
   (i64.load offset=40 align=4
    (get_local $0)
   )
  )
  (i64.store offset=48 align=4
   (get_local $6)
   (i64.load offset=48 align=4
    (get_local $0)
   )
  )
  (i64.store offset=56 align=4
   (get_local $6)
   (i64.load offset=56 align=4
    (get_local $0)
   )
  )
  (call $_llvm_stackrestore
   (get_local $29)
  )
  (set_global $STACKTOP
   (get_local $8)
  )
 )
 (func $_silk_SQRT_APPROX (; 176 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (set_local $1
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.lt_s
    (get_local $0)
    (i32.const 1)
   )
   (block
    (set_global $STACKTOP
     (get_local $1)
    )
    (return
     (i32.const 0)
    )
   )
  )
  (call $_silk_CLZ_FRAC
   (get_local $0)
   (tee_local $0
    (i32.add
     (get_local $1)
     (i32.const 4)
    )
   )
   (get_local $1)
  )
  (set_local $0
   (i32.shr_u
    (if (result i32)
     (i32.and
      (tee_local $0
       (i32.load
        (get_local $0)
       )
      )
      (i32.const 1)
     )
     (i32.const 32768)
     (i32.const 46214)
    )
    (i32.shr_s
     (get_local $0)
     (i32.const 1)
    )
   )
  )
  (set_local $2
   (i32.shr_s
    (i32.mul
     (i32.shr_s
      (i32.shl
       (i32.load
        (get_local $1)
       )
       (i32.const 16)
      )
      (i32.const 16)
     )
     (i32.const 13959168)
    )
    (i32.const 16)
   )
  )
  (set_global $STACKTOP
   (get_local $1)
  )
  (i32.add
   (get_local $0)
   (i32.add
    (i32.mul
     (i32.shr_s
      (get_local $0)
      (i32.const 16)
     )
     (get_local $2)
    )
    (i32.shr_s
     (i32.mul
      (i32.and
       (get_local $0)
       (i32.const 65535)
      )
      (get_local $2)
     )
     (i32.const 16)
    )
   )
  )
 )
 (func $_silk_CNG_exc (; 177 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (set_local $4
   (i32.const 255)
  )
  (loop $while-in
   (if
    (i32.gt_s
     (get_local $4)
     (get_local $2)
    )
    (block
     (set_local $4
      (i32.shr_s
       (get_local $4)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (set_local $6
   (i32.load
    (get_local $3)
   )
  )
  (loop $while-in1
   (if
    (i32.lt_s
     (get_local $5)
     (get_local $2)
    )
    (block
     (i32.store
      (i32.add
       (get_local $0)
       (i32.shl
        (get_local $5)
        (i32.const 2)
       )
      )
      (i32.load
       (i32.add
        (get_local $1)
        (i32.shl
         (i32.and
          (i32.shr_s
           (tee_local $6
            (i32.add
             (i32.mul
              (get_local $6)
              (i32.const 196314165)
             )
             (i32.const 907633515)
            )
           )
           (i32.const 24)
          )
          (get_local $4)
         )
         (i32.const 2)
        )
       )
      )
     )
     (set_local $5
      (i32.add
       (get_local $5)
       (i32.const 1)
      )
     )
     (br $while-in1)
    )
   )
  )
  (i32.store
   (get_local $3)
   (get_local $6)
  )
 )
 (func $_silk_CLZ_FRAC (; 178 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (set_local $3
   (call $_silk_CLZ32
    (get_local $0)
   )
  )
  (i32.store
   (get_local $1)
   (get_local $3)
  )
  (set_local $0
   (i32.and
    (call $_silk_ROR32
     (get_local $0)
     (i32.sub
      (i32.const 24)
      (get_local $3)
     )
    )
    (i32.const 127)
   )
  )
  (i32.store
   (get_local $2)
   (get_local $0)
  )
 )
 (func $_silk_CLZ32 (; 179 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (i32.clz
   (get_local $0)
  )
 )
 (func $_silk_ROR32 (; 180 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (if
   (i32.eqz
    (get_local $1)
   )
   (return
    (get_local $0)
   )
  )
  (set_local $2
   (i32.sub
    (i32.const 0)
    (get_local $1)
   )
  )
  (if (result i32)
   (i32.lt_s
    (get_local $1)
    (i32.const 0)
   )
   (i32.or
    (i32.shl
     (get_local $0)
     (get_local $2)
    )
    (i32.shr_u
     (get_local $0)
     (i32.add
      (get_local $1)
      (i32.const 32)
     )
    )
   )
   (i32.or
    (i32.shl
     (get_local $0)
     (i32.sub
      (i32.const 32)
      (get_local $1)
     )
    )
    (i32.shr_u
     (get_local $0)
     (get_local $1)
    )
   )
  )
 )
 (func $_silk_encode_signs (; 181 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (set_local $6
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store8 offset=1
   (get_local $6)
   (i32.const 0)
  )
  (set_local $4
   (i32.add
    (i32.mul
     (i32.shr_s
      (i32.shl
       (i32.add
        (i32.shl
         (get_local $3)
         (i32.const 1)
        )
        (get_local $4)
       )
       (i32.const 16)
      )
      (i32.const 16)
     )
     (i32.const 7)
    )
    (i32.const 27232)
   )
  )
  (set_local $8
   (i32.shr_s
    (i32.add
     (get_local $2)
     (i32.const 8)
    )
    (i32.const 4)
   )
  )
  (set_local $2
   (i32.const 0)
  )
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $2)
     (get_local $8)
    )
    (block
     (block $label$break$L4
      (if
       (i32.gt_s
        (tee_local $3
         (i32.load
          (i32.add
           (get_local $5)
           (i32.shl
            (get_local $2)
            (i32.const 2)
           )
          )
         )
        )
        (i32.const 0)
       )
       (block
        (set_local $7
         (i32.and
          (get_local $3)
          (i32.const 31)
         )
        )
        (i32.store8
         (get_local $6)
         (i32.load8_s
          (i32.add
           (get_local $4)
           (if (result i32)
            (i32.lt_u
             (i32.and
              (get_local $3)
              (i32.const 30)
             )
             (i32.const 6)
            )
            (get_local $7)
            (i32.const 6)
           )
          )
         )
        )
        (set_local $3
         (i32.const 0)
        )
        (loop $while-in1
         (br_if $label$break$L4
          (i32.eq
           (get_local $3)
           (i32.const 16)
          )
         )
         (if
          (tee_local $7
           (i32.load8_s
            (i32.add
             (get_local $1)
             (get_local $3)
            )
           )
          )
          (call $_ec_enc_icdf
           (get_local $0)
           (i32.add
            (i32.shr_s
             (get_local $7)
             (i32.const 15)
            )
            (i32.const 1)
           )
           (get_local $6)
           (i32.const 8)
          )
         )
         (set_local $3
          (i32.add
           (get_local $3)
           (i32.const 1)
          )
         )
         (br $while-in1)
        )
       )
      )
     )
     (set_local $1
      (i32.add
       (get_local $1)
       (i32.const 16)
      )
     )
     (set_local $2
      (i32.add
       (get_local $2)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (set_global $STACKTOP
   (get_local $6)
  )
 )
 (func $_silk_decode_signs (; 182 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (set_local $6
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store8 offset=1
   (get_local $6)
   (i32.const 0)
  )
  (set_local $7
   (i32.add
    (i32.mul
     (i32.shr_s
      (i32.shl
       (i32.add
        (i32.shl
         (get_local $3)
         (i32.const 1)
        )
        (get_local $4)
       )
       (i32.const 16)
      )
      (i32.const 16)
     )
     (i32.const 7)
    )
    (i32.const 27232)
   )
  )
  (set_local $8
   (i32.shr_s
    (i32.add
     (get_local $2)
     (i32.const 8)
    )
    (i32.const 4)
   )
  )
  (set_local $2
   (i32.const 0)
  )
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $2)
     (get_local $8)
    )
    (block
     (block $label$break$L4
      (if
       (i32.gt_s
        (tee_local $3
         (i32.load
          (i32.add
           (get_local $5)
           (i32.shl
            (get_local $2)
            (i32.const 2)
           )
          )
         )
        )
        (i32.const 0)
       )
       (block
        (set_local $4
         (i32.and
          (get_local $3)
          (i32.const 31)
         )
        )
        (i32.store8
         (get_local $6)
         (i32.load8_s
          (i32.add
           (get_local $7)
           (if (result i32)
            (i32.lt_u
             (i32.and
              (get_local $3)
              (i32.const 30)
             )
             (i32.const 6)
            )
            (get_local $4)
            (i32.const 6)
           )
          )
         )
        )
        (set_local $3
         (i32.const 0)
        )
        (loop $while-in1
         (br_if $label$break$L4
          (i32.eq
           (get_local $3)
           (i32.const 16)
          )
         )
         (if
          (i32.gt_s
           (i32.load16_s
            (tee_local $4
             (i32.add
              (get_local $1)
              (i32.shl
               (get_local $3)
               (i32.const 1)
              )
             )
            )
           )
           (i32.const 0)
          )
          (block
           (set_local $9
            (i32.add
             (i32.shl
              (call $_ec_dec_icdf
               (get_local $0)
               (get_local $6)
               (i32.const 8)
              )
              (i32.const 1)
             )
             (i32.const -1)
            )
           )
           (i32.store16
            (get_local $4)
            (i32.mul
             (get_local $9)
             (i32.load16_s
              (get_local $4)
             )
            )
           )
          )
         )
         (set_local $3
          (i32.add
           (get_local $3)
           (i32.const 1)
          )
         )
         (br $while-in1)
        )
       )
      )
     )
     (set_local $1
      (i32.add
       (get_local $1)
       (i32.const 32)
      )
     )
     (set_local $2
      (i32.add
       (get_local $2)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (set_global $STACKTOP
   (get_local $6)
  )
 )
 (func $_silk_init_decoder (; 183 ;) (; has Stack IR ;) (param $0 i32)
  (drop
   (call $_memset
    (i32.add
     (get_local $0)
     (i32.const 4)
    )
    (i32.const 0)
    (i32.const 4260)
   )
  )
  (i32.store
   (i32.add
    (get_local $0)
    (i32.const 2376)
   )
   (i32.const 1)
  )
  (i32.store
   (get_local $0)
   (i32.const 65536)
  )
  (i32.store
   (i32.add
    (get_local $0)
    (i32.const 4168)
   )
   (i32.const 0)
  )
  (call $_silk_CNG_Reset
   (get_local $0)
  )
  (call $_silk_PLC_Reset
   (get_local $0)
  )
 )
 (func $_silk_decode_core (; 184 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local $26 i32)
  (local $27 i32)
  (local $28 i32)
  (local $29 i32)
  (local $30 i32)
  (local $31 i32)
  (local $32 i32)
  (local $33 i32)
  (local $34 i32)
  (local $35 i32)
  (local $36 i32)
  (local $37 i32)
  (local $38 i32)
  (local $39 i32)
  (local $40 i32)
  (local $41 i32)
  (local $42 i32)
  (local $43 i32)
  (local $44 i32)
  (local $45 i32)
  (local $46 i32)
  (local $47 i32)
  (local $48 i32)
  (local $49 i32)
  (local $50 i32)
  (set_local $9
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.const 32)
   )
  )
  (set_local $26
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (tee_local $6
        (i32.load
         (tee_local $22
          (i32.add
           (get_local $0)
           (i32.const 2336)
          )
         )
        )
       )
       (i32.const 1)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (set_local $23
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (i32.add
        (get_local $6)
        (tee_local $6
         (i32.load
          (tee_local $8
           (i32.add
            (get_local $0)
            (i32.const 2328)
           )
          )
         )
        )
       )
       (i32.const 2)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (set_local $27
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (tee_local $4
        (i32.load
         (tee_local $24
          (i32.add
           (get_local $0)
           (i32.const 2332)
          )
         )
        )
       )
       (i32.const 2)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (set_local $7
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (get_local $4)
       (i32.const 2)
      )
      (i32.const 79)
     )
     (i32.const -16)
    )
   )
  )
  (set_local $28
   (i32.gt_s
    (i32.load8_s
     (i32.add
      (get_local $0)
      (i32.const 2767)
     )
    )
    (i32.const 3)
   )
  )
  (set_local $10
   (i32.shl
    (i32.load16_s
     (i32.add
      (i32.add
       (i32.shl
        (i32.shr_s
         (i32.load8_s
          (tee_local $29
           (i32.add
            (get_local $0)
            (i32.const 2765)
           )
          )
         )
         (i32.const 1)
        )
        (i32.const 2)
       )
       (i32.const 41164)
      )
      (i32.shl
       (i32.load8_s
        (i32.add
         (get_local $0)
         (i32.const 2766)
        )
       )
       (i32.const 1)
      )
     )
    )
    (i32.const 4)
   )
  )
  (set_local $20
   (i32.load8_s
    (i32.add
     (get_local $0)
     (i32.const 2770)
    )
   )
  )
  (set_local $4
   (i32.const 0)
  )
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $4)
     (get_local $6)
    )
    (block
     (i32.store
      (tee_local $16
       (i32.add
        (i32.add
         (get_local $0)
         (i32.const 4)
        )
        (i32.shl
         (get_local $4)
         (i32.const 2)
        )
       )
      )
      (tee_local $6
       (i32.shl
        (tee_local $5
         (i32.load16_s
          (tee_local $12
           (i32.add
            (get_local $3)
            (i32.shl
             (get_local $4)
             (i32.const 1)
            )
           )
          )
         )
        )
        (i32.const 14)
       )
      )
     )
     (if
      (i32.gt_s
       (get_local $5)
       (i32.const 0)
      )
      (i32.store
       (get_local $16)
       (tee_local $6
        (i32.add
         (get_local $6)
         (i32.const -1280)
        )
       )
      )
      (if
       (i32.lt_s
        (get_local $5)
        (i32.const 0)
       )
       (i32.store
        (get_local $16)
        (tee_local $6
         (i32.or
          (get_local $6)
          (i32.const 1280)
         )
        )
       )
      )
     )
     (set_local $5
      (i32.sub
       (i32.const 0)
       (tee_local $6
        (i32.add
         (get_local $6)
         (get_local $10)
        )
       )
      )
     )
     (i32.store
      (get_local $16)
      (if (result i32)
       (i32.lt_s
        (tee_local $16
         (i32.add
          (i32.mul
           (get_local $20)
           (i32.const 196314165)
          )
          (i32.const 907633515)
         )
        )
        (i32.const 0)
       )
       (get_local $5)
       (get_local $6)
      )
     )
     (set_local $20
      (i32.add
       (get_local $16)
       (i32.load16_s
        (get_local $12)
       )
      )
     )
     (set_local $4
      (i32.add
       (get_local $4)
       (i32.const 1)
      )
     )
     (set_local $6
      (i32.load
       (get_local $8)
      )
     )
     (br $while-in)
    )
   )
  )
  (i64.store align=4
   (get_local $7)
   (i64.load align=4
    (tee_local $10
     (i32.add
      (get_local $0)
      (i32.const 1284)
     )
    )
   )
  )
  (i64.store offset=8 align=4
   (get_local $7)
   (i64.load offset=8 align=4
    (get_local $10)
   )
  )
  (i64.store offset=16 align=4
   (get_local $7)
   (i64.load offset=16 align=4
    (get_local $10)
   )
  )
  (i64.store offset=24 align=4
   (get_local $7)
   (i64.load offset=24 align=4
    (get_local $10)
   )
  )
  (i64.store offset=32 align=4
   (get_local $7)
   (i64.load offset=32 align=4
    (get_local $10)
   )
  )
  (i64.store offset=40 align=4
   (get_local $7)
   (i64.load offset=40 align=4
    (get_local $10)
   )
  )
  (i64.store offset=48 align=4
   (get_local $7)
   (i64.load offset=48 align=4
    (get_local $10)
   )
  )
  (i64.store offset=56 align=4
   (get_local $7)
   (i64.load offset=56 align=4
    (get_local $10)
   )
  )
  (set_local $30
   (i32.add
    (get_local $0)
    (i32.const 2324)
   )
  )
  (set_local $21
   (i32.add
    (get_local $0)
    (i32.const 2340)
   )
  )
  (set_local $31
   (i32.add
    (get_local $0)
    (i32.const 4160)
   )
  )
  (set_local $32
   (i32.add
    (get_local $9)
    (i32.const 2)
   )
  )
  (set_local $33
   (i32.add
    (get_local $9)
    (i32.const 4)
   )
  )
  (set_local $34
   (i32.add
    (get_local $9)
    (i32.const 6)
   )
  )
  (set_local $35
   (i32.add
    (get_local $9)
    (i32.const 8)
   )
  )
  (set_local $36
   (i32.add
    (get_local $9)
    (i32.const 10)
   )
  )
  (set_local $37
   (i32.add
    (get_local $9)
    (i32.const 12)
   )
  )
  (set_local $38
   (i32.add
    (get_local $9)
    (i32.const 14)
   )
  )
  (set_local $39
   (i32.add
    (get_local $9)
    (i32.const 16)
   )
  )
  (set_local $40
   (i32.add
    (get_local $9)
    (i32.const 18)
   )
  )
  (set_local $41
   (i32.add
    (get_local $9)
    (i32.const 20)
   )
  )
  (set_local $42
   (i32.add
    (get_local $9)
    (i32.const 22)
   )
  )
  (set_local $43
   (i32.add
    (get_local $9)
    (i32.const 24)
   )
  )
  (set_local $44
   (i32.add
    (get_local $9)
    (i32.const 26)
   )
  )
  (set_local $45
   (i32.add
    (get_local $9)
    (i32.const 28)
   )
  )
  (set_local $46
   (i32.add
    (get_local $9)
    (i32.const 30)
   )
  )
  (set_local $47
   (i32.add
    (get_local $0)
    (i32.const 4164)
   )
  )
  (set_local $48
   (i32.add
    (get_local $0)
    (i32.const 2308)
   )
  )
  (set_local $49
   (i32.add
    (get_local $1)
    (i32.const 136)
   )
  )
  (set_local $16
   (i32.add
    (get_local $0)
    (i32.const 4)
   )
  )
  (set_local $3
   (i32.load
    (get_local $22)
   )
  )
  (set_local $20
   (get_local $2)
  )
  (set_local $12
   (i32.const 0)
  )
  (block $__rjto$4
   (block $__rjti$4
    (block $__rjti$3
     (block $__rjti$2
      (loop $label$continue$L10
       (block $label$break$L10
        (br_if $__rjti$4
         (i32.ge_s
          (get_local $12)
          (i32.load
           (get_local $30)
          )
         )
        )
        (drop
         (call $_memcpy
          (get_local $9)
          (tee_local $18
           (i32.add
            (i32.add
             (get_local $1)
             (i32.const 32)
            )
            (i32.shl
             (i32.shr_u
              (get_local $12)
              (i32.const 1)
             )
             (i32.const 5)
            )
           )
          )
          (i32.shl
           (i32.load
            (get_local $21)
           )
           (i32.const 1)
          )
         )
        )
        (set_local $14
         (i32.add
          (i32.add
           (get_local $1)
           (i32.const 96)
          )
          (i32.shl
           (i32.mul
            (get_local $12)
            (i32.const 5)
           )
           (i32.const 1)
          )
         )
        )
        (set_local $8
         (i32.load8_s
          (get_local $29)
         )
        )
        (set_local $25
         (i32.shr_u
          (tee_local $17
           (i32.load
            (i32.add
             (i32.add
              (get_local $1)
              (i32.const 16)
             )
             (i32.shl
              (get_local $12)
              (i32.const 2)
             )
            )
           )
          )
          (i32.const 6)
         )
        )
        (set_local $5
         (call $_silk_INVERSE32_varQ
          (get_local $17)
         )
        )
        (if
         (i32.eq
          (get_local $17)
          (tee_local $6
           (i32.load
            (get_local $0)
           )
          )
         )
         (set_local $6
          (i32.const 65536)
         )
         (block
          (set_local $19
           (i32.shr_s
            (tee_local $6
             (call $_silk_DIV32_varQ
              (get_local $6)
              (get_local $17)
             )
            )
            (i32.const 16)
           )
          )
          (set_local $13
           (i32.and
            (get_local $6)
            (i32.const 65535)
           )
          )
          (set_local $4
           (i32.const 0)
          )
          (loop $while-in1
           (if
            (i32.ne
             (get_local $4)
             (i32.const 16)
            )
            (block
             (set_local $11
              (i32.shr_s
               (i32.shl
                (tee_local $50
                 (i32.load
                  (tee_local $15
                   (i32.add
                    (get_local $7)
                    (i32.shl
                     (get_local $4)
                     (i32.const 2)
                    )
                   )
                  )
                 )
                )
                (i32.const 16)
               )
               (i32.const 16)
              )
             )
             (i32.store
              (get_local $15)
              (i32.add
               (i32.add
                (i32.mul
                 (get_local $19)
                 (get_local $11)
                )
                (i32.shr_s
                 (i32.mul
                  (get_local $13)
                  (get_local $11)
                 )
                 (i32.const 16)
                )
               )
               (i32.mul
                (get_local $6)
                (i32.shr_s
                 (i32.add
                  (i32.shr_s
                   (get_local $50)
                   (i32.const 15)
                  )
                  (i32.const 1)
                 )
                 (i32.const 1)
                )
               )
              )
             )
             (set_local $4
              (i32.add
               (get_local $4)
               (i32.const 1)
              )
             )
             (br $while-in1)
            )
           )
          )
         )
        )
        (i32.store
         (get_local $0)
         (get_local $17)
        )
        (set_local $6
         (block $label$break$L25 (result i32)
          (block $__rjti$1
           (block $__rjti$0
            (br_if $__rjti$0
             (i32.eqz
              (i32.load
               (get_local $31)
              )
             )
            )
            (br_if $__rjti$0
             (i32.eqz
              (i32.and
               (i32.and
                (i32.ne
                 (get_local $8)
                 (i32.const 2)
                )
                (i32.eq
                 (i32.load
                  (get_local $47)
                 )
                 (i32.const 2)
                )
               )
               (i32.lt_u
                (get_local $12)
                (i32.const 2)
               )
              )
             )
            )
            (i64.store align=2
             (get_local $14)
             (i64.const 0)
            )
            (i32.store16 offset=8
             (get_local $14)
             (i32.const 0)
            )
            (i32.store16 offset=4
             (get_local $14)
             (i32.const 4096)
            )
            (i32.store
             (i32.add
              (get_local $1)
              (i32.shl
               (get_local $12)
               (i32.const 2)
              )
             )
             (tee_local $4
              (i32.load
               (get_local $48)
              )
             )
            )
            (br $__rjti$1)
           )
           (br $label$break$L25
            (if (result i32)
             (i32.eq
              (get_local $8)
              (i32.const 2)
             )
             (block
              (set_local $4
               (i32.load
                (i32.add
                 (get_local $1)
                 (i32.shl
                  (get_local $12)
                  (i32.const 2)
                 )
                )
               )
              )
              (br $__rjti$1)
             )
             (get_local $16)
            )
           )
          )
          (block $label$break$L27
           (if
            (i32.and
             (i32.xor
              (tee_local $19
               (i32.eqz
                (get_local $12)
               )
              )
              (i32.const 1)
             )
             (i32.or
              (i32.ne
               (get_local $12)
               (i32.const 2)
              )
              (get_local $28)
             )
            )
            (if
             (i32.ne
              (get_local $6)
              (i32.const 65536)
             )
             (block
              (set_local $11
               (i32.add
                (get_local $4)
                (i32.const 2)
               )
              )
              (set_local $18
               (i32.shr_s
                (get_local $6)
                (i32.const 16)
               )
              )
              (set_local $19
               (i32.and
                (get_local $6)
                (i32.const 65535)
               )
              )
              (set_local $5
               (i32.const 0)
              )
              (loop $while-in5
               (br_if $label$break$L27
                (i32.ge_s
                 (get_local $5)
                 (get_local $11)
                )
               )
               (set_local $8
                (i32.shr_s
                 (i32.shl
                  (tee_local $15
                   (i32.load
                    (tee_local $13
                     (i32.add
                      (get_local $23)
                      (i32.shl
                       (i32.add
                        (i32.sub
                         (get_local $3)
                         (get_local $5)
                        )
                        (i32.const -1)
                       )
                       (i32.const 2)
                      )
                     )
                    )
                   )
                  )
                  (i32.const 16)
                 )
                 (i32.const 16)
                )
               )
               (i32.store
                (get_local $13)
                (i32.add
                 (i32.add
                  (i32.mul
                   (get_local $18)
                   (get_local $8)
                  )
                  (i32.shr_s
                   (i32.mul
                    (get_local $19)
                    (get_local $8)
                   )
                   (i32.const 16)
                  )
                 )
                 (i32.mul
                  (get_local $6)
                  (i32.shr_s
                   (i32.add
                    (i32.shr_s
                     (get_local $15)
                     (i32.const 15)
                    )
                    (i32.const 1)
                   )
                   (i32.const 1)
                  )
                 )
                )
               )
               (set_local $5
                (i32.add
                 (get_local $5)
                 (i32.const 1)
                )
               )
               (br $while-in5)
              )
             )
            )
            (block
             (br_if $__rjti$2
              (i32.le_s
               (tee_local $11
                (i32.sub
                 (i32.sub
                  (tee_local $6
                   (i32.load
                    (get_local $22)
                   )
                  )
                  (get_local $4)
                 )
                 (tee_local $8
                  (i32.load
                   (get_local $21)
                  )
                 )
                )
               )
               (i32.const 2)
              )
             )
             (if
              (i32.eq
               (get_local $12)
               (i32.const 2)
              )
              (block
               (drop
                (call $_memcpy
                 (i32.add
                  (i32.add
                   (get_local $0)
                   (i32.const 1348)
                  )
                  (i32.shl
                   (get_local $6)
                   (i32.const 1)
                  )
                 )
                 (get_local $2)
                 (i32.shl
                  (i32.load
                   (get_local $24)
                  )
                  (i32.const 2)
                 )
                )
               )
               (set_local $6
                (i32.load
                 (get_local $22)
                )
               )
               (set_local $8
                (i32.load
                 (get_local $21)
                )
               )
              )
             )
             (call $_silk_LPC_analysis_filter
              (i32.add
               (get_local $26)
               (i32.shl
                (tee_local $11
                 (i32.add
                  (get_local $11)
                  (i32.const -2)
                 )
                )
                (i32.const 1)
               )
              )
              (i32.add
               (i32.add
                (get_local $0)
                (i32.const 1348)
               )
               (i32.shl
                (i32.add
                 (get_local $11)
                 (i32.mul
                  (get_local $12)
                  (i32.load
                   (get_local $24)
                  )
                 )
                )
                (i32.const 1)
               )
              )
              (get_local $18)
              (i32.sub
               (get_local $6)
               (get_local $11)
              )
              (get_local $8)
             )
             (if
              (get_local $19)
              (set_local $5
               (i32.shl
                (i32.add
                 (i32.mul
                  (i32.shr_s
                   (get_local $5)
                   (i32.const 16)
                  )
                  (tee_local $6
                   (i32.shr_s
                    (i32.shl
                     (i32.load
                      (get_local $49)
                     )
                     (i32.const 16)
                    )
                    (i32.const 16)
                   )
                  )
                 )
                 (i32.shr_s
                  (i32.mul
                   (i32.and
                    (get_local $5)
                    (i32.const 65535)
                   )
                   (get_local $6)
                  )
                  (i32.const 16)
                 )
                )
                (i32.const 2)
               )
              )
             )
             (set_local $8
              (i32.add
               (get_local $4)
               (i32.const 2)
              )
             )
             (set_local $11
              (i32.shr_s
               (get_local $5)
               (i32.const 16)
              )
             )
             (set_local $5
              (i32.and
               (get_local $5)
               (i32.const 65535)
              )
             )
             (set_local $6
              (i32.const 0)
             )
             (loop $while-in7
              (br_if $label$break$L27
               (i32.ge_s
                (get_local $6)
                (get_local $8)
               )
              )
              (i32.store
               (i32.add
                (get_local $23)
                (i32.shl
                 (i32.add
                  (i32.sub
                   (get_local $3)
                   (get_local $6)
                  )
                  (i32.const -1)
                 )
                 (i32.const 2)
                )
               )
               (i32.add
                (i32.mul
                 (get_local $11)
                 (tee_local $18
                  (i32.load16_s
                   (i32.add
                    (get_local $26)
                    (i32.shl
                     (i32.add
                      (i32.sub
                       (i32.load
                        (get_local $22)
                       )
                       (get_local $6)
                      )
                      (i32.const -1)
                     )
                     (i32.const 1)
                    )
                   )
                  )
                 )
                )
                (i32.shr_s
                 (i32.mul
                  (get_local $5)
                  (get_local $18)
                 )
                 (i32.const 16)
                )
               )
              )
              (set_local $6
               (i32.add
                (get_local $6)
                (i32.const 1)
               )
              )
              (br $while-in7)
             )
            )
           )
          )
          (set_local $5
           (i32.add
            (get_local $14)
            (i32.const 2)
           )
          )
          (set_local $8
           (i32.add
            (get_local $14)
            (i32.const 4)
           )
          )
          (set_local $11
           (i32.add
            (get_local $14)
            (i32.const 6)
           )
          )
          (set_local $18
           (i32.add
            (get_local $14)
            (i32.const 8)
           )
          )
          (set_local $19
           (i32.load
            (get_local $24)
           )
          )
          (set_local $6
           (i32.add
            (get_local $23)
            (i32.shl
             (i32.add
              (i32.sub
               (get_local $3)
               (get_local $4)
              )
              (i32.const 2)
             )
             (i32.const 2)
            )
           )
          )
          (set_local $4
           (i32.const 0)
          )
          (loop $while-in9 (result i32)
           (if (result i32)
            (i32.lt_s
             (get_local $4)
             (get_local $19)
            )
            (block
             (i32.store
              (i32.add
               (get_local $27)
               (i32.shl
                (get_local $4)
                (i32.const 2)
               )
              )
              (tee_local $13
               (i32.add
                (i32.load
                 (i32.add
                  (get_local $16)
                  (i32.shl
                   (get_local $4)
                   (i32.const 2)
                  )
                 )
                )
                (i32.shl
                 (i32.add
                  (i32.add
                   (i32.add
                    (i32.add
                     (i32.add
                      (i32.add
                       (i32.mul
                        (i32.shr_s
                         (tee_local $13
                          (i32.load
                           (get_local $6)
                          )
                         )
                         (i32.const 16)
                        )
                        (tee_local $15
                         (i32.load16_s
                          (get_local $14)
                         )
                        )
                       )
                       (i32.shr_s
                        (i32.mul
                         (i32.and
                          (get_local $13)
                          (i32.const 65535)
                         )
                         (get_local $15)
                        )
                        (i32.const 16)
                       )
                      )
                      (i32.const 2)
                     )
                     (i32.add
                      (i32.mul
                       (i32.shr_s
                        (tee_local $13
                         (i32.load
                          (i32.add
                           (get_local $6)
                           (i32.const -4)
                          )
                         )
                        )
                        (i32.const 16)
                       )
                       (tee_local $15
                        (i32.load16_s
                         (get_local $5)
                        )
                       )
                      )
                      (i32.shr_s
                       (i32.mul
                        (i32.and
                         (get_local $13)
                         (i32.const 65535)
                        )
                        (get_local $15)
                       )
                       (i32.const 16)
                      )
                     )
                    )
                    (i32.add
                     (i32.mul
                      (i32.shr_s
                       (tee_local $13
                        (i32.load
                         (i32.add
                          (get_local $6)
                          (i32.const -8)
                         )
                        )
                       )
                       (i32.const 16)
                      )
                      (tee_local $15
                       (i32.load16_s
                        (get_local $8)
                       )
                      )
                     )
                     (i32.shr_s
                      (i32.mul
                       (i32.and
                        (get_local $13)
                        (i32.const 65535)
                       )
                       (get_local $15)
                      )
                      (i32.const 16)
                     )
                    )
                   )
                   (i32.add
                    (i32.mul
                     (i32.shr_s
                      (tee_local $13
                       (i32.load
                        (i32.add
                         (get_local $6)
                         (i32.const -12)
                        )
                       )
                      )
                      (i32.const 16)
                     )
                     (tee_local $15
                      (i32.load16_s
                       (get_local $11)
                      )
                     )
                    )
                    (i32.shr_s
                     (i32.mul
                      (i32.and
                       (get_local $13)
                       (i32.const 65535)
                      )
                      (get_local $15)
                     )
                     (i32.const 16)
                    )
                   )
                  )
                  (i32.add
                   (i32.mul
                    (i32.shr_s
                     (tee_local $13
                      (i32.load
                       (i32.add
                        (get_local $6)
                        (i32.const -16)
                       )
                      )
                     )
                     (i32.const 16)
                    )
                    (tee_local $15
                     (i32.load16_s
                      (get_local $18)
                     )
                    )
                   )
                   (i32.shr_s
                    (i32.mul
                     (i32.and
                      (get_local $13)
                      (i32.const 65535)
                     )
                     (get_local $15)
                    )
                    (i32.const 16)
                   )
                  )
                 )
                 (i32.const 1)
                )
               )
              )
             )
             (i32.store
              (i32.add
               (get_local $23)
               (i32.shl
                (get_local $3)
                (i32.const 2)
               )
              )
              (i32.shl
               (get_local $13)
               (i32.const 1)
              )
             )
             (set_local $6
              (i32.add
               (get_local $6)
               (i32.const 4)
              )
             )
             (set_local $3
              (i32.add
               (get_local $3)
               (i32.const 1)
              )
             )
             (set_local $4
              (i32.add
               (get_local $4)
               (i32.const 1)
              )
             )
             (br $while-in9)
            )
            (get_local $27)
           )
          )
         )
        )
        (set_local $11
         (i32.shr_s
          (i32.shl
           (get_local $25)
           (i32.const 16)
          )
          (i32.const 16)
         )
        )
        (set_local $18
         (i32.shr_s
          (i32.add
           (i32.shr_s
            (get_local $17)
            (i32.const 21)
           )
           (i32.const 1)
          )
          (i32.const 1)
         )
        )
        (set_local $8
         (i32.const 0)
        )
        (loop $while-in11
         (if
          (i32.lt_s
           (get_local $8)
           (tee_local $4
            (i32.load
             (get_local $24)
            )
           )
          )
          (block
           (block $switch
            (block $switch-default
             (block $switch-case
              (br_table $switch-case $switch-default $switch-default $switch-default $switch-default $switch-default $switch-case $switch-default
               (i32.sub
                (tee_local $4
                 (i32.load
                  (get_local $21)
                 )
                )
                (i32.const 10)
               )
              )
             )
             (br $switch)
            )
            (br $__rjti$3)
           )
           (set_local $4
            (i32.add
             (i32.add
              (i32.add
               (i32.add
                (i32.add
                 (i32.add
                  (i32.add
                   (i32.add
                    (i32.add
                     (i32.add
                      (i32.shr_s
                       (get_local $4)
                       (i32.const 1)
                      )
                      (i32.add
                       (i32.mul
                        (i32.shr_s
                         (tee_local $4
                          (i32.load
                           (i32.add
                            (get_local $7)
                            (i32.shl
                             (i32.add
                              (get_local $8)
                              (i32.const 15)
                             )
                             (i32.const 2)
                            )
                           )
                          )
                         )
                         (i32.const 16)
                        )
                        (tee_local $5
                         (i32.load16_s
                          (get_local $9)
                         )
                        )
                       )
                       (i32.shr_s
                        (i32.mul
                         (i32.and
                          (get_local $4)
                          (i32.const 65535)
                         )
                         (get_local $5)
                        )
                        (i32.const 16)
                       )
                      )
                     )
                     (i32.add
                      (i32.mul
                       (i32.shr_s
                        (tee_local $4
                         (i32.load
                          (i32.add
                           (get_local $7)
                           (i32.shl
                            (i32.add
                             (get_local $8)
                             (i32.const 14)
                            )
                            (i32.const 2)
                           )
                          )
                         )
                        )
                        (i32.const 16)
                       )
                       (tee_local $5
                        (i32.load16_s
                         (get_local $32)
                        )
                       )
                      )
                      (i32.shr_s
                       (i32.mul
                        (i32.and
                         (get_local $4)
                         (i32.const 65535)
                        )
                        (get_local $5)
                       )
                       (i32.const 16)
                      )
                     )
                    )
                    (i32.add
                     (i32.mul
                      (i32.shr_s
                       (tee_local $4
                        (i32.load
                         (i32.add
                          (get_local $7)
                          (i32.shl
                           (i32.add
                            (get_local $8)
                            (i32.const 13)
                           )
                           (i32.const 2)
                          )
                         )
                        )
                       )
                       (i32.const 16)
                      )
                      (tee_local $5
                       (i32.load16_s
                        (get_local $33)
                       )
                      )
                     )
                     (i32.shr_s
                      (i32.mul
                       (i32.and
                        (get_local $4)
                        (i32.const 65535)
                       )
                       (get_local $5)
                      )
                      (i32.const 16)
                     )
                    )
                   )
                   (i32.add
                    (i32.mul
                     (i32.shr_s
                      (tee_local $4
                       (i32.load
                        (i32.add
                         (get_local $7)
                         (i32.shl
                          (i32.add
                           (get_local $8)
                           (i32.const 12)
                          )
                          (i32.const 2)
                         )
                        )
                       )
                      )
                      (i32.const 16)
                     )
                     (tee_local $5
                      (i32.load16_s
                       (get_local $34)
                      )
                     )
                    )
                    (i32.shr_s
                     (i32.mul
                      (i32.and
                       (get_local $4)
                       (i32.const 65535)
                      )
                      (get_local $5)
                     )
                     (i32.const 16)
                    )
                   )
                  )
                  (i32.add
                   (i32.mul
                    (i32.shr_s
                     (tee_local $4
                      (i32.load
                       (i32.add
                        (get_local $7)
                        (i32.shl
                         (i32.add
                          (get_local $8)
                          (i32.const 11)
                         )
                         (i32.const 2)
                        )
                       )
                      )
                     )
                     (i32.const 16)
                    )
                    (tee_local $5
                     (i32.load16_s
                      (get_local $35)
                     )
                    )
                   )
                   (i32.shr_s
                    (i32.mul
                     (i32.and
                      (get_local $4)
                      (i32.const 65535)
                     )
                     (get_local $5)
                    )
                    (i32.const 16)
                   )
                  )
                 )
                 (i32.add
                  (i32.mul
                   (i32.shr_s
                    (tee_local $4
                     (i32.load
                      (i32.add
                       (get_local $7)
                       (i32.shl
                        (i32.add
                         (get_local $8)
                         (i32.const 10)
                        )
                        (i32.const 2)
                       )
                      )
                     )
                    )
                    (i32.const 16)
                   )
                   (tee_local $5
                    (i32.load16_s
                     (get_local $36)
                    )
                   )
                  )
                  (i32.shr_s
                   (i32.mul
                    (i32.and
                     (get_local $4)
                     (i32.const 65535)
                    )
                    (get_local $5)
                   )
                   (i32.const 16)
                  )
                 )
                )
                (i32.add
                 (i32.mul
                  (i32.shr_s
                   (tee_local $4
                    (i32.load
                     (i32.add
                      (get_local $7)
                      (i32.shl
                       (i32.add
                        (get_local $8)
                        (i32.const 9)
                       )
                       (i32.const 2)
                      )
                     )
                    )
                   )
                   (i32.const 16)
                  )
                  (tee_local $5
                   (i32.load16_s
                    (get_local $37)
                   )
                  )
                 )
                 (i32.shr_s
                  (i32.mul
                   (i32.and
                    (get_local $4)
                    (i32.const 65535)
                   )
                   (get_local $5)
                  )
                  (i32.const 16)
                 )
                )
               )
               (i32.add
                (i32.mul
                 (i32.shr_s
                  (tee_local $4
                   (i32.load
                    (i32.add
                     (get_local $7)
                     (i32.shl
                      (i32.add
                       (get_local $8)
                       (i32.const 8)
                      )
                      (i32.const 2)
                     )
                    )
                   )
                  )
                  (i32.const 16)
                 )
                 (tee_local $5
                  (i32.load16_s
                   (get_local $38)
                  )
                 )
                )
                (i32.shr_s
                 (i32.mul
                  (i32.and
                   (get_local $4)
                   (i32.const 65535)
                  )
                  (get_local $5)
                 )
                 (i32.const 16)
                )
               )
              )
              (i32.add
               (i32.mul
                (i32.shr_s
                 (tee_local $4
                  (i32.load
                   (i32.add
                    (get_local $7)
                    (i32.shl
                     (i32.add
                      (get_local $8)
                      (i32.const 7)
                     )
                     (i32.const 2)
                    )
                   )
                  )
                 )
                 (i32.const 16)
                )
                (tee_local $5
                 (i32.load16_s
                  (get_local $39)
                 )
                )
               )
               (i32.shr_s
                (i32.mul
                 (i32.and
                  (get_local $4)
                  (i32.const 65535)
                 )
                 (get_local $5)
                )
                (i32.const 16)
               )
              )
             )
             (i32.add
              (i32.mul
               (i32.shr_s
                (tee_local $4
                 (i32.load
                  (i32.add
                   (get_local $7)
                   (i32.shl
                    (i32.add
                     (get_local $8)
                     (i32.const 6)
                    )
                    (i32.const 2)
                   )
                  )
                 )
                )
                (i32.const 16)
               )
               (tee_local $5
                (i32.load16_s
                 (get_local $40)
                )
               )
              )
              (i32.shr_s
               (i32.mul
                (i32.and
                 (get_local $4)
                 (i32.const 65535)
                )
                (get_local $5)
               )
               (i32.const 16)
              )
             )
            )
           )
           (if
            (i32.eq
             (i32.load
              (get_local $21)
             )
             (i32.const 16)
            )
            (set_local $4
             (i32.add
              (i32.add
               (i32.add
                (i32.add
                 (i32.add
                  (i32.add
                   (get_local $4)
                   (i32.add
                    (i32.mul
                     (i32.shr_s
                      (tee_local $4
                       (i32.load
                        (i32.add
                         (get_local $7)
                         (i32.shl
                          (i32.add
                           (get_local $8)
                           (i32.const 5)
                          )
                          (i32.const 2)
                         )
                        )
                       )
                      )
                      (i32.const 16)
                     )
                     (tee_local $5
                      (i32.load16_s
                       (get_local $41)
                      )
                     )
                    )
                    (i32.shr_s
                     (i32.mul
                      (i32.and
                       (get_local $4)
                       (i32.const 65535)
                      )
                      (get_local $5)
                     )
                     (i32.const 16)
                    )
                   )
                  )
                  (i32.add
                   (i32.mul
                    (i32.shr_s
                     (tee_local $4
                      (i32.load
                       (i32.add
                        (get_local $7)
                        (i32.shl
                         (i32.add
                          (get_local $8)
                          (i32.const 4)
                         )
                         (i32.const 2)
                        )
                       )
                      )
                     )
                     (i32.const 16)
                    )
                    (tee_local $5
                     (i32.load16_s
                      (get_local $42)
                     )
                    )
                   )
                   (i32.shr_s
                    (i32.mul
                     (i32.and
                      (get_local $4)
                      (i32.const 65535)
                     )
                     (get_local $5)
                    )
                    (i32.const 16)
                   )
                  )
                 )
                 (i32.add
                  (i32.mul
                   (i32.shr_s
                    (tee_local $4
                     (i32.load
                      (i32.add
                       (get_local $7)
                       (i32.shl
                        (i32.add
                         (get_local $8)
                         (i32.const 3)
                        )
                        (i32.const 2)
                       )
                      )
                     )
                    )
                    (i32.const 16)
                   )
                   (tee_local $5
                    (i32.load16_s
                     (get_local $43)
                    )
                   )
                  )
                  (i32.shr_s
                   (i32.mul
                    (i32.and
                     (get_local $4)
                     (i32.const 65535)
                    )
                    (get_local $5)
                   )
                   (i32.const 16)
                  )
                 )
                )
                (i32.add
                 (i32.mul
                  (i32.shr_s
                   (tee_local $4
                    (i32.load
                     (i32.add
                      (get_local $7)
                      (i32.shl
                       (i32.add
                        (get_local $8)
                        (i32.const 2)
                       )
                       (i32.const 2)
                      )
                     )
                    )
                   )
                   (i32.const 16)
                  )
                  (tee_local $5
                   (i32.load16_s
                    (get_local $44)
                   )
                  )
                 )
                 (i32.shr_s
                  (i32.mul
                   (i32.and
                    (get_local $4)
                    (i32.const 65535)
                   )
                   (get_local $5)
                  )
                  (i32.const 16)
                 )
                )
               )
               (i32.add
                (i32.mul
                 (i32.shr_s
                  (tee_local $4
                   (i32.load
                    (i32.add
                     (get_local $7)
                     (i32.shl
                      (i32.add
                       (get_local $8)
                       (i32.const 1)
                      )
                      (i32.const 2)
                     )
                    )
                   )
                  )
                  (i32.const 16)
                 )
                 (tee_local $5
                  (i32.load16_s
                   (get_local $45)
                  )
                 )
                )
                (i32.shr_s
                 (i32.mul
                  (i32.and
                   (get_local $4)
                   (i32.const 65535)
                  )
                  (get_local $5)
                 )
                 (i32.const 16)
                )
               )
              )
              (i32.add
               (i32.mul
                (i32.shr_s
                 (tee_local $4
                  (i32.load
                   (i32.add
                    (get_local $7)
                    (i32.shl
                     (get_local $8)
                     (i32.const 2)
                    )
                   )
                  )
                 )
                 (i32.const 16)
                )
                (tee_local $5
                 (i32.load16_s
                  (get_local $46)
                 )
                )
               )
               (i32.shr_s
                (i32.mul
                 (i32.and
                  (get_local $4)
                  (i32.const 65535)
                 )
                 (get_local $5)
                )
                (i32.const 16)
               )
              )
             )
            )
           )
           (set_local $14
            (i32.load
             (i32.add
              (get_local $6)
              (i32.shl
               (get_local $8)
               (i32.const 2)
              )
             )
            )
           )
           (set_local $17
            (i32.gt_s
             (get_local $4)
             (i32.const 134217727)
            )
           )
           (set_local $5
            (i32.shl
             (if (result i32)
              (i32.gt_s
               (get_local $4)
               (i32.const -134217728)
              )
              (get_local $4)
              (i32.const -134217728)
             )
             (i32.const 4)
            )
           )
           (set_local $25
            (i32.gt_s
             (i32.add
              (get_local $14)
              (if (result i32)
               (get_local $17)
               (i32.const 2147483632)
               (get_local $5)
              )
             )
             (i32.const -1)
            )
           )
           (set_local $5
            (i32.shl
             (if (result i32)
              (i32.gt_s
               (get_local $4)
               (i32.const -134217728)
              )
              (get_local $4)
              (i32.const -134217728)
             )
             (i32.const 4)
            )
           )
           (if
            (get_local $17)
            (set_local $5
             (i32.const 2147483632)
            )
           )
           (i32.store
            (i32.add
             (get_local $7)
             (i32.shl
              (i32.add
               (get_local $8)
               (i32.const 16)
              )
              (i32.const 2)
             )
            )
            (tee_local $4
             (if (result i32)
              (get_local $25)
              (if (result i32)
               (i32.lt_s
                (i32.and
                 (get_local $14)
                 (get_local $5)
                )
                (i32.const 0)
               )
               (i32.const -2147483648)
               (block (result i32)
                (set_local $4
                 (i32.shl
                  (if (result i32)
                   (i32.gt_s
                    (get_local $4)
                    (i32.const -134217728)
                   )
                   (get_local $4)
                   (i32.const -134217728)
                  )
                  (i32.const 4)
                 )
                )
                (i32.add
                 (get_local $14)
                 (if (result i32)
                  (get_local $17)
                  (i32.const 2147483632)
                  (get_local $4)
                 )
                )
               )
              )
              (if (result i32)
               (i32.gt_s
                (i32.or
                 (get_local $14)
                 (get_local $5)
                )
                (i32.const -1)
               )
               (i32.const 2147483647)
               (block (result i32)
                (set_local $4
                 (i32.shl
                  (if (result i32)
                   (i32.gt_s
                    (get_local $4)
                    (i32.const -134217728)
                   )
                   (get_local $4)
                   (i32.const -134217728)
                  )
                  (i32.const 4)
                 )
                )
                (i32.add
                 (get_local $14)
                 (if (result i32)
                  (get_local $17)
                  (i32.const 2147483632)
                  (get_local $4)
                 )
                )
               )
              )
             )
            )
           )
           (i32.store16
            (i32.add
             (get_local $20)
             (i32.shl
              (get_local $8)
              (i32.const 1)
             )
            )
            (tee_local $4
             (if (result i32)
              (i32.gt_s
               (tee_local $4
                (i32.add
                 (i32.add
                  (i32.mul
                   (i32.shr_s
                    (get_local $4)
                    (i32.const 16)
                   )
                   (get_local $11)
                  )
                  (i32.shr_s
                   (i32.mul
                    (i32.and
                     (get_local $4)
                     (i32.const 65535)
                    )
                    (get_local $11)
                   )
                   (i32.const 16)
                  )
                 )
                 (i32.mul
                  (get_local $4)
                  (get_local $18)
                 )
                )
               )
               (i32.const 8388479)
              )
              (i32.const 32767)
              (if (result i32)
               (i32.lt_s
                (get_local $4)
                (i32.const -8388736)
               )
               (i32.const -32768)
               (i32.shr_s
                (i32.add
                 (i32.shr_s
                  (get_local $4)
                  (i32.const 7)
                 )
                 (i32.const 1)
                )
                (i32.const 1)
               )
              )
             )
            )
           )
           (set_local $8
            (i32.add
             (get_local $8)
             (i32.const 1)
            )
           )
           (br $while-in11)
          )
         )
        )
        (i64.store align=4
         (get_local $7)
         (i64.load align=4
          (tee_local $6
           (i32.add
            (get_local $7)
            (i32.shl
             (get_local $4)
             (i32.const 2)
            )
           )
          )
         )
        )
        (i64.store offset=8 align=4
         (get_local $7)
         (i64.load offset=8 align=4
          (get_local $6)
         )
        )
        (i64.store offset=16 align=4
         (get_local $7)
         (i64.load offset=16 align=4
          (get_local $6)
         )
        )
        (i64.store offset=24 align=4
         (get_local $7)
         (i64.load offset=24 align=4
          (get_local $6)
         )
        )
        (i64.store offset=32 align=4
         (get_local $7)
         (i64.load offset=32 align=4
          (get_local $6)
         )
        )
        (i64.store offset=40 align=4
         (get_local $7)
         (i64.load offset=40 align=4
          (get_local $6)
         )
        )
        (i64.store offset=48 align=4
         (get_local $7)
         (i64.load offset=48 align=4
          (get_local $6)
         )
        )
        (i64.store offset=56 align=4
         (get_local $7)
         (i64.load offset=56 align=4
          (get_local $6)
         )
        )
        (set_local $16
         (i32.add
          (get_local $16)
          (i32.shl
           (get_local $4)
           (i32.const 2)
          )
         )
        )
        (set_local $20
         (i32.add
          (get_local $20)
          (i32.shl
           (get_local $4)
           (i32.const 1)
          )
         )
        )
        (set_local $12
         (i32.add
          (get_local $12)
          (i32.const 1)
         )
        )
        (br $label$continue$L10)
       )
      )
     )
     (call $_celt_fatal
      (i32.const 45431)
      (i32.const 43836)
      (i32.const 144)
     )
     (br $__rjto$4)
    )
    (call $_celt_fatal
     (i32.const 43855)
     (i32.const 43836)
     (i32.const 199)
    )
    (br $__rjto$4)
   )
   (i64.store align=4
    (get_local $10)
    (i64.load align=4
     (get_local $7)
    )
   )
   (i64.store offset=8 align=4
    (get_local $10)
    (i64.load offset=8 align=4
     (get_local $7)
    )
   )
   (i64.store offset=16 align=4
    (get_local $10)
    (i64.load offset=16 align=4
     (get_local $7)
    )
   )
   (i64.store offset=24 align=4
    (get_local $10)
    (i64.load offset=24 align=4
     (get_local $7)
    )
   )
   (i64.store offset=32 align=4
    (get_local $10)
    (i64.load offset=32 align=4
     (get_local $7)
    )
   )
   (i64.store offset=40 align=4
    (get_local $10)
    (i64.load offset=40 align=4
     (get_local $7)
    )
   )
   (i64.store offset=48 align=4
    (get_local $10)
    (i64.load offset=48 align=4
     (get_local $7)
    )
   )
   (i64.store offset=56 align=4
    (get_local $10)
    (i64.load offset=56 align=4
     (get_local $7)
    )
   )
   (set_global $STACKTOP
    (get_local $9)
   )
  )
 )
 (func $_silk_INVERSE32_varQ (; 185 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (set_local $1
   (i32.sub
    (i32.const 0)
    (get_local $0)
   )
  )
  (set_local $1
   (call $_silk_CLZ32
    (if (result i32)
     (i32.gt_s
      (get_local $0)
      (i32.const 0)
     )
     (get_local $0)
     (get_local $1)
    )
   )
  )
  (set_local $0
   (i32.shr_s
    (tee_local $5
     (i32.shl
      (tee_local $4
       (i32.div_s
        (i32.const 536870911)
        (tee_local $3
         (i32.shr_s
          (tee_local $2
           (i32.shl
            (get_local $0)
            (i32.add
             (get_local $1)
             (i32.const -1)
            )
           )
          )
          (i32.const 16)
         )
        )
       )
      )
      (i32.const 16)
     )
    )
    (i32.const 16)
   )
  )
  (set_local $0
   (i32.add
    (i32.add
     (get_local $5)
     (i32.add
      (i32.mul
       (i32.shr_s
        (tee_local $2
         (i32.sub
          (i32.const 0)
          (i32.shl
           (i32.add
            (i32.mul
             (get_local $3)
             (get_local $0)
            )
            (i32.shr_s
             (i32.mul
              (i32.and
               (get_local $2)
               (i32.const 65535)
              )
              (get_local $0)
             )
             (i32.const 16)
            )
           )
           (i32.const 3)
          )
         )
        )
        (i32.const 16)
       )
       (get_local $0)
      )
      (i32.shr_s
       (i32.mul
        (i32.and
         (get_local $2)
         (i32.const 65528)
        )
        (get_local $0)
       )
       (i32.const 16)
      )
     )
    )
    (i32.mul
     (i32.shr_s
      (i32.add
       (i32.shr_s
        (get_local $4)
        (i32.const 15)
       )
       (i32.const 1)
      )
      (i32.const 1)
     )
     (get_local $2)
    )
   )
  )
  (if
   (i32.ge_s
    (tee_local $1
     (i32.sub
      (i32.const 62)
      (get_local $1)
     )
    )
    (i32.const 48)
   )
   (block
    (set_local $0
     (i32.shr_s
      (get_local $0)
      (i32.add
       (get_local $1)
       (i32.const -47)
      )
     )
    )
    (return
     (if (result i32)
      (i32.lt_s
       (get_local $1)
       (i32.const 79)
      )
      (get_local $0)
      (i32.const 0)
     )
    )
   )
  )
  (if (result i32)
   (i32.gt_s
    (tee_local $2
     (i32.shr_s
      (i32.const -2147483648)
      (tee_local $1
       (i32.sub
        (i32.const 47)
        (get_local $1)
       )
      )
     )
    )
    (tee_local $3
     (i32.shr_u
      (i32.const 2147483647)
      (get_local $1)
     )
    )
   )
   (block (result i32)
    (if
     (i32.gt_s
      (get_local $0)
      (get_local $2)
     )
     (return
      (i32.shl
       (get_local $2)
       (get_local $1)
      )
     )
    )
    (i32.shl
     (if (result i32)
      (i32.lt_s
       (get_local $0)
       (get_local $3)
      )
      (get_local $3)
      (get_local $0)
     )
     (get_local $1)
    )
   )
   (block (result i32)
    (if
     (i32.gt_s
      (get_local $0)
      (get_local $3)
     )
     (return
      (i32.shl
       (get_local $3)
       (get_local $1)
      )
     )
    )
    (i32.shl
     (if (result i32)
      (i32.lt_s
       (get_local $0)
       (get_local $2)
      )
      (get_local $2)
      (get_local $0)
     )
     (get_local $1)
    )
   )
  )
 )
 (func $_silk_DIV32_varQ (; 186 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (set_local $2
   (i32.sub
    (i32.const 0)
    (get_local $0)
   )
  )
  (set_local $2
   (call $_silk_CLZ32
    (if (result i32)
     (i32.gt_s
      (get_local $0)
      (i32.const 0)
     )
     (get_local $0)
     (get_local $2)
    )
   )
  )
  (set_local $0
   (i32.shl
    (get_local $0)
    (i32.add
     (get_local $2)
     (i32.const -1)
    )
   )
  )
  (set_local $3
   (i32.sub
    (i32.const 0)
    (get_local $1)
   )
  )
  (set_local $3
   (i32.add
    (call $_silk_CLZ32
     (if (result i32)
      (i32.gt_s
       (get_local $1)
       (i32.const 0)
      )
      (get_local $1)
      (get_local $3)
     )
    )
    (i32.const -1)
   )
  )
  (set_local $0
   (i32.add
    (tee_local $5
     (i32.add
      (i32.mul
       (i32.shr_s
        (get_local $0)
        (i32.const 16)
       )
       (tee_local $1
        (i32.shr_s
         (i32.shl
          (i32.div_s
           (i32.const 536870911)
           (i32.shr_s
            (tee_local $4
             (i32.shl
              (get_local $1)
              (get_local $3)
             )
            )
            (i32.const 16)
           )
          )
          (i32.const 16)
         )
         (i32.const 16)
        )
       )
      )
      (i32.shr_s
       (i32.mul
        (i32.and
         (get_local $0)
         (i32.const 65535)
        )
        (get_local $1)
       )
       (i32.const 16)
      )
     )
    )
    (i32.add
     (i32.mul
      (i32.shr_s
       (tee_local $0
        (i32.sub
         (get_local $0)
         (i32.and
          (i32.wrap/i64
           (i64.shr_u
            (i64.mul
             (i64.extend_s/i32
              (get_local $4)
             )
             (i64.extend_s/i32
              (get_local $5)
             )
            )
            (i64.const 29)
           )
          )
          (i32.const -8)
         )
        )
       )
       (i32.const 16)
      )
      (get_local $1)
     )
     (i32.shr_s
      (i32.mul
       (i32.and
        (get_local $0)
        (i32.const 65535)
       )
       (get_local $1)
      )
      (i32.const 16)
     )
    )
   )
  )
  (if
   (i32.ge_s
    (tee_local $1
     (i32.sub
      (i32.add
       (get_local $2)
       (i32.const 28)
      )
      (get_local $3)
     )
    )
    (i32.const 16)
   )
   (block
    (set_local $0
     (i32.shr_s
      (get_local $0)
      (i32.add
       (get_local $1)
       (i32.const -16)
      )
     )
    )
    (return
     (if (result i32)
      (i32.lt_s
       (get_local $1)
       (i32.const 48)
      )
      (get_local $0)
      (i32.const 0)
     )
    )
   )
  )
  (if (result i32)
   (i32.gt_s
    (tee_local $2
     (i32.shr_s
      (i32.const -2147483648)
      (tee_local $1
       (i32.sub
        (i32.const 16)
        (get_local $1)
       )
      )
     )
    )
    (tee_local $3
     (i32.shr_u
      (i32.const 2147483647)
      (get_local $1)
     )
    )
   )
   (block (result i32)
    (if
     (i32.gt_s
      (get_local $0)
      (get_local $2)
     )
     (return
      (i32.shl
       (get_local $2)
       (get_local $1)
      )
     )
    )
    (i32.shl
     (if (result i32)
      (i32.lt_s
       (get_local $0)
       (get_local $3)
      )
      (get_local $3)
      (get_local $0)
     )
     (get_local $1)
    )
   )
   (block (result i32)
    (if
     (i32.gt_s
      (get_local $0)
      (get_local $3)
     )
     (return
      (i32.shl
       (get_local $3)
       (get_local $1)
      )
     )
    )
    (i32.shl
     (if (result i32)
      (i32.lt_s
       (get_local $0)
       (get_local $2)
      )
      (get_local $2)
      (get_local $0)
     )
     (get_local $1)
    )
   )
  )
 )
 (func $_silk_decode_frame (; 187 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (result i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (set_local $6
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.const 144)
   )
  )
  (set_local $7
   (i32.load
    (tee_local $8
     (i32.add
      (get_local $0)
      (i32.const 2328)
     )
    )
   )
  )
  (i32.store offset=136
   (get_local $6)
   (i32.const 0)
  )
  (if
   (i32.ge_u
    (i32.add
     (get_local $7)
     (i32.const -1)
    )
    (i32.const 320)
   )
   (call $_celt_fatal
    (i32.const 43922)
    (i32.const 43971)
    (i32.const 58)
   )
  )
  (block $do-once
   (block $__rjti$1
    (block $__rjti$0
     (block $switch-default
      (block $switch-case0
       (block $switch-case
        (br_table $switch-case $switch-default $switch-case0 $switch-default
         (get_local $4)
        )
       )
       (set_local $9
        (i32.add
         (get_local $0)
         (i32.const 2388)
        )
       )
       (br $__rjti$0)
      )
      (br_if $__rjti$1
       (i32.ne
        (i32.load
         (i32.add
          (i32.add
           (get_local $0)
           (i32.const 2420)
          )
          (i32.shl
           (i32.load
            (tee_local $9
             (i32.add
              (get_local $0)
              (i32.const 2388)
             )
            )
           )
           (i32.const 2)
          )
         )
        )
        (i32.const 1)
       )
      )
      (br $__rjti$0)
     )
     (br $__rjti$1)
    )
    (set_local $11
     (i32.and
      (i32.add
       (get_local $7)
       (i32.const 15)
      )
      (i32.const -16)
     )
    )
    (set_local $12
     (call $_llvm_stacksave)
    )
    (set_local $10
     (get_global $STACKTOP)
    )
    (set_global $STACKTOP
     (i32.add
      (get_global $STACKTOP)
      (i32.and
       (i32.add
        (i32.shl
         (get_local $11)
         (i32.const 1)
        )
        (i32.const 15)
       )
       (i32.const -16)
      )
     )
    )
    (call $_silk_decode_indices
     (get_local $0)
     (get_local $1)
     (i32.load
      (get_local $9)
     )
     (get_local $4)
     (get_local $5)
    )
    (call $_silk_decode_pulses
     (get_local $1)
     (get_local $10)
     (i32.load8_s
      (tee_local $1
       (i32.add
        (get_local $0)
        (i32.const 2765)
       )
      )
     )
     (i32.load8_s
      (i32.add
       (get_local $0)
       (i32.const 2766)
      )
     )
     (i32.load
      (get_local $8)
     )
    )
    (call $_silk_decode_parameters
     (get_local $0)
     (get_local $6)
     (get_local $5)
    )
    (call $_silk_decode_core
     (get_local $0)
     (get_local $6)
     (get_local $2)
     (get_local $10)
    )
    (call $_silk_PLC
     (get_local $0)
     (get_local $6)
     (get_local $2)
     (i32.const 0)
    )
    (i32.store
     (i32.add
      (get_local $0)
      (i32.const 4160)
     )
     (i32.const 0)
    )
    (i32.store
     (i32.add
      (get_local $0)
      (i32.const 4164)
     )
     (tee_local $1
      (i32.load8_s
       (get_local $1)
      )
     )
    )
    (if
     (i32.lt_s
      (i32.and
       (get_local $1)
       (i32.const 255)
      )
      (i32.const 3)
     )
     (block
      (i32.store
       (i32.add
        (get_local $0)
        (i32.const 2376)
       )
       (i32.const 0)
      )
      (call $_llvm_stackrestore
       (get_local $12)
      )
      (br $do-once)
     )
     (call $_celt_fatal
      (i32.const 43991)
      (i32.const 43971)
      (i32.const 94)
     )
    )
    (br $do-once)
   )
   (i32.store8
    (i32.add
     (get_local $0)
     (i32.const 2765)
    )
    (i32.load
     (i32.add
      (get_local $0)
      (i32.const 4164)
     )
    )
   )
   (call $_silk_PLC
    (get_local $0)
    (get_local $6)
    (get_local $2)
    (i32.const 1)
   )
  )
  (if
   (i32.lt_s
    (tee_local $4
     (i32.load
      (i32.add
       (get_local $0)
       (i32.const 2336)
      )
     )
    )
    (tee_local $1
     (i32.load
      (get_local $8)
     )
    )
   )
   (call $_celt_fatal
    (i32.const 44066)
    (i32.const 43971)
    (i32.const 107)
   )
   (block
    (drop
     (call $_memmove
      (i32.add
       (get_local $0)
       (i32.const 1348)
      )
      (i32.add
       (i32.add
        (get_local $0)
        (i32.const 1348)
       )
       (i32.shl
        (get_local $1)
        (i32.const 1)
       )
      )
      (i32.shl
       (tee_local $1
        (i32.sub
         (get_local $4)
         (get_local $1)
        )
       )
       (i32.const 1)
      )
     )
    )
    (drop
     (call $_memcpy
      (i32.add
       (i32.add
        (get_local $0)
        (i32.const 1348)
       )
       (i32.shl
        (get_local $1)
        (i32.const 1)
       )
      )
      (get_local $2)
      (i32.shl
       (i32.load
        (get_local $8)
       )
       (i32.const 1)
      )
     )
    )
    (call $_silk_CNG
     (get_local $0)
     (get_local $6)
     (get_local $2)
     (get_local $7)
    )
    (call $_silk_PLC_glue_frames
     (get_local $0)
     (get_local $2)
     (get_local $7)
    )
    (i32.store
     (i32.add
      (get_local $0)
      (i32.const 2308)
     )
     (i32.load
      (i32.add
       (get_local $6)
       (i32.shl
        (i32.add
         (i32.load
          (i32.add
           (get_local $0)
           (i32.const 2324)
          )
         )
         (i32.const -1)
        )
        (i32.const 2)
       )
      )
     )
    )
    (i32.store
     (get_local $3)
     (get_local $7)
    )
    (set_global $STACKTOP
     (get_local $6)
    )
    (return
     (i32.const 0)
    )
   )
  )
  (i32.const 0)
 )
 (func $_silk_decode_parameters (; 188 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (set_local $5
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.sub
    (get_global $STACKTOP)
    (i32.const -64)
   )
  )
  (set_local $3
   (i32.add
    (get_local $5)
    (i32.const 32)
   )
  )
  (call $_silk_gains_dequant
   (i32.add
    (get_local $1)
    (i32.const 16)
   )
   (i32.add
    (get_local $0)
    (i32.const 2736)
   )
   (i32.add
    (get_local $0)
    (i32.const 2312)
   )
   (i32.eq
    (get_local $2)
    (i32.const 2)
   )
   (i32.load
    (tee_local $6
     (i32.add
      (get_local $0)
      (i32.const 2324)
     )
    )
   )
  )
  (call $_silk_NLSF_decode
   (get_local $3)
   (i32.add
    (get_local $0)
    (i32.const 2744)
   )
   (i32.load
    (i32.add
     (get_local $0)
     (i32.const 2732)
    )
   )
  )
  (call $_silk_NLSF2A
   (tee_local $7
    (i32.sub
     (get_local $1)
     (i32.const -64)
    )
   )
   (get_local $3)
   (i32.load
    (tee_local $4
     (i32.add
      (get_local $0)
      (i32.const 2340)
     )
    )
   )
  )
  (set_local $2
   (i32.add
    (get_local $0)
    (i32.const 2767)
   )
  )
  (block $__rjto$0
   (block $__rjti$0
    (if
     (i32.eq
      (i32.load
       (i32.add
        (get_local $0)
        (i32.const 2376)
       )
      )
      (i32.const 1)
     )
     (block
      (i32.store8
       (get_local $2)
       (i32.const 4)
      )
      (br $__rjti$0)
     )
     (block
      (br_if $__rjti$0
       (i32.ge_s
        (tee_local $9
         (i32.load8_s
          (get_local $2)
         )
        )
        (i32.const 4)
       )
      )
      (set_local $8
       (i32.load
        (get_local $4)
       )
      )
      (set_local $2
       (i32.const 0)
      )
      (loop $while-in
       (if
        (i32.lt_s
         (get_local $2)
         (get_local $8)
        )
        (block
         (i32.store16
          (i32.add
           (get_local $5)
           (i32.shl
            (get_local $2)
            (i32.const 1)
           )
          )
          (i32.add
           (i32.shr_u
            (i32.mul
             (i32.sub
              (i32.load16_s
               (i32.add
                (get_local $3)
                (i32.shl
                 (get_local $2)
                 (i32.const 1)
                )
               )
              )
              (tee_local $10
               (i32.load16_s
                (i32.add
                 (i32.add
                  (get_local $0)
                  (i32.const 2344)
                 )
                 (i32.shl
                  (get_local $2)
                  (i32.const 1)
                 )
                )
               )
              )
             )
             (get_local $9)
            )
            (i32.const 2)
           )
           (i32.and
            (get_local $10)
            (i32.const 65535)
           )
          )
         )
         (set_local $2
          (i32.add
           (get_local $2)
           (i32.const 1)
          )
         )
         (br $while-in)
        )
       )
      )
      (call $_silk_NLSF2A
       (i32.add
        (get_local $1)
        (i32.const 32)
       )
       (get_local $5)
       (get_local $8)
      )
     )
    )
    (br $__rjto$0)
   )
   (drop
    (call $_memcpy
     (i32.add
      (get_local $1)
      (i32.const 32)
     )
     (get_local $7)
     (i32.shl
      (i32.load
       (get_local $4)
      )
      (i32.const 1)
     )
    )
   )
  )
  (drop
   (call $_memcpy
    (i32.add
     (get_local $0)
     (i32.const 2344)
    )
    (get_local $3)
    (i32.shl
     (tee_local $2
      (i32.load
       (get_local $4)
      )
     )
     (i32.const 1)
    )
   )
  )
  (if
   (i32.load
    (i32.add
     (get_local $0)
     (i32.const 4160)
    )
   )
   (block
    (call $_silk_bwexpander
     (i32.add
      (get_local $1)
      (i32.const 32)
     )
     (get_local $2)
     (i32.const 63570)
    )
    (call $_silk_bwexpander
     (get_local $7)
     (i32.load
      (get_local $4)
     )
     (i32.const 63570)
    )
   )
  )
  (if
   (i32.ne
    (i32.load8_s
     (i32.add
      (get_local $0)
      (i32.const 2765)
     )
    )
    (i32.const 2)
   )
   (block
    (drop
     (call $_memset
      (get_local $1)
      (i32.const 0)
      (i32.shl
       (i32.load
        (get_local $6)
       )
       (i32.const 2)
      )
     )
    )
    (drop
     (call $_memset
      (i32.add
       (get_local $1)
       (i32.const 96)
      )
      (i32.const 0)
      (i32.mul
       (i32.load
        (get_local $6)
       )
       (i32.const 10)
      )
     )
    )
    (i32.store8
     (i32.add
      (get_local $0)
      (i32.const 2768)
     )
     (i32.const 0)
    )
    (i32.store offset=136
     (get_local $1)
     (i32.const 0)
    )
    (set_global $STACKTOP
     (get_local $5)
    )
    (return)
   )
  )
  (call $_silk_decode_pitch
   (i32.load16_s
    (i32.add
     (get_local $0)
     (i32.const 2762)
    )
   )
   (i32.load8_s
    (i32.add
     (get_local $0)
     (i32.const 2764)
    )
   )
   (get_local $1)
   (i32.load
    (i32.add
     (get_local $0)
     (i32.const 2316)
    )
   )
   (i32.load
    (get_local $6)
   )
  )
  (set_local $4
   (i32.load
    (i32.add
     (i32.shl
      (i32.load8_s
       (i32.add
        (get_local $0)
        (i32.const 2768)
       )
      )
      (i32.const 2)
     )
     (i32.const 40844)
    )
   )
  )
  (set_local $2
   (i32.const 0)
  )
  (loop $while-in1
   (if
    (i32.lt_s
     (get_local $2)
     (i32.load
      (get_local $6)
     )
    )
    (block
     (set_local $7
      (i32.mul
       (i32.load8_s
        (i32.add
         (i32.add
          (get_local $0)
          (i32.const 2740)
         )
         (get_local $2)
        )
       )
       (i32.const 5)
      )
     )
     (set_local $8
      (i32.mul
       (get_local $2)
       (i32.const 5)
      )
     )
     (set_local $3
      (i32.const 0)
     )
     (loop $while-in3
      (if
       (i32.ne
        (get_local $3)
        (i32.const 5)
       )
       (block
        (i32.store16
         (i32.add
          (i32.add
           (get_local $1)
           (i32.const 96)
          )
          (i32.shl
           (i32.add
            (get_local $8)
            (get_local $3)
           )
           (i32.const 1)
          )
         )
         (i32.shl
          (i32.load8_s
           (i32.add
            (get_local $4)
            (i32.add
             (get_local $7)
             (get_local $3)
            )
           )
          )
          (i32.const 7)
         )
        )
        (set_local $3
         (i32.add
          (get_local $3)
          (i32.const 1)
         )
        )
        (br $while-in3)
       )
      )
     )
     (set_local $2
      (i32.add
       (get_local $2)
       (i32.const 1)
      )
     )
     (br $while-in1)
    )
   )
  )
  (i32.store offset=136
   (get_local $1)
   (i32.load16_s
    (i32.add
     (i32.shl
      (i32.load8_s
       (i32.add
        (get_local $0)
        (i32.const 2769)
       )
      )
      (i32.const 1)
     )
     (i32.const 41172)
    )
   )
  )
  (set_global $STACKTOP
   (get_local $5)
  )
 )
 (func $_silk_decode_indices (; 189 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (set_local $5
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.const 48)
   )
  )
  (set_local $10
   (i32.add
    (get_local $5)
    (i32.const 16)
   )
  )
  (set_local $7
   (get_local $5)
  )
  (set_local $2
   (block $__rjto$0 (result i32)
    (block $__rjti$0
     (br_if $__rjti$0
      (get_local $3)
     )
     (br_if $__rjti$0
      (i32.load
       (i32.add
        (i32.add
         (get_local $0)
         (i32.const 2404)
        )
        (i32.shl
         (get_local $2)
         (i32.const 2)
        )
       )
      )
     )
     (br $__rjto$0
      (call $_ec_dec_icdf
       (get_local $1)
       (i32.const 45703)
       (i32.const 8)
      )
     )
    )
    (i32.add
     (call $_ec_dec_icdf
      (get_local $1)
      (i32.const 45699)
      (i32.const 8)
     )
     (i32.const 2)
    )
   )
  )
  (i32.store8
   (tee_local $6
    (i32.add
     (get_local $0)
     (i32.const 2765)
    )
   )
   (tee_local $3
    (i32.shr_u
     (get_local $2)
     (i32.const 1)
    )
   )
  )
  (i32.store8
   (i32.add
    (get_local $0)
    (i32.const 2766)
   )
   (i32.and
    (get_local $2)
    (i32.const 1)
   )
  )
  (if
   (tee_local $11
    (i32.eq
     (get_local $4)
     (i32.const 2)
    )
   )
   (block
    (set_local $2
     (i32.and
      (call $_ec_dec_icdf
       (get_local $1)
       (i32.const 21856)
       (i32.const 8)
      )
      (i32.const 255)
     )
    )
    (i32.store8
     (i32.add
      (get_local $0)
      (i32.const 2736)
     )
     (get_local $2)
    )
   )
   (block
    (set_local $3
     (i32.and
      (i32.shl
       (call $_ec_dec_icdf
        (get_local $1)
        (i32.add
         (i32.shl
          (i32.shr_s
           (i32.shl
            (get_local $3)
            (i32.const 24)
           )
           (i32.const 24)
          )
          (i32.const 3)
         )
         (i32.const 21824)
        )
        (i32.const 8)
       )
       (i32.const 3)
      )
      (i32.const 255)
     )
    )
    (i32.store8
     (tee_local $2
      (i32.add
       (get_local $0)
       (i32.const 2736)
      )
     )
     (get_local $3)
    )
    (set_local $3
     (call $_ec_dec_icdf
      (get_local $1)
      (i32.const 45728)
      (i32.const 8)
     )
    )
    (i32.store8
     (get_local $2)
     (i32.add
      (get_local $3)
      (i32.load8_u
       (get_local $2)
      )
     )
    )
   )
  )
  (set_local $8
   (i32.add
    (get_local $0)
    (i32.const 2324)
   )
  )
  (set_local $2
   (i32.const 1)
  )
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $2)
     (i32.load
      (get_local $8)
     )
    )
    (block
     (set_local $3
      (i32.and
       (call $_ec_dec_icdf
        (get_local $1)
        (i32.const 21856)
        (i32.const 8)
       )
       (i32.const 255)
      )
     )
     (i32.store8
      (i32.add
       (i32.add
        (get_local $0)
        (i32.const 2736)
       )
       (get_local $2)
      )
      (get_local $3)
     )
     (set_local $2
      (i32.add
       (get_local $2)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (set_local $2
   (call $_ec_dec_icdf
    (get_local $1)
    (i32.add
     (i32.load offset=16
      (tee_local $2
       (i32.load
        (tee_local $9
         (i32.add
          (get_local $0)
          (i32.const 2732)
         )
        )
       )
      )
     )
     (i32.mul
      (i32.shr_s
       (i32.load8_s
        (get_local $6)
       )
       (i32.const 1)
      )
      (i32.load16_s
       (get_local $2)
      )
     )
    )
    (i32.const 8)
   )
  )
  (i32.store8
   (i32.add
    (get_local $0)
    (i32.const 2744)
   )
   (get_local $2)
  )
  (call $_silk_NLSF_unpack
   (get_local $10)
   (get_local $7)
   (i32.load
    (get_local $9)
   )
   (i32.shr_s
    (i32.shl
     (get_local $2)
     (i32.const 24)
    )
    (i32.const 24)
   )
  )
  (if
   (i32.ne
    (i32.load
     (i32.add
      (get_local $0)
      (i32.const 2340)
     )
    )
    (tee_local $5
     (i32.load16_s offset=2
      (tee_local $2
       (i32.load
        (get_local $9)
       )
      )
     )
    )
   )
   (call $_celt_fatal
    (i32.const 44129)
    (i32.const 44191)
    (i32.const 82)
   )
  )
  (set_local $3
   (i32.const 0)
  )
  (loop $while-in1
   (if
    (i32.lt_s
     (get_local $3)
     (i32.shr_s
      (i32.shl
       (get_local $5)
       (i32.const 16)
      )
      (i32.const 16)
     )
    )
    (block
     (block $switch
      (block $switch-default
       (block $switch-case2
        (block $switch-case
         (br_table $switch-case $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-case2 $switch-default
          (tee_local $2
           (call $_ec_dec_icdf
            (get_local $1)
            (i32.add
             (i32.load offset=28
              (get_local $2)
             )
             (i32.load16_s
              (i32.add
               (get_local $10)
               (i32.shl
                (get_local $3)
                (i32.const 1)
               )
              )
             )
            )
            (i32.const 8)
           )
          )
         )
        )
        (set_local $2
         (i32.sub
          (i32.const 0)
          (call $_ec_dec_icdf
           (get_local $1)
           (i32.const 45736)
           (i32.const 8)
          )
         )
        )
        (br $switch)
       )
       (set_local $2
        (i32.add
         (call $_ec_dec_icdf
          (get_local $1)
          (i32.const 45736)
          (i32.const 8)
         )
         (i32.const 8)
        )
       )
      )
     )
     (i32.store8
      (i32.add
       (i32.add
        (get_local $0)
        (i32.const 2744)
       )
       (tee_local $3
        (i32.add
         (get_local $3)
         (i32.const 1)
        )
       )
      )
      (i32.add
       (get_local $2)
       (i32.const 252)
      )
     )
     (set_local $5
      (i32.load16_s offset=2
       (tee_local $2
        (i32.load
         (get_local $9)
        )
       )
      )
     )
     (br $while-in1)
    )
   )
  )
  (set_local $2
   (if (result i32)
    (i32.eq
     (i32.load
      (get_local $8)
     )
     (i32.const 4)
    )
    (i32.and
     (call $_ec_dec_icdf
      (get_local $1)
      (i32.const 45705)
      (i32.const 8)
     )
     (i32.const 255)
    )
    (i32.const 4)
   )
  )
  (i32.store8
   (i32.add
    (get_local $0)
    (i32.const 2767)
   )
   (get_local $2)
  )
  (if
   (i32.ne
    (i32.load8_s
     (get_local $6)
    )
    (i32.const 2)
   )
   (block
    (i32.store
     (i32.add
      (get_local $0)
      (i32.const 2396)
     )
     (i32.load8_s
      (get_local $6)
     )
    )
    (set_local $1
     (i32.and
      (call $_ec_dec_icdf
       (get_local $1)
       (i32.const 45713)
       (i32.const 8)
      )
      (i32.const 255)
     )
    )
    (i32.store8
     (i32.add
      (get_local $0)
      (i32.const 2770)
     )
     (get_local $1)
    )
    (set_global $STACKTOP
     (get_local $7)
    )
    (return)
   )
  )
  (block $__rjto$1
   (block $__rjti$1
    (br_if $__rjti$1
     (i32.eqz
      (get_local $11)
     )
    )
    (br_if $__rjti$1
     (i32.ne
      (i32.load
       (i32.add
        (get_local $0)
        (i32.const 2396)
       )
      )
      (i32.const 2)
     )
    )
    (br_if $__rjti$1
     (i32.le_s
      (i32.shl
       (tee_local $2
        (call $_ec_dec_icdf
         (get_local $1)
         (i32.const 26048)
         (i32.const 8)
        )
       )
       (i32.const 16)
      )
      (i32.const 0)
     )
    )
    (i32.store16
     (i32.add
      (get_local $0)
      (i32.const 2762)
     )
     (tee_local $2
      (i32.and
       (i32.add
        (i32.add
         (get_local $2)
         (i32.const 65527)
        )
        (i32.load16_u
         (tee_local $3
          (i32.add
           (get_local $0)
           (i32.const 2400)
          )
         )
        )
       )
       (i32.const 65535)
      )
     )
    )
    (br $__rjto$1)
   )
   (set_local $2
    (i32.shr_s
     (i32.shl
      (call $_ec_dec_icdf
       (get_local $1)
       (i32.const 26016)
       (i32.const 8)
      )
      (i32.const 16)
     )
     (i32.const 16)
    )
   )
   (i32.store16
    (tee_local $3
     (i32.add
      (get_local $0)
      (i32.const 2762)
     )
    )
    (i32.mul
     (get_local $2)
     (i32.shr_s
      (i32.load
       (i32.add
        (get_local $0)
        (i32.const 2316)
       )
      )
      (i32.const 1)
     )
    )
   )
   (set_local $2
    (i32.and
     (i32.add
      (call $_ec_dec_icdf
       (get_local $1)
       (i32.load
        (i32.add
         (get_local $0)
         (i32.const 2380)
        )
       )
       (i32.const 8)
      )
      (i32.load16_u
       (get_local $3)
      )
     )
     (i32.const 65535)
    )
   )
   (i32.store16
    (get_local $3)
    (get_local $2)
   )
   (set_local $3
    (i32.add
     (get_local $0)
     (i32.const 2400)
    )
   )
  )
  (i32.store16
   (get_local $3)
   (get_local $2)
  )
  (set_local $2
   (i32.and
    (call $_ec_dec_icdf
     (get_local $1)
     (i32.load
      (i32.add
       (get_local $0)
       (i32.const 2384)
      )
     )
     (i32.const 8)
    )
    (i32.const 255)
   )
  )
  (i32.store8
   (i32.add
    (get_local $0)
    (i32.const 2764)
   )
   (get_local $2)
  )
  (set_local $2
   (i32.and
    (call $_ec_dec_icdf
     (get_local $1)
     (i32.const 45652)
     (i32.const 8)
    )
    (i32.const 255)
   )
  )
  (i32.store8
   (tee_local $3
    (i32.add
     (get_local $0)
     (i32.const 2768)
    )
   )
   (get_local $2)
  )
  (set_local $2
   (i32.const 0)
  )
  (loop $while-in4
   (if
    (i32.lt_s
     (get_local $2)
     (i32.load
      (get_local $8)
     )
    )
    (block
     (set_local $5
      (i32.and
       (call $_ec_dec_icdf
        (get_local $1)
        (i32.load
         (i32.add
          (i32.shl
           (i32.load8_s
            (get_local $3)
           )
           (i32.const 2)
          )
          (i32.const 40820)
         )
        )
        (i32.const 8)
       )
       (i32.const 255)
      )
     )
     (i32.store8
      (i32.add
       (i32.add
        (get_local $0)
        (i32.const 2740)
       )
       (get_local $2)
      )
      (get_local $5)
     )
     (set_local $2
      (i32.add
       (get_local $2)
       (i32.const 1)
      )
     )
     (br $while-in4)
    )
   )
  )
  (if
   (get_local $4)
   (i32.store8
    (i32.add
     (get_local $0)
     (i32.const 2769)
    )
    (i32.const 0)
   )
   (block
    (set_local $2
     (i32.and
      (call $_ec_dec_icdf
       (get_local $1)
       (i32.const 45696)
       (i32.const 8)
      )
      (i32.const 255)
     )
    )
    (i32.store8
     (i32.add
      (get_local $0)
      (i32.const 2769)
     )
     (get_local $2)
    )
   )
  )
  (i32.store
   (i32.add
    (get_local $0)
    (i32.const 2396)
   )
   (i32.load8_s
    (get_local $6)
   )
  )
  (set_local $1
   (i32.and
    (call $_ec_dec_icdf
     (get_local $1)
     (i32.const 45713)
     (i32.const 8)
    )
    (i32.const 255)
   )
  )
  (i32.store8
   (i32.add
    (get_local $0)
    (i32.const 2770)
   )
   (get_local $1)
  )
  (set_global $STACKTOP
   (get_local $7)
  )
 )
 (func $_silk_decode_pulses (; 190 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (set_local $5
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.const 160)
   )
  )
  (set_local $9
   (i32.add
    (get_local $5)
    (i32.const 80)
   )
  )
  (set_local $12
   (get_local $5)
  )
  (set_local $6
   (call $_ec_dec_icdf
    (get_local $0)
    (i32.add
     (i32.mul
      (i32.shr_s
       (get_local $2)
       (i32.const 1)
      )
      (i32.const 9)
     )
     (i32.const 26496)
    )
    (i32.const 8)
   )
  )
  (set_local $5
   (i32.shr_s
    (get_local $4)
    (i32.const 4)
   )
  )
  (if
   (i32.lt_s
    (i32.and
     (get_local $4)
     (i32.const -16)
    )
    (get_local $4)
   )
   (if
    (i32.eq
     (get_local $4)
     (i32.const 120)
    )
    (set_local $10
     (i32.add
      (get_local $5)
      (i32.const 1)
     )
    )
    (call $_celt_fatal
     (i32.const 45219)
     (i32.const 44213)
     (i32.const 59)
    )
   )
   (set_local $10
    (get_local $5)
   )
  )
  (set_local $8
   (i32.add
    (i32.mul
     (get_local $6)
     (i32.const 18)
    )
    (i32.const 26128)
   )
  )
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $7)
     (get_local $10)
    )
    (block
     (i32.store
      (tee_local $11
       (i32.add
        (get_local $12)
        (i32.shl
         (get_local $7)
         (i32.const 2)
        )
       )
      )
      (i32.const 0)
     )
     (set_local $6
      (call $_ec_dec_icdf
       (get_local $0)
       (get_local $8)
       (i32.const 8)
      )
     )
     (i32.store
      (tee_local $13
       (i32.add
        (get_local $9)
        (i32.shl
         (get_local $7)
         (i32.const 2)
        )
       )
      )
      (get_local $6)
     )
     (set_local $5
      (i32.const 0)
     )
     (loop $while-in1
      (if
       (i32.eq
        (get_local $6)
        (i32.const 17)
       )
       (block
        (i32.store
         (get_local $11)
         (tee_local $5
          (i32.add
           (get_local $5)
           (i32.const 1)
          )
         )
        )
        (set_local $6
         (call $_ec_dec_icdf
          (get_local $0)
          (i32.add
           (i32.eq
            (get_local $5)
            (i32.const 10)
           )
           (i32.const 26290)
          )
          (i32.const 8)
         )
        )
        (br $while-in1)
       )
      )
     )
     (i32.store
      (get_local $13)
      (get_local $6)
     )
     (set_local $7
      (i32.add
       (get_local $7)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (set_local $5
   (i32.const 0)
  )
  (loop $while-in3
   (if
    (i32.lt_s
     (get_local $5)
     (get_local $10)
    )
    (block
     (set_local $6
      (i32.add
       (get_local $1)
       (i32.shl
        (i32.shr_s
         (i32.shl
          (get_local $5)
          (i32.const 16)
         )
         (i32.const 12)
        )
        (i32.const 1)
       )
      )
     )
     (if
      (i32.gt_s
       (tee_local $7
        (i32.load
         (i32.add
          (get_local $9)
          (i32.shl
           (get_local $5)
           (i32.const 2)
          )
         )
        )
       )
       (i32.const 0)
      )
      (call $_silk_shell_decoder
       (get_local $6)
       (get_local $0)
       (get_local $7)
      )
      (block
       (i64.store align=2
        (get_local $6)
        (i64.const 0)
       )
       (i64.store offset=8 align=2
        (get_local $6)
        (i64.const 0)
       )
       (i64.store offset=16 align=2
        (get_local $6)
        (i64.const 0)
       )
       (i64.store offset=24 align=2
        (get_local $6)
        (i64.const 0)
       )
      )
     )
     (set_local $5
      (i32.add
       (get_local $5)
       (i32.const 1)
      )
     )
     (br $while-in3)
    )
   )
  )
  (set_local $5
   (i32.const 0)
  )
  (loop $while-in5
   (if
    (i32.lt_s
     (get_local $5)
     (get_local $10)
    )
    (block
     (if
      (i32.gt_s
       (tee_local $11
        (i32.load
         (i32.add
          (get_local $12)
          (i32.shl
           (get_local $5)
           (i32.const 2)
          )
         )
        )
       )
       (i32.const 0)
      )
      (block
       (set_local $13
        (i32.add
         (get_local $1)
         (i32.shl
          (i32.shr_s
           (i32.shl
            (get_local $5)
            (i32.const 16)
           )
           (i32.const 12)
          )
          (i32.const 1)
         )
        )
       )
       (set_local $6
        (i32.const 0)
       )
       (loop $while-in7
        (if
         (i32.ne
          (get_local $6)
          (i32.const 16)
         )
         (block
          (set_local $7
           (i32.load16_s
            (tee_local $14
             (i32.add
              (get_local $13)
              (i32.shl
               (get_local $6)
               (i32.const 1)
              )
             )
            )
           )
          )
          (set_local $8
           (i32.const 0)
          )
          (loop $while-in9
           (if
            (i32.ne
             (get_local $8)
             (get_local $11)
            )
            (block
             (set_local $15
              (call $_ec_dec_icdf
               (get_local $0)
               (i32.const 45694)
               (i32.const 8)
              )
             )
             (set_local $7
              (i32.add
               (i32.shl
                (get_local $7)
                (i32.const 1)
               )
               (get_local $15)
              )
             )
             (set_local $8
              (i32.add
               (get_local $8)
               (i32.const 1)
              )
             )
             (br $while-in9)
            )
           )
          )
          (i32.store16
           (get_local $14)
           (get_local $7)
          )
          (set_local $6
           (i32.add
            (get_local $6)
            (i32.const 1)
           )
          )
          (br $while-in7)
         )
        )
       )
       (i32.store
        (tee_local $6
         (i32.add
          (get_local $9)
          (i32.shl
           (get_local $5)
           (i32.const 2)
          )
         )
        )
        (i32.or
         (i32.load
          (get_local $6)
         )
         (i32.shl
          (get_local $11)
          (i32.const 5)
         )
        )
       )
      )
     )
     (set_local $5
      (i32.add
       (get_local $5)
       (i32.const 1)
      )
     )
     (br $while-in5)
    )
   )
  )
  (call $_silk_decode_signs
   (get_local $0)
   (get_local $1)
   (get_local $4)
   (get_local $2)
   (get_local $3)
   (get_local $9)
  )
  (set_global $STACKTOP
   (get_local $12)
  )
 )
 (func $_silk_decoder_set_fs (; 191 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (set_local $7
   (i32.eq
    (get_local $1)
    (i32.const 8)
   )
  )
  (block $switch
   (block $switch-default
    (block $switch-case
     (br_table $switch-case $switch-default $switch-default $switch-default $switch-case $switch-default $switch-default $switch-default $switch-case $switch-default
      (i32.sub
       (get_local $1)
       (i32.const 8)
      )
     )
    )
    (br $switch)
   )
   (call $_celt_fatal
    (i32.const 46646)
    (i32.const 44234)
    (i32.const 43)
   )
  )
  (block $switch2
   (block $switch-default5
    (block $switch-case3
     (br_table $switch-case3 $switch-default5 $switch-case3 $switch-default5
      (i32.sub
       (tee_local $3
        (i32.load
         (tee_local $4
          (i32.add
           (get_local $0)
           (i32.const 2324)
          )
         )
        )
       )
       (i32.const 2)
      )
     )
    )
    (br $switch2)
   )
   (call $_celt_fatal
    (i32.const 44256)
    (i32.const 44234)
    (i32.const 44)
   )
  )
  (i32.store
   (i32.add
    (get_local $0)
    (i32.const 2332)
   )
   (i32.mul
    (tee_local $5
     (i32.shr_s
      (i32.shl
       (get_local $1)
       (i32.const 16)
      )
      (i32.const 16)
     )
    )
    (i32.const 5)
   )
  )
  (set_local $6
   (i32.mul
    (i32.shr_s
     (i32.shl
      (get_local $3)
      (i32.const 16)
     )
     (i32.const 16)
    )
    (i32.shr_s
     (i32.mul
      (get_local $5)
      (i32.const 327680)
     )
     (i32.const 16)
    )
   )
  )
  (set_local $3
   (i32.add
    (get_local $0)
    (i32.const 2320)
   )
  )
  (block $__rjto$3
   (block $__rjti$3
    (block $__rjti$2
     (block $__rjti$1
      (br_if $__rjti$1
       (i32.ne
        (i32.load
         (tee_local $8
          (i32.add
           (get_local $0)
           (i32.const 2316)
          )
         )
        )
        (get_local $1)
       )
      )
      (br_if $__rjti$1
       (i32.ne
        (i32.load
         (get_local $3)
        )
        (get_local $2)
       )
      )
      (set_local $2
       (i32.const 1)
      )
      (br $__rjti$2)
     )
     (call $_silk_resampler_init
      (i32.add
       (get_local $0)
       (i32.const 2432)
      )
      (i32.mul
       (get_local $5)
       (i32.const 1000)
      )
      (get_local $2)
      (i32.const 0)
     )
     (i32.store
      (get_local $3)
      (get_local $2)
     )
     (br_if $__rjti$3
      (i32.eqz
       (tee_local $2
        (i32.eq
         (i32.load
          (get_local $8)
         )
         (get_local $1)
        )
       )
      )
     )
    )
    (br_if $__rjti$3
     (i32.ne
      (get_local $6)
      (i32.load
       (i32.add
        (get_local $0)
        (i32.const 2328)
       )
      )
     )
    )
    (br $__rjto$3)
   )
   (set_local $4
    (i32.eq
     (i32.load
      (get_local $4)
     )
     (i32.const 4)
    )
   )
   (set_local $3
    (i32.add
     (get_local $0)
     (i32.const 2384)
    )
   )
   (if
    (get_local $7)
    (if
     (get_local $4)
     (i32.store
      (get_local $3)
      (i32.const 45743)
     )
     (i32.store
      (get_local $3)
      (i32.const 45766)
     )
    )
    (if
     (get_local $4)
     (i32.store
      (get_local $3)
      (i32.const 26080)
     )
     (i32.store
      (get_local $3)
      (i32.const 45754)
     )
    )
   )
   (if
    (i32.eqz
     (get_local $2)
    )
    (block
     (i32.store
      (i32.add
       (get_local $0)
       (i32.const 2336)
      )
      (i32.mul
       (get_local $5)
       (i32.const 20)
      )
     )
     (block $do-once10
      (block $__rjti$0
       (block $switch-default9
        (block $switch-case7
         (br_table $switch-case7 $switch-default9 $switch-default9 $switch-default9 $switch-case7 $switch-default9
          (i32.sub
           (get_local $1)
           (i32.const 8)
          )
         )
        )
        (i32.store
         (i32.add
          (get_local $0)
          (i32.const 2340)
         )
         (i32.const 10)
        )
        (i32.store
         (i32.add
          (get_local $0)
          (i32.const 2732)
         )
         (i32.const 40868)
        )
        (br_if $__rjti$0
         (i32.ne
          (get_local $1)
          (i32.const 12)
         )
        )
        (i32.store
         (i32.add
          (get_local $0)
          (i32.const 2380)
         )
         (i32.const 45722)
        )
        (br $do-once10)
       )
       (i32.store
        (i32.add
         (get_local $0)
         (i32.const 2340)
        )
        (i32.const 16)
       )
       (i32.store
        (i32.add
         (get_local $0)
         (i32.const 2732)
        )
        (i32.const 40908)
       )
       (br_if $__rjti$0
        (i32.ne
         (get_local $1)
         (i32.const 16)
        )
       )
       (i32.store
        (i32.add
         (get_local $0)
         (i32.const 2380)
        )
        (i32.const 45728)
       )
       (br $do-once10)
      )
      (if
       (get_local $7)
       (i32.store
        (i32.add
         (get_local $0)
         (i32.const 2380)
        )
        (i32.const 45713)
       )
       (call $_celt_fatal
        (i32.const 49348)
        (i32.const 44234)
        (i32.const 89)
       )
      )
     )
     (i32.store
      (i32.add
       (get_local $0)
       (i32.const 2376)
      )
      (i32.const 1)
     )
     (i32.store
      (i32.add
       (get_local $0)
       (i32.const 2308)
      )
      (i32.const 100)
     )
     (i32.store8
      (i32.add
       (get_local $0)
       (i32.const 2312)
      )
      (i32.const 10)
     )
     (i32.store
      (i32.add
       (get_local $0)
       (i32.const 4164)
      )
      (i32.const 0)
     )
     (drop
      (call $_memset
       (i32.add
        (get_local $0)
        (i32.const 1284)
       )
       (i32.const 0)
       (i32.const 1024)
      )
     )
    )
   )
   (i32.store
    (get_local $8)
    (get_local $1)
   )
   (i32.store
    (i32.add
     (get_local $0)
     (i32.const 2328)
    )
    (get_local $6)
   )
  )
  (if
   (i32.lt_u
    (i32.add
     (get_local $6)
     (i32.const -1)
    )
    (i32.const 320)
   )
   (return
    (i32.const 0)
   )
   (call $_celt_fatal
    (i32.const 44343)
    (i32.const 44234)
    (i32.const 104)
   )
  )
  (i32.const 0)
 )
 (func $_silk_Get_Decoder_Size (; 192 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (i32.store
   (get_local $0)
   (i32.const 8552)
  )
  (i32.const 0)
 )
 (func $_silk_InitDecoder (; 193 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (loop $while-in
   (if
    (i32.ne
     (get_local $1)
     (i32.const 2)
    )
    (block
     (call $_silk_init_decoder
      (i32.add
       (get_local $0)
       (i32.mul
        (get_local $1)
        (i32.const 4264)
       )
      )
     )
     (set_local $1
      (i32.add
       (get_local $1)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (i64.store align=4
   (tee_local $1
    (i32.add
     (get_local $0)
     (i32.const 8528)
    )
   )
   (i64.const 0)
  )
  (i32.store offset=8
   (get_local $1)
   (i32.const 0)
  )
  (i32.store
   (i32.add
    (get_local $0)
    (i32.const 8548)
   )
   (i32.const 0)
  )
  (i32.const 0)
 )
 (func $_silk_Decode (; 194 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (result i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local $26 i32)
  (local $27 i32)
  (local $28 i32)
  (set_local $8
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.const 672)
   )
  )
  (i32.store
   (tee_local $18
    (i32.add
     (get_local $8)
     (i32.const 660)
    )
   )
   (i32.const 0)
  )
  (i64.store
   (tee_local $14
    (i32.add
     (get_local $8)
     (i32.const 640)
    )
   )
   (i64.const 0)
  )
  (if
   (i32.ge_u
    (i32.add
     (tee_local $7
      (i32.load
       (tee_local $12
        (i32.add
         (get_local $1)
         (i32.const 4)
        )
       )
      )
     )
     (i32.const -1)
    )
    (i32.const 2)
   )
   (call $_celt_fatal
    (i32.const 44428)
    (i32.const 44519)
    (i32.const 107)
   )
  )
  (if
   (get_local $3)
   (block
    (set_local $3
     (get_local $7)
    )
    (loop $while-in
     (if
      (i32.lt_s
       (get_local $16)
       (get_local $3)
      )
      (block
       (i32.store
        (i32.add
         (i32.add
          (get_local $0)
          (i32.mul
           (get_local $16)
           (i32.const 4264)
          )
         )
         (i32.const 2388)
        )
        (i32.const 0)
       )
       (set_local $16
        (i32.add
         (get_local $16)
         (i32.const 1)
        )
       )
       (set_local $3
        (i32.load
         (get_local $12)
        )
       )
       (br $while-in)
      )
     )
    )
   )
   (set_local $3
    (get_local $7)
   )
  )
  (if
   (i32.gt_s
    (get_local $3)
    (i32.load
     (tee_local $20
      (i32.add
       (get_local $0)
       (i32.const 8544)
      )
     )
    )
   )
   (block
    (call $_silk_init_decoder
     (i32.add
      (get_local $0)
      (i32.const 4264)
     )
    )
    (set_local $3
     (i32.load
      (get_local $12)
     )
    )
   )
  )
  (set_local $24
   (if (result i32)
    (i32.eq
     (get_local $3)
     (i32.const 1)
    )
    (if (result i32)
     (i32.eq
      (i32.load
       (get_local $20)
      )
      (i32.const 2)
     )
     (i32.eq
      (i32.load offset=12
       (get_local $1)
      )
      (i32.mul
       (i32.load
        (i32.add
         (get_local $0)
         (i32.const 2316)
        )
       )
       (i32.const 1000)
      )
     )
     (i32.const 0)
    )
    (i32.const 0)
   )
  )
  (set_local $15
   (i32.add
    (get_local $8)
    (i32.const 656)
   )
  )
  (set_local $19
   (i32.add
    (get_local $8)
    (i32.const 648)
   )
  )
  (set_local $16
   (get_local $8)
  )
  (block $label$break$L17
   (if
    (i32.load
     (tee_local $11
      (i32.add
       (get_local $0)
       (i32.const 2388)
      )
     )
    )
    (set_local $9
     (get_local $3)
    )
    (block
     (set_local $17
      (i32.add
       (get_local $1)
       (i32.const 16)
      )
     )
     (set_local $13
      (i32.add
       (get_local $1)
       (i32.const 12)
      )
     )
     (set_local $21
      (i32.add
       (get_local $1)
       (i32.const 8)
      )
     )
     (set_local $7
      (i32.const 0)
     )
     (set_local $8
      (i32.const 0)
     )
     (block $__rjto$1
      (block $__rjti$1
       (block $__rjti$0
        (loop $label$continue$L19
         (block $label$break$L19
          (if
           (i32.ge_s
            (get_local $8)
            (get_local $3)
           )
           (block
            (set_local $10
             (get_local $7)
            )
            (set_local $9
             (get_local $3)
            )
            (br $label$break$L17)
           )
          )
          (block $switch
           (block $switch-default
            (block $switch-case4
             (block $switch-case3
              (block $switch-case2
               (block $switch-case1
                (block $switch-case
                 (br_table $switch-case $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-case1 $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-case2 $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-case3 $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-case4 $switch-default
                  (i32.load
                   (get_local $17)
                  )
                 )
                )
                (i32.store
                 (i32.add
                  (i32.add
                   (get_local $0)
                   (i32.mul
                    (get_local $8)
                    (i32.const 4264)
                   )
                  )
                  (i32.const 2392)
                 )
                 (i32.const 1)
                )
                (i32.store
                 (i32.add
                  (i32.add
                   (get_local $0)
                   (i32.mul
                    (get_local $8)
                    (i32.const 4264)
                   )
                  )
                  (i32.const 2324)
                 )
                 (i32.const 2)
                )
                (br $switch)
               )
               (i32.store
                (i32.add
                 (i32.add
                  (get_local $0)
                  (i32.mul
                   (get_local $8)
                   (i32.const 4264)
                  )
                 )
                 (i32.const 2392)
                )
                (i32.const 1)
               )
               (i32.store
                (i32.add
                 (i32.add
                  (get_local $0)
                  (i32.mul
                   (get_local $8)
                   (i32.const 4264)
                  )
                 )
                 (i32.const 2324)
                )
                (i32.const 2)
               )
               (br $switch)
              )
              (i32.store
               (i32.add
                (i32.add
                 (get_local $0)
                 (i32.mul
                  (get_local $8)
                  (i32.const 4264)
                 )
                )
                (i32.const 2392)
               )
               (i32.const 1)
              )
              (i32.store
               (i32.add
                (i32.add
                 (get_local $0)
                 (i32.mul
                  (get_local $8)
                  (i32.const 4264)
                 )
                )
                (i32.const 2324)
               )
               (i32.const 4)
              )
              (br $switch)
             )
             (i32.store
              (i32.add
               (i32.add
                (get_local $0)
                (i32.mul
                 (get_local $8)
                 (i32.const 4264)
                )
               )
               (i32.const 2392)
              )
              (i32.const 2)
             )
             (i32.store
              (i32.add
               (i32.add
                (get_local $0)
                (i32.mul
                 (get_local $8)
                 (i32.const 4264)
                )
               )
               (i32.const 2324)
              )
              (i32.const 4)
             )
             (br $switch)
            )
            (i32.store
             (i32.add
              (i32.add
               (get_local $0)
               (i32.mul
                (get_local $8)
                (i32.const 4264)
               )
              )
              (i32.const 2392)
             )
             (i32.const 3)
            )
            (i32.store
             (i32.add
              (i32.add
               (get_local $0)
               (i32.mul
                (get_local $8)
                (i32.const 4264)
               )
              )
              (i32.const 2324)
             )
             (i32.const 4)
            )
            (br $switch)
           )
           (br $__rjti$0)
          )
          (block $switch5
           (block $switch-default9
            (block $switch-case6
             (br_table $switch-case6 $switch-default9 $switch-default9 $switch-default9 $switch-case6 $switch-default9 $switch-default9 $switch-default9 $switch-case6 $switch-default9
              (i32.sub
               (tee_local $3
                (i32.shr_s
                 (i32.load
                  (get_local $13)
                 )
                 (i32.const 10)
                )
               )
               (i32.const 7)
              )
             )
            )
            (br $switch5)
           )
           (br $__rjti$1)
          )
          (set_local $3
           (call $_silk_decoder_set_fs
            (i32.add
             (get_local $0)
             (i32.mul
              (get_local $8)
              (i32.const 4264)
             )
            )
            (i32.add
             (get_local $3)
             (i32.const 1)
            )
            (i32.load
             (get_local $21)
            )
           )
          )
          (set_local $7
           (i32.add
            (get_local $7)
            (get_local $3)
           )
          )
          (set_local $8
           (i32.add
            (get_local $8)
            (i32.const 1)
           )
          )
          (set_local $3
           (i32.load
            (get_local $12)
           )
          )
          (br $label$continue$L19)
         )
        )
       )
       (call $_celt_fatal
        (i32.const 49348)
        (i32.const 44519)
        (i32.const 146)
       )
       (br $__rjto$1)
      )
      (call $_celt_fatal
       (i32.const 49348)
       (i32.const 44519)
       (i32.const 152)
      )
     )
    )
   )
  )
  (block $do-once
   (if
    (i32.eq
     (tee_local $3
      (i32.load
       (get_local $1)
      )
     )
     (i32.const 2)
    )
    (set_local $3
     (if (result i32)
      (i32.eq
       (get_local $9)
       (i32.const 2)
      )
      (block (result i32)
       (if
        (i32.ne
         (i32.load
          (i32.add
           (get_local $0)
           (i32.const 8540)
          )
         )
         (i32.const 1)
        )
        (if
         (i32.ne
          (i32.load
           (get_local $20)
          )
          (i32.const 1)
         )
         (block
          (set_local $3
           (i32.const 2)
          )
          (br $do-once)
         )
        )
       )
       (i32.store
        (i32.add
         (get_local $0)
         (i32.const 8528)
        )
        (i32.const 0)
       )
       (i32.store
        (i32.add
         (get_local $0)
         (i32.const 8536)
        )
        (i32.const 0)
       )
       (drop
        (call $_memcpy
         (i32.add
          (get_local $0)
          (i32.const 6696)
         )
         (i32.add
          (get_local $0)
          (i32.const 2432)
         )
         (i32.const 300)
        )
       )
       (i32.load
        (get_local $1)
       )
      )
      (i32.const 2)
     )
    )
   )
  )
  (i32.store
   (i32.add
    (get_local $0)
    (i32.const 8540)
   )
   (get_local $3)
  )
  (i32.store
   (get_local $20)
   (i32.load
    (get_local $12)
   )
  )
  (if
   (i32.gt_u
    (i32.add
     (i32.load
      (tee_local $21
       (i32.add
        (get_local $1)
        (i32.const 8)
       )
      )
     )
     (i32.const -8000)
    )
    (i32.const 40000)
   )
   (block
    (set_global $STACKTOP
     (get_local $16)
    )
    (return
     (i32.const -200)
    )
   )
  )
  (block $label$break$L44
   (if
    (i32.eqz
     (tee_local $25
      (i32.eq
       (get_local $2)
       (i32.const 1)
      )
     )
    )
    (if
     (i32.eqz
      (i32.load
       (get_local $11)
      )
     )
     (block
      (set_local $7
       (i32.const 0)
      )
      (loop $while-in13
       (if
        (i32.lt_s
         (get_local $7)
         (tee_local $3
          (i32.load
           (get_local $12)
          )
         )
        )
        (block
         (set_local $8
          (i32.add
           (i32.add
            (get_local $0)
            (i32.mul
             (get_local $7)
             (i32.const 4264)
            )
           )
           (i32.const 2392)
          )
         )
         (set_local $3
          (i32.const 0)
         )
         (loop $while-in15
          (set_local $17
           (i32.lt_s
            (get_local $3)
            (i32.load
             (get_local $8)
            )
           )
          )
          (set_local $9
           (call $_ec_dec_bit_logp
            (get_local $4)
            (i32.const 1)
           )
          )
          (if
           (get_local $17)
           (block
            (i32.store
             (i32.add
              (i32.add
               (i32.add
                (get_local $0)
                (i32.mul
                 (get_local $7)
                 (i32.const 4264)
                )
               )
               (i32.const 2404)
              )
              (i32.shl
               (get_local $3)
               (i32.const 2)
              )
             )
             (get_local $9)
            )
            (set_local $3
             (i32.add
              (get_local $3)
              (i32.const 1)
             )
            )
            (br $while-in15)
           )
          )
         )
         (i32.store
          (i32.add
           (i32.add
            (get_local $0)
            (i32.mul
             (get_local $7)
             (i32.const 4264)
            )
           )
           (i32.const 2416)
          )
          (get_local $9)
         )
         (set_local $7
          (i32.add
           (get_local $7)
           (i32.const 1)
          )
         )
         (br $while-in13)
        )
       )
      )
      (set_local $7
       (i32.const 0)
      )
      (loop $while-in17
       (if
        (i32.lt_s
         (get_local $7)
         (get_local $3)
        )
        (block
         (i64.store align=4
          (tee_local $3
           (i32.add
            (i32.add
             (get_local $0)
             (i32.mul
              (get_local $7)
              (i32.const 4264)
             )
            )
            (i32.const 2420)
           )
          )
          (i64.const 0)
         )
         (i32.store offset=8
          (get_local $3)
          (i32.const 0)
         )
         (block $label$break$L58
          (if
           (i32.load
            (i32.add
             (i32.add
              (get_local $0)
              (i32.mul
               (get_local $7)
               (i32.const 4264)
              )
             )
             (i32.const 2416)
            )
           )
           (block
            (if
             (i32.eq
              (tee_local $8
               (i32.load
                (tee_local $9
                 (i32.add
                  (i32.add
                   (get_local $0)
                   (i32.mul
                    (get_local $7)
                    (i32.const 4264)
                   )
                  )
                  (i32.const 2392)
                 )
                )
               )
              )
              (i32.const 1)
             )
             (block
              (i32.store
               (get_local $3)
               (i32.const 1)
              )
              (br $label$break$L58)
             )
            )
            (set_local $8
             (i32.add
              (call $_ec_dec_icdf
               (get_local $4)
               (i32.load
                (i32.add
                 (i32.shl
                  (get_local $8)
                  (i32.const 2)
                 )
                 (i32.const 40940)
                )
               )
               (i32.const 8)
              )
              (i32.const 1)
             )
            )
            (set_local $9
             (i32.load
              (get_local $9)
             )
            )
            (set_local $3
             (i32.const 0)
            )
            (loop $while-in20
             (br_if $label$break$L58
              (i32.ge_s
               (get_local $3)
               (get_local $9)
              )
             )
             (i32.store
              (i32.add
               (i32.add
                (i32.add
                 (get_local $0)
                 (i32.mul
                  (get_local $7)
                  (i32.const 4264)
                 )
                )
                (i32.const 2420)
               )
               (i32.shl
                (get_local $3)
                (i32.const 2)
               )
              )
              (i32.and
               (i32.shr_u
                (get_local $8)
                (get_local $3)
               )
               (i32.const 1)
              )
             )
             (set_local $3
              (i32.add
               (get_local $3)
               (i32.const 1)
              )
             )
             (br $while-in20)
            )
           )
          )
         )
         (set_local $7
          (i32.add
           (get_local $7)
           (i32.const 1)
          )
         )
         (set_local $3
          (i32.load
           (get_local $12)
          )
         )
         (br $while-in17)
        )
       )
      )
      (if
       (i32.eqz
        (get_local $2)
       )
       (block
        (set_local $8
         (i32.add
          (get_local $0)
          (i32.const 2392)
         )
        )
        (set_local $17
         (i32.add
          (get_local $0)
          (i32.const 6684)
         )
        )
        (set_local $9
         (i32.const 0)
        )
        (loop $while-in22
         (br_if $label$break$L44
          (i32.ge_s
           (get_local $9)
           (i32.load
            (get_local $8)
           )
          )
         )
         (set_local $13
          (i32.eqz
           (get_local $9)
          )
         )
         (set_local $22
          (i32.add
           (get_local $17)
           (i32.shl
            (get_local $9)
            (i32.const 2)
           )
          )
         )
         (set_local $23
          (i32.add
           (get_local $9)
           (i32.const -1)
          )
         )
         (set_local $7
          (i32.const 0)
         )
         (loop $while-in24
          (if
           (i32.lt_s
            (get_local $7)
            (get_local $3)
           )
           (block
            (if
             (i32.load
              (i32.add
               (i32.add
                (i32.add
                 (get_local $0)
                 (i32.mul
                  (get_local $7)
                  (i32.const 4264)
                 )
                )
                (i32.const 2420)
               )
               (i32.shl
                (get_local $9)
                (i32.const 2)
               )
              )
             )
             (block
              (if
               (i32.and
                (i32.eq
                 (get_local $3)
                 (i32.const 2)
                )
                (i32.eqz
                 (get_local $7)
                )
               )
               (block
                (call $_silk_stereo_decode_pred
                 (get_local $4)
                 (get_local $14)
                )
                (if
                 (i32.eqz
                  (i32.load
                   (get_local $22)
                  )
                 )
                 (call $_silk_stereo_decode_mid_only
                  (get_local $4)
                  (get_local $18)
                 )
                )
               )
              )
              (call $_silk_decode_indices
               (i32.add
                (get_local $0)
                (i32.mul
                 (get_local $7)
                 (i32.const 4264)
                )
               )
               (get_local $4)
               (get_local $9)
               (i32.const 1)
               (tee_local $3
                (block $__rjto$2 (result i32)
                 (block $__rjti$2
                  (br_if $__rjti$2
                   (get_local $13)
                  )
                  (br_if $__rjti$2
                   (i32.eqz
                    (i32.load
                     (i32.add
                      (i32.add
                       (i32.add
                        (get_local $0)
                        (i32.mul
                         (get_local $7)
                         (i32.const 4264)
                        )
                       )
                       (i32.const 2420)
                      )
                      (i32.shl
                       (get_local $23)
                       (i32.const 2)
                      )
                     )
                    )
                   )
                  )
                  (br $__rjto$2
                   (i32.const 2)
                  )
                 )
                 (i32.const 0)
                )
               )
              )
              (call $_silk_decode_pulses
               (get_local $4)
               (get_local $16)
               (i32.load8_s
                (i32.add
                 (i32.add
                  (get_local $0)
                  (i32.mul
                   (get_local $7)
                   (i32.const 4264)
                  )
                 )
                 (i32.const 2765)
                )
               )
               (i32.load8_s
                (i32.add
                 (i32.add
                  (get_local $0)
                  (i32.mul
                   (get_local $7)
                   (i32.const 4264)
                  )
                 )
                 (i32.const 2766)
                )
               )
               (i32.load
                (i32.add
                 (i32.add
                  (get_local $0)
                  (i32.mul
                   (get_local $7)
                   (i32.const 4264)
                  )
                 )
                 (i32.const 2328)
                )
               )
              )
              (set_local $3
               (i32.load
                (get_local $12)
               )
              )
             )
            )
            (set_local $7
             (i32.add
              (get_local $7)
              (i32.const 1)
             )
            )
            (br $while-in24)
           )
          )
         )
         (set_local $9
          (i32.add
           (get_local $9)
           (i32.const 1)
          )
         )
         (br $while-in22)
        )
       )
      )
     )
    )
   )
  )
  (if
   (i32.eq
    (tee_local $3
     (i32.load
      (get_local $12)
     )
    )
    (i32.const 2)
   )
   (block
    (block $label$break$L95
     (block $__rjti$5
      (block $__rjti$4
       (block $__rjti$3
        (block $switch-default28
         (block $switch-case27
          (block $switch-case26
           (br_table $switch-case26 $switch-default28 $switch-case27 $switch-default28
            (get_local $2)
           )
          )
          (call $_silk_stereo_decode_pred
           (get_local $4)
           (get_local $14)
          )
          (br_if $__rjti$3
           (i32.eqz
            (i32.load
             (i32.add
              (i32.add
               (get_local $0)
               (i32.const 6668)
              )
              (i32.shl
               (i32.load
                (get_local $11)
               )
               (i32.const 2)
              )
             )
            )
           )
          )
          (br $__rjti$4)
         )
         (br_if $__rjti$5
          (i32.ne
           (i32.load
            (i32.add
             (i32.add
              (get_local $0)
              (i32.const 2420)
             )
             (i32.shl
              (i32.load
               (get_local $11)
              )
              (i32.const 2)
             )
            )
           )
           (i32.const 1)
          )
         )
         (call $_silk_stereo_decode_pred
          (get_local $4)
          (get_local $14)
         )
         (br_if $__rjti$3
          (i32.eqz
           (i32.load
            (i32.add
             (i32.add
              (get_local $0)
              (i32.const 6684)
             )
             (i32.shl
              (i32.load
               (get_local $11)
              )
              (i32.const 2)
             )
            )
           )
          )
         )
         (br $__rjti$4)
        )
        (br $__rjti$5)
       )
       (call $_silk_stereo_decode_mid_only
        (get_local $4)
        (get_local $18)
       )
       (br $label$break$L95)
      )
      (i32.store
       (get_local $18)
       (i32.const 0)
      )
      (br $label$break$L95)
     )
     (set_local $7
      (i32.add
       (get_local $0)
       (i32.const 8528)
      )
     )
     (set_local $3
      (i32.const 0)
     )
     (loop $while-in31
      (br_if $label$break$L95
       (i32.eq
        (get_local $3)
        (i32.const 2)
       )
      )
      (i32.store
       (i32.add
        (get_local $14)
        (i32.shl
         (get_local $3)
         (i32.const 2)
        )
       )
       (i32.load16_s
        (i32.add
         (get_local $7)
         (i32.shl
          (get_local $3)
          (i32.const 1)
         )
        )
       )
      )
      (set_local $3
       (i32.add
        (get_local $3)
        (i32.const 1)
       )
      )
      (br $while-in31)
     )
    )
    (if
     (i32.eq
      (tee_local $3
       (i32.load
        (get_local $12)
       )
      )
      (i32.const 2)
     )
     (set_local $3
      (if (result i32)
       (i32.load
        (get_local $18)
       )
       (i32.const 2)
       (if (result i32)
        (i32.eq
         (i32.load
          (i32.add
           (get_local $0)
           (i32.const 8548)
          )
         )
         (i32.const 1)
        )
        (block (result i32)
         (set_local $3
          (i32.add
           (get_local $0)
           (i32.const 6572)
          )
         )
         (drop
          (call $_memset
           (i32.add
            (get_local $0)
            (i32.const 5548)
           )
           (i32.const 0)
           (i32.const 1024)
          )
         )
         (i32.store
          (get_local $3)
          (i32.const 100)
         )
         (i32.store8
          (i32.add
           (get_local $0)
           (i32.const 6576)
          )
          (i32.const 10)
         )
         (i32.store
          (i32.add
           (get_local $0)
           (i32.const 8428)
          )
          (i32.const 0)
         )
         (i32.store
          (i32.add
           (get_local $0)
           (i32.const 6640)
          )
          (i32.const 1)
         )
         (i32.load
          (get_local $12)
         )
        )
        (i32.const 2)
       )
      )
     )
    )
   )
  )
  (set_local $3
   (if (result i32)
    (tee_local $22
     (i32.lt_s
      (i32.mul
       (i32.load offset=12
        (get_local $1)
       )
       (get_local $3)
      )
      (i32.mul
       (i32.load
        (get_local $21)
       )
       (i32.load
        (get_local $1)
       )
      )
     )
    )
    (block (result i32)
     (set_local $8
      (call $_llvm_stacksave)
     )
     (i32.add
      (tee_local $7
       (get_local $5)
      )
      (i32.shl
       (i32.load
        (i32.add
         (get_local $0)
         (i32.const 2328)
        )
       )
       (i32.const 1)
      )
     )
    )
    (block (result i32)
     (set_local $9
      (i32.mul
       (get_local $3)
       (i32.add
        (i32.load
         (tee_local $3
          (i32.add
           (get_local $0)
           (i32.const 2328)
          )
         )
        )
        (i32.const 2)
       )
      )
     )
     (set_local $8
      (call $_llvm_stacksave)
     )
     (set_local $7
      (get_global $STACKTOP)
     )
     (set_global $STACKTOP
      (i32.add
       (get_global $STACKTOP)
       (i32.and
        (i32.add
         (i32.shl
          (get_local $9)
          (i32.const 1)
         )
         (i32.const 15)
        )
        (i32.const -16)
       )
      )
     )
     (i32.add
      (get_local $7)
      (i32.shl
       (i32.load
        (get_local $3)
       )
       (i32.const 1)
      )
     )
    )
   )
  )
  (i32.store
   (get_local $19)
   (get_local $7)
  )
  (i32.store
   (tee_local $23
    (i32.add
     (get_local $19)
     (i32.const 4)
    )
   )
   (tee_local $26
    (i32.add
     (get_local $3)
     (i32.const 4)
    )
   )
  )
  (set_local $17
   (if (result i32)
    (get_local $2)
    (if (result i32)
     (i32.load
      (tee_local $9
       (i32.add
        (get_local $0)
        (i32.const 8548)
       )
      )
     )
     (if (result i32)
      (i32.and
       (i32.eq
        (i32.load
         (get_local $12)
        )
        (i32.const 2)
       )
       (i32.eq
        (get_local $2)
        (i32.const 2)
       )
      )
      (i32.eq
       (i32.load
        (i32.add
         (i32.add
          (get_local $0)
          (i32.const 6684)
         )
         (i32.shl
          (i32.load
           (i32.add
            (get_local $0)
            (i32.const 6652)
           )
          )
          (i32.const 2)
         )
        )
       )
       (i32.const 1)
      )
      (i32.const 0)
     )
     (i32.const 1)
    )
    (block (result i32)
     (set_local $9
      (i32.add
       (get_local $0)
       (i32.const 8548)
      )
     )
     (i32.eqz
      (i32.load
       (get_local $18)
      )
     )
    )
   )
  )
  (set_local $27
   (i32.eq
    (get_local $2)
    (i32.const 2)
   )
  )
  (set_local $3
   (get_local $10)
  )
  (set_local $10
   (i32.const 0)
  )
  (loop $while-in33
   (if
    (i32.lt_s
     (get_local $10)
     (tee_local $13
      (i32.load
       (get_local $12)
      )
     )
    )
    (block
     (if
      (i32.or
       (tee_local $13
        (i32.eqz
         (get_local $10)
        )
       )
       (get_local $17)
      )
      (block
       (set_local $13
        (call $_silk_decode_frame
         (i32.add
          (get_local $0)
          (i32.mul
           (get_local $10)
           (i32.const 4264)
          )
         )
         (get_local $4)
         (i32.add
          (i32.load
           (i32.add
            (get_local $19)
            (i32.shl
             (get_local $10)
             (i32.const 2)
            )
           )
          )
          (i32.const 4)
         )
         (get_local $15)
         (get_local $2)
         (tee_local $13
          (block $do-once34 (result i32)
           (if (result i32)
            (i32.lt_s
             (tee_local $28
              (i32.sub
               (i32.load
                (get_local $11)
               )
               (get_local $10)
              )
             )
             (i32.const 1)
            )
            (i32.const 0)
            (block (result i32)
             (if
              (get_local $27)
              (br $do-once34
               (if (result i32)
                (i32.load
                 (i32.add
                  (i32.add
                   (i32.add
                    (get_local $0)
                    (i32.mul
                     (get_local $10)
                     (i32.const 4264)
                    )
                   )
                   (i32.shl
                    (get_local $28)
                    (i32.const 2)
                   )
                  )
                  (i32.const 2416)
                 )
                )
                (i32.const 2)
                (i32.const 0)
               )
              )
             )
             (if
              (i32.eqz
               (get_local $13)
              )
              (drop
               (br_if $do-once34
                (i32.const 1)
                (i32.load
                 (get_local $9)
                )
               )
              )
             )
             (i32.const 2)
            )
           )
          )
         )
        )
       )
       (set_local $3
        (i32.add
         (get_local $3)
         (get_local $13)
        )
       )
      )
      (drop
       (call $_memset
        (i32.add
         (i32.load
          (i32.add
           (get_local $19)
           (i32.shl
            (get_local $10)
            (i32.const 2)
           )
          )
         )
         (i32.const 4)
        )
        (i32.const 0)
        (i32.shl
         (i32.load
          (get_local $15)
         )
         (i32.const 1)
        )
       )
      )
     )
     (i32.store
      (tee_local $13
       (i32.add
        (i32.add
         (get_local $0)
         (i32.mul
          (get_local $10)
          (i32.const 4264)
         )
        )
        (i32.const 2388)
       )
      )
      (i32.add
       (i32.load
        (get_local $13)
       )
       (i32.const 1)
      )
     )
     (set_local $10
      (i32.add
       (get_local $10)
       (i32.const 1)
      )
     )
     (br $while-in33)
    )
   )
  )
  (if
   (i32.and
    (i32.eq
     (i32.load
      (get_local $1)
     )
     (i32.const 2)
    )
    (i32.eq
     (get_local $13)
     (i32.const 2)
    )
   )
   (call $_silk_stereo_MS_to_LR
    (i32.add
     (get_local $0)
     (i32.const 8528)
    )
    (get_local $7)
    (get_local $26)
    (get_local $14)
    (i32.load
     (tee_local $14
      (i32.add
       (get_local $0)
       (i32.const 2316)
      )
     )
    )
    (tee_local $10
     (i32.load
      (get_local $15)
     )
    )
   )
   (block
    (i32.store align=2
     (get_local $7)
     (i32.load align=2
      (tee_local $2
       (i32.add
        (get_local $0)
        (i32.const 8532)
       )
      )
     )
    )
    (i32.store align=2
     (get_local $2)
     (i32.load align=2
      (i32.add
       (get_local $7)
       (i32.shl
        (tee_local $10
         (i32.load
          (get_local $15)
         )
        )
        (i32.const 1)
       )
      )
     )
    )
    (set_local $14
     (i32.add
      (get_local $0)
      (i32.const 2316)
     )
    )
   )
  )
  (i32.store
   (get_local $6)
   (tee_local $11
    (i32.div_s
     (i32.mul
      (get_local $10)
      (i32.load
       (get_local $21)
      )
     )
     (i32.mul
      (i32.shr_s
       (i32.shl
        (i32.load
         (get_local $14)
        )
        (i32.const 16)
       )
       (i32.const 16)
      )
      (i32.const 1000)
     )
    )
   )
  )
  (if
   (i32.eq
    (tee_local $2
     (i32.load
      (get_local $1)
     )
    )
    (i32.const 2)
   )
   (block
    (set_local $4
     (get_global $STACKTOP)
    )
    (set_global $STACKTOP
     (i32.add
      (get_global $STACKTOP)
      (i32.and
       (i32.add
        (i32.shl
         (get_local $11)
         (i32.const 1)
        )
        (i32.const 15)
       )
       (i32.const -16)
      )
     )
    )
   )
   (set_local $4
    (get_local $5)
   )
  )
  (if
   (get_local $22)
   (block
    (set_local $7
     (get_global $STACKTOP)
    )
    (set_global $STACKTOP
     (i32.add
      (get_global $STACKTOP)
      (i32.and
       (i32.add
        (i32.shl
         (tee_local $15
          (i32.mul
           (i32.load
            (get_local $12)
           )
           (i32.add
            (tee_local $11
             (i32.load
              (i32.add
               (get_local $0)
               (i32.const 2328)
              )
             )
            )
            (i32.const 2)
           )
          )
         )
         (i32.const 1)
        )
        (i32.const 15)
       )
       (i32.const -16)
      )
     )
    )
    (drop
     (call $_memcpy
      (get_local $7)
      (get_local $5)
      (i32.shl
       (get_local $15)
       (i32.const 1)
      )
     )
    )
    (i32.store
     (get_local $19)
     (get_local $7)
    )
    (i32.store
     (get_local $23)
     (i32.add
      (i32.add
       (get_local $7)
       (i32.shl
        (get_local $11)
        (i32.const 1)
       )
      )
      (i32.const 4)
     )
    )
   )
  )
  (set_local $11
   (i32.const 0)
  )
  (loop $while-in37
   (if
    (i32.lt_s
     (get_local $11)
     (if (result i32)
      (i32.lt_s
       (get_local $2)
       (tee_local $15
        (i32.load
         (get_local $12)
        )
       )
      )
      (get_local $2)
      (get_local $15)
     )
    )
    (block
     (call $_silk_resampler
      (i32.add
       (i32.add
        (get_local $0)
        (i32.mul
         (get_local $11)
         (i32.const 4264)
        )
       )
       (i32.const 2432)
      )
      (get_local $4)
      (i32.add
       (i32.load
        (i32.add
         (get_local $19)
         (i32.shl
          (get_local $11)
          (i32.const 2)
         )
        )
       )
       (i32.const 2)
      )
      (get_local $10)
     )
     (if
      (i32.eq
       (tee_local $2
        (i32.load
         (get_local $1)
        )
       )
       (i32.const 2)
      )
      (block
       (set_local $2
        (i32.const 0)
       )
       (loop $while-in39
        (if
         (i32.lt_s
          (get_local $2)
          (i32.load
           (get_local $6)
          )
         )
         (block
          (i32.store16
           (i32.add
            (get_local $5)
            (i32.shl
             (i32.add
              (get_local $11)
              (i32.shl
               (get_local $2)
               (i32.const 1)
              )
             )
             (i32.const 1)
            )
           )
           (i32.load16_s
            (i32.add
             (get_local $4)
             (i32.shl
              (get_local $2)
              (i32.const 1)
             )
            )
           )
          )
          (set_local $2
           (i32.add
            (get_local $2)
            (i32.const 1)
           )
          )
          (br $while-in39)
         )
        )
       )
       (set_local $2
        (i32.load
         (get_local $1)
        )
       )
      )
     )
     (set_local $11
      (i32.add
       (get_local $11)
       (i32.const 1)
      )
     )
     (br $while-in37)
    )
   )
  )
  (block $label$break$L155
   (if
    (i32.and
     (i32.eq
      (get_local $2)
      (i32.const 2)
     )
     (i32.eq
      (get_local $15)
      (i32.const 1)
     )
    )
    (if
     (get_local $24)
     (block
      (call $_silk_resampler
       (i32.add
        (get_local $0)
        (i32.const 6696)
       )
       (get_local $4)
       (i32.add
        (get_local $7)
        (i32.const 2)
       )
       (get_local $10)
      )
      (set_local $2
       (i32.const 0)
      )
      (loop $while-in42
       (br_if $label$break$L155
        (i32.ge_s
         (get_local $2)
         (i32.load
          (get_local $6)
         )
        )
       )
       (i32.store16
        (i32.add
         (get_local $5)
         (i32.shl
          (i32.or
           (i32.shl
            (get_local $2)
            (i32.const 1)
           )
           (i32.const 1)
          )
          (i32.const 1)
         )
        )
        (i32.load16_s
         (i32.add
          (get_local $4)
          (i32.shl
           (get_local $2)
           (i32.const 1)
          )
         )
        )
       )
       (set_local $2
        (i32.add
         (get_local $2)
         (i32.const 1)
        )
       )
       (br $while-in42)
      )
     )
     (block
      (set_local $2
       (i32.const 0)
      )
      (loop $while-in44
       (br_if $label$break$L155
        (i32.ge_s
         (get_local $2)
         (i32.load
          (get_local $6)
         )
        )
       )
       (i32.store16
        (i32.add
         (get_local $5)
         (i32.shl
          (i32.or
           (tee_local $4
            (i32.shl
             (get_local $2)
             (i32.const 1)
            )
           )
           (i32.const 1)
          )
          (i32.const 1)
         )
        )
        (i32.load16_s
         (i32.add
          (get_local $5)
          (i32.shl
           (get_local $4)
           (i32.const 1)
          )
         )
        )
       )
       (set_local $2
        (i32.add
         (get_local $2)
         (i32.const 1)
        )
       )
       (br $while-in44)
      )
     )
    )
   )
  )
  (i32.store offset=20
   (get_local $1)
   (tee_local $2
    (if (result i32)
     (i32.eq
      (i32.load
       (i32.add
        (get_local $0)
        (i32.const 4164)
       )
      )
      (i32.const 2)
     )
     (i32.mul
      (i32.load
       (i32.add
        (get_local $0)
        (i32.const 2308)
       )
      )
      (i32.load
       (i32.add
        (i32.shl
         (i32.shr_s
          (i32.add
           (i32.load
            (get_local $14)
           )
           (i32.const -8)
          )
          (i32.const 2)
         )
         (i32.const 2)
        )
        (i32.const 40808)
       )
      )
     )
     (i32.const 0)
    )
   )
  )
  (block $label$break$L170
   (if
    (get_local $25)
    (block
     (set_local $1
      (i32.const 0)
     )
     (loop $while-in47
      (br_if $label$break$L170
       (i32.ge_s
        (get_local $1)
        (i32.load
         (get_local $20)
        )
       )
      )
      (i32.store8
       (i32.add
        (i32.add
         (get_local $0)
         (i32.mul
          (get_local $1)
          (i32.const 4264)
         )
        )
        (i32.const 2312)
       )
       (i32.const 10)
      )
      (set_local $1
       (i32.add
        (get_local $1)
        (i32.const 1)
       )
      )
      (br $while-in47)
     )
    )
    (i32.store
     (get_local $9)
     (i32.load
      (get_local $18)
     )
    )
   )
  )
  (call $_llvm_stackrestore
   (get_local $8)
  )
  (set_global $STACKTOP
   (get_local $16)
  )
  (get_local $3)
 )
 (func $_silk_Get_Encoder_Size (; 195 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (i32.store
   (get_local $0)
   (i32.const 20216)
  )
  (i32.const 0)
 )
 (func $_silk_InitEncoder (; 196 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (drop
   (call $_memset
    (get_local $0)
    (i32.const 0)
    (i32.const 20216)
   )
  )
  (block $__rjto$0
   (block $__rjti$0
    (loop $while-in
     (if
      (i32.lt_u
       (get_local $3)
       (i32.const 2)
      )
      (block
       (br_if $__rjti$0
        (call $_silk_init_encoder
         (i32.add
          (get_local $0)
          (i32.mul
           (get_local $3)
           (i32.const 10064)
          )
         )
         (get_local $1)
        )
       )
       (set_local $3
        (i32.add
         (get_local $3)
         (i32.const 1)
        )
       )
       (br $while-in)
      )
     )
    )
    (br $__rjto$0)
   )
   (call $_celt_fatal
    (i32.const 49348)
    (i32.const 44534)
    (i32.const 85)
   )
  )
  (i32.store
   (i32.add
    (get_local $0)
    (i32.const 20192)
   )
   (i32.const 1)
  )
  (i32.store
   (i32.add
    (get_local $0)
    (i32.const 20196)
   )
   (i32.const 1)
  )
  (if
   (call $_silk_QueryEncoder
    (get_local $0)
    (get_local $2)
   )
   (call $_celt_fatal
    (i32.const 49348)
    (i32.const 44534)
    (i32.const 94)
   )
   (return
    (i32.const 0)
   )
  )
  (i32.const 0)
 )
 (func $_silk_QueryEncoder (; 197 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (i32.store
   (get_local $1)
   (i32.load
    (i32.add
     (get_local $0)
     (i32.const 20192)
    )
   )
  )
  (i32.store offset=4
   (get_local $1)
   (i32.load
    (i32.add
     (get_local $0)
     (i32.const 20196)
    )
   )
  )
  (i32.store offset=8
   (get_local $1)
   (i32.load
    (i32.add
     (get_local $0)
     (i32.const 4556)
    )
   )
  )
  (i32.store offset=12
   (get_local $1)
   (i32.load
    (i32.add
     (get_local $0)
     (i32.const 4564)
    )
   )
  )
  (i32.store offset=16
   (get_local $1)
   (i32.load
    (i32.add
     (get_local $0)
     (i32.const 4568)
    )
   )
  )
  (i32.store offset=20
   (get_local $1)
   (i32.load
    (i32.add
     (get_local $0)
     (i32.const 4572)
    )
   )
  )
  (i32.store offset=24
   (get_local $1)
   (i32.load
    (i32.add
     (get_local $0)
     (i32.const 4612)
    )
   )
  )
  (i32.store offset=28
   (get_local $1)
   (i32.load
    (i32.add
     (get_local $0)
     (i32.const 4608)
    )
   )
  )
  (i32.store offset=32
   (get_local $1)
   (i32.load
    (i32.add
     (get_local $0)
     (i32.const 4616)
    )
   )
  )
  (i32.store offset=36
   (get_local $1)
   (i32.load
    (i32.add
     (get_local $0)
     (i32.const 4624)
    )
   )
  )
  (i32.store offset=40
   (get_local $1)
   (i32.load
    (i32.add
     (get_local $0)
     (i32.const 6088)
    )
   )
  )
  (i32.store offset=48
   (get_local $1)
   (i32.load
    (i32.add
     (get_local $0)
     (i32.const 6076)
    )
   )
  )
  (i32.store offset=52
   (get_local $1)
   (i32.load
    (i32.add
     (get_local $0)
     (i32.const 4676)
    )
   )
  )
  (i32.store offset=72
   (get_local $1)
   (i32.mul
    (i32.shr_s
     (i32.shl
      (i32.load
       (tee_local $2
        (i32.add
         (get_local $0)
         (i32.const 4576)
        )
       )
      )
      (i32.const 16)
     )
     (i32.const 16)
    )
    (i32.const 1000)
   )
  )
  (i32.store offset=76
   (get_local $1)
   (i32.load
    (i32.add
     (get_local $0)
     (i32.const 4536)
    )
   )
  )
  (if
   (i32.ne
    (i32.load
     (get_local $2)
    )
    (i32.const 16)
   )
   (block
    (i32.store offset=80
     (get_local $1)
     (i32.const 0)
    )
    (return
     (i32.const 0)
    )
   )
  )
  (i32.store offset=80
   (get_local $1)
   (i32.eqz
    (i32.load offset=28
     (get_local $0)
    )
   )
  )
  (i32.const 0)
 )
 (func $_silk_Encode (; 198 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (result i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local $26 i32)
  (local $27 i32)
  (local $28 i32)
  (local $29 i32)
  (local $30 i32)
  (local $31 i32)
  (local $32 i32)
  (local $33 i32)
  (local $34 i32)
  (local $35 i32)
  (local $36 i32)
  (local $37 i32)
  (local $38 i32)
  (local $39 i32)
  (local $40 i32)
  (local $41 i32)
  (local $42 i32)
  (local $43 i32)
  (local $44 i32)
  (local $45 i32)
  (local $46 i32)
  (local $47 i32)
  (local $48 i32)
  (local $49 i32)
  (local $50 i32)
  (local $51 i32)
  (local $52 i32)
  (local $53 i32)
  (local $54 i32)
  (local $55 i32)
  (local $56 i32)
  (local $57 i32)
  (local $58 i32)
  (local $59 i32)
  (local $60 i32)
  (local $61 i32)
  (local $62 i32)
  (local $63 i32)
  (local $64 i32)
  (local $65 i32)
  (local $66 i32)
  (local $67 i32)
  (local $68 i32)
  (local $69 i32)
  (local $70 i32)
  (local $71 i32)
  (local $72 i32)
  (local $73 i32)
  (local $74 i32)
  (local $75 i32)
  (local $76 i32)
  (local $77 i32)
  (local $78 i32)
  (local $79 i32)
  (local $80 i32)
  (local $81 i32)
  (local $82 i32)
  (set_local $29
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.const 32)
   )
  )
  (if
   (i32.load offset=68
    (get_local $1)
   )
   (block
    (i32.store
     (i32.add
      (get_local $0)
      (i32.const 4664)
     )
     (i32.const 1)
    )
    (i32.store
     (i32.add
      (get_local $0)
      (i32.const 14728)
     )
     (i32.const 1)
    )
   )
  )
  (set_local $37
   (i32.add
    (get_local $29)
    (i32.const 16)
   )
  )
  (set_local $38
   (i32.add
    (tee_local $8
     (get_local $29)
    )
    (i32.const 24)
   )
  )
  (i32.store
   (i32.add
    (get_local $0)
    (i32.const 15812)
   )
   (i32.const 0)
  )
  (i32.store
   (tee_local $17
    (i32.add
     (get_local $0)
     (i32.const 5748)
    )
   )
   (i32.const 0)
  )
  (call $_check_control_input
   (get_local $1)
  )
  (i32.store offset=88
   (get_local $1)
   (i32.const 0)
  )
  (if
   (i32.gt_s
    (i32.load
     (tee_local $14
      (i32.add
       (get_local $1)
       (i32.const 4)
      )
     )
    )
    (i32.load
     (tee_local $9
      (i32.add
       (get_local $0)
       (i32.const 20196)
      )
     )
    )
   )
   (block
    (set_local $10
     (call $_silk_init_encoder
      (tee_local $15
       (i32.add
        (get_local $0)
        (i32.const 10064)
       )
      )
      (i32.load
       (i32.add
        (get_local $0)
        (i32.const 5092)
       )
      )
     )
    )
    (i32.store
     (i32.add
      (get_local $0)
      (i32.const 20128)
     )
     (i32.const 0)
    )
    (i32.store
     (i32.add
      (get_local $0)
      (i32.const 20136)
     )
     (i32.const 0)
    )
    (i32.store
     (i32.add
      (get_local $0)
      (i32.const 20140)
     )
     (i32.const 0)
    )
    (i32.store
     (i32.add
      (get_local $0)
      (i32.const 20144)
     )
     (i32.const 1)
    )
    (i32.store
     (i32.add
      (get_local $0)
      (i32.const 20148)
     )
     (i32.const 0)
    )
    (i32.store
     (i32.add
      (get_local $0)
      (i32.const 20152)
     )
     (i32.const 1)
    )
    (i32.store16
     (i32.add
      (get_local $0)
      (i32.const 20158)
     )
     (i32.const 0)
    )
    (i32.store16
     (i32.add
      (get_local $0)
      (i32.const 20156)
     )
     (i32.const 16384)
    )
    (if
     (i32.eq
      (i32.load
       (i32.add
        (get_local $0)
        (i32.const 20192)
       )
      )
      (i32.const 2)
     )
     (block
      (drop
       (call $_memcpy
        (i32.add
         (get_local $0)
         (i32.const 15840)
        )
        (i32.add
         (get_local $0)
         (i32.const 5776)
        )
        (i32.const 300)
       )
      )
      (i64.store align=4
       (get_local $15)
       (i64.load align=4
        (get_local $0)
       )
      )
     )
    )
   )
  )
  (set_local $15
   (if (result i32)
    (i32.eq
     (i32.load
      (tee_local $19
       (i32.add
        (get_local $1)
        (i32.const 24)
       )
      )
     )
     (i32.load
      (i32.add
       (get_local $0)
       (i32.const 4612)
      )
     )
    )
    (i32.ne
     (i32.load
      (get_local $9)
     )
     (i32.load
      (get_local $14)
     )
    )
    (i32.const 1)
   )
  )
  (i32.store
   (i32.add
    (get_local $0)
    (i32.const 20192)
   )
   (i32.load
    (get_local $1)
   )
  )
  (i32.store
   (get_local $9)
   (i32.load
    (get_local $14)
   )
  )
  (set_local $30
   (i32.shr_s
    (tee_local $9
     (i32.div_s
      (tee_local $16
       (i32.mul
        (get_local $3)
        (i32.const 100)
       )
      )
      (tee_local $13
       (i32.load offset=8
        (get_local $1)
       )
      )
     )
    )
    (i32.const 1)
   )
  )
  (if
   (i32.le_s
    (get_local $9)
    (i32.const 1)
   )
   (set_local $30
    (i32.const 1)
   )
  )
  (if
   (tee_local $20
    (i32.eqz
     (get_local $6)
    )
   )
   (block
    (if
     (i32.or
      (i32.ne
       (i32.mul
        (get_local $9)
        (get_local $13)
       )
       (get_local $16)
      )
      (i32.lt_s
       (get_local $3)
       (i32.const 0)
      )
     )
     (call $_celt_fatal
      (i32.const 49348)
      (i32.const 44534)
      (i32.const 235)
     )
    )
    (if
     (i32.gt_s
      (i32.mul
       (get_local $3)
       (i32.const 1000)
      )
      (i32.mul
       (i32.load
        (get_local $19)
       )
       (get_local $13)
      )
     )
     (call $_celt_fatal
      (i32.const 49348)
      (i32.const 44534)
      (i32.const 241)
     )
     (block
      (set_local $11
       (get_local $10)
      )
      (set_local $12
       (get_local $0)
      )
     )
    )
   )
   (block
    (if
     (i32.ne
      (get_local $9)
      (i32.const 1)
     )
     (call $_celt_fatal
      (i32.const 49348)
      (i32.const 44534)
      (i32.const 206)
     )
    )
    (set_local $12
     (if (result i32)
      (tee_local $31
       (i32.eq
        (get_local $6)
        (i32.const 2)
       )
      )
      (block (result i32)
       (i64.store align=4
        (get_local $8)
        (i64.load align=4
         (tee_local $6
          (i32.add
           (get_local $0)
           (i32.const 16)
          )
         )
        )
       )
       (i64.store offset=8 align=4
        (get_local $8)
        (i64.load offset=8 align=4
         (get_local $6)
        )
       )
       (i32.load
        (i32.add
         (get_local $0)
         (i32.const 4576)
        )
       )
      )
      (i32.const 0)
     )
    )
    (block $__rjto$0
     (block $__rjti$0
      (loop $while-in
       (if
        (i32.lt_s
         (get_local $11)
         (tee_local $6
          (i32.load
           (get_local $14)
          )
         )
        )
        (block
         (set_local $32
          (call $_silk_init_encoder
           (i32.add
            (get_local $0)
            (i32.mul
             (get_local $11)
             (i32.const 10064)
            )
           )
           (i32.load
            (i32.add
             (i32.add
              (get_local $0)
              (i32.mul
               (get_local $11)
               (i32.const 10064)
              )
             )
             (i32.const 5092)
            )
           )
          )
         )
         (if
          (get_local $31)
          (block
           (i64.store align=4
            (tee_local $13
             (i32.add
              (i32.add
               (get_local $0)
               (i32.mul
                (get_local $11)
                (i32.const 10064)
               )
              )
              (i32.const 16)
             )
            )
            (i64.load align=4
             (get_local $8)
            )
           )
           (i64.store offset=8 align=4
            (get_local $13)
            (i64.load offset=8 align=4
             (get_local $8)
            )
           )
           (i32.store offset=32
            (i32.add
             (get_local $0)
             (i32.mul
              (get_local $11)
              (i32.const 10064)
             )
            )
            (get_local $12)
           )
          )
         )
         (br_if $__rjti$0
          (get_local $32)
         )
         (set_local $11
          (i32.add
           (get_local $11)
           (i32.const 1)
          )
         )
         (set_local $10
          (i32.const 0)
         )
         (br $while-in)
        )
       )
      )
      (br $__rjto$0)
     )
     (call $_celt_fatal
      (i32.const 44549)
      (i32.const 44534)
      (i32.const 222)
     )
    )
    (set_local $31
     (i32.load
      (get_local $19)
     )
    )
    (i32.store
     (get_local $19)
     (i32.const 10)
    )
    (set_local $32
     (i32.load
      (tee_local $8
       (i32.add
        (get_local $1)
        (i32.const 36)
       )
      )
     )
    )
    (i32.store
     (get_local $8)
     (i32.const 0)
    )
    (set_local $8
     (i32.const 0)
    )
    (set_local $11
     (loop $while-in1 (result i32)
      (if (result i32)
       (i32.lt_s
        (get_local $8)
        (get_local $6)
       )
       (block
        (i32.store
         (i32.add
          (i32.add
           (get_local $0)
           (i32.mul
            (get_local $8)
            (i32.const 10064)
           )
          )
          (i32.const 4668)
         )
         (i32.const 0)
        )
        (i32.store
         (i32.add
          (i32.add
           (get_local $0)
           (i32.mul
            (get_local $8)
            (i32.const 10064)
           )
          )
          (i32.const 4680)
         )
         (i32.const 1)
        )
        (set_local $8
         (i32.add
          (get_local $8)
          (i32.const 1)
         )
        )
        (set_local $6
         (i32.load
          (get_local $14)
         )
        )
        (br $while-in1)
       )
       (block (result i32)
        (set_local $12
         (get_local $0)
        )
        (get_local $10)
       )
      )
     )
    )
   )
  )
  (set_local $21
   (i32.add
    (get_local $0)
    (i32.const 4576)
   )
  )
  (set_local $24
   (i32.add
    (get_local $0)
    (i32.const 20208)
   )
  )
  (set_local $25
   (i32.add
    (get_local $0)
    (i32.const 5744)
   )
  )
  (set_local $10
   (i32.const 0)
  )
  (block $__rjto$2
   (block $__rjti$2
    (loop $while-in3
     (if
      (i32.lt_s
       (get_local $10)
       (tee_local $8
        (i32.load
         (get_local $14)
        )
       )
      )
      (block
       (if
        (tee_local $6
         (call $_silk_control_encoder
          (i32.add
           (get_local $12)
           (i32.mul
            (get_local $10)
            (i32.const 10064)
           )
          )
          (get_local $1)
          (i32.load
           (get_local $24)
          )
          (get_local $10)
          (tee_local $6
           (if (result i32)
            (i32.eq
             (get_local $10)
             (i32.const 1)
            )
            (i32.load
             (get_local $21)
            )
            (i32.const 0)
           )
          )
         )
        )
        (block
         (set_local $33
          (get_local $6)
         )
         (br $__rjti$2)
        )
       )
       (block $label$break$L48
        (if
         (i32.or
          (i32.load
           (i32.add
            (i32.add
             (get_local $12)
             (i32.mul
              (get_local $10)
              (i32.const 10064)
             )
            )
            (i32.const 4664)
           )
          )
          (get_local $15)
         )
         (block
          (set_local $6
           (i32.const 0)
          )
          (loop $while-in6
           (br_if $label$break$L48
            (i32.ge_s
             (get_local $6)
             (i32.load
              (get_local $25)
             )
            )
           )
           (i32.store
            (i32.add
             (i32.add
              (i32.add
               (get_local $12)
               (i32.mul
                (get_local $10)
                (i32.const 10064)
               )
              )
              (i32.const 4724)
             )
             (i32.shl
              (get_local $6)
              (i32.const 2)
             )
            )
            (i32.const 0)
           )
           (set_local $6
            (i32.add
             (get_local $6)
             (i32.const 1)
            )
           )
           (br $while-in6)
          )
         )
        )
       )
       (i32.store
        (i32.add
         (i32.add
          (get_local $12)
          (i32.mul
           (get_local $10)
           (i32.const 10064)
          )
         )
         (i32.const 6080)
        )
        (i32.load
         (i32.add
          (i32.add
           (get_local $12)
           (i32.mul
            (get_local $10)
            (i32.const 10064)
           )
          )
          (i32.const 6076)
         )
        )
       )
       (set_local $10
        (i32.add
         (get_local $10)
         (i32.const 1)
        )
       )
       (set_local $11
        (i32.const 0)
       )
       (br $while-in3)
      )
     )
    )
    (br $__rjto$2)
   )
   (set_global $STACKTOP
    (get_local $29)
   )
   (return
    (get_local $33)
   )
  )
  (set_local $6
   (i32.load
    (get_local $21)
   )
  )
  (set_local $50
   (i32.add
    (get_local $0)
    (i32.const 14640)
   )
  )
  (if
   (i32.ne
    (get_local $8)
    (i32.const 1)
   )
   (if
    (i32.ne
     (get_local $6)
     (i32.load
      (get_local $50)
     )
    )
    (call $_celt_fatal
     (i32.const 44572)
     (i32.const 44534)
     (i32.const 262)
    )
   )
  )
  (set_local $6
   (i32.div_s
    (i32.mul
     (tee_local $51
      (i32.mul
       (tee_local $61
        (i32.mul
         (get_local $9)
         (i32.const 10)
        )
       )
       (get_local $6)
      )
     )
     (i32.load
      (tee_local $62
       (i32.add
        (get_local $0)
        (i32.const 4556)
       )
      )
     )
    )
    (i32.mul
     (get_local $6)
     (i32.const 1000)
    )
   )
  )
  (set_local $63
   (call $_llvm_stacksave)
  )
  (set_local $16
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (get_local $6)
       (i32.const 1)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (set_local $26
   (i32.add
    (get_local $0)
    (i32.const 4584)
   )
  )
  (set_local $18
   (i32.add
    (get_local $0)
    (i32.const 5740)
   )
  )
  (set_local $39
   (i32.add
    (get_local $0)
    (i32.const 20200)
   )
  )
  (set_local $22
   (i32.add
    (get_local $0)
    (i32.const 15804)
   )
  )
  (set_local $52
   (i32.add
    (get_local $0)
    (i32.const 14648)
   )
  )
  (set_local $34
   (i32.add
    (get_local $0)
    (i32.const 5776)
   )
  )
  (set_local $23
   (i32.add
    (get_local $0)
    (i32.const 5096)
   )
  )
  (set_local $53
   (i32.add
    (get_local $1)
    (i32.const 28)
   )
  )
  (set_local $40
   (i32.add
    (get_local $0)
    (i32.const 15840)
   )
  )
  (set_local $41
   (i32.add
    (get_local $0)
    (i32.const 20184)
   )
  )
  (set_local $35
   (i32.add
    (get_local $0)
    (i32.const 20188)
   )
  )
  (set_local $42
   (i32.add
    (get_local $0)
    (i32.const 15160)
   )
  )
  (set_local $43
   (i32.add
    (get_local $0)
    (i32.const 20162)
   )
  )
  (set_local $64
   (i32.add
    (get_local $0)
    (i32.const 14788)
   )
  )
  (set_local $27
   (i32.add
    (get_local $0)
    (i32.const 20180)
   )
  )
  (set_local $54
   (i32.add
    (get_local $4)
    (i32.const 20)
   )
  )
  (set_local $55
   (i32.add
    (get_local $4)
    (i32.const 28)
   )
  )
  (set_local $65
   (i32.add
    (get_local $0)
    (i32.const 20128)
   )
  )
  (set_local $66
   (i32.add
    (get_local $0)
    (i32.const 5100)
   )
  )
  (set_local $67
   (i32.add
    (get_local $0)
    (i32.const 15164)
   )
  )
  (set_local $56
   (i32.add
    (get_local $0)
    (i32.const 4532)
   )
  )
  (set_local $57
   (i32.add
    (get_local $1)
    (i32.const 60)
   )
  )
  (set_local $68
   (i32.add
    (get_local $1)
    (i32.const 56)
   )
  )
  (set_local $69
   (i32.add
    (get_local $1)
    (i32.const 52)
   )
  )
  (set_local $70
   (i32.add
    (get_local $30)
    (i32.const -1)
   )
  )
  (set_local $71
   (i32.add
    (get_local $37)
    (i32.const 4)
   )
  )
  (set_local $72
   (i32.shl
    (get_local $30)
    (i32.const 1)
   )
  )
  (set_local $44
   (i32.add
    (get_local $0)
    (i32.const 20212)
   )
  )
  (set_local $58
   (i32.add
    (get_local $0)
    (i32.const 20132)
   )
  )
  (set_local $59
   (i32.add
    (get_local $0)
    (i32.const 14784)
   )
  )
  (set_local $45
   (i32.add
    (get_local $0)
    (i32.const 17232)
   )
  )
  (set_local $73
   (i32.add
    (get_local $0)
    (i32.const 10212)
   )
  )
  (set_local $74
   (i32.add
    (get_local $0)
    (i32.const 10080)
   )
  )
  (set_local $75
   (i32.add
    (get_local $0)
    (i32.const 14608)
   )
  )
  (set_local $76
   (i32.add
    (get_local $0)
    (i32.const 14540)
   )
  )
  (set_local $77
   (i32.add
    (get_local $0)
    (i32.const 14605)
   )
  )
  (set_local $78
   (i32.add
    (get_local $0)
    (i32.const 14556)
   )
  )
  (set_local $79
   (i32.add
    (get_local $0)
    (i32.const 14728)
   )
  )
  (set_local $80
   (i32.add
    (get_local $0)
    (i32.const 10064)
   )
  )
  (set_local $81
   (i32.add
    (get_local $0)
    (i32.const 6080)
   )
  )
  (set_local $46
   (i32.add
    (get_local $0)
    (i32.const 20204)
   )
  )
  (set_local $82
   (i32.add
    (get_local $0)
    (i32.const 16144)
   )
  )
  (set_local $6
   (get_local $2)
  )
  (set_local $10
   (get_local $3)
  )
  (set_local $3
   (get_local $11)
  )
  (block $__rjto$6
   (block $__rjti$6
    (block $__rjti$5
     (block $__rjti$4
      (block $__rjti$3
       (loop $label$continue$L61
        (block $label$break$L61
         (set_local $11
          (i32.div_s
           (i32.mul
            (if (result i32)
             (i32.lt_s
              (tee_local $2
               (i32.sub
                (i32.load
                 (get_local $26)
                )
                (tee_local $9
                 (i32.load
                  (get_local $18)
                 )
                )
               )
              )
              (get_local $51)
             )
             (get_local $2)
             (tee_local $2
              (get_local $51)
             )
            )
            (i32.load
             (get_local $62)
            )
           )
           (i32.mul
            (i32.load
             (get_local $21)
            )
            (i32.const 1000)
           )
          )
         )
         (block $label$break$L63
          (block $switch-default
           (block $switch-case17
            (block $switch-case
             (br_table $switch-case17 $switch-case $switch-default
              (i32.sub
               (i32.load
                (get_local $1)
               )
               (i32.const 1)
              )
             )
            )
            (if
             (i32.eq
              (i32.load
               (get_local $14)
              )
              (i32.const 2)
             )
             (block
              (set_local $15
               (i32.load
                (get_local $17)
               )
              )
              (set_local $8
               (i32.const 0)
              )
              (loop $while-in9
               (if
                (i32.lt_s
                 (get_local $8)
                 (get_local $11)
                )
                (block
                 (i32.store16
                  (i32.add
                   (get_local $16)
                   (i32.shl
                    (get_local $8)
                    (i32.const 1)
                   )
                  )
                  (i32.load16_s
                   (i32.add
                    (get_local $6)
                    (i32.shl
                     (get_local $8)
                     (i32.const 2)
                    )
                   )
                  )
                 )
                 (set_local $8
                  (i32.add
                   (get_local $8)
                   (i32.const 1)
                  )
                 )
                 (br $while-in9)
                )
               )
              )
              (if
               (i32.and
                (i32.eq
                 (i32.load
                  (get_local $39)
                 )
                 (i32.const 1)
                )
                (i32.eqz
                 (get_local $15)
                )
               )
               (drop
                (call $_memcpy
                 (get_local $40)
                 (get_local $34)
                 (i32.const 300)
                )
               )
              )
              (call $_silk_resampler
               (get_local $34)
               (i32.add
                (get_local $23)
                (i32.shl
                 (i32.add
                  (get_local $9)
                  (i32.const 2)
                 )
                 (i32.const 1)
                )
               )
               (get_local $16)
               (get_local $11)
              )
              (i32.store
               (get_local $18)
               (i32.add
                (i32.load
                 (get_local $18)
                )
                (get_local $2)
               )
              )
              (if
               (i32.ge_s
                (tee_local $2
                 (i32.sub
                  (i32.load
                   (get_local $52)
                  )
                  (tee_local $9
                   (i32.load
                    (get_local $22)
                   )
                  )
                 )
                )
                (tee_local $8
                 (i32.mul
                  (get_local $61)
                  (i32.load
                   (get_local $50)
                  )
                 )
                )
               )
               (set_local $2
                (get_local $8)
               )
              )
              (set_local $8
               (i32.const 0)
              )
              (loop $while-in11
               (if
                (i32.lt_s
                 (get_local $8)
                 (get_local $11)
                )
                (block
                 (i32.store16
                  (i32.add
                   (get_local $16)
                   (i32.shl
                    (get_local $8)
                    (i32.const 1)
                   )
                  )
                  (i32.load16_s
                   (i32.add
                    (get_local $6)
                    (i32.shl
                     (i32.or
                      (i32.shl
                       (get_local $8)
                       (i32.const 1)
                      )
                      (i32.const 1)
                     )
                     (i32.const 1)
                    )
                   )
                  )
                 )
                 (set_local $8
                  (i32.add
                   (get_local $8)
                   (i32.const 1)
                  )
                 )
                 (br $while-in11)
                )
               )
              )
              (call $_silk_resampler
               (get_local $40)
               (i32.add
                (get_local $42)
                (i32.shl
                 (i32.add
                  (get_local $9)
                  (i32.const 2)
                 )
                 (i32.const 1)
                )
               )
               (get_local $16)
               (get_local $11)
              )
              (i32.store
               (get_local $22)
               (i32.add
                (i32.load
                 (get_local $22)
                )
                (get_local $2)
               )
              )
              (set_local $2
               (i32.load
                (get_local $18)
               )
              )
              (br $label$break$L63)
             )
            )
            (br_if $__rjti$3
             (i32.ne
              (i32.load
               (get_local $14)
              )
              (i32.const 1)
             )
            )
            (set_local $8
             (i32.const 0)
            )
            (loop $while-in13
             (if
              (i32.lt_s
               (get_local $8)
               (get_local $11)
              )
              (block
               (i32.store16
                (i32.add
                 (get_local $16)
                 (i32.shl
                  (get_local $8)
                  (i32.const 1)
                 )
                )
                (i32.add
                 (i32.shr_u
                  (tee_local $15
                   (i32.add
                    (i32.load16_s
                     (i32.add
                      (get_local $6)
                      (i32.shl
                       (tee_local $15
                        (i32.shl
                         (get_local $8)
                         (i32.const 1)
                        )
                       )
                       (i32.const 1)
                      )
                     )
                    )
                    (i32.load16_s
                     (i32.add
                      (get_local $6)
                      (i32.shl
                       (i32.or
                        (get_local $15)
                        (i32.const 1)
                       )
                       (i32.const 1)
                      )
                     )
                    )
                   )
                  )
                  (i32.const 1)
                 )
                 (i32.and
                  (get_local $15)
                  (i32.const 1)
                 )
                )
               )
               (set_local $8
                (i32.add
                 (get_local $8)
                 (i32.const 1)
                )
               )
               (br $while-in13)
              )
             )
            )
            (call $_silk_resampler
             (get_local $34)
             (i32.add
              (get_local $23)
              (i32.shl
               (i32.add
                (get_local $9)
                (i32.const 2)
               )
               (i32.const 1)
              )
             )
             (get_local $16)
             (get_local $11)
            )
            (block $label$break$L84
             (if
              (i32.eq
               (i32.load
                (get_local $39)
               )
               (i32.const 2)
              )
              (if
               (i32.eqz
                (i32.load
                 (get_local $17)
                )
               )
               (block
                (call $_silk_resampler
                 (get_local $40)
                 (i32.add
                  (get_local $42)
                  (i32.shl
                   (i32.add
                    (i32.load
                     (get_local $22)
                    )
                    (i32.const 2)
                   )
                   (i32.const 1)
                  )
                 )
                 (get_local $16)
                 (get_local $11)
                )
                (set_local $8
                 (i32.const 0)
                )
                (loop $while-in16
                 (br_if $label$break$L84
                  (i32.ge_s
                   (get_local $8)
                   (i32.load
                    (get_local $26)
                   )
                  )
                 )
                 (i32.store16
                  (tee_local $9
                   (i32.add
                    (get_local $23)
                    (i32.shl
                     (i32.add
                      (i32.add
                       (i32.load
                        (get_local $18)
                       )
                       (get_local $8)
                      )
                      (i32.const 2)
                     )
                     (i32.const 1)
                    )
                   )
                  )
                  (i32.shr_u
                   (i32.add
                    (i32.load16_s
                     (get_local $9)
                    )
                    (i32.load16_s
                     (i32.add
                      (get_local $42)
                      (i32.shl
                       (i32.add
                        (i32.add
                         (i32.load
                          (get_local $22)
                         )
                         (get_local $8)
                        )
                        (i32.const 2)
                       )
                       (i32.const 1)
                      )
                     )
                    )
                   )
                   (i32.const 1)
                  )
                 )
                 (set_local $8
                  (i32.add
                   (get_local $8)
                   (i32.const 1)
                  )
                 )
                 (br $while-in16)
                )
               )
              )
             )
            )
            (i32.store
             (get_local $18)
             (tee_local $2
              (i32.add
               (i32.load
                (get_local $18)
               )
               (get_local $2)
              )
             )
            )
            (br $label$break$L63)
           )
           (br_if $__rjti$3
            (i32.ne
             (i32.load
              (get_local $14)
             )
             (i32.const 1)
            )
           )
           (drop
            (call $_memcpy
             (get_local $16)
             (get_local $6)
             (i32.shl
              (get_local $11)
              (i32.const 1)
             )
            )
           )
           (call $_silk_resampler
            (get_local $34)
            (i32.add
             (get_local $23)
             (i32.shl
              (i32.add
               (get_local $9)
               (i32.const 2)
              )
              (i32.const 1)
             )
            )
            (get_local $16)
            (get_local $11)
           )
           (i32.store
            (get_local $18)
            (tee_local $2
             (i32.add
              (i32.load
               (get_local $18)
              )
              (get_local $2)
             )
            )
           )
           (br $label$break$L63)
          )
          (br $__rjti$3)
         )
         (set_local $13
          (i32.load
           (get_local $1)
          )
         )
         (i32.store
          (get_local $24)
          (i32.const 0)
         )
         (if
          (i32.lt_s
           (get_local $2)
           (tee_local $8
            (i32.load
             (get_local $26)
            )
           )
          )
          (block
           (set_local $33
            (get_local $3)
           )
           (br $label$break$L61)
          )
         )
         (br_if $__rjti$4
          (i32.ne
           (get_local $2)
           (get_local $8)
          )
         )
         (if
          (i32.ne
           (tee_local $2
            (i32.load
             (get_local $14)
            )
           )
           (i32.const 1)
          )
          (br_if $__rjti$5
           (i32.ne
            (i32.load
             (get_local $22)
            )
            (i32.load
             (get_local $52)
            )
           )
          )
         )
         (if
          (i32.eqz
           (i32.or
            (i32.ne
             (i32.load
              (get_local $17)
             )
             (i32.const 0)
            )
            (i32.xor
             (get_local $20)
             (i32.const 1)
            )
           )
          )
          (block
           (i32.store16
            (get_local $38)
            (i32.const 0)
           )
           (i32.store8
            (get_local $38)
            (i32.sub
             (i32.const 0)
             (i32.shr_u
              (i32.const 256)
              (i32.mul
               (i32.add
                (i32.load
                 (get_local $25)
                )
                (i32.const 1)
               )
               (get_local $2)
              )
             )
            )
           )
           (call $_ec_enc_icdf
            (get_local $4)
            (i32.const 0)
            (get_local $38)
            (i32.const 8)
           )
           (set_local $8
            (i32.const 0)
           )
           (loop $while-in19
            (if
             (i32.lt_s
              (get_local $8)
              (tee_local $2
               (i32.load
                (get_local $14)
               )
              )
             )
             (block
              (set_local $15
               (i32.load
                (i32.add
                 (i32.add
                  (get_local $12)
                  (i32.mul
                   (get_local $8)
                   (i32.const 10064)
                  )
                 )
                 (i32.const 5744)
                )
               )
              )
              (set_local $2
               (i32.const 0)
              )
              (set_local $9
               (i32.const 0)
              )
              (loop $while-in21
               (if
                (i32.lt_s
                 (get_local $9)
                 (get_local $15)
                )
                (block
                 (set_local $2
                  (i32.or
                   (get_local $2)
                   (i32.shl
                    (i32.load
                     (i32.add
                      (i32.add
                       (i32.add
                        (get_local $12)
                        (i32.mul
                         (get_local $8)
                         (i32.const 10064)
                        )
                       )
                       (i32.const 4724)
                      )
                      (i32.shl
                       (get_local $9)
                       (i32.const 2)
                      )
                     )
                    )
                    (get_local $9)
                   )
                  )
                 )
                 (set_local $9
                  (i32.add
                   (get_local $9)
                   (i32.const 1)
                  )
                 )
                 (br $while-in21)
                )
               )
              )
              (i32.store8
               (i32.add
                (i32.add
                 (get_local $12)
                 (i32.mul
                  (get_local $8)
                  (i32.const 10064)
                 )
                )
                (i32.const 4723)
               )
               (i32.gt_s
                (get_local $2)
                (i32.const 0)
               )
              )
              (if
               (i32.and
                (i32.ne
                 (get_local $2)
                 (i32.const 0)
                )
                (i32.gt_s
                 (get_local $15)
                 (i32.const 1)
                )
               )
               (call $_ec_enc_icdf
                (get_local $4)
                (i32.add
                 (get_local $2)
                 (i32.const -1)
                )
                (i32.load
                 (i32.add
                  (i32.shl
                   (get_local $15)
                   (i32.const 2)
                  )
                  (i32.const 40940)
                 )
                )
                (i32.const 8)
               )
              )
              (set_local $8
               (i32.add
                (get_local $8)
                (i32.const 1)
               )
              )
              (br $while-in19)
             )
            )
           )
           (set_local $8
            (i32.const 0)
           )
           (loop $while-in23
            (if
             (i32.lt_s
              (get_local $8)
              (i32.load
               (get_local $25)
              )
             )
             (block
              (set_local $15
               (i32.eqz
                (get_local $8)
               )
              )
              (set_local $36
               (i32.add
                (get_local $43)
                (i32.mul
                 (get_local $8)
                 (i32.const 6)
                )
               )
              )
              (set_local $47
               (i32.add
                (get_local $64)
                (i32.shl
                 (get_local $8)
                 (i32.const 2)
                )
               )
              )
              (set_local $48
               (i32.add
                (get_local $8)
                (i32.const -1)
               )
              )
              (set_local $49
               (i32.add
                (get_local $27)
                (get_local $8)
               )
              )
              (set_local $9
               (i32.const 0)
              )
              (loop $while-in25
               (if
                (i32.lt_s
                 (get_local $9)
                 (get_local $2)
                )
                (block
                 (if
                  (i32.load
                   (i32.add
                    (i32.add
                     (i32.add
                      (get_local $12)
                      (i32.mul
                       (get_local $9)
                       (i32.const 10064)
                      )
                     )
                     (i32.const 4724)
                    )
                    (i32.shl
                     (get_local $8)
                     (i32.const 2)
                    )
                   )
                  )
                  (block
                   (if
                    (i32.and
                     (i32.eq
                      (get_local $2)
                      (i32.const 2)
                     )
                     (i32.eqz
                      (get_local $9)
                     )
                    )
                    (block
                     (call $_silk_stereo_encode_pred
                      (get_local $4)
                      (get_local $36)
                     )
                     (if
                      (i32.eqz
                       (i32.load
                        (get_local $47)
                       )
                      )
                      (call $_silk_stereo_encode_mid_only
                       (get_local $4)
                       (i32.load8_s
                        (get_local $49)
                       )
                      )
                     )
                    )
                   )
                   (call $_silk_encode_indices
                    (i32.add
                     (get_local $12)
                     (i32.mul
                      (get_local $9)
                      (i32.const 10064)
                     )
                    )
                    (get_local $4)
                    (get_local $8)
                    (i32.const 1)
                    (tee_local $2
                     (block $__rjto$1 (result i32)
                      (block $__rjti$1
                       (br_if $__rjti$1
                        (get_local $15)
                       )
                       (br_if $__rjti$1
                        (i32.eqz
                         (i32.load
                          (i32.add
                           (i32.add
                            (i32.add
                             (get_local $12)
                             (i32.mul
                              (get_local $9)
                              (i32.const 10064)
                             )
                            )
                            (i32.const 4724)
                           )
                           (i32.shl
                            (get_local $48)
                            (i32.const 2)
                           )
                          )
                         )
                        )
                       )
                       (br $__rjto$1
                        (i32.const 2)
                       )
                      )
                      (i32.const 0)
                     )
                    )
                   )
                   (call $_silk_encode_pulses
                    (get_local $4)
                    (i32.load8_s
                     (i32.add
                      (i32.add
                       (i32.add
                        (get_local $12)
                        (i32.mul
                         (get_local $9)
                         (i32.const 10064)
                        )
                       )
                       (i32.mul
                        (get_local $8)
                        (i32.const 36)
                       )
                      )
                      (i32.const 6129)
                     )
                    )
                    (i32.load8_s
                     (i32.add
                      (i32.add
                       (i32.add
                        (get_local $12)
                        (i32.mul
                         (get_local $9)
                         (i32.const 10064)
                        )
                       )
                       (i32.mul
                        (get_local $8)
                        (i32.const 36)
                       )
                      )
                      (i32.const 6130)
                     )
                    )
                    (i32.add
                     (i32.add
                      (i32.add
                       (get_local $12)
                       (i32.mul
                        (get_local $9)
                        (i32.const 10064)
                       )
                      )
                      (i32.const 6208)
                     )
                     (i32.mul
                      (get_local $8)
                      (i32.const 320)
                     )
                    )
                    (i32.load
                     (i32.add
                      (i32.add
                       (get_local $12)
                       (i32.mul
                        (get_local $9)
                        (i32.const 10064)
                       )
                      )
                      (i32.const 4584)
                     )
                    )
                   )
                   (set_local $2
                    (i32.load
                     (get_local $14)
                    )
                   )
                  )
                 )
                 (set_local $9
                  (i32.add
                   (get_local $9)
                   (i32.const 1)
                  )
                 )
                 (br $while-in25)
                )
               )
              )
              (set_local $8
               (i32.add
                (get_local $8)
                (i32.const 1)
               )
              )
              (br $while-in23)
             )
            )
           )
           (set_local $8
            (i32.const 0)
           )
           (loop $while-in27
            (if
             (i32.lt_s
              (get_local $8)
              (get_local $2)
             )
             (block
              (i64.store align=4
               (tee_local $2
                (i32.add
                 (i32.add
                  (get_local $12)
                  (i32.mul
                   (get_local $8)
                   (i32.const 10064)
                  )
                 )
                 (i32.const 4724)
                )
               )
               (i64.const 0)
              )
              (i32.store offset=8
               (get_local $2)
               (i32.const 0)
              )
              (set_local $8
               (i32.add
                (get_local $8)
                (i32.const 1)
               )
              )
              (set_local $2
               (i32.load
                (get_local $14)
               )
              )
              (br $while-in27)
             )
            )
           )
           (set_local $2
            (call $_ec_tell
             (i32.load
              (get_local $54)
             )
             (i32.load
              (get_local $55)
             )
            )
           )
           (i32.store
            (get_local $41)
            (get_local $2)
           )
          )
         )
         (set_local $15
          (i32.add
           (get_local $6)
           (i32.shl
            (i32.mul
             (get_local $11)
             (get_local $13)
            )
            (i32.const 1)
           )
          )
         )
         (set_local $9
          (i32.sub
           (get_local $10)
           (get_local $11)
          )
         )
         (call $_silk_HP_variable_cutoff
          (get_local $0)
         )
         (set_local $6
          (i32.div_s
           (i32.mul
            (tee_local $2
             (i32.load
              (get_local $53)
             )
            )
            (tee_local $10
             (i32.load
              (get_local $19)
             )
            )
           )
           (i32.const 1000)
          )
         )
         (if
          (get_local $20)
          (set_local $6
           (i32.sub
            (get_local $6)
            (i32.load
             (get_local $41)
            )
           )
          )
         )
         (set_local $6
          (i32.sub
           (i32.mul
            (i32.shr_s
             (i32.shl
              (tee_local $8
               (i32.div_s
                (get_local $6)
                (i32.load
                 (get_local $25)
                )
               )
              )
              (i32.const 16)
             )
             (i32.const 16)
            )
            (if (result i32)
             (i32.eq
              (get_local $10)
              (i32.const 10)
             )
             (i32.const 100)
             (i32.const 50)
            )
           )
           (i32.shl
            (i32.load
             (get_local $35)
            )
            (i32.const 1)
           )
          )
         )
         (if
          (get_local $20)
          (if
           (i32.gt_s
            (tee_local $10
             (i32.load
              (get_local $17)
             )
            )
            (i32.const 0)
           )
           (block
            (set_local $11
             (call $_ec_tell
              (i32.load
               (get_local $54)
              )
              (i32.load
               (get_local $55)
              )
             )
            )
            (set_local $6
             (i32.sub
              (get_local $6)
              (i32.shl
               (i32.sub
                (i32.sub
                 (get_local $11)
                 (i32.load
                  (get_local $41)
                 )
                )
                (i32.mul
                 (get_local $8)
                 (get_local $10)
                )
               )
               (i32.const 1)
              )
             )
            )
           )
          )
         )
         (if
          (i32.gt_s
           (get_local $2)
           (i32.const 5000)
          )
          (if
           (i32.gt_s
            (get_local $6)
            (get_local $2)
           )
           (set_local $6
            (get_local $2)
           )
           (if
            (i32.le_s
             (get_local $6)
             (i32.const 5000)
            )
            (set_local $6
             (i32.const 5000)
            )
           )
          )
          (if
           (i32.gt_s
            (get_local $6)
            (i32.const 5000)
           )
           (set_local $6
            (i32.const 5000)
           )
           (if
            (i32.lt_s
             (get_local $6)
             (get_local $2)
            )
            (set_local $6
             (get_local $2)
            )
           )
          )
         )
         (if
          (i32.eq
           (i32.load
            (get_local $14)
           )
           (i32.const 2)
          )
          (block
           (call $_silk_stereo_LR_to_MS
            (get_local $65)
            (get_local $66)
            (get_local $67)
            (i32.add
             (get_local $43)
             (i32.mul
              (tee_local $2
               (i32.load
                (get_local $17)
               )
              )
              (i32.const 6)
             )
            )
            (i32.add
             (get_local $27)
             (get_local $2)
            )
            (get_local $37)
            (get_local $6)
            (i32.load
             (get_local $56)
            )
            (i32.load
             (get_local $57)
            )
            (i32.load
             (get_local $21)
            )
            (i32.load
             (get_local $26)
            )
           )
           (if
            (i32.load8_s
             (i32.add
              (get_local $27)
              (tee_local $2
               (i32.load
                (get_local $17)
               )
              )
             )
            )
            (i32.store8
             (i32.add
              (get_local $59)
              (get_local $2)
             )
             (i32.const 0)
            )
            (block
             (if
              (i32.eq
               (i32.load
                (get_local $44)
               )
               (i32.const 1)
              )
              (block
               (i64.store align=4
                (get_local $45)
                (i64.const 0)
               )
               (i32.store offset=8
                (get_local $45)
                (i32.const 0)
               )
               (i64.store align=4
                (get_local $74)
                (i64.const 0)
               )
               (drop
                (call $_memset
                 (get_local $73)
                 (i32.const 0)
                 (i32.const 4384)
                )
               )
               (i32.store
                (get_local $75)
                (i32.const 100)
               )
               (i32.store
                (get_local $76)
                (i32.const 100)
               )
               (i32.store8
                (get_local $45)
                (i32.const 10)
               )
               (i32.store8
                (get_local $77)
                (i32.const 0)
               )
               (i32.store
                (get_local $78)
                (i32.const 65536)
               )
               (i32.store
                (get_local $79)
                (i32.const 1)
               )
              )
             )
             (call $_silk_encode_do_VAD_FLP
              (get_local $80)
              (get_local $7)
             )
            )
           )
           (if
            (get_local $20)
            (block
             (call $_silk_stereo_encode_pred
              (get_local $4)
              (i32.add
               (get_local $43)
               (i32.mul
                (i32.load
                 (get_local $17)
                )
                (i32.const 6)
               )
              )
             )
             (if
              (i32.eqz
               (i32.load8_s
                (i32.add
                 (get_local $59)
                 (tee_local $2
                  (i32.load
                   (get_local $17)
                  )
                 )
                )
               )
              )
              (call $_silk_stereo_encode_mid_only
               (get_local $4)
               (i32.load8_s
                (i32.add
                 (get_local $27)
                 (get_local $2)
                )
               )
              )
             )
            )
           )
          )
          (block
           (i32.store
            (get_local $23)
            (i32.load
             (get_local $58)
            )
           )
           (i32.store align=2
            (get_local $58)
            (i32.load align=2
             (i32.add
              (get_local $23)
              (i32.shl
               (i32.load
                (get_local $26)
               )
               (i32.const 1)
              )
             )
            )
           )
          )
         )
         (call $_silk_encode_do_VAD_FLP
          (get_local $0)
          (get_local $7)
         )
         (set_local $36
          (i32.eqz
           (get_local $28)
          )
         )
         (set_local $47
          (i32.eq
           (get_local $28)
           (get_local $70)
          )
         )
         (set_local $48
          (i32.eq
           (get_local $28)
           (i32.const 1)
          )
         )
         (set_local $49
          (i32.lt_s
           (i32.load
            (get_local $71)
           )
           (i32.const 1)
          )
         )
         (set_local $13
          (i32.const 0)
         )
         (set_local $2
          (get_local $3)
         )
         (loop $while-in29
          (if
           (i32.lt_s
            (get_local $13)
            (tee_local $8
             (i32.load
              (get_local $14)
             )
            )
           )
           (block
            (set_local $10
             (i32.load
              (get_local $68)
             )
            )
            (set_local $3
             (block $label$break$L166 (result i32)
              (block $switch-default34
               (block $switch-case33
                (block $switch-case32
                 (br_table $switch-case32 $switch-case33 $switch-default34
                  (i32.sub
                   (get_local $30)
                   (i32.const 2)
                  )
                 )
                )
                (br $label$break$L166
                 (if (result i32)
                  (get_local $36)
                  (i32.div_s
                   (i32.mul
                    (get_local $10)
                    (i32.const 3)
                   )
                   (i32.const 5)
                  )
                  (get_local $10)
                 )
                )
               )
               (if
                (get_local $36)
                (br $label$break$L166
                 (i32.div_s
                  (i32.shl
                   (get_local $10)
                   (i32.const 1)
                  )
                  (i32.const 5)
                 )
                )
               )
               (br $label$break$L166
                (if (result i32)
                 (get_local $48)
                 (i32.div_s
                  (i32.mul
                   (get_local $10)
                   (i32.const 3)
                  )
                  (i32.const 4)
                 )
                 (get_local $10)
                )
               )
              )
              (get_local $10)
             )
            )
            (set_local $11
             (i32.and
              (get_local $47)
              (i32.ne
               (i32.load
                (get_local $69)
               )
               (i32.const 0)
              )
             )
            )
            (if
             (i32.eq
              (get_local $8)
              (i32.const 1)
             )
             (set_local $8
              (get_local $6)
             )
             (block
              (set_local $8
               (i32.load
                (i32.add
                 (get_local $37)
                 (i32.shl
                  (get_local $13)
                  (i32.const 2)
                 )
                )
               )
              )
              (if
               (i32.eqz
                (i32.or
                 (i32.ne
                  (get_local $13)
                  (i32.const 0)
                 )
                 (get_local $49)
                )
               )
               (block
                (set_local $11
                 (i32.const 0)
                )
                (set_local $3
                 (i32.sub
                  (get_local $3)
                  (i32.div_s
                   (get_local $10)
                   (get_local $72)
                  )
                 )
                )
               )
              )
             )
            )
            (if
             (i32.gt_s
              (get_local $8)
              (i32.const 0)
             )
             (block
              (call $_silk_control_SNR
               (i32.add
                (get_local $12)
                (i32.mul
                 (get_local $13)
                 (i32.const 10064)
                )
               )
               (get_local $8)
              )
              (set_local $2
               (call $_silk_encode_frame_FLP
                (i32.add
                 (get_local $12)
                 (i32.mul
                  (get_local $13)
                  (i32.const 10064)
                 )
                )
                (get_local $5)
                (get_local $4)
                (tee_local $2
                 (block $do-once (result i32)
                  (if (result i32)
                   (i32.gt_s
                    (i32.load
                     (get_local $17)
                    )
                    (get_local $13)
                   )
                   (block (result i32)
                    (if
                     (get_local $13)
                     (drop
                      (br_if $do-once
                       (i32.const 1)
                       (i32.load
                        (get_local $44)
                       )
                      )
                     )
                    )
                    (i32.const 2)
                   )
                   (i32.const 0)
                  )
                 )
                )
                (get_local $3)
                (get_local $11)
               )
              )
             )
            )
            (i32.store
             (i32.add
              (i32.add
               (get_local $12)
               (i32.mul
                (get_local $13)
                (i32.const 10064)
               )
              )
              (i32.const 4668)
             )
             (i32.const 0)
            )
            (i32.store
             (i32.add
              (i32.add
               (get_local $12)
               (i32.mul
                (get_local $13)
                (i32.const 10064)
               )
              )
              (i32.const 5740)
             )
             (i32.const 0)
            )
            (i32.store
             (tee_local $3
              (i32.add
               (i32.add
                (get_local $12)
                (i32.mul
                 (get_local $13)
                 (i32.const 10064)
                )
               )
               (i32.const 5748)
              )
             )
             (i32.add
              (i32.load
               (get_local $3)
              )
              (i32.const 1)
             )
            )
            (set_local $13
             (i32.add
              (get_local $13)
              (i32.const 1)
             )
            )
            (br $while-in29)
           )
          )
         )
         (i32.store
          (get_local $44)
          (i32.load8_s
           (i32.add
            (get_local $27)
            (i32.add
             (tee_local $8
              (i32.load
               (get_local $17)
              )
             )
             (i32.const -1)
            )
           )
          )
         )
         (if
          (i32.gt_s
           (i32.load
            (get_local $5)
           )
           (i32.const 0)
          )
          (if
           (i32.eq
            (get_local $8)
            (i32.load
             (get_local $25)
            )
           )
           (block
            (set_local $11
             (i32.load
              (get_local $14)
             )
            )
            (set_local $3
             (i32.const 0)
            )
            (set_local $6
             (i32.const 0)
            )
            (loop $while-in39
             (if
              (i32.lt_s
               (get_local $6)
               (get_local $11)
              )
              (block
               (set_local $13
                (i32.load
                 (i32.add
                  (i32.add
                   (get_local $12)
                   (i32.mul
                    (get_local $6)
                    (i32.const 10064)
                   )
                  )
                  (i32.const 5744)
                 )
                )
               )
               (set_local $10
                (i32.const 0)
               )
               (loop $while-in41
                (set_local $3
                 (i32.shl
                  (get_local $3)
                  (i32.const 1)
                 )
                )
                (if
                 (i32.lt_s
                  (get_local $10)
                  (get_local $13)
                 )
                 (block
                  (set_local $3
                   (i32.or
                    (get_local $3)
                    (i32.load8_s
                     (i32.add
                      (i32.add
                       (i32.add
                        (get_local $12)
                        (i32.mul
                         (get_local $6)
                         (i32.const 10064)
                        )
                       )
                       (i32.const 4720)
                      )
                      (get_local $10)
                     )
                    )
                   )
                  )
                  (set_local $10
                   (i32.add
                    (get_local $10)
                    (i32.const 1)
                   )
                  )
                  (br $while-in41)
                 )
                )
               )
               (set_local $3
                (i32.or
                 (get_local $3)
                 (i32.load8_s
                  (i32.add
                   (i32.add
                    (get_local $12)
                    (i32.mul
                     (get_local $6)
                     (i32.const 10064)
                    )
                   )
                   (i32.const 4723)
                  )
                 )
                )
               )
               (set_local $6
                (i32.add
                 (get_local $6)
                 (i32.const 1)
                )
               )
               (br $while-in39)
              )
             )
            )
            (if
             (get_local $20)
             (call $_ec_enc_patch_initial_bits
              (get_local $4)
              (get_local $3)
              (i32.mul
               (i32.add
                (get_local $8)
                (i32.const 1)
               )
               (get_local $11)
              )
             )
            )
            (block $do-once42
             (if
              (i32.load
               (get_local $81)
              )
              (block
               (if
                (i32.ne
                 (i32.load
                  (get_local $14)
                 )
                 (i32.const 1)
                )
                (br_if $do-once42
                 (i32.eqz
                  (i32.load
                   (get_local $82)
                  )
                 )
                )
               )
               (i32.store
                (get_local $5)
                (i32.const 0)
               )
              )
             )
            )
            (i32.store
             (get_local $35)
             (tee_local $3
              (i32.add
               (i32.load
                (get_local $35)
               )
               (i32.shl
                (i32.load
                 (get_local $5)
                )
                (i32.const 3)
               )
              )
             )
            )
            (i32.store
             (get_local $35)
             (if (result i32)
              (i32.lt_s
               (if (result i32)
                (i32.gt_s
                 (tee_local $3
                  (i32.sub
                   (get_local $3)
                   (i32.div_s
                    (i32.mul
                     (i32.load
                      (get_local $53)
                     )
                     (i32.load
                      (get_local $19)
                     )
                    )
                    (i32.const 1000)
                   )
                  )
                 )
                 (i32.const 0)
                )
                (get_local $3)
                (tee_local $3
                 (i32.const 0)
                )
               )
               (i32.const 10000)
              )
              (get_local $3)
              (i32.const 10000)
             )
            )
            (if
             (i32.lt_s
              (i32.load
               (get_local $56)
              )
              (i32.add
               (i32.shr_s
                (i32.mul
                 (i32.shr_s
                  (i32.shl
                   (tee_local $3
                    (i32.load
                     (get_local $46)
                    )
                   )
                   (i32.const 16)
                  )
                  (i32.const 16)
                 )
                 (i32.const 3188)
                )
                (i32.const 16)
               )
               (i32.const 13)
              )
             )
             (block
              (i32.store
               (get_local $24)
               (i32.const 1)
              )
              (i32.store
               (get_local $46)
               (i32.const 0)
              )
             )
             (block
              (i32.store
               (get_local $24)
               (i32.const 0)
              )
              (i32.store
               (get_local $46)
               (i32.add
                (get_local $3)
                (i32.load
                 (get_local $19)
                )
               )
              )
             )
            )
           )
          )
         )
         (br_if $__rjti$6
          (i32.eqz
           (get_local $9)
          )
         )
         (set_local $6
          (get_local $15)
         )
         (set_local $10
          (get_local $9)
         )
         (set_local $28
          (i32.add
           (get_local $28)
           (i32.const 1)
          )
         )
         (set_local $3
          (get_local $2)
         )
         (br $label$continue$L61)
        )
       )
       (br $__rjto$6)
      )
      (call $_celt_fatal
       (i32.const 44699)
       (i32.const 44534)
       (i32.const 320)
      )
      (br $__rjto$6)
     )
     (call $_celt_fatal
      (i32.const 44785)
      (i32.const 44534)
      (i32.const 336)
     )
     (br $__rjto$6)
    )
    (call $_celt_fatal
     (i32.const 44884)
     (i32.const 44534)
     (i32.const 337)
    )
    (br $__rjto$6)
   )
   (set_local $33
    (get_local $2)
   )
   (set_local $60
    (i32.load
     (get_local $24)
    )
   )
  )
  (i32.store
   (get_local $39)
   (i32.load
    (get_local $14)
   )
  )
  (i32.store offset=76
   (get_local $1)
   (get_local $60)
  )
  (i32.store offset=80
   (get_local $1)
   (tee_local $2
    (if (result i32)
     (i32.eq
      (i32.load
       (get_local $21)
      )
      (i32.const 16)
     )
     (i32.eqz
      (i32.load offset=28
       (get_local $0)
      )
     )
     (i32.const 0)
    )
   )
  )
  (i32.store offset=72
   (get_local $1)
   (i32.mul
    (i32.shr_s
     (i32.shl
      (i32.load
       (get_local $21)
      )
      (i32.const 16)
     )
     (i32.const 16)
    )
    (i32.const 1000)
   )
  )
  (i32.store offset=84
   (get_local $1)
   (tee_local $2
    (if (result i32)
     (i32.load
      (get_local $57)
     )
     (i32.const 0)
     (i32.load16_s
      (i32.add
       (get_local $0)
       (i32.const 20156)
      )
     )
    )
   )
  )
  (block $label$break$L228
   (if
    (i32.eqz
     (get_local $20)
    )
    (block
     (i32.store
      (get_local $19)
      (get_local $31)
     )
     (i32.store offset=36
      (get_local $1)
      (get_local $32)
     )
     (set_local $2
      (i32.const 0)
     )
     (loop $while-in46
      (br_if $label$break$L228
       (i32.ge_s
        (get_local $2)
        (i32.load
         (get_local $14)
        )
       )
      )
      (i32.store
       (i32.add
        (i32.add
         (get_local $12)
         (i32.mul
          (get_local $2)
          (i32.const 10064)
         )
        )
        (i32.const 4668)
       )
       (i32.const 0)
      )
      (i32.store
       (i32.add
        (i32.add
         (get_local $12)
         (i32.mul
          (get_local $2)
          (i32.const 10064)
         )
        )
        (i32.const 4680)
       )
       (i32.const 0)
      )
      (set_local $2
       (i32.add
        (get_local $2)
        (i32.const 1)
       )
      )
      (br $while-in46)
     )
    )
   )
  )
  (i32.store offset=92
   (get_local $1)
   (i32.load8_s
    (tee_local $2
     (i32.add
      (get_local $0)
      (i32.const 4765)
     )
    )
   )
  )
  (i32.store offset=96
   (get_local $1)
   (i32.load16_s
    (i32.add
     (i32.add
      (i32.shl
       (i32.shr_s
        (i32.load8_s
         (get_local $2)
        )
        (i32.const 1)
       )
       (i32.const 2)
      )
      (i32.const 41164)
     )
     (i32.shl
      (i32.load8_s
       (i32.add
        (get_local $0)
        (i32.const 4766)
       )
      )
      (i32.const 1)
     )
    )
   )
  )
  (call $_llvm_stackrestore
   (get_local $63)
  )
  (set_global $STACKTOP
   (get_local $29)
  )
  (get_local $33)
 )
 (func $_silk_encode_indices (; 199 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (block $folding-inner0
   (set_local $6
    (get_global $STACKTOP)
   )
   (set_global $STACKTOP
    (i32.add
     (get_global $STACKTOP)
     (i32.const 48)
    )
   )
   (set_local $2
    (i32.add
     (i32.add
      (get_local $0)
      (i32.const 6100)
     )
     (i32.mul
      (get_local $2)
      (i32.const 36)
     )
    )
   )
   (set_local $5
    (i32.add
     (get_local $0)
     (i32.const 4736)
    )
   )
   (if
    (i32.ge_u
     (tee_local $2
      (i32.add
       (i32.shl
        (i32.load8_s
         (tee_local $7
          (i32.add
           (if (result i32)
            (tee_local $9
             (i32.eqz
              (get_local $3)
             )
            )
            (get_local $5)
            (tee_local $5
             (get_local $2)
            )
           )
           (i32.const 29)
          )
         )
        )
        (i32.const 1)
       )
       (i32.load8_s offset=30
        (get_local $5)
       )
      )
     )
     (i32.const 6)
    )
    (call $_celt_fatal
     (i32.const 45021)
     (i32.const 45073)
     (i32.const 59)
    )
   )
   (set_local $8
    (i32.add
     (get_local $6)
     (i32.const 16)
    )
   )
   (set_local $10
    (get_local $6)
   )
   (set_local $3
    (i32.gt_s
     (get_local $2)
     (i32.const 1)
    )
   )
   (block $__rjto$0
    (block $__rjti$0
     (if
      (get_local $9)
      (if
       (get_local $3)
       (br $__rjti$0)
       (call $_ec_enc_icdf
        (get_local $1)
        (get_local $2)
        (i32.const 45703)
        (i32.const 8)
       )
      )
      (if
       (get_local $3)
       (br $__rjti$0)
       (call $_celt_fatal
        (i32.const 45095)
        (i32.const 45073)
        (i32.const 60)
       )
      )
     )
     (br $__rjto$0)
    )
    (call $_ec_enc_icdf
     (get_local $1)
     (i32.add
      (get_local $2)
      (i32.const -2)
     )
     (i32.const 45699)
     (i32.const 8)
    )
   )
   (set_local $2
    (i32.load8_s
     (get_local $5)
    )
   )
   (if
    (tee_local $14
     (i32.eq
      (get_local $4)
      (i32.const 2)
     )
    )
    (call $_ec_enc_icdf
     (get_local $1)
     (get_local $2)
     (i32.const 21856)
     (i32.const 8)
    )
    (block
     (call $_ec_enc_icdf
      (get_local $1)
      (i32.shr_s
       (get_local $2)
       (i32.const 3)
      )
      (i32.add
       (i32.shl
        (i32.load8_s
         (get_local $7)
        )
        (i32.const 3)
       )
       (i32.const 21824)
      )
      (i32.const 8)
     )
     (call $_ec_enc_icdf
      (get_local $1)
      (i32.and
       (i32.load8_s
        (get_local $5)
       )
       (i32.const 7)
      )
      (i32.const 45728)
      (i32.const 8)
     )
    )
   )
   (set_local $9
    (i32.add
     (get_local $0)
     (i32.const 4580)
    )
   )
   (set_local $2
    (i32.const 1)
   )
   (loop $while-in
    (if
     (i32.lt_s
      (get_local $2)
      (i32.load
       (get_local $9)
      )
     )
     (block
      (call $_ec_enc_icdf
       (get_local $1)
       (i32.load8_s
        (i32.add
         (get_local $5)
         (get_local $2)
        )
       )
       (i32.const 21856)
       (i32.const 8)
      )
      (set_local $2
       (i32.add
        (get_local $2)
        (i32.const 1)
       )
      )
      (br $while-in)
     )
    )
   )
   (call $_ec_enc_icdf
    (get_local $1)
    (i32.load8_s
     (tee_local $2
      (i32.add
       (get_local $5)
       (i32.const 8)
      )
     )
    )
    (i32.add
     (i32.load offset=16
      (tee_local $3
       (i32.load
        (tee_local $11
         (i32.add
          (get_local $0)
          (i32.const 4692)
         )
        )
       )
      )
     )
     (i32.mul
      (i32.shr_s
       (i32.load8_s
        (get_local $7)
       )
       (i32.const 1)
      )
      (i32.load16_s
       (get_local $3)
      )
     )
    )
    (i32.const 8)
   )
   (call $_silk_NLSF_unpack
    (get_local $8)
    (get_local $10)
    (i32.load
     (get_local $11)
    )
    (i32.load8_s
     (get_local $2)
    )
   )
   (if
    (i32.ne
     (i32.load
      (i32.add
       (get_local $0)
       (i32.const 4640)
      )
     )
     (tee_local $6
      (i32.load16_s offset=2
       (tee_local $2
        (i32.load
         (get_local $11)
        )
       )
      )
     )
    )
    (call $_celt_fatal
     (i32.const 45149)
     (i32.const 45073)
     (i32.const 93)
    )
   )
   (set_local $3
    (i32.const 0)
   )
   (loop $while-in1
    (if
     (i32.lt_s
      (get_local $3)
      (i32.shr_s
       (i32.shl
        (get_local $6)
        (i32.const 16)
       )
       (i32.const 16)
      )
     )
     (block
      (if
       (i32.gt_s
        (tee_local $13
         (i32.load8_s
          (tee_local $12
           (i32.add
            (i32.add
             (get_local $5)
             (i32.const 8)
            )
            (tee_local $6
             (i32.add
              (get_local $3)
              (i32.const 1)
             )
            )
           )
          )
         )
        )
        (i32.const 3)
       )
       (block
        (call $_ec_enc_icdf
         (get_local $1)
         (i32.const 8)
         (i32.add
          (i32.load offset=28
           (get_local $2)
          )
          (i32.load16_s
           (i32.add
            (get_local $8)
            (i32.shl
             (get_local $3)
             (i32.const 1)
            )
           )
          )
         )
         (i32.const 8)
        )
        (call $_ec_enc_icdf
         (get_local $1)
         (i32.add
          (i32.load8_s
           (get_local $12)
          )
          (i32.const -4)
         )
         (i32.const 45736)
         (i32.const 8)
        )
       )
       (if
        (i32.lt_s
         (get_local $13)
         (i32.const -3)
        )
        (block
         (call $_ec_enc_icdf
          (get_local $1)
          (i32.const 0)
          (i32.add
           (i32.load offset=28
            (get_local $2)
           )
           (i32.load16_s
            (i32.add
             (get_local $8)
             (i32.shl
              (get_local $3)
              (i32.const 1)
             )
            )
           )
          )
          (i32.const 8)
         )
         (call $_ec_enc_icdf
          (get_local $1)
          (i32.sub
           (i32.const -4)
           (i32.load8_s
            (get_local $12)
           )
          )
          (i32.const 45736)
          (i32.const 8)
         )
        )
        (call $_ec_enc_icdf
         (get_local $1)
         (i32.add
          (get_local $13)
          (i32.const 4)
         )
         (i32.add
          (i32.load offset=28
           (get_local $2)
          )
          (i32.load16_s
           (i32.add
            (get_local $8)
            (i32.shl
             (get_local $3)
             (i32.const 1)
            )
           )
          )
         )
         (i32.const 8)
        )
       )
      )
      (set_local $3
       (get_local $6)
      )
      (set_local $6
       (i32.load16_s offset=2
        (tee_local $2
         (i32.load
          (get_local $11)
         )
        )
       )
      )
      (br $while-in1)
     )
    )
   )
   (if
    (i32.eq
     (i32.load
      (get_local $9)
     )
     (i32.const 4)
    )
    (call $_ec_enc_icdf
     (get_local $1)
     (i32.load8_s offset=31
      (get_local $5)
     )
     (i32.const 45705)
     (i32.const 8)
    )
   )
   (br_if $folding-inner0
    (i32.ne
     (i32.load8_s
      (get_local $7)
     )
     (i32.const 2)
    )
   )
   (block $__rjto$1
    (block $__rjti$1
     (br_if $__rjti$1
      (i32.eqz
       (get_local $14)
      )
     )
     (br_if $__rjti$1
      (i32.ne
       (i32.load
        (i32.add
         (get_local $0)
         (i32.const 5768)
        )
       )
       (i32.const 2)
      )
     )
     (if
      (i32.gt_u
       (i32.add
        (tee_local $6
         (i32.sub
          (i32.load16_s
           (tee_local $2
            (i32.add
             (get_local $5)
             (i32.const 26)
            )
           )
          )
          (i32.load16_s
           (tee_local $3
            (i32.add
             (get_local $0)
             (i32.const 5772)
            )
           )
          )
         )
        )
        (i32.const 8)
       )
       (i32.const 19)
      )
      (block
       (call $_ec_enc_icdf
        (get_local $1)
        (i32.const 0)
        (i32.const 26048)
        (i32.const 8)
       )
       (br $__rjti$1)
      )
      (call $_ec_enc_icdf
       (get_local $1)
       (i32.add
        (get_local $6)
        (i32.const 9)
       )
       (i32.const 26048)
       (i32.const 8)
      )
     )
     (br $__rjto$1)
    )
    (set_local $3
     (i32.div_s
      (tee_local $6
       (i32.load16_s
        (tee_local $2
         (i32.add
          (get_local $5)
          (i32.const 26)
         )
        )
       )
      )
      (i32.shr_s
       (tee_local $8
        (i32.load
         (i32.add
          (get_local $0)
          (i32.const 4576)
         )
        )
       )
       (i32.const 1)
      )
     )
    )
    (set_local $6
     (i32.sub
      (get_local $6)
      (i32.mul
       (i32.shr_s
        (i32.shl
         (get_local $3)
         (i32.const 16)
        )
        (i32.const 16)
       )
       (i32.shr_s
        (i32.shl
         (get_local $8)
         (i32.const 15)
        )
        (i32.const 16)
       )
      )
     )
    )
    (call $_ec_enc_icdf
     (get_local $1)
     (get_local $3)
     (i32.const 26016)
     (i32.const 8)
    )
    (call $_ec_enc_icdf
     (get_local $1)
     (get_local $6)
     (i32.load
      (i32.add
       (get_local $0)
       (i32.const 4684)
      )
     )
     (i32.const 8)
    )
    (set_local $3
     (i32.add
      (get_local $0)
      (i32.const 5772)
     )
    )
   )
   (i32.store16
    (get_local $3)
    (i32.load16_s
     (get_local $2)
    )
   )
   (call $_ec_enc_icdf
    (get_local $1)
    (i32.load8_s offset=28
     (get_local $5)
    )
    (i32.load
     (i32.add
      (get_local $0)
      (i32.const 4688)
     )
    )
    (i32.const 8)
   )
   (call $_ec_enc_icdf
    (get_local $1)
    (i32.load8_s
     (tee_local $3
      (i32.add
       (get_local $5)
       (i32.const 32)
      )
     )
    )
    (i32.const 45652)
    (i32.const 8)
   )
   (set_local $2
    (i32.const 0)
   )
   (loop $while-in5
    (if
     (i32.lt_s
      (get_local $2)
      (i32.load
       (get_local $9)
      )
     )
     (block
      (call $_ec_enc_icdf
       (get_local $1)
       (i32.load8_s
        (i32.add
         (i32.add
          (get_local $5)
          (i32.const 4)
         )
         (get_local $2)
        )
       )
       (i32.load
        (i32.add
         (i32.shl
          (i32.load8_s
           (get_local $3)
          )
          (i32.const 2)
         )
         (i32.const 40820)
        )
       )
       (i32.const 8)
      )
      (set_local $2
       (i32.add
        (get_local $2)
        (i32.const 1)
       )
      )
      (br $while-in5)
     )
    )
   )
   (br_if $folding-inner0
    (get_local $4)
   )
   (call $_ec_enc_icdf
    (get_local $1)
    (i32.load8_s offset=33
     (get_local $5)
    )
    (i32.const 45696)
    (i32.const 8)
   )
   (i32.store
    (i32.add
     (get_local $0)
     (i32.const 5768)
    )
    (i32.load8_s
     (get_local $7)
    )
   )
   (call $_ec_enc_icdf
    (get_local $1)
    (i32.load8_s offset=34
     (get_local $5)
    )
    (i32.const 45713)
    (i32.const 8)
   )
   (set_global $STACKTOP
    (get_local $10)
   )
   (return)
  )
  (i32.store
   (i32.add
    (get_local $0)
    (i32.const 5768)
   )
   (i32.load8_s
    (get_local $7)
   )
  )
  (call $_ec_enc_icdf
   (get_local $1)
   (i32.load8_s offset=34
    (get_local $5)
   )
   (i32.const 45713)
   (i32.const 8)
  )
  (set_global $STACKTOP
   (get_local $10)
  )
 )
 (func $_silk_encode_pulses (; 200 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (set_local $12
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.const 32)
   )
  )
  (i64.store
   (get_local $12)
   (i64.const 0)
  )
  (i64.store offset=8
   (get_local $12)
   (i64.const 0)
  )
  (i64.store offset=16
   (get_local $12)
   (i64.const 0)
  )
  (i64.store offset=24
   (get_local $12)
   (i64.const 0)
  )
  (set_local $5
   (i32.shr_s
    (get_local $4)
    (i32.const 4)
   )
  )
  (if
   (i32.lt_s
    (i32.and
     (get_local $4)
     (i32.const -16)
    )
    (get_local $4)
   )
   (if
    (i32.eq
     (get_local $4)
     (i32.const 120)
    )
    (block
     (i64.store align=1
      (tee_local $8
       (i32.add
        (get_local $3)
        (i32.const 120)
       )
      )
      (i64.const 0)
     )
     (i64.store offset=8 align=1
      (get_local $8)
      (i64.const 0)
     )
     (set_local $14
      (i32.add
       (get_local $5)
       (i32.const 1)
      )
     )
    )
    (call $_celt_fatal
     (i32.const 45219)
     (i32.const 45261)
     (i32.const 89)
    )
   )
   (set_local $14
    (get_local $5)
   )
  )
  (set_local $13
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (tee_local $8
        (i32.shl
         (get_local $14)
         (i32.const 4)
        )
       )
       (i32.const 2)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (set_local $5
   (i32.const 0)
  )
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $5)
     (get_local $8)
    )
    (block
     (set_local $10
      (i32.sub
       (i32.const 0)
       (tee_local $7
        (tee_local $6
         (i32.load8_s
          (i32.add
           (get_local $3)
           (get_local $5)
          )
         )
        )
       )
      )
     )
     (i32.store
      (i32.add
       (get_local $13)
       (i32.shl
        (get_local $5)
        (i32.const 2)
       )
      )
      (if (result i32)
       (i32.gt_s
        (get_local $6)
        (i32.const 0)
       )
       (get_local $7)
       (get_local $10)
      )
     )
     (set_local $9
      (i32.sub
       (i32.const 0)
       (tee_local $10
        (tee_local $7
         (i32.load8_s
          (i32.add
           (get_local $3)
           (tee_local $6
            (i32.or
             (get_local $5)
             (i32.const 1)
            )
           )
          )
         )
        )
       )
      )
     )
     (i32.store
      (i32.add
       (get_local $13)
       (i32.shl
        (get_local $6)
        (i32.const 2)
       )
      )
      (if (result i32)
       (i32.gt_s
        (get_local $7)
        (i32.const 0)
       )
       (get_local $10)
       (get_local $9)
      )
     )
     (set_local $9
      (i32.sub
       (i32.const 0)
       (tee_local $10
        (tee_local $7
         (i32.load8_s
          (i32.add
           (get_local $3)
           (tee_local $6
            (i32.or
             (get_local $5)
             (i32.const 2)
            )
           )
          )
         )
        )
       )
      )
     )
     (i32.store
      (i32.add
       (get_local $13)
       (i32.shl
        (get_local $6)
        (i32.const 2)
       )
      )
      (if (result i32)
       (i32.gt_s
        (get_local $7)
        (i32.const 0)
       )
       (get_local $10)
       (get_local $9)
      )
     )
     (set_local $9
      (i32.sub
       (i32.const 0)
       (tee_local $10
        (tee_local $7
         (i32.load8_s
          (i32.add
           (get_local $3)
           (tee_local $6
            (i32.or
             (get_local $5)
             (i32.const 3)
            )
           )
          )
         )
        )
       )
      )
     )
     (i32.store
      (i32.add
       (get_local $13)
       (i32.shl
        (get_local $6)
        (i32.const 2)
       )
      )
      (if (result i32)
       (i32.gt_s
        (get_local $7)
        (i32.const 0)
       )
       (get_local $10)
       (get_local $9)
      )
     )
     (set_local $5
      (i32.add
       (get_local $5)
       (i32.const 4)
      )
     )
     (br $while-in)
    )
   )
  )
  (set_local $10
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (get_local $14)
       (i32.const 2)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (set_local $15
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (get_local $14)
       (i32.const 2)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (set_local $5
   (get_local $13)
  )
  (set_local $8
   (i32.const 0)
  )
  (loop $while-in1
   (if
    (i32.lt_s
     (get_local $8)
     (get_local $14)
    )
    (block
     (i32.store
      (tee_local $7
       (i32.add
        (get_local $15)
        (i32.shl
         (get_local $8)
         (i32.const 2)
        )
       )
      )
      (i32.const 0)
     )
     (set_local $9
      (i32.add
       (get_local $10)
       (i32.shl
        (get_local $8)
        (i32.const 2)
       )
      )
     )
     (loop $while-in3
      (set_local $6
       (call $_combine_and_check
        (get_local $12)
        (get_local $5)
        (i32.const 8)
        (i32.const 8)
       )
      )
      (set_local $11
       (call $_combine_and_check
        (get_local $12)
        (get_local $12)
        (i32.const 10)
        (i32.const 4)
       )
      )
      (set_local $6
       (i32.add
        (get_local $6)
        (get_local $11)
       )
      )
      (set_local $11
       (call $_combine_and_check
        (get_local $12)
        (get_local $12)
        (i32.const 12)
        (i32.const 2)
       )
      )
      (set_local $6
       (i32.add
        (get_local $6)
        (get_local $11)
       )
      )
      (set_local $11
       (i32.sub
        (i32.const 0)
        (call $_combine_and_check
         (get_local $9)
         (get_local $12)
         (i32.const 16)
         (i32.const 1)
        )
       )
      )
      (if
       (i32.ne
        (get_local $6)
        (get_local $11)
       )
       (block
        (i32.store
         (get_local $7)
         (i32.add
          (i32.load
           (get_local $7)
          )
          (i32.const 1)
         )
        )
        (set_local $6
         (i32.const 0)
        )
        (loop $while-in5
         (if
          (i32.ne
           (get_local $6)
           (i32.const 16)
          )
          (block
           (i32.store
            (tee_local $11
             (i32.add
              (get_local $5)
              (i32.shl
               (get_local $6)
               (i32.const 2)
              )
             )
            )
            (i32.shr_s
             (i32.load
              (get_local $11)
             )
             (i32.const 1)
            )
           )
           (set_local $6
            (i32.add
             (get_local $6)
             (i32.const 1)
            )
           )
           (br $while-in5)
          )
         )
        )
        (br $while-in3)
       )
      )
     )
     (set_local $5
      (i32.sub
       (get_local $5)
       (i32.const -64)
      )
     )
     (set_local $8
      (i32.add
       (get_local $8)
       (i32.const 1)
      )
     )
     (br $while-in1)
    )
   )
  )
  (set_local $11
   (i32.shr_s
    (get_local $1)
    (i32.const 1)
   )
  )
  (set_local $6
   (i32.const 2147483647)
  )
  (set_local $5
   (i32.const 0)
  )
  (set_local $7
   (i32.const 0)
  )
  (loop $while-in7
   (if
    (i32.ne
     (get_local $7)
     (i32.const 9)
    )
    (block
     (set_local $16
      (i32.add
       (i32.mul
        (get_local $7)
        (i32.const 18)
       )
       (i32.const 26337)
      )
     )
     (set_local $8
      (i32.load8_u
       (i32.add
        (i32.add
         (i32.mul
          (get_local $11)
          (i32.const 9)
         )
         (i32.const 26528)
        )
        (get_local $7)
       )
      )
     )
     (set_local $9
      (i32.const 0)
     )
     (loop $while-in9
      (if
       (i32.lt_s
        (get_local $9)
        (get_local $14)
       )
       (block
        (set_local $8
         (i32.add
          (get_local $8)
          (if (result i32)
           (i32.gt_s
            (i32.load
             (i32.add
              (get_local $15)
              (i32.shl
               (get_local $9)
               (i32.const 2)
              )
             )
            )
            (i32.const 0)
           )
           (i32.load8_u
            (get_local $16)
           )
           (i32.load8_u
            (i32.add
             (i32.add
              (i32.mul
               (get_local $7)
               (i32.const 18)
              )
              (i32.const 26320)
             )
             (i32.load
              (i32.add
               (get_local $10)
               (i32.shl
                (get_local $9)
                (i32.const 2)
               )
              )
             )
            )
           )
          )
         )
        )
        (set_local $9
         (i32.add
          (get_local $9)
          (i32.const 1)
         )
        )
        (br $while-in9)
       )
      )
     )
     (if
      (tee_local $9
       (i32.lt_s
        (get_local $8)
        (get_local $6)
       )
      )
      (set_local $5
       (get_local $7)
      )
     )
     (if
      (get_local $9)
      (set_local $6
       (get_local $8)
      )
     )
     (set_local $7
      (i32.add
       (get_local $7)
       (i32.const 1)
      )
     )
     (br $while-in7)
    )
   )
  )
  (call $_ec_enc_icdf
   (get_local $0)
   (get_local $5)
   (i32.add
    (i32.mul
     (get_local $11)
     (i32.const 9)
    )
    (i32.const 26496)
   )
   (i32.const 8)
  )
  (set_local $6
   (i32.add
    (i32.mul
     (get_local $5)
     (i32.const 18)
    )
    (i32.const 26128)
   )
  )
  (set_local $5
   (i32.const 0)
  )
  (loop $while-in11
   (if
    (i32.lt_s
     (get_local $5)
     (get_local $14)
    )
    (block
     (if
      (tee_local $8
       (i32.load
        (i32.add
         (get_local $15)
         (i32.shl
          (get_local $5)
          (i32.const 2)
         )
        )
       )
      )
      (block
       (call $_ec_enc_icdf
        (get_local $0)
        (i32.const 17)
        (get_local $6)
        (i32.const 8)
       )
       (set_local $7
        (i32.add
         (get_local $8)
         (i32.const -1)
        )
       )
       (set_local $8
        (i32.const 0)
       )
       (loop $while-in13
        (if
         (i32.lt_s
          (get_local $8)
          (get_local $7)
         )
         (block
          (call $_ec_enc_icdf
           (get_local $0)
           (i32.const 17)
           (i32.const 26290)
           (i32.const 8)
          )
          (set_local $8
           (i32.add
            (get_local $8)
            (i32.const 1)
           )
          )
          (br $while-in13)
         )
        )
       )
       (call $_ec_enc_icdf
        (get_local $0)
        (i32.load
         (i32.add
          (get_local $10)
          (i32.shl
           (get_local $5)
           (i32.const 2)
          )
         )
        )
        (i32.const 26290)
        (i32.const 8)
       )
      )
      (call $_ec_enc_icdf
       (get_local $0)
       (i32.load
        (i32.add
         (get_local $10)
         (i32.shl
          (get_local $5)
          (i32.const 2)
         )
        )
       )
       (get_local $6)
       (i32.const 8)
      )
     )
     (set_local $5
      (i32.add
       (get_local $5)
       (i32.const 1)
      )
     )
     (br $while-in11)
    )
   )
  )
  (set_local $5
   (i32.const 0)
  )
  (loop $while-in15
   (if
    (i32.lt_s
     (get_local $5)
     (get_local $14)
    )
    (block
     (if
      (i32.gt_s
       (i32.load
        (i32.add
         (get_local $10)
         (i32.shl
          (get_local $5)
          (i32.const 2)
         )
        )
       )
       (i32.const 0)
      )
      (call $_silk_shell_encoder
       (get_local $0)
       (i32.add
        (get_local $13)
        (i32.shl
         (get_local $5)
         (i32.const 6)
        )
       )
      )
     )
     (set_local $5
      (i32.add
       (get_local $5)
       (i32.const 1)
      )
     )
     (br $while-in15)
    )
   )
  )
  (set_local $6
   (i32.const 0)
  )
  (loop $while-in17
   (if
    (i32.lt_s
     (get_local $6)
     (get_local $14)
    )
    (block
     (block $label$break$L57
      (if
       (i32.gt_s
        (tee_local $8
         (i32.load
          (i32.add
           (get_local $15)
           (i32.shl
            (get_local $6)
            (i32.const 2)
           )
          )
         )
        )
        (i32.const 0)
       )
       (block
        (set_local $9
         (i32.add
          (get_local $3)
          (i32.shl
           (get_local $6)
           (i32.const 4)
          )
         )
        )
        (set_local $7
         (i32.const 0)
        )
        (loop $while-in20
         (br_if $label$break$L57
          (i32.eq
           (get_local $7)
           (i32.const 16)
          )
         )
         (set_local $11
          (i32.sub
           (i32.const 0)
           (tee_local $13
            (tee_local $5
             (i32.load8_s
              (i32.add
               (get_local $9)
               (get_local $7)
              )
             )
            )
           )
          )
         )
         (set_local $13
          (i32.shr_s
           (i32.shl
            (if (result i32)
             (i32.gt_s
              (get_local $5)
              (i32.const 0)
             )
             (get_local $13)
             (get_local $11)
            )
            (i32.const 24)
           )
           (i32.const 24)
          )
         )
         (set_local $5
          (get_local $8)
         )
         (loop $while-in22
          (if
           (i32.gt_s
            (get_local $5)
            (i32.const 1)
           )
           (block
            (call $_ec_enc_icdf
             (get_local $0)
             (i32.and
              (i32.shr_u
               (get_local $13)
               (tee_local $5
                (i32.add
                 (get_local $5)
                 (i32.const -1)
                )
               )
              )
              (i32.const 1)
             )
             (i32.const 45694)
             (i32.const 8)
            )
            (br $while-in22)
           )
          )
         )
         (call $_ec_enc_icdf
          (get_local $0)
          (i32.and
           (get_local $13)
           (i32.const 1)
          )
          (i32.const 45694)
          (i32.const 8)
         )
         (set_local $7
          (i32.add
           (get_local $7)
           (i32.const 1)
          )
         )
         (br $while-in20)
        )
       )
      )
     )
     (set_local $6
      (i32.add
       (get_local $6)
       (i32.const 1)
      )
     )
     (br $while-in17)
    )
   )
  )
  (call $_silk_encode_signs
   (get_local $0)
   (get_local $3)
   (get_local $4)
   (get_local $1)
   (get_local $2)
   (get_local $10)
  )
  (set_global $STACKTOP
   (get_local $12)
  )
 )
 (func $_combine_and_check (; 201 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  (block $__rjto$0 (result i32)
   (block $__rjti$0
    (loop $while-in
     (block $while-out
      (if
       (i32.ge_s
        (get_local $4)
        (get_local $3)
       )
       (block
        (set_local $0
         (i32.const 0)
        )
        (br $__rjti$0)
       )
      )
      (set_local $0
       (if (result i32)
        (i32.gt_s
         (tee_local $5
          (i32.add
           (i32.load
            (i32.add
             (get_local $1)
             (i32.shl
              (tee_local $5
               (i32.shl
                (get_local $4)
                (i32.const 1)
               )
              )
              (i32.const 2)
             )
            )
           )
           (i32.load
            (i32.add
             (get_local $1)
             (i32.shl
              (i32.or
               (get_local $5)
               (i32.const 1)
              )
              (i32.const 2)
             )
            )
           )
          )
         )
         (get_local $2)
        )
        (i32.const 1)
        (block
         (i32.store
          (i32.add
           (get_local $0)
           (i32.shl
            (get_local $4)
            (i32.const 2)
           )
          )
          (get_local $5)
         )
         (set_local $4
          (i32.add
           (get_local $4)
           (i32.const 1)
          )
         )
         (br $while-in)
        )
       )
      )
     )
    )
   )
   (get_local $0)
  )
 )
 (func $_silk_gains_quant (; 202 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $8)
     (get_local $4)
    )
    (block
     (drop
      (call $_silk_lin2log
       (i32.load
        (tee_local $9
         (i32.add
          (get_local $1)
          (i32.shl
           (get_local $8)
           (i32.const 2)
          )
         )
        )
       )
      )
     )
     (set_local $5
      (i32.and
       (tee_local $6
        (i32.shr_u
         (i32.mul
          (i32.shr_s
           (i32.add
            (i32.shl
             (call $_silk_lin2log
              (i32.load
               (get_local $9)
              )
             )
             (i32.const 16)
            )
            (i32.const -136970240)
           )
           (i32.const 16)
          )
          (i32.const 2251)
         )
         (i32.const 16)
        )
       )
       (i32.const 255)
      )
     )
     (i32.store8
      (tee_local $7
       (i32.add
        (get_local $0)
        (get_local $8)
       )
      )
      (get_local $5)
     )
     (if
      (i32.lt_s
       (i32.shr_s
        (i32.shl
         (get_local $6)
         (i32.const 24)
        )
        (i32.const 24)
       )
       (i32.load8_s
        (get_local $2)
       )
      )
      (i32.store8
       (get_local $7)
       (tee_local $5
        (i32.shr_s
         (i32.shl
          (i32.add
           (get_local $5)
           (i32.const 1)
          )
          (i32.const 24)
         )
         (i32.const 24)
        )
       )
      )
     )
     (i32.store8
      (get_local $7)
      (tee_local $5
       (if (result i32)
        (i32.gt_s
         (i32.shr_s
          (i32.shl
           (get_local $5)
           (i32.const 24)
          )
          (i32.const 24)
         )
         (i32.const 63)
        )
        (i32.const 63)
        (i32.and
         (if (result i32)
          (i32.gt_s
           (i32.shr_s
            (i32.shl
             (get_local $5)
             (i32.const 24)
            )
            (i32.const 24)
           )
           (i32.const 0)
          )
          (get_local $5)
          (i32.const 0)
         )
         (i32.const 255)
        )
       )
      )
     )
     (set_local $6
      (i32.load8_s
       (get_local $2)
      )
     )
     (if
      (i32.or
       (get_local $8)
       (get_local $3)
      )
      (block
       (i32.store8
        (get_local $7)
        (tee_local $5
         (i32.and
          (tee_local $6
           (i32.sub
            (get_local $5)
            (i32.and
             (get_local $6)
             (i32.const 255)
            )
           )
          )
          (i32.const 255)
         )
        )
       )
       (if
        (i32.gt_s
         (tee_local $10
          (i32.shr_s
           (i32.shl
            (get_local $6)
            (i32.const 24)
           )
           (i32.const 24)
          )
         )
         (tee_local $6
          (i32.add
           (i32.load8_s
            (get_local $2)
           )
           (i32.const 8)
          )
         )
        )
        (i32.store8
         (get_local $7)
         (tee_local $5
          (i32.and
           (i32.add
            (get_local $6)
            (i32.shr_u
             (i32.add
              (i32.sub
               (get_local $10)
               (get_local $6)
              )
              (i32.const 1)
             )
             (i32.const 1)
            )
           )
           (i32.const 255)
          )
         )
        )
       )
       (i32.store8
        (get_local $7)
        (tee_local $5
         (if (result i32)
          (i32.gt_s
           (i32.shr_s
            (i32.shl
             (get_local $5)
             (i32.const 24)
            )
            (i32.const 24)
           )
           (i32.const 36)
          )
          (i32.const 36)
          (i32.shr_s
           (i32.shl
            (if (result i32)
             (i32.gt_s
              (i32.shr_s
               (i32.shl
                (get_local $5)
                (i32.const 24)
               )
               (i32.const 24)
              )
              (i32.const -4)
             )
             (get_local $5)
             (i32.const -4)
            )
            (i32.const 24)
           )
           (i32.const 24)
          )
         )
        )
       )
       (set_local $5
        (if (result i32)
         (i32.gt_s
          (get_local $5)
          (get_local $6)
         )
         (block (result i32)
          (i32.store8
           (get_local $2)
           (tee_local $5
            (i32.add
             (i32.sub
              (i32.shl
               (get_local $5)
               (i32.const 1)
              )
              (get_local $6)
             )
             (i32.load8_u
              (get_local $2)
             )
            )
           )
          )
          (call $_silk_min_int
           (i32.shr_s
            (i32.shl
             (get_local $5)
             (i32.const 24)
            )
            (i32.const 24)
           )
          )
         )
         (i32.add
          (i32.and
           (get_local $5)
           (i32.const 255)
          )
          (i32.load8_u
           (get_local $2)
          )
         )
        )
       )
       (i32.store8
        (get_local $2)
        (get_local $5)
       )
       (i32.store8
        (get_local $7)
        (i32.add
         (i32.load8_u
          (get_local $7)
         )
         (i32.const 4)
        )
       )
       (set_local $5
        (i32.load8_s
         (get_local $2)
        )
       )
      )
      (block
       (set_local $5
        (i32.load8_s
         (get_local $0)
        )
       )
       (if
        (i32.gt_s
         (get_local $6)
         (i32.const 67)
        )
        (set_local $5
         (if (result i32)
          (i32.lt_s
           (tee_local $7
            (i32.add
             (get_local $6)
             (i32.const -4)
            )
           )
           (get_local $5)
          )
          (get_local $7)
          (i32.and
           (if (result i32)
            (i32.gt_s
             (get_local $5)
             (i32.const 63)
            )
            (get_local $5)
            (i32.const 63)
           )
           (i32.const 255)
          )
         )
        )
        (if
         (i32.gt_s
          (get_local $5)
          (i32.const 63)
         )
         (set_local $5
          (i32.const 63)
         )
         (if
          (i32.gt_s
           (tee_local $7
            (i32.add
             (get_local $6)
             (i32.const -4)
            )
           )
           (get_local $5)
          )
          (set_local $5
           (get_local $7)
          )
         )
        )
       )
       (i32.store8
        (get_local $0)
        (tee_local $5
         (i32.and
          (get_local $5)
          (i32.const 255)
         )
        )
       )
       (i32.store8
        (get_local $2)
        (get_local $5)
       )
      )
     )
     (set_local $5
      (call $_silk_log2lin
       (call $_silk_min_32
        (i32.add
         (i32.add
          (i32.mul
           (tee_local $5
            (i32.shr_s
             (i32.shl
              (get_local $5)
              (i32.const 24)
             )
             (i32.const 24)
            )
           )
           (i32.const 29)
          )
          (i32.shr_s
           (i32.mul
            (get_local $5)
            (i32.const 7281)
           )
           (i32.const 16)
          )
         )
         (i32.const 2090)
        )
       )
      )
     )
     (i32.store
      (get_local $9)
      (get_local $5)
     )
     (set_local $8
      (i32.add
       (get_local $8)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
 )
 (func $_silk_min_int (; 203 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (if (result i32)
   (i32.lt_s
    (get_local $0)
    (i32.const 63)
   )
   (get_local $0)
   (i32.const 63)
  )
 )
 (func $_silk_min_32 (; 204 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (if (result i32)
   (i32.lt_s
    (get_local $0)
    (i32.const 3967)
   )
   (get_local $0)
   (i32.const 3967)
  )
 )
 (func $_silk_gains_dequant (; 205 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $6)
     (get_local $4)
    )
    (block
     (set_local $5
      (if (result i32)
       (i32.or
        (get_local $6)
        (get_local $3)
       )
       (if (result i32)
        (i32.gt_s
         (tee_local $5
          (i32.add
           (i32.load8_s
            (i32.add
             (get_local $1)
             (get_local $6)
            )
           )
           (i32.const -4)
          )
         )
         (tee_local $9
          (i32.add
           (tee_local $8
            (tee_local $7
             (i32.load8_s
              (get_local $2)
             )
            )
           )
           (i32.const 8)
          )
         )
        )
        (i32.add
         (i32.sub
          (i32.shl
           (get_local $5)
           (i32.const 1)
          )
          (get_local $9)
         )
         (get_local $8)
        )
        (i32.add
         (get_local $5)
         (i32.and
          (get_local $7)
          (i32.const 255)
         )
        )
       )
       (call $_silk_max_int
        (i32.load8_s
         (get_local $1)
        )
        (i32.add
         (i32.load8_s
          (get_local $2)
         )
         (i32.const -16)
        )
       )
      )
     )
     (i32.store8
      (get_local $2)
      (tee_local $7
       (i32.and
        (get_local $5)
        (i32.const 255)
       )
      )
     )
     (i32.store8
      (get_local $2)
      (tee_local $5
       (if (result i32)
        (i32.gt_s
         (i32.shl
          (get_local $5)
          (i32.const 24)
         )
         (i32.const 1056964608)
        )
        (i32.const 63)
        (if (result i32)
         (i32.lt_s
          (i32.shr_s
           (i32.shl
            (get_local $7)
            (i32.const 24)
           )
           (i32.const 24)
          )
          (i32.const 0)
         )
         (i32.const 0)
         (i32.shr_s
          (i32.shl
           (get_local $5)
           (i32.const 24)
          )
          (i32.const 24)
         )
        )
       )
      )
     )
     (set_local $5
      (call $_silk_log2lin
       (call $_silk_min_32
        (i32.add
         (i32.add
          (i32.mul
           (get_local $5)
           (i32.const 29)
          )
          (i32.shr_s
           (i32.mul
            (get_local $5)
            (i32.const 7281)
           )
           (i32.const 16)
          )
         )
         (i32.const 2090)
        )
       )
      )
     )
     (i32.store
      (i32.add
       (get_local $0)
       (i32.shl
        (get_local $6)
        (i32.const 2)
       )
      )
      (get_local $5)
     )
     (set_local $6
      (i32.add
       (get_local $6)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
 )
 (func $_silk_max_int (; 206 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (if (result i32)
   (i32.gt_s
    (get_local $0)
    (get_local $1)
   )
   (get_local $0)
   (get_local $1)
  )
 )
 (func $_silk_gains_ID (; 207 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $2)
     (get_local $1)
    )
    (block
     (set_local $3
      (i32.add
       (i32.shl
        (get_local $3)
        (i32.const 8)
       )
       (i32.load8_s
        (i32.add
         (get_local $0)
         (get_local $2)
        )
       )
      )
     )
     (set_local $2
      (i32.add
       (get_local $2)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (get_local $3)
 )
 (func $_silk_interpolate (; 208 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local $6 i32)
  (if
   (i32.le_s
    (get_local $3)
    (i32.const -1)
   )
   (call $_celt_fatal
    (i32.const 45282)
    (i32.const 45314)
    (i32.const 45)
   )
  )
  (if
   (i32.ge_s
    (get_local $3)
    (i32.const 5)
   )
   (call $_celt_fatal
    (i32.const 45333)
    (i32.const 45314)
    (i32.const 46)
   )
  )
  (set_local $5
   (i32.shr_s
    (i32.shl
     (get_local $3)
     (i32.const 16)
    )
    (i32.const 16)
   )
  )
  (set_local $3
   (i32.const 0)
  )
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $3)
     (get_local $4)
    )
    (block
     (i32.store16
      (i32.add
       (get_local $0)
       (i32.shl
        (get_local $3)
        (i32.const 1)
       )
      )
      (i32.add
       (i32.shr_u
        (i32.mul
         (i32.shr_s
          (i32.shl
           (i32.sub
            (i32.load16_u
             (i32.add
              (get_local $2)
              (i32.shl
               (get_local $3)
               (i32.const 1)
              )
             )
            )
            (tee_local $6
             (i32.load16_u
              (i32.add
               (get_local $1)
               (i32.shl
                (get_local $3)
                (i32.const 1)
               )
              )
             )
            )
           )
           (i32.const 16)
          )
          (i32.const 16)
         )
         (get_local $5)
        )
        (i32.const 2)
       )
       (get_local $6)
      )
     )
     (set_local $3
      (i32.add
       (get_local $3)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
 )
 (func $_silk_LP_variable_cutoff (; 209 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (set_local $3
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.const 32)
   )
  )
  (if
   (i32.eqz
    (i32.load
     (tee_local $5
      (i32.add
       (get_local $0)
       (i32.const 12)
      )
     )
    )
   )
   (block
    (set_global $STACKTOP
     (get_local $3)
    )
    (return)
   )
  )
  (call $_silk_LP_interpolate_filter_taps
   (tee_local $6
    (i32.add
     (get_local $3)
     (i32.const 8)
    )
   )
   (get_local $3)
   (i32.shr_s
    (tee_local $7
     (i32.sub
      (i32.const 262144)
      (i32.shl
       (i32.load
        (tee_local $4
         (i32.add
          (get_local $0)
          (i32.const 8)
         )
        )
       )
       (i32.const 10)
      )
     )
    )
    (i32.const 16)
   )
   (i32.and
    (get_local $7)
    (i32.const 64512)
   )
  )
  (i32.store
   (get_local $4)
   (if (result i32)
    (i32.lt_s
     (if (result i32)
      (i32.gt_s
       (tee_local $4
        (i32.add
         (i32.load
          (get_local $4)
         )
         (i32.load
          (get_local $5)
         )
        )
       )
       (i32.const 0)
      )
      (get_local $4)
      (tee_local $4
       (i32.const 0)
      )
     )
     (i32.const 256)
    )
    (get_local $4)
    (i32.const 256)
   )
  )
  (call $_silk_biquad_alt_stride1
   (get_local $1)
   (get_local $6)
   (i32.load
    (get_local $3)
   )
   (i32.load offset=4
    (get_local $3)
   )
   (get_local $0)
   (get_local $1)
   (get_local $2)
  )
  (set_global $STACKTOP
   (get_local $3)
  )
 )
 (func $_silk_LP_interpolate_filter_taps (; 210 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (if
   (i32.ge_s
    (get_local $2)
    (i32.const 4)
   )
   (block
    (i64.store align=4
     (get_local $0)
     (i64.load align=4
      (i32.const 25952)
     )
    )
    (i32.store offset=8
     (get_local $0)
     (i32.load
      (i32.const 25960)
     )
    )
    (i64.store align=4
     (get_local $1)
     (i64.const 246535838699988205)
    )
    (return)
   )
  )
  (if
   (i32.le_s
    (get_local $3)
    (i32.const 0)
   )
   (block
    (i64.store align=4
     (get_local $0)
     (i64.load align=4
      (tee_local $3
       (i32.add
        (i32.mul
         (get_local $2)
         (i32.const 12)
        )
        (i32.const 25904)
       )
      )
     )
    )
    (i32.store offset=8
     (get_local $0)
     (i32.load offset=8
      (get_local $3)
     )
    )
    (i64.store align=4
     (get_local $1)
     (i64.load
      (i32.add
       (i32.shl
        (get_local $2)
        (i32.const 3)
       )
       (i32.const 25968)
      )
     )
    )
    (return)
   )
  )
  (set_local $6
   (i32.add
    (get_local $2)
    (i32.const 1)
   )
  )
  (set_local $5
   (i32.shr_s
    (i32.shl
     (get_local $3)
     (i32.const 16)
    )
    (i32.const 16)
   )
  )
  (if
   (i32.lt_s
    (get_local $3)
    (i32.const 32768)
   )
   (block
    (set_local $3
     (i32.const 0)
    )
    (loop $while-in
     (if
      (i32.ne
       (get_local $3)
       (i32.const 3)
      )
      (block
       (set_local $4
        (i32.sub
         (i32.load
          (i32.add
           (i32.add
            (i32.mul
             (get_local $6)
             (i32.const 12)
            )
            (i32.const 25904)
           )
           (i32.shl
            (get_local $3)
            (i32.const 2)
           )
          )
         )
         (tee_local $7
          (i32.load
           (i32.add
            (i32.add
             (i32.mul
              (get_local $2)
              (i32.const 12)
             )
             (i32.const 25904)
            )
            (i32.shl
             (get_local $3)
             (i32.const 2)
            )
           )
          )
         )
        )
       )
       (i32.store
        (i32.add
         (get_local $0)
         (i32.shl
          (get_local $3)
          (i32.const 2)
         )
        )
        (i32.add
         (get_local $7)
         (i32.add
          (i32.mul
           (i32.shr_s
            (get_local $4)
            (i32.const 16)
           )
           (get_local $5)
          )
          (i32.shr_s
           (i32.mul
            (i32.and
             (get_local $4)
             (i32.const 65535)
            )
            (get_local $5)
           )
           (i32.const 16)
          )
         )
        )
       )
       (set_local $3
        (i32.add
         (get_local $3)
         (i32.const 1)
        )
       )
       (br $while-in)
      )
     )
    )
    (set_local $0
     (i32.const 0)
    )
    (loop $while-in1
     (if
      (i32.ne
       (get_local $0)
       (i32.const 2)
      )
      (block
       (set_local $3
        (i32.sub
         (i32.load
          (i32.add
           (i32.add
            (i32.shl
             (get_local $6)
             (i32.const 3)
            )
            (i32.const 25968)
           )
           (i32.shl
            (get_local $0)
            (i32.const 2)
           )
          )
         )
         (tee_local $4
          (i32.load
           (i32.add
            (i32.add
             (i32.shl
              (get_local $2)
              (i32.const 3)
             )
             (i32.const 25968)
            )
            (i32.shl
             (get_local $0)
             (i32.const 2)
            )
           )
          )
         )
        )
       )
       (i32.store
        (i32.add
         (get_local $1)
         (i32.shl
          (get_local $0)
          (i32.const 2)
         )
        )
        (i32.add
         (get_local $4)
         (i32.add
          (i32.mul
           (i32.shr_s
            (get_local $3)
            (i32.const 16)
           )
           (get_local $5)
          )
          (i32.shr_s
           (i32.mul
            (i32.and
             (get_local $3)
             (i32.const 65535)
            )
            (get_local $5)
           )
           (i32.const 16)
          )
         )
        )
       )
       (set_local $0
        (i32.add
         (get_local $0)
         (i32.const 1)
        )
       )
       (br $while-in1)
      )
     )
    )
   )
   (block
    (set_local $3
     (i32.const 0)
    )
    (loop $while-in3
     (if
      (i32.ne
       (get_local $3)
       (i32.const 3)
      )
      (block
       (set_local $4
        (i32.sub
         (tee_local $7
          (i32.load
           (i32.add
            (i32.add
             (i32.mul
              (get_local $6)
              (i32.const 12)
             )
             (i32.const 25904)
            )
            (i32.shl
             (get_local $3)
             (i32.const 2)
            )
           )
          )
         )
         (i32.load
          (i32.add
           (i32.add
            (i32.mul
             (get_local $2)
             (i32.const 12)
            )
            (i32.const 25904)
           )
           (i32.shl
            (get_local $3)
            (i32.const 2)
           )
          )
         )
        )
       )
       (i32.store
        (i32.add
         (get_local $0)
         (i32.shl
          (get_local $3)
          (i32.const 2)
         )
        )
        (i32.add
         (get_local $7)
         (i32.add
          (i32.mul
           (i32.shr_s
            (get_local $4)
            (i32.const 16)
           )
           (get_local $5)
          )
          (i32.shr_s
           (i32.mul
            (i32.and
             (get_local $4)
             (i32.const 65535)
            )
            (get_local $5)
           )
           (i32.const 16)
          )
         )
        )
       )
       (set_local $3
        (i32.add
         (get_local $3)
         (i32.const 1)
        )
       )
       (br $while-in3)
      )
     )
    )
    (set_local $0
     (i32.const 0)
    )
    (loop $while-in5
     (if
      (i32.ne
       (get_local $0)
       (i32.const 2)
      )
      (block
       (set_local $3
        (i32.sub
         (tee_local $4
          (i32.load
           (i32.add
            (i32.add
             (i32.shl
              (get_local $6)
              (i32.const 3)
             )
             (i32.const 25968)
            )
            (i32.shl
             (get_local $0)
             (i32.const 2)
            )
           )
          )
         )
         (i32.load
          (i32.add
           (i32.add
            (i32.shl
             (get_local $2)
             (i32.const 3)
            )
            (i32.const 25968)
           )
           (i32.shl
            (get_local $0)
            (i32.const 2)
           )
          )
         )
        )
       )
       (i32.store
        (i32.add
         (get_local $1)
         (i32.shl
          (get_local $0)
          (i32.const 2)
         )
        )
        (i32.add
         (get_local $4)
         (i32.add
          (i32.mul
           (i32.shr_s
            (get_local $3)
            (i32.const 16)
           )
           (get_local $5)
          )
          (i32.shr_s
           (i32.mul
            (i32.and
             (get_local $3)
             (i32.const 65535)
            )
            (get_local $5)
           )
           (i32.const 16)
          )
         )
        )
       )
       (set_local $0
        (i32.add
         (get_local $0)
         (i32.const 1)
        )
       )
       (br $while-in5)
      )
     )
    )
   )
  )
 )
 (func $_silk_NLSF_decode (; 211 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (set_local $4
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.const 80)
   )
  )
  (call $_silk_NLSF_unpack
   (i32.add
    (get_local $4)
    (i32.const 32)
   )
   (tee_local $3
    (i32.sub
     (get_local $4)
     (i32.const -64)
    )
   )
   (get_local $2)
   (i32.load8_s
    (get_local $1)
   )
  )
  (call $_silk_NLSF_residual_dequant
   (get_local $4)
   (i32.add
    (get_local $1)
    (i32.const 1)
   )
   (get_local $3)
   (i32.load16_s offset=4
    (get_local $2)
   )
   (i32.load16_s
    (tee_local $5
     (i32.add
      (get_local $2)
      (i32.const 2)
     )
    )
   )
  )
  (set_local $6
   (i32.add
    (i32.load offset=8
     (get_local $2)
    )
    (tee_local $3
     (i32.mul
      (i32.load8_s
       (get_local $1)
      )
      (tee_local $1
       (i32.load16_s
        (get_local $5)
       )
      )
     )
    )
   )
  )
  (set_local $7
   (i32.add
    (i32.load offset=12
     (get_local $2)
    )
    (i32.shl
     (get_local $3)
     (i32.const 1)
    )
   )
  )
  (set_local $3
   (i32.const 0)
  )
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $3)
     (tee_local $1
      (i32.shr_s
       (i32.shl
        (get_local $1)
        (i32.const 16)
       )
       (i32.const 16)
      )
     )
    )
    (block
     (i32.store16
      (i32.add
       (get_local $0)
       (i32.shl
        (get_local $3)
        (i32.const 1)
       )
      )
      (if (result i32)
       (i32.lt_s
        (if (result i32)
         (i32.gt_s
          (tee_local $1
           (i32.add
            (i32.div_s
             (i32.shl
              (i32.load16_s
               (i32.add
                (get_local $4)
                (i32.shl
                 (get_local $3)
                 (i32.const 1)
                )
               )
              )
              (i32.const 14)
             )
             (i32.load16_s
              (i32.add
               (get_local $7)
               (i32.shl
                (get_local $3)
                (i32.const 1)
               )
              )
             )
            )
            (i32.shl
             (i32.load8_u
              (i32.add
               (get_local $6)
               (get_local $3)
              )
             )
             (i32.const 7)
            )
           )
          )
          (i32.const 0)
         )
         (get_local $1)
         (tee_local $1
          (i32.const 0)
         )
        )
        (i32.const 32767)
       )
       (get_local $1)
       (i32.const 32767)
      )
     )
     (set_local $3
      (i32.add
       (get_local $3)
       (i32.const 1)
      )
     )
     (set_local $1
      (i32.load16_s
       (get_local $5)
      )
     )
     (br $while-in)
    )
   )
  )
  (call $_silk_NLSF_stabilize
   (get_local $0)
   (i32.load offset=36
    (get_local $2)
   )
   (get_local $1)
  )
  (set_global $STACKTOP
   (get_local $4)
  )
 )
 (func $_silk_NLSF_residual_dequant (; 212 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (set_local $5
   (i32.shr_s
    (i32.shl
     (get_local $3)
     (i32.const 16)
    )
    (i32.const 16)
   )
  )
  (set_local $3
   (i32.shr_s
    (i32.shl
     (get_local $4)
     (i32.const 16)
    )
    (i32.const 16)
   )
  )
  (loop $while-in
   (if
    (i32.gt_s
     (get_local $3)
     (i32.const 0)
    )
    (block
     (set_local $8
      (i32.load8_u
       (i32.add
        (get_local $2)
        (tee_local $3
         (i32.add
          (get_local $3)
          (i32.const -1)
         )
        )
       )
      )
     )
     (set_local $4
      (i32.shl
       (tee_local $7
        (i32.load8_s
         (i32.add
          (get_local $1)
          (get_local $3)
         )
        )
       )
       (i32.const 10)
      )
     )
     (if
      (i32.gt_s
       (get_local $7)
       (i32.const 0)
      )
      (set_local $4
       (i32.add
        (get_local $4)
        (i32.const -102)
       )
      )
      (block
       (set_local $9
        (i32.or
         (get_local $4)
         (i32.const 102)
        )
       )
       (if
        (get_local $7)
        (set_local $4
         (get_local $9)
        )
       )
      )
     )
     (i32.store16
      (i32.add
       (get_local $0)
       (i32.shl
        (get_local $3)
        (i32.const 1)
       )
      )
      (tee_local $6
       (i32.add
        (i32.shr_s
         (i32.mul
          (i32.shr_s
           (i32.shl
            (get_local $6)
            (i32.const 16)
           )
           (i32.const 16)
          )
          (get_local $8)
         )
         (i32.const 8)
        )
        (i32.add
         (i32.mul
          (i32.shr_s
           (get_local $4)
           (i32.const 16)
          )
          (get_local $5)
         )
         (i32.shr_s
          (i32.mul
           (i32.and
            (get_local $4)
            (i32.const 65535)
           )
           (get_local $5)
          )
          (i32.const 16)
         )
        )
       )
      )
     )
     (br $while-in)
    )
   )
  )
 )
 (func $_silk_NSQ_c (; 213 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (param $8 i32) (param $9 i32) (param $10 i32) (param $11 i32) (param $12 i32) (param $13 i32) (param $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local $26 i32)
  (local $27 i32)
  (local $28 i32)
  (local $29 i32)
  (local $30 i32)
  (local $31 i32)
  (local $32 i32)
  (local $33 i32)
  (local $34 i32)
  (local $35 i32)
  (local $36 i32)
  (local $37 i32)
  (local $38 i32)
  (set_local $31
   (get_global $STACKTOP)
  )
  (i32.store
   (i32.add
    (get_local $1)
    (i32.const 4340)
   )
   (i32.load8_s offset=34
    (get_local $2)
   )
  )
  (set_local $16
   (i32.load
    (tee_local $32
     (i32.add
      (get_local $1)
      (i32.const 4328)
     )
    )
   )
  )
  (set_local $33
   (i32.load16_s
    (i32.add
     (i32.add
      (i32.shl
       (i32.shr_s
        (i32.load8_s
         (tee_local $20
          (i32.add
           (get_local $2)
           (i32.const 29)
          )
         )
        )
        (i32.const 1)
       )
       (i32.const 2)
      )
      (i32.const 41164)
     )
     (i32.shl
      (i32.load8_s offset=30
       (get_local $2)
      )
      (i32.const 1)
     )
    )
   )
  )
  (set_local $2
   (i32.ne
    (i32.load8_s offset=31
     (get_local $2)
    )
    (i32.const 4)
   )
  )
  (set_local $24
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (tee_local $18
        (i32.add
         (tee_local $15
          (i32.load
           (tee_local $17
            (i32.add
             (get_local $0)
             (i32.const 4592)
            )
           )
          )
         )
         (i32.load
          (tee_local $25
           (i32.add
            (get_local $0)
            (i32.const 4584)
           )
          )
         )
        )
       )
       (i32.const 2)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (set_local $26
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (get_local $18)
       (i32.const 1)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (set_local $27
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (i32.load
        (tee_local $18
         (i32.add
          (get_local $0)
          (i32.const 4588)
         )
        )
       )
       (i32.const 2)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (i32.store
   (i32.add
    (get_local $1)
    (i32.const 4336)
   )
   (get_local $15)
  )
  (i32.store
   (tee_local $34
    (i32.add
     (get_local $1)
     (i32.const 4332)
    )
   )
   (i32.load
    (get_local $17)
   )
  )
  (set_local $35
   (i32.add
    (get_local $0)
    (i32.const 4580)
   )
  )
  (set_local $36
   (i32.xor
    (get_local $2)
    (i32.const 1)
   )
  )
  (set_local $28
   (i32.add
    (get_local $1)
    (i32.const 4348)
   )
  )
  (set_local $37
   (i32.xor
    (i32.shl
     (get_local $2)
     (i32.const 1)
    )
    (i32.const 3)
   )
  )
  (set_local $38
   (i32.add
    (get_local $0)
    (i32.const 4636)
   )
  )
  (set_local $29
   (i32.add
    (get_local $0)
    (i32.const 4640)
   )
  )
  (set_local $21
   (i32.add
    (get_local $1)
    (i32.shl
     (i32.load
      (get_local $17)
     )
     (i32.const 1)
    )
   )
  )
  (set_local $2
   (get_local $16)
  )
  (set_local $15
   (i32.const 0)
  )
  (block $__rjto$1
   (block $__rjti$1
    (block $__rjti$0
     (loop $while-in
      (block $while-out
       (br_if $__rjti$1
        (i32.ge_s
         (get_local $15)
         (tee_local $16
          (i32.load
           (get_local $35)
          )
         )
        )
       )
       (set_local $30
        (i32.add
         (get_local $5)
         (i32.shl
          (i32.or
           (i32.shr_u
            (get_local $15)
            (i32.const 1)
           )
           (get_local $36)
          )
          (i32.const 5)
         )
        )
       )
       (set_local $19
        (i32.load
         (i32.add
          (get_local $8)
          (i32.shl
           (get_local $15)
           (i32.const 2)
          )
         )
        )
       )
       (i32.store
        (get_local $28)
        (i32.const 0)
       )
       (if
        (i32.eq
         (tee_local $16
          (i32.load8_s
           (get_local $20)
          )
         )
         (i32.const 2)
        )
        (block
         (set_local $2
          (i32.load
           (i32.add
            (get_local $12)
            (i32.shl
             (get_local $15)
             (i32.const 2)
            )
           )
          )
         )
         (set_local $16
          (if (result i32)
           (i32.and
            (get_local $15)
            (get_local $37)
           )
           (i32.const 2)
           (block (result i32)
            (br_if $__rjti$0
             (i32.le_s
              (tee_local $16
               (i32.sub
                (i32.sub
                 (tee_local $22
                  (i32.load
                   (get_local $17)
                  )
                 )
                 (get_local $2)
                )
                (tee_local $23
                 (i32.load
                  (get_local $29)
                 )
                )
               )
              )
              (i32.const 2)
             )
            )
            (call $_silk_LPC_analysis_filter
             (i32.add
              (get_local $26)
              (i32.shl
               (tee_local $16
                (i32.add
                 (get_local $16)
                 (i32.const -2)
                )
               )
               (i32.const 1)
              )
             )
             (i32.add
              (get_local $1)
              (i32.shl
               (i32.add
                (get_local $16)
                (i32.mul
                 (get_local $15)
                 (i32.load
                  (get_local $18)
                 )
                )
               )
               (i32.const 1)
              )
             )
             (get_local $30)
             (i32.sub
              (get_local $22)
              (get_local $16)
             )
             (get_local $23)
            )
            (i32.store
             (get_local $28)
             (i32.const 1)
            )
            (i32.store
             (get_local $34)
             (i32.load
              (get_local $17)
             )
            )
            (i32.load8_s
             (get_local $20)
            )
           )
          )
         )
        )
       )
       (set_local $22
        (i32.add
         (get_local $6)
         (i32.shl
          (i32.mul
           (get_local $15)
           (i32.const 5)
          )
          (i32.const 1)
         )
        )
       )
       (set_local $23
        (i32.add
         (get_local $7)
         (i32.shl
          (i32.mul
           (get_local $15)
           (i32.const 24)
          )
          (i32.const 1)
         )
        )
       )
       (set_local $19
        (i32.or
         (i32.shr_s
          (get_local $19)
          (i32.const 2)
         )
         (i32.shl
          (i32.shr_u
           (get_local $19)
           (i32.const 1)
          )
          (i32.const 16)
         )
        )
       )
       (call $_silk_nsq_scale_states
        (get_local $0)
        (get_local $1)
        (get_local $3)
        (get_local $27)
        (get_local $26)
        (get_local $24)
        (get_local $15)
        (get_local $14)
        (get_local $11)
        (get_local $12)
        (i32.shr_s
         (i32.shl
          (get_local $16)
          (i32.const 24)
         )
         (i32.const 24)
        )
       )
       (call $_silk_noise_shape_quantizer
        (get_local $1)
        (i32.load8_s
         (get_local $20)
        )
        (get_local $27)
        (get_local $4)
        (get_local $21)
        (get_local $24)
        (get_local $30)
        (get_local $22)
        (get_local $23)
        (get_local $2)
        (get_local $19)
        (i32.load
         (i32.add
          (get_local $9)
          (i32.shl
           (get_local $15)
           (i32.const 2)
          )
         )
        )
        (i32.load
         (i32.add
          (get_local $10)
          (i32.shl
           (get_local $15)
           (i32.const 2)
          )
         )
        )
        (i32.load
         (i32.add
          (get_local $11)
          (i32.shl
           (get_local $15)
           (i32.const 2)
          )
         )
        )
        (get_local $13)
        (get_local $33)
        (i32.load
         (get_local $18)
        )
        (i32.load
         (get_local $38)
        )
        (i32.load
         (get_local $29)
        )
       )
       (set_local $21
        (i32.add
         (get_local $21)
         (i32.shl
          (tee_local $16
           (i32.load
            (get_local $18)
           )
          )
          (i32.const 1)
         )
        )
       )
       (set_local $3
        (i32.add
         (get_local $3)
         (i32.shl
          (get_local $16)
          (i32.const 1)
         )
        )
       )
       (set_local $4
        (i32.add
         (get_local $4)
         (get_local $16)
        )
       )
       (set_local $15
        (i32.add
         (get_local $15)
         (i32.const 1)
        )
       )
       (br $while-in)
      )
     )
    )
    (call $_celt_fatal
     (i32.const 45431)
     (i32.const 45365)
     (i32.const 146)
    )
    (br $__rjto$1)
   )
   (i32.store
    (get_local $32)
    (i32.load
     (i32.add
      (get_local $12)
      (i32.shl
       (i32.add
        (get_local $16)
        (i32.const -1)
       )
       (i32.const 2)
      )
     )
    )
   )
   (drop
    (call $_memmove
     (get_local $1)
     (i32.add
      (get_local $1)
      (i32.shl
       (i32.load
        (get_local $25)
       )
       (i32.const 1)
      )
     )
     (i32.shl
      (i32.load
       (get_local $17)
      )
      (i32.const 1)
     )
    )
   )
   (drop
    (call $_memmove
     (i32.add
      (get_local $1)
      (i32.const 1280)
     )
     (i32.add
      (i32.add
       (get_local $1)
       (i32.const 1280)
      )
      (i32.shl
       (i32.load
        (get_local $25)
       )
       (i32.const 2)
      )
     )
     (i32.shl
      (i32.load
       (get_local $17)
      )
      (i32.const 2)
     )
    )
   )
   (set_global $STACKTOP
    (get_local $31)
   )
  )
 )
 (func $_silk_nsq_scale_states (; 214 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (param $8 i32) (param $9 i32) (param $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (set_local $13
   (i32.load
    (i32.add
     (get_local $9)
     (i32.shl
      (get_local $6)
      (i32.const 2)
     )
    )
   )
  )
  (set_local $9
   (i32.add
    (i32.shr_s
     (tee_local $8
      (call $_silk_INVERSE32_varQ
       (if (result i32)
        (i32.gt_s
         (tee_local $8
          (i32.load
           (tee_local $14
            (i32.add
             (get_local $8)
             (i32.shl
              (get_local $6)
              (i32.const 2)
             )
            )
           )
          )
         )
         (i32.const 1)
        )
        (get_local $8)
        (i32.const 1)
       )
      )
     )
     (i32.const 4)
    )
    (i32.const 1)
   )
  )
  (set_local $12
   (i32.add
    (get_local $0)
    (i32.const 4588)
   )
  )
  (set_local $11
   (i32.shr_s
    (i32.shl
     (i32.shr_u
      (get_local $9)
      (i32.const 1)
     )
     (i32.const 16)
    )
    (i32.const 16)
   )
  )
  (set_local $15
   (i32.shr_s
    (i32.add
     (i32.shr_s
      (get_local $9)
      (i32.const 16)
     )
     (i32.const 1)
    )
    (i32.const 1)
   )
  )
  (set_local $9
   (i32.const 0)
  )
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $9)
     (i32.load
      (get_local $12)
     )
    )
    (block
     (i32.store
      (i32.add
       (get_local $3)
       (i32.shl
        (get_local $9)
        (i32.const 2)
       )
      )
      (i32.add
       (i32.add
        (i32.mul
         (i32.shr_s
          (tee_local $17
           (tee_local $16
            (i32.load16_s
             (i32.add
              (get_local $2)
              (i32.shl
               (get_local $9)
               (i32.const 1)
              )
             )
            )
           )
          )
          (i32.const 16)
         )
         (get_local $11)
        )
        (i32.shr_s
         (i32.mul
          (get_local $11)
          (i32.and
           (get_local $16)
           (i32.const 65535)
          )
         )
         (i32.const 16)
        )
       )
       (i32.mul
        (get_local $15)
        (get_local $17)
       )
      )
     )
     (set_local $9
      (i32.add
       (get_local $9)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (block $label$break$L5
   (if
    (i32.load
     (tee_local $9
      (i32.add
       (get_local $1)
       (i32.const 4348)
      )
     )
    )
    (block
     (if
      (i32.eqz
       (get_local $6)
      )
      (set_local $8
       (i32.shl
        (i32.add
         (i32.mul
          (i32.shr_s
           (get_local $8)
           (i32.const 16)
          )
          (tee_local $2
           (i32.shr_s
            (i32.shl
             (get_local $7)
             (i32.const 16)
            )
            (i32.const 16)
           )
          )
         )
         (i32.shr_s
          (i32.mul
           (i32.and
            (get_local $8)
            (i32.const 65535)
           )
           (get_local $2)
          )
          (i32.const 16)
         )
        )
        (i32.const 2)
       )
      )
     )
     (set_local $6
      (i32.shr_s
       (get_local $8)
       (i32.const 16)
      )
     )
     (set_local $7
      (i32.and
       (get_local $8)
       (i32.const 65535)
      )
     )
     (set_local $3
      (i32.add
       (i32.sub
        (tee_local $2
         (i32.load
          (tee_local $8
           (i32.add
            (get_local $1)
            (i32.const 4332)
           )
          )
         )
        )
        (get_local $13)
       )
       (i32.const -2)
      )
     )
     (loop $while-in1
      (br_if $label$break$L5
       (i32.ge_s
        (get_local $3)
        (get_local $2)
       )
      )
      (i32.store
       (i32.add
        (get_local $5)
        (i32.shl
         (get_local $3)
         (i32.const 2)
        )
       )
       (i32.add
        (i32.mul
         (get_local $6)
         (tee_local $2
          (i32.load16_s
           (i32.add
            (get_local $4)
            (i32.shl
             (get_local $3)
             (i32.const 1)
            )
           )
          )
         )
        )
        (i32.shr_s
         (i32.mul
          (get_local $7)
          (get_local $2)
         )
         (i32.const 16)
        )
       )
      )
      (set_local $3
       (i32.add
        (get_local $3)
        (i32.const 1)
       )
      )
      (set_local $2
       (i32.load
        (get_local $8)
       )
      )
      (br $while-in1)
     )
    )
   )
  )
  (if
   (i32.eq
    (tee_local $2
     (i32.load
      (get_local $14)
     )
    )
    (tee_local $3
     (i32.load
      (tee_local $8
       (i32.add
        (get_local $1)
        (i32.const 4344)
       )
      )
     )
    )
   )
   (return)
  )
  (set_local $4
   (i32.shr_s
    (tee_local $3
     (call $_silk_DIV32_varQ
      (get_local $3)
      (get_local $2)
     )
    )
    (i32.const 16)
   )
  )
  (set_local $6
   (i32.and
    (get_local $3)
    (i32.const 65535)
   )
  )
  (set_local $7
   (i32.sub
    (tee_local $2
     (i32.load
      (tee_local $11
       (i32.add
        (get_local $1)
        (i32.const 4336)
       )
      )
     )
    )
    (i32.load
     (i32.add
      (get_local $0)
      (i32.const 4592)
     )
    )
   )
  )
  (set_local $0
   (get_local $2)
  )
  (loop $while-in3
   (if
    (i32.lt_s
     (get_local $7)
     (get_local $0)
    )
    (block
     (set_local $0
      (i32.shr_s
       (i32.shl
        (tee_local $12
         (i32.load
          (tee_local $2
           (i32.add
            (i32.add
             (get_local $1)
             (i32.const 1280)
            )
            (i32.shl
             (get_local $7)
             (i32.const 2)
            )
           )
          )
         )
        )
        (i32.const 16)
       )
       (i32.const 16)
      )
     )
     (i32.store
      (get_local $2)
      (i32.add
       (i32.add
        (i32.mul
         (get_local $4)
         (get_local $0)
        )
        (i32.shr_s
         (i32.mul
          (get_local $6)
          (get_local $0)
         )
         (i32.const 16)
        )
       )
       (i32.mul
        (get_local $3)
        (i32.shr_s
         (i32.add
          (i32.shr_s
           (get_local $12)
           (i32.const 15)
          )
          (i32.const 1)
         )
         (i32.const 1)
        )
       )
      )
     )
     (set_local $7
      (i32.add
       (get_local $7)
       (i32.const 1)
      )
     )
     (set_local $0
      (i32.load
       (get_local $11)
      )
     )
     (br $while-in3)
    )
   )
  )
  (block $label$break$L21
   (if
    (i32.eq
     (get_local $10)
     (i32.const 2)
    )
    (if
     (i32.eqz
      (i32.load
       (get_local $9)
      )
     )
     (block
      (set_local $2
       (i32.add
        (i32.sub
         (tee_local $0
          (i32.load
           (tee_local $7
            (i32.add
             (get_local $1)
             (i32.const 4332)
            )
           )
          )
         )
         (get_local $13)
        )
        (i32.const -2)
       )
      )
      (loop $while-in6
       (br_if $label$break$L21
        (i32.ge_s
         (get_local $2)
         (get_local $0)
        )
       )
       (set_local $0
        (i32.shr_s
         (i32.shl
          (tee_local $10
           (i32.load
            (tee_local $9
             (i32.add
              (get_local $5)
              (i32.shl
               (get_local $2)
               (i32.const 2)
              )
             )
            )
           )
          )
          (i32.const 16)
         )
         (i32.const 16)
        )
       )
       (i32.store
        (get_local $9)
        (i32.add
         (i32.add
          (i32.mul
           (get_local $4)
           (get_local $0)
          )
          (i32.shr_s
           (i32.mul
            (get_local $6)
            (get_local $0)
           )
           (i32.const 16)
          )
         )
         (i32.mul
          (get_local $3)
          (i32.shr_s
           (i32.add
            (i32.shr_s
             (get_local $10)
             (i32.const 15)
            )
            (i32.const 1)
           )
           (i32.const 1)
          )
         )
        )
       )
       (set_local $2
        (i32.add
         (get_local $2)
         (i32.const 1)
        )
       )
       (set_local $0
        (i32.load
         (get_local $7)
        )
       )
       (br $while-in6)
      )
     )
    )
   )
  )
  (set_local $0
   (i32.shr_s
    (i32.shl
     (tee_local $5
      (i32.load
       (tee_local $2
        (i32.add
         (get_local $1)
         (i32.const 4320)
        )
       )
      )
     )
     (i32.const 16)
    )
    (i32.const 16)
   )
  )
  (i32.store
   (get_local $2)
   (i32.add
    (i32.add
     (i32.mul
      (get_local $4)
      (get_local $0)
     )
     (i32.shr_s
      (i32.mul
       (get_local $6)
       (get_local $0)
      )
      (i32.const 16)
     )
    )
    (i32.mul
     (get_local $3)
     (i32.shr_s
      (i32.add
       (i32.shr_s
        (get_local $5)
        (i32.const 15)
       )
       (i32.const 1)
      )
      (i32.const 1)
     )
    )
   )
  )
  (set_local $0
   (i32.shr_s
    (i32.shl
     (tee_local $5
      (i32.load
       (tee_local $2
        (i32.add
         (get_local $1)
         (i32.const 4324)
        )
       )
      )
     )
     (i32.const 16)
    )
    (i32.const 16)
   )
  )
  (i32.store
   (get_local $2)
   (i32.add
    (i32.add
     (i32.mul
      (get_local $4)
      (get_local $0)
     )
     (i32.shr_s
      (i32.mul
       (get_local $6)
       (get_local $0)
      )
      (i32.const 16)
     )
    )
    (i32.mul
     (get_local $3)
     (i32.shr_s
      (i32.add
       (i32.shr_s
        (get_local $5)
        (i32.const 15)
       )
       (i32.const 1)
      )
      (i32.const 1)
     )
    )
   )
  )
  (set_local $0
   (i32.const 0)
  )
  (loop $while-in8
   (if
    (i32.ne
     (get_local $0)
     (i32.const 16)
    )
    (block
     (set_local $2
      (i32.shr_s
       (i32.shl
        (tee_local $7
         (i32.load
          (tee_local $5
           (i32.add
            (i32.add
             (get_local $1)
             (i32.const 3840)
            )
            (i32.shl
             (get_local $0)
             (i32.const 2)
            )
           )
          )
         )
        )
        (i32.const 16)
       )
       (i32.const 16)
      )
     )
     (i32.store
      (get_local $5)
      (i32.add
       (i32.add
        (i32.mul
         (get_local $4)
         (get_local $2)
        )
        (i32.shr_s
         (i32.mul
          (get_local $6)
          (get_local $2)
         )
         (i32.const 16)
        )
       )
       (i32.mul
        (get_local $3)
        (i32.shr_s
         (i32.add
          (i32.shr_s
           (get_local $7)
           (i32.const 15)
          )
          (i32.const 1)
         )
         (i32.const 1)
        )
       )
      )
     )
     (set_local $0
      (i32.add
       (get_local $0)
       (i32.const 1)
      )
     )
     (br $while-in8)
    )
   )
  )
  (set_local $0
   (i32.const 0)
  )
  (loop $while-in10
   (if
    (i32.ne
     (get_local $0)
     (i32.const 24)
    )
    (block
     (set_local $2
      (i32.shr_s
       (i32.shl
        (tee_local $7
         (i32.load
          (tee_local $5
           (i32.add
            (i32.add
             (get_local $1)
             (i32.const 4224)
            )
            (i32.shl
             (get_local $0)
             (i32.const 2)
            )
           )
          )
         )
        )
        (i32.const 16)
       )
       (i32.const 16)
      )
     )
     (i32.store
      (get_local $5)
      (i32.add
       (i32.add
        (i32.mul
         (get_local $4)
         (get_local $2)
        )
        (i32.shr_s
         (i32.mul
          (get_local $6)
          (get_local $2)
         )
         (i32.const 16)
        )
       )
       (i32.mul
        (get_local $3)
        (i32.shr_s
         (i32.add
          (i32.shr_s
           (get_local $7)
           (i32.const 15)
          )
          (i32.const 1)
         )
         (i32.const 1)
        )
       )
      )
     )
     (set_local $0
      (i32.add
       (get_local $0)
       (i32.const 1)
      )
     )
     (br $while-in10)
    )
   )
  )
  (i32.store
   (get_local $8)
   (i32.load
    (get_local $14)
   )
  )
 )
 (func $_silk_noise_shape_quantizer (; 215 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (param $8 i32) (param $9 i32) (param $10 i32) (param $11 i32) (param $12 i32) (param $13 i32) (param $14 i32) (param $15 i32) (param $16 i32) (param $17 i32) (param $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local $26 i32)
  (local $27 i32)
  (local $28 i32)
  (local $29 i32)
  (local $30 i32)
  (local $31 i32)
  (local $32 i32)
  (local $33 i32)
  (local $34 i32)
  (local $35 i32)
  (local $36 i32)
  (local $37 i32)
  (local $38 i32)
  (local $39 i32)
  (local $40 i32)
  (local $41 i32)
  (local $42 i32)
  (local $43 i32)
  (local $44 i32)
  (local $45 i32)
  (local $46 i32)
  (local $47 i32)
  (local $48 i32)
  (local $49 i32)
  (local $50 i32)
  (local $51 i32)
  (local $52 i32)
  (local $53 i32)
  (local $54 i32)
  (local $55 i32)
  (set_local $19
   (i32.add
    (get_local $0)
    (i32.const 4340)
   )
  )
  (set_local $30
   (i32.eq
    (get_local $1)
    (i32.const 2)
   )
  )
  (set_local $42
   (i32.add
    (get_local $7)
    (i32.const 2)
   )
  )
  (set_local $43
   (i32.add
    (get_local $7)
    (i32.const 4)
   )
  )
  (set_local $44
   (i32.add
    (get_local $7)
    (i32.const 6)
   )
  )
  (set_local $45
   (i32.add
    (get_local $7)
    (i32.const 8)
   )
  )
  (set_local $46
   (i32.eqz
    (i32.and
     (get_local $17)
     (i32.const 1)
    )
   )
  )
  (set_local $31
   (i32.add
    (get_local $0)
    (i32.const 4324)
   )
  )
  (set_local $47
   (i32.add
    (get_local $0)
    (i32.const 4224)
   )
  )
  (set_local $32
   (i32.add
    (get_local $0)
    (i32.const 4320)
   )
  )
  (set_local $33
   (i32.shr_s
    (i32.shl
     (get_local $11)
     (i32.const 16)
    )
    (i32.const 16)
   )
  )
  (set_local $34
   (i32.shr_s
    (i32.shl
     (get_local $12)
     (i32.const 16)
    )
    (i32.const 16)
   )
  )
  (set_local $35
   (i32.shr_s
    (get_local $12)
    (i32.const 16)
   )
  )
  (set_local $48
   (i32.gt_s
    (get_local $9)
    (i32.const 0)
   )
  )
  (set_local $36
   (i32.shr_s
    (i32.shl
     (get_local $10)
     (i32.const 16)
    )
    (i32.const 16)
   )
  )
  (set_local $37
   (i32.shr_s
    (get_local $10)
    (i32.const 16)
   )
  )
  (set_local $49
   (i32.gt_s
    (get_local $14)
    (i32.const 2048)
   )
  )
  (set_local $23
   (i32.add
    (tee_local $11
     (i32.div_s
      (get_local $14)
      (i32.const 2)
     )
    )
    (i32.const -512)
   )
  )
  (set_local $10
   (i32.mul
    (i32.shr_s
     (tee_local $1
      (i32.shl
       (get_local $15)
       (i32.const 16)
      )
     )
     (i32.const 16)
    )
    (tee_local $20
     (i32.shr_s
      (i32.shl
       (get_local $14)
       (i32.const 16)
      )
      (i32.const 16)
     )
    )
   )
  )
  (set_local $39
   (i32.mul
    (i32.shr_s
     (i32.shl
      (tee_local $38
       (i32.add
        (get_local $15)
        (i32.const 944)
       )
      )
      (i32.const 16)
     )
     (i32.const 16)
    )
    (get_local $20)
   )
  )
  (set_local $50
   (i32.add
    (get_local $15)
    (i32.const -944)
   )
  )
  (set_local $51
   (i32.mul
    (i32.shr_s
     (i32.sub
      (i32.const 61865984)
      (get_local $1)
     )
     (i32.const 16)
    )
    (get_local $20)
   )
  )
  (set_local $52
   (i32.sub
    (i32.const 512)
    (get_local $11)
   )
  )
  (set_local $40
   (i32.shr_s
    (i32.shl
     (i32.shr_u
      (get_local $13)
      (i32.const 6)
     )
     (i32.const 16)
    )
    (i32.const 16)
   )
  )
  (set_local $53
   (i32.shr_s
    (i32.add
     (i32.shr_s
      (get_local $13)
      (i32.const 21)
     )
     (i32.const 1)
    )
    (i32.const 1)
   )
  )
  (set_local $14
   (i32.add
    (get_local $5)
    (i32.shl
     (i32.add
      (i32.sub
       (i32.load
        (tee_local $24
         (i32.add
          (get_local $0)
          (i32.const 4332)
         )
        )
       )
       (get_local $9)
      )
      (i32.const 2)
     )
     (i32.const 2)
    )
   )
  )
  (set_local $13
   (i32.add
    (i32.add
     (get_local $0)
     (i32.shl
      (i32.sub
       (i32.load
        (tee_local $22
         (i32.add
          (get_local $0)
          (i32.const 4336)
         )
        )
       )
       (get_local $9)
      )
      (i32.const 2)
     )
    )
    (i32.const 1284)
   )
  )
  (set_local $25
   (i32.add
    (get_local $0)
    (i32.const 3900)
   )
  )
  (block $__rjto$4
   (block $__rjti$4
    (block $__rjti$3
     (block $__rjti$2
      (loop $while-in
       (block $while-out
        (br_if $__rjti$4
         (i32.ge_s
          (get_local $21)
          (get_local $16)
         )
        )
        (i32.store
         (get_local $19)
         (i32.add
          (i32.mul
           (i32.load
            (get_local $19)
           )
           (i32.const 196314165)
          )
          (i32.const 907633515)
         )
        )
        (set_local $26
         (call $_silk_noise_shape_quantizer_short_prediction_c
          (get_local $25)
          (get_local $6)
          (get_local $18)
         )
        )
        (if
         (get_local $30)
         (block
          (set_local $27
           (i32.add
            (i32.add
             (i32.add
              (i32.add
               (i32.add
                (i32.add
                 (i32.mul
                  (i32.shr_s
                   (tee_local $9
                    (i32.load
                     (get_local $14)
                    )
                   )
                   (i32.const 16)
                  )
                  (tee_local $1
                   (i32.load16_s
                    (get_local $7)
                   )
                  )
                 )
                 (i32.shr_s
                  (i32.mul
                   (i32.and
                    (get_local $9)
                    (i32.const 65535)
                   )
                   (get_local $1)
                  )
                  (i32.const 16)
                 )
                )
                (i32.const 2)
               )
               (i32.add
                (i32.mul
                 (i32.shr_s
                  (tee_local $9
                   (i32.load
                    (i32.add
                     (get_local $14)
                     (i32.const -4)
                    )
                   )
                  )
                  (i32.const 16)
                 )
                 (tee_local $1
                  (i32.load16_s
                   (get_local $42)
                  )
                 )
                )
                (i32.shr_s
                 (i32.mul
                  (i32.and
                   (get_local $9)
                   (i32.const 65535)
                  )
                  (get_local $1)
                 )
                 (i32.const 16)
                )
               )
              )
              (i32.add
               (i32.mul
                (i32.shr_s
                 (tee_local $9
                  (i32.load
                   (i32.add
                    (get_local $14)
                    (i32.const -8)
                   )
                  )
                 )
                 (i32.const 16)
                )
                (tee_local $1
                 (i32.load16_s
                  (get_local $43)
                 )
                )
               )
               (i32.shr_s
                (i32.mul
                 (i32.and
                  (get_local $9)
                  (i32.const 65535)
                 )
                 (get_local $1)
                )
                (i32.const 16)
               )
              )
             )
             (i32.add
              (i32.mul
               (i32.shr_s
                (tee_local $9
                 (i32.load
                  (i32.add
                   (get_local $14)
                   (i32.const -12)
                  )
                 )
                )
                (i32.const 16)
               )
               (tee_local $1
                (i32.load16_s
                 (get_local $44)
                )
               )
              )
              (i32.shr_s
               (i32.mul
                (i32.and
                 (get_local $9)
                 (i32.const 65535)
                )
                (get_local $1)
               )
               (i32.const 16)
              )
             )
            )
            (i32.add
             (i32.mul
              (i32.shr_s
               (tee_local $9
                (i32.load
                 (i32.add
                  (get_local $14)
                  (i32.const -16)
                 )
                )
               )
               (i32.const 16)
              )
              (tee_local $1
               (i32.load16_s
                (get_local $45)
               )
              )
             )
             (i32.shr_s
              (i32.mul
               (i32.and
                (get_local $9)
                (i32.const 65535)
               )
               (get_local $1)
              )
              (i32.const 16)
             )
            )
           )
          )
          (set_local $14
           (i32.add
            (get_local $14)
            (i32.const 4)
           )
          )
         )
         (set_local $27
          (i32.const 0)
         )
        )
        (br_if $__rjti$2
         (i32.eqz
          (get_local $46)
         )
        )
        (set_local $28
         (i32.add
          (call $_silk_NSQ_noise_shape_feedback_loop_c
           (i32.load
            (get_local $31)
           )
           (get_local $47)
           (get_local $8)
           (get_local $17)
          )
          (i32.add
           (i32.mul
            (tee_local $11
             (i32.shr_s
              (tee_local $1
               (i32.load
                (get_local $32)
               )
              )
              (i32.const 16)
             )
            )
            (get_local $33)
           )
           (i32.shr_s
            (i32.mul
             (tee_local $9
              (i32.and
               (get_local $1)
               (i32.const 65535)
              )
             )
             (get_local $33)
            )
            (i32.const 16)
           )
          )
         )
        )
        (set_local $29
         (i32.add
          (i32.add
           (i32.add
            (i32.mul
             (i32.shr_s
              (tee_local $1
               (i32.load
                (i32.add
                 (i32.add
                  (get_local $0)
                  (i32.shl
                   (i32.load
                    (get_local $22)
                   )
                   (i32.const 2)
                  )
                 )
                 (i32.const 1276)
                )
               )
              )
              (i32.const 16)
             )
             (get_local $34)
            )
            (i32.shr_s
             (i32.mul
              (i32.and
               (get_local $1)
               (i32.const 65535)
              )
              (get_local $34)
             )
             (i32.const 16)
            )
           )
           (i32.mul
            (get_local $11)
            (get_local $35)
           )
          )
          (i32.shr_s
           (i32.mul
            (get_local $9)
            (get_local $35)
           )
           (i32.const 16)
          )
         )
        )
        (if
         (get_local $48)
         (block
          (set_local $1
           (i32.shr_s
            (i32.add
             (i32.sub
              (get_local $27)
              (i32.shl
               (i32.add
                (i32.add
                 (i32.add
                  (i32.mul
                   (i32.shr_s
                    (tee_local $1
                     (i32.add
                      (i32.load
                       (get_local $13)
                      )
                      (i32.load
                       (i32.add
                        (get_local $13)
                        (i32.const -8)
                       )
                      )
                     )
                    )
                    (i32.const 16)
                   )
                   (get_local $36)
                  )
                  (i32.shr_s
                   (i32.mul
                    (i32.and
                     (get_local $1)
                     (i32.const 65535)
                    )
                    (get_local $36)
                   )
                   (i32.const 16)
                  )
                 )
                 (i32.mul
                  (i32.shr_s
                   (tee_local $1
                    (i32.load
                     (i32.add
                      (get_local $13)
                      (i32.const -4)
                     )
                    )
                   )
                   (i32.const 16)
                  )
                  (get_local $37)
                 )
                )
                (i32.shr_s
                 (i32.mul
                  (i32.and
                   (get_local $1)
                   (i32.const 65535)
                  )
                  (get_local $37)
                 )
                 (i32.const 16)
                )
               )
               (i32.const 1)
              )
             )
             (i32.shl
              (i32.sub
               (i32.sub
                (i32.shl
                 (get_local $26)
                 (i32.const 2)
                )
                (get_local $28)
               )
               (get_local $29)
              )
              (i32.const 1)
             )
            )
            (i32.const 2)
           )
          )
          (set_local $13
           (i32.add
            (get_local $13)
            (i32.const 4)
           )
          )
         )
         (block
          (br_if $__rjti$3
           (get_local $30)
          )
          (set_local $1
           (i32.shr_s
            (i32.sub
             (i32.sub
              (i32.shl
               (get_local $26)
               (i32.const 2)
              )
              (get_local $28)
             )
             (get_local $29)
            )
            (i32.const 1)
           )
          )
         )
        )
        (set_local $1
         (i32.sub
          (i32.const 0)
          (tee_local $9
           (i32.sub
            (i32.load
             (tee_local $54
              (i32.add
               (get_local $2)
               (i32.shl
                (get_local $21)
                (i32.const 2)
               )
              )
             )
            )
            (i32.shr_s
             (i32.add
              (get_local $1)
              (i32.const 1)
             )
             (i32.const 1)
            )
           )
          )
         )
        )
        (set_local $1
         (i32.sub
          (tee_local $41
           (if (result i32)
            (i32.lt_s
             (if (result i32)
              (i32.gt_s
               (if (result i32)
                (i32.lt_s
                 (i32.load
                  (get_local $19)
                 )
                 (i32.const 0)
                )
                (get_local $1)
                (tee_local $1
                 (get_local $9)
                )
               )
               (i32.const -31744)
              )
              (get_local $1)
              (tee_local $1
               (i32.const -31744)
              )
             )
             (i32.const 30720)
            )
            (get_local $1)
            (i32.const 30720)
           )
          )
          (get_local $15)
         )
        )
        (block $__rjto$1
         (block $__rjti$1
          (block $__rjti$0
           (br_if $__rjti$0
            (i32.eqz
             (get_local $49)
            )
           )
           (if
            (i32.gt_s
             (get_local $1)
             (get_local $23)
            )
            (block
             (set_local $1
              (i32.sub
               (get_local $1)
               (get_local $23)
              )
             )
             (br $__rjti$0)
            )
           )
           (set_local $1
            (if (result i32)
             (i32.lt_s
              (get_local $1)
              (get_local $52)
             )
             (block
              (set_local $1
               (i32.add
                (get_local $1)
                (get_local $23)
               )
              )
              (br $__rjti$0)
             )
             (if (result i32)
              (i32.lt_s
               (get_local $1)
               (i32.const 0)
              )
              (br $__rjti$1)
              (block (result i32)
               (set_local $12
                (get_local $39)
               )
               (set_local $11
                (get_local $10)
               )
               (set_local $9
                (get_local $38)
               )
               (get_local $15)
              )
             )
            )
           )
           (br $__rjto$1)
          )
          (if
           (i32.gt_s
            (get_local $1)
            (i32.const 1023)
           )
           (block
            (set_local $12
             (i32.mul
              (i32.shr_s
               (i32.shl
                (tee_local $9
                 (i32.add
                  (tee_local $1
                   (i32.add
                    (i32.add
                     (i32.and
                      (get_local $1)
                      (i32.const -1024)
                     )
                     (i32.const -80)
                    )
                    (get_local $15)
                   )
                  )
                  (i32.const 1024)
                 )
                )
                (i32.const 16)
               )
               (i32.const 16)
              )
              (get_local $20)
             )
            )
            (set_local $11
             (i32.mul
              (i32.shr_s
               (i32.shl
                (get_local $1)
                (i32.const 16)
               )
               (i32.const 16)
              )
              (get_local $20)
             )
            )
            (br $__rjto$1)
           )
          )
          (block $switch-default
           (block $switch-case1
            (block $switch-case
             (br_table $switch-case1 $switch-case $switch-default
              (i32.sub
               (i32.shr_s
                (get_local $1)
                (i32.const 10)
               )
               (i32.const -1)
              )
             )
            )
            (set_local $12
             (get_local $39)
            )
            (set_local $11
             (get_local $10)
            )
            (set_local $9
             (get_local $38)
            )
            (set_local $1
             (get_local $15)
            )
            (br $__rjto$1)
           )
           (br $__rjti$1)
          )
          (set_local $12
           (i32.mul
            (i32.shr_s
             (i32.sub
              (i32.const -67108864)
              (tee_local $9
               (i32.shl
                (tee_local $1
                 (i32.add
                  (i32.or
                   (i32.and
                    (get_local $1)
                    (i32.const -1024)
                   )
                   (i32.const 80)
                  )
                  (get_local $15)
                 )
                )
                (i32.const 16)
               )
              )
             )
             (i32.const 16)
            )
            (get_local $20)
           )
          )
          (set_local $11
           (i32.mul
            (i32.shr_s
             (i32.sub
              (i32.const 0)
              (get_local $9)
             )
             (i32.const 16)
            )
            (get_local $20)
           )
          )
          (set_local $9
           (i32.add
            (get_local $1)
            (i32.const 1024)
           )
          )
          (br $__rjto$1)
         )
         (set_local $12
          (get_local $10)
         )
         (set_local $11
          (get_local $51)
         )
         (set_local $9
          (get_local $15)
         )
         (set_local $1
          (get_local $50)
         )
        )
        (i32.store8
         (tee_local $55
          (i32.add
           (get_local $3)
           (get_local $21)
          )
         )
         (i32.shr_u
          (i32.add
           (i32.shr_u
            (if (result i32)
             (i32.lt_s
              (i32.add
               (get_local $12)
               (i32.mul
                (tee_local $12
                 (i32.shr_s
                  (i32.shl
                   (i32.sub
                    (get_local $41)
                    (get_local $9)
                   )
                   (i32.const 16)
                  )
                  (i32.const 16)
                 )
                )
                (get_local $12)
               )
              )
              (i32.add
               (get_local $11)
               (i32.mul
                (tee_local $11
                 (i32.shr_s
                  (i32.shl
                   (i32.sub
                    (get_local $41)
                    (get_local $1)
                   )
                   (i32.const 16)
                  )
                  (i32.const 16)
                 )
                )
                (get_local $11)
               )
              )
             )
             (get_local $9)
             (tee_local $9
              (get_local $1)
             )
            )
            (i32.const 9)
           )
           (i32.const 1)
          )
          (i32.const 1)
         )
        )
        (set_local $1
         (i32.sub
          (i32.const 0)
          (tee_local $9
           (i32.shl
            (get_local $9)
            (i32.const 4)
           )
          )
         )
        )
        (i32.store16
         (i32.add
          (get_local $4)
          (i32.shl
           (get_local $21)
           (i32.const 1)
          )
         )
         (tee_local $1
          (if (result i32)
           (i32.gt_s
            (tee_local $1
             (i32.add
              (i32.add
               (i32.mul
                (i32.shr_s
                 (tee_local $9
                  (i32.add
                   (tee_local $11
                    (i32.add
                     (if (result i32)
                      (i32.lt_s
                       (i32.load
                        (get_local $19)
                       )
                       (i32.const 0)
                      )
                      (get_local $1)
                      (get_local $9)
                     )
                     (i32.shl
                      (get_local $27)
                      (i32.const 1)
                     )
                    )
                   )
                   (i32.shl
                    (get_local $26)
                    (i32.const 4)
                   )
                  )
                 )
                 (i32.const 16)
                )
                (get_local $40)
               )
               (i32.shr_s
                (i32.mul
                 (i32.and
                  (get_local $9)
                  (i32.const 65534)
                 )
                 (get_local $40)
                )
                (i32.const 16)
               )
              )
              (i32.mul
               (get_local $9)
               (get_local $53)
              )
             )
            )
            (i32.const 8388479)
           )
           (i32.const 32767)
           (if (result i32)
            (i32.lt_s
             (get_local $1)
             (i32.const -8388736)
            )
            (i32.const -32768)
            (i32.shr_s
             (i32.add
              (i32.shr_s
               (get_local $1)
               (i32.const 7)
              )
              (i32.const 1)
             )
             (i32.const 1)
            )
           )
          )
         )
        )
        (i32.store
         (tee_local $1
          (i32.add
           (get_local $25)
           (i32.const 4)
          )
         )
         (get_local $9)
        )
        (i32.store
         (get_local $31)
         (tee_local $9
          (i32.sub
           (get_local $9)
           (i32.shl
            (i32.load
             (get_local $54)
            )
            (i32.const 4)
           )
          )
         )
        )
        (i32.store
         (get_local $32)
         (tee_local $9
          (i32.sub
           (get_local $9)
           (i32.shl
            (get_local $28)
            (i32.const 2)
           )
          )
         )
        )
        (i32.store
         (i32.add
          (i32.add
           (get_local $0)
           (i32.const 1280)
          )
          (i32.shl
           (i32.load
            (get_local $22)
           )
           (i32.const 2)
          )
         )
         (i32.sub
          (get_local $9)
          (i32.shl
           (get_local $29)
           (i32.const 2)
          )
         )
        )
        (i32.store
         (i32.add
          (get_local $5)
          (i32.shl
           (i32.load
            (get_local $24)
           )
           (i32.const 2)
          )
         )
         (i32.shl
          (get_local $11)
          (i32.const 1)
         )
        )
        (i32.store
         (get_local $22)
         (i32.add
          (i32.load
           (get_local $22)
          )
          (i32.const 1)
         )
        )
        (i32.store
         (get_local $24)
         (i32.add
          (i32.load
           (get_local $24)
          )
          (i32.const 1)
         )
        )
        (i32.store
         (get_local $19)
         (i32.add
          (i32.load
           (get_local $19)
          )
          (i32.load8_s
           (get_local $55)
          )
         )
        )
        (set_local $21
         (i32.add
          (get_local $21)
          (i32.const 1)
         )
        )
        (set_local $25
         (get_local $1)
        )
        (br $while-in)
       )
      )
     )
     (call $_celt_fatal
      (i32.const 45527)
      (i32.const 45365)
      (i32.const 250)
     )
     (br $__rjto$4)
    )
    (call $_celt_fatal
     (i32.const 45376)
     (i32.const 45365)
     (i32.const 258)
    )
    (br $__rjto$4)
   )
   (i64.store align=4
    (tee_local $1
     (i32.add
      (get_local $0)
      (i32.const 3840)
     )
    )
    (i64.load align=4
     (tee_local $0
      (i32.add
       (i32.add
        (get_local $0)
        (i32.const 3840)
       )
       (i32.shl
        (get_local $16)
        (i32.const 2)
       )
      )
     )
    )
   )
   (i64.store offset=8 align=4
    (get_local $1)
    (i64.load offset=8 align=4
     (get_local $0)
    )
   )
   (i64.store offset=16 align=4
    (get_local $1)
    (i64.load offset=16 align=4
     (get_local $0)
    )
   )
   (i64.store offset=24 align=4
    (get_local $1)
    (i64.load offset=24 align=4
     (get_local $0)
    )
   )
   (i64.store offset=32 align=4
    (get_local $1)
    (i64.load offset=32 align=4
     (get_local $0)
    )
   )
   (i64.store offset=40 align=4
    (get_local $1)
    (i64.load offset=40 align=4
     (get_local $0)
    )
   )
   (i64.store offset=48 align=4
    (get_local $1)
    (i64.load offset=48 align=4
     (get_local $0)
    )
   )
   (i64.store offset=56 align=4
    (get_local $1)
    (i64.load offset=56 align=4
     (get_local $0)
    )
   )
  )
 )
 (func $_silk_noise_shape_quantizer_short_prediction_c (; 216 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (set_local $3
   (i32.add
    (i32.add
     (i32.add
      (i32.add
       (i32.add
        (i32.add
         (i32.add
          (i32.add
           (i32.add
            (i32.add
             (i32.shr_s
              (get_local $2)
              (i32.const 1)
             )
             (i32.add
              (i32.mul
               (i32.shr_s
                (tee_local $3
                 (i32.load
                  (get_local $0)
                 )
                )
                (i32.const 16)
               )
               (tee_local $4
                (i32.load16_s
                 (get_local $1)
                )
               )
              )
              (i32.shr_s
               (i32.mul
                (i32.and
                 (get_local $3)
                 (i32.const 65535)
                )
                (get_local $4)
               )
               (i32.const 16)
              )
             )
            )
            (i32.add
             (i32.mul
              (i32.shr_s
               (tee_local $3
                (i32.load
                 (i32.add
                  (get_local $0)
                  (i32.const -4)
                 )
                )
               )
               (i32.const 16)
              )
              (tee_local $4
               (i32.load16_s offset=2
                (get_local $1)
               )
              )
             )
             (i32.shr_s
              (i32.mul
               (i32.and
                (get_local $3)
                (i32.const 65535)
               )
               (get_local $4)
              )
              (i32.const 16)
             )
            )
           )
           (i32.add
            (i32.mul
             (i32.shr_s
              (tee_local $3
               (i32.load
                (i32.add
                 (get_local $0)
                 (i32.const -8)
                )
               )
              )
              (i32.const 16)
             )
             (tee_local $4
              (i32.load16_s offset=4
               (get_local $1)
              )
             )
            )
            (i32.shr_s
             (i32.mul
              (i32.and
               (get_local $3)
               (i32.const 65535)
              )
              (get_local $4)
             )
             (i32.const 16)
            )
           )
          )
          (i32.add
           (i32.mul
            (i32.shr_s
             (tee_local $3
              (i32.load
               (i32.add
                (get_local $0)
                (i32.const -12)
               )
              )
             )
             (i32.const 16)
            )
            (tee_local $4
             (i32.load16_s offset=6
              (get_local $1)
             )
            )
           )
           (i32.shr_s
            (i32.mul
             (i32.and
              (get_local $3)
              (i32.const 65535)
             )
             (get_local $4)
            )
            (i32.const 16)
           )
          )
         )
         (i32.add
          (i32.mul
           (i32.shr_s
            (tee_local $3
             (i32.load
              (i32.add
               (get_local $0)
               (i32.const -16)
              )
             )
            )
            (i32.const 16)
           )
           (tee_local $4
            (i32.load16_s offset=8
             (get_local $1)
            )
           )
          )
          (i32.shr_s
           (i32.mul
            (i32.and
             (get_local $3)
             (i32.const 65535)
            )
            (get_local $4)
           )
           (i32.const 16)
          )
         )
        )
        (i32.add
         (i32.mul
          (i32.shr_s
           (tee_local $3
            (i32.load
             (i32.add
              (get_local $0)
              (i32.const -20)
             )
            )
           )
           (i32.const 16)
          )
          (tee_local $4
           (i32.load16_s offset=10
            (get_local $1)
           )
          )
         )
         (i32.shr_s
          (i32.mul
           (i32.and
            (get_local $3)
            (i32.const 65535)
           )
           (get_local $4)
          )
          (i32.const 16)
         )
        )
       )
       (i32.add
        (i32.mul
         (i32.shr_s
          (tee_local $3
           (i32.load
            (i32.add
             (get_local $0)
             (i32.const -24)
            )
           )
          )
          (i32.const 16)
         )
         (tee_local $4
          (i32.load16_s offset=12
           (get_local $1)
          )
         )
        )
        (i32.shr_s
         (i32.mul
          (i32.and
           (get_local $3)
           (i32.const 65535)
          )
          (get_local $4)
         )
         (i32.const 16)
        )
       )
      )
      (i32.add
       (i32.mul
        (i32.shr_s
         (tee_local $3
          (i32.load
           (i32.add
            (get_local $0)
            (i32.const -28)
           )
          )
         )
         (i32.const 16)
        )
        (tee_local $4
         (i32.load16_s offset=14
          (get_local $1)
         )
        )
       )
       (i32.shr_s
        (i32.mul
         (i32.and
          (get_local $3)
          (i32.const 65535)
         )
         (get_local $4)
        )
        (i32.const 16)
       )
      )
     )
     (i32.add
      (i32.mul
       (i32.shr_s
        (tee_local $3
         (i32.load
          (i32.add
           (get_local $0)
           (i32.const -32)
          )
         )
        )
        (i32.const 16)
       )
       (tee_local $4
        (i32.load16_s offset=16
         (get_local $1)
        )
       )
      )
      (i32.shr_s
       (i32.mul
        (i32.and
         (get_local $3)
         (i32.const 65535)
        )
        (get_local $4)
       )
       (i32.const 16)
      )
     )
    )
    (i32.add
     (i32.mul
      (i32.shr_s
       (tee_local $3
        (i32.load
         (i32.add
          (get_local $0)
          (i32.const -36)
         )
        )
       )
       (i32.const 16)
      )
      (tee_local $4
       (i32.load16_s offset=18
        (get_local $1)
       )
      )
     )
     (i32.shr_s
      (i32.mul
       (i32.and
        (get_local $3)
        (i32.const 65535)
       )
       (get_local $4)
      )
      (i32.const 16)
     )
    )
   )
  )
  (if
   (i32.ne
    (get_local $2)
    (i32.const 16)
   )
   (return
    (get_local $3)
   )
  )
  (i32.add
   (i32.add
    (i32.add
     (i32.add
      (i32.add
       (i32.add
        (get_local $3)
        (i32.add
         (i32.mul
          (i32.shr_s
           (tee_local $2
            (i32.load
             (i32.add
              (get_local $0)
              (i32.const -40)
             )
            )
           )
           (i32.const 16)
          )
          (tee_local $3
           (i32.load16_s offset=20
            (get_local $1)
           )
          )
         )
         (i32.shr_s
          (i32.mul
           (i32.and
            (get_local $2)
            (i32.const 65535)
           )
           (get_local $3)
          )
          (i32.const 16)
         )
        )
       )
       (i32.add
        (i32.mul
         (i32.shr_s
          (tee_local $2
           (i32.load
            (i32.add
             (get_local $0)
             (i32.const -44)
            )
           )
          )
          (i32.const 16)
         )
         (tee_local $3
          (i32.load16_s offset=22
           (get_local $1)
          )
         )
        )
        (i32.shr_s
         (i32.mul
          (i32.and
           (get_local $2)
           (i32.const 65535)
          )
          (get_local $3)
         )
         (i32.const 16)
        )
       )
      )
      (i32.add
       (i32.mul
        (i32.shr_s
         (tee_local $2
          (i32.load
           (i32.add
            (get_local $0)
            (i32.const -48)
           )
          )
         )
         (i32.const 16)
        )
        (tee_local $3
         (i32.load16_s offset=24
          (get_local $1)
         )
        )
       )
       (i32.shr_s
        (i32.mul
         (i32.and
          (get_local $2)
          (i32.const 65535)
         )
         (get_local $3)
        )
        (i32.const 16)
       )
      )
     )
     (i32.add
      (i32.mul
       (i32.shr_s
        (tee_local $2
         (i32.load
          (i32.add
           (get_local $0)
           (i32.const -52)
          )
         )
        )
        (i32.const 16)
       )
       (tee_local $3
        (i32.load16_s offset=26
         (get_local $1)
        )
       )
      )
      (i32.shr_s
       (i32.mul
        (i32.and
         (get_local $2)
         (i32.const 65535)
        )
        (get_local $3)
       )
       (i32.const 16)
      )
     )
    )
    (i32.add
     (i32.mul
      (i32.shr_s
       (tee_local $2
        (i32.load
         (i32.add
          (get_local $0)
          (i32.const -56)
         )
        )
       )
       (i32.const 16)
      )
      (tee_local $3
       (i32.load16_s offset=28
        (get_local $1)
       )
      )
     )
     (i32.shr_s
      (i32.mul
       (i32.and
        (get_local $2)
        (i32.const 65535)
       )
       (get_local $3)
      )
      (i32.const 16)
     )
    )
   )
   (i32.add
    (i32.mul
     (i32.shr_s
      (tee_local $0
       (i32.load
        (i32.add
         (get_local $0)
         (i32.const -60)
        )
       )
      )
      (i32.const 16)
     )
     (tee_local $1
      (i32.load16_s offset=30
       (get_local $1)
      )
     )
    )
    (i32.shr_s
     (i32.mul
      (i32.and
       (get_local $0)
       (i32.const 65535)
      )
      (get_local $1)
     )
     (i32.const 16)
    )
   )
  )
 )
 (func $_silk_NSQ_noise_shape_feedback_loop_c (; 217 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (set_local $4
   (i32.load
    (get_local $1)
   )
  )
  (i32.store
   (get_local $1)
   (get_local $0)
  )
  (set_local $5
   (i32.const 2)
  )
  (set_local $0
   (i32.add
    (i32.shr_s
     (get_local $3)
     (i32.const 1)
    )
    (i32.add
     (i32.mul
      (i32.shr_s
       (get_local $0)
       (i32.const 16)
      )
      (tee_local $6
       (i32.load16_s
        (get_local $2)
       )
      )
     )
     (i32.shr_s
      (i32.mul
       (i32.and
        (get_local $0)
        (i32.const 65535)
       )
       (get_local $6)
      )
      (i32.const 16)
     )
    )
   )
  )
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $5)
     (get_local $3)
    )
    (block
     (set_local $8
      (i32.load
       (tee_local $7
        (i32.add
         (get_local $1)
         (i32.shl
          (tee_local $6
           (i32.add
            (get_local $5)
            (i32.const -1)
           )
          )
          (i32.const 2)
         )
        )
       )
      )
     )
     (i32.store
      (get_local $7)
      (get_local $4)
     )
     (set_local $7
      (i32.load16_s
       (i32.add
        (get_local $2)
        (i32.shl
         (get_local $6)
         (i32.const 1)
        )
       )
      )
     )
     (set_local $6
      (i32.load
       (tee_local $9
        (i32.add
         (get_local $1)
         (i32.shl
          (get_local $5)
          (i32.const 2)
         )
        )
       )
      )
     )
     (i32.store
      (get_local $9)
      (get_local $8)
     )
     (set_local $0
      (i32.add
       (i32.add
        (get_local $0)
        (i32.add
         (i32.mul
          (i32.shr_s
           (get_local $4)
           (i32.const 16)
          )
          (get_local $7)
         )
         (i32.shr_s
          (i32.mul
           (i32.and
            (get_local $4)
            (i32.const 65535)
           )
           (get_local $7)
          )
          (i32.const 16)
         )
        )
       )
       (i32.add
        (i32.mul
         (i32.shr_s
          (get_local $8)
          (i32.const 16)
         )
         (tee_local $0
          (i32.load16_s
           (i32.add
            (get_local $2)
            (i32.shl
             (get_local $5)
             (i32.const 1)
            )
           )
          )
         )
        )
        (i32.shr_s
         (i32.mul
          (i32.and
           (get_local $8)
           (i32.const 65535)
          )
          (get_local $0)
         )
         (i32.const 16)
        )
       )
      )
     )
     (set_local $5
      (i32.add
       (get_local $5)
       (i32.const 2)
      )
     )
     (set_local $4
      (get_local $6)
     )
     (br $while-in)
    )
   )
  )
  (i32.store
   (i32.add
    (get_local $1)
    (i32.shl
     (tee_local $1
      (i32.add
       (get_local $3)
       (i32.const -1)
      )
     )
     (i32.const 2)
    )
   )
   (get_local $4)
  )
  (i32.shl
   (i32.add
    (get_local $0)
    (i32.add
     (i32.mul
      (i32.shr_s
       (get_local $4)
       (i32.const 16)
      )
      (tee_local $0
       (i32.load16_s
        (i32.add
         (get_local $2)
         (i32.shl
          (get_local $1)
          (i32.const 1)
         )
        )
       )
      )
     )
     (i32.shr_s
      (i32.mul
       (i32.and
        (get_local $4)
        (i32.const 65535)
       )
       (get_local $0)
      )
      (i32.const 16)
     )
    )
   )
   (i32.const 1)
  )
 )
 (func $_silk_NSQ_del_dec_c (; 218 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (param $8 i32) (param $9 i32) (param $10 i32) (param $11 i32) (param $12 i32) (param $13 i32) (param $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local $26 i32)
  (local $27 i32)
  (local $28 i32)
  (local $29 i32)
  (local $30 i32)
  (local $31 i32)
  (local $32 i32)
  (local $33 i32)
  (local $34 i32)
  (local $35 i32)
  (local $36 i32)
  (local $37 i32)
  (local $38 i32)
  (local $39 i32)
  (local $40 i32)
  (local $41 i32)
  (local $42 i32)
  (local $43 i32)
  (local $44 i32)
  (local $45 i32)
  (local $46 i32)
  (local $47 i32)
  (local $48 i32)
  (local $49 i32)
  (local $50 i32)
  (local $51 i32)
  (local $52 i32)
  (local $53 i32)
  (local $54 i32)
  (local $55 i32)
  (set_local $32
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.const 176)
   )
  )
  (set_local $28
   (i32.add
    (get_local $32)
    (i32.const 160)
   )
  )
  (set_local $23
   (i32.load
    (tee_local $48
     (i32.add
      (get_local $1)
      (i32.const 4328)
     )
    )
   )
  )
  (set_local $16
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.and
     (i32.add
      (i32.mul
       (tee_local $18
        (i32.load
         (tee_local $29
          (i32.add
           (get_local $0)
           (i32.const 4628)
          )
         )
        )
       )
       (i32.const 1300)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (drop
   (call $_memset
    (get_local $16)
    (i32.const 0)
    (i32.mul
     (get_local $18)
     (i32.const 1300)
    )
   )
  )
  (set_local $35
   (i32.add
    (get_local $2)
    (i32.const 34)
   )
  )
  (set_local $36
   (i32.add
    (get_local $1)
    (i32.const 4320)
   )
  )
  (set_local $37
   (i32.add
    (get_local $1)
    (i32.const 4324)
   )
  )
  (set_local $25
   (i32.add
    (get_local $0)
    (i32.const 4592)
   )
  )
  (set_local $21
   (i32.add
    (get_local $1)
    (i32.const 3840)
   )
  )
  (set_local $17
   (i32.add
    (get_local $1)
    (i32.const 4224)
   )
  )
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $19)
     (get_local $18)
    )
    (block
     (i32.store
      (i32.add
       (i32.add
        (get_local $16)
        (i32.mul
         (get_local $19)
         (i32.const 1300)
        )
       )
       (i32.const 1288)
      )
      (tee_local $15
       (i32.and
        (i32.add
         (get_local $19)
         (i32.load8_u
          (get_local $35)
         )
        )
        (i32.const 3)
       )
      )
     )
     (i32.store
      (i32.add
       (i32.add
        (get_local $16)
        (i32.mul
         (get_local $19)
         (i32.const 1300)
        )
       )
       (i32.const 1292)
      )
      (get_local $15)
     )
     (i32.store
      (i32.add
       (i32.add
        (get_local $16)
        (i32.mul
         (get_local $19)
         (i32.const 1300)
        )
       )
       (i32.const 1296)
      )
      (i32.const 0)
     )
     (i32.store
      (i32.add
       (i32.add
        (get_local $16)
        (i32.mul
         (get_local $19)
         (i32.const 1300)
        )
       )
       (i32.const 1280)
      )
      (i32.load
       (get_local $36)
      )
     )
     (i32.store
      (i32.add
       (i32.add
        (get_local $16)
        (i32.mul
         (get_local $19)
         (i32.const 1300)
        )
       )
       (i32.const 1284)
      )
      (i32.load
       (get_local $37)
      )
     )
     (i32.store
      (i32.add
       (i32.add
        (get_local $16)
        (i32.mul
         (get_local $19)
         (i32.const 1300)
        )
       )
       (i32.const 1024)
      )
      (i32.load
       (i32.add
        (i32.add
         (get_local $1)
         (i32.shl
          (i32.load
           (get_local $25)
          )
          (i32.const 2)
         )
        )
        (i32.const 1276)
       )
      )
     )
     (i64.store align=4
      (tee_local $15
       (i32.add
        (get_local $16)
        (i32.mul
         (get_local $19)
         (i32.const 1300)
        )
       )
      )
      (i64.load align=4
       (get_local $21)
      )
     )
     (i64.store offset=8 align=4
      (get_local $15)
      (i64.load offset=8 align=4
       (get_local $21)
      )
     )
     (i64.store offset=16 align=4
      (get_local $15)
      (i64.load offset=16 align=4
       (get_local $21)
      )
     )
     (i64.store offset=24 align=4
      (get_local $15)
      (i64.load offset=24 align=4
       (get_local $21)
      )
     )
     (i64.store offset=32 align=4
      (get_local $15)
      (i64.load offset=32 align=4
       (get_local $21)
      )
     )
     (i64.store offset=40 align=4
      (get_local $15)
      (i64.load offset=40 align=4
       (get_local $21)
      )
     )
     (i64.store offset=48 align=4
      (get_local $15)
      (i64.load offset=48 align=4
       (get_local $21)
      )
     )
     (i64.store offset=56 align=4
      (get_local $15)
      (i64.load offset=56 align=4
       (get_local $21)
      )
     )
     (i64.store align=4
      (tee_local $15
       (i32.add
        (i32.add
         (get_local $16)
         (i32.mul
          (get_local $19)
          (i32.const 1300)
         )
        )
        (i32.const 1184)
       )
      )
      (i64.load align=4
       (get_local $17)
      )
     )
     (i64.store offset=8 align=4
      (get_local $15)
      (i64.load offset=8 align=4
       (get_local $17)
      )
     )
     (i64.store offset=16 align=4
      (get_local $15)
      (i64.load offset=16 align=4
       (get_local $17)
      )
     )
     (i64.store offset=24 align=4
      (get_local $15)
      (i64.load offset=24 align=4
       (get_local $17)
      )
     )
     (i64.store offset=32 align=4
      (get_local $15)
      (i64.load offset=32 align=4
       (get_local $17)
      )
     )
     (i64.store offset=40 align=4
      (get_local $15)
      (i64.load offset=40 align=4
       (get_local $17)
      )
     )
     (i64.store offset=48 align=4
      (get_local $15)
      (i64.load offset=48 align=4
       (get_local $17)
      )
     )
     (i64.store offset=56 align=4
      (get_local $15)
      (i64.load offset=56 align=4
       (get_local $17)
      )
     )
     (i64.store align=4
      (i32.sub
       (get_local $15)
       (i32.const -64)
      )
      (i64.load align=4
       (i32.sub
        (get_local $17)
        (i32.const -64)
       )
      )
     )
     (i64.store offset=72 align=4
      (get_local $15)
      (i64.load offset=72 align=4
       (get_local $17)
      )
     )
     (i64.store offset=80 align=4
      (get_local $15)
      (i64.load offset=80 align=4
       (get_local $17)
      )
     )
     (i64.store offset=88 align=4
      (get_local $15)
      (i64.load offset=88 align=4
       (get_local $17)
      )
     )
     (set_local $19
      (i32.add
       (get_local $19)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (set_local $49
   (i32.load16_s
    (i32.add
     (i32.add
      (i32.shl
       (i32.shr_s
        (tee_local $18
         (i32.load8_s
          (tee_local $33
           (i32.add
            (get_local $2)
            (i32.const 29)
           )
          )
         )
        )
        (i32.const 1)
       )
       (i32.const 2)
      )
      (i32.const 41164)
     )
     (i32.shl
      (i32.load8_s offset=30
       (get_local $2)
      )
      (i32.const 1)
     )
    )
   )
  )
  (i32.store
   (get_local $28)
   (i32.const 0)
  )
  (set_local $15
   (call $_silk_min_int_238
    (i32.const 40)
    (tee_local $19
     (i32.load
      (tee_local $30
       (i32.add
        (get_local $0)
        (i32.const 4588)
       )
      )
     )
    )
   )
  )
  (block $label$break$L5
   (if
    (i32.eq
     (get_local $18)
     (i32.const 2)
    )
    (block
     (set_local $18
      (i32.load
       (i32.add
        (get_local $0)
        (i32.const 4580)
       )
      )
     )
     (loop $while-in1
      (br_if $label$break$L5
       (i32.ge_s
        (get_local $20)
        (get_local $18)
       )
      )
      (set_local $15
       (call $_silk_min_int_238
        (get_local $15)
        (i32.add
         (i32.load
          (i32.add
           (get_local $12)
           (i32.shl
            (get_local $20)
            (i32.const 2)
           )
          )
         )
         (i32.const -3)
        )
       )
      )
      (set_local $20
       (i32.add
        (get_local $20)
        (i32.const 1)
       )
      )
      (br $while-in1)
     )
    )
    (if
     (i32.gt_s
      (get_local $23)
      (i32.const 0)
     )
     (set_local $15
      (call $_silk_min_int_238
       (get_local $15)
       (i32.add
        (get_local $23)
        (i32.const -3)
       )
      )
     )
    )
   )
  )
  (set_local $20
   (i32.ne
    (i32.load8_s offset=31
     (get_local $2)
    )
    (i32.const 4)
   )
  )
  (set_local $38
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (tee_local $2
        (i32.add
         (tee_local $18
          (i32.load
           (get_local $25)
          )
         )
         (i32.load
          (tee_local $39
           (i32.add
            (get_local $0)
            (i32.const 4584)
           )
          )
         )
        )
       )
       (i32.const 2)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (set_local $40
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (get_local $2)
       (i32.const 1)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (set_local $41
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (get_local $19)
       (i32.const 2)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (i32.store
   (tee_local $42
    (i32.add
     (get_local $1)
     (i32.const 4336)
    )
   )
   (get_local $18)
  )
  (i32.store
   (tee_local $50
    (i32.add
     (get_local $1)
     (i32.const 4332)
    )
   )
   (i32.load
    (get_local $25)
   )
  )
  (set_local $34
   (i32.add
    (get_local $0)
    (i32.const 4580)
   )
  )
  (set_local $51
   (i32.xor
    (get_local $20)
    (i32.const 1)
   )
  )
  (set_local $43
   (i32.add
    (get_local $1)
    (i32.const 4348)
   )
  )
  (set_local $52
   (i32.xor
    (i32.shl
     (get_local $20)
     (i32.const 1)
    )
    (i32.const 3)
   )
  )
  (set_local $53
   (i32.add
    (get_local $0)
    (i32.const 4636)
   )
  )
  (set_local $44
   (i32.add
    (get_local $0)
    (i32.const 4640)
   )
  )
  (set_local $54
   (i32.add
    (get_local $0)
    (i32.const 4672)
   )
  )
  (set_local $45
   (i32.add
    (get_local $16)
    (i32.const 1296)
   )
  )
  (set_local $55
   (i32.add
    (get_local $11)
    (i32.const 4)
   )
  )
  (set_local $19
   (get_local $3)
  )
  (set_local $3
   (i32.const 0)
  )
  (set_local $26
   (get_local $4)
  )
  (set_local $2
   (get_local $23)
  )
  (set_local $27
   (i32.add
    (get_local $1)
    (i32.shl
     (get_local $18)
     (i32.const 1)
    )
   )
  )
  (block $__rjto$0
   (block $__rjti$0
    (loop $while-in3
     (if
      (i32.lt_s
       (get_local $22)
       (i32.load
        (get_local $34)
       )
      )
      (block
       (set_local $46
        (i32.add
         (get_local $5)
         (i32.shl
          (i32.or
           (i32.shr_u
            (get_local $22)
            (i32.const 1)
           )
           (get_local $51)
          )
          (i32.const 5)
         )
        )
       )
       (set_local $47
        (i32.load
         (i32.add
          (get_local $8)
          (i32.shl
           (get_local $22)
           (i32.const 2)
          )
         )
        )
       )
       (i32.store
        (get_local $43)
        (i32.const 0)
       )
       (if
        (i32.eq
         (tee_local $4
          (i32.load8_s
           (get_local $33)
          )
         )
         (i32.const 2)
        )
        (block
         (set_local $4
          (i32.load
           (i32.add
            (get_local $12)
            (i32.shl
             (get_local $22)
             (i32.const 2)
            )
           )
          )
         )
         (set_local $4
          (if (result i32)
           (i32.and
            (get_local $22)
            (get_local $52)
           )
           (block (result i32)
            (set_local $2
             (get_local $4)
            )
            (i32.const 2)
           )
           (block (result i32)
            (if
             (i32.eq
              (get_local $22)
              (i32.const 2)
             )
             (block
              (set_local $24
               (i32.load
                (get_local $29)
               )
              )
              (set_local $23
               (i32.load
                (get_local $45)
               )
              )
              (set_local $18
               (i32.const 0)
              )
              (set_local $20
               (i32.const 1)
              )
              (loop $while-in6
               (if
                (i32.lt_s
                 (get_local $20)
                 (get_local $24)
                )
                (block
                 (set_local $2
                  (if (result i32)
                   (tee_local $31
                    (i32.lt_s
                     (tee_local $3
                      (i32.load
                       (i32.add
                        (i32.add
                         (get_local $16)
                         (i32.mul
                          (get_local $20)
                          (i32.const 1300)
                         )
                        )
                        (i32.const 1296)
                       )
                      )
                     )
                     (get_local $23)
                    )
                   )
                   (get_local $20)
                   (get_local $18)
                  )
                 )
                 (if
                  (get_local $31)
                  (set_local $23
                   (get_local $3)
                  )
                 )
                 (set_local $18
                  (get_local $2)
                 )
                 (set_local $20
                  (i32.add
                   (get_local $20)
                   (i32.const 1)
                  )
                 )
                 (br $while-in6)
                )
               )
              )
              (set_local $3
               (i32.const 0)
              )
              (loop $while-in8
               (if
                (i32.lt_s
                 (get_local $3)
                 (get_local $24)
                )
                (block
                 (if
                  (i32.ne
                   (get_local $3)
                   (get_local $18)
                  )
                  (i32.store
                   (tee_local $2
                    (i32.add
                     (i32.add
                      (get_local $16)
                      (i32.mul
                       (get_local $3)
                       (i32.const 1300)
                      )
                     )
                     (i32.const 1296)
                    )
                   )
                   (i32.add
                    (i32.load
                     (get_local $2)
                    )
                    (i32.const 134217727)
                   )
                  )
                 )
                 (set_local $3
                  (i32.add
                   (get_local $3)
                   (i32.const 1)
                  )
                 )
                 (br $while-in8)
                )
               )
              )
              (set_local $2
               (i32.add
                (i32.load
                 (get_local $28)
                )
                (get_local $15)
               )
              )
              (set_local $24
               (i32.const 0)
              )
              (loop $while-in10
               (if
                (i32.ge_s
                 (get_local $24)
                 (get_local $15)
                )
                (set_local $3
                 (i32.const 0)
                )
                (block
                 (set_local $2
                  (i32.add
                   (tee_local $3
                    (i32.rem_s
                     (i32.add
                      (get_local $2)
                      (i32.const -1)
                     )
                     (i32.const 40)
                    )
                   )
                   (i32.const 40)
                  )
                 )
                 (i32.store8
                  (i32.add
                   (get_local $26)
                   (tee_local $20
                    (i32.sub
                     (get_local $24)
                     (get_local $15)
                    )
                   )
                  )
                  (i32.shr_u
                   (i32.add
                    (i32.shr_u
                     (i32.load
                      (i32.add
                       (i32.add
                        (i32.add
                         (get_local $16)
                         (i32.mul
                          (get_local $18)
                          (i32.const 1300)
                         )
                        )
                        (i32.const 544)
                       )
                       (i32.shl
                        (if (result i32)
                         (i32.lt_s
                          (get_local $3)
                          (i32.const 0)
                         )
                         (get_local $2)
                         (tee_local $2
                          (get_local $3)
                         )
                        )
                        (i32.const 2)
                       )
                      )
                     )
                     (i32.const 9)
                    )
                    (i32.const 1)
                   )
                   (i32.const 1)
                  )
                 )
                 (i32.store16
                  (i32.add
                   (get_local $27)
                   (i32.shl
                    (get_local $20)
                    (i32.const 1)
                   )
                  )
                  (tee_local $3
                   (if (result i32)
                    (i32.gt_s
                     (tee_local $3
                      (i32.add
                       (i32.add
                        (i32.mul
                         (i32.shr_s
                          (tee_local $31
                           (i32.load
                            (i32.add
                             (i32.add
                              (i32.add
                               (get_local $16)
                               (i32.mul
                                (get_local $18)
                                (i32.const 1300)
                               )
                              )
                              (i32.const 704)
                             )
                             (i32.shl
                              (get_local $2)
                              (i32.const 2)
                             )
                            )
                           )
                          )
                          (i32.const 16)
                         )
                         (tee_local $3
                          (i32.shr_s
                           (i32.shl
                            (tee_local $23
                             (i32.load
                              (get_local $55)
                             )
                            )
                            (i32.const 16)
                           )
                           (i32.const 16)
                          )
                         )
                        )
                        (i32.shr_s
                         (i32.mul
                          (i32.and
                           (get_local $31)
                           (i32.const 65535)
                          )
                          (get_local $3)
                         )
                         (i32.const 16)
                        )
                       )
                       (i32.mul
                        (get_local $31)
                        (i32.shr_s
                         (i32.add
                          (i32.shr_s
                           (get_local $23)
                           (i32.const 15)
                          )
                          (i32.const 1)
                         )
                         (i32.const 1)
                        )
                       )
                      )
                     )
                     (i32.const 536862719)
                    )
                    (i32.const 32767)
                    (if (result i32)
                     (i32.lt_s
                      (get_local $3)
                      (i32.const -536879104)
                     )
                     (i32.const -32768)
                     (i32.shr_s
                      (i32.add
                       (i32.shr_s
                        (get_local $3)
                        (i32.const 13)
                       )
                       (i32.const 1)
                      )
                      (i32.const 1)
                     )
                    )
                   )
                  )
                 )
                 (i32.store
                  (i32.add
                   (i32.add
                    (get_local $1)
                    (i32.const 1280)
                   )
                   (i32.shl
                    (i32.add
                     (i32.sub
                      (i32.load
                       (get_local $42)
                      )
                      (get_local $15)
                     )
                     (get_local $24)
                    )
                    (i32.const 2)
                   )
                  )
                  (i32.load
                   (i32.add
                    (i32.add
                     (i32.add
                      (get_local $16)
                      (i32.mul
                       (get_local $18)
                       (i32.const 1300)
                      )
                     )
                     (i32.const 1024)
                    )
                    (i32.shl
                     (get_local $2)
                     (i32.const 2)
                    )
                   )
                  )
                 )
                 (set_local $24
                  (i32.add
                   (get_local $24)
                   (i32.const 1)
                  )
                 )
                 (br $while-in10)
                )
               )
              )
             )
            )
            (br_if $__rjti$0
             (i32.le_s
              (tee_local $2
               (i32.sub
                (i32.sub
                 (tee_local $18
                  (i32.load
                   (get_local $25)
                  )
                 )
                 (get_local $4)
                )
                (tee_local $23
                 (i32.load
                  (get_local $44)
                 )
                )
               )
              )
              (i32.const 2)
             )
            )
            (call $_silk_LPC_analysis_filter
             (i32.add
              (get_local $40)
              (i32.shl
               (tee_local $2
                (i32.add
                 (get_local $2)
                 (i32.const -2)
                )
               )
               (i32.const 1)
              )
             )
             (i32.add
              (get_local $1)
              (i32.shl
               (i32.add
                (get_local $2)
                (i32.mul
                 (get_local $22)
                 (i32.load
                  (get_local $30)
                 )
                )
               )
               (i32.const 1)
              )
             )
             (get_local $46)
             (i32.sub
              (get_local $18)
              (get_local $2)
             )
             (get_local $23)
            )
            (i32.store
             (get_local $50)
             (i32.load
              (get_local $25)
             )
            )
            (i32.store
             (get_local $43)
             (i32.const 1)
            )
            (set_local $2
             (get_local $4)
            )
            (i32.load8_s
             (get_local $33)
            )
           )
          )
         )
        )
       )
       (set_local $20
        (i32.add
         (get_local $6)
         (i32.shl
          (i32.mul
           (get_local $22)
           (i32.const 5)
          )
          (i32.const 1)
         )
        )
       )
       (set_local $18
        (i32.add
         (get_local $7)
         (i32.shl
          (i32.mul
           (get_local $22)
           (i32.const 24)
          )
          (i32.const 1)
         )
        )
       )
       (set_local $23
        (i32.or
         (i32.shr_s
          (get_local $47)
          (i32.const 2)
         )
         (i32.shl
          (i32.shr_u
           (get_local $47)
           (i32.const 1)
          )
          (i32.const 16)
         )
        )
       )
       (call $_silk_nsq_del_dec_scale_states
        (get_local $0)
        (get_local $1)
        (get_local $16)
        (get_local $19)
        (get_local $41)
        (get_local $40)
        (get_local $38)
        (get_local $22)
        (i32.load
         (get_local $29)
        )
        (get_local $14)
        (get_local $11)
        (get_local $12)
        (i32.shr_s
         (i32.shl
          (get_local $4)
          (i32.const 24)
         )
         (i32.const 24)
        )
        (get_local $15)
       )
       (call $_silk_noise_shape_quantizer_del_dec
        (get_local $1)
        (get_local $16)
        (i32.load8_s
         (get_local $33)
        )
        (get_local $41)
        (get_local $26)
        (get_local $27)
        (get_local $38)
        (get_local $32)
        (get_local $46)
        (get_local $20)
        (get_local $18)
        (get_local $2)
        (get_local $23)
        (i32.load
         (i32.add
          (get_local $9)
          (i32.shl
           (get_local $22)
           (i32.const 2)
          )
         )
        )
        (i32.load
         (i32.add
          (get_local $10)
          (i32.shl
           (get_local $22)
           (i32.const 2)
          )
         )
        )
        (i32.load
         (i32.add
          (get_local $11)
          (i32.shl
           (get_local $22)
           (i32.const 2)
          )
         )
        )
        (get_local $13)
        (get_local $49)
        (i32.load
         (get_local $30)
        )
        (get_local $3)
        (i32.load
         (get_local $53)
        )
        (i32.load
         (get_local $44)
        )
        (i32.load
         (get_local $54)
        )
        (i32.load
         (get_local $29)
        )
        (get_local $28)
        (get_local $15)
       )
       (set_local $19
        (i32.add
         (get_local $19)
         (i32.shl
          (tee_local $4
           (i32.load
            (get_local $30)
           )
          )
          (i32.const 1)
         )
        )
       )
       (set_local $3
        (i32.add
         (get_local $3)
         (i32.const 1)
        )
       )
       (set_local $26
        (i32.add
         (get_local $26)
         (get_local $4)
        )
       )
       (set_local $27
        (i32.add
         (get_local $27)
         (i32.shl
          (get_local $4)
          (i32.const 1)
         )
        )
       )
       (set_local $22
        (i32.add
         (get_local $22)
         (i32.const 1)
        )
       )
       (br $while-in3)
      )
     )
    )
    (br $__rjto$0)
   )
   (call $_celt_fatal
    (i32.const 45431)
    (i32.const 45463)
    (i32.const 253)
   )
  )
  (set_local $7
   (i32.load
    (get_local $29)
   )
  )
  (set_local $3
   (i32.load
    (get_local $45)
   )
  )
  (set_local $4
   (i32.const 0)
  )
  (set_local $5
   (i32.const 1)
  )
  (loop $while-in12
   (if
    (i32.lt_s
     (get_local $5)
     (get_local $7)
    )
    (block
     (set_local $0
      (if (result i32)
       (tee_local $6
        (i32.lt_s
         (tee_local $2
          (i32.load
           (i32.add
            (i32.add
             (get_local $16)
             (i32.mul
              (get_local $5)
              (i32.const 1300)
             )
            )
            (i32.const 1296)
           )
          )
         )
         (get_local $3)
        )
       )
       (get_local $5)
       (get_local $4)
      )
     )
     (if
      (get_local $6)
      (set_local $3
       (get_local $2)
      )
     )
     (set_local $4
      (get_local $0)
     )
     (set_local $5
      (i32.add
       (get_local $5)
       (i32.const 1)
      )
     )
     (br $while-in12)
    )
   )
  )
  (i32.store8
   (get_local $35)
   (i32.load
    (i32.add
     (i32.add
      (get_local $16)
      (i32.mul
       (get_local $4)
       (i32.const 1300)
      )
     )
     (i32.const 1292)
    )
   )
  )
  (set_local $6
   (i32.shr_s
    (i32.shl
     (i32.shr_u
      (tee_local $0
       (i32.load
        (i32.add
         (get_local $11)
         (i32.shl
          (i32.add
           (i32.load
            (get_local $34)
           )
           (i32.const -1)
          )
          (i32.const 2)
         )
        )
       )
      )
      (i32.const 6)
     )
     (i32.const 16)
    )
    (i32.const 16)
   )
  )
  (set_local $3
   (i32.shr_s
    (i32.add
     (i32.shr_s
      (get_local $0)
      (i32.const 21)
     )
     (i32.const 1)
    )
    (i32.const 1)
   )
  )
  (set_local $0
   (i32.add
    (i32.load
     (get_local $28)
    )
    (get_local $15)
   )
  )
  (set_local $7
   (i32.const 0)
  )
  (loop $while-in14
   (if
    (i32.lt_s
     (get_local $7)
     (get_local $15)
    )
    (block
     (set_local $0
      (i32.add
       (tee_local $5
        (i32.rem_s
         (i32.add
          (get_local $0)
          (i32.const -1)
         )
         (i32.const 40)
        )
       )
       (i32.const 40)
      )
     )
     (i32.store8
      (i32.add
       (get_local $26)
       (tee_local $2
        (i32.sub
         (get_local $7)
         (get_local $15)
        )
       )
      )
      (i32.shr_u
       (i32.add
        (i32.shr_u
         (i32.load
          (i32.add
           (i32.add
            (i32.add
             (get_local $16)
             (i32.mul
              (get_local $4)
              (i32.const 1300)
             )
            )
            (i32.const 544)
           )
           (i32.shl
            (if (result i32)
             (i32.lt_s
              (get_local $5)
              (i32.const 0)
             )
             (get_local $0)
             (tee_local $0
              (get_local $5)
             )
            )
            (i32.const 2)
           )
          )
         )
         (i32.const 9)
        )
        (i32.const 1)
       )
       (i32.const 1)
      )
     )
     (i32.store16
      (i32.add
       (get_local $27)
       (i32.shl
        (get_local $2)
        (i32.const 1)
       )
      )
      (tee_local $5
       (if (result i32)
        (i32.gt_s
         (tee_local $5
          (i32.add
           (i32.add
            (i32.mul
             (i32.shr_s
              (tee_local $5
               (i32.load
                (i32.add
                 (i32.add
                  (i32.add
                   (get_local $16)
                   (i32.mul
                    (get_local $4)
                    (i32.const 1300)
                   )
                  )
                  (i32.const 704)
                 )
                 (i32.shl
                  (get_local $0)
                  (i32.const 2)
                 )
                )
               )
              )
              (i32.const 16)
             )
             (get_local $6)
            )
            (i32.shr_s
             (i32.mul
              (i32.and
               (get_local $5)
               (i32.const 65535)
              )
              (get_local $6)
             )
             (i32.const 16)
            )
           )
           (i32.mul
            (get_local $5)
            (get_local $3)
           )
          )
         )
         (i32.const 8388479)
        )
        (i32.const 32767)
        (if (result i32)
         (i32.lt_s
          (get_local $5)
          (i32.const -8388736)
         )
         (i32.const -32768)
         (i32.shr_s
          (i32.add
           (i32.shr_s
            (get_local $5)
            (i32.const 7)
           )
           (i32.const 1)
          )
          (i32.const 1)
         )
        )
       )
      )
     )
     (i32.store
      (i32.add
       (i32.add
        (get_local $1)
        (i32.const 1280)
       )
       (i32.shl
        (i32.add
         (i32.sub
          (i32.load
           (get_local $42)
          )
          (get_local $15)
         )
         (get_local $7)
        )
        (i32.const 2)
       )
      )
      (i32.load
       (i32.add
        (i32.add
         (i32.add
          (get_local $16)
          (i32.mul
           (get_local $4)
           (i32.const 1300)
          )
         )
         (i32.const 1024)
        )
        (i32.shl
         (get_local $0)
         (i32.const 2)
        )
       )
      )
     )
     (set_local $7
      (i32.add
       (get_local $7)
       (i32.const 1)
      )
     )
     (br $while-in14)
    )
   )
  )
  (i64.store align=4
   (get_local $21)
   (i64.load align=4
    (tee_local $0
     (i32.add
      (i32.add
       (get_local $16)
       (i32.mul
        (get_local $4)
        (i32.const 1300)
       )
      )
      (i32.shl
       (i32.load
        (get_local $30)
       )
       (i32.const 2)
      )
     )
    )
   )
  )
  (i64.store offset=8 align=4
   (get_local $21)
   (i64.load offset=8 align=4
    (get_local $0)
   )
  )
  (i64.store offset=16 align=4
   (get_local $21)
   (i64.load offset=16 align=4
    (get_local $0)
   )
  )
  (i64.store offset=24 align=4
   (get_local $21)
   (i64.load offset=24 align=4
    (get_local $0)
   )
  )
  (i64.store offset=32 align=4
   (get_local $21)
   (i64.load offset=32 align=4
    (get_local $0)
   )
  )
  (i64.store offset=40 align=4
   (get_local $21)
   (i64.load offset=40 align=4
    (get_local $0)
   )
  )
  (i64.store offset=48 align=4
   (get_local $21)
   (i64.load offset=48 align=4
    (get_local $0)
   )
  )
  (i64.store offset=56 align=4
   (get_local $21)
   (i64.load offset=56 align=4
    (get_local $0)
   )
  )
  (i64.store align=4
   (get_local $17)
   (i64.load align=4
    (tee_local $0
     (i32.add
      (i32.add
       (get_local $16)
       (i32.mul
        (get_local $4)
        (i32.const 1300)
       )
      )
      (i32.const 1184)
     )
    )
   )
  )
  (i64.store offset=8 align=4
   (get_local $17)
   (i64.load offset=8 align=4
    (get_local $0)
   )
  )
  (i64.store offset=16 align=4
   (get_local $17)
   (i64.load offset=16 align=4
    (get_local $0)
   )
  )
  (i64.store offset=24 align=4
   (get_local $17)
   (i64.load offset=24 align=4
    (get_local $0)
   )
  )
  (i64.store offset=32 align=4
   (get_local $17)
   (i64.load offset=32 align=4
    (get_local $0)
   )
  )
  (i64.store offset=40 align=4
   (get_local $17)
   (i64.load offset=40 align=4
    (get_local $0)
   )
  )
  (i64.store offset=48 align=4
   (get_local $17)
   (i64.load offset=48 align=4
    (get_local $0)
   )
  )
  (i64.store offset=56 align=4
   (get_local $17)
   (i64.load offset=56 align=4
    (get_local $0)
   )
  )
  (i64.store align=4
   (i32.sub
    (get_local $17)
    (i32.const -64)
   )
   (i64.load align=4
    (i32.sub
     (get_local $0)
     (i32.const -64)
    )
   )
  )
  (i64.store offset=72 align=4
   (get_local $17)
   (i64.load offset=72 align=4
    (get_local $0)
   )
  )
  (i64.store offset=80 align=4
   (get_local $17)
   (i64.load offset=80 align=4
    (get_local $0)
   )
  )
  (i64.store offset=88 align=4
   (get_local $17)
   (i64.load offset=88 align=4
    (get_local $0)
   )
  )
  (i32.store
   (get_local $36)
   (i32.load
    (i32.add
     (i32.add
      (get_local $16)
      (i32.mul
       (get_local $4)
       (i32.const 1300)
      )
     )
     (i32.const 1280)
    )
   )
  )
  (i32.store
   (get_local $37)
   (i32.load
    (i32.add
     (i32.add
      (get_local $16)
      (i32.mul
       (get_local $4)
       (i32.const 1300)
      )
     )
     (i32.const 1284)
    )
   )
  )
  (i32.store
   (get_local $48)
   (i32.load
    (i32.add
     (get_local $12)
     (i32.shl
      (i32.add
       (i32.load
        (get_local $34)
       )
       (i32.const -1)
      )
      (i32.const 2)
     )
    )
   )
  )
  (drop
   (call $_memmove
    (get_local $1)
    (i32.add
     (get_local $1)
     (i32.shl
      (i32.load
       (get_local $39)
      )
      (i32.const 1)
     )
    )
    (i32.shl
     (i32.load
      (get_local $25)
     )
     (i32.const 1)
    )
   )
  )
  (drop
   (call $_memmove
    (i32.add
     (get_local $1)
     (i32.const 1280)
    )
    (i32.add
     (i32.add
      (get_local $1)
      (i32.const 1280)
     )
     (i32.shl
      (i32.load
       (get_local $39)
      )
      (i32.const 2)
     )
    )
    (i32.shl
     (i32.load
      (get_local $25)
     )
     (i32.const 2)
    )
   )
  )
  (set_global $STACKTOP
   (get_local $32)
  )
 )
 (func $_silk_min_int_238 (; 219 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (if (result i32)
   (i32.lt_s
    (get_local $0)
    (get_local $1)
   )
   (get_local $0)
   (get_local $1)
  )
 )
 (func $_silk_nsq_del_dec_scale_states (; 220 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (param $8 i32) (param $9 i32) (param $10 i32) (param $11 i32) (param $12 i32) (param $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (set_local $16
   (i32.load
    (i32.add
     (get_local $11)
     (i32.shl
      (get_local $7)
      (i32.const 2)
     )
    )
   )
  )
  (set_local $11
   (i32.add
    (i32.shr_s
     (tee_local $10
      (call $_silk_INVERSE32_varQ
       (if (result i32)
        (i32.gt_s
         (tee_local $10
          (i32.load
           (tee_local $17
            (i32.add
             (get_local $10)
             (i32.shl
              (get_local $7)
              (i32.const 2)
             )
            )
           )
          )
         )
         (i32.const 1)
        )
        (get_local $10)
        (i32.const 1)
       )
      )
     )
     (i32.const 4)
    )
    (i32.const 1)
   )
  )
  (set_local $15
   (i32.add
    (get_local $0)
    (i32.const 4588)
   )
  )
  (set_local $14
   (i32.shr_s
    (i32.shl
     (i32.shr_u
      (get_local $11)
      (i32.const 1)
     )
     (i32.const 16)
    )
    (i32.const 16)
   )
  )
  (set_local $18
   (i32.shr_s
    (i32.add
     (i32.shr_s
      (get_local $11)
      (i32.const 16)
     )
     (i32.const 1)
    )
    (i32.const 1)
   )
  )
  (set_local $11
   (i32.const 0)
  )
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $11)
     (i32.load
      (get_local $15)
     )
    )
    (block
     (i32.store
      (i32.add
       (get_local $4)
       (i32.shl
        (get_local $11)
        (i32.const 2)
       )
      )
      (i32.add
       (i32.add
        (i32.mul
         (i32.shr_s
          (tee_local $20
           (tee_local $19
            (i32.load16_s
             (i32.add
              (get_local $3)
              (i32.shl
               (get_local $11)
               (i32.const 1)
              )
             )
            )
           )
          )
          (i32.const 16)
         )
         (get_local $14)
        )
        (i32.shr_s
         (i32.mul
          (get_local $14)
          (i32.and
           (get_local $19)
           (i32.const 65535)
          )
         )
         (i32.const 16)
        )
       )
       (i32.mul
        (get_local $18)
        (get_local $20)
       )
      )
     )
     (set_local $11
      (i32.add
       (get_local $11)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (block $label$break$L5
   (if
    (i32.load
     (tee_local $11
      (i32.add
       (get_local $1)
       (i32.const 4348)
      )
     )
    )
    (block
     (if
      (i32.eqz
       (get_local $7)
      )
      (set_local $10
       (i32.shl
        (i32.add
         (i32.mul
          (i32.shr_s
           (get_local $10)
           (i32.const 16)
          )
          (tee_local $3
           (i32.shr_s
            (i32.shl
             (get_local $9)
             (i32.const 16)
            )
            (i32.const 16)
           )
          )
         )
         (i32.shr_s
          (i32.mul
           (i32.and
            (get_local $10)
            (i32.const 65535)
           )
           (get_local $3)
          )
          (i32.const 16)
         )
        )
        (i32.const 2)
       )
      )
     )
     (set_local $7
      (i32.shr_s
       (get_local $10)
       (i32.const 16)
      )
     )
     (set_local $9
      (i32.and
       (get_local $10)
       (i32.const 65535)
      )
     )
     (set_local $4
      (i32.add
       (i32.sub
        (tee_local $3
         (i32.load
          (tee_local $10
           (i32.add
            (get_local $1)
            (i32.const 4332)
           )
          )
         )
        )
        (get_local $16)
       )
       (i32.const -2)
      )
     )
     (loop $while-in1
      (br_if $label$break$L5
       (i32.ge_s
        (get_local $4)
        (get_local $3)
       )
      )
      (i32.store
       (i32.add
        (get_local $6)
        (i32.shl
         (get_local $4)
         (i32.const 2)
        )
       )
       (i32.add
        (i32.mul
         (get_local $7)
         (tee_local $3
          (i32.load16_s
           (i32.add
            (get_local $5)
            (i32.shl
             (get_local $4)
             (i32.const 1)
            )
           )
          )
         )
        )
        (i32.shr_s
         (i32.mul
          (get_local $9)
          (get_local $3)
         )
         (i32.const 16)
        )
       )
      )
      (set_local $4
       (i32.add
        (get_local $4)
        (i32.const 1)
       )
      )
      (set_local $3
       (i32.load
        (get_local $10)
       )
      )
      (br $while-in1)
     )
    )
   )
  )
  (if
   (i32.eq
    (tee_local $3
     (i32.load
      (get_local $17)
     )
    )
    (tee_local $4
     (i32.load
      (tee_local $10
       (i32.add
        (get_local $1)
        (i32.const 4344)
       )
      )
     )
    )
   )
   (return)
  )
  (set_local $5
   (i32.shr_s
    (tee_local $4
     (call $_silk_DIV32_varQ
      (get_local $4)
      (get_local $3)
     )
    )
    (i32.const 16)
   )
  )
  (set_local $7
   (i32.and
    (get_local $4)
    (i32.const 65535)
   )
  )
  (set_local $9
   (i32.sub
    (tee_local $3
     (i32.load
      (tee_local $14
       (i32.add
        (get_local $1)
        (i32.const 4336)
       )
      )
     )
    )
    (i32.load
     (i32.add
      (get_local $0)
      (i32.const 4592)
     )
    )
   )
  )
  (set_local $0
   (get_local $3)
  )
  (loop $while-in3
   (if
    (i32.lt_s
     (get_local $9)
     (get_local $0)
    )
    (block
     (set_local $0
      (i32.shr_s
       (i32.shl
        (tee_local $15
         (i32.load
          (tee_local $3
           (i32.add
            (i32.add
             (get_local $1)
             (i32.const 1280)
            )
            (i32.shl
             (get_local $9)
             (i32.const 2)
            )
           )
          )
         )
        )
        (i32.const 16)
       )
       (i32.const 16)
      )
     )
     (i32.store
      (get_local $3)
      (i32.add
       (i32.add
        (i32.mul
         (get_local $5)
         (get_local $0)
        )
        (i32.shr_s
         (i32.mul
          (get_local $7)
          (get_local $0)
         )
         (i32.const 16)
        )
       )
       (i32.mul
        (get_local $4)
        (i32.shr_s
         (i32.add
          (i32.shr_s
           (get_local $15)
           (i32.const 15)
          )
          (i32.const 1)
         )
         (i32.const 1)
        )
       )
      )
     )
     (set_local $9
      (i32.add
       (get_local $9)
       (i32.const 1)
      )
     )
     (set_local $0
      (i32.load
       (get_local $14)
      )
     )
     (br $while-in3)
    )
   )
  )
  (block $label$break$L21
   (if
    (i32.eq
     (get_local $12)
     (i32.const 2)
    )
    (if
     (i32.eqz
      (i32.load
       (get_local $11)
      )
     )
     (block
      (set_local $1
       (i32.add
        (i32.sub
         (tee_local $0
          (i32.load
           (tee_local $3
            (i32.add
             (get_local $1)
             (i32.const 4332)
            )
           )
          )
         )
         (get_local $16)
        )
        (i32.const -2)
       )
      )
      (loop $while-in6
       (br_if $label$break$L21
        (i32.ge_s
         (get_local $1)
         (i32.sub
          (get_local $0)
          (get_local $13)
         )
        )
       )
       (set_local $0
        (i32.shr_s
         (i32.shl
          (tee_local $11
           (i32.load
            (tee_local $9
             (i32.add
              (get_local $6)
              (i32.shl
               (get_local $1)
               (i32.const 2)
              )
             )
            )
           )
          )
          (i32.const 16)
         )
         (i32.const 16)
        )
       )
       (i32.store
        (get_local $9)
        (i32.add
         (i32.add
          (i32.mul
           (get_local $5)
           (get_local $0)
          )
          (i32.shr_s
           (i32.mul
            (get_local $7)
            (get_local $0)
           )
           (i32.const 16)
          )
         )
         (i32.mul
          (get_local $4)
          (i32.shr_s
           (i32.add
            (i32.shr_s
             (get_local $11)
             (i32.const 15)
            )
            (i32.const 1)
           )
           (i32.const 1)
          )
         )
        )
       )
       (set_local $1
        (i32.add
         (get_local $1)
         (i32.const 1)
        )
       )
       (set_local $0
        (i32.load
         (get_local $3)
        )
       )
       (br $while-in6)
      )
     )
    )
   )
  )
  (set_local $0
   (i32.const 0)
  )
  (loop $while-in8
   (if
    (i32.lt_s
     (get_local $0)
     (get_local $8)
    )
    (block
     (set_local $1
      (i32.shr_s
       (i32.shl
        (tee_local $6
         (i32.load
          (tee_local $3
           (i32.add
            (i32.add
             (get_local $2)
             (i32.mul
              (get_local $0)
              (i32.const 1300)
             )
            )
            (i32.const 1280)
           )
          )
         )
        )
        (i32.const 16)
       )
       (i32.const 16)
      )
     )
     (i32.store
      (get_local $3)
      (i32.add
       (i32.add
        (i32.mul
         (get_local $5)
         (get_local $1)
        )
        (i32.shr_s
         (i32.mul
          (get_local $7)
          (get_local $1)
         )
         (i32.const 16)
        )
       )
       (i32.mul
        (get_local $4)
        (i32.shr_s
         (i32.add
          (i32.shr_s
           (get_local $6)
           (i32.const 15)
          )
          (i32.const 1)
         )
         (i32.const 1)
        )
       )
      )
     )
     (set_local $1
      (i32.shr_s
       (i32.shl
        (tee_local $6
         (i32.load
          (tee_local $3
           (i32.add
            (i32.add
             (get_local $2)
             (i32.mul
              (get_local $0)
              (i32.const 1300)
             )
            )
            (i32.const 1284)
           )
          )
         )
        )
        (i32.const 16)
       )
       (i32.const 16)
      )
     )
     (i32.store
      (get_local $3)
      (i32.add
       (i32.add
        (i32.mul
         (get_local $5)
         (get_local $1)
        )
        (i32.shr_s
         (i32.mul
          (get_local $7)
          (get_local $1)
         )
         (i32.const 16)
        )
       )
       (i32.mul
        (get_local $4)
        (i32.shr_s
         (i32.add
          (i32.shr_s
           (get_local $6)
           (i32.const 15)
          )
          (i32.const 1)
         )
         (i32.const 1)
        )
       )
      )
     )
     (set_local $1
      (i32.const 0)
     )
     (loop $while-in10
      (if
       (i32.ne
        (get_local $1)
        (i32.const 16)
       )
       (block
        (set_local $3
         (i32.shr_s
          (i32.shl
           (tee_local $9
            (i32.load
             (tee_local $6
              (i32.add
               (i32.add
                (get_local $2)
                (i32.mul
                 (get_local $0)
                 (i32.const 1300)
                )
               )
               (i32.shl
                (get_local $1)
                (i32.const 2)
               )
              )
             )
            )
           )
           (i32.const 16)
          )
          (i32.const 16)
         )
        )
        (i32.store
         (get_local $6)
         (i32.add
          (i32.add
           (i32.mul
            (get_local $5)
            (get_local $3)
           )
           (i32.shr_s
            (i32.mul
             (get_local $7)
             (get_local $3)
            )
            (i32.const 16)
           )
          )
          (i32.mul
           (get_local $4)
           (i32.shr_s
            (i32.add
             (i32.shr_s
              (get_local $9)
              (i32.const 15)
             )
             (i32.const 1)
            )
            (i32.const 1)
           )
          )
         )
        )
        (set_local $1
         (i32.add
          (get_local $1)
          (i32.const 1)
         )
        )
        (br $while-in10)
       )
      )
     )
     (set_local $1
      (i32.const 0)
     )
     (loop $while-in12
      (if
       (i32.ne
        (get_local $1)
        (i32.const 24)
       )
       (block
        (set_local $3
         (i32.shr_s
          (i32.shl
           (tee_local $9
            (i32.load
             (tee_local $6
              (i32.add
               (i32.add
                (i32.add
                 (get_local $2)
                 (i32.mul
                  (get_local $0)
                  (i32.const 1300)
                 )
                )
                (i32.const 1184)
               )
               (i32.shl
                (get_local $1)
                (i32.const 2)
               )
              )
             )
            )
           )
           (i32.const 16)
          )
          (i32.const 16)
         )
        )
        (i32.store
         (get_local $6)
         (i32.add
          (i32.add
           (i32.mul
            (get_local $5)
            (get_local $3)
           )
           (i32.shr_s
            (i32.mul
             (get_local $7)
             (get_local $3)
            )
            (i32.const 16)
           )
          )
          (i32.mul
           (get_local $4)
           (i32.shr_s
            (i32.add
             (i32.shr_s
              (get_local $9)
              (i32.const 15)
             )
             (i32.const 1)
            )
            (i32.const 1)
           )
          )
         )
        )
        (set_local $1
         (i32.add
          (get_local $1)
          (i32.const 1)
         )
        )
        (br $while-in12)
       )
      )
     )
     (set_local $1
      (i32.const 0)
     )
     (loop $while-in14
      (if
       (i32.ne
        (get_local $1)
        (i32.const 40)
       )
       (block
        (set_local $3
         (i32.shr_s
          (i32.shl
           (tee_local $9
            (i32.load
             (tee_local $6
              (i32.add
               (i32.add
                (i32.add
                 (get_local $2)
                 (i32.mul
                  (get_local $0)
                  (i32.const 1300)
                 )
                )
                (i32.const 864)
               )
               (i32.shl
                (get_local $1)
                (i32.const 2)
               )
              )
             )
            )
           )
           (i32.const 16)
          )
          (i32.const 16)
         )
        )
        (i32.store
         (get_local $6)
         (i32.add
          (i32.add
           (i32.mul
            (get_local $5)
            (get_local $3)
           )
           (i32.shr_s
            (i32.mul
             (get_local $7)
             (get_local $3)
            )
            (i32.const 16)
           )
          )
          (i32.mul
           (get_local $4)
           (i32.shr_s
            (i32.add
             (i32.shr_s
              (get_local $9)
              (i32.const 15)
             )
             (i32.const 1)
            )
            (i32.const 1)
           )
          )
         )
        )
        (set_local $3
         (i32.shr_s
          (i32.shl
           (tee_local $9
            (i32.load
             (tee_local $6
              (i32.add
               (i32.add
                (i32.add
                 (get_local $2)
                 (i32.mul
                  (get_local $0)
                  (i32.const 1300)
                 )
                )
                (i32.const 1024)
               )
               (i32.shl
                (get_local $1)
                (i32.const 2)
               )
              )
             )
            )
           )
           (i32.const 16)
          )
          (i32.const 16)
         )
        )
        (i32.store
         (get_local $6)
         (i32.add
          (i32.add
           (i32.mul
            (get_local $5)
            (get_local $3)
           )
           (i32.shr_s
            (i32.mul
             (get_local $7)
             (get_local $3)
            )
            (i32.const 16)
           )
          )
          (i32.mul
           (get_local $4)
           (i32.shr_s
            (i32.add
             (i32.shr_s
              (get_local $9)
              (i32.const 15)
             )
             (i32.const 1)
            )
            (i32.const 1)
           )
          )
         )
        )
        (set_local $1
         (i32.add
          (get_local $1)
          (i32.const 1)
         )
        )
        (br $while-in14)
       )
      )
     )
     (set_local $0
      (i32.add
       (get_local $0)
       (i32.const 1)
      )
     )
     (br $while-in8)
    )
   )
  )
  (i32.store
   (get_local $10)
   (i32.load
    (get_local $17)
   )
  )
 )
 (func $_silk_noise_shape_quantizer_del_dec (; 221 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (param $8 i32) (param $9 i32) (param $10 i32) (param $11 i32) (param $12 i32) (param $13 i32) (param $14 i32) (param $15 i32) (param $16 i32) (param $17 i32) (param $18 i32) (param $19 i32) (param $20 i32) (param $21 i32) (param $22 i32) (param $23 i32) (param $24 i32) (param $25 i32)
  (local $26 i32)
  (local $27 i32)
  (local $28 i32)
  (local $29 i32)
  (local $30 i32)
  (local $31 i32)
  (local $32 i32)
  (local $33 i32)
  (local $34 i32)
  (local $35 i32)
  (local $36 i32)
  (local $37 i32)
  (local $38 i32)
  (local $39 i32)
  (local $40 i32)
  (local $41 i32)
  (local $42 i32)
  (local $43 i32)
  (local $44 i32)
  (local $45 i32)
  (local $46 i32)
  (local $47 i32)
  (local $48 i32)
  (local $49 i32)
  (local $50 i32)
  (local $51 i32)
  (local $52 i32)
  (local $53 i32)
  (local $54 i32)
  (local $55 i32)
  (local $56 i32)
  (local $57 i32)
  (local $58 i32)
  (local $59 i32)
  (local $60 i32)
  (local $61 i32)
  (local $62 i32)
  (local $63 i32)
  (local $64 i32)
  (local $65 i32)
  (local $66 i32)
  (local $67 i32)
  (local $68 i32)
  (local $69 i32)
  (set_local $52
   (get_global $STACKTOP)
  )
  (if
   (i32.le_s
    (get_local $23)
    (i32.const 0)
   )
   (call $_celt_fatal
    (i32.const 45482)
    (i32.const 45463)
    (i32.const 364)
   )
  )
  (set_local $26
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.and
     (i32.add
      (i32.mul
       (get_local $23)
       (i32.const 56)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (set_local $53
   (i32.shr_s
    (get_local $15)
    (i32.const 6)
   )
  )
  (set_local $54
   (i32.eq
    (get_local $2)
    (i32.const 2)
   )
  )
  (set_local $55
   (i32.add
    (get_local $9)
    (i32.const 2)
   )
  )
  (set_local $56
   (i32.add
    (get_local $9)
    (i32.const 4)
   )
  )
  (set_local $57
   (i32.add
    (get_local $9)
    (i32.const 6)
   )
  )
  (set_local $58
   (i32.add
    (get_local $9)
    (i32.const 8)
   )
  )
  (set_local $59
   (i32.gt_s
    (get_local $11)
    (i32.const 0)
   )
  )
  (set_local $43
   (i32.shr_s
    (i32.shl
     (get_local $12)
     (i32.const 16)
    )
    (i32.const 16)
   )
  )
  (set_local $44
   (i32.shr_s
    (get_local $12)
    (i32.const 16)
   )
  )
  (set_local $60
   (i32.eqz
    (i32.and
     (get_local $20)
     (i32.const 1)
    )
   )
  )
  (set_local $34
   (i32.shr_s
    (i32.shl
     (get_local $22)
     (i32.const 16)
    )
    (i32.const 16)
   )
  )
  (set_local $61
   (i32.shr_s
    (get_local $20)
    (i32.const 1)
   )
  )
  (set_local $63
   (i32.add
    (get_local $10)
    (i32.shl
     (tee_local $62
      (i32.add
       (get_local $20)
       (i32.const -1)
      )
     )
     (i32.const 1)
    )
   )
  )
  (set_local $45
   (i32.shr_s
    (i32.shl
     (get_local $13)
     (i32.const 16)
    )
    (i32.const 16)
   )
  )
  (set_local $46
   (i32.shr_s
    (i32.shl
     (get_local $14)
     (i32.const 16)
    )
    (i32.const 16)
   )
  )
  (set_local $47
   (i32.shr_s
    (get_local $14)
    (i32.const 16)
   )
  )
  (set_local $64
   (i32.gt_s
    (get_local $16)
    (i32.const 2048)
   )
  )
  (set_local $38
   (i32.add
    (tee_local $13
     (i32.div_s
      (get_local $16)
      (i32.const 2)
     )
    )
    (i32.const -512)
   )
  )
  (set_local $12
   (i32.mul
    (i32.shr_s
     (tee_local $2
      (i32.shl
       (get_local $17)
       (i32.const 16)
      )
     )
     (i32.const 16)
    )
    (tee_local $35
     (i32.shr_s
      (i32.shl
       (get_local $16)
       (i32.const 16)
      )
      (i32.const 16)
     )
    )
   )
  )
  (set_local $22
   (i32.mul
    (i32.shr_s
     (i32.shl
      (tee_local $48
       (i32.add
        (get_local $17)
        (i32.const 944)
       )
      )
      (i32.const 16)
     )
     (i32.const 16)
    )
    (get_local $35)
   )
  )
  (set_local $65
   (i32.add
    (get_local $17)
    (i32.const -944)
   )
  )
  (set_local $66
   (i32.mul
    (i32.shr_s
     (i32.sub
      (i32.const 61865984)
      (get_local $2)
     )
     (i32.const 16)
    )
    (get_local $35)
   )
  )
  (set_local $67
   (i32.sub
    (i32.const 512)
    (get_local $13)
   )
  )
  (set_local $49
   (i32.add
    (get_local $26)
    (i32.const 4)
   )
  )
  (set_local $68
   (i32.add
    (get_local $26)
    (i32.const 32)
   )
  )
  (set_local $69
   (i32.lt_s
    (get_local $19)
    (i32.const 1)
   )
  )
  (set_local $15
   (i32.add
    (i32.add
     (get_local $0)
     (i32.shl
      (i32.sub
       (i32.load
        (tee_local $39
         (i32.add
          (get_local $0)
          (i32.const 4336)
         )
        )
       )
       (get_local $11)
      )
      (i32.const 2)
     )
    )
    (i32.const 1284)
   )
  )
  (set_local $16
   (i32.add
    (get_local $6)
    (i32.shl
     (i32.add
      (i32.sub
       (i32.load
        (tee_local $40
         (i32.add
          (get_local $0)
          (i32.const 4332)
         )
        )
       )
       (get_local $11)
      )
      (i32.const 2)
     )
     (i32.const 2)
    )
   )
  )
  (block $__rjto$2
   (block $__rjti$2
    (loop $label$continue$L4
     (if
      (i32.lt_s
       (get_local $30)
       (get_local $18)
      )
      (block
       (if
        (get_local $54)
        (block
         (set_local $37
          (i32.shl
           (i32.add
            (i32.add
             (i32.add
              (i32.add
               (i32.add
                (i32.add
                 (i32.mul
                  (i32.shr_s
                   (tee_local $11
                    (i32.load
                     (get_local $16)
                    )
                   )
                   (i32.const 16)
                  )
                  (tee_local $2
                   (i32.load16_s
                    (get_local $9)
                   )
                  )
                 )
                 (i32.shr_s
                  (i32.mul
                   (i32.and
                    (get_local $11)
                    (i32.const 65535)
                   )
                   (get_local $2)
                  )
                  (i32.const 16)
                 )
                )
                (i32.const 2)
               )
               (i32.add
                (i32.mul
                 (i32.shr_s
                  (tee_local $11
                   (i32.load
                    (i32.add
                     (get_local $16)
                     (i32.const -4)
                    )
                   )
                  )
                  (i32.const 16)
                 )
                 (tee_local $2
                  (i32.load16_s
                   (get_local $55)
                  )
                 )
                )
                (i32.shr_s
                 (i32.mul
                  (i32.and
                   (get_local $11)
                   (i32.const 65535)
                  )
                  (get_local $2)
                 )
                 (i32.const 16)
                )
               )
              )
              (i32.add
               (i32.mul
                (i32.shr_s
                 (tee_local $11
                  (i32.load
                   (i32.add
                    (get_local $16)
                    (i32.const -8)
                   )
                  )
                 )
                 (i32.const 16)
                )
                (tee_local $2
                 (i32.load16_s
                  (get_local $56)
                 )
                )
               )
               (i32.shr_s
                (i32.mul
                 (i32.and
                  (get_local $11)
                  (i32.const 65535)
                 )
                 (get_local $2)
                )
                (i32.const 16)
               )
              )
             )
             (i32.add
              (i32.mul
               (i32.shr_s
                (tee_local $11
                 (i32.load
                  (i32.add
                   (get_local $16)
                   (i32.const -12)
                  )
                 )
                )
                (i32.const 16)
               )
               (tee_local $2
                (i32.load16_s
                 (get_local $57)
                )
               )
              )
              (i32.shr_s
               (i32.mul
                (i32.and
                 (get_local $11)
                 (i32.const 65535)
                )
                (get_local $2)
               )
               (i32.const 16)
              )
             )
            )
            (i32.add
             (i32.mul
              (i32.shr_s
               (tee_local $11
                (i32.load
                 (i32.add
                  (get_local $16)
                  (i32.const -16)
                 )
                )
               )
               (i32.const 16)
              )
              (tee_local $2
               (i32.load16_s
                (get_local $58)
               )
              )
             )
             (i32.shr_s
              (i32.mul
               (i32.and
                (get_local $11)
                (i32.const 65535)
               )
               (get_local $2)
              )
              (i32.const 16)
             )
            )
           )
           (i32.const 1)
          )
         )
         (set_local $16
          (i32.add
           (get_local $16)
           (i32.const 4)
          )
         )
        )
        (set_local $37
         (i32.const 0)
        )
       )
       (if
        (get_local $59)
        (block
         (set_local $50
          (i32.sub
           (get_local $37)
           (i32.shl
            (i32.add
             (i32.add
              (i32.add
               (i32.mul
                (i32.shr_s
                 (tee_local $2
                  (i32.add
                   (i32.load
                    (get_local $15)
                   )
                   (i32.load
                    (i32.add
                     (get_local $15)
                     (i32.const -8)
                    )
                   )
                  )
                 )
                 (i32.const 16)
                )
                (get_local $43)
               )
               (i32.shr_s
                (i32.mul
                 (i32.and
                  (get_local $2)
                  (i32.const 65535)
                 )
                 (get_local $43)
                )
                (i32.const 16)
               )
              )
              (i32.mul
               (i32.shr_s
                (tee_local $2
                 (i32.load
                  (i32.add
                   (get_local $15)
                   (i32.const -4)
                  )
                 )
                )
                (i32.const 16)
               )
               (get_local $44)
              )
             )
             (i32.shr_s
              (i32.mul
               (i32.and
                (get_local $2)
                (i32.const 65535)
               )
               (get_local $44)
              )
              (i32.const 16)
             )
            )
            (i32.const 2)
           )
          )
         )
         (set_local $15
          (i32.add
           (get_local $15)
           (i32.const 4)
          )
         )
        )
        (set_local $50
         (i32.const 0)
        )
       )
       (set_local $41
        (i32.add
         (get_local $30)
         (i32.const 15)
        )
       )
       (set_local $36
        (i32.add
         (get_local $3)
         (i32.shl
          (get_local $30)
          (i32.const 2)
         )
        )
       )
       (set_local $27
        (i32.const 0)
       )
       (loop $while-in
        (if
         (i32.lt_s
          (get_local $27)
          (get_local $23)
         )
         (block
          (i32.store
           (tee_local $32
            (i32.add
             (i32.add
              (get_local $1)
              (i32.mul
               (get_local $27)
               (i32.const 1300)
              )
             )
             (i32.const 1288)
            )
           )
           (i32.add
            (i32.mul
             (i32.load
              (get_local $32)
             )
             (i32.const 196314165)
            )
            (i32.const 907633515)
           )
          )
          (set_local $42
           (i32.shl
            (call $_silk_noise_shape_quantizer_short_prediction_c
             (i32.add
              (i32.add
               (get_local $1)
               (i32.mul
                (get_local $27)
                (i32.const 1300)
               )
              )
              (i32.shl
               (get_local $41)
               (i32.const 2)
              )
             )
             (get_local $8)
             (get_local $21)
            )
            (i32.const 4)
           )
          )
          (br_if $__rjti$2
           (i32.eqz
            (get_local $60)
           )
          )
          (set_local $11
           (i32.sub
            (i32.load
             (i32.add
              (i32.add
               (get_local $1)
               (i32.mul
                (get_local $27)
                (i32.const 1300)
               )
              )
              (i32.const 1188)
             )
            )
            (tee_local $14
             (i32.add
              (i32.load
               (i32.add
                (i32.add
                 (get_local $1)
                 (i32.mul
                  (get_local $27)
                  (i32.const 1300)
                 )
                )
                (i32.const 1284)
               )
              )
              (i32.add
               (i32.mul
                (i32.shr_s
                 (tee_local $13
                  (i32.load
                   (tee_local $2
                    (i32.add
                     (i32.add
                      (get_local $1)
                      (i32.mul
                       (get_local $27)
                       (i32.const 1300)
                      )
                     )
                     (i32.const 1184)
                    )
                   )
                  )
                 )
                 (i32.const 16)
                )
                (get_local $34)
               )
               (i32.shr_s
                (i32.mul
                 (i32.and
                  (get_local $13)
                  (i32.const 65535)
                 )
                 (get_local $34)
                )
                (i32.const 16)
               )
              )
             )
            )
           )
          )
          (i32.store
           (get_local $2)
           (get_local $14)
          )
          (set_local $28
           (i32.add
            (get_local $61)
            (i32.add
             (i32.mul
              (i32.shr_s
               (get_local $14)
               (i32.const 16)
              )
              (tee_local $2
               (i32.load16_s
                (get_local $10)
               )
              )
             )
             (i32.shr_s
              (i32.mul
               (i32.and
                (get_local $14)
                (i32.const 65535)
               )
               (get_local $2)
              )
              (i32.const 16)
             )
            )
           )
          )
          (set_local $31
           (i32.add
            (get_local $13)
            (i32.add
             (i32.mul
              (i32.shr_s
               (get_local $11)
               (i32.const 16)
              )
              (get_local $34)
             )
             (i32.shr_s
              (i32.mul
               (i32.and
                (get_local $11)
                (i32.const 65535)
               )
               (get_local $34)
              )
              (i32.const 16)
             )
            )
           )
          )
          (set_local $33
           (i32.const 2)
          )
          (loop $while-in1
           (if
            (i32.lt_s
             (get_local $33)
             (get_local $20)
            )
            (block
             (set_local $29
              (i32.add
               (i32.load
                (tee_local $11
                 (i32.add
                  (i32.add
                   (i32.add
                    (get_local $1)
                    (i32.mul
                     (get_local $27)
                     (i32.const 1300)
                    )
                   )
                   (i32.const 1184)
                  )
                  (i32.shl
                   (tee_local $19
                    (i32.add
                     (get_local $33)
                     (i32.const -1)
                    )
                   )
                   (i32.const 2)
                  )
                 )
                )
               )
               (i32.add
                (i32.mul
                 (i32.shr_s
                  (tee_local $2
                   (i32.sub
                    (tee_local $13
                     (i32.load
                      (tee_local $14
                       (i32.add
                        (i32.add
                         (i32.add
                          (get_local $1)
                          (i32.mul
                           (get_local $27)
                           (i32.const 1300)
                          )
                         )
                         (i32.const 1184)
                        )
                        (i32.shl
                         (get_local $33)
                         (i32.const 2)
                        )
                       )
                      )
                     )
                    )
                    (get_local $31)
                   )
                  )
                  (i32.const 16)
                 )
                 (get_local $34)
                )
                (i32.shr_s
                 (i32.mul
                  (i32.and
                   (get_local $2)
                   (i32.const 65535)
                  )
                  (get_local $34)
                 )
                 (i32.const 16)
                )
               )
              )
             )
             (i32.store
              (get_local $11)
              (get_local $31)
             )
             (set_local $2
              (i32.load16_s
               (i32.add
                (get_local $10)
                (i32.shl
                 (get_local $19)
                 (i32.const 1)
                )
               )
              )
             )
             (set_local $11
              (i32.load
               (i32.add
                (i32.add
                 (i32.add
                  (get_local $1)
                  (i32.mul
                   (get_local $27)
                   (i32.const 1300)
                  )
                 )
                 (i32.const 1184)
                )
                (i32.shl
                 (i32.or
                  (get_local $33)
                  (i32.const 1)
                 )
                 (i32.const 2)
                )
               )
              )
             )
             (i32.store
              (get_local $14)
              (get_local $29)
             )
             (set_local $28
              (i32.add
               (i32.add
                (get_local $28)
                (i32.add
                 (i32.mul
                  (i32.shr_s
                   (get_local $31)
                   (i32.const 16)
                  )
                  (get_local $2)
                 )
                 (i32.shr_s
                  (i32.mul
                   (i32.and
                    (get_local $31)
                    (i32.const 65535)
                   )
                   (get_local $2)
                  )
                  (i32.const 16)
                 )
                )
               )
               (i32.add
                (i32.mul
                 (i32.shr_s
                  (get_local $29)
                  (i32.const 16)
                 )
                 (tee_local $2
                  (i32.load16_s
                   (i32.add
                    (get_local $10)
                    (i32.shl
                     (get_local $33)
                     (i32.const 1)
                    )
                   )
                  )
                 )
                )
                (i32.shr_s
                 (i32.mul
                  (i32.and
                   (get_local $29)
                   (i32.const 65535)
                  )
                  (get_local $2)
                 )
                 (i32.const 16)
                )
               )
              )
             )
             (set_local $31
              (i32.add
               (get_local $13)
               (i32.add
                (i32.mul
                 (i32.shr_s
                  (tee_local $2
                   (i32.sub
                    (get_local $11)
                    (get_local $29)
                   )
                  )
                  (i32.const 16)
                 )
                 (get_local $34)
                )
                (i32.shr_s
                 (i32.mul
                  (i32.and
                   (get_local $2)
                   (i32.const 65535)
                  )
                  (get_local $34)
                 )
                 (i32.const 16)
                )
               )
              )
             )
             (set_local $33
              (i32.add
               (get_local $33)
               (i32.const 2)
              )
             )
             (br $while-in1)
            )
           )
          )
          (i32.store
           (i32.add
            (i32.add
             (i32.add
              (get_local $1)
              (i32.mul
               (get_local $27)
               (i32.const 1300)
              )
             )
             (i32.const 1184)
            )
            (i32.shl
             (get_local $62)
             (i32.const 2)
            )
           )
           (get_local $31)
          )
          (set_local $2
           (i32.sub
            (i32.const 0)
            (tee_local $11
             (i32.sub
              (tee_local $29
               (i32.load
                (get_local $36)
               )
              )
              (i32.shr_s
               (i32.add
                (i32.shr_s
                 (i32.sub
                  (i32.add
                   (get_local $50)
                   (get_local $42)
                  )
                  (i32.add
                   (tee_local $51
                    (i32.shl
                     (i32.add
                      (i32.shl
                       (i32.add
                        (get_local $28)
                        (i32.add
                         (i32.mul
                          (i32.shr_s
                           (get_local $31)
                           (i32.const 16)
                          )
                          (tee_local $2
                           (i32.load16_s
                            (get_local $63)
                           )
                          )
                         )
                         (i32.shr_s
                          (i32.mul
                           (i32.and
                            (get_local $31)
                            (i32.const 65535)
                           )
                           (get_local $2)
                          )
                          (i32.const 16)
                         )
                        )
                       )
                       (i32.const 1)
                      )
                      (i32.add
                       (i32.mul
                        (tee_local $13
                         (i32.shr_s
                          (tee_local $2
                           (i32.load
                            (i32.add
                             (i32.add
                              (get_local $1)
                              (i32.mul
                               (get_local $27)
                               (i32.const 1300)
                              )
                             )
                             (i32.const 1280)
                            )
                           )
                          )
                          (i32.const 16)
                         )
                        )
                        (get_local $45)
                       )
                       (i32.shr_s
                        (i32.mul
                         (tee_local $11
                          (i32.and
                           (get_local $2)
                           (i32.const 65535)
                          )
                         )
                         (get_local $45)
                        )
                        (i32.const 16)
                       )
                      )
                     )
                     (i32.const 2)
                    )
                   )
                   (tee_local $31
                    (i32.shl
                     (i32.add
                      (i32.add
                       (i32.add
                        (i32.mul
                         (i32.shr_s
                          (tee_local $2
                           (i32.load
                            (i32.add
                             (i32.add
                              (i32.add
                               (get_local $1)
                               (i32.mul
                                (get_local $27)
                                (i32.const 1300)
                               )
                              )
                              (i32.const 1024)
                             )
                             (i32.shl
                              (i32.load
                               (get_local $24)
                              )
                              (i32.const 2)
                             )
                            )
                           )
                          )
                          (i32.const 16)
                         )
                         (get_local $46)
                        )
                        (i32.shr_s
                         (i32.mul
                          (i32.and
                           (get_local $2)
                           (i32.const 65535)
                          )
                          (get_local $46)
                         )
                         (i32.const 16)
                        )
                       )
                       (i32.mul
                        (get_local $13)
                        (get_local $47)
                       )
                      )
                      (i32.shr_s
                       (i32.mul
                        (get_local $11)
                        (get_local $47)
                       )
                       (i32.const 16)
                      )
                     )
                     (i32.const 2)
                    )
                   )
                  )
                 )
                 (i32.const 3)
                )
                (i32.const 1)
               )
               (i32.const 1)
              )
             )
            )
           )
          )
          (set_local $2
           (i32.sub
            (tee_local $19
             (if (result i32)
              (i32.lt_s
               (if (result i32)
                (i32.gt_s
                 (if (result i32)
                  (tee_local $33
                   (i32.lt_s
                    (i32.load
                     (get_local $32)
                    )
                    (i32.const 0)
                   )
                  )
                  (get_local $2)
                  (tee_local $2
                   (get_local $11)
                  )
                 )
                 (i32.const -31744)
                )
                (get_local $2)
                (tee_local $2
                 (i32.const -31744)
                )
               )
               (i32.const 30720)
              )
              (get_local $2)
              (i32.const 30720)
             )
            )
            (get_local $17)
           )
          )
          (block $__rjto$1
           (block $__rjti$1
            (block $__rjti$0
             (br_if $__rjti$0
              (i32.eqz
               (get_local $64)
              )
             )
             (if
              (i32.gt_s
               (get_local $2)
               (get_local $38)
              )
              (block
               (set_local $2
                (i32.sub
                 (get_local $2)
                 (get_local $38)
                )
               )
               (br $__rjti$0)
              )
             )
             (set_local $2
              (if (result i32)
               (i32.lt_s
                (get_local $2)
                (get_local $67)
               )
               (block
                (set_local $2
                 (i32.add
                  (get_local $2)
                  (get_local $38)
                 )
                )
                (br $__rjti$0)
               )
               (if (result i32)
                (i32.lt_s
                 (get_local $2)
                 (i32.const 0)
                )
                (br $__rjti$1)
                (block (result i32)
                 (set_local $11
                  (get_local $48)
                 )
                 (set_local $14
                  (get_local $22)
                 )
                 (set_local $13
                  (get_local $12)
                 )
                 (get_local $17)
                )
               )
              )
             )
             (br $__rjto$1)
            )
            (if
             (i32.gt_s
              (get_local $2)
              (i32.const 1023)
             )
             (block
              (set_local $11
               (tee_local $13
                (i32.add
                 (tee_local $2
                  (i32.add
                   (i32.add
                    (i32.and
                     (get_local $2)
                     (i32.const -1024)
                    )
                    (i32.const -80)
                   )
                   (get_local $17)
                  )
                 )
                 (i32.const 1024)
                )
               )
              )
              (set_local $14
               (i32.mul
                (i32.shr_s
                 (i32.shl
                  (get_local $13)
                  (i32.const 16)
                 )
                 (i32.const 16)
                )
                (get_local $35)
               )
              )
              (set_local $13
               (i32.mul
                (i32.shr_s
                 (i32.shl
                  (get_local $2)
                  (i32.const 16)
                 )
                 (i32.const 16)
                )
                (get_local $35)
               )
              )
              (br $__rjto$1)
             )
            )
            (block $switch-default
             (block $switch-case3
              (block $switch-case
               (br_table $switch-case3 $switch-case $switch-default
                (i32.sub
                 (i32.shr_s
                  (get_local $2)
                  (i32.const 10)
                 )
                 (i32.const -1)
                )
               )
              )
              (set_local $11
               (get_local $48)
              )
              (set_local $2
               (get_local $17)
              )
              (set_local $14
               (get_local $22)
              )
              (set_local $13
               (get_local $12)
              )
              (br $__rjto$1)
             )
             (br $__rjti$1)
            )
            (set_local $13
             (i32.shl
              (tee_local $2
               (i32.add
                (i32.or
                 (i32.and
                  (get_local $2)
                  (i32.const -1024)
                 )
                 (i32.const 80)
                )
                (get_local $17)
               )
              )
              (i32.const 16)
             )
            )
            (set_local $11
             (i32.add
              (get_local $2)
              (i32.const 1024)
             )
            )
            (set_local $14
             (i32.mul
              (i32.shr_s
               (i32.sub
                (i32.const -67108864)
                (get_local $13)
               )
               (i32.const 16)
              )
              (get_local $35)
             )
            )
            (set_local $13
             (i32.mul
              (i32.shr_s
               (i32.sub
                (i32.const 0)
                (get_local $13)
               )
               (i32.const 16)
              )
              (get_local $35)
             )
            )
            (br $__rjto$1)
           )
           (set_local $11
            (get_local $17)
           )
           (set_local $2
            (get_local $65)
           )
           (set_local $14
            (get_local $12)
           )
           (set_local $13
            (get_local $66)
           )
          )
          (i32.store offset=4
           (i32.add
            (get_local $26)
            (i32.mul
             (get_local $27)
             (i32.const 56)
            )
           )
           (i32.add
            (tee_local $32
             (i32.load
              (i32.add
               (i32.add
                (get_local $1)
                (i32.mul
                 (get_local $27)
                 (i32.const 1300)
                )
               )
               (i32.const 1296)
              )
             )
            )
            (if (result i32)
             (tee_local $14
              (i32.lt_s
               (tee_local $28
                (i32.shr_s
                 (i32.add
                  (get_local $13)
                  (i32.mul
                   (tee_local $13
                    (i32.shr_s
                     (i32.shl
                      (i32.sub
                       (get_local $19)
                       (get_local $2)
                      )
                      (i32.const 16)
                     )
                     (i32.const 16)
                    )
                   )
                   (get_local $13)
                  )
                 )
                 (i32.const 10)
                )
               )
               (tee_local $13
                (i32.shr_s
                 (i32.add
                  (get_local $14)
                  (i32.mul
                   (tee_local $13
                    (i32.shr_s
                     (i32.shl
                      (i32.sub
                       (get_local $19)
                       (get_local $11)
                      )
                      (i32.const 16)
                     )
                     (i32.const 16)
                    )
                   )
                   (get_local $13)
                  )
                 )
                 (i32.const 10)
                )
               )
              )
             )
             (get_local $28)
             (get_local $13)
            )
           )
          )
          (i32.store offset=32
           (i32.add
            (get_local $26)
            (i32.mul
             (get_local $27)
             (i32.const 56)
            )
           )
           (i32.add
            (get_local $32)
            (if (result i32)
             (get_local $14)
             (get_local $13)
             (get_local $28)
            )
           )
          )
          (i32.store
           (i32.add
            (get_local $26)
            (i32.mul
             (get_local $27)
             (i32.const 56)
            )
           )
           (tee_local $13
            (if (result i32)
             (get_local $14)
             (get_local $2)
             (get_local $11)
            )
           )
          )
          (i32.store offset=28
           (i32.add
            (get_local $26)
            (i32.mul
             (get_local $27)
             (i32.const 56)
            )
           )
           (if (result i32)
            (get_local $14)
            (get_local $11)
            (tee_local $11
             (get_local $2)
            )
           )
          )
          (set_local $2
           (i32.sub
            (i32.const 0)
            (tee_local $13
             (i32.shl
              (get_local $13)
              (i32.const 4)
             )
            )
           )
          )
          (i32.store offset=16
           (i32.add
            (get_local $26)
            (i32.mul
             (get_local $27)
             (i32.const 56)
            )
           )
           (tee_local $2
            (i32.sub
             (tee_local $13
              (i32.add
               (tee_local $19
                (i32.add
                 (if (result i32)
                  (get_local $33)
                  (get_local $2)
                  (get_local $13)
                 )
                 (get_local $37)
                )
               )
               (get_local $42)
              )
             )
             (tee_local $14
              (i32.shl
               (get_local $29)
               (i32.const 4)
              )
             )
            )
           )
          )
          (i32.store offset=20
           (i32.add
            (get_local $26)
            (i32.mul
             (get_local $27)
             (i32.const 56)
            )
           )
           (i32.sub
            (tee_local $2
             (i32.sub
              (get_local $2)
              (get_local $51)
             )
            )
            (get_local $31)
           )
          )
          (i32.store offset=12
           (i32.add
            (get_local $26)
            (i32.mul
             (get_local $27)
             (i32.const 56)
            )
           )
           (get_local $2)
          )
          (i32.store offset=24
           (i32.add
            (get_local $26)
            (i32.mul
             (get_local $27)
             (i32.const 56)
            )
           )
           (get_local $19)
          )
          (i32.store offset=8
           (i32.add
            (get_local $26)
            (i32.mul
             (get_local $27)
             (i32.const 56)
            )
           )
           (get_local $13)
          )
          (set_local $2
           (i32.sub
            (i32.const 0)
            (tee_local $11
             (i32.shl
              (get_local $11)
              (i32.const 4)
             )
            )
           )
          )
          (i32.store offset=44
           (i32.add
            (get_local $26)
            (i32.mul
             (get_local $27)
             (i32.const 56)
            )
           )
           (tee_local $2
            (i32.sub
             (tee_local $11
              (i32.add
               (tee_local $13
                (i32.add
                 (if (result i32)
                  (get_local $33)
                  (get_local $2)
                  (get_local $11)
                 )
                 (get_local $37)
                )
               )
               (get_local $42)
              )
             )
             (get_local $14)
            )
           )
          )
          (i32.store offset=48
           (i32.add
            (get_local $26)
            (i32.mul
             (get_local $27)
             (i32.const 56)
            )
           )
           (i32.sub
            (tee_local $2
             (i32.sub
              (get_local $2)
              (get_local $51)
             )
            )
            (get_local $31)
           )
          )
          (i32.store offset=40
           (i32.add
            (get_local $26)
            (i32.mul
             (get_local $27)
             (i32.const 56)
            )
           )
           (get_local $2)
          )
          (i32.store offset=52
           (i32.add
            (get_local $26)
            (i32.mul
             (get_local $27)
             (i32.const 56)
            )
           )
           (get_local $13)
          )
          (i32.store offset=36
           (i32.add
            (get_local $26)
            (i32.mul
             (get_local $27)
             (i32.const 56)
            )
           )
           (get_local $11)
          )
          (set_local $27
           (i32.add
            (get_local $27)
            (i32.const 1)
           )
          )
          (br $while-in)
         )
        )
       )
       (set_local $11
        (i32.lt_s
         (tee_local $13
          (i32.rem_s
           (i32.add
            (i32.load
             (get_local $24)
            )
            (i32.const -1)
           )
           (i32.const 40)
          )
         )
         (i32.const 0)
        )
       )
       (set_local $2
        (i32.add
         (get_local $13)
         (i32.const 40)
        )
       )
       (i32.store
        (get_local $24)
        (if (result i32)
         (get_local $11)
         (get_local $2)
         (get_local $13)
        )
       )
       (set_local $29
        (i32.add
         (if (result i32)
          (get_local $11)
          (get_local $2)
          (get_local $13)
         )
         (get_local $25)
        )
       )
       (set_local $13
        (i32.load
         (get_local $49)
        )
       )
       (set_local $14
        (i32.const 0)
       )
       (set_local $19
        (i32.const 1)
       )
       (loop $while-in5
        (if
         (i32.ne
          (get_local $19)
          (get_local $23)
         )
         (block
          (set_local $2
           (if (result i32)
            (tee_local $32
             (i32.lt_s
              (tee_local $11
               (i32.load offset=4
                (i32.add
                 (get_local $26)
                 (i32.mul
                  (get_local $19)
                  (i32.const 56)
                 )
                )
               )
              )
              (get_local $13)
             )
            )
            (get_local $19)
            (get_local $14)
           )
          )
          (if
           (get_local $32)
           (set_local $13
            (get_local $11)
           )
          )
          (set_local $14
           (get_local $2)
          )
          (set_local $19
           (i32.add
            (get_local $19)
            (i32.const 1)
           )
          )
          (br $while-in5)
         )
        )
       )
       (set_local $11
        (i32.load
         (i32.add
          (i32.add
           (i32.add
            (get_local $1)
            (i32.mul
             (get_local $14)
             (i32.const 1300)
            )
           )
           (i32.const 384)
          )
          (i32.shl
           (tee_local $28
            (i32.rem_s
             (get_local $29)
             (i32.const 40)
            )
           )
           (i32.const 2)
          )
         )
        )
       )
       (set_local $13
        (i32.const 0)
       )
       (loop $while-in7
        (if
         (i32.ne
          (get_local $13)
          (get_local $23)
         )
         (block
          (if
           (i32.ne
            (i32.load
             (i32.add
              (i32.add
               (i32.add
                (get_local $1)
                (i32.mul
                 (get_local $13)
                 (i32.const 1300)
                )
               )
               (i32.const 384)
              )
              (i32.shl
               (get_local $28)
               (i32.const 2)
              )
             )
            )
            (get_local $11)
           )
           (block
            (i32.store
             (tee_local $2
              (i32.add
               (i32.add
                (get_local $26)
                (i32.mul
                 (get_local $13)
                 (i32.const 56)
                )
               )
               (i32.const 4)
              )
             )
             (i32.add
              (i32.load
               (get_local $2)
              )
              (i32.const 134217727)
             )
            )
            (i32.store
             (tee_local $2
              (i32.add
               (i32.add
                (get_local $26)
                (i32.mul
                 (get_local $13)
                 (i32.const 56)
                )
               )
               (i32.const 32)
              )
             )
             (i32.add
              (i32.load
               (get_local $2)
              )
              (i32.const 134217727)
             )
            )
           )
          )
          (set_local $13
           (i32.add
            (get_local $13)
            (i32.const 1)
           )
          )
          (br $while-in7)
         )
        )
       )
       (set_local $36
        (i32.load
         (get_local $49)
        )
       )
       (set_local $29
        (i32.const 0)
       )
       (set_local $32
        (i32.const 0)
       )
       (set_local $13
        (i32.load
         (get_local $68)
        )
       )
       (set_local $11
        (i32.const 1)
       )
       (loop $while-in9
        (if
         (i32.ne
          (get_local $11)
          (get_local $23)
         )
         (block
          (set_local $2
           (if (result i32)
            (tee_local $41
             (i32.gt_s
              (tee_local $19
               (i32.load offset=4
                (i32.add
                 (get_local $26)
                 (i32.mul
                  (get_local $11)
                  (i32.const 56)
                 )
                )
               )
              )
              (get_local $36)
             )
            )
            (get_local $11)
            (get_local $29)
           )
          )
          (if
           (get_local $41)
           (set_local $36
            (get_local $19)
           )
          )
          (set_local $29
           (get_local $2)
          )
          (if
           (tee_local $19
            (i32.lt_s
             (tee_local $2
              (i32.load offset=32
               (i32.add
                (get_local $26)
                (i32.mul
                 (get_local $11)
                 (i32.const 56)
                )
               )
              )
             )
             (get_local $13)
            )
           )
           (set_local $32
            (get_local $11)
           )
          )
          (if
           (get_local $19)
           (set_local $13
            (get_local $2)
           )
          )
          (set_local $11
           (i32.add
            (get_local $11)
            (i32.const 1)
           )
          )
          (br $while-in9)
         )
        )
       )
       (if
        (i32.lt_s
         (get_local $13)
         (get_local $36)
        )
        (block
         (drop
          (call $_memcpy
           (i32.add
            (i32.add
             (get_local $1)
             (i32.mul
              (get_local $29)
              (i32.const 1300)
             )
            )
            (i32.shl
             (get_local $30)
             (i32.const 2)
            )
           )
           (i32.add
            (i32.add
             (get_local $1)
             (i32.mul
              (get_local $32)
              (i32.const 1300)
             )
            )
            (i32.shl
             (get_local $30)
             (i32.const 2)
            )
           )
           (i32.sub
            (i32.const 1300)
            (i32.shl
             (get_local $30)
             (i32.const 2)
            )
           )
          )
         )
         (i64.store align=4
          (tee_local $11
           (i32.add
            (get_local $26)
            (i32.mul
             (get_local $29)
             (i32.const 56)
            )
           )
          )
          (i64.load align=4
           (tee_local $2
            (i32.add
             (i32.add
              (get_local $26)
              (i32.mul
               (get_local $32)
               (i32.const 56)
              )
             )
             (i32.const 28)
            )
           )
          )
         )
         (i64.store offset=8 align=4
          (get_local $11)
          (i64.load offset=8 align=4
           (get_local $2)
          )
         )
         (i64.store offset=16 align=4
          (get_local $11)
          (i64.load offset=16 align=4
           (get_local $2)
          )
         )
         (i32.store offset=24
          (get_local $11)
          (i32.load offset=24
           (get_local $2)
          )
         )
        )
       )
       (if
        (i32.eqz
         (i32.and
          (get_local $69)
          (i32.lt_s
           (get_local $30)
           (get_local $25)
          )
         )
        )
        (block
         (i32.store8
          (i32.add
           (get_local $4)
           (tee_local $13
            (i32.sub
             (get_local $30)
             (get_local $25)
            )
           )
          )
          (i32.shr_u
           (i32.add
            (i32.shr_u
             (i32.load
              (i32.add
               (i32.add
                (i32.add
                 (get_local $1)
                 (i32.mul
                  (get_local $14)
                  (i32.const 1300)
                 )
                )
                (i32.const 544)
               )
               (i32.shl
                (get_local $28)
                (i32.const 2)
               )
              )
             )
             (i32.const 9)
            )
            (i32.const 1)
           )
           (i32.const 1)
          )
         )
         (i32.store16
          (i32.add
           (get_local $5)
           (i32.shl
            (get_local $13)
            (i32.const 1)
           )
          )
          (tee_local $2
           (if (result i32)
            (i32.gt_s
             (tee_local $2
              (i32.add
               (i32.add
                (i32.mul
                 (i32.shr_s
                  (tee_local $19
                   (i32.load
                    (i32.add
                     (i32.add
                      (i32.add
                       (get_local $1)
                       (i32.mul
                        (get_local $14)
                        (i32.const 1300)
                       )
                      )
                      (i32.const 704)
                     )
                     (i32.shl
                      (get_local $28)
                      (i32.const 2)
                     )
                    )
                   )
                  )
                  (i32.const 16)
                 )
                 (tee_local $2
                  (i32.shr_s
                   (i32.shl
                    (tee_local $11
                     (i32.load
                      (i32.add
                       (get_local $7)
                       (i32.shl
                        (get_local $28)
                        (i32.const 2)
                       )
                      )
                     )
                    )
                    (i32.const 16)
                   )
                   (i32.const 16)
                  )
                 )
                )
                (i32.shr_s
                 (i32.mul
                  (i32.and
                   (get_local $19)
                   (i32.const 65535)
                  )
                  (get_local $2)
                 )
                 (i32.const 16)
                )
               )
               (i32.mul
                (get_local $19)
                (i32.shr_s
                 (i32.add
                  (i32.shr_s
                   (get_local $11)
                   (i32.const 15)
                  )
                  (i32.const 1)
                 )
                 (i32.const 1)
                )
               )
              )
             )
             (i32.const 8388479)
            )
            (i32.const 32767)
            (if (result i32)
             (i32.lt_s
              (get_local $2)
              (i32.const -8388736)
             )
             (i32.const -32768)
             (i32.shr_s
              (i32.add
               (i32.shr_s
                (get_local $2)
                (i32.const 7)
               )
               (i32.const 1)
              )
              (i32.const 1)
             )
            )
           )
          )
         )
         (i32.store
          (i32.add
           (i32.add
            (get_local $0)
            (i32.const 1280)
           )
           (i32.shl
            (i32.sub
             (i32.load
              (get_local $39)
             )
             (get_local $25)
            )
            (i32.const 2)
           )
          )
          (i32.load
           (i32.add
            (i32.add
             (i32.add
              (get_local $1)
              (i32.mul
               (get_local $14)
               (i32.const 1300)
              )
             )
             (i32.const 1024)
            )
            (i32.shl
             (get_local $28)
             (i32.const 2)
            )
           )
          )
         )
         (i32.store
          (i32.add
           (get_local $6)
           (i32.shl
            (i32.sub
             (i32.load
              (get_local $40)
             )
             (get_local $25)
            )
            (i32.const 2)
           )
          )
          (i32.load
           (i32.add
            (i32.add
             (i32.add
              (get_local $1)
              (i32.mul
               (get_local $14)
               (i32.const 1300)
              )
             )
             (i32.const 864)
            )
            (i32.shl
             (get_local $28)
             (i32.const 2)
            )
           )
          )
         )
        )
       )
       (i32.store
        (get_local $39)
        (i32.add
         (i32.load
          (get_local $39)
         )
         (i32.const 1)
        )
       )
       (i32.store
        (get_local $40)
        (i32.add
         (i32.load
          (get_local $40)
         )
         (i32.const 1)
        )
       )
       (set_local $13
        (i32.add
         (get_local $30)
         (i32.const 16)
        )
       )
       (set_local $14
        (i32.const 0)
       )
       (loop $while-in11
        (if
         (i32.ne
          (get_local $14)
          (get_local $23)
         )
         (block
          (i32.store
           (i32.add
            (i32.add
             (get_local $1)
             (i32.mul
              (get_local $14)
              (i32.const 1300)
             )
            )
            (i32.const 1280)
           )
           (i32.load offset=12
            (i32.add
             (get_local $26)
             (i32.mul
              (get_local $14)
              (i32.const 56)
             )
            )
           )
          )
          (i32.store
           (i32.add
            (i32.add
             (get_local $1)
             (i32.mul
              (get_local $14)
              (i32.const 1300)
             )
            )
            (i32.const 1284)
           )
           (i32.load offset=16
            (i32.add
             (get_local $26)
             (i32.mul
              (get_local $14)
              (i32.const 56)
             )
            )
           )
          )
          (i32.store
           (i32.add
            (i32.add
             (get_local $1)
             (i32.mul
              (get_local $14)
              (i32.const 1300)
             )
            )
            (i32.shl
             (get_local $13)
             (i32.const 2)
            )
           )
           (tee_local $2
            (i32.load offset=8
             (i32.add
              (get_local $26)
              (i32.mul
               (get_local $14)
               (i32.const 56)
              )
             )
            )
           )
          )
          (i32.store
           (i32.add
            (i32.add
             (i32.add
              (get_local $1)
              (i32.mul
               (get_local $14)
               (i32.const 1300)
              )
             )
             (i32.const 704)
            )
            (i32.shl
             (i32.load
              (get_local $24)
             )
             (i32.const 2)
            )
           )
           (get_local $2)
          )
          (i32.store
           (i32.add
            (i32.add
             (i32.add
              (get_local $1)
              (i32.mul
               (get_local $14)
               (i32.const 1300)
              )
             )
             (i32.const 544)
            )
            (i32.shl
             (i32.load
              (get_local $24)
             )
             (i32.const 2)
            )
           )
           (tee_local $11
            (i32.load
             (i32.add
              (get_local $26)
              (i32.mul
               (get_local $14)
               (i32.const 56)
              )
             )
            )
           )
          )
          (i32.store
           (i32.add
            (i32.add
             (i32.add
              (get_local $1)
              (i32.mul
               (get_local $14)
               (i32.const 1300)
              )
             )
             (i32.const 864)
            )
            (i32.shl
             (i32.load
              (get_local $24)
             )
             (i32.const 2)
            )
           )
           (i32.shl
            (i32.load offset=24
             (i32.add
              (get_local $26)
              (i32.mul
               (get_local $14)
               (i32.const 56)
              )
             )
            )
            (i32.const 1)
           )
          )
          (i32.store
           (i32.add
            (i32.add
             (i32.add
              (get_local $1)
              (i32.mul
               (get_local $14)
               (i32.const 1300)
              )
             )
             (i32.const 1024)
            )
            (i32.shl
             (i32.load
              (get_local $24)
             )
             (i32.const 2)
            )
           )
           (i32.load offset=20
            (i32.add
             (get_local $26)
             (i32.mul
              (get_local $14)
              (i32.const 56)
             )
            )
           )
          )
          (set_local $11
           (i32.add
            (i32.load
             (tee_local $2
              (i32.add
               (i32.add
                (get_local $1)
                (i32.mul
                 (get_local $14)
                 (i32.const 1300)
                )
               )
               (i32.const 1288)
              )
             )
            )
            (i32.shr_s
             (i32.add
              (i32.shr_s
               (get_local $11)
               (i32.const 9)
              )
              (i32.const 1)
             )
             (i32.const 1)
            )
           )
          )
          (i32.store
           (get_local $2)
           (get_local $11)
          )
          (i32.store
           (i32.add
            (i32.add
             (i32.add
              (get_local $1)
              (i32.mul
               (get_local $14)
               (i32.const 1300)
              )
             )
             (i32.const 384)
            )
            (i32.shl
             (i32.load
              (get_local $24)
             )
             (i32.const 2)
            )
           )
           (get_local $11)
          )
          (i32.store
           (i32.add
            (i32.add
             (get_local $1)
             (i32.mul
              (get_local $14)
              (i32.const 1300)
             )
            )
            (i32.const 1296)
           )
           (i32.load offset=4
            (i32.add
             (get_local $26)
             (i32.mul
              (get_local $14)
              (i32.const 56)
             )
            )
           )
          )
          (set_local $14
           (i32.add
            (get_local $14)
            (i32.const 1)
           )
          )
          (br $while-in11)
         )
        )
       )
       (i32.store
        (i32.add
         (get_local $7)
         (i32.shl
          (i32.load
           (get_local $24)
          )
          (i32.const 2)
         )
        )
        (get_local $53)
       )
       (set_local $30
        (i32.add
         (get_local $30)
         (i32.const 1)
        )
       )
       (br $label$continue$L4)
      )
     )
    )
    (br $__rjto$2)
   )
   (call $_celt_fatal
    (i32.const 45527)
    (i32.const 45463)
    (i32.const 422)
   )
  )
  (set_local $0
   (i32.const 0)
  )
  (loop $while-in13
   (if
    (i32.ne
     (get_local $0)
     (get_local $23)
    )
    (block
     (i64.store align=4
      (tee_local $3
       (i32.add
        (get_local $1)
        (i32.mul
         (get_local $0)
         (i32.const 1300)
        )
       )
      )
      (i64.load align=4
       (tee_local $2
        (i32.add
         (i32.add
          (get_local $1)
          (i32.mul
           (get_local $0)
           (i32.const 1300)
          )
         )
         (i32.shl
          (get_local $18)
          (i32.const 2)
         )
        )
       )
      )
     )
     (i64.store offset=8 align=4
      (get_local $3)
      (i64.load offset=8 align=4
       (get_local $2)
      )
     )
     (i64.store offset=16 align=4
      (get_local $3)
      (i64.load offset=16 align=4
       (get_local $2)
      )
     )
     (i64.store offset=24 align=4
      (get_local $3)
      (i64.load offset=24 align=4
       (get_local $2)
      )
     )
     (i64.store offset=32 align=4
      (get_local $3)
      (i64.load offset=32 align=4
       (get_local $2)
      )
     )
     (i64.store offset=40 align=4
      (get_local $3)
      (i64.load offset=40 align=4
       (get_local $2)
      )
     )
     (i64.store offset=48 align=4
      (get_local $3)
      (i64.load offset=48 align=4
       (get_local $2)
      )
     )
     (i64.store offset=56 align=4
      (get_local $3)
      (i64.load offset=56 align=4
       (get_local $2)
      )
     )
     (set_local $0
      (i32.add
       (get_local $0)
       (i32.const 1)
      )
     )
     (br $while-in13)
    )
   )
  )
  (set_global $STACKTOP
   (get_local $52)
  )
 )
 (func $_silk_PLC_Reset (; 222 ;) (; has Stack IR ;) (param $0 i32)
  (i32.store
   (i32.add
    (get_local $0)
    (i32.const 4172)
   )
   (i32.shl
    (i32.load
     (i32.add
      (get_local $0)
      (i32.const 2328)
     )
    )
    (i32.const 7)
   )
  )
  (i32.store
   (i32.add
    (get_local $0)
    (i32.const 4244)
   )
   (i32.const 65536)
  )
  (i32.store
   (i32.add
    (get_local $0)
    (i32.const 4248)
   )
   (i32.const 65536)
  )
  (i32.store
   (i32.add
    (get_local $0)
    (i32.const 4260)
   )
   (i32.const 20)
  )
  (i32.store
   (i32.add
    (get_local $0)
    (i32.const 4256)
   )
   (i32.const 2)
  )
 )
 (func $_silk_PLC (; 223 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (if
   (i32.ne
    (i32.load
     (tee_local $4
      (i32.add
       (get_local $0)
       (i32.const 2316)
      )
     )
    )
    (i32.load
     (tee_local $5
      (i32.add
       (get_local $0)
       (i32.const 4252)
      )
     )
    )
   )
   (block
    (call $_silk_PLC_Reset
     (get_local $0)
    )
    (i32.store
     (get_local $5)
     (i32.load
      (get_local $4)
     )
    )
   )
  )
  (if
   (get_local $3)
   (block
    (call $_silk_PLC_conceal
     (get_local $0)
     (get_local $1)
     (get_local $2)
    )
    (i32.store
     (tee_local $0
      (i32.add
       (get_local $0)
       (i32.const 4160)
      )
     )
     (i32.add
      (i32.load
       (get_local $0)
      )
      (i32.const 1)
     )
    )
   )
   (call $_silk_PLC_update
    (get_local $0)
    (get_local $1)
   )
  )
 )
 (func $_silk_PLC_conceal (; 224 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local $26 i32)
  (local $27 i32)
  (local $28 i32)
  (local $29 i32)
  (local $30 i32)
  (local $31 i32)
  (local $32 i32)
  (local $33 i32)
  (local $34 i32)
  (local $35 i32)
  (set_local $7
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.sub
    (get_global $STACKTOP)
    (i32.const -64)
   )
  )
  (set_local $23
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (i32.add
        (tee_local $4
         (i32.load
          (tee_local $13
           (i32.add
            (get_local $0)
            (i32.const 2336)
           )
          )
         )
        )
        (i32.load
         (tee_local $32
          (i32.add
           (get_local $0)
           (i32.const 2328)
          )
         )
        )
       )
       (i32.const 2)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (set_local $19
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (get_local $4)
       (i32.const 1)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (i32.store
   (tee_local $3
    (i32.add
     (get_local $7)
     (i32.const 32)
    )
   )
   (i32.shr_s
    (i32.load
     (i32.add
      (get_local $0)
      (i32.const 4244)
     )
    )
    (i32.const 6)
   )
  )
  (i32.store offset=4
   (get_local $3)
   (tee_local $9
    (i32.shr_s
     (tee_local $33
      (i32.load
       (tee_local $16
        (i32.add
         (get_local $0)
         (i32.const 4248)
        )
       )
      )
     )
     (i32.const 6)
    )
   )
  )
  (if
   (i32.load
    (i32.add
     (get_local $0)
     (i32.const 2376)
    )
   )
   (block
    (i64.store align=2
     (tee_local $4
      (i32.add
       (get_local $0)
       (i32.const 4186)
      )
     )
     (i64.const 0)
    )
    (i64.store offset=8 align=2
     (get_local $4)
     (i64.const 0)
    )
    (i64.store offset=16 align=2
     (get_local $4)
     (i64.const 0)
    )
    (i64.store offset=24 align=2
     (get_local $4)
     (i64.const 0)
    )
   )
  )
  (call $_silk_PLC_energy
   (tee_local $20
    (i32.add
     (tee_local $10
      (get_local $7)
     )
     (i32.const 44)
    )
   )
   (tee_local $15
    (i32.add
     (get_local $10)
     (i32.const 52)
    )
   )
   (tee_local $4
    (i32.add
     (get_local $10)
     (i32.const 40)
    )
   )
   (tee_local $7
    (i32.add
     (get_local $10)
     (i32.const 48)
    )
   )
   (i32.add
    (get_local $0)
    (i32.const 4)
   )
   (get_local $3)
   (i32.load
    (tee_local $14
     (i32.add
      (get_local $0)
      (i32.const 2332)
     )
    )
   )
   (i32.load
    (tee_local $11
     (i32.add
      (get_local $0)
      (i32.const 2324)
     )
    )
   )
  )
  (set_local $3
   (i32.load
    (i32.add
     (get_local $0)
     (i32.const 4256)
    )
   )
  )
  (set_local $7
   (if (result i32)
    (i32.lt_s
     (i32.shr_s
      (i32.load
       (get_local $20)
      )
      (i32.load
       (get_local $7)
      )
     )
     (i32.shr_s
      (i32.load
       (get_local $4)
      )
      (i32.load
       (get_local $15)
      )
     )
    )
    (call $_silk_max_int_251
     (i32.add
      (i32.mul
       (i32.add
        (get_local $3)
        (i32.const -1)
       )
       (i32.load
        (i32.add
         (get_local $0)
         (i32.const 4260)
        )
       )
      )
      (i32.const -128)
     )
    )
    (call $_silk_max_int_251
     (i32.add
      (i32.mul
       (get_local $3)
       (i32.load
        (i32.add
         (get_local $0)
         (i32.const 4260)
        )
       )
      )
      (i32.const -128)
     )
    )
   )
  )
  (set_local $24
   (i32.add
    (i32.add
     (get_local $0)
     (i32.const 4)
    )
    (i32.shl
     (get_local $7)
     (i32.const 2)
    )
   )
  )
  (set_local $25
   (i32.add
    (get_local $0)
    (i32.const 4176)
   )
  )
  (set_local $15
   (i32.load16_s
    (tee_local $34
     (i32.add
      (get_local $0)
      (i32.const 4228)
     )
    )
   )
  )
  (set_local $20
   (i32.load16_s
    (i32.add
     (i32.shl
      (tee_local $7
       (call $_silk_min_int_252
        (i32.load
         (tee_local $6
          (i32.add
           (get_local $0)
           (i32.const 4160)
          )
         )
        )
       )
      )
      (i32.const 1)
     )
     (i32.const 41152)
    )
   )
  )
  (set_local $7
   (if (result i32)
    (i32.eq
     (i32.load
      (tee_local $3
       (i32.add
        (get_local $0)
        (i32.const 4164)
       )
      )
     )
     (i32.const 2)
    )
    (i32.load16_s
     (i32.add
      (i32.shl
       (get_local $7)
       (i32.const 1)
      )
      (i32.const 41156)
     )
    )
    (i32.load16_s
     (i32.add
      (i32.shl
       (get_local $7)
       (i32.const 1)
      )
      (i32.const 41160)
     )
    )
   )
  )
  (call $_silk_bwexpander
   (tee_local $12
    (i32.add
     (get_local $0)
     (i32.const 4186)
    )
   )
   (i32.load
    (tee_local $22
     (i32.add
      (get_local $0)
      (i32.const 2340)
     )
    )
   )
   (i32.const 64881)
  )
  (drop
   (call $_memcpy
    (get_local $10)
    (get_local $12)
    (i32.shl
     (tee_local $4
      (i32.load
       (get_local $22)
      )
     )
     (i32.const 1)
    )
   )
  )
  (block $do-once
   (if
    (i32.eqz
     (i32.load
      (get_local $6)
     )
    )
    (block
     (if
      (i32.ne
       (i32.load
        (get_local $3)
       )
       (i32.const 2)
      )
      (block
       (set_local $4
        (i32.shl
         (call $_silk_max_int
          (i32.const 4194304)
          (call $_silk_min_int_238
           (i32.const 134217728)
           (call $_silk_LPC_inverse_pred_gain_c
            (get_local $12)
            (get_local $4)
           )
          )
         )
         (i32.const 3)
        )
       )
       (set_local $15
        (i32.const 16384)
       )
       (set_local $7
        (i32.shr_s
         (i32.add
          (i32.mul
           (i32.shr_s
            (get_local $4)
            (i32.const 16)
           )
           (get_local $7)
          )
          (i32.shr_s
           (i32.mul
            (i32.and
             (get_local $4)
             (i32.const 65528)
            )
            (get_local $7)
           )
           (i32.const 16)
          )
         )
         (i32.const 14)
        )
       )
       (set_local $4
        (i32.load
         (get_local $22)
        )
       )
       (br $do-once)
      )
     )
     (set_local $15
      (i32.const 16384)
     )
     (set_local $3
      (i32.const 0)
     )
     (loop $while-in
      (if
       (i32.ne
        (get_local $3)
        (i32.const 5)
       )
       (block
        (set_local $15
         (i32.and
          (i32.sub
           (i32.and
            (get_local $15)
            (i32.const 65535)
           )
           (i32.load16_u
            (i32.add
             (i32.add
              (get_local $0)
              (i32.const 4176)
             )
             (i32.shl
              (get_local $3)
              (i32.const 1)
             )
            )
           )
          )
          (i32.const 65535)
         )
        )
        (set_local $3
         (i32.add
          (get_local $3)
          (i32.const 1)
         )
        )
        (br $while-in)
       )
      )
     )
     (set_local $15
      (i32.and
       (i32.shr_u
        (i32.mul
         (i32.shr_s
          (i32.shl
           (call $_silk_max_16
            (get_local $15)
           )
           (i32.const 16)
          )
          (i32.const 16)
         )
         (i32.load16_s
          (i32.add
           (get_local $0)
           (i32.const 4240)
          )
         )
        )
        (i32.const 14)
       )
       (i32.const 65535)
      )
     )
    )
   )
  )
  (set_local $6
   (i32.load
    (tee_local $35
     (i32.add
      (get_local $0)
      (i32.const 4224)
     )
    )
   )
  )
  (if
   (i32.le_s
    (tee_local $17
     (i32.sub
      (i32.sub
       (tee_local $12
        (i32.load
         (get_local $13)
        )
       )
       (tee_local $3
        (i32.shr_s
         (i32.add
          (i32.shr_s
           (i32.load
            (tee_local $5
             (i32.add
              (get_local $0)
              (i32.const 4172)
             )
            )
           )
           (i32.const 7)
          )
          (i32.const 1)
         )
         (i32.const 1)
        )
       )
      )
      (get_local $4)
     )
    )
    (i32.const 2)
   )
   (call $_celt_fatal
    (i32.const 45574)
    (i32.const 45600)
    (i32.const 294)
   )
  )
  (call $_silk_LPC_analysis_filter
   (i32.add
    (get_local $19)
    (i32.shl
     (tee_local $18
      (i32.add
       (get_local $17)
       (i32.const -2)
      )
     )
     (i32.const 1)
    )
   )
   (i32.add
    (i32.add
     (get_local $0)
     (i32.const 1348)
    )
    (i32.shl
     (get_local $18)
     (i32.const 1)
    )
   )
   (get_local $10)
   (i32.sub
    (get_local $12)
    (get_local $18)
   )
   (get_local $4)
  )
  (if
   (i32.ge_s
    (tee_local $4
     (call $_silk_INVERSE32_varQ_256
      (i32.load
       (get_local $16)
      )
     )
    )
    (i32.const 1073741823)
   )
   (set_local $4
    (i32.const 1073741823)
   )
  )
  (set_local $8
   (i32.load
    (get_local $13)
   )
  )
  (set_local $16
   (i32.shr_s
    (get_local $4)
    (i32.const 16)
   )
  )
  (set_local $17
   (i32.and
    (get_local $4)
    (i32.const 65535)
   )
  )
  (set_local $13
   (i32.add
    (get_local $18)
    (tee_local $26
     (i32.load
      (get_local $22)
     )
    )
   )
  )
  (loop $while-in1
   (if
    (i32.lt_s
     (get_local $13)
     (get_local $8)
    )
    (block
     (i32.store
      (i32.add
       (get_local $23)
       (i32.shl
        (get_local $13)
        (i32.const 2)
       )
      )
      (i32.add
       (i32.mul
        (get_local $16)
        (tee_local $4
         (i32.load16_s
          (i32.add
           (get_local $19)
           (i32.shl
            (get_local $13)
            (i32.const 1)
           )
          )
         )
        )
       )
       (i32.shr_s
        (i32.mul
         (get_local $17)
         (get_local $4)
        )
        (i32.const 16)
       )
      )
     )
     (set_local $13
      (i32.add
       (get_local $13)
       (i32.const 1)
      )
     )
     (br $while-in1)
    )
   )
  )
  (set_local $27
   (i32.add
    (get_local $0)
    (i32.const 4178)
   )
  )
  (set_local $28
   (i32.add
    (get_local $0)
    (i32.const 4180)
   )
  )
  (set_local $29
   (i32.add
    (get_local $0)
    (i32.const 4182)
   )
  )
  (set_local $18
   (i32.add
    (get_local $0)
    (i32.const 4184)
   )
  )
  (set_local $13
   (i32.add
    (get_local $0)
    (i32.const 2765)
   )
  )
  (set_local $19
   (i32.add
    (get_local $0)
    (i32.const 2316)
   )
  )
  (set_local $16
   (i32.shr_s
    (i32.shl
     (get_local $7)
     (i32.const 16)
    )
    (i32.const 16)
   )
  )
  (set_local $17
   (i32.load
    (get_local $11)
   )
  )
  (set_local $4
   (get_local $12)
  )
  (set_local $7
   (get_local $6)
  )
  (loop $while-in3
   (if
    (i32.lt_s
     (get_local $30)
     (get_local $17)
    )
    (block
     (set_local $31
      (i32.shr_s
       (i32.shl
        (get_local $15)
        (i32.const 16)
       )
       (i32.const 16)
      )
     )
     (set_local $12
      (i32.load
       (get_local $14)
      )
     )
     (set_local $21
      (i32.add
       (get_local $23)
       (i32.shl
        (i32.add
         (i32.sub
          (get_local $4)
          (get_local $3)
         )
         (i32.const 2)
        )
        (i32.const 2)
       )
      )
     )
     (set_local $11
      (i32.const 0)
     )
     (loop $while-in5
      (if
       (i32.lt_s
        (get_local $11)
        (get_local $12)
       )
       (block
        (i32.store
         (i32.add
          (get_local $23)
          (i32.shl
           (get_local $4)
           (i32.const 2)
          )
         )
         (i32.shl
          (i32.add
           (i32.add
            (i32.add
             (i32.add
              (i32.add
               (i32.add
                (i32.add
                 (i32.mul
                  (i32.shr_s
                   (tee_local $6
                    (i32.load
                     (get_local $21)
                    )
                   )
                   (i32.const 16)
                  )
                  (tee_local $3
                   (i32.load16_s
                    (get_local $25)
                   )
                  )
                 )
                 (i32.shr_s
                  (i32.mul
                   (i32.and
                    (get_local $6)
                    (i32.const 65535)
                   )
                   (get_local $3)
                  )
                  (i32.const 16)
                 )
                )
                (i32.const 2)
               )
               (i32.add
                (i32.mul
                 (i32.shr_s
                  (tee_local $6
                   (i32.load
                    (i32.add
                     (get_local $21)
                     (i32.const -4)
                    )
                   )
                  )
                  (i32.const 16)
                 )
                 (tee_local $3
                  (i32.load16_s
                   (get_local $27)
                  )
                 )
                )
                (i32.shr_s
                 (i32.mul
                  (i32.and
                   (get_local $6)
                   (i32.const 65535)
                  )
                  (get_local $3)
                 )
                 (i32.const 16)
                )
               )
              )
              (i32.add
               (i32.mul
                (i32.shr_s
                 (tee_local $6
                  (i32.load
                   (i32.add
                    (get_local $21)
                    (i32.const -8)
                   )
                  )
                 )
                 (i32.const 16)
                )
                (tee_local $3
                 (i32.load16_s
                  (get_local $28)
                 )
                )
               )
               (i32.shr_s
                (i32.mul
                 (i32.and
                  (get_local $6)
                  (i32.const 65535)
                 )
                 (get_local $3)
                )
                (i32.const 16)
               )
              )
             )
             (i32.add
              (i32.mul
               (i32.shr_s
                (tee_local $6
                 (i32.load
                  (i32.add
                   (get_local $21)
                   (i32.const -12)
                  )
                 )
                )
                (i32.const 16)
               )
               (tee_local $3
                (i32.load16_s
                 (get_local $29)
                )
               )
              )
              (i32.shr_s
               (i32.mul
                (i32.and
                 (get_local $6)
                 (i32.const 65535)
                )
                (get_local $3)
               )
               (i32.const 16)
              )
             )
            )
            (i32.add
             (i32.mul
              (i32.shr_s
               (tee_local $6
                (i32.load
                 (i32.add
                  (get_local $21)
                  (i32.const -16)
                 )
                )
               )
               (i32.const 16)
              )
              (tee_local $3
               (i32.load16_s
                (get_local $18)
               )
              )
             )
             (i32.shr_s
              (i32.mul
               (i32.and
                (get_local $6)
                (i32.const 65535)
               )
               (get_local $3)
              )
              (i32.const 16)
             )
            )
           )
           (i32.add
            (i32.mul
             (i32.shr_s
              (tee_local $3
               (i32.load
                (i32.add
                 (get_local $24)
                 (i32.shl
                  (i32.shr_u
                   (tee_local $7
                    (i32.add
                     (i32.mul
                      (get_local $7)
                      (i32.const 196314165)
                     )
                     (i32.const 907633515)
                    )
                   )
                   (i32.const 25)
                  )
                  (i32.const 2)
                 )
                )
               )
              )
              (i32.const 16)
             )
             (get_local $31)
            )
            (i32.shr_s
             (i32.mul
              (i32.and
               (get_local $3)
               (i32.const 65535)
              )
              (get_local $31)
             )
             (i32.const 16)
            )
           )
          )
          (i32.const 2)
         )
        )
        (set_local $21
         (i32.add
          (get_local $21)
          (i32.const 4)
         )
        )
        (set_local $4
         (i32.add
          (get_local $4)
          (i32.const 1)
         )
        )
        (set_local $11
         (i32.add
          (get_local $11)
          (i32.const 1)
         )
        )
        (br $while-in5)
       )
      )
     )
     (set_local $6
      (i32.const 0)
     )
     (loop $while-in7
      (if
       (i32.ne
        (get_local $6)
        (i32.const 5)
       )
       (block
        (i32.store16
         (tee_local $3
          (i32.add
           (i32.add
            (get_local $0)
            (i32.const 4176)
           )
           (i32.shl
            (get_local $6)
            (i32.const 1)
           )
          )
         )
         (i32.shr_u
          (i32.mul
           (get_local $20)
           (i32.load16_s
            (get_local $3)
           )
          )
          (i32.const 15)
         )
        )
        (set_local $6
         (i32.add
          (get_local $6)
          (i32.const 1)
         )
        )
        (br $while-in7)
       )
      )
     )
     (if
      (i32.load8_s
       (get_local $13)
      )
      (set_local $15
       (i32.and
        (i32.shr_u
         (i32.mul
          (get_local $16)
          (get_local $31)
         )
         (i32.const 15)
        )
        (i32.const 65535)
       )
      )
     )
     (set_local $3
      (call $_silk_min_int_238
       (i32.add
        (tee_local $3
         (i32.load
          (get_local $5)
         )
        )
        (i32.add
         (i32.mul
          (i32.shr_s
           (get_local $3)
           (i32.const 16)
          )
          (i32.const 655)
         )
         (i32.shr_u
          (i32.mul
           (i32.and
            (get_local $3)
            (i32.const 65535)
           )
           (i32.const 655)
          )
          (i32.const 16)
         )
        )
       )
       (i32.mul
        (i32.shr_s
         (i32.shl
          (i32.load
           (get_local $19)
          )
          (i32.const 16)
         )
         (i32.const 16)
        )
        (i32.const 4608)
       )
      )
     )
     (i32.store
      (get_local $5)
      (get_local $3)
     )
     (set_local $30
      (i32.add
       (get_local $30)
       (i32.const 1)
      )
     )
     (set_local $3
      (i32.shr_s
       (i32.add
        (i32.shr_s
         (get_local $3)
         (i32.const 7)
        )
        (i32.const 1)
       )
       (i32.const 1)
      )
     )
     (br $while-in3)
    )
   )
  )
  (i64.store align=4
   (tee_local $5
    (i32.add
     (get_local $23)
     (i32.shl
      (i32.add
       (get_local $8)
       (i32.const -16)
      )
      (i32.const 2)
     )
    )
   )
   (i64.load align=4
    (tee_local $8
     (i32.add
      (get_local $0)
      (i32.const 1284)
     )
    )
   )
  )
  (i64.store offset=8 align=4
   (get_local $5)
   (i64.load offset=8 align=4
    (get_local $8)
   )
  )
  (i64.store offset=16 align=4
   (get_local $5)
   (i64.load offset=16 align=4
    (get_local $8)
   )
  )
  (i64.store offset=24 align=4
   (get_local $5)
   (i64.load offset=24 align=4
    (get_local $8)
   )
  )
  (i64.store offset=32 align=4
   (get_local $5)
   (i64.load offset=32 align=4
    (get_local $8)
   )
  )
  (i64.store offset=40 align=4
   (get_local $5)
   (i64.load offset=40 align=4
    (get_local $8)
   )
  )
  (i64.store offset=48 align=4
   (get_local $5)
   (i64.load offset=48 align=4
    (get_local $8)
   )
  )
  (i64.store offset=56 align=4
   (get_local $5)
   (i64.load offset=56 align=4
    (get_local $8)
   )
  )
  (if
   (i32.le_s
    (get_local $26)
    (i32.const 9)
   )
   (call $_celt_fatal
    (i32.const 45611)
    (i32.const 45600)
    (i32.const 350)
   )
  )
  (set_local $24
   (i32.load16_s
    (get_local $10)
   )
  )
  (set_local $25
   (i32.load16_s offset=2
    (get_local $10)
   )
  )
  (set_local $26
   (i32.load16_s offset=4
    (get_local $10)
   )
  )
  (set_local $27
   (i32.load16_s offset=6
    (get_local $10)
   )
  )
  (set_local $28
   (i32.load16_s offset=8
    (get_local $10)
   )
  )
  (set_local $29
   (i32.load16_s offset=10
    (get_local $10)
   )
  )
  (set_local $18
   (i32.load16_s offset=12
    (get_local $10)
   )
  )
  (set_local $13
   (i32.load16_s offset=14
    (get_local $10)
   )
  )
  (set_local $19
   (i32.load16_s offset=16
    (get_local $10)
   )
  )
  (set_local $16
   (i32.load16_s offset=18
    (get_local $10)
   )
  )
  (set_local $17
   (i32.shr_s
    (i32.shl
     (get_local $9)
     (i32.const 16)
    )
    (i32.const 16)
   )
  )
  (set_local $6
   (i32.shr_s
    (i32.add
     (i32.shr_s
      (get_local $33)
      (i32.const 21)
     )
     (i32.const 1)
    )
    (i32.const 1)
   )
  )
  (set_local $9
   (i32.const 0)
  )
  (loop $while-in9
   (if
    (i32.lt_s
     (get_local $9)
     (tee_local $0
      (i32.load
       (get_local $32)
      )
     )
    )
    (block
     (set_local $20
      (i32.load
       (get_local $22)
      )
     )
     (set_local $12
      (i32.add
       (get_local $9)
       (i32.const 16)
      )
     )
     (set_local $14
      (i32.add
       (i32.add
        (i32.add
         (i32.add
          (i32.add
           (i32.add
            (i32.add
             (i32.add
              (i32.add
               (i32.add
                (i32.shr_s
                 (i32.load
                  (get_local $22)
                 )
                 (i32.const 1)
                )
                (i32.add
                 (i32.mul
                  (i32.shr_s
                   (tee_local $0
                    (i32.load
                     (i32.add
                      (get_local $5)
                      (i32.shl
                       (i32.add
                        (get_local $9)
                        (i32.const 15)
                       )
                       (i32.const 2)
                      )
                     )
                    )
                   )
                   (i32.const 16)
                  )
                  (get_local $24)
                 )
                 (i32.shr_s
                  (i32.mul
                   (i32.and
                    (get_local $0)
                    (i32.const 65535)
                   )
                   (get_local $24)
                  )
                  (i32.const 16)
                 )
                )
               )
               (i32.add
                (i32.mul
                 (i32.shr_s
                  (tee_local $0
                   (i32.load
                    (i32.add
                     (get_local $5)
                     (i32.shl
                      (i32.add
                       (get_local $9)
                       (i32.const 14)
                      )
                      (i32.const 2)
                     )
                    )
                   )
                  )
                  (i32.const 16)
                 )
                 (get_local $25)
                )
                (i32.shr_s
                 (i32.mul
                  (i32.and
                   (get_local $0)
                   (i32.const 65535)
                  )
                  (get_local $25)
                 )
                 (i32.const 16)
                )
               )
              )
              (i32.add
               (i32.mul
                (i32.shr_s
                 (tee_local $0
                  (i32.load
                   (i32.add
                    (get_local $5)
                    (i32.shl
                     (i32.add
                      (get_local $9)
                      (i32.const 13)
                     )
                     (i32.const 2)
                    )
                   )
                  )
                 )
                 (i32.const 16)
                )
                (get_local $26)
               )
               (i32.shr_s
                (i32.mul
                 (i32.and
                  (get_local $0)
                  (i32.const 65535)
                 )
                 (get_local $26)
                )
                (i32.const 16)
               )
              )
             )
             (i32.add
              (i32.mul
               (i32.shr_s
                (tee_local $0
                 (i32.load
                  (i32.add
                   (get_local $5)
                   (i32.shl
                    (i32.add
                     (get_local $9)
                     (i32.const 12)
                    )
                    (i32.const 2)
                   )
                  )
                 )
                )
                (i32.const 16)
               )
               (get_local $27)
              )
              (i32.shr_s
               (i32.mul
                (i32.and
                 (get_local $0)
                 (i32.const 65535)
                )
                (get_local $27)
               )
               (i32.const 16)
              )
             )
            )
            (i32.add
             (i32.mul
              (i32.shr_s
               (tee_local $0
                (i32.load
                 (i32.add
                  (get_local $5)
                  (i32.shl
                   (i32.add
                    (get_local $9)
                    (i32.const 11)
                   )
                   (i32.const 2)
                  )
                 )
                )
               )
               (i32.const 16)
              )
              (get_local $28)
             )
             (i32.shr_s
              (i32.mul
               (i32.and
                (get_local $0)
                (i32.const 65535)
               )
               (get_local $28)
              )
              (i32.const 16)
             )
            )
           )
           (i32.add
            (i32.mul
             (i32.shr_s
              (tee_local $0
               (i32.load
                (i32.add
                 (get_local $5)
                 (i32.shl
                  (i32.add
                   (get_local $9)
                   (i32.const 10)
                  )
                  (i32.const 2)
                 )
                )
               )
              )
              (i32.const 16)
             )
             (get_local $29)
            )
            (i32.shr_s
             (i32.mul
              (i32.and
               (get_local $0)
               (i32.const 65535)
              )
              (get_local $29)
             )
             (i32.const 16)
            )
           )
          )
          (i32.add
           (i32.mul
            (i32.shr_s
             (tee_local $0
              (i32.load
               (i32.add
                (get_local $5)
                (i32.shl
                 (i32.add
                  (get_local $9)
                  (i32.const 9)
                 )
                 (i32.const 2)
                )
               )
              )
             )
             (i32.const 16)
            )
            (get_local $18)
           )
           (i32.shr_s
            (i32.mul
             (i32.and
              (get_local $0)
              (i32.const 65535)
             )
             (get_local $18)
            )
            (i32.const 16)
           )
          )
         )
         (i32.add
          (i32.mul
           (i32.shr_s
            (tee_local $0
             (i32.load
              (i32.add
               (get_local $5)
               (i32.shl
                (i32.add
                 (get_local $9)
                 (i32.const 8)
                )
                (i32.const 2)
               )
              )
             )
            )
            (i32.const 16)
           )
           (get_local $13)
          )
          (i32.shr_s
           (i32.mul
            (i32.and
             (get_local $0)
             (i32.const 65535)
            )
            (get_local $13)
           )
           (i32.const 16)
          )
         )
        )
        (i32.add
         (i32.mul
          (i32.shr_s
           (tee_local $0
            (i32.load
             (i32.add
              (get_local $5)
              (i32.shl
               (i32.add
                (get_local $9)
                (i32.const 7)
               )
               (i32.const 2)
              )
             )
            )
           )
           (i32.const 16)
          )
          (get_local $19)
         )
         (i32.shr_s
          (i32.mul
           (i32.and
            (get_local $0)
            (i32.const 65535)
           )
           (get_local $19)
          )
          (i32.const 16)
         )
        )
       )
       (i32.add
        (i32.mul
         (i32.shr_s
          (tee_local $0
           (i32.load
            (i32.add
             (get_local $5)
             (i32.shl
              (i32.add
               (get_local $9)
               (i32.const 6)
              )
              (i32.const 2)
             )
            )
           )
          )
          (i32.const 16)
         )
         (get_local $16)
        )
        (i32.shr_s
         (i32.mul
          (i32.and
           (get_local $0)
           (i32.const 65535)
          )
          (get_local $16)
         )
         (i32.const 16)
        )
       )
      )
     )
     (set_local $11
      (i32.const 10)
     )
     (loop $while-in11
      (if
       (i32.lt_s
        (get_local $11)
        (get_local $20)
       )
       (block
        (set_local $14
         (i32.add
          (get_local $14)
          (i32.add
           (i32.mul
            (i32.shr_s
             (tee_local $4
              (i32.load
               (i32.add
                (get_local $5)
                (i32.shl
                 (i32.add
                  (i32.sub
                   (get_local $12)
                   (get_local $11)
                  )
                  (i32.const -1)
                 )
                 (i32.const 2)
                )
               )
              )
             )
             (i32.const 16)
            )
            (tee_local $0
             (i32.load16_s
              (i32.add
               (get_local $10)
               (i32.shl
                (get_local $11)
                (i32.const 1)
               )
              )
             )
            )
           )
           (i32.shr_s
            (i32.mul
             (i32.and
              (get_local $4)
              (i32.const 65535)
             )
             (get_local $0)
            )
            (i32.const 16)
           )
          )
         )
        )
        (set_local $11
         (i32.add
          (get_local $11)
          (i32.const 1)
         )
        )
        (br $while-in11)
       )
      )
     )
     (set_local $11
      (i32.load
       (tee_local $20
        (i32.add
         (get_local $5)
         (i32.shl
          (get_local $12)
          (i32.const 2)
         )
        )
       )
      )
     )
     (set_local $12
      (i32.gt_s
       (get_local $14)
       (i32.const 134217727)
      )
     )
     (set_local $0
      (i32.shl
       (if (result i32)
        (i32.gt_s
         (get_local $14)
         (i32.const -134217728)
        )
        (get_local $14)
        (i32.const -134217728)
       )
       (i32.const 4)
      )
     )
     (set_local $4
      (i32.gt_s
       (i32.add
        (get_local $11)
        (if (result i32)
         (get_local $12)
         (i32.const 2147483632)
         (get_local $0)
        )
       )
       (i32.const -1)
      )
     )
     (set_local $0
      (i32.shl
       (if (result i32)
        (i32.gt_s
         (get_local $14)
         (i32.const -134217728)
        )
        (get_local $14)
        (i32.const -134217728)
       )
       (i32.const 4)
      )
     )
     (if
      (get_local $12)
      (set_local $0
       (i32.const 2147483632)
      )
     )
     (i32.store
      (get_local $20)
      (tee_local $0
       (if (result i32)
        (get_local $4)
        (if (result i32)
         (i32.lt_s
          (i32.and
           (get_local $11)
           (get_local $0)
          )
          (i32.const 0)
         )
         (i32.const -2147483648)
         (block (result i32)
          (set_local $0
           (i32.shl
            (if (result i32)
             (i32.gt_s
              (get_local $14)
              (i32.const -134217728)
             )
             (get_local $14)
             (i32.const -134217728)
            )
            (i32.const 4)
           )
          )
          (i32.add
           (get_local $11)
           (if (result i32)
            (get_local $12)
            (i32.const 2147483632)
            (get_local $0)
           )
          )
         )
        )
        (if (result i32)
         (i32.gt_s
          (i32.or
           (get_local $11)
           (get_local $0)
          )
          (i32.const -1)
         )
         (i32.const 2147483647)
         (block (result i32)
          (set_local $0
           (i32.shl
            (if (result i32)
             (i32.gt_s
              (get_local $14)
              (i32.const -134217728)
             )
             (get_local $14)
             (i32.const -134217728)
            )
            (i32.const 4)
           )
          )
          (i32.add
           (get_local $11)
           (if (result i32)
            (get_local $12)
            (i32.const 2147483632)
            (get_local $0)
           )
          )
         )
        )
       )
      )
     )
     (i32.store16
      (i32.add
       (get_local $2)
       (i32.shl
        (get_local $9)
        (i32.const 1)
       )
      )
      (tee_local $0
       (if (result i32)
        (i32.gt_s
         (tee_local $0
          (i32.add
           (i32.add
            (i32.mul
             (i32.shr_s
              (get_local $0)
              (i32.const 16)
             )
             (get_local $17)
            )
            (i32.shr_s
             (i32.mul
              (i32.and
               (get_local $0)
               (i32.const 65535)
              )
              (get_local $17)
             )
             (i32.const 16)
            )
           )
           (i32.mul
            (get_local $0)
            (get_local $6)
           )
          )
         )
         (i32.const 8388479)
        )
        (i32.const 32767)
        (if (result i32)
         (i32.lt_s
          (get_local $0)
          (i32.const -8388736)
         )
         (i32.const -32768)
         (i32.shr_s
          (i32.add
           (i32.shr_s
            (get_local $0)
            (i32.const 7)
           )
           (i32.const 1)
          )
          (i32.const 1)
         )
        )
       )
      )
     )
     (set_local $9
      (i32.add
       (get_local $9)
       (i32.const 1)
      )
     )
     (br $while-in9)
    )
   )
  )
  (i64.store align=4
   (get_local $8)
   (i64.load align=4
    (tee_local $0
     (i32.add
      (get_local $5)
      (i32.shl
       (get_local $0)
       (i32.const 2)
      )
     )
    )
   )
  )
  (i64.store offset=8 align=4
   (get_local $8)
   (i64.load offset=8 align=4
    (get_local $0)
   )
  )
  (i64.store offset=16 align=4
   (get_local $8)
   (i64.load offset=16 align=4
    (get_local $0)
   )
  )
  (i64.store offset=24 align=4
   (get_local $8)
   (i64.load offset=24 align=4
    (get_local $0)
   )
  )
  (i64.store offset=32 align=4
   (get_local $8)
   (i64.load offset=32 align=4
    (get_local $0)
   )
  )
  (i64.store offset=40 align=4
   (get_local $8)
   (i64.load offset=40 align=4
    (get_local $0)
   )
  )
  (i64.store offset=48 align=4
   (get_local $8)
   (i64.load offset=48 align=4
    (get_local $0)
   )
  )
  (i64.store offset=56 align=4
   (get_local $8)
   (i64.load offset=56 align=4
    (get_local $0)
   )
  )
  (i32.store
   (get_local $35)
   (get_local $7)
  )
  (i32.store16
   (get_local $34)
   (get_local $15)
  )
  (set_local $0
   (i32.const 0)
  )
  (loop $while-in13
   (if
    (i32.ne
     (get_local $0)
     (i32.const 4)
    )
    (block
     (i32.store
      (i32.add
       (get_local $1)
       (i32.shl
        (get_local $0)
        (i32.const 2)
       )
      )
      (get_local $3)
     )
     (set_local $0
      (i32.add
       (get_local $0)
       (i32.const 1)
      )
     )
     (br $while-in13)
    )
   )
  )
  (set_global $STACKTOP
   (get_local $10)
  )
 )
 (func $_silk_PLC_update (; 225 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (set_local $9
   (i32.add
    (get_local $0)
    (i32.const 4172)
   )
  )
  (i32.store
   (i32.add
    (get_local $0)
    (i32.const 4164)
   )
   (tee_local $2
    (i32.load8_s
     (i32.add
      (get_local $0)
      (i32.const 2765)
     )
    )
   )
  )
  (block $label$break$L1
   (if
    (i32.eq
     (get_local $2)
     (i32.const 2)
    )
    (block
     (set_local $6
      (i32.add
       (get_local $0)
       (i32.const 4176)
      )
     )
     (set_local $8
      (i32.load
       (i32.add
        (get_local $0)
        (i32.const 2332)
       )
      )
     )
     (set_local $5
      (i32.load
       (i32.add
        (get_local $0)
        (i32.const 2324)
       )
      )
     )
     (set_local $2
      (i32.const 0)
     )
     (loop $while-in
      (if
       (i32.eqz
        (i32.or
         (i32.ge_s
          (i32.mul
           (get_local $3)
           (get_local $8)
          )
          (i32.load
           (i32.add
            (get_local $1)
            (i32.shl
             (tee_local $10
              (i32.add
               (get_local $5)
               (i32.const -1)
              )
             )
             (i32.const 2)
            )
           )
          )
         )
         (i32.eq
          (get_local $3)
          (get_local $5)
         )
        )
       )
       (block
        (set_local $7
         (i32.const 0)
        )
        (set_local $4
         (i32.const 0)
        )
        (loop $while-in1
         (if
          (i32.ne
           (get_local $7)
           (i32.const 5)
          )
          (block
           (set_local $4
            (i32.add
             (get_local $4)
             (i32.load16_s
              (i32.add
               (i32.add
                (get_local $1)
                (i32.const 96)
               )
               (i32.shl
                (i32.add
                 (i32.mul
                  (i32.sub
                   (get_local $10)
                   (get_local $3)
                  )
                  (i32.const 5)
                 )
                 (get_local $7)
                )
                (i32.const 1)
               )
              )
             )
            )
           )
           (set_local $7
            (i32.add
             (get_local $7)
             (i32.const 1)
            )
           )
           (br $while-in1)
          )
         )
        )
        (if
         (i32.gt_s
          (get_local $4)
          (get_local $2)
         )
         (block
          (i64.store align=2
           (get_local $6)
           (i64.load align=2
            (tee_local $2
             (i32.add
              (i32.add
               (get_local $1)
               (i32.const 96)
              )
              (i32.shl
               (i32.mul
                (i32.shr_s
                 (i32.shl
                  (i32.sub
                   (i32.add
                    (get_local $5)
                    (i32.const 65535)
                   )
                   (get_local $3)
                  )
                  (i32.const 16)
                 )
                 (i32.const 16)
                )
                (i32.const 5)
               )
               (i32.const 1)
              )
             )
            )
           )
          )
          (i32.store16 offset=8
           (get_local $6)
           (i32.load16_s offset=8
            (get_local $2)
           )
          )
          (i32.store
           (get_local $9)
           (i32.shl
            (i32.load
             (i32.add
              (get_local $1)
              (i32.shl
               (i32.sub
                (get_local $10)
                (get_local $3)
               )
               (i32.const 2)
              )
             )
            )
            (i32.const 8)
           )
          )
          (set_local $2
           (get_local $4)
          )
         )
        )
        (set_local $3
         (i32.add
          (get_local $3)
          (i32.const 1)
         )
        )
        (br $while-in)
       )
      )
     )
     (i64.store align=4
      (get_local $6)
      (i64.const 0)
     )
     (i32.store16 offset=8
      (get_local $6)
      (i32.const 0)
     )
     (i32.store16
      (i32.add
       (get_local $0)
       (i32.const 4180)
      )
      (get_local $2)
     )
     (if
      (i32.lt_s
       (get_local $2)
       (i32.const 11469)
      )
      (block
       (set_local $4
        (i32.shr_s
         (i32.shl
          (i32.div_u
           (i32.const 11744256)
           (if (result i32)
            (i32.gt_s
             (get_local $2)
             (i32.const 1)
            )
            (get_local $2)
            (i32.const 1)
           )
          )
          (i32.const 16)
         )
         (i32.const 16)
        )
       )
       (set_local $2
        (i32.const 0)
       )
       (loop $while-in3
        (if
         (i32.eq
          (get_local $2)
          (i32.const 5)
         )
         (br $label$break$L1)
         (block
          (i32.store16
           (tee_local $3
            (i32.add
             (i32.add
              (get_local $0)
              (i32.const 4176)
             )
             (i32.shl
              (get_local $2)
              (i32.const 1)
             )
            )
           )
           (i32.shr_u
            (i32.mul
             (get_local $4)
             (i32.load16_s
              (get_local $3)
             )
            )
            (i32.const 10)
           )
          )
          (set_local $2
           (i32.add
            (get_local $2)
            (i32.const 1)
           )
          )
          (br $while-in3)
         )
        )
       )
      )
     )
     (if
      (i32.gt_s
       (get_local $2)
       (i32.const 15565)
      )
      (block
       (set_local $4
        (i32.shr_s
         (i32.shl
          (i32.div_s
           (i32.const 255016960)
           (get_local $2)
          )
          (i32.const 16)
         )
         (i32.const 16)
        )
       )
       (set_local $2
        (i32.const 0)
       )
       (loop $while-in5
        (if
         (i32.ne
          (get_local $2)
          (i32.const 5)
         )
         (block
          (i32.store16
           (tee_local $3
            (i32.add
             (i32.add
              (get_local $0)
              (i32.const 4176)
             )
             (i32.shl
              (get_local $2)
              (i32.const 1)
             )
            )
           )
           (i32.shr_u
            (i32.mul
             (get_local $4)
             (i32.load16_s
              (get_local $3)
             )
            )
            (i32.const 14)
           )
          )
          (set_local $2
           (i32.add
            (get_local $2)
            (i32.const 1)
           )
          )
          (br $while-in5)
         )
        )
       )
      )
     )
    )
    (block
     (i32.store
      (get_local $9)
      (i32.mul
       (i32.shr_s
        (i32.shl
         (i32.load
          (i32.add
           (get_local $0)
           (i32.const 2316)
          )
         )
         (i32.const 16)
        )
        (i32.const 16)
       )
       (i32.const 4608)
      )
     )
     (i64.store align=4
      (tee_local $2
       (i32.add
        (get_local $0)
        (i32.const 4176)
       )
      )
      (i64.const 0)
     )
     (i32.store16 offset=8
      (get_local $2)
      (i32.const 0)
     )
     (set_local $5
      (i32.load
       (i32.add
        (get_local $0)
        (i32.const 2324)
       )
      )
     )
     (set_local $8
      (i32.load
       (i32.add
        (get_local $0)
        (i32.const 2332)
       )
      )
     )
    )
   )
  )
  (drop
   (call $_memcpy
    (i32.add
     (get_local $0)
     (i32.const 4186)
    )
    (i32.sub
     (get_local $1)
     (i32.const -64)
    )
    (i32.shl
     (i32.load
      (i32.add
       (get_local $0)
       (i32.const 2340)
      )
     )
     (i32.const 1)
    )
   )
  )
  (i32.store16
   (i32.add
    (get_local $0)
    (i32.const 4240)
   )
   (i32.load offset=136
    (get_local $1)
   )
  )
  (i64.store align=4
   (i32.add
    (get_local $0)
    (i32.const 4244)
   )
   (i64.load offset=8 align=4
    (i32.add
     (get_local $1)
     (i32.shl
      (get_local $5)
      (i32.const 2)
     )
    )
   )
  )
  (i32.store
   (i32.add
    (get_local $0)
    (i32.const 4260)
   )
   (get_local $8)
  )
  (i32.store
   (i32.add
    (get_local $0)
    (i32.const 4256)
   )
   (get_local $5)
  )
 )
 (func $_silk_PLC_energy (; 226 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (set_local $14
   (get_global $STACKTOP)
  )
  (set_local $12
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (get_local $6)
       (i32.const 2)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (set_local $13
   (get_local $12)
  )
  (loop $while-in
   (if
    (i32.ne
     (get_local $9)
     (i32.const 2)
    )
    (block
     (set_local $15
      (i32.mul
       (i32.add
        (i32.add
         (get_local $9)
         (get_local $7)
        )
        (i32.const -2)
       )
       (get_local $6)
      )
     )
     (set_local $16
      (i32.add
       (get_local $5)
       (i32.shl
        (get_local $9)
        (i32.const 2)
       )
      )
     )
     (set_local $10
      (i32.const 0)
     )
     (loop $while-in1
      (if
       (i32.lt_s
        (get_local $10)
        (get_local $6)
       )
       (block
        (if
         (i32.gt_s
          (tee_local $11
           (i32.add
            (i32.add
             (i32.mul
              (i32.shr_s
               (tee_local $8
                (i32.load
                 (i32.add
                  (get_local $4)
                  (i32.shl
                   (i32.add
                    (get_local $10)
                    (get_local $15)
                   )
                   (i32.const 2)
                  )
                 )
                )
               )
               (i32.const 16)
              )
              (tee_local $17
               (i32.shr_s
                (i32.shl
                 (tee_local $11
                  (i32.load
                   (get_local $16)
                  )
                 )
                 (i32.const 16)
                )
                (i32.const 16)
               )
              )
             )
             (i32.shr_s
              (i32.mul
               (i32.and
                (get_local $8)
                (i32.const 65535)
               )
               (get_local $17)
              )
              (i32.const 16)
             )
            )
            (i32.mul
             (get_local $8)
             (i32.shr_s
              (i32.add
               (i32.shr_s
                (get_local $11)
                (i32.const 15)
               )
               (i32.const 1)
              )
              (i32.const 1)
             )
            )
           )
          )
          (i32.const 8388607)
         )
         (set_local $8
          (i32.const 32767)
         )
         (block
          (set_local $8
           (i32.shr_s
            (get_local $11)
            (i32.const 8)
           )
          )
          (if
           (i32.lt_s
            (get_local $11)
            (i32.const -8388608)
           )
           (set_local $8
            (i32.const -32768)
           )
          )
         )
        )
        (i32.store16
         (i32.add
          (get_local $13)
          (i32.shl
           (get_local $10)
           (i32.const 1)
          )
         )
         (get_local $8)
        )
        (set_local $10
         (i32.add
          (get_local $10)
          (i32.const 1)
         )
        )
        (br $while-in1)
       )
      )
     )
     (set_local $13
      (i32.add
       (get_local $13)
       (i32.shl
        (get_local $6)
        (i32.const 1)
       )
      )
     )
     (set_local $9
      (i32.add
       (get_local $9)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (call $_silk_sum_sqr_shift
   (get_local $0)
   (get_local $1)
   (get_local $12)
   (get_local $6)
  )
  (call $_silk_sum_sqr_shift
   (get_local $2)
   (get_local $3)
   (i32.add
    (get_local $12)
    (i32.shl
     (get_local $6)
     (i32.const 1)
    )
   )
   (get_local $6)
  )
  (set_global $STACKTOP
   (get_local $14)
  )
 )
 (func $_silk_max_int_251 (; 227 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (if (result i32)
   (i32.gt_s
    (get_local $0)
    (i32.const 0)
   )
   (get_local $0)
   (i32.const 0)
  )
 )
 (func $_silk_min_int_252 (; 228 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (if (result i32)
   (i32.lt_s
    (get_local $0)
    (i32.const 1)
   )
   (get_local $0)
   (i32.const 1)
  )
 )
 (func $_silk_max_16 (; 229 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (if (result i32)
   (i32.gt_s
    (i32.shr_s
     (i32.shl
      (get_local $0)
      (i32.const 16)
     )
     (i32.const 16)
    )
    (i32.const 3277)
   )
   (get_local $0)
   (i32.const 3277)
  )
 )
 (func $_silk_INVERSE32_varQ_256 (; 230 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (set_local $1
   (i32.sub
    (i32.const 0)
    (get_local $0)
   )
  )
  (set_local $1
   (call $_silk_CLZ32
    (if (result i32)
     (i32.gt_s
      (get_local $0)
      (i32.const 0)
     )
     (get_local $0)
     (get_local $1)
    )
   )
  )
  (set_local $0
   (i32.shr_s
    (tee_local $5
     (i32.shl
      (tee_local $4
       (i32.div_s
        (i32.const 536870911)
        (tee_local $3
         (i32.shr_s
          (tee_local $2
           (i32.shl
            (get_local $0)
            (i32.add
             (get_local $1)
             (i32.const -1)
            )
           )
          )
          (i32.const 16)
         )
        )
       )
      )
      (i32.const 16)
     )
    )
    (i32.const 16)
   )
  )
  (set_local $0
   (i32.add
    (i32.add
     (get_local $5)
     (i32.add
      (i32.mul
       (i32.shr_s
        (tee_local $2
         (i32.sub
          (i32.const 0)
          (i32.shl
           (i32.add
            (i32.mul
             (get_local $3)
             (get_local $0)
            )
            (i32.shr_s
             (i32.mul
              (i32.and
               (get_local $2)
               (i32.const 65535)
              )
              (get_local $0)
             )
             (i32.const 16)
            )
           )
           (i32.const 3)
          )
         )
        )
        (i32.const 16)
       )
       (get_local $0)
      )
      (i32.shr_s
       (i32.mul
        (i32.and
         (get_local $2)
         (i32.const 65528)
        )
        (get_local $0)
       )
       (i32.const 16)
      )
     )
    )
    (i32.mul
     (i32.shr_s
      (i32.add
       (i32.shr_s
        (get_local $4)
        (i32.const 15)
       )
       (i32.const 1)
      )
      (i32.const 1)
     )
     (get_local $2)
    )
   )
  )
  (if
   (i32.ge_s
    (tee_local $1
     (i32.sub
      (i32.const 62)
      (get_local $1)
     )
    )
    (i32.const 47)
   )
   (block
    (set_local $0
     (i32.shr_s
      (get_local $0)
      (i32.add
       (get_local $1)
       (i32.const -46)
      )
     )
    )
    (return
     (if (result i32)
      (i32.lt_s
       (get_local $1)
       (i32.const 78)
      )
      (get_local $0)
      (i32.const 0)
     )
    )
   )
  )
  (if (result i32)
   (i32.gt_s
    (tee_local $2
     (i32.shr_s
      (i32.const -2147483648)
      (tee_local $1
       (i32.sub
        (i32.const 46)
        (get_local $1)
       )
      )
     )
    )
    (tee_local $3
     (i32.shr_u
      (i32.const 2147483647)
      (get_local $1)
     )
    )
   )
   (block (result i32)
    (if
     (i32.gt_s
      (get_local $0)
      (get_local $2)
     )
     (return
      (i32.shl
       (get_local $2)
       (get_local $1)
      )
     )
    )
    (i32.shl
     (if (result i32)
      (i32.lt_s
       (get_local $0)
       (get_local $3)
      )
      (get_local $3)
      (get_local $0)
     )
     (get_local $1)
    )
   )
   (block (result i32)
    (if
     (i32.gt_s
      (get_local $0)
      (get_local $3)
     )
     (return
      (i32.shl
       (get_local $3)
       (get_local $1)
      )
     )
    )
    (i32.shl
     (if (result i32)
      (i32.lt_s
       (get_local $0)
       (get_local $2)
      )
      (get_local $2)
      (get_local $0)
     )
     (get_local $1)
    )
   )
  )
 )
 (func $_silk_PLC_glue_frames (; 231 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (set_local $5
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.load
    (i32.add
     (get_local $0)
     (i32.const 4160)
    )
   )
   (block
    (call $_silk_sum_sqr_shift
     (i32.add
      (get_local $0)
      (i32.const 4232)
     )
     (i32.add
      (get_local $0)
      (i32.const 4236)
     )
     (get_local $1)
     (get_local $2)
    )
    (i32.store
     (i32.add
      (get_local $0)
      (i32.const 4220)
     )
     (i32.const 1)
    )
    (set_global $STACKTOP
     (get_local $5)
    )
    (return)
   )
  )
  (set_local $3
   (i32.add
    (get_local $5)
    (i32.const 4)
   )
  )
  (block $label$break$L5
   (if
    (i32.load
     (tee_local $8
      (i32.add
       (get_local $0)
       (i32.const 4220)
      )
     )
    )
    (block
     (call $_silk_sum_sqr_shift
      (get_local $5)
      (get_local $3)
      (get_local $1)
      (get_local $2)
     )
     (if
      (i32.gt_s
       (tee_local $4
        (i32.load
         (get_local $3)
        )
       )
       (tee_local $6
        (i32.load
         (i32.add
          (get_local $0)
          (i32.const 4236)
         )
        )
       )
      )
      (i32.store
       (tee_local $3
        (i32.add
         (get_local $0)
         (i32.const 4232)
        )
       )
       (i32.shr_s
        (i32.load
         (get_local $3)
        )
        (i32.sub
         (get_local $4)
         (get_local $6)
        )
       )
      )
      (if
       (i32.lt_s
        (get_local $4)
        (get_local $6)
       )
       (i32.store
        (get_local $5)
        (i32.shr_s
         (i32.load
          (get_local $5)
         )
         (i32.sub
          (get_local $6)
          (get_local $4)
         )
        )
       )
      )
     )
     (if
      (i32.gt_s
       (tee_local $6
        (i32.load
         (get_local $5)
        )
       )
       (tee_local $3
        (i32.load
         (tee_local $0
          (i32.add
           (get_local $0)
           (i32.const 4232)
          )
         )
        )
       )
      )
      (block
       (set_local $4
        (call $_silk_CLZ32
         (get_local $3)
        )
       )
       (i32.store
        (get_local $0)
        (tee_local $3
         (i32.shl
          (get_local $3)
          (i32.add
           (get_local $4)
           (i32.const -1)
          )
         )
        )
       )
       (set_local $0
        (call $_silk_max_int
         (i32.sub
          (i32.const 25)
          (get_local $4)
         )
         (i32.const 0)
        )
       )
       (i32.store
        (get_local $5)
        (tee_local $0
         (i32.shr_s
          (get_local $6)
          (get_local $0)
         )
        )
       )
       (set_local $6
        (i32.shl
         (i32.div_s
          (i32.sub
           (i32.const 65536)
           (tee_local $0
            (i32.shl
             (call $_silk_SQRT_APPROX
              (i32.div_s
               (get_local $3)
               (if (result i32)
                (i32.gt_s
                 (get_local $0)
                 (i32.const 1)
                )
                (get_local $0)
                (i32.const 1)
               )
              )
             )
             (i32.const 4)
            )
           )
          )
          (get_local $2)
         )
         (i32.const 2)
        )
       )
       (loop $while-in
        (br_if $label$break$L5
         (i32.ge_s
          (get_local $7)
          (get_local $2)
         )
        )
        (set_local $4
         (i32.load16_s
          (tee_local $3
           (i32.add
            (get_local $1)
            (i32.shl
             (get_local $7)
             (i32.const 1)
            )
           )
          )
         )
        )
        (i32.store16
         (get_local $3)
         (i32.add
          (i32.mul
           (i32.shr_s
            (get_local $0)
            (i32.const 16)
           )
           (get_local $4)
          )
          (i32.shr_u
           (i32.mul
            (i32.and
             (get_local $0)
             (i32.const 65532)
            )
            (get_local $4)
           )
           (i32.const 16)
          )
         )
        )
        (br_if $label$break$L5
         (i32.gt_s
          (tee_local $0
           (i32.add
            (get_local $0)
            (get_local $6)
           )
          )
          (i32.const 65536)
         )
        )
        (set_local $7
         (i32.add
          (get_local $7)
          (i32.const 1)
         )
        )
        (br $while-in)
       )
      )
     )
    )
   )
  )
  (i32.store
   (get_local $8)
   (i32.const 0)
  )
  (set_global $STACKTOP
   (get_local $5)
  )
 )
 (func $_silk_shell_encoder (; 232 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (set_local $2
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.sub
    (get_global $STACKTOP)
    (i32.const -64)
   )
  )
  (set_local $6
   (i32.add
    (get_local $2)
    (i32.const 56)
   )
  )
  (set_local $5
   (i32.add
    (get_local $2)
    (i32.const 48)
   )
  )
  (call $_combine_pulses
   (tee_local $3
    (i32.add
     (get_local $2)
     (i32.const 16)
    )
   )
   (get_local $1)
   (i32.const 8)
  )
  (call $_combine_pulses
   (get_local $2)
   (get_local $3)
   (i32.const 4)
  )
  (call $_combine_pulses
   (get_local $6)
   (get_local $2)
   (i32.const 2)
  )
  (call $_combine_pulses
   (get_local $5)
   (get_local $6)
   (i32.const 1)
  )
  (call $_encode_split
   (get_local $0)
   (tee_local $4
    (i32.load
     (get_local $6)
    )
   )
   (i32.load
    (get_local $5)
   )
   (i32.const 27040)
  )
  (call $_encode_split
   (get_local $0)
   (tee_local $5
    (i32.load
     (get_local $2)
    )
   )
   (get_local $4)
   (i32.const 26880)
  )
  (call $_encode_split
   (get_local $0)
   (tee_local $4
    (i32.load
     (get_local $3)
    )
   )
   (get_local $5)
   (i32.const 26720)
  )
  (call $_encode_split
   (get_local $0)
   (i32.load
    (get_local $1)
   )
   (get_local $4)
   (i32.const 26560)
  )
  (call $_encode_split
   (get_local $0)
   (i32.load offset=8
    (get_local $1)
   )
   (i32.load offset=4
    (get_local $3)
   )
   (i32.const 26560)
  )
  (call $_encode_split
   (get_local $0)
   (tee_local $4
    (i32.load offset=8
     (get_local $3)
    )
   )
   (i32.load offset=4
    (get_local $2)
   )
   (i32.const 26720)
  )
  (call $_encode_split
   (get_local $0)
   (i32.load offset=16
    (get_local $1)
   )
   (get_local $4)
   (i32.const 26560)
  )
  (call $_encode_split
   (get_local $0)
   (i32.load offset=24
    (get_local $1)
   )
   (i32.load offset=12
    (get_local $3)
   )
   (i32.const 26560)
  )
  (call $_encode_split
   (get_local $0)
   (tee_local $5
    (i32.load offset=8
     (get_local $2)
    )
   )
   (i32.load offset=4
    (get_local $6)
   )
   (i32.const 26880)
  )
  (call $_encode_split
   (get_local $0)
   (tee_local $4
    (i32.load offset=16
     (get_local $3)
    )
   )
   (get_local $5)
   (i32.const 26720)
  )
  (call $_encode_split
   (get_local $0)
   (i32.load offset=32
    (get_local $1)
   )
   (get_local $4)
   (i32.const 26560)
  )
  (call $_encode_split
   (get_local $0)
   (i32.load offset=40
    (get_local $1)
   )
   (i32.load offset=20
    (get_local $3)
   )
   (i32.const 26560)
  )
  (call $_encode_split
   (get_local $0)
   (tee_local $4
    (i32.load offset=24
     (get_local $3)
    )
   )
   (i32.load offset=12
    (get_local $2)
   )
   (i32.const 26720)
  )
  (call $_encode_split
   (get_local $0)
   (i32.load offset=48
    (get_local $1)
   )
   (get_local $4)
   (i32.const 26560)
  )
  (call $_encode_split
   (get_local $0)
   (i32.load offset=56
    (get_local $1)
   )
   (i32.load offset=28
    (get_local $3)
   )
   (i32.const 26560)
  )
  (set_global $STACKTOP
   (get_local $2)
  )
 )
 (func $_combine_pulses (; 233 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $3)
     (get_local $2)
    )
    (block
     (i32.store
      (i32.add
       (get_local $0)
       (i32.shl
        (get_local $3)
        (i32.const 2)
       )
      )
      (i32.add
       (i32.load
        (i32.add
         (get_local $1)
         (i32.shl
          (tee_local $4
           (i32.shl
            (get_local $3)
            (i32.const 1)
           )
          )
          (i32.const 2)
         )
        )
       )
       (i32.load
        (i32.add
         (get_local $1)
         (i32.shl
          (i32.or
           (get_local $4)
           (i32.const 1)
          )
          (i32.const 2)
         )
        )
       )
      )
     )
     (set_local $3
      (i32.add
       (get_local $3)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
 )
 (func $_encode_split (; 234 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (if
   (i32.le_s
    (get_local $2)
    (i32.const 0)
   )
   (return)
  )
  (call $_ec_enc_icdf
   (get_local $0)
   (get_local $1)
   (i32.add
    (get_local $3)
    (i32.load8_u
     (i32.add
      (get_local $2)
      (i32.const 27200)
     )
    )
   )
   (i32.const 8)
  )
 )
 (func $_silk_shell_decoder (; 235 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (set_local $3
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.const 32)
   )
  )
  (set_local $5
   (i32.add
    (get_local $3)
    (i32.const 16)
   )
  )
  (set_local $7
   (i32.add
    (tee_local $4
     (i32.add
      (get_local $3)
      (i32.const 24)
     )
    )
    (i32.const 2)
   )
  )
  (call $_decode_split
   (get_local $4)
   (get_local $7)
   (get_local $1)
   (get_local $2)
   (i32.const 27040)
  )
  (call $_decode_split
   (get_local $5)
   (tee_local $6
    (i32.add
     (get_local $5)
     (i32.const 2)
    )
   )
   (get_local $1)
   (i32.load16_s
    (get_local $4)
   )
   (i32.const 26880)
  )
  (call $_decode_split
   (get_local $3)
   (tee_local $2
    (i32.add
     (get_local $3)
     (i32.const 2)
    )
   )
   (get_local $1)
   (i32.load16_s
    (get_local $5)
   )
   (i32.const 26720)
  )
  (call $_decode_split
   (get_local $0)
   (i32.add
    (get_local $0)
    (i32.const 2)
   )
   (get_local $1)
   (i32.load16_s
    (get_local $3)
   )
   (i32.const 26560)
  )
  (call $_decode_split
   (i32.add
    (get_local $0)
    (i32.const 4)
   )
   (i32.add
    (get_local $0)
    (i32.const 6)
   )
   (get_local $1)
   (i32.load16_s
    (get_local $2)
   )
   (i32.const 26560)
  )
  (call $_decode_split
   (tee_local $4
    (i32.add
     (get_local $3)
     (i32.const 4)
    )
   )
   (tee_local $2
    (i32.add
     (get_local $3)
     (i32.const 6)
    )
   )
   (get_local $1)
   (i32.load16_s
    (get_local $6)
   )
   (i32.const 26720)
  )
  (call $_decode_split
   (i32.add
    (get_local $0)
    (i32.const 8)
   )
   (i32.add
    (get_local $0)
    (i32.const 10)
   )
   (get_local $1)
   (i32.load16_s
    (get_local $4)
   )
   (i32.const 26560)
  )
  (call $_decode_split
   (i32.add
    (get_local $0)
    (i32.const 12)
   )
   (i32.add
    (get_local $0)
    (i32.const 14)
   )
   (get_local $1)
   (i32.load16_s
    (get_local $2)
   )
   (i32.const 26560)
  )
  (call $_decode_split
   (tee_local $8
    (i32.add
     (get_local $5)
     (i32.const 4)
    )
   )
   (tee_local $6
    (i32.add
     (get_local $5)
     (i32.const 6)
    )
   )
   (get_local $1)
   (i32.load16_s
    (get_local $7)
   )
   (i32.const 26880)
  )
  (call $_decode_split
   (tee_local $4
    (i32.add
     (get_local $3)
     (i32.const 8)
    )
   )
   (tee_local $2
    (i32.add
     (get_local $3)
     (i32.const 10)
    )
   )
   (get_local $1)
   (i32.load16_s
    (get_local $8)
   )
   (i32.const 26720)
  )
  (call $_decode_split
   (i32.add
    (get_local $0)
    (i32.const 16)
   )
   (i32.add
    (get_local $0)
    (i32.const 18)
   )
   (get_local $1)
   (i32.load16_s
    (get_local $4)
   )
   (i32.const 26560)
  )
  (call $_decode_split
   (i32.add
    (get_local $0)
    (i32.const 20)
   )
   (i32.add
    (get_local $0)
    (i32.const 22)
   )
   (get_local $1)
   (i32.load16_s
    (get_local $2)
   )
   (i32.const 26560)
  )
  (call $_decode_split
   (tee_local $4
    (i32.add
     (get_local $3)
     (i32.const 12)
    )
   )
   (tee_local $2
    (i32.add
     (get_local $3)
     (i32.const 14)
    )
   )
   (get_local $1)
   (i32.load16_s
    (get_local $6)
   )
   (i32.const 26720)
  )
  (call $_decode_split
   (i32.add
    (get_local $0)
    (i32.const 24)
   )
   (i32.add
    (get_local $0)
    (i32.const 26)
   )
   (get_local $1)
   (i32.load16_s
    (get_local $4)
   )
   (i32.const 26560)
  )
  (call $_decode_split
   (i32.add
    (get_local $0)
    (i32.const 28)
   )
   (i32.add
    (get_local $0)
    (i32.const 30)
   )
   (get_local $1)
   (i32.load16_s
    (get_local $2)
   )
   (i32.const 26560)
  )
  (set_global $STACKTOP
   (get_local $3)
  )
 )
 (func $_decode_split (; 236 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (if
   (i32.gt_s
    (get_local $3)
    (i32.const 0)
   )
   (block
    (set_local $5
     (call $_ec_dec_icdf
      (get_local $2)
      (i32.add
       (get_local $4)
       (i32.load8_u
        (i32.add
         (get_local $3)
         (i32.const 27200)
        )
       )
      )
      (i32.const 8)
     )
    )
    (i32.store16
     (get_local $0)
     (get_local $5)
    )
    (i32.store16
     (get_local $1)
     (i32.sub
      (get_local $3)
      (get_local $5)
     )
    )
   )
   (block
    (i32.store16
     (get_local $0)
     (i32.const 0)
    )
    (i32.store16
     (get_local $1)
     (i32.const 0)
    )
   )
  )
 )
 (func $_silk_VAD_Init (; 237 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (i64.store align=4
   (get_local $0)
   (i64.const 0)
  )
  (i64.store offset=8 align=4
   (get_local $0)
   (i64.const 0)
  )
  (i64.store offset=16 align=4
   (get_local $0)
   (i64.const 0)
  )
  (i64.store offset=24 align=4
   (get_local $0)
   (i64.const 0)
  )
  (i64.store offset=32 align=4
   (get_local $0)
   (i64.const 0)
  )
  (i64.store offset=40 align=4
   (get_local $0)
   (i64.const 0)
  )
  (i64.store offset=48 align=4
   (get_local $0)
   (i64.const 0)
  )
  (i64.store offset=56 align=4
   (get_local $0)
   (i64.const 0)
  )
  (i64.store align=4
   (i32.sub
    (get_local $0)
    (i32.const -64)
   )
   (i64.const 0)
  )
  (i64.store offset=72 align=4
   (get_local $0)
   (i64.const 0)
  )
  (i64.store offset=80 align=4
   (get_local $0)
   (i64.const 0)
  )
  (i64.store offset=88 align=4
   (get_local $0)
   (i64.const 0)
  )
  (i64.store offset=96 align=4
   (get_local $0)
   (i64.const 0)
  )
  (i64.store offset=104 align=4
   (get_local $0)
   (i64.const 0)
  )
  (loop $while-in
   (if
    (i32.ne
     (get_local $1)
     (i32.const 4)
    )
    (block
     (set_local $3
      (call $_silk_max_32_344
       (i32.div_u
        (i32.const 50)
        (tee_local $2
         (i32.add
          (get_local $1)
          (i32.const 1)
         )
        )
       )
      )
     )
     (i32.store
      (i32.add
       (i32.add
        (get_local $0)
        (i32.const 92)
       )
       (i32.shl
        (get_local $1)
        (i32.const 2)
       )
      )
      (get_local $3)
     )
     (set_local $1
      (get_local $2)
     )
     (br $while-in)
    )
   )
  )
  (set_local $1
   (i32.const 0)
  )
  (loop $while-in1
   (if
    (i32.ne
     (get_local $1)
     (i32.const 4)
    )
    (block
     (i32.store
      (i32.add
       (i32.add
        (get_local $0)
        (i32.const 60)
       )
       (i32.shl
        (get_local $1)
        (i32.const 2)
       )
      )
      (tee_local $2
       (i32.mul
        (i32.load
         (i32.add
          (i32.add
           (get_local $0)
           (i32.const 92)
          )
          (i32.shl
           (get_local $1)
           (i32.const 2)
          )
         )
        )
        (i32.const 100)
       )
      )
     )
     (i32.store
      (i32.add
       (i32.add
        (get_local $0)
        (i32.const 76)
       )
       (i32.shl
        (get_local $1)
        (i32.const 2)
       )
      )
      (i32.div_s
       (i32.const 2147483647)
       (get_local $2)
      )
     )
     (set_local $1
      (i32.add
       (get_local $1)
       (i32.const 1)
      )
     )
     (br $while-in1)
    )
   )
  )
  (i32.store offset=108
   (get_local $0)
   (i32.const 15)
  )
  (set_local $1
   (i32.const 0)
  )
  (loop $while-in3
   (if
    (i32.ne
     (get_local $1)
     (i32.const 4)
    )
    (block
     (i32.store
      (i32.add
       (i32.add
        (get_local $0)
        (i32.const 40)
       )
       (i32.shl
        (get_local $1)
        (i32.const 2)
       )
      )
      (i32.const 25600)
     )
     (set_local $1
      (i32.add
       (get_local $1)
       (i32.const 1)
      )
     )
     (br $while-in3)
    )
   )
  )
  (i32.const 0)
 )
 (func $_silk_max_32_344 (; 238 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (if (result i32)
   (i32.gt_s
    (get_local $0)
    (i32.const 1)
   )
   (get_local $0)
   (i32.const 1)
  )
 )
 (func $_silk_VAD_GetSA_Q8_c (; 239 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (set_local $9
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.const 48)
   )
  )
  (if
   (i32.ge_s
    (tee_local $8
     (i32.load
      (tee_local $16
       (i32.add
        (get_local $0)
        (i32.const 4584)
       )
      )
     )
    )
    (i32.const 321)
   )
   (call $_celt_fatal
    (i32.const 45769)
    (i32.const 45828)
    (i32.const 104)
   )
  )
  (if
   (i32.ne
    (get_local $8)
    (i32.and
     (get_local $8)
     (i32.const -8)
    )
   )
   (call $_celt_fatal
    (i32.const 45839)
    (i32.const 45828)
    (i32.const 106)
   )
  )
  (set_local $13
   (i32.add
    (get_local $9)
    (i32.const 32)
   )
  )
  (set_local $17
   (i32.add
    (get_local $9)
    (i32.const 16)
   )
  )
  (i32.store
   (get_local $9)
   (i32.const 0)
  )
  (i32.store offset=4
   (get_local $9)
   (tee_local $6
    (i32.add
     (tee_local $2
      (i32.shr_s
       (get_local $8)
       (i32.const 3)
      )
     )
     (tee_local $11
      (i32.shr_s
       (get_local $8)
       (i32.const 2)
      )
     )
    )
   )
  )
  (i32.store offset=8
   (get_local $9)
   (tee_local $5
    (i32.add
     (get_local $6)
     (get_local $2)
    )
   )
  )
  (i32.store offset=12
   (get_local $9)
   (tee_local $4
    (i32.add
     (get_local $5)
     (get_local $11)
    )
   )
  )
  (set_local $7
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (i32.add
        (get_local $4)
        (tee_local $3
         (i32.shr_s
          (get_local $8)
          (i32.const 1)
         )
        )
       )
       (i32.const 1)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (call $_silk_ana_filt_bank_1
   (get_local $1)
   (tee_local $12
    (i32.add
     (get_local $0)
     (i32.const 36)
    )
   )
   (get_local $7)
   (i32.add
    (get_local $7)
    (i32.shl
     (get_local $4)
     (i32.const 1)
    )
   )
   (get_local $8)
  )
  (call $_silk_ana_filt_bank_1
   (get_local $7)
   (i32.add
    (get_local $0)
    (i32.const 44)
   )
   (get_local $7)
   (i32.add
    (get_local $7)
    (i32.shl
     (get_local $5)
     (i32.const 1)
    )
   )
   (get_local $3)
  )
  (call $_silk_ana_filt_bank_1
   (get_local $7)
   (i32.add
    (get_local $0)
    (i32.const 52)
   )
   (get_local $7)
   (i32.add
    (get_local $7)
    (i32.shl
     (get_local $6)
     (i32.const 1)
    )
   )
   (get_local $11)
  )
  (set_local $5
   (i32.and
    (tee_local $1
     (i32.shr_s
      (i32.load16_s
       (tee_local $3
        (i32.add
         (get_local $7)
         (i32.shl
          (i32.add
           (get_local $2)
           (i32.const -1)
          )
          (i32.const 1)
         )
        )
       )
      )
      (i32.const 1)
     )
    )
    (i32.const 65535)
   )
  )
  (i32.store16
   (get_local $3)
   (get_local $5)
  )
  (loop $while-in
   (set_local $3
    (i32.add
     (get_local $2)
     (i32.const -1)
    )
   )
   (if
    (i32.gt_s
     (get_local $2)
     (i32.const 1)
    )
    (block
     (set_local $4
      (i32.shr_s
       (i32.load16_s
        (tee_local $2
         (i32.add
          (get_local $7)
          (i32.shl
           (i32.add
            (get_local $2)
            (i32.const -2)
           )
           (i32.const 1)
          )
         )
        )
       )
       (i32.const 1)
      )
     )
     (i32.store16
      (get_local $2)
      (get_local $4)
     )
     (i32.store16
      (i32.add
       (get_local $7)
       (i32.shl
        (get_local $3)
        (i32.const 1)
       )
      )
      (i32.sub
       (get_local $1)
       (get_local $4)
      )
     )
     (set_local $2
      (get_local $3)
     )
     (set_local $1
      (get_local $4)
     )
     (br $while-in)
    )
   )
  )
  (i32.store16
   (get_local $7)
   (i32.sub
    (i32.load16_u
     (get_local $7)
    )
    (i32.load16_u
     (tee_local $1
      (i32.add
       (get_local $0)
       (i32.const 92)
      )
     )
    )
   )
  )
  (i32.store16
   (get_local $1)
   (get_local $5)
  )
  (set_local $1
   (i32.const 0)
  )
  (loop $while-in1
   (if
    (i32.ne
     (get_local $10)
     (i32.const 4)
    )
    (block
     (set_local $3
      (i32.load
       (get_local $16)
      )
     )
     (set_local $2
      (call $_silk_min_int_238
       (i32.sub
        (i32.const 4)
        (get_local $10)
       )
       (i32.const 3)
      )
     )
     (set_local $11
      (i32.shr_s
       (i32.shr_s
        (get_local $3)
        (get_local $2)
       )
       (i32.const 2)
      )
     )
     (i32.store
      (tee_local $5
       (i32.add
        (get_local $13)
        (i32.shl
         (get_local $10)
         (i32.const 2)
        )
       )
      )
      (tee_local $2
       (i32.load
        (tee_local $4
         (i32.add
          (i32.add
           (get_local $0)
           (i32.const 60)
          )
          (i32.shl
           (get_local $10)
           (i32.const 2)
          )
         )
        )
       )
      )
     )
     (set_local $3
      (i32.add
       (get_local $9)
       (i32.shl
        (get_local $10)
        (i32.const 2)
       )
      )
     )
     (set_local $8
      (i32.const 0)
     )
     (set_local $14
      (i32.const 0)
     )
     (loop $while-in3
      (if
       (i32.ne
        (get_local $14)
        (i32.const 4)
       )
       (block
        (set_local $15
         (i32.const 0)
        )
        (set_local $1
         (i32.const 0)
        )
        (loop $while-in5
         (if
          (i32.lt_s
           (get_local $15)
           (get_local $11)
          )
          (block
           (set_local $6
            (i32.shr_s
             (i32.load16_s
              (i32.add
               (get_local $7)
               (i32.shl
                (i32.add
                 (i32.add
                  (i32.load
                   (get_local $3)
                  )
                  (get_local $15)
                 )
                 (get_local $8)
                )
                (i32.const 1)
               )
              )
             )
             (i32.const 3)
            )
           )
           (set_local $15
            (i32.add
             (get_local $15)
             (i32.const 1)
            )
           )
           (set_local $1
            (i32.add
             (get_local $1)
             (i32.mul
              (get_local $6)
              (get_local $6)
             )
            )
           )
           (br $while-in5)
          )
         )
        )
        (if
         (i32.lt_u
          (get_local $14)
          (i32.const 3)
         )
         (if
          (i32.ge_u
           (tee_local $2
            (i32.add
             (get_local $2)
             (get_local $1)
            )
           )
           (i32.const 2147483647)
          )
          (set_local $2
           (i32.const 2147483647)
          )
         )
         (if
          (i32.ge_u
           (tee_local $2
            (i32.add
             (get_local $2)
             (i32.shr_u
              (get_local $1)
              (i32.const 1)
             )
            )
           )
           (i32.const 2147483647)
          )
          (set_local $2
           (i32.const 2147483647)
          )
         )
        )
        (i32.store
         (get_local $5)
         (get_local $2)
        )
        (set_local $8
         (i32.add
          (get_local $8)
          (get_local $11)
         )
        )
        (set_local $14
         (i32.add
          (get_local $14)
          (i32.const 1)
         )
        )
        (br $while-in3)
       )
      )
     )
     (i32.store
      (get_local $4)
      (get_local $1)
     )
     (set_local $10
      (i32.add
       (get_local $10)
       (i32.const 1)
      )
     )
     (br $while-in1)
    )
   )
  )
  (call $_silk_VAD_GetNoiseLevels
   (get_local $13)
   (get_local $12)
  )
  (set_local $2
   (i32.const 0)
  )
  (set_local $6
   (i32.const 0)
  )
  (set_local $1
   (i32.const 0)
  )
  (loop $while-in7
   (if
    (i32.ne
     (get_local $6)
     (i32.const 4)
    )
    (block
     (if
      (i32.gt_s
       (tee_local $12
        (i32.sub
         (tee_local $4
          (i32.load
           (i32.add
            (get_local $13)
            (i32.shl
             (get_local $6)
             (i32.const 2)
            )
           )
          )
         )
         (tee_local $3
          (i32.load
           (i32.add
            (i32.add
             (get_local $0)
             (i32.const 96)
            )
            (i32.shl
             (get_local $6)
             (i32.const 2)
            )
           )
          )
         )
        )
       )
       (i32.const 0)
      )
      (block
       (i32.store
        (i32.add
         (get_local $17)
         (i32.shl
          (get_local $6)
          (i32.const 2)
         )
        )
        (tee_local $3
         (if (result i32)
          (i32.lt_u
           (get_local $4)
           (i32.const 8388608)
          )
          (i32.div_s
           (i32.shl
            (get_local $4)
            (i32.const 8)
           )
           (i32.add
            (get_local $3)
            (i32.const 1)
           )
          )
          (i32.div_s
           (get_local $4)
           (i32.add
            (i32.shr_s
             (get_local $3)
             (i32.const 8)
            )
            (i32.const 1)
           )
          )
         )
        )
       )
       (set_local $4
        (i32.shr_s
         (i32.add
          (i32.shl
           (call $_silk_lin2log
            (get_local $3)
           )
           (i32.const 16)
          )
          (i32.const -67108864)
         )
         (i32.const 16)
        )
       )
       (set_local $3
        (if (result i32)
         (i32.lt_s
          (get_local $12)
          (i32.const 1048576)
         )
         (block (result i32)
          (set_local $5
           (i32.mul
            (i32.shr_s
             (i32.shl
              (call $_silk_SQRT_APPROX
               (get_local $12)
              )
              (i32.const 6)
             )
             (i32.const 16)
            )
            (get_local $4)
           )
          )
          (set_local $3
           (i32.mul
            (i32.and
             (i32.shl
              (call $_silk_SQRT_APPROX
               (get_local $12)
              )
              (i32.const 6)
             )
             (i32.const 65472)
            )
            (get_local $4)
           )
          )
          (i32.shr_s
           (i32.add
            (i32.shl
             (get_local $5)
             (i32.const 16)
            )
            (get_local $3)
           )
           (i32.const 16)
          )
         )
         (get_local $4)
        )
       )
       (set_local $2
        (i32.add
         (get_local $2)
         (i32.add
          (i32.mul
           (i32.shr_s
            (tee_local $2
             (i32.load
              (i32.add
               (i32.shl
                (get_local $6)
                (i32.const 2)
               )
               (i32.const 27280)
              )
             )
            )
            (i32.const 16)
           )
           (get_local $3)
          )
          (i32.shr_s
           (i32.mul
            (i32.and
             (get_local $2)
             (i32.const 65535)
            )
            (get_local $3)
           )
           (i32.const 16)
          )
         )
        )
       )
       (set_local $1
        (i32.add
         (get_local $1)
         (i32.mul
          (get_local $4)
          (get_local $4)
         )
        )
       )
      )
      (i32.store
       (i32.add
        (get_local $17)
        (i32.shl
         (get_local $6)
         (i32.const 2)
        )
       )
       (i32.const 256)
      )
     )
     (set_local $6
      (i32.add
       (get_local $6)
       (i32.const 1)
      )
     )
     (br $while-in7)
    )
   )
  )
  (set_local $3
   (i32.add
    (i32.shr_s
     (i32.mul
      (i32.shr_s
       (i32.mul
        (call $_silk_SQRT_APPROX
         (i32.div_s
          (get_local $1)
          (i32.const 4)
         )
        )
        (i32.const 196608)
       )
       (i32.const 16)
      )
      (i32.const 45000)
     )
     (i32.const 16)
    )
    (i32.const -128)
   )
  )
  (set_local $1
   (i32.add
    (i32.shl
     (call $_silk_sigm_Q15
      (get_local $2)
     )
     (i32.const 1)
    )
    (i32.const -32768)
   )
  )
  (i32.store
   (i32.add
    (get_local $0)
    (i32.const 4712)
   )
   (get_local $1)
  )
  (set_local $4
   (i32.const 0)
  )
  (set_local $2
   (i32.const 0)
  )
  (loop $while-in9
   (if
    (i32.ne
     (get_local $2)
     (i32.const 4)
    )
    (block
     (set_local $4
      (i32.add
       (get_local $4)
       (i32.mul
        (tee_local $1
         (i32.add
          (get_local $2)
          (i32.const 1)
         )
        )
        (i32.shr_s
         (i32.sub
          (i32.load
           (i32.add
            (get_local $13)
            (i32.shl
             (get_local $2)
             (i32.const 2)
            )
           )
          )
          (i32.load
           (i32.add
            (i32.add
             (get_local $0)
             (i32.const 96)
            )
            (i32.shl
             (get_local $2)
             (i32.const 2)
            )
           )
          )
         )
         (i32.const 4)
        )
       )
      )
     )
     (set_local $2
      (get_local $1)
     )
     (br $while-in9)
    )
   )
  )
  (set_local $3
   (call $_silk_sigm_Q15
    (get_local $3)
   )
  )
  (if
   (i32.lt_s
    (tee_local $5
     (i32.shr_s
      (get_local $4)
      (i32.eq
       (tee_local $2
        (i32.load
         (get_local $16)
        )
       )
       (i32.mul
        (tee_local $1
         (i32.load
          (tee_local $4
           (i32.add
            (get_local $0)
            (i32.const 4576)
           )
          )
         )
        )
        (i32.const 20)
       )
      )
     )
    )
    (i32.const 1)
   )
   (set_local $3
    (i32.shr_s
     (get_local $3)
     (i32.const 1)
    )
   )
   (if
    (i32.lt_s
     (get_local $5)
     (i32.const 16384)
    )
    (block
     (set_local $3
      (i32.add
       (i32.mul
        (i32.shr_s
         (tee_local $2
          (i32.add
           (call $_silk_SQRT_APPROX
            (i32.shl
             (get_local $5)
             (i32.const 16)
            )
           )
           (i32.const 32768)
          )
         )
         (i32.const 16)
        )
        (tee_local $1
         (i32.shr_s
          (i32.shl
           (get_local $3)
           (i32.const 16)
          )
          (i32.const 16)
         )
        )
       )
       (i32.shr_s
        (i32.mul
         (i32.and
          (get_local $2)
          (i32.const 65535)
         )
         (get_local $1)
        )
        (i32.const 16)
       )
      )
     )
     (set_local $1
      (i32.load
       (get_local $4)
      )
     )
     (set_local $2
      (i32.load
       (get_local $16)
      )
     )
    )
   )
  )
  (set_local $4
   (call $_silk_min_int_238
    (i32.shr_s
     (get_local $3)
     (i32.const 7)
    )
    (i32.const 255)
   )
  )
  (i32.store
   (i32.add
    (get_local $0)
    (i32.const 4532)
   )
   (get_local $4)
  )
  (set_local $4
   (i32.shr_s
    (i32.add
     (i32.shl
      (i32.mul
       (i32.shr_s
        (get_local $3)
        (i32.const 16)
       )
       (tee_local $4
        (i32.shr_s
         (i32.shl
          (get_local $3)
          (i32.const 16)
         )
         (i32.const 16)
        )
       )
      )
      (i32.const 16)
     )
     (i32.mul
      (i32.and
       (get_local $3)
       (i32.const 65535)
      )
      (get_local $4)
     )
    )
    (if (result i32)
     (i32.eq
      (get_local $2)
      (i32.mul
       (get_local $1)
       (i32.const 10)
      )
     )
     (i32.const 21)
     (i32.const 20)
    )
   )
  )
  (set_local $5
   (i32.const 0)
  )
  (loop $while-in11
   (if
    (i32.ne
     (get_local $5)
     (i32.const 4)
    )
    (block
     (set_local $3
      (i32.sub
       (i32.load
        (i32.add
         (get_local $17)
         (i32.shl
          (get_local $5)
          (i32.const 2)
         )
        )
       )
       (tee_local $1
        (i32.load
         (tee_local $2
          (i32.add
           (i32.add
            (get_local $0)
            (i32.const 76)
           )
           (i32.shl
            (get_local $5)
            (i32.const 2)
           )
          )
         )
        )
       )
      )
     )
     (i32.store
      (get_local $2)
      (tee_local $1
       (i32.add
        (get_local $1)
        (i32.add
         (i32.mul
          (i32.shr_s
           (get_local $3)
           (i32.const 16)
          )
          (get_local $4)
         )
         (i32.shr_s
          (i32.mul
           (i32.and
            (get_local $3)
            (i32.const 65535)
           )
           (get_local $4)
          )
          (i32.const 16)
         )
        )
       )
      )
     )
     (set_local $1
      (call $_silk_sigm_Q15
       (i32.shr_s
        (i32.add
         (i32.mul
          (call $_silk_lin2log
           (get_local $1)
          )
          (i32.const 3)
         )
         (i32.const -5120)
        )
        (i32.const 4)
       )
      )
     )
     (i32.store
      (i32.add
       (i32.add
        (get_local $0)
        (i32.const 4696)
       )
       (i32.shl
        (get_local $5)
        (i32.const 2)
       )
      )
      (get_local $1)
     )
     (set_local $5
      (i32.add
       (get_local $5)
       (i32.const 1)
      )
     )
     (br $while-in11)
    )
   )
  )
  (set_global $STACKTOP
   (get_local $9)
  )
 )
 (func $_silk_VAD_GetNoiseLevels (; 240 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (if
   (i32.lt_s
    (tee_local $2
     (i32.load
      (tee_local $4
       (i32.add
        (get_local $1)
        (i32.const 108)
       )
      )
     )
    )
    (i32.const 1000)
   )
   (block
    (set_local $7
     (i32.div_s
      (i32.const 32767)
      (i32.add
       (i32.shr_s
        (get_local $2)
        (i32.const 4)
       )
       (i32.const 1)
      )
     )
    )
    (i32.store
     (get_local $4)
     (i32.add
      (get_local $2)
      (i32.const 1)
     )
    )
   )
  )
  (set_local $4
   (i32.const 0)
  )
  (loop $while-in
   (if
    (i32.ne
     (get_local $4)
     (i32.const 4)
    )
    (block
     (set_local $3
      (i32.load
       (tee_local $8
        (i32.add
         (i32.add
          (get_local $1)
          (i32.const 60)
         )
         (i32.shl
          (get_local $4)
          (i32.const 2)
         )
        )
       )
      )
     )
     (set_local $5
      (i32.div_u
       (i32.const 2147483647)
       (if (result i32)
        (i32.lt_u
         (tee_local $2
          (i32.add
           (i32.load
            (i32.add
             (get_local $0)
             (i32.shl
              (get_local $4)
              (i32.const 2)
             )
            )
           )
           (i32.load
            (i32.add
             (i32.add
              (get_local $1)
              (i32.const 92)
             )
             (i32.shl
              (get_local $4)
              (i32.const 2)
             )
            )
           )
          )
         )
         (i32.const 2147483647)
        )
        (get_local $2)
        (tee_local $2
         (i32.const 2147483647)
        )
       )
      )
     )
     (set_local $3
      (call $_silk_max_int
       (tee_local $2
        (if (result i32)
         (i32.gt_s
          (get_local $2)
          (i32.shl
           (get_local $3)
           (i32.const 3)
          )
         )
         (i32.const 128)
         (if (result i32)
          (i32.lt_s
           (get_local $2)
           (get_local $3)
          )
          (i32.const 1024)
          (i32.or
           (i32.shl
            (i32.shr_s
             (i32.add
              (i32.add
               (tee_local $6
                (i32.mul
                 (i32.shr_u
                  (get_local $5)
                  (i32.const 16)
                 )
                 (tee_local $2
                  (i32.shr_s
                   (i32.shl
                    (get_local $3)
                    (i32.const 16)
                   )
                   (i32.const 16)
                  )
                 )
                )
               )
               (i32.shr_s
                (tee_local $2
                 (i32.mul
                  (i32.and
                   (get_local $5)
                   (i32.const 65535)
                  )
                  (get_local $2)
                 )
                )
                (i32.const 16)
               )
              )
              (tee_local $3
               (i32.mul
                (get_local $5)
                (i32.shr_s
                 (i32.add
                  (i32.shr_s
                   (get_local $3)
                   (i32.const 15)
                  )
                  (i32.const 1)
                 )
                 (i32.const 1)
                )
               )
              )
             )
             (i32.const 16)
            )
            (i32.const 11)
           )
           (i32.and
            (i32.shr_u
             (i32.add
              (i32.add
               (get_local $6)
               (i32.shr_u
                (get_local $2)
                (i32.const 16)
               )
              )
              (get_local $3)
             )
             (i32.const 5)
            )
            (i32.const 2047)
           )
          )
         )
        )
       )
       (get_local $7)
      )
     )
     (set_local $2
      (i32.sub
       (get_local $5)
       (tee_local $6
        (i32.load
         (tee_local $5
          (i32.add
           (i32.add
            (get_local $1)
            (i32.const 76)
           )
           (i32.shl
            (get_local $4)
            (i32.const 2)
           )
          )
         )
        )
       )
      )
     )
     (i32.store
      (get_local $5)
      (tee_local $2
       (i32.add
        (get_local $6)
        (i32.add
         (i32.mul
          (i32.shr_s
           (get_local $2)
           (i32.const 16)
          )
          (tee_local $3
           (i32.shr_s
            (i32.shl
             (get_local $3)
             (i32.const 16)
            )
            (i32.const 16)
           )
          )
         )
         (i32.shr_s
          (i32.mul
           (i32.and
            (get_local $2)
            (i32.const 65535)
           )
           (get_local $3)
          )
          (i32.const 16)
         )
        )
       )
      )
     )
     (i32.store
      (get_local $8)
      (if (result i32)
       (i32.lt_s
        (tee_local $2
         (i32.div_s
          (i32.const 2147483647)
          (get_local $2)
         )
        )
        (i32.const 16777215)
       )
       (get_local $2)
       (i32.const 16777215)
      )
     )
     (set_local $4
      (i32.add
       (get_local $4)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
 )
 (func $_silk_control_audio_bandwidth (; 241 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (if
   (i32.eqz
    (tee_local $3
     (i32.load
      (i32.add
       (get_local $0)
       (i32.const 4576)
      )
     )
    )
   )
   (set_local $3
    (i32.load offset=32
     (get_local $0)
    )
   )
  )
  (if
   (i32.eqz
    (tee_local $2
     (i32.shl
      (get_local $3)
      (i32.const 16)
     )
    )
   )
   (return
    (i32.div_s
     (if (result i32)
      (i32.lt_s
       (tee_local $1
        (i32.load
         (i32.add
          (get_local $0)
          (i32.const 4572)
         )
        )
       )
       (tee_local $0
        (i32.load
         (i32.add
          (get_local $0)
          (i32.const 4556)
         )
        )
       )
      )
      (get_local $1)
      (get_local $0)
     )
     (i32.const 1000)
    )
   )
  )
  (if
   (i32.eqz
    (i32.or
     (i32.gt_s
      (tee_local $4
       (i32.mul
        (i32.shr_s
         (get_local $2)
         (i32.const 16)
        )
        (i32.const 1000)
       )
      )
      (tee_local $2
       (i32.load
        (i32.add
         (get_local $0)
         (i32.const 4556)
        )
       )
      )
     )
     (i32.gt_s
      (get_local $4)
      (tee_local $5
       (i32.load
        (i32.add
         (get_local $0)
         (i32.const 4564)
        )
       )
      )
     )
    )
   )
   (if
    (i32.ge_s
     (get_local $4)
     (i32.load
      (i32.add
       (get_local $0)
       (i32.const 4568)
      )
     )
    )
    (block
     (if
      (i32.gt_s
       (tee_local $2
        (i32.load
         (tee_local $5
          (i32.add
           (get_local $0)
           (i32.const 24)
          )
         )
        )
       )
       (i32.const 255)
      )
      (i32.store offset=28
       (get_local $0)
       (i32.const 0)
      )
     )
     (if
      (i32.eqz
       (i32.load
        (i32.add
         (get_local $0)
         (i32.const 4536)
        )
       )
      )
      (if
       (i32.eqz
        (i32.load
         (i32.sub
          (get_local $1)
          (i32.const -64)
         )
        )
       )
       (return
        (get_local $3)
       )
      )
     )
     (if
      (i32.gt_s
       (get_local $4)
       (tee_local $6
        (i32.load
         (i32.add
          (get_local $0)
          (i32.const 4572)
         )
        )
       )
      )
      (block
       (set_local $0
        (if (result i32)
         (i32.load
          (tee_local $4
           (i32.add
            (get_local $0)
            (i32.const 28)
           )
          )
         )
         (get_local $2)
         (block (result i32)
          (i32.store
           (get_local $5)
           (i32.const 256)
          )
          (i64.store offset=16 align=4
           (get_local $0)
           (i64.const 0)
          )
          (i32.const 256)
         )
        )
       )
       (if
        (i32.load
         (i32.sub
          (get_local $1)
          (i32.const -64)
         )
        )
        (block
         (i32.store
          (get_local $4)
          (i32.const 0)
         )
         (return
          (if (result i32)
           (i32.eq
            (get_local $3)
            (i32.const 16)
           )
           (i32.const 12)
           (i32.const 8)
          )
         )
        )
       )
       (if
        (i32.lt_s
         (get_local $0)
         (i32.const 1)
        )
        (block
         (i32.store offset=88
          (get_local $1)
          (i32.const 1)
         )
         (set_local $0
          (i32.load
           (tee_local $2
            (i32.add
             (get_local $1)
             (i32.const 56)
            )
           )
          )
         )
         (i32.store
          (get_local $2)
          (i32.sub
           (get_local $0)
           (i32.div_s
            (i32.mul
             (get_local $0)
             (i32.const 5)
            )
            (i32.add
             (i32.load offset=24
              (get_local $1)
             )
             (i32.const 5)
            )
           )
          )
         )
        )
        (i32.store
         (get_local $4)
         (i32.const -2)
        )
       )
       (return
        (get_local $3)
       )
      )
     )
     (if
      (i32.ge_s
       (get_local $4)
       (get_local $6)
      )
      (block
       (if
        (i32.ge_s
         (i32.load
          (tee_local $0
           (i32.add
            (get_local $0)
            (i32.const 28)
           )
          )
         )
         (i32.const 0)
        )
        (return
         (get_local $3)
        )
       )
       (i32.store
        (get_local $0)
        (i32.const 1)
       )
       (return
        (get_local $3)
       )
      )
     )
     (if
      (i32.load
       (i32.sub
        (get_local $1)
        (i32.const -64)
       )
      )
      (block
       (i32.store
        (get_local $5)
        (i32.const 0)
       )
       (i64.store offset=16 align=4
        (get_local $0)
        (i64.const 0)
       )
       (i32.store offset=28
        (get_local $0)
        (i32.const 1)
       )
       (return
        (if (result i32)
         (i32.eq
          (get_local $3)
          (i32.const 8)
         )
         (i32.const 12)
         (i32.const 16)
        )
       )
      )
     )
     (if
      (i32.load
       (tee_local $0
        (i32.add
         (get_local $0)
         (i32.const 28)
        )
       )
      )
      (i32.store
       (get_local $0)
       (i32.const 1)
      )
      (block
       (i32.store offset=88
        (get_local $1)
        (i32.const 1)
       )
       (set_local $0
        (i32.load
         (tee_local $2
          (i32.add
           (get_local $1)
           (i32.const 56)
          )
         )
        )
       )
       (i32.store
        (get_local $2)
        (i32.sub
         (get_local $0)
         (i32.div_s
          (i32.mul
           (get_local $0)
           (i32.const 5)
          )
          (i32.add
           (i32.load offset=24
            (get_local $1)
           )
           (i32.const 5)
          )
         )
        )
       )
      )
     )
     (return
      (get_local $3)
     )
    )
   )
  )
  (i32.div_s
   (if (result i32)
    (i32.gt_s
     (if (result i32)
      (i32.lt_s
       (get_local $2)
       (get_local $5)
      )
      (get_local $2)
      (tee_local $2
       (get_local $5)
      )
     )
     (tee_local $0
      (i32.load
       (i32.add
        (get_local $0)
        (i32.const 4568)
       )
      )
     )
    )
    (get_local $2)
    (get_local $0)
   )
   (i32.const 1000)
  )
 )
 (func $_silk_quant_LTP_gains (; 242 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (param $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local $26 i32)
  (local $27 i32)
  (set_local $11
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.const 16)
   )
  )
  (set_local $19
   (i32.add
    (get_local $11)
    (i32.const 12)
   )
  )
  (set_local $20
   (i32.add
    (get_local $11)
    (i32.const 8)
   )
  )
  (set_local $21
   (i32.add
    (get_local $11)
    (i32.const 4)
   )
  )
  (set_local $16
   (i32.const 2147483647)
  )
  (loop $while-in
   (if
    (i32.ne
     (get_local $10)
     (i32.const 3)
    )
    (block
     (set_local $23
      (i32.load
       (i32.add
        (i32.shl
         (get_local $10)
         (i32.const 2)
        )
        (i32.const 40832)
       )
      )
     )
     (set_local $24
      (i32.load
       (i32.add
        (i32.shl
         (get_local $10)
         (i32.const 2)
        )
        (i32.const 40844)
       )
      )
     )
     (set_local $25
      (i32.load
       (i32.add
        (i32.shl
         (get_local $10)
         (i32.const 2)
        )
        (i32.const 40856)
       )
      )
     )
     (set_local $26
      (i32.load8_s
       (i32.add
        (get_local $10)
        (i32.const 45679)
       )
      )
     )
     (set_local $13
      (i32.load
       (get_local $3)
      )
     )
     (set_local $15
      (i32.const 0)
     )
     (set_local $9
      (i32.const 0)
     )
     (set_local $17
      (get_local $6)
     )
     (set_local $18
      (get_local $5)
     )
     (set_local $12
      (i32.const 0)
     )
     (loop $while-in1
      (if
       (i32.lt_s
        (get_local $15)
        (get_local $8)
       )
       (block
        (set_local $14
         (i32.add
          (call $_silk_log2lin
           (i32.sub
            (i32.const 6229)
            (get_local $13)
           )
          )
          (i32.const -51)
         )
        )
        (call $_silk_VQ_WMat_EC_c
         (i32.add
          (get_local $19)
          (get_local $15)
         )
         (get_local $20)
         (get_local $21)
         (get_local $11)
         (get_local $18)
         (get_local $17)
         (get_local $24)
         (get_local $25)
         (get_local $23)
         (get_local $7)
         (get_local $14)
         (get_local $26)
        )
        (if
         (i32.ge_u
          (tee_local $12
           (i32.add
            (get_local $12)
            (i32.load
             (get_local $20)
            )
           )
          )
          (i32.const 2147483647)
         )
         (set_local $12
          (i32.const 2147483647)
         )
        )
        (if
         (i32.ge_u
          (tee_local $9
           (i32.add
            (get_local $9)
            (i32.load
             (get_local $21)
            )
           )
          )
          (i32.const 2147483647)
         )
         (set_local $9
          (i32.const 2147483647)
         )
        )
        (set_local $14
         (call $_silk_lin2log
          (tee_local $27
           (i32.add
            (i32.load
             (get_local $11)
            )
            (i32.const 51)
           )
          )
         )
        )
        (set_local $13
         (if (result i32)
          (i32.lt_s
           (i32.add
            (get_local $13)
            (get_local $14)
           )
           (i32.const 896)
          )
          (i32.const 0)
          (block (result i32)
           (set_local $14
            (call $_silk_lin2log
             (get_local $27)
            )
           )
           (i32.add
            (i32.add
             (get_local $13)
             (get_local $14)
            )
            (i32.const -896)
           )
          )
         )
        )
        (set_local $15
         (i32.add
          (get_local $15)
          (i32.const 1)
         )
        )
        (set_local $17
         (i32.add
          (get_local $17)
          (i32.const 20)
         )
        )
        (set_local $18
         (i32.add
          (get_local $18)
          (i32.const 100)
         )
        )
        (br $while-in1)
       )
      )
     )
     (if
      (i32.gt_s
       (get_local $9)
       (get_local $16)
      )
      (set_local $9
       (get_local $16)
      )
      (block
       (i32.store8
        (get_local $2)
        (get_local $10)
       )
       (drop
        (call $_memcpy
         (get_local $1)
         (get_local $19)
         (get_local $8)
        )
       )
       (set_local $22
        (get_local $13)
       )
      )
     )
     (set_local $16
      (get_local $9)
     )
     (set_local $10
      (i32.add
       (get_local $10)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (set_local $6
   (i32.load
    (i32.add
     (i32.shl
      (i32.load8_s
       (get_local $2)
      )
      (i32.const 2)
     )
     (i32.const 40844)
    )
   )
  )
  (set_local $9
   (i32.const 0)
  )
  (loop $while-in3
   (if
    (i32.lt_s
     (get_local $9)
     (get_local $8)
    )
    (block
     (set_local $5
      (i32.add
       (get_local $1)
       (get_local $9)
      )
     )
     (set_local $2
      (i32.mul
       (get_local $9)
       (i32.const 5)
      )
     )
     (set_local $7
      (i32.const 0)
     )
     (loop $while-in5
      (if
       (i32.ne
        (get_local $7)
        (i32.const 5)
       )
       (block
        (i32.store16
         (i32.add
          (get_local $0)
          (i32.shl
           (i32.add
            (get_local $2)
            (get_local $7)
           )
           (i32.const 1)
          )
         )
         (i32.shl
          (i32.load8_s
           (i32.add
            (get_local $6)
            (i32.add
             (i32.mul
              (i32.load8_s
               (get_local $5)
              )
              (i32.const 5)
             )
             (get_local $7)
            )
           )
          )
          (i32.const 7)
         )
        )
        (set_local $7
         (i32.add
          (get_local $7)
          (i32.const 1)
         )
        )
        (br $while-in5)
       )
      )
     )
     (set_local $9
      (i32.add
       (get_local $9)
       (i32.const 1)
      )
     )
     (br $while-in3)
    )
   )
  )
  (i32.store
   (get_local $3)
   (get_local $22)
  )
  (set_local $0
   (i32.mul
    (i32.shr_s
     (i32.add
      (i32.shl
       (call $_silk_lin2log
        (i32.shr_s
         (get_local $12)
         (if (result i32)
          (i32.eq
           (get_local $8)
           (i32.const 2)
          )
          (i32.const 1)
          (i32.const 2)
         )
        )
       )
       (i32.const 16)
      )
      (i32.const -125829120)
     )
     (i32.const 16)
    )
    (i32.const -3)
   )
  )
  (i32.store
   (get_local $4)
   (get_local $0)
  )
  (set_global $STACKTOP
   (get_local $11)
  )
 )
 (func $_silk_VQ_WMat_EC_c (; 243 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (param $8 i32) (param $9 i32) (param $10 i32) (param $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local $26 i32)
  (local $27 i32)
  (local $28 i32)
  (local $29 i32)
  (local $30 i32)
  (local $31 i32)
  (local $32 i32)
  (local $33 i32)
  (local $34 i32)
  (local $35 i32)
  (local $36 i32)
  (local $37 i32)
  (set_local $17
   (i32.shl
    (i32.load
     (get_local $5)
    )
    (i32.const 7)
   )
  )
  (set_local $18
   (i32.shl
    (i32.load offset=4
     (get_local $5)
    )
    (i32.const 7)
   )
  )
  (set_local $19
   (i32.shl
    (i32.load offset=8
     (get_local $5)
    )
    (i32.const 7)
   )
  )
  (set_local $20
   (i32.shl
    (i32.load offset=12
     (get_local $5)
    )
    (i32.const 7)
   )
  )
  (set_local $21
   (i32.shl
    (i32.load offset=16
     (get_local $5)
    )
    (i32.const 8)
   )
  )
  (i32.store
   (get_local $2)
   (i32.const 2147483647)
  )
  (i32.store
   (get_local $1)
   (i32.const 2147483647)
  )
  (i32.store8
   (get_local $0)
   (i32.const 0)
  )
  (set_local $22
   (i32.add
    (get_local $4)
    (i32.const 4)
   )
  )
  (set_local $23
   (i32.add
    (get_local $4)
    (i32.const 8)
   )
  )
  (set_local $24
   (i32.add
    (get_local $4)
    (i32.const 12)
   )
  )
  (set_local $25
   (i32.add
    (get_local $4)
    (i32.const 16)
   )
  )
  (set_local $26
   (i32.add
    (get_local $4)
    (i32.const 28)
   )
  )
  (set_local $27
   (i32.add
    (get_local $4)
    (i32.const 32)
   )
  )
  (set_local $28
   (i32.add
    (get_local $4)
    (i32.const 36)
   )
  )
  (set_local $29
   (i32.add
    (get_local $4)
    (i32.const 24)
   )
  )
  (set_local $30
   (i32.add
    (get_local $4)
    (i32.const 52)
   )
  )
  (set_local $31
   (i32.add
    (get_local $4)
    (i32.const 56)
   )
  )
  (set_local $32
   (i32.add
    (get_local $4)
    (i32.const 48)
   )
  )
  (set_local $33
   (i32.add
    (get_local $4)
    (i32.const 76)
   )
  )
  (set_local $34
   (i32.add
    (get_local $4)
    (i32.const 72)
   )
  )
  (set_local $35
   (i32.add
    (get_local $4)
    (i32.const 96)
   )
  )
  (set_local $36
   (i32.shr_s
    (i32.shl
     (get_local $9)
     (i32.const 16)
    )
    (i32.const 16)
   )
  )
  (set_local $5
   (i32.const 0)
  )
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $5)
     (get_local $11)
    )
    (block
     (set_local $16
      (i32.load8_u
       (i32.add
        (get_local $7)
        (get_local $5)
       )
      )
     )
     (if
      (i32.gt_s
       (tee_local $9
        (i32.add
         (i32.add
          (i32.add
           (i32.add
            (i32.add
             (i32.add
              (i32.mul
               (i32.shr_s
                (tee_local $37
                 (i32.add
                  (i32.shl
                   (i32.add
                    (i32.add
                     (i32.add
                      (i32.sub
                       (i32.mul
                        (i32.load
                         (get_local $22)
                        )
                        (tee_local $14
                         (i32.load8_s offset=1
                          (get_local $6)
                         )
                        )
                       )
                       (get_local $17)
                      )
                      (i32.mul
                       (i32.load
                        (get_local $23)
                       )
                       (tee_local $13
                        (i32.load8_s offset=2
                         (get_local $6)
                        )
                       )
                      )
                     )
                     (i32.mul
                      (i32.load
                       (get_local $24)
                      )
                      (tee_local $12
                       (i32.load8_s offset=3
                        (get_local $6)
                       )
                      )
                     )
                    )
                    (i32.mul
                     (i32.load
                      (get_local $25)
                     )
                     (tee_local $9
                      (i32.load8_s offset=4
                       (get_local $6)
                      )
                     )
                    )
                   )
                   (i32.const 1)
                  )
                  (i32.mul
                   (i32.load
                    (get_local $4)
                   )
                   (tee_local $15
                    (i32.load8_s
                     (get_local $6)
                    )
                   )
                  )
                 )
                )
                (i32.const 16)
               )
               (get_local $15)
              )
              (i32.shr_s
               (i32.mul
                (i32.and
                 (get_local $37)
                 (i32.const 65535)
                )
                (get_local $15)
               )
               (i32.const 16)
              )
             )
             (i32.const 32801)
            )
            (i32.add
             (i32.mul
              (i32.shr_s
               (tee_local $15
                (i32.add
                 (i32.shl
                  (i32.add
                   (i32.add
                    (i32.sub
                     (i32.mul
                      (i32.load
                       (get_local $26)
                      )
                      (get_local $13)
                     )
                     (get_local $18)
                    )
                    (i32.mul
                     (i32.load
                      (get_local $27)
                     )
                     (get_local $12)
                    )
                   )
                   (i32.mul
                    (i32.load
                     (get_local $28)
                    )
                    (get_local $9)
                   )
                  )
                  (i32.const 1)
                 )
                 (i32.mul
                  (i32.load
                   (get_local $29)
                  )
                  (get_local $14)
                 )
                )
               )
               (i32.const 16)
              )
              (get_local $14)
             )
             (i32.shr_s
              (i32.mul
               (i32.and
                (get_local $15)
                (i32.const 65535)
               )
               (get_local $14)
              )
              (i32.const 16)
             )
            )
           )
           (i32.add
            (i32.mul
             (i32.shr_s
              (tee_local $14
               (i32.add
                (i32.shl
                 (i32.add
                  (i32.sub
                   (i32.mul
                    (i32.load
                     (get_local $30)
                    )
                    (get_local $12)
                   )
                   (get_local $19)
                  )
                  (i32.mul
                   (i32.load
                    (get_local $31)
                   )
                   (get_local $9)
                  )
                 )
                 (i32.const 1)
                )
                (i32.mul
                 (i32.load
                  (get_local $32)
                 )
                 (get_local $13)
                )
               )
              )
              (i32.const 16)
             )
             (get_local $13)
            )
            (i32.shr_s
             (i32.mul
              (i32.and
               (get_local $14)
               (i32.const 65535)
              )
              (get_local $13)
             )
             (i32.const 16)
            )
           )
          )
          (i32.add
           (i32.mul
            (i32.shr_s
             (tee_local $13
              (i32.add
               (i32.shl
                (i32.sub
                 (i32.mul
                  (i32.load
                   (get_local $33)
                  )
                  (get_local $9)
                 )
                 (get_local $20)
                )
                (i32.const 1)
               )
               (i32.mul
                (i32.load
                 (get_local $34)
                )
                (get_local $12)
               )
              )
             )
             (i32.const 16)
            )
            (get_local $12)
           )
           (i32.shr_s
            (i32.mul
             (i32.and
              (get_local $13)
              (i32.const 65535)
             )
             (get_local $12)
            )
            (i32.const 16)
           )
          )
         )
         (i32.add
          (i32.mul
           (i32.shr_s
            (tee_local $12
             (i32.sub
              (i32.mul
               (i32.load
                (get_local $35)
               )
               (get_local $9)
              )
              (get_local $21)
             )
            )
            (i32.const 16)
           )
           (get_local $9)
          )
          (i32.shr_s
           (i32.mul
            (i32.and
             (get_local $12)
             (i32.const 65535)
            )
            (get_local $9)
           )
           (i32.const 16)
          )
         )
        )
       )
       (i32.const -1)
      )
      (block
       (set_local $12
        (i32.shl
         (i32.sub
          (get_local $16)
          (get_local $10)
         )
         (i32.const 11)
        )
       )
       (set_local $12
        (i32.shr_s
         (i32.add
          (i32.shl
           (call $_silk_lin2log
            (tee_local $9
             (i32.add
              (get_local $9)
              (if (result i32)
               (i32.gt_s
                (get_local $16)
                (get_local $10)
               )
               (get_local $12)
               (i32.const 0)
              )
             )
            )
           )
           (i32.const 16)
          )
          (i32.const -125829120)
         )
         (i32.const 16)
        )
       )
       (if
        (i32.le_s
         (tee_local $12
          (i32.add
           (i32.mul
            (get_local $36)
            (get_local $12)
           )
           (i32.shl
            (i32.load8_u
             (i32.add
              (get_local $8)
              (get_local $5)
             )
            )
            (i32.const 2)
           )
          )
         )
         (i32.load
          (get_local $2)
         )
        )
        (block
         (i32.store
          (get_local $2)
          (get_local $12)
         )
         (i32.store
          (get_local $1)
          (get_local $9)
         )
         (i32.store8
          (get_local $0)
          (get_local $5)
         )
         (i32.store
          (get_local $3)
          (get_local $16)
         )
        )
       )
      )
     )
     (set_local $6
      (i32.add
       (get_local $6)
       (i32.const 5)
      )
     )
     (set_local $5
      (i32.add
       (get_local $5)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
 )
 (func $_silk_HP_variable_cutoff (; 244 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (if
   (i32.ne
    (i32.load8_s
     (i32.add
      (get_local $0)
      (i32.const 4541)
     )
    )
    (i32.const 2)
   )
   (return)
  )
  (set_local $1
   (i32.add
    (call $_silk_lin2log
     (i32.div_s
      (i32.mul
       (i32.load
        (i32.add
         (get_local $0)
         (i32.const 4576)
        )
       )
       (i32.const 65536000)
      )
      (i32.load
       (i32.add
        (get_local $0)
        (i32.const 4544)
       )
      )
     )
    )
    (i32.const -2048)
   )
  )
  (set_local $3
   (i32.shr_s
    (i32.add
     (tee_local $4
      (i32.mul
       (i32.shr_s
        (tee_local $3
         (i32.sub
          (i32.const 0)
          (i32.shl
           (tee_local $2
            (i32.load
             (i32.add
              (get_local $0)
              (i32.const 4696)
             )
            )
           )
           (i32.const 2)
          )
         )
        )
        (i32.const 16)
       )
       (tee_local $2
        (i32.shr_s
         (i32.shl
          (get_local $2)
          (i32.const 16)
         )
         (i32.const 16)
        )
       )
      )
     )
     (i32.shr_s
      (tee_local $2
       (i32.mul
        (i32.and
         (get_local $3)
         (i32.const 65532)
        )
        (get_local $2)
       )
      )
      (i32.const 16)
     )
    )
    (i32.const 16)
   )
  )
  (set_local $5
   (i32.add
    (call $_silk_lin2log
     (i32.const 3932160)
    )
    (i32.const 63488)
   )
  )
  (set_local $3
   (i32.mul
    (get_local $3)
    (i32.shr_s
     (i32.shl
      (i32.sub
       (get_local $1)
       (get_local $5)
      )
      (i32.const 16)
     )
     (i32.const 16)
    )
   )
  )
  (set_local $2
   (i32.and
    (i32.add
     (get_local $4)
     (i32.shr_u
      (get_local $2)
      (i32.const 16)
     )
    )
    (i32.const 65535)
   )
  )
  (set_local $4
   (i32.add
    (call $_silk_lin2log
     (i32.const 3932160)
    )
    (i32.const 63488)
   )
  )
  (set_local $1
   (i32.mul
    (tee_local $3
     (i32.sub
      (i32.add
       (get_local $1)
       (i32.add
        (get_local $3)
        (i32.shr_s
         (i32.mul
          (get_local $2)
          (i32.shr_s
           (i32.shl
            (i32.sub
             (get_local $1)
             (get_local $4)
            )
            (i32.const 16)
           )
           (i32.const 16)
          )
         )
         (i32.const 16)
        )
       )
      )
      (i32.shr_s
       (tee_local $4
        (i32.load
         (tee_local $2
          (i32.add
           (get_local $0)
           (i32.const 8)
          )
         )
        )
       )
       (i32.const 8)
      )
     )
    )
    (i32.const 3)
   )
  )
  (i32.store
   (get_local $2)
   (i32.add
    (get_local $4)
    (i32.add
     (i32.mul
      (i32.shr_s
       (tee_local $0
        (i32.mul
         (i32.shr_s
          (i32.shl
           (i32.load
            (i32.add
             (get_local $0)
             (i32.const 4532)
            )
           )
           (i32.const 16)
          )
          (i32.const 16)
         )
         (i32.shr_s
          (i32.shl
           (if (result i32)
            (i32.lt_s
             (if (result i32)
              (i32.gt_s
               (tee_local $0
                (if (result i32)
                 (i32.lt_s
                  (get_local $3)
                  (i32.const 0)
                 )
                 (get_local $1)
                 (get_local $3)
                )
               )
               (i32.const -51)
              )
              (get_local $0)
              (tee_local $0
               (i32.const -51)
              )
             )
             (i32.const 51)
            )
            (get_local $0)
            (i32.const 51)
           )
           (i32.const 16)
          )
          (i32.const 16)
         )
        )
       )
       (i32.const 16)
      )
      (i32.const 6554)
     )
     (i32.shr_u
      (i32.mul
       (i32.and
        (get_local $0)
        (i32.const 65535)
       )
       (i32.const 6554)
      )
      (i32.const 16)
     )
    )
   )
  )
  (set_local $1
   (i32.shl
    (call $_silk_lin2log
     (i32.const 60)
    )
    (i32.const 8)
   )
  )
  (set_local $3
   (i32.shl
    (call $_silk_lin2log
     (i32.const 100)
    )
    (i32.const 8)
   )
  )
  (set_local $0
   (i32.load
    (get_local $2)
   )
  )
  (set_local $0
   (block $do-once (result i32)
    (if (result i32)
     (i32.gt_s
      (get_local $1)
      (get_local $3)
     )
     (block (result i32)
      (set_local $1
       (i32.shl
        (call $_silk_lin2log
         (i32.const 60)
        )
        (i32.const 8)
       )
      )
      (if
       (i32.gt_s
        (get_local $0)
        (get_local $1)
       )
       (br $do-once
        (i32.shl
         (call $_silk_lin2log
          (i32.const 60)
         )
         (i32.const 8)
        )
       )
      )
      (set_local $0
       (i32.load
        (get_local $2)
       )
      )
      (set_local $1
       (i32.shl
        (call $_silk_lin2log
         (i32.const 100)
        )
        (i32.const 8)
       )
      )
      (if (result i32)
       (i32.lt_s
        (get_local $0)
        (get_local $1)
       )
       (i32.shl
        (call $_silk_lin2log
         (i32.const 100)
        )
        (i32.const 8)
       )
       (i32.load
        (get_local $2)
       )
      )
     )
     (block (result i32)
      (set_local $1
       (i32.shl
        (call $_silk_lin2log
         (i32.const 100)
        )
        (i32.const 8)
       )
      )
      (if
       (i32.gt_s
        (get_local $0)
        (get_local $1)
       )
       (br $do-once
        (i32.shl
         (call $_silk_lin2log
          (i32.const 100)
         )
         (i32.const 8)
        )
       )
      )
      (set_local $0
       (i32.load
        (get_local $2)
       )
      )
      (set_local $1
       (i32.shl
        (call $_silk_lin2log
         (i32.const 60)
        )
        (i32.const 8)
       )
      )
      (if (result i32)
       (i32.lt_s
        (get_local $0)
        (get_local $1)
       )
       (i32.shl
        (call $_silk_lin2log
         (i32.const 60)
        )
        (i32.const 8)
       )
       (i32.load
        (get_local $2)
       )
      )
     )
    )
   )
  )
  (i32.store
   (get_local $2)
   (get_local $0)
  )
 )
 (func $_silk_NLSF_encode (; 245 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local $26 i32)
  (local $27 i32)
  (local $28 i32)
  (local $29 i32)
  (set_local $8
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.const 128)
   )
  )
  (if
   (i32.ge_u
    (get_local $6)
    (i32.const 3)
   )
   (call $_celt_fatal
    (i32.const 45924)
    (i32.const 45977)
    (i32.const 63)
   )
  )
  (set_local $14
   (i32.add
    (get_local $8)
    (i32.const 112)
   )
  )
  (set_local $15
   (i32.add
    (get_local $8)
    (i32.const 80)
   )
  )
  (set_local $16
   (i32.add
    (get_local $8)
    (i32.const 48)
   )
  )
  (set_local $17
   (i32.add
    (get_local $8)
    (i32.const 32)
   )
  )
  (call $_silk_NLSF_stabilize
   (get_local $1)
   (i32.load offset=36
    (get_local $2)
   )
   (i32.load16_s
    (tee_local $11
     (i32.add
      (get_local $2)
      (i32.const 2)
     )
    )
   )
  )
  (set_local $7
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (i32.and
        (tee_local $10
         (i32.load16_s
          (get_local $2)
         )
        )
        (i32.const 65535)
       )
       (i32.const 2)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (call $_silk_NLSF_VQ
   (get_local $7)
   (get_local $1)
   (i32.load
    (tee_local $20
     (i32.add
      (get_local $2)
      (i32.const 8)
     )
    )
   )
   (i32.load
    (tee_local $21
     (i32.add
      (get_local $2)
      (i32.const 12)
     )
    )
   )
   (get_local $10)
   (i32.load16_s
    (get_local $11)
   )
  )
  (set_local $12
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (get_local $5)
       (i32.const 2)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (call $_silk_insertion_sort_increasing
   (get_local $7)
   (get_local $12)
   (i32.load16_s
    (get_local $2)
   )
   (get_local $5)
  )
  (set_local $18
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (get_local $5)
       (i32.const 2)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (set_local $19
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (get_local $5)
       (i32.const 4)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (set_local $22
   (i32.add
    (get_local $2)
    (i32.const 32)
   )
  )
  (set_local $23
   (i32.add
    (get_local $2)
    (i32.const 4)
   )
  )
  (set_local $24
   (i32.add
    (get_local $2)
    (i32.const 6)
   )
  )
  (set_local $25
   (i32.add
    (get_local $2)
    (i32.const 16)
   )
  )
  (set_local $26
   (i32.shr_s
    (get_local $6)
    (i32.const 1)
   )
  )
  (set_local $27
   (i32.shr_s
    (i32.shl
     (get_local $4)
     (i32.const 14)
    )
    (i32.const 16)
   )
  )
  (set_local $7
   (i32.const 0)
  )
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $7)
     (get_local $5)
    )
    (block
     (set_local $28
      (i32.add
       (i32.load
        (get_local $20)
       )
       (tee_local $6
        (i32.mul
         (tee_local $10
          (i32.load
           (i32.add
            (get_local $12)
            (i32.shl
             (get_local $7)
             (i32.const 2)
            )
           )
          )
         )
         (tee_local $13
          (i32.load16_s
           (get_local $11)
          )
         )
        )
       )
      )
     )
     (set_local $29
      (i32.add
       (i32.load
        (get_local $21)
       )
       (i32.shl
        (get_local $6)
        (i32.const 1)
       )
      )
     )
     (set_local $6
      (i32.const 0)
     )
     (loop $while-in1
      (if
       (i32.lt_s
        (get_local $6)
        (get_local $13)
       )
       (block
        (i32.store16
         (i32.add
          (get_local $15)
          (i32.shl
           (get_local $6)
           (i32.const 1)
          )
         )
         (i32.shr_u
          (i32.mul
           (i32.shr_s
            (i32.shl
             (i32.sub
              (i32.load16_u
               (i32.add
                (get_local $1)
                (i32.shl
                 (get_local $6)
                 (i32.const 1)
                )
               )
              )
              (i32.shl
               (i32.load8_u
                (i32.add
                 (get_local $28)
                 (get_local $6)
                )
               )
               (i32.const 7)
              )
             )
             (i32.const 16)
            )
            (i32.const 16)
           )
           (tee_local $9
            (i32.load16_s
             (i32.add
              (get_local $29)
              (i32.shl
               (get_local $6)
               (i32.const 1)
              )
             )
            )
           )
          )
          (i32.const 14)
         )
        )
        (set_local $9
         (i32.and
          (call $_silk_DIV32_varQ_361
           (i32.load16_s
            (i32.add
             (get_local $3)
             (i32.shl
              (get_local $6)
              (i32.const 1)
             )
            )
           )
           (i32.mul
            (get_local $9)
            (get_local $9)
           )
          )
          (i32.const 65535)
         )
        )
        (i32.store16
         (i32.add
          (get_local $16)
          (i32.shl
           (get_local $6)
           (i32.const 1)
          )
         )
         (get_local $9)
        )
        (set_local $6
         (i32.add
          (get_local $6)
          (i32.const 1)
         )
        )
        (br $while-in1)
       )
      )
     )
     (call $_silk_NLSF_unpack
      (get_local $8)
      (get_local $17)
      (get_local $2)
      (get_local $10)
     )
     (set_local $9
      (call $_silk_NLSF_del_dec_quant
       (i32.add
        (get_local $19)
        (i32.shl
         (get_local $7)
         (i32.const 4)
        )
       )
       (get_local $15)
       (get_local $16)
       (get_local $17)
       (get_local $8)
       (i32.load
        (get_local $22)
       )
       (i32.load16_s
        (get_local $23)
       )
       (i32.load16_s
        (get_local $24)
       )
       (get_local $4)
       (i32.load16_s
        (get_local $11)
       )
      )
     )
     (i32.store
      (tee_local $13
       (i32.add
        (get_local $18)
        (i32.shl
         (get_local $7)
         (i32.const 2)
        )
       )
      )
      (get_local $9)
     )
     (set_local $6
      (i32.add
       (i32.load
        (get_local $25)
       )
       (i32.mul
        (get_local $26)
        (i32.load16_s
         (get_local $2)
        )
       )
      )
     )
     (set_local $6
      (i32.mul
       (i32.shr_s
        (i32.sub
         (i32.const 67108864)
         (i32.shl
          (call $_silk_lin2log
           (tee_local $6
            (if (result i32)
             (get_local $10)
             (i32.sub
              (i32.load8_u
               (i32.add
                (get_local $6)
                (i32.add
                 (get_local $10)
                 (i32.const -1)
                )
               )
              )
              (i32.load8_u
               (i32.add
                (get_local $6)
                (get_local $10)
               )
              )
             )
             (i32.sub
              (i32.const 256)
              (i32.load8_u
               (get_local $6)
              )
             )
            )
           )
          )
          (i32.const 16)
         )
        )
        (i32.const 16)
       )
       (get_local $27)
      )
     )
     (i32.store
      (get_local $13)
      (i32.add
       (get_local $9)
       (get_local $6)
      )
     )
     (set_local $7
      (i32.add
       (get_local $7)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (call $_silk_insertion_sort_increasing
   (get_local $18)
   (get_local $14)
   (get_local $5)
   (i32.const 1)
  )
  (i32.store8
   (get_local $0)
   (i32.load
    (i32.add
     (get_local $12)
     (i32.shl
      (tee_local $3
       (i32.load
        (get_local $14)
       )
      )
      (i32.const 2)
     )
    )
   )
  )
  (drop
   (call $_memcpy
    (i32.add
     (get_local $0)
     (i32.const 1)
    )
    (i32.add
     (get_local $19)
     (i32.shl
      (get_local $3)
      (i32.const 4)
     )
    )
    (i32.load16_s
     (get_local $11)
    )
   )
  )
  (call $_silk_NLSF_decode
   (get_local $1)
   (get_local $0)
   (get_local $2)
  )
  (set_global $STACKTOP
   (get_local $8)
  )
 )
 (func $_silk_DIV32_varQ_361 (; 246 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (set_local $2
   (i32.sub
    (i32.const 0)
    (get_local $0)
   )
  )
  (set_local $2
   (call $_silk_CLZ32
    (if (result i32)
     (i32.gt_s
      (get_local $0)
      (i32.const 0)
     )
     (get_local $0)
     (get_local $2)
    )
   )
  )
  (set_local $0
   (i32.shl
    (get_local $0)
    (i32.add
     (get_local $2)
     (i32.const -1)
    )
   )
  )
  (set_local $3
   (i32.sub
    (i32.const 0)
    (get_local $1)
   )
  )
  (set_local $3
   (i32.add
    (call $_silk_CLZ32
     (if (result i32)
      (i32.gt_s
       (get_local $1)
       (i32.const 0)
      )
      (get_local $1)
      (get_local $3)
     )
    )
    (i32.const -1)
   )
  )
  (set_local $0
   (i32.add
    (tee_local $5
     (i32.add
      (i32.mul
       (i32.shr_s
        (get_local $0)
        (i32.const 16)
       )
       (tee_local $1
        (i32.shr_s
         (i32.shl
          (i32.div_s
           (i32.const 536870911)
           (i32.shr_s
            (tee_local $4
             (i32.shl
              (get_local $1)
              (get_local $3)
             )
            )
            (i32.const 16)
           )
          )
          (i32.const 16)
         )
         (i32.const 16)
        )
       )
      )
      (i32.shr_s
       (i32.mul
        (i32.and
         (get_local $0)
         (i32.const 65535)
        )
        (get_local $1)
       )
       (i32.const 16)
      )
     )
    )
    (i32.add
     (i32.mul
      (i32.shr_s
       (tee_local $0
        (i32.sub
         (get_local $0)
         (i32.and
          (i32.wrap/i64
           (i64.shr_u
            (i64.mul
             (i64.extend_s/i32
              (get_local $4)
             )
             (i64.extend_s/i32
              (get_local $5)
             )
            )
            (i64.const 29)
           )
          )
          (i32.const -8)
         )
        )
       )
       (i32.const 16)
      )
      (get_local $1)
     )
     (i32.shr_s
      (i32.mul
       (i32.and
        (get_local $0)
        (i32.const 65535)
       )
       (get_local $1)
      )
      (i32.const 16)
     )
    )
   )
  )
  (if
   (i32.ge_s
    (tee_local $1
     (i32.sub
      (i32.add
       (get_local $2)
       (i32.const 28)
      )
      (get_local $3)
     )
    )
    (i32.const 21)
   )
   (block
    (set_local $0
     (i32.shr_s
      (get_local $0)
      (i32.add
       (get_local $1)
       (i32.const -21)
      )
     )
    )
    (return
     (if (result i32)
      (i32.lt_s
       (get_local $1)
       (i32.const 53)
      )
      (get_local $0)
      (i32.const 0)
     )
    )
   )
  )
  (if (result i32)
   (i32.gt_s
    (tee_local $2
     (i32.shr_s
      (i32.const -2147483648)
      (tee_local $1
       (i32.sub
        (i32.const 21)
        (get_local $1)
       )
      )
     )
    )
    (tee_local $3
     (i32.shr_u
      (i32.const 2147483647)
      (get_local $1)
     )
    )
   )
   (block (result i32)
    (if
     (i32.gt_s
      (get_local $0)
      (get_local $2)
     )
     (return
      (i32.shl
       (get_local $2)
       (get_local $1)
      )
     )
    )
    (i32.shl
     (if (result i32)
      (i32.lt_s
       (get_local $0)
       (get_local $3)
      )
      (get_local $3)
      (get_local $0)
     )
     (get_local $1)
    )
   )
   (block (result i32)
    (if
     (i32.gt_s
      (get_local $0)
      (get_local $3)
     )
     (return
      (i32.shl
       (get_local $3)
       (get_local $1)
      )
     )
    )
    (i32.shl
     (if (result i32)
      (i32.lt_s
       (get_local $0)
       (get_local $2)
      )
      (get_local $2)
      (get_local $0)
     )
     (get_local $1)
    )
   )
  )
 )
 (func $_silk_NLSF_VQ (; 247 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (if
   (i32.and
    (get_local $5)
    (i32.const 1)
   )
   (call $_celt_fatal
    (i32.const 45996)
    (i32.const 46037)
    (i32.const 49)
   )
  )
  (set_local $6
   (get_local $2)
  )
  (set_local $7
   (get_local $3)
  )
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $8)
     (get_local $4)
    )
    (block
     (set_local $9
      (i32.const 0)
     )
     (set_local $10
      (i32.const 0)
     )
     (set_local $2
      (get_local $5)
     )
     (loop $while-in1
      (set_local $3
       (i32.add
        (get_local $2)
        (i32.const -2)
       )
      )
      (if
       (i32.gt_s
        (get_local $2)
        (i32.const 1)
       )
       (block
        (set_local $14
         (i32.sub
          (tee_local $11
           (i32.mul
            (i32.shr_s
             (i32.shl
              (i32.sub
               (i32.load16_u
                (i32.add
                 (get_local $1)
                 (i32.shl
                  (tee_local $2
                   (i32.add
                    (get_local $2)
                    (i32.const -1)
                   )
                  )
                  (i32.const 1)
                 )
                )
               )
               (i32.shl
                (i32.load8_u
                 (i32.add
                  (get_local $6)
                  (get_local $2)
                 )
                )
                (i32.const 7)
               )
              )
              (i32.const 16)
             )
             (i32.const 16)
            )
            (i32.load16_s
             (i32.add
              (get_local $7)
              (i32.shl
               (get_local $2)
               (i32.const 1)
              )
             )
            )
           )
          )
          (tee_local $12
           (i32.shr_s
            (get_local $9)
            (i32.const 1)
           )
          )
         )
        )
        (set_local $15
         (i32.sub
          (get_local $12)
          (get_local $11)
         )
        )
        (set_local $16
         (i32.sub
          (tee_local $9
           (i32.mul
            (i32.shr_s
             (i32.shl
              (i32.sub
               (i32.load16_u
                (i32.add
                 (get_local $1)
                 (i32.shl
                  (get_local $3)
                  (i32.const 1)
                 )
                )
               )
               (i32.shl
                (i32.load8_u
                 (i32.add
                  (get_local $6)
                  (get_local $3)
                 )
                )
                (i32.const 7)
               )
              )
              (i32.const 16)
             )
             (i32.const 16)
            )
            (i32.load16_s
             (i32.add
              (get_local $7)
              (i32.shl
               (get_local $3)
               (i32.const 1)
              )
             )
            )
           )
          )
          (tee_local $13
           (i32.shr_s
            (get_local $11)
            (i32.const 1)
           )
          )
         )
        )
        (set_local $2
         (i32.sub
          (get_local $13)
          (get_local $9)
         )
        )
        (set_local $10
         (i32.add
          (i32.add
           (get_local $10)
           (if (result i32)
            (i32.gt_s
             (get_local $11)
             (get_local $12)
            )
            (get_local $14)
            (get_local $15)
           )
          )
          (if (result i32)
           (i32.gt_s
            (get_local $9)
            (get_local $13)
           )
           (get_local $16)
           (get_local $2)
          )
         )
        )
        (set_local $2
         (get_local $3)
        )
        (br $while-in1)
       )
      )
     )
     (i32.store
      (i32.add
       (get_local $0)
       (i32.shl
        (get_local $8)
        (i32.const 2)
       )
      )
      (get_local $10)
     )
     (set_local $6
      (i32.add
       (get_local $6)
       (get_local $5)
      )
     )
     (set_local $7
      (i32.add
       (get_local $7)
       (i32.shl
        (get_local $5)
        (i32.const 1)
       )
      )
     )
     (set_local $8
      (i32.add
       (get_local $8)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
 )
 (func $_silk_NLSF_unpack (; 248 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (set_local $6
   (i32.add
    (get_local $2)
    (i32.const 20)
   )
  )
  (set_local $5
   (i32.add
    (i32.load offset=24
     (get_local $2)
    )
    (i32.div_s
     (i32.mul
      (tee_local $2
       (i32.load16_s
        (tee_local $4
         (i32.add
          (get_local $2)
          (i32.const 2)
         )
        )
       )
      )
      (get_local $3)
     )
     (i32.const 2)
    )
   )
  )
  (set_local $3
   (i32.const 0)
  )
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $3)
     (i32.shr_s
      (i32.shl
       (get_local $2)
       (i32.const 16)
      )
      (i32.const 16)
     )
    )
    (block
     (i32.store16
      (i32.add
       (get_local $0)
       (i32.shl
        (get_local $3)
        (i32.const 1)
       )
      )
      (i32.mul
       (i32.and
        (i32.shr_u
         (tee_local $7
          (i32.and
           (tee_local $2
            (i32.load8_s
             (get_local $5)
            )
           )
           (i32.const 255)
          )
         )
         (i32.const 1)
        )
        (i32.const 7)
       )
       (i32.const 9)
      )
     )
     (i32.store8
      (i32.add
       (get_local $1)
       (get_local $3)
      )
      (i32.load8_s
       (i32.add
        (i32.load
         (get_local $6)
        )
        (i32.add
         (get_local $3)
         (i32.and
          (i32.add
           (i32.load16_s
            (get_local $4)
           )
           (i32.const -1)
          )
          (i32.sub
           (i32.const 0)
           (i32.and
            (get_local $2)
            (i32.const 1)
           )
          )
         )
        )
       )
      )
     )
     (i32.store16
      (i32.add
       (get_local $0)
       (i32.shl
        (tee_local $8
         (i32.or
          (get_local $3)
          (i32.const 1)
         )
        )
        (i32.const 1)
       )
      )
      (i32.and
       (i32.mul
        (i32.shr_u
         (i32.and
          (get_local $2)
          (i32.const 255)
         )
         (i32.const 5)
        )
        (i32.const 9)
       )
       (i32.const 255)
      )
     )
     (i32.store8
      (i32.add
       (get_local $1)
       (get_local $8)
      )
      (i32.load8_s
       (i32.add
        (i32.load
         (get_local $6)
        )
        (i32.add
         (i32.add
          (get_local $3)
          (i32.and
           (i32.add
            (i32.load16_s
             (get_local $4)
            )
            (i32.const -1)
           )
           (i32.sub
            (i32.const 0)
            (i32.and
             (i32.shr_u
              (get_local $7)
              (i32.const 4)
             )
             (i32.const 1)
            )
           )
          )
         )
         (i32.const 1)
        )
       )
      )
     )
     (set_local $5
      (i32.add
       (get_local $5)
       (i32.const 1)
      )
     )
     (set_local $3
      (i32.add
       (get_local $3)
       (i32.const 2)
      )
     )
     (set_local $2
      (i32.load16_s
       (get_local $4)
      )
     )
     (br $while-in)
    )
   )
  )
 )
 (func $_silk_NLSF_del_dec_quant (; 249 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (param $8 i32) (param $9 i32) (result i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local $26 i32)
  (local $27 i32)
  (local $28 i32)
  (local $29 i32)
  (local $30 i32)
  (set_local $10
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.const 320)
   )
  )
  (set_local $18
   (i32.add
    (get_local $10)
    (i32.const 304)
   )
  )
  (set_local $15
   (i32.add
    (get_local $10)
    (i32.const 240)
   )
  )
  (set_local $17
   (i32.add
    (get_local $10)
    (i32.const 224)
   )
  )
  (set_local $16
   (i32.add
    (get_local $10)
    (i32.const 192)
   )
  )
  (set_local $20
   (i32.add
    (get_local $10)
    (i32.const 176)
   )
  )
  (set_local $21
   (i32.add
    (get_local $10)
    (i32.const 160)
   )
  )
  (set_local $23
   (i32.add
    (get_local $10)
    (i32.const 80)
   )
  )
  (set_local $22
   (get_local $10)
  )
  (set_local $13
   (i32.shr_s
    (i32.shl
     (get_local $6)
     (i32.const 16)
    )
    (i32.const 16)
   )
  )
  (set_local $11
   (i32.const -10)
  )
  (loop $while-in
   (if
    (i32.ne
     (get_local $11)
     (i32.const 10)
    )
    (block
     (set_local $6
      (i32.add
       (tee_local $10
        (i32.shl
         (get_local $11)
         (i32.const 10)
        )
       )
       (i32.const 1024)
      )
     )
     (block $label$break$L4
      (set_local $10
       (if (result i32)
        (i32.gt_s
         (get_local $11)
         (i32.const 0)
        )
        (block (result i32)
         (set_local $6
          (i32.add
           (i32.shr_s
            (i32.shl
             (get_local $6)
             (i32.const 16)
            )
            (i32.const 16)
           )
           (i32.const -102)
          )
         )
         (i32.add
          (i32.shr_s
           (i32.shl
            (get_local $11)
            (i32.const 26)
           )
           (i32.const 16)
          )
          (i32.const -102)
         )
        )
        (i32.or
         (tee_local $10
          (block $switch (result i32)
           (block $switch-default
            (block $switch-case0
             (block $switch-case
              (br_table $switch-case0 $switch-case $switch-default
               (i32.sub
                (get_local $11)
                (i32.const -1)
               )
              )
             )
             (set_local $6
              (i32.add
               (i32.shr_s
                (i32.shl
                 (get_local $6)
                 (i32.const 16)
                )
                (i32.const 16)
               )
               (i32.const -102)
              )
             )
             (br $label$break$L4)
            )
            (br $switch
             (i32.const -1024)
            )
           )
           (set_local $6
            (i32.or
             (i32.and
              (get_local $6)
              (i32.const 64512)
             )
             (i32.const 102)
            )
           )
           (i32.and
            (get_local $10)
            (i32.const 64512)
           )
          )
         )
         (i32.const 102)
        )
       )
      )
     )
     (i32.store
      (i32.add
       (get_local $23)
       (i32.shl
        (tee_local $12
         (i32.add
          (get_local $11)
          (i32.const 10)
         )
        )
        (i32.const 2)
       )
      )
      (i32.shr_s
       (i32.mul
        (i32.shr_s
         (i32.shl
          (get_local $10)
          (i32.const 16)
         )
         (i32.const 16)
        )
        (get_local $13)
       )
       (i32.const 16)
      )
     )
     (i32.store
      (i32.add
       (get_local $22)
       (i32.shl
        (get_local $12)
        (i32.const 2)
       )
      )
      (i32.shr_s
       (i32.mul
        (i32.shr_s
         (i32.shl
          (get_local $6)
          (i32.const 16)
         )
         (i32.const 16)
        )
        (get_local $13)
       )
       (i32.const 16)
      )
     )
     (set_local $11
      (i32.add
       (get_local $11)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (i32.store
   (get_local $16)
   (i32.const 0)
  )
  (i32.store16
   (get_local $17)
   (i32.const 0)
  )
  (set_local $25
   (i32.shr_s
    (i32.shl
     (get_local $7)
     (i32.const 16)
    )
    (i32.const 16)
   )
  )
  (set_local $24
   (i32.shr_s
    (i32.shl
     (get_local $8)
     (i32.const 16)
    )
    (i32.const 16)
   )
  )
  (set_local $6
   (i32.const 1)
  )
  (set_local $11
   (tee_local $26
    (i32.shr_s
     (i32.shl
      (get_local $9)
      (i32.const 16)
     )
     (i32.const 16)
    )
   )
  )
  (loop $while-in2
   (if
    (i32.gt_s
     (get_local $11)
     (i32.const 0)
    )
    (block
     (set_local $10
      (i32.add
       (get_local $5)
       (i32.load16_s
        (i32.add
         (get_local $4)
         (i32.shl
          (tee_local $11
           (i32.add
            (get_local $11)
            (i32.const -1)
           )
          )
          (i32.const 1)
         )
        )
       )
      )
     )
     (set_local $13
      (i32.load16_s
       (i32.add
        (get_local $1)
        (i32.shl
         (get_local $11)
         (i32.const 1)
        )
       )
      )
     )
     (set_local $27
      (i32.add
       (get_local $3)
       (get_local $11)
      )
     )
     (set_local $28
      (i32.add
       (get_local $2)
       (i32.shl
        (get_local $11)
        (i32.const 1)
       )
      )
     )
     (set_local $8
      (i32.const 0)
     )
     (loop $while-in4
      (if
       (i32.lt_s
        (get_local $8)
        (get_local $6)
       )
       (block
        (set_local $7
         (i32.shr_s
          (tee_local $12
           (i32.mul
            (i32.shr_s
             (i32.shl
              (i32.sub
               (get_local $13)
               (tee_local $9
                (i32.shr_s
                 (i32.mul
                  (i32.load8_u
                   (get_local $27)
                  )
                  (i32.load16_s
                   (tee_local $19
                    (i32.add
                     (get_local $17)
                     (i32.shl
                      (get_local $8)
                      (i32.const 1)
                     )
                    )
                   )
                  )
                 )
                 (i32.const 8)
                )
               )
              )
              (i32.const 16)
             )
             (i32.const 16)
            )
            (get_local $25)
           )
          )
          (i32.const 16)
         )
        )
        (set_local $14
         (i32.gt_s
          (get_local $12)
          (i32.const 655359)
         )
        )
        (if
         (i32.lt_s
          (get_local $12)
          (i32.const -655360)
         )
         (set_local $7
          (i32.const -10)
         )
        )
        (i32.store8
         (i32.add
          (i32.add
           (get_local $15)
           (i32.shl
            (get_local $8)
            (i32.const 4)
           )
          )
          (get_local $11)
         )
         (if (result i32)
          (get_local $14)
          (tee_local $7
           (i32.const 9)
          )
          (get_local $7)
         )
        )
        (set_local $12
         (i32.add
          (i32.load
           (i32.add
            (get_local $23)
            (i32.shl
             (tee_local $14
              (i32.add
               (get_local $7)
               (i32.const 10)
              )
             )
             (i32.const 2)
            )
           )
          )
          (get_local $9)
         )
        )
        (set_local $14
         (i32.add
          (i32.load
           (i32.add
            (get_local $22)
            (i32.shl
             (get_local $14)
             (i32.const 2)
            )
           )
          )
          (get_local $9)
         )
        )
        (i32.store16
         (get_local $19)
         (get_local $12)
        )
        (i32.store16
         (i32.add
          (get_local $17)
          (i32.shl
           (tee_local $29
            (i32.add
             (get_local $8)
             (get_local $6)
            )
           )
           (i32.const 1)
          )
         )
         (get_local $14)
        )
        (set_local $19
         (i32.load
          (tee_local $30
           (i32.add
            (get_local $16)
            (i32.shl
             (get_local $8)
             (i32.const 2)
            )
           )
          )
         )
        )
        (i32.store
         (get_local $30)
         (i32.add
          (i32.add
           (get_local $19)
           (i32.mul
            (i32.mul
             (tee_local $12
              (i32.shr_s
               (i32.shl
                (i32.sub
                 (get_local $13)
                 (get_local $12)
                )
                (i32.const 16)
               )
               (i32.const 16)
              )
             )
             (get_local $12)
            )
            (tee_local $12
             (i32.load16_s
              (get_local $28)
             )
            )
           )
          )
          (i32.mul
           (get_local $24)
           (i32.shr_s
            (i32.shl
             (tee_local $7
              (block $do-once (result i32)
               (if (result i32)
                (i32.gt_s
                 (get_local $7)
                 (i32.const 2)
                )
                (if (result i32)
                 (i32.eq
                  (get_local $7)
                  (i32.const 3)
                 )
                 (block (result i32)
                  (set_local $9
                   (i32.const 280)
                  )
                  (i32.load8_u offset=7
                   (get_local $10)
                  )
                 )
                 (block (result i32)
                  (set_local $9
                   (i32.add
                    (tee_local $7
                     (i32.mul
                      (get_local $7)
                      (i32.const 43)
                     )
                    )
                    (i32.const 151)
                   )
                  )
                  (i32.add
                   (get_local $7)
                   (i32.const 108)
                  )
                 )
                )
                (block (result i32)
                 (if
                  (i32.ge_s
                   (get_local $7)
                   (i32.const -3)
                  )
                  (block
                   (set_local $9
                    (i32.load8_u
                     (i32.add
                      (get_local $10)
                      (i32.add
                       (get_local $7)
                       (i32.const 5)
                      )
                     )
                    )
                   )
                   (br $do-once
                    (i32.load8_u
                     (i32.add
                      (get_local $10)
                      (i32.add
                       (get_local $7)
                       (i32.const 4)
                      )
                     )
                    )
                   )
                  )
                 )
                 (if (result i32)
                  (i32.eq
                   (get_local $7)
                   (i32.const -4)
                  )
                  (block (result i32)
                   (set_local $9
                    (i32.load8_u offset=1
                     (get_local $10)
                    )
                   )
                   (i32.const 280)
                  )
                  (block (result i32)
                   (set_local $9
                    (i32.add
                     (tee_local $7
                      (i32.mul
                       (get_local $7)
                       (i32.const -43)
                      )
                     )
                     (i32.const 65)
                    )
                   )
                   (i32.add
                    (get_local $7)
                    (i32.const 108)
                   )
                  )
                 )
                )
               )
              )
             )
             (i32.const 16)
            )
            (i32.const 16)
           )
          )
         )
        )
        (i32.store
         (i32.add
          (get_local $16)
          (i32.shl
           (get_local $29)
           (i32.const 2)
          )
         )
         (i32.add
          (i32.add
           (get_local $19)
           (i32.mul
            (i32.mul
             (tee_local $7
              (i32.shr_s
               (i32.shl
                (i32.sub
                 (get_local $13)
                 (get_local $14)
                )
                (i32.const 16)
               )
               (i32.const 16)
              )
             )
             (get_local $7)
            )
            (get_local $12)
           )
          )
          (i32.mul
           (get_local $24)
           (i32.shr_s
            (i32.shl
             (get_local $9)
             (i32.const 16)
            )
            (i32.const 16)
           )
          )
         )
        )
        (set_local $8
         (i32.add
          (get_local $8)
          (i32.const 1)
         )
        )
        (br $while-in4)
       )
      )
     )
     (if
      (i32.lt_s
       (get_local $6)
       (i32.const 3)
      )
      (block
       (set_local $7
        (i32.const 0)
       )
       (loop $while-in8
        (if
         (i32.lt_s
          (get_local $7)
          (get_local $6)
         )
         (block
          (i32.store8
           (i32.add
            (i32.add
             (get_local $15)
             (i32.shl
              (i32.add
               (get_local $7)
               (get_local $6)
              )
              (i32.const 4)
             )
            )
            (get_local $11)
           )
           (i32.add
            (i32.load8_u
             (i32.add
              (i32.add
               (get_local $15)
               (i32.shl
                (get_local $7)
                (i32.const 4)
               )
              )
              (get_local $11)
             )
            )
            (i32.const 1)
           )
          )
          (set_local $7
           (i32.add
            (get_local $7)
            (i32.const 1)
           )
          )
          (br $while-in8)
         )
        )
       )
       (set_local $7
        (tee_local $6
         (i32.shl
          (get_local $6)
          (i32.const 1)
         )
        )
       )
       (loop $while-in10
        (if
         (i32.lt_s
          (get_local $7)
          (i32.const 4)
         )
         (block
          (i32.store8
           (i32.add
            (i32.add
             (get_local $15)
             (i32.shl
              (get_local $7)
              (i32.const 4)
             )
            )
            (get_local $11)
           )
           (i32.load8_s
            (i32.add
             (i32.add
              (get_local $15)
              (i32.shl
               (i32.sub
                (get_local $7)
                (get_local $6)
               )
               (i32.const 4)
              )
             )
             (get_local $11)
            )
           )
          )
          (set_local $7
           (i32.add
            (get_local $7)
            (i32.const 1)
           )
          )
          (br $while-in10)
         )
        )
       )
      )
      (block
       (set_local $9
        (i32.const 0)
       )
       (loop $while-in12
        (if
         (i32.ne
          (get_local $9)
          (i32.const 4)
         )
         (block
          (set_local $13
           (i32.add
            (get_local $21)
            (i32.shl
             (get_local $9)
             (i32.const 2)
            )
           )
          )
          (if
           (i32.gt_s
            (tee_local $8
             (i32.load
              (tee_local $12
               (i32.add
                (get_local $16)
                (i32.shl
                 (get_local $9)
                 (i32.const 2)
                )
               )
              )
             )
            )
            (tee_local $10
             (i32.load
              (tee_local $14
               (i32.add
                (get_local $16)
                (i32.shl
                 (tee_local $7
                  (i32.add
                   (get_local $9)
                   (i32.const 4)
                  )
                 )
                 (i32.const 2)
                )
               )
              )
             )
            )
           )
           (block
            (i32.store
             (get_local $13)
             (get_local $8)
            )
            (i32.store
             (get_local $12)
             (get_local $10)
            )
            (i32.store
             (get_local $14)
             (get_local $8)
            )
            (set_local $13
             (i32.load16_s
              (tee_local $8
               (i32.add
                (get_local $17)
                (i32.shl
                 (get_local $9)
                 (i32.const 1)
                )
               )
              )
             )
            )
            (i32.store16
             (get_local $8)
             (i32.load16_s
              (tee_local $8
               (i32.add
                (get_local $17)
                (i32.shl
                 (get_local $7)
                 (i32.const 1)
                )
               )
              )
             )
            )
            (i32.store16
             (get_local $8)
             (get_local $13)
            )
            (set_local $8
             (get_local $10)
            )
           )
           (block
            (i32.store
             (get_local $13)
             (get_local $10)
            )
            (set_local $7
             (get_local $9)
            )
           )
          )
          (i32.store
           (i32.add
            (get_local $20)
            (i32.shl
             (get_local $9)
             (i32.const 2)
            )
           )
           (get_local $8)
          )
          (i32.store
           (i32.add
            (get_local $18)
            (i32.shl
             (get_local $9)
             (i32.const 2)
            )
           )
           (get_local $7)
          )
          (set_local $9
           (i32.add
            (get_local $9)
            (i32.const 1)
           )
          )
          (br $while-in12)
         )
        )
       )
       (loop $while-in14
        (set_local $13
         (i32.const 0)
        )
        (set_local $8
         (i32.const 2147483647)
        )
        (set_local $9
         (i32.const 0)
        )
        (set_local $7
         (i32.const 0)
        )
        (set_local $10
         (i32.const 0)
        )
        (loop $while-in16
         (if
          (i32.ne
           (get_local $10)
           (i32.const 4)
          )
          (block
           (if
            (tee_local $14
             (i32.gt_s
              (get_local $8)
              (tee_local $12
               (i32.load
                (i32.add
                 (get_local $21)
                 (i32.shl
                  (get_local $10)
                  (i32.const 2)
                 )
                )
               )
              )
             )
            )
            (set_local $7
             (get_local $10)
            )
           )
           (if
            (get_local $14)
            (set_local $8
             (get_local $12)
            )
           )
           (if
            (tee_local $14
             (i32.lt_s
              (get_local $13)
              (tee_local $12
               (i32.load
                (i32.add
                 (get_local $20)
                 (i32.shl
                  (get_local $10)
                  (i32.const 2)
                 )
                )
               )
              )
             )
            )
            (set_local $9
             (get_local $10)
            )
           )
           (if
            (get_local $14)
            (set_local $13
             (get_local $12)
            )
           )
           (set_local $10
            (i32.add
             (get_local $10)
             (i32.const 1)
            )
           )
           (br $while-in16)
          )
         )
        )
        (if
         (i32.lt_s
          (get_local $8)
          (get_local $13)
         )
         (block
          (i32.store
           (i32.add
            (get_local $18)
            (i32.shl
             (get_local $9)
             (i32.const 2)
            )
           )
           (i32.xor
            (i32.load
             (i32.add
              (get_local $18)
              (i32.shl
               (get_local $7)
               (i32.const 2)
              )
             )
            )
            (i32.const 4)
           )
          )
          (i32.store
           (i32.add
            (get_local $16)
            (i32.shl
             (get_local $9)
             (i32.const 2)
            )
           )
           (i32.load
            (i32.add
             (get_local $16)
             (i32.shl
              (tee_local $8
               (i32.add
                (get_local $7)
                (i32.const 4)
               )
              )
              (i32.const 2)
             )
            )
           )
          )
          (i32.store16
           (i32.add
            (get_local $17)
            (i32.shl
             (get_local $9)
             (i32.const 1)
            )
           )
           (i32.load16_s
            (i32.add
             (get_local $17)
             (i32.shl
              (get_local $8)
              (i32.const 1)
             )
            )
           )
          )
          (i32.store
           (i32.add
            (get_local $20)
            (i32.shl
             (get_local $9)
             (i32.const 2)
            )
           )
           (i32.const 0)
          )
          (i32.store
           (i32.add
            (get_local $21)
            (i32.shl
             (get_local $7)
             (i32.const 2)
            )
           )
           (i32.const 2147483647)
          )
          (i64.store
           (tee_local $8
            (i32.add
             (get_local $15)
             (i32.shl
              (get_local $9)
              (i32.const 4)
             )
            )
           )
           (i64.load
            (tee_local $7
             (i32.add
              (get_local $15)
              (i32.shl
               (get_local $7)
               (i32.const 4)
              )
             )
            )
           )
          )
          (i64.store offset=8
           (get_local $8)
           (i64.load offset=8
            (get_local $7)
           )
          )
          (br $while-in14)
         )
        )
       )
       (set_local $7
        (i32.const 0)
       )
       (loop $while-in18
        (if
         (i32.ne
          (get_local $7)
          (i32.const 4)
         )
         (block
          (i32.store8
           (tee_local $8
            (i32.add
             (i32.add
              (get_local $15)
              (i32.shl
               (get_local $7)
               (i32.const 4)
              )
             )
             (get_local $11)
            )
           )
           (i32.add
            (i32.shr_u
             (i32.load
              (i32.add
               (get_local $18)
               (i32.shl
                (get_local $7)
                (i32.const 2)
               )
              )
             )
             (i32.const 2)
            )
            (i32.load8_u
             (get_local $8)
            )
           )
          )
          (set_local $7
           (i32.add
            (get_local $7)
            (i32.const 1)
           )
          )
          (br $while-in18)
         )
        )
       )
      )
     )
     (br $while-in2)
    )
   )
  )
  (set_local $4
   (i32.const 0)
  )
  (set_local $1
   (i32.const 2147483647)
  )
  (set_local $3
   (i32.const 0)
  )
  (loop $while-in20
   (if
    (i32.ne
     (get_local $3)
     (i32.const 8)
    )
    (block
     (if
      (tee_local $5
       (i32.gt_s
        (get_local $1)
        (tee_local $2
         (i32.load
          (i32.add
           (get_local $16)
           (i32.shl
            (get_local $3)
            (i32.const 2)
           )
          )
         )
        )
       )
      )
      (set_local $4
       (get_local $3)
      )
     )
     (if
      (get_local $5)
      (set_local $1
       (get_local $2)
      )
     )
     (set_local $3
      (i32.add
       (get_local $3)
       (i32.const 1)
      )
     )
     (br $while-in20)
    )
   )
  )
  (set_local $3
   (i32.and
    (get_local $4)
    (i32.const 3)
   )
  )
  (set_local $2
   (i32.const 0)
  )
  (loop $while-in22
   (if
    (i32.lt_s
     (get_local $2)
     (get_local $26)
    )
    (block
     (i32.store8
      (i32.add
       (get_local $0)
       (get_local $2)
      )
      (i32.load8_s
       (i32.add
        (i32.add
         (get_local $15)
         (i32.shl
          (get_local $3)
          (i32.const 4)
         )
        )
        (get_local $2)
       )
      )
     )
     (set_local $2
      (i32.add
       (get_local $2)
       (i32.const 1)
      )
     )
     (br $while-in22)
    )
   )
  )
  (i32.store8
   (get_local $0)
   (i32.add
    (i32.shr_u
     (get_local $4)
     (i32.const 2)
    )
    (i32.load8_u
     (get_local $0)
    )
   )
  )
  (set_global $STACKTOP
   (get_local $22)
  )
  (get_local $1)
 )
 (func $_silk_process_NLSFs (; 250 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (set_local $6
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.const 96)
   )
  )
  (if
   (i32.ne
    (i32.load
     (tee_local $4
      (i32.add
       (get_local $0)
       (i32.const 4632)
      )
     )
    )
    (i32.const 1)
   )
   (if
    (i32.ne
     (i32.load8_s
      (i32.add
       (get_local $0)
       (i32.const 4767)
      )
     )
     (i32.const 4)
    )
    (call $_celt_fatal
     (i32.const 46052)
     (i32.const 46155)
     (i32.const 51)
    )
   )
  )
  (set_local $7
   (i32.shr_s
    (tee_local $5
     (i32.add
      (i32.add
       (i32.mul
        (tee_local $5
         (i32.shr_s
          (i32.shl
           (i32.load
            (i32.add
             (get_local $0)
             (i32.const 4532)
            )
           )
           (i32.const 16)
          )
          (i32.const 16)
         )
        )
        (i32.const -5)
       )
       (i32.shr_s
        (i32.mul
         (get_local $5)
         (i32.const 59246)
        )
        (i32.const 16)
       )
      )
      (i32.const 3146)
     )
    )
    (i32.const 1)
   )
  )
  (if
   (i32.le_s
    (tee_local $10
     (i32.add
      (get_local $5)
      (if (result i32)
       (i32.eq
        (i32.load
         (i32.add
          (get_local $0)
          (i32.const 4580)
         )
        )
        (i32.const 2)
       )
       (get_local $7)
       (i32.const 0)
      )
     )
    )
    (i32.const 0)
   )
   (call $_celt_fatal
    (i32.const 46176)
    (i32.const 46155)
    (i32.const 63)
   )
  )
  (set_local $7
   (i32.sub
    (get_local $6)
    (i32.const -64)
   )
  )
  (call $_silk_NLSF_VQ_weights_laroia
   (tee_local $8
    (i32.add
     (get_local $6)
     (i32.const 32)
    )
   )
   (get_local $2)
   (i32.load
    (tee_local $5
     (i32.add
      (get_local $0)
      (i32.const 4640)
     )
    )
   )
  )
  (set_local $4
   (if (result i32)
    (i32.eq
     (i32.load
      (get_local $4)
     )
     (i32.const 1)
    )
    (if (result i32)
     (i32.lt_s
      (tee_local $9
       (i32.load8_s
        (tee_local $4
         (i32.add
          (get_local $0)
          (i32.const 4767)
         )
        )
       )
      )
      (i32.const 4)
     )
     (block (result i32)
      (call $_silk_interpolate
       (get_local $7)
       (get_local $3)
       (get_local $2)
       (get_local $9)
       (i32.load
        (get_local $5)
       )
      )
      (call $_silk_NLSF_VQ_weights_laroia
       (get_local $6)
       (get_local $7)
       (i32.load
        (get_local $5)
       )
      )
      (set_local $9
       (i32.load
        (get_local $5)
       )
      )
      (set_local $11
       (i32.shr_s
        (i32.shl
         (i32.mul
          (tee_local $4
           (i32.load8_s
            (get_local $4)
           )
          )
          (get_local $4)
         )
         (i32.const 27)
        )
        (i32.const 16)
       )
      )
      (set_local $4
       (i32.const 0)
      )
      (loop $while-in (result i32)
       (if (result i32)
        (i32.lt_s
         (get_local $4)
         (get_local $9)
        )
        (block
         (i32.store16
          (tee_local $12
           (i32.add
            (get_local $8)
            (i32.shl
             (get_local $4)
             (i32.const 1)
            )
           )
          )
          (i32.add
           (i32.shr_s
            (i32.load16_s
             (get_local $12)
            )
            (i32.const 1)
           )
           (i32.shr_u
            (i32.mul
             (get_local $11)
             (i32.load16_s
              (i32.add
               (get_local $6)
               (i32.shl
                (get_local $4)
                (i32.const 1)
               )
              )
             )
            )
            (i32.const 16)
           )
          )
         )
         (set_local $4
          (i32.add
           (get_local $4)
           (i32.const 1)
          )
         )
         (br $while-in)
        )
        (i32.const 1)
       )
      )
     )
     (i32.const 0)
    )
    (i32.const 0)
   )
  )
  (call $_silk_NLSF_encode
   (i32.add
    (get_local $0)
    (i32.const 4744)
   )
   (get_local $2)
   (i32.load
    (i32.add
     (get_local $0)
     (i32.const 4692)
    )
   )
   (get_local $8)
   (get_local $10)
   (i32.load
    (i32.add
     (get_local $0)
     (i32.const 4660)
    )
   )
   (i32.load8_s
    (i32.add
     (get_local $0)
     (i32.const 4765)
    )
   )
  )
  (call $_silk_NLSF2A
   (tee_local $8
    (i32.add
     (get_local $1)
     (i32.const 32)
    )
   )
   (get_local $2)
   (i32.load
    (get_local $5)
   )
  )
  (if
   (get_local $4)
   (block
    (call $_silk_interpolate
     (get_local $7)
     (get_local $3)
     (get_local $2)
     (i32.load8_s
      (i32.add
       (get_local $0)
       (i32.const 4767)
      )
     )
     (i32.load
      (get_local $5)
     )
    )
    (call $_silk_NLSF2A
     (get_local $1)
     (get_local $7)
     (i32.load
      (get_local $5)
     )
    )
    (set_global $STACKTOP
     (get_local $6)
    )
    (return)
   )
  )
  (if
   (i32.ge_s
    (tee_local $0
     (i32.load
      (get_local $5)
     )
    )
    (i32.const 17)
   )
   (call $_celt_fatal
    (i32.const 46210)
    (i32.const 46155)
    (i32.const 104)
   )
  )
  (drop
   (call $_memcpy
    (get_local $1)
    (get_local $8)
    (i32.shl
     (get_local $0)
     (i32.const 1)
    )
   )
  )
  (set_global $STACKTOP
   (get_local $6)
  )
 )
 (func $_silk_stereo_LR_to_MS (; 251 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (param $8 i32) (param $9 i32) (param $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (set_local $23
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.const 16)
   )
  )
  (set_local $15
   (i32.add
    (get_local $23)
    (i32.const 8)
   )
  )
  (set_local $24
   (i32.add
    (get_local $23)
    (i32.const 4)
   )
  )
  (set_local $21
   (i32.add
    (get_local $1)
    (i32.const -4)
   )
  )
  (set_local $22
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (tee_local $16
        (i32.add
         (get_local $10)
         (i32.const 2)
        )
       )
       (i32.const 1)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $13)
     (get_local $16)
    )
    (block
     (i32.store16
      (i32.add
       (get_local $21)
       (i32.shl
        (get_local $13)
        (i32.const 1)
       )
      )
      (i32.add
       (i32.shr_u
        (tee_local $11
         (i32.add
          (tee_local $14
           (i32.load16_s
            (i32.add
             (get_local $1)
             (i32.shl
              (tee_local $11
               (i32.add
                (get_local $13)
                (i32.const -2)
               )
              )
              (i32.const 1)
             )
            )
           )
          )
          (tee_local $12
           (i32.load16_s
            (i32.add
             (get_local $2)
             (i32.shl
              (get_local $11)
              (i32.const 1)
             )
            )
           )
          )
         )
        )
        (i32.const 1)
       )
       (i32.and
        (get_local $11)
        (i32.const 1)
       )
      )
     )
     (i32.store16
      (i32.add
       (get_local $22)
       (i32.shl
        (get_local $13)
        (i32.const 1)
       )
      )
      (if (result i32)
       (i32.lt_s
        (if (result i32)
         (i32.gt_s
          (tee_local $11
           (i32.add
            (i32.shr_s
             (tee_local $11
              (i32.sub
               (get_local $14)
               (get_local $12)
              )
             )
             (i32.const 1)
            )
            (i32.and
             (get_local $11)
             (i32.const 1)
            )
           )
          )
          (i32.const -32768)
         )
         (get_local $11)
         (tee_local $11
          (i32.const -32768)
         )
        )
        (i32.const 32767)
       )
       (get_local $11)
       (i32.const 32767)
      )
     )
     (set_local $13
      (i32.add
       (get_local $13)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (i32.store align=2
   (get_local $21)
   (i32.load align=2
    (tee_local $12
     (i32.add
      (get_local $0)
      (i32.const 4)
     )
    )
   )
  )
  (i32.store
   (get_local $22)
   (tee_local $13
    (i32.load
     (tee_local $11
      (i32.add
       (get_local $0)
       (i32.const 8)
      )
     )
    )
   )
  )
  (i32.store align=2
   (get_local $12)
   (i32.load align=2
    (i32.add
     (get_local $21)
     (i32.shl
      (get_local $10)
      (i32.const 1)
     )
    )
   )
  )
  (i32.store align=2
   (get_local $11)
   (i32.load align=2
    (i32.add
     (get_local $22)
     (i32.shl
      (get_local $10)
      (i32.const 1)
     )
    )
   )
  )
  (set_local $17
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (get_local $10)
       (i32.const 1)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (set_local $18
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (get_local $10)
       (i32.const 1)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (set_local $12
   (i32.const 0)
  )
  (loop $while-in1
   (if
    (i32.lt_s
     (get_local $12)
     (get_local $10)
    )
    (block
     (i32.store16
      (i32.add
       (get_local $17)
       (i32.shl
        (get_local $12)
        (i32.const 1)
       )
      )
      (tee_local $14
       (i32.shr_s
        (i32.add
         (i32.shr_s
          (i32.add
           (i32.add
            (i32.load16_s
             (i32.add
              (get_local $21)
              (i32.shl
               (get_local $12)
               (i32.const 1)
              )
             )
            )
            (i32.load16_s
             (i32.add
              (get_local $1)
              (i32.shl
               (get_local $12)
               (i32.const 1)
              )
             )
            )
           )
           (i32.shl
            (tee_local $16
             (i32.load16_s
              (i32.add
               (get_local $21)
               (i32.shl
                (tee_local $11
                 (i32.add
                  (get_local $12)
                  (i32.const 1)
                 )
                )
                (i32.const 1)
               )
              )
             )
            )
            (i32.const 1)
           )
          )
          (i32.const 1)
         )
         (i32.const 1)
        )
        (i32.const 1)
       )
      )
     )
     (i32.store16
      (i32.add
       (get_local $18)
       (i32.shl
        (get_local $12)
        (i32.const 1)
       )
      )
      (i32.sub
       (i32.and
        (get_local $16)
        (i32.const 65535)
       )
       (get_local $14)
      )
     )
     (set_local $12
      (get_local $11)
     )
     (br $while-in1)
    )
   )
  )
  (set_local $20
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (get_local $10)
       (i32.const 1)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (set_local $19
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (get_local $10)
       (i32.const 1)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (set_local $14
   (i32.const 0)
  )
  (set_local $12
   (i32.and
    (get_local $13)
    (i32.const 65535)
   )
  )
  (loop $while-in3
   (if
    (i32.lt_s
     (get_local $14)
     (get_local $10)
    )
    (block
     (i32.store16
      (i32.add
       (get_local $20)
       (i32.shl
        (get_local $14)
        (i32.const 1)
       )
      )
      (tee_local $16
       (i32.shr_s
        (i32.add
         (i32.shr_s
          (i32.add
           (i32.add
            (i32.shr_s
             (i32.shl
              (get_local $12)
              (i32.const 16)
             )
             (i32.const 16)
            )
            (i32.load16_s
             (i32.add
              (get_local $22)
              (i32.shl
               (i32.add
                (get_local $14)
                (i32.const 2)
               )
               (i32.const 1)
              )
             )
            )
           )
           (i32.shl
            (tee_local $12
             (i32.load16_s
              (i32.add
               (get_local $22)
               (i32.shl
                (tee_local $11
                 (i32.add
                  (get_local $14)
                  (i32.const 1)
                 )
                )
                (i32.const 1)
               )
              )
             )
            )
            (i32.const 1)
           )
          )
          (i32.const 1)
         )
         (i32.const 1)
        )
        (i32.const 1)
       )
      )
     )
     (i32.store16
      (i32.add
       (get_local $19)
       (i32.shl
        (get_local $14)
        (i32.const 1)
       )
      )
      (i32.sub
       (i32.and
        (get_local $12)
        (i32.const 65535)
       )
       (get_local $16)
      )
     )
     (set_local $14
      (get_local $11)
     )
     (br $while-in3)
    )
   )
  )
  (set_local $20
   (call $_silk_stereo_find_predictor
    (get_local $24)
    (get_local $17)
    (get_local $20)
    (i32.add
     (get_local $0)
     (i32.const 12)
    )
    (get_local $10)
    (tee_local $16
     (i32.add
      (i32.mul
       (i32.shr_u
        (tee_local $12
         (i32.mul
          (tee_local $7
           (i32.shr_s
            (i32.shl
             (get_local $7)
             (i32.const 16)
            )
            (i32.const 16)
           )
          )
          (get_local $7)
         )
        )
        (i32.const 16)
       )
       (tee_local $7
        (if (result i32)
         (tee_local $11
          (i32.eq
           (i32.mul
            (get_local $9)
            (i32.const 10)
           )
           (get_local $10)
          )
         )
         (i32.const 328)
         (i32.const 655)
        )
       )
      )
      (i32.shr_u
       (i32.mul
        (i32.and
         (get_local $12)
         (i32.const 65535)
        )
        (get_local $7)
       )
       (i32.const 16)
      )
     )
    )
   )
  )
  (i32.store
   (get_local $15)
   (get_local $20)
  )
  (set_local $13
   (call $_silk_stereo_find_predictor
    (get_local $23)
    (get_local $18)
    (get_local $19)
    (i32.add
     (get_local $0)
     (i32.const 20)
    )
    (get_local $10)
    (get_local $16)
   )
  )
  (i32.store
   (tee_local $17
    (i32.add
     (get_local $15)
     (i32.const 4)
    )
   )
   (get_local $13)
  )
  (set_local $12
   (if (result i32)
    (i32.lt_s
     (tee_local $7
      (i32.add
       (i32.load
        (get_local $23)
       )
       (i32.mul
        (i32.shr_s
         (i32.shl
          (i32.load
           (get_local $24)
          )
          (i32.const 16)
         )
         (i32.const 16)
        )
        (i32.const 3)
       )
      )
     )
     (i32.const 65536)
    )
    (get_local $7)
    (i32.const 65536)
   )
  )
  (set_local $18
   (i32.add
    (i32.mul
     (i32.shr_s
      (i32.shl
       (get_local $9)
       (i32.const 16)
      )
      (i32.const 16)
     )
     (i32.const 600)
    )
    (i32.const 2000)
   )
  )
  (set_local $6
   (call $_silk_DIV32_varQ_377
    (tee_local $11
     (if (result i32)
      (i32.gt_s
       (tee_local $6
        (i32.sub
         (get_local $6)
         (if (result i32)
          (get_local $11)
          (i32.const 1200)
          (i32.const 600)
         )
        )
       )
       (i32.const 1)
      )
      (get_local $6)
      (i32.const 1)
     )
    )
    (i32.add
     (tee_local $7
      (i32.mul
       (get_local $12)
       (i32.const 3)
      )
     )
     (i32.const 851968)
    )
    (i32.const 19)
   )
  )
  (i32.store
   (get_local $5)
   (get_local $6)
  )
  (if
   (i32.lt_s
    (get_local $6)
    (get_local $18)
   )
   (block
    (i32.store
     (get_local $5)
     (get_local $18)
    )
    (i32.store offset=4
     (get_local $5)
     (tee_local $6
      (i32.sub
       (get_local $11)
       (get_local $18)
      )
     )
    )
    (if
     (i32.gt_s
      (tee_local $6
       (call $_silk_DIV32_varQ_377
        (i32.sub
         (i32.shl
          (get_local $6)
          (i32.const 1)
         )
         (get_local $18)
        )
        (i32.add
         (i32.mul
          (i32.shr_s
           (i32.add
            (get_local $7)
            (i32.const 65536)
           )
           (i32.const 16)
          )
          (tee_local $6
           (i32.shr_s
            (i32.shl
             (get_local $18)
             (i32.const 16)
            )
            (i32.const 16)
           )
          )
         )
         (i32.shr_s
          (i32.mul
           (i32.and
            (get_local $7)
            (i32.const 65535)
           )
           (get_local $6)
          )
          (i32.const 16)
         )
        )
        (i32.const 16)
       )
      )
      (i32.const 16384)
     )
     (set_local $6
      (i32.const 16384)
     )
     (if
      (i32.le_s
       (get_local $6)
       (i32.const 0)
      )
      (set_local $6
       (i32.const 0)
      )
     )
    )
   )
   (block
    (i32.store offset=4
     (get_local $5)
     (i32.sub
      (get_local $11)
      (get_local $6)
     )
    )
    (set_local $6
     (i32.const 16384)
    )
   )
  )
  (set_local $14
   (i32.and
    (tee_local $7
     (i32.load16_s
      (tee_local $19
       (i32.add
        (get_local $0)
        (i32.const 28)
       )
      )
     )
    )
    (i32.const 65535)
   )
  )
  (i32.store16
   (get_local $19)
   (i32.add
    (i32.add
     (i32.mul
      (i32.shr_s
       (i32.sub
        (get_local $6)
        (get_local $7)
       )
       (i32.const 16)
      )
      (tee_local $7
       (i32.shr_s
        (i32.shl
         (get_local $16)
         (i32.const 16)
        )
        (i32.const 16)
       )
      )
     )
     (i32.shr_u
      (i32.mul
       (i32.and
        (i32.sub
         (get_local $6)
         (get_local $14)
        )
        (i32.const 65535)
       )
       (get_local $7)
      )
      (i32.const 16)
     )
    )
    (get_local $14)
   )
  )
  (i32.store8
   (get_local $4)
   (i32.const 0)
  )
  (block $__rjto$3
   (block $__rjti$3
    (block $__rjti$2
     (block $__rjti$1
      (set_local $3
       (block $__rjti$0 (result i32)
        (if (result i32)
         (get_local $8)
         (block (result i32)
          (i32.store
           (get_local $15)
           (i32.const 0)
          )
          (i32.store
           (get_local $17)
           (i32.const 0)
          )
          (call $_silk_stereo_quant_pred
           (get_local $15)
           (get_local $3)
          )
          (i32.const 0)
         )
         (block (result i32)
          (set_local $6
           (i32.shl
            (get_local $11)
            (i32.const 3)
           )
          )
          (block $do-once
           (if
            (i32.load16_s offset=30
             (get_local $0)
            )
            (block
             (if
              (i32.lt_s
               (get_local $6)
               (i32.mul
                (get_local $18)
                (i32.const 11)
               )
              )
              (set_local $7
               (i32.load16_s
                (get_local $19)
               )
              )
              (br_if $do-once
               (i32.ge_s
                (i32.add
                 (i32.mul
                  (i32.shr_s
                   (get_local $12)
                   (i32.const 16)
                  )
                  (tee_local $7
                   (tee_local $6
                    (i32.load16_s
                     (get_local $19)
                    )
                   )
                  )
                 )
                 (i32.shr_s
                  (i32.mul
                   (i32.and
                    (get_local $12)
                    (i32.const 65535)
                   )
                   (get_local $7)
                  )
                  (i32.const 16)
                 )
                )
                (i32.const 328)
               )
              )
             )
             (i32.store
              (get_local $15)
              (i32.shr_s
               (i32.mul
                (i32.shr_s
                 (i32.shl
                  (get_local $20)
                  (i32.const 16)
                 )
                 (i32.const 16)
                )
                (get_local $7)
               )
               (i32.const 14)
              )
             )
             (i32.store
              (get_local $17)
              (i32.shr_s
               (i32.mul
                (i32.shr_s
                 (i32.shl
                  (get_local $13)
                  (i32.const 16)
                 )
                 (i32.const 16)
                )
                (get_local $7)
               )
               (i32.const 14)
              )
             )
             (call $_silk_stereo_quant_pred
              (get_local $15)
              (get_local $3)
             )
             (i32.store
              (get_local $15)
              (i32.const 0)
             )
             (i32.store
              (get_local $17)
              (i32.const 0)
             )
             (br $__rjti$0
              (i32.const 0)
             )
            )
            (block
             (if
              (i32.lt_s
               (get_local $6)
               (i32.mul
                (get_local $18)
                (i32.const 13)
               )
              )
              (set_local $6
               (i32.load16_s
                (get_local $19)
               )
              )
              (if
               (i32.ge_s
                (i32.add
                 (i32.mul
                  (i32.shr_s
                   (get_local $12)
                   (i32.const 16)
                  )
                  (tee_local $6
                   (i32.load16_s
                    (get_local $19)
                   )
                  )
                 )
                 (i32.shr_s
                  (i32.mul
                   (i32.and
                    (get_local $12)
                    (i32.const 65535)
                   )
                   (get_local $6)
                  )
                  (i32.const 16)
                 )
                )
                (i32.const 819)
               )
               (block
                (set_local $6
                 (i32.load16_s
                  (get_local $19)
                 )
                )
                (br $do-once)
               )
              )
             )
             (i32.store
              (get_local $15)
              (i32.shr_s
               (i32.mul
                (i32.shr_s
                 (i32.shl
                  (get_local $20)
                  (i32.const 16)
                 )
                 (i32.const 16)
                )
                (get_local $6)
               )
               (i32.const 14)
              )
             )
             (i32.store
              (get_local $17)
              (i32.shr_s
               (i32.mul
                (i32.shr_s
                 (i32.shl
                  (get_local $13)
                  (i32.const 16)
                 )
                 (i32.const 16)
                )
                (get_local $6)
               )
               (i32.const 14)
              )
             )
             (call $_silk_stereo_quant_pred
              (get_local $15)
              (get_local $3)
             )
             (i32.store
              (get_local $15)
              (i32.const 0)
             )
             (i32.store
              (get_local $17)
              (i32.const 0)
             )
             (i32.store
              (get_local $5)
              (get_local $11)
             )
             (i32.store offset=4
              (get_local $5)
              (i32.const 0)
             )
             (i32.store8
              (get_local $4)
              (i32.const 1)
             )
             (set_local $3
              (i32.const 0)
             )
             (br $__rjti$1)
            )
           )
          )
          (if (result i32)
           (i32.gt_s
            (i32.shr_s
             (i32.shl
              (get_local $6)
              (i32.const 16)
             )
             (i32.const 16)
            )
            (i32.const 15565)
           )
           (block (result i32)
            (call $_silk_stereo_quant_pred
             (get_local $15)
             (get_local $3)
            )
            (i32.const 16384)
           )
           (block (result i32)
            (i32.store
             (get_local $15)
             (i32.shr_s
              (i32.mul
               (i32.shr_s
                (i32.shl
                 (get_local $20)
                 (i32.const 16)
                )
                (i32.const 16)
               )
               (tee_local $6
                (i32.shr_s
                 (i32.shl
                  (get_local $6)
                  (i32.const 16)
                 )
                 (i32.const 16)
                )
               )
              )
              (i32.const 14)
             )
            )
            (i32.store
             (get_local $17)
             (i32.shr_s
              (i32.mul
               (i32.shr_s
                (i32.shl
                 (get_local $13)
                 (i32.const 16)
                )
                (i32.const 16)
               )
               (get_local $6)
              )
              (i32.const 14)
             )
            )
            (call $_silk_stereo_quant_pred
             (get_local $15)
             (get_local $3)
            )
            (i32.load16_s
             (get_local $19)
            )
           )
          )
         )
        )
       )
      )
      (if
       (i32.ne
        (i32.load8_s
         (get_local $4)
        )
        (i32.const 1)
       )
       (block
        (i32.store16 offset=32
         (get_local $0)
         (i32.const 0)
        )
        (br $__rjti$2)
       )
      )
     )
     (set_local $6
      (i32.add
       (i32.sub
        (get_local $10)
        (i32.shl
         (get_local $9)
         (i32.const 3)
        )
       )
       (i32.load16_u
        (tee_local $7
         (i32.add
          (get_local $0)
          (i32.const 32)
         )
        )
       )
      )
     )
     (i32.store16
      (get_local $7)
      (get_local $6)
     )
     (if
      (i32.lt_s
       (i32.shr_s
        (i32.shl
         (get_local $6)
         (i32.const 16)
        )
        (i32.const 16)
       )
       (i32.mul
        (get_local $9)
        (i32.const 5)
       )
      )
      (block
       (i32.store8
        (get_local $4)
        (i32.const 0)
       )
       (br $__rjti$3)
      )
      (i32.store16
       (get_local $7)
       (i32.const 10000)
      )
     )
    )
    (br_if $__rjti$3
     (i32.eqz
      (i32.load8_s
       (get_local $4)
      )
     )
    )
    (br $__rjto$3)
   )
   (if
    (i32.lt_s
     (i32.load
      (tee_local $4
       (i32.add
        (get_local $5)
        (i32.const 4)
       )
      )
     )
     (i32.const 1)
    )
    (block
     (i32.store
      (get_local $4)
      (i32.const 1)
     )
     (set_local $4
      (call $_silk_max_32_344
       (i32.add
        (get_local $11)
        (i32.const -1)
       )
      )
     )
     (i32.store
      (get_local $5)
      (get_local $4)
     )
    )
   )
  )
  (set_local $19
   (i32.shr_s
    (i32.add
     (i32.shr_s
      (i32.mul
       (i32.shr_s
        (i32.shl
         (i32.sub
          (tee_local $24
           (i32.load
            (get_local $15)
           )
          )
          (i32.and
           (tee_local $8
            (i32.load16_s
             (get_local $0)
            )
           )
           (i32.const 65535)
          )
         )
         (i32.const 16)
        )
        (i32.const 16)
       )
       (tee_local $6
        (i32.shr_s
         (i32.shl
          (i32.div_s
           (i32.const 65536)
           (tee_local $9
            (i32.shl
             (get_local $9)
             (i32.const 3)
            )
           )
          )
          (i32.const 16)
         )
         (i32.const 16)
        )
       )
      )
      (i32.const 15)
     )
     (i32.const 1)
    )
    (i32.const 1)
   )
  )
  (set_local $16
   (i32.shr_s
    (i32.add
     (i32.shr_s
      (i32.mul
       (i32.shr_s
        (i32.shl
         (i32.sub
          (tee_local $17
           (i32.load
            (get_local $17)
           )
          )
          (i32.and
           (tee_local $7
            (i32.load16_s
             (tee_local $13
              (i32.add
               (get_local $0)
               (i32.const 2)
              )
             )
            )
           )
           (i32.const 65535)
          )
         )
         (i32.const 16)
        )
        (i32.const 16)
       )
       (get_local $6)
      )
      (i32.const 15)
     )
     (i32.const 1)
    )
    (i32.const 1)
   )
  )
  (set_local $12
   (i32.shl
    (i32.add
     (i32.mul
      (i32.shr_s
       (i32.sub
        (get_local $3)
        (tee_local $4
         (tee_local $5
          (i32.load16_s
           (tee_local $14
            (i32.add
             (get_local $0)
             (i32.const 30)
            )
           )
          )
         )
        )
       )
       (i32.const 16)
      )
      (get_local $6)
     )
     (i32.shr_s
      (i32.mul
       (i32.and
        (i32.sub
         (get_local $3)
         (i32.and
          (get_local $5)
          (i32.const 65535)
         )
        )
        (i32.const 65535)
       )
       (get_local $6)
      )
      (i32.const 16)
     )
    )
    (i32.const 10)
   )
  )
  (set_local $6
   (i32.shl
    (get_local $4)
    (i32.const 10)
   )
  )
  (set_local $4
   (i32.sub
    (i32.const 0)
    (get_local $7)
   )
  )
  (set_local $5
   (i32.sub
    (i32.const 0)
    (get_local $8)
   )
  )
  (set_local $8
   (i32.const 0)
  )
  (loop $while-in8
   (if
    (i32.lt_s
     (get_local $8)
     (get_local $9)
    )
    (block
     (set_local $20
      (i32.add
       (i32.add
        (i32.load16_s
         (i32.add
          (get_local $21)
          (i32.shl
           (get_local $8)
           (i32.const 1)
          )
         )
        )
        (i32.load16_s
         (i32.add
          (get_local $1)
          (i32.shl
           (get_local $8)
           (i32.const 1)
          )
         )
        )
       )
       (i32.shl
        (tee_local $18
         (i32.load16_s
          (i32.add
           (get_local $21)
           (i32.shl
            (tee_local $7
             (i32.add
              (get_local $8)
              (i32.const 1)
             )
            )
            (i32.const 1)
           )
          )
         )
        )
        (i32.const 1)
       )
      )
     )
     (i32.store16
      (i32.add
       (get_local $2)
       (i32.shl
        (i32.add
         (get_local $8)
         (i32.const -1)
        )
        (i32.const 1)
       )
      )
      (tee_local $11
       (if (result i32)
        (i32.gt_s
         (tee_local $11
          (i32.add
           (i32.add
            (i32.add
             (i32.mul
              (i32.shr_s
               (tee_local $6
                (i32.add
                 (get_local $6)
                 (get_local $12)
                )
               )
               (i32.const 16)
              )
              (tee_local $11
               (i32.load16_s
                (i32.add
                 (get_local $22)
                 (i32.shl
                  (get_local $7)
                  (i32.const 1)
                 )
                )
               )
              )
             )
             (i32.shr_s
              (i32.mul
               (i32.and
                (get_local $6)
                (i32.const 64512)
               )
               (get_local $11)
              )
              (i32.const 16)
             )
            )
            (i32.add
             (i32.mul
              (i32.shr_s
               (get_local $20)
               (i32.const 7)
              )
              (tee_local $11
               (i32.shr_s
                (i32.shl
                 (tee_local $5
                  (i32.sub
                   (get_local $5)
                   (get_local $19)
                  )
                 )
                 (i32.const 16)
                )
                (i32.const 16)
               )
              )
             )
             (i32.shr_s
              (i32.mul
               (i32.and
                (i32.shl
                 (get_local $20)
                 (i32.const 9)
                )
                (i32.const 65024)
               )
               (get_local $11)
              )
              (i32.const 16)
             )
            )
           )
           (i32.add
            (i32.mul
             (i32.shr_s
              (get_local $18)
              (i32.const 5)
             )
             (tee_local $11
              (i32.shr_s
               (i32.shl
                (tee_local $4
                 (i32.sub
                  (get_local $4)
                  (get_local $16)
                 )
                )
                (i32.const 16)
               )
               (i32.const 16)
              )
             )
            )
            (i32.shr_s
             (i32.mul
              (i32.and
               (i32.shl
                (get_local $18)
                (i32.const 11)
               )
               (i32.const 63488)
              )
              (get_local $11)
             )
             (i32.const 16)
            )
           )
          )
         )
         (i32.const 8388479)
        )
        (i32.const 32767)
        (if (result i32)
         (i32.lt_s
          (get_local $11)
          (i32.const -8388736)
         )
         (i32.const -32768)
         (i32.shr_s
          (i32.add
           (i32.shr_s
            (get_local $11)
            (i32.const 7)
           )
           (i32.const 1)
          )
          (i32.const 1)
         )
        )
       )
      )
     )
     (set_local $8
      (get_local $7)
     )
     (br $while-in8)
    )
   )
  )
  (set_local $8
   (i32.shr_s
    (get_local $3)
    (i32.const 6)
   )
  )
  (set_local $7
   (i32.and
    (i32.shl
     (get_local $3)
     (i32.const 10)
    )
    (i32.const 64512)
   )
  )
  (set_local $16
   (i32.shr_s
    (i32.sub
     (i32.const 0)
     (i32.shl
      (get_local $24)
      (i32.const 16)
     )
    )
    (i32.const 16)
   )
  )
  (set_local $12
   (i32.shr_s
    (i32.sub
     (i32.const 0)
     (i32.shl
      (get_local $17)
      (i32.const 16)
     )
    )
    (i32.const 16)
   )
  )
  (set_local $4
   (get_local $9)
  )
  (loop $while-in10
   (if
    (i32.lt_s
     (get_local $4)
     (get_local $10)
    )
    (block
     (set_local $9
      (i32.add
       (i32.add
        (i32.load16_s
         (i32.add
          (get_local $21)
          (i32.shl
           (get_local $4)
           (i32.const 1)
          )
         )
        )
        (i32.load16_s
         (i32.add
          (get_local $1)
          (i32.shl
           (get_local $4)
           (i32.const 1)
          )
         )
        )
       )
       (i32.shl
        (tee_local $11
         (i32.load16_s
          (i32.add
           (get_local $21)
           (i32.shl
            (tee_local $5
             (i32.add
              (get_local $4)
              (i32.const 1)
             )
            )
            (i32.const 1)
           )
          )
         )
        )
        (i32.const 1)
       )
      )
     )
     (i32.store16
      (i32.add
       (get_local $2)
       (i32.shl
        (i32.add
         (get_local $4)
         (i32.const -1)
        )
        (i32.const 1)
       )
      )
      (tee_local $6
       (if (result i32)
        (i32.gt_s
         (tee_local $6
          (i32.add
           (i32.add
            (i32.add
             (i32.mul
              (get_local $8)
              (tee_local $6
               (i32.load16_s
                (i32.add
                 (get_local $22)
                 (i32.shl
                  (get_local $5)
                  (i32.const 1)
                 )
                )
               )
              )
             )
             (i32.shr_s
              (i32.mul
               (get_local $7)
               (get_local $6)
              )
              (i32.const 16)
             )
            )
            (i32.add
             (i32.mul
              (i32.shr_s
               (get_local $9)
               (i32.const 7)
              )
              (get_local $16)
             )
             (i32.shr_s
              (i32.mul
               (i32.and
                (i32.shl
                 (get_local $9)
                 (i32.const 9)
                )
                (i32.const 65024)
               )
               (get_local $16)
              )
              (i32.const 16)
             )
            )
           )
           (i32.add
            (i32.mul
             (i32.shr_s
              (get_local $11)
              (i32.const 5)
             )
             (get_local $12)
            )
            (i32.shr_s
             (i32.mul
              (i32.and
               (i32.shl
                (get_local $11)
                (i32.const 11)
               )
               (i32.const 63488)
              )
              (get_local $12)
             )
             (i32.const 16)
            )
           )
          )
         )
         (i32.const 8388479)
        )
        (i32.const 32767)
        (if (result i32)
         (i32.lt_s
          (get_local $6)
          (i32.const -8388736)
         )
         (i32.const -32768)
         (i32.shr_s
          (i32.add
           (i32.shr_s
            (get_local $6)
            (i32.const 7)
           )
           (i32.const 1)
          )
          (i32.const 1)
         )
        )
       )
      )
     )
     (set_local $4
      (get_local $5)
     )
     (br $while-in10)
    )
   )
  )
  (i32.store16
   (get_local $0)
   (get_local $24)
  )
  (i32.store16
   (get_local $13)
   (get_local $17)
  )
  (i32.store16
   (get_local $14)
   (get_local $3)
  )
  (set_global $STACKTOP
   (get_local $23)
  )
 )
 (func $_silk_DIV32_varQ_377 (; 252 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (set_local $3
   (i32.sub
    (i32.const 0)
    (get_local $0)
   )
  )
  (set_local $3
   (call $_silk_CLZ32
    (if (result i32)
     (i32.gt_s
      (get_local $0)
      (i32.const 0)
     )
     (get_local $0)
     (get_local $3)
    )
   )
  )
  (set_local $0
   (i32.shl
    (get_local $0)
    (i32.add
     (get_local $3)
     (i32.const -1)
    )
   )
  )
  (set_local $4
   (i32.sub
    (i32.const 0)
    (get_local $1)
   )
  )
  (set_local $4
   (i32.add
    (call $_silk_CLZ32
     (if (result i32)
      (i32.gt_s
       (get_local $1)
       (i32.const 0)
      )
      (get_local $1)
      (get_local $4)
     )
    )
    (i32.const -1)
   )
  )
  (set_local $0
   (i32.add
    (tee_local $6
     (i32.add
      (i32.mul
       (i32.shr_s
        (get_local $0)
        (i32.const 16)
       )
       (tee_local $1
        (i32.shr_s
         (i32.shl
          (i32.div_s
           (i32.const 536870911)
           (i32.shr_s
            (tee_local $5
             (i32.shl
              (get_local $1)
              (get_local $4)
             )
            )
            (i32.const 16)
           )
          )
          (i32.const 16)
         )
         (i32.const 16)
        )
       )
      )
      (i32.shr_s
       (i32.mul
        (i32.and
         (get_local $0)
         (i32.const 65535)
        )
        (get_local $1)
       )
       (i32.const 16)
      )
     )
    )
    (i32.add
     (i32.mul
      (i32.shr_s
       (tee_local $0
        (i32.sub
         (get_local $0)
         (i32.and
          (i32.wrap/i64
           (i64.shr_u
            (i64.mul
             (i64.extend_s/i32
              (get_local $5)
             )
             (i64.extend_s/i32
              (get_local $6)
             )
            )
            (i64.const 29)
           )
          )
          (i32.const -8)
         )
        )
       )
       (i32.const 16)
      )
      (get_local $1)
     )
     (i32.shr_s
      (i32.mul
       (i32.and
        (get_local $0)
        (i32.const 65535)
       )
       (get_local $1)
      )
      (i32.const 16)
     )
    )
   )
  )
  (if
   (i32.ge_s
    (tee_local $1
     (i32.sub
      (i32.sub
       (i32.add
        (get_local $3)
        (i32.const 28)
       )
       (get_local $4)
      )
      (get_local $2)
     )
    )
    (i32.const 0)
   )
   (block
    (set_local $0
     (i32.shr_s
      (get_local $0)
      (get_local $1)
     )
    )
    (return
     (if (result i32)
      (i32.lt_s
       (get_local $1)
       (i32.const 32)
      )
      (get_local $0)
      (i32.const 0)
     )
    )
   )
  )
  (if (result i32)
   (i32.gt_s
    (tee_local $2
     (i32.shr_s
      (i32.const -2147483648)
      (tee_local $1
       (i32.sub
        (i32.const 0)
        (get_local $1)
       )
      )
     )
    )
    (tee_local $3
     (i32.shr_u
      (i32.const 2147483647)
      (get_local $1)
     )
    )
   )
   (block (result i32)
    (if
     (i32.gt_s
      (get_local $0)
      (get_local $2)
     )
     (return
      (i32.shl
       (get_local $2)
       (get_local $1)
      )
     )
    )
    (i32.shl
     (if (result i32)
      (i32.lt_s
       (get_local $0)
       (get_local $3)
      )
      (get_local $3)
      (get_local $0)
     )
     (get_local $1)
    )
   )
   (block (result i32)
    (if
     (i32.gt_s
      (get_local $0)
      (get_local $3)
     )
     (return
      (i32.shl
       (get_local $3)
       (get_local $1)
      )
     )
    )
    (i32.shl
     (if (result i32)
      (i32.lt_s
       (get_local $0)
       (get_local $2)
      )
      (get_local $2)
      (get_local $0)
     )
     (get_local $1)
    )
   )
  )
 )
 (func $_silk_stereo_MS_to_LR (; 253 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (i32.store align=2
   (get_local $1)
   (i32.load align=2
    (tee_local $7
     (i32.add
      (get_local $0)
      (i32.const 4)
     )
    )
   )
  )
  (i32.store align=2
   (get_local $2)
   (i32.load align=2
    (tee_local $6
     (i32.add
      (get_local $0)
      (i32.const 8)
     )
    )
   )
  )
  (i32.store align=2
   (get_local $7)
   (i32.load align=2
    (i32.add
     (get_local $1)
     (i32.shl
      (get_local $5)
      (i32.const 1)
     )
    )
   )
  )
  (i32.store align=2
   (get_local $6)
   (i32.load align=2
    (i32.add
     (get_local $2)
     (i32.shl
      (get_local $5)
      (i32.const 1)
     )
    )
   )
  )
  (set_local $12
   (i32.shr_s
    (i32.add
     (i32.shr_s
      (i32.mul
       (i32.shr_s
        (i32.shl
         (i32.sub
          (i32.load
           (get_local $3)
          )
          (i32.and
           (tee_local $7
            (i32.load16_s
             (get_local $0)
            )
           )
           (i32.const 65535)
          )
         )
         (i32.const 16)
        )
        (i32.const 16)
       )
       (tee_local $6
        (i32.shr_s
         (i32.shl
          (i32.div_s
           (i32.const 65536)
           (tee_local $9
            (i32.shl
             (get_local $4)
             (i32.const 3)
            )
           )
          )
          (i32.const 16)
         )
         (i32.const 16)
        )
       )
      )
      (i32.const 15)
     )
     (i32.const 1)
    )
    (i32.const 1)
   )
  )
  (set_local $14
   (i32.shr_s
    (i32.add
     (i32.shr_s
      (i32.mul
       (i32.shr_s
        (i32.shl
         (i32.sub
          (i32.load
           (tee_local $11
            (i32.add
             (get_local $3)
             (i32.const 4)
            )
           )
          )
          (i32.and
           (tee_local $4
            (i32.load16_s
             (tee_local $13
              (i32.add
               (get_local $0)
               (i32.const 2)
              )
             )
            )
           )
           (i32.const 65535)
          )
         )
         (i32.const 16)
        )
        (i32.const 16)
       )
       (get_local $6)
      )
      (i32.const 15)
     )
     (i32.const 1)
    )
    (i32.const 1)
   )
  )
  (set_local $6
   (i32.const 0)
  )
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $6)
     (get_local $9)
    )
    (block
     (set_local $10
      (i32.add
       (i32.add
        (i32.load16_s
         (i32.add
          (get_local $1)
          (i32.shl
           (get_local $6)
           (i32.const 1)
          )
         )
        )
        (i32.load16_s
         (i32.add
          (get_local $1)
          (i32.shl
           (i32.add
            (get_local $6)
            (i32.const 2)
           )
           (i32.const 1)
          )
         )
        )
       )
       (i32.shl
        (tee_local $8
         (i32.load16_s
          (i32.add
           (get_local $1)
           (i32.shl
            (tee_local $6
             (i32.add
              (get_local $6)
              (i32.const 1)
             )
            )
            (i32.const 1)
           )
          )
         )
        )
        (i32.const 1)
       )
      )
     )
     (set_local $8
      (if (result i32)
       (i32.gt_s
        (tee_local $8
         (i32.add
          (i32.add
           (i32.shl
            (i32.load16_s
             (tee_local $15
              (i32.add
               (get_local $2)
               (i32.shl
                (get_local $6)
                (i32.const 1)
               )
              )
             )
            )
            (i32.const 8)
           )
           (i32.add
            (i32.mul
             (i32.shr_s
              (get_local $10)
              (i32.const 7)
             )
             (tee_local $16
              (i32.shr_s
               (i32.shl
                (tee_local $7
                 (i32.add
                  (get_local $7)
                  (get_local $12)
                 )
                )
                (i32.const 16)
               )
               (i32.const 16)
              )
             )
            )
            (i32.shr_s
             (i32.mul
              (i32.and
               (i32.shl
                (get_local $10)
                (i32.const 9)
               )
               (i32.const 65024)
              )
              (get_local $16)
             )
             (i32.const 16)
            )
           )
          )
          (i32.add
           (i32.mul
            (i32.shr_s
             (get_local $8)
             (i32.const 5)
            )
            (tee_local $10
             (i32.shr_s
              (i32.shl
               (tee_local $4
                (i32.add
                 (get_local $4)
                 (get_local $14)
                )
               )
               (i32.const 16)
              )
              (i32.const 16)
             )
            )
           )
           (i32.shr_s
            (i32.mul
             (i32.and
              (i32.shl
               (get_local $8)
               (i32.const 11)
              )
              (i32.const 63488)
             )
             (get_local $10)
            )
            (i32.const 16)
           )
          )
         )
        )
        (i32.const 8388479)
       )
       (i32.const 32767)
       (if (result i32)
        (i32.lt_s
         (get_local $8)
         (i32.const -8388736)
        )
        (i32.const -32768)
        (i32.shr_s
         (i32.add
          (i32.shr_s
           (get_local $8)
           (i32.const 7)
          )
          (i32.const 1)
         )
         (i32.const 1)
        )
       )
      )
     )
     (i32.store16
      (get_local $15)
      (get_local $8)
     )
     (br $while-in)
    )
   )
  )
  (set_local $6
   (i32.shr_s
    (i32.shl
     (i32.load
      (get_local $3)
     )
     (i32.const 16)
    )
    (i32.const 16)
   )
  )
  (set_local $8
   (i32.shr_s
    (i32.shl
     (i32.load
      (get_local $11)
     )
     (i32.const 16)
    )
    (i32.const 16)
   )
  )
  (set_local $4
   (get_local $9)
  )
  (loop $while-in1
   (if
    (i32.lt_s
     (get_local $4)
     (get_local $5)
    )
    (block
     (set_local $9
      (i32.add
       (i32.add
        (i32.load16_s
         (i32.add
          (get_local $1)
          (i32.shl
           (get_local $4)
           (i32.const 1)
          )
         )
        )
        (i32.load16_s
         (i32.add
          (get_local $1)
          (i32.shl
           (i32.add
            (get_local $4)
            (i32.const 2)
           )
           (i32.const 1)
          )
         )
        )
       )
       (i32.shl
        (tee_local $7
         (i32.load16_s
          (i32.add
           (get_local $1)
           (i32.shl
            (tee_local $4
             (i32.add
              (get_local $4)
              (i32.const 1)
             )
            )
            (i32.const 1)
           )
          )
         )
        )
        (i32.const 1)
       )
      )
     )
     (set_local $7
      (if (result i32)
       (i32.gt_s
        (tee_local $7
         (i32.add
          (i32.add
           (i32.shl
            (i32.load16_s
             (tee_local $10
              (i32.add
               (get_local $2)
               (i32.shl
                (get_local $4)
                (i32.const 1)
               )
              )
             )
            )
            (i32.const 8)
           )
           (i32.add
            (i32.mul
             (i32.shr_s
              (get_local $9)
              (i32.const 7)
             )
             (get_local $6)
            )
            (i32.shr_s
             (i32.mul
              (i32.and
               (i32.shl
                (get_local $9)
                (i32.const 9)
               )
               (i32.const 65024)
              )
              (get_local $6)
             )
             (i32.const 16)
            )
           )
          )
          (i32.add
           (i32.mul
            (i32.shr_s
             (get_local $7)
             (i32.const 5)
            )
            (get_local $8)
           )
           (i32.shr_s
            (i32.mul
             (i32.and
              (i32.shl
               (get_local $7)
               (i32.const 11)
              )
              (i32.const 63488)
             )
             (get_local $8)
            )
            (i32.const 16)
           )
          )
         )
        )
        (i32.const 8388479)
       )
       (i32.const 32767)
       (if (result i32)
        (i32.lt_s
         (get_local $7)
         (i32.const -8388736)
        )
        (i32.const -32768)
        (i32.shr_s
         (i32.add
          (i32.shr_s
           (get_local $7)
           (i32.const 7)
          )
          (i32.const 1)
         )
         (i32.const 1)
        )
       )
      )
     )
     (i32.store16
      (get_local $10)
      (get_local $7)
     )
     (br $while-in1)
    )
   )
  )
  (i32.store16
   (get_local $0)
   (i32.load
    (get_local $3)
   )
  )
  (i32.store16
   (get_local $13)
   (i32.load
    (get_local $11)
   )
  )
  (set_local $0
   (i32.const 0)
  )
  (loop $while-in3
   (if
    (i32.lt_s
     (get_local $0)
     (get_local $5)
    )
    (block
     (set_local $3
      (i32.add
       (tee_local $4
        (i32.load16_s
         (tee_local $7
          (i32.add
           (get_local $1)
           (i32.shl
            (tee_local $0
             (i32.add
              (get_local $0)
              (i32.const 1)
             )
            )
            (i32.const 1)
           )
          )
         )
        )
       )
       (tee_local $9
        (i32.load16_s
         (tee_local $6
          (i32.add
           (get_local $2)
           (i32.shl
            (get_local $0)
            (i32.const 1)
           )
          )
         )
        )
       )
      )
     )
     (set_local $4
      (i32.sub
       (get_local $4)
       (get_local $9)
      )
     )
     (i32.store16
      (get_local $7)
      (if (result i32)
       (i32.lt_s
        (if (result i32)
         (i32.gt_s
          (get_local $3)
          (i32.const -32768)
         )
         (get_local $3)
         (tee_local $3
          (i32.const -32768)
         )
        )
        (i32.const 32767)
       )
       (get_local $3)
       (i32.const 32767)
      )
     )
     (i32.store16
      (get_local $6)
      (if (result i32)
       (i32.lt_s
        (if (result i32)
         (i32.gt_s
          (get_local $4)
          (i32.const -32768)
         )
         (get_local $4)
         (tee_local $4
          (i32.const -32768)
         )
        )
        (i32.const 32767)
       )
       (get_local $4)
       (i32.const 32767)
      )
     )
     (br $while-in3)
    )
   )
  )
 )
 (func $_check_control_input (; 254 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (if
   (i32.eqz
    (get_local $0)
   )
   (call $_celt_fatal
    (i32.const 46269)
    (i32.const 46306)
    (i32.const 41)
   )
  )
  (block $label$break$L22
   (block $__rjti$0
    (if
     (i32.lt_s
      (tee_local $1
       (i32.load offset=8
        (get_local $0)
       )
      )
      (i32.const 24000)
     )
     (block
      (if
       (i32.lt_s
        (get_local $1)
        (i32.const 12000)
       )
       (block
        (br_if $label$break$L22
         (i32.sub
          (get_local $1)
          (i32.const 8000)
         )
        )
        (br $__rjti$0)
       )
      )
      (if
       (i32.lt_s
        (get_local $1)
        (i32.const 16000)
       )
       (br_if $__rjti$0
        (i32.eqz
         (i32.sub
          (get_local $1)
          (i32.const 12000)
         )
        )
       )
       (br_if $__rjti$0
        (i32.eqz
         (i32.sub
          (get_local $1)
          (i32.const 16000)
         )
        )
       )
      )
     )
     (if
      (i32.lt_s
       (get_local $1)
       (i32.const 44100)
      )
      (if
       (i32.lt_s
        (get_local $1)
        (i32.const 32000)
       )
       (br_if $__rjti$0
        (i32.eqz
         (i32.sub
          (get_local $1)
          (i32.const 24000)
         )
        )
       )
       (br_if $__rjti$0
        (i32.eqz
         (i32.sub
          (get_local $1)
          (i32.const 32000)
         )
        )
       )
      )
      (if
       (i32.lt_s
        (get_local $1)
        (i32.const 48000)
       )
       (br_if $__rjti$0
        (i32.eqz
         (i32.sub
          (get_local $1)
          (i32.const 44100)
         )
        )
       )
       (br_if $__rjti$0
        (i32.eqz
         (i32.sub
          (get_local $1)
          (i32.const 48000)
         )
        )
       )
      )
     )
    )
    (br $label$break$L22)
   )
   (if
    (i32.lt_s
     (tee_local $1
      (i32.load offset=20
       (get_local $0)
      )
     )
     (i32.const 12000)
    )
    (br_if $label$break$L22
     (i32.sub
      (get_local $1)
      (i32.const 8000)
     )
    )
    (if
     (i32.lt_s
      (get_local $1)
      (i32.const 16000)
     )
     (br_if $label$break$L22
      (i32.sub
       (get_local $1)
       (i32.const 12000)
      )
     )
     (br_if $label$break$L22
      (i32.sub
       (get_local $1)
       (i32.const 16000)
      )
     )
    )
   )
   (if
    (i32.lt_s
     (tee_local $2
      (i32.load offset=12
       (get_local $0)
      )
     )
     (i32.const 12000)
    )
    (br_if $label$break$L22
     (i32.sub
      (get_local $2)
      (i32.const 8000)
     )
    )
    (if
     (i32.lt_s
      (get_local $2)
      (i32.const 16000)
     )
     (br_if $label$break$L22
      (i32.sub
       (get_local $2)
       (i32.const 12000)
      )
     )
     (br_if $label$break$L22
      (i32.sub
       (get_local $2)
       (i32.const 16000)
      )
     )
    )
   )
   (if
    (i32.lt_s
     (tee_local $3
      (i32.load offset=16
       (get_local $0)
      )
     )
     (i32.const 12000)
    )
    (br_if $label$break$L22
     (i32.sub
      (get_local $3)
      (i32.const 8000)
     )
    )
    (if
     (i32.lt_s
      (get_local $3)
      (i32.const 16000)
     )
     (br_if $label$break$L22
      (i32.sub
       (get_local $3)
       (i32.const 12000)
      )
     )
     (br_if $label$break$L22
      (i32.sub
       (get_local $3)
       (i32.const 16000)
      )
     )
    )
   )
   (if
    (i32.eqz
     (i32.or
      (i32.or
       (i32.gt_s
        (get_local $3)
        (get_local $1)
       )
       (i32.lt_s
        (get_local $2)
        (get_local $1)
       )
      )
      (i32.gt_s
       (get_local $3)
       (get_local $2)
      )
     )
    )
    (block
     (block $switch49
      (block $switch-default54
       (block $switch-case50
        (br_table $switch-case50 $switch-default54 $switch-default54 $switch-default54 $switch-default54 $switch-default54 $switch-default54 $switch-default54 $switch-default54 $switch-default54 $switch-case50 $switch-default54 $switch-default54 $switch-default54 $switch-default54 $switch-default54 $switch-default54 $switch-default54 $switch-default54 $switch-default54 $switch-default54 $switch-default54 $switch-default54 $switch-default54 $switch-default54 $switch-default54 $switch-default54 $switch-default54 $switch-default54 $switch-default54 $switch-case50 $switch-default54 $switch-default54 $switch-default54 $switch-default54 $switch-default54 $switch-default54 $switch-default54 $switch-default54 $switch-default54 $switch-default54 $switch-default54 $switch-default54 $switch-default54 $switch-default54 $switch-default54 $switch-default54 $switch-default54 $switch-default54 $switch-default54 $switch-case50 $switch-default54
         (i32.sub
          (i32.load offset=24
           (get_local $0)
          )
          (i32.const 10)
         )
        )
       )
       (br $switch49)
      )
      (call $_celt_fatal
       (i32.const 49348)
       (i32.const 46306)
       (i32.const 69)
      )
     )
     (if
      (i32.gt_u
       (i32.load offset=32
        (get_local $0)
       )
       (i32.const 100)
      )
      (call $_celt_fatal
       (i32.const 49348)
       (i32.const 46306)
       (i32.const 73)
      )
     )
     (if
      (i32.gt_u
       (i32.load offset=48
        (get_local $0)
       )
       (i32.const 1)
      )
      (call $_celt_fatal
       (i32.const 49348)
       (i32.const 46306)
       (i32.const 77)
      )
     )
     (if
      (i32.gt_u
       (i32.load offset=52
        (get_local $0)
       )
       (i32.const 1)
      )
      (call $_celt_fatal
       (i32.const 49348)
       (i32.const 46306)
       (i32.const 81)
      )
     )
     (if
      (i32.gt_u
       (i32.load offset=40
        (get_local $0)
       )
       (i32.const 1)
      )
      (call $_celt_fatal
       (i32.const 49348)
       (i32.const 46306)
       (i32.const 85)
      )
     )
     (if
      (i32.gt_u
       (i32.add
        (tee_local $1
         (i32.load
          (get_local $0)
         )
        )
        (i32.const -1)
       )
       (i32.const 1)
      )
      (call $_celt_fatal
       (i32.const 49348)
       (i32.const 46306)
       (i32.const 89)
      )
     )
     (if
      (i32.gt_u
       (i32.add
        (tee_local $2
         (i32.load offset=4
          (get_local $0)
         )
        )
        (i32.const -1)
       )
       (i32.const 1)
      )
      (call $_celt_fatal
       (i32.const 49348)
       (i32.const 46306)
       (i32.const 93)
      )
     )
     (if
      (i32.gt_s
       (get_local $2)
       (get_local $1)
      )
      (call $_celt_fatal
       (i32.const 49348)
       (i32.const 46306)
       (i32.const 97)
      )
     )
     (if
      (i32.gt_u
       (i32.load offset=36
        (get_local $0)
       )
       (i32.const 10)
      )
      (call $_celt_fatal
       (i32.const 49348)
       (i32.const 46306)
       (i32.const 101)
      )
      (return)
     )
    )
   )
  )
  (call $_celt_fatal
   (i32.const 49348)
   (i32.const 46306)
   (i32.const 62)
  )
 )
 (func $_silk_control_SNR (; 255 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (i32.store
   (i32.add
    (get_local $0)
    (i32.const 4608)
   )
   (get_local $1)
  )
  (set_local $2
   (i32.load
    (i32.add
     (get_local $0)
     (i32.const 4576)
    )
   )
  )
  (if
   (i32.eq
    (i32.load
     (i32.add
      (get_local $0)
      (i32.const 4580)
     )
    )
    (i32.const 2)
   )
   (set_local $1
    (i32.sub
     (get_local $1)
     (i32.add
      (i32.div_s
       (get_local $2)
       (i32.const 16)
      )
      (i32.const 2000)
     )
    )
   )
  )
  (set_local $1
   (if (result i32)
    (i32.lt_s
     (i32.add
      (tee_local $4
       (i32.div_s
        (i32.add
         (get_local $1)
         (i32.const 200)
        )
        (i32.const 400)
       )
      )
      (i32.const -9)
     )
     (tee_local $2
      (block $switch (result i32)
       (block $switch-default
        (block $switch-case0
         (block $switch-case
          (br_table $switch-case $switch-default $switch-default $switch-default $switch-case0 $switch-default
           (i32.sub
            (get_local $2)
            (i32.const 8)
           )
          )
         )
         (set_local $3
          (i32.const 27296)
         )
         (br $switch
          (i32.const 107)
         )
        )
        (set_local $3
         (i32.const 27408)
        )
        (br $switch
         (i32.const 155)
        )
       )
       (set_local $3
        (i32.const 27568)
       )
       (i32.const 191)
      )
     )
    )
    (block (result i32)
     (set_local $2
      (i32.add
       (get_local $4)
       (i32.const -10)
      )
     )
     (if (result i32)
      (i32.lt_s
       (get_local $1)
       (i32.const 4200)
      )
      (block
       (i32.store
        (i32.add
         (get_local $0)
         (i32.const 4716)
        )
        (i32.const 0)
       )
       (return)
      )
      (get_local $2)
     )
    )
    (i32.add
     (get_local $2)
     (i32.const -1)
    )
   )
  )
  (i32.store
   (i32.add
    (get_local $0)
    (i32.const 4716)
   )
   (i32.mul
    (i32.load8_u
     (i32.add
      (get_local $3)
      (get_local $1)
     )
    )
    (i32.const 21)
   )
  )
 )
 (func $_silk_init_encoder (; 256 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (drop
   (call $_memset
    (get_local $0)
    (i32.const 0)
    (i32.const 10064)
   )
  )
  (i32.store
   (i32.add
    (get_local $0)
    (i32.const 5092)
   )
   (get_local $1)
  )
  (set_local $2
   (i32.add
    (i32.shl
     (call $_silk_lin2log
      (i32.const 3932160)
     )
     (i32.const 8)
    )
    (i32.const -524288)
   )
  )
  (i32.store offset=8
   (get_local $0)
   (get_local $2)
  )
  (i32.store offset=12
   (get_local $0)
   (get_local $2)
  )
  (i32.store
   (i32.add
    (get_local $0)
    (i32.const 4664)
   )
   (i32.const 1)
  )
  (call $_silk_VAD_Init
   (i32.add
    (get_local $0)
    (i32.const 36)
   )
  )
 )
 (func $_silk_control_encoder (; 257 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (local $5 i32)
  (i32.store
   (i32.add
    (get_local $0)
    (i32.const 6076)
   )
   (i32.load offset=48
    (get_local $1)
   )
  )
  (i32.store
   (i32.add
    (get_local $0)
    (i32.const 4676)
   )
   (i32.load offset=52
    (get_local $1)
   )
  )
  (i32.store
   (i32.add
    (get_local $0)
    (i32.const 4556)
   )
   (tee_local $5
    (i32.load offset=8
     (get_local $1)
    )
   )
  )
  (i32.store
   (i32.add
    (get_local $0)
    (i32.const 4564)
   )
   (i32.load offset=12
    (get_local $1)
   )
  )
  (i32.store
   (i32.add
    (get_local $0)
    (i32.const 4568)
   )
   (i32.load offset=16
    (get_local $1)
   )
  )
  (i32.store
   (i32.add
    (get_local $0)
    (i32.const 4572)
   )
   (i32.load offset=20
    (get_local $1)
   )
  )
  (i32.store
   (i32.add
    (get_local $0)
    (i32.const 6088)
   )
   (i32.load offset=40
    (get_local $1)
   )
  )
  (i32.store
   (i32.add
    (get_local $0)
    (i32.const 5752)
   )
   (i32.load
    (get_local $1)
   )
  )
  (i32.store
   (i32.add
    (get_local $0)
    (i32.const 5756)
   )
   (i32.load offset=4
    (get_local $1)
   )
  )
  (i32.store
   (i32.add
    (get_local $0)
    (i32.const 4536)
   )
   (get_local $2)
  )
  (i32.store
   (i32.add
    (get_local $0)
    (i32.const 5760)
   )
   (get_local $3)
  )
  (if
   (i32.load
    (tee_local $3
     (i32.add
      (get_local $0)
      (i32.const 4668)
     )
    )
   )
   (if
    (i32.eqz
     (i32.load
      (i32.add
       (get_local $0)
       (i32.const 4680)
      )
     )
    )
    (block
     (if
      (i32.eq
       (get_local $5)
       (i32.load
        (i32.add
         (get_local $0)
         (i32.const 4560)
        )
       )
      )
      (return
       (i32.const 0)
      )
     )
     (if
      (i32.le_s
       (tee_local $1
        (i32.load
         (i32.add
          (get_local $0)
          (i32.const 4576)
         )
        )
       )
       (i32.const 0)
      )
      (return
       (i32.const 0)
      )
     )
     (return
      (call $_silk_setup_resamplers
       (get_local $0)
       (get_local $1)
      )
     )
    )
   )
  )
  (set_local $2
   (call $_silk_control_audio_bandwidth
    (get_local $0)
    (get_local $1)
   )
  )
  (set_local $4
   (call $_silk_setup_resamplers
    (get_local $0)
    (if (result i32)
     (get_local $4)
     (tee_local $2
      (get_local $4)
     )
     (get_local $2)
    )
   )
  )
  (set_local $2
   (call $_silk_setup_fs
    (get_local $0)
    (get_local $2)
    (i32.load offset=24
     (get_local $1)
    )
   )
  )
  (set_local $2
   (i32.add
    (get_local $4)
    (get_local $2)
   )
  )
  (set_local $4
   (call $_silk_setup_complexity
    (get_local $0)
    (i32.load offset=36
     (get_local $1)
    )
   )
  )
  (set_local $2
   (i32.add
    (get_local $2)
    (get_local $4)
   )
  )
  (i32.store
   (i32.add
    (get_local $0)
    (i32.const 4616)
   )
   (i32.load offset=32
    (get_local $1)
   )
  )
  (set_local $0
   (call $_silk_setup_LBRR
    (get_local $0)
    (i32.load offset=44
     (get_local $1)
    )
   )
  )
  (i32.store
   (get_local $3)
   (i32.const 1)
  )
  (i32.add
   (get_local $2)
   (get_local $0)
  )
 )
 (func $_silk_setup_resamplers (; 258 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (set_local $2
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.const 304)
   )
  )
  (if
   (i32.eq
    (tee_local $3
     (i32.load
      (tee_local $5
       (i32.add
        (get_local $0)
        (i32.const 4576)
       )
      )
     )
    )
    (get_local $1)
   )
   (if
    (i32.eq
     (i32.load
      (i32.add
       (get_local $0)
       (i32.const 4560)
      )
     )
     (i32.load
      (tee_local $4
       (i32.add
        (get_local $0)
        (i32.const 4556)
       )
      )
     )
    )
    (block
     (i32.store
      (i32.add
       (get_local $0)
       (i32.const 4560)
      )
      (i32.load
       (get_local $4)
      )
     )
     (set_global $STACKTOP
      (get_local $2)
     )
     (return
      (i32.const 0)
     )
    )
   )
  )
  (set_local $4
   (get_local $2)
  )
  (if
   (get_local $3)
   (block
    (set_local $3
     (if (result i32)
      (i32.gt_s
       (tee_local $2
        (i32.mul
         (tee_local $6
          (i32.add
           (i32.mul
            (i32.load
             (i32.add
              (get_local $0)
              (i32.const 4580)
             )
            )
            (i32.const 10)
           )
           (i32.const 5)
          )
         )
         (get_local $3)
        )
       )
       (tee_local $8
        (i32.mul
         (get_local $6)
         (get_local $1)
        )
       )
      )
      (get_local $2)
      (get_local $8)
     )
    )
    (set_local $9
     (call $_llvm_stacksave)
    )
    (set_local $7
     (get_global $STACKTOP)
    )
    (set_global $STACKTOP
     (i32.add
      (get_global $STACKTOP)
      (i32.and
       (i32.add
        (i32.shl
         (get_local $3)
         (i32.const 1)
        )
        (i32.const 15)
       )
       (i32.const -16)
      )
     )
    )
    (call $_silk_float2short_array
     (get_local $7)
     (tee_local $10
      (i32.add
       (get_local $0)
       (i32.const 7180)
      )
     )
     (get_local $2)
    )
    (call $_silk_resampler_init
     (get_local $4)
     (i32.mul
      (i32.shr_s
       (i32.shl
        (i32.load
         (get_local $5)
        )
        (i32.const 16)
       )
       (i32.const 16)
      )
      (i32.const 1000)
     )
     (i32.load
      (tee_local $3
       (i32.add
        (get_local $0)
        (i32.const 4556)
       )
      )
     )
     (i32.const 0)
    )
    (set_local $5
     (get_global $STACKTOP)
    )
    (set_global $STACKTOP
     (i32.add
      (get_global $STACKTOP)
      (i32.and
       (i32.add
        (i32.shl
         (tee_local $6
          (i32.mul
           (get_local $6)
           (i32.div_s
            (i32.load
             (get_local $3)
            )
            (i32.const 1000)
           )
          )
         )
         (i32.const 1)
        )
        (i32.const 15)
       )
       (i32.const -16)
      )
     )
    )
    (call $_silk_resampler
     (get_local $4)
     (get_local $5)
     (get_local $7)
     (get_local $2)
    )
    (call $_silk_resampler_init
     (tee_local $2
      (i32.add
       (get_local $0)
       (i32.const 5776)
      )
     )
     (i32.load
      (get_local $3)
     )
     (i32.mul
      (i32.shr_s
       (i32.shl
        (get_local $1)
        (i32.const 16)
       )
       (i32.const 16)
      )
      (i32.const 1000)
     )
     (i32.const 1)
    )
    (call $_silk_resampler
     (get_local $2)
     (get_local $7)
     (get_local $5)
     (get_local $6)
    )
    (call $_silk_short2float_array
     (get_local $10)
     (get_local $7)
     (get_local $8)
    )
    (call $_llvm_stackrestore
     (get_local $9)
    )
    (i32.store
     (i32.add
      (get_local $0)
      (i32.const 4560)
     )
     (i32.load
      (get_local $3)
     )
    )
   )
   (block
    (call $_silk_resampler_init
     (i32.add
      (get_local $0)
      (i32.const 5776)
     )
     (i32.load
      (tee_local $2
       (i32.add
        (get_local $0)
        (i32.const 4556)
       )
      )
     )
     (i32.mul
      (get_local $1)
      (i32.const 1000)
     )
     (i32.const 1)
    )
    (i32.store
     (i32.add
      (get_local $0)
      (i32.const 4560)
     )
     (i32.load
      (get_local $2)
     )
    )
   )
  )
  (set_global $STACKTOP
   (get_local $4)
  )
  (i32.const 0)
 )
 (func $_silk_setup_fs (; 259 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (set_local $3
   (if (result i32)
    (i32.eq
     (i32.load
      (tee_local $5
       (i32.add
        (get_local $0)
        (i32.const 4612)
       )
      )
     )
     (get_local $2)
    )
    (i32.const 0)
    (block (result i32)
     (block $do-once
      (block $__rjti$0
       (br_if $__rjti$0
        (tee_local $3
         (i32.eq
          (get_local $2)
          (i32.const 10)
         )
        )
       )
       (set_local $4
        (block $switch (result i32)
         (block $switch-default
          (block $switch-case
           (br_table $switch-case $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-case $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-case $switch-default
            (i32.sub
             (get_local $2)
             (i32.const 20)
            )
           )
          )
          (br $switch
           (i32.const 0)
          )
         )
         (if (result i32)
          (i32.lt_s
           (get_local $2)
           (i32.const 11)
          )
          (block
           (set_local $4
            (i32.const -103)
           )
           (br $__rjti$0)
          )
          (i32.const -103)
         )
        )
       )
       (i32.store
        (i32.add
         (get_local $0)
         (i32.const 5744)
        )
        (i32.div_s
         (get_local $2)
         (i32.const 20)
        )
       )
       (i32.store
        (i32.add
         (get_local $0)
         (i32.const 4580)
        )
        (i32.const 4)
       )
       (i32.store
        (i32.add
         (get_local $0)
         (i32.const 4584)
        )
        (i32.mul
         (tee_local $3
          (i32.shr_s
           (i32.shl
            (get_local $1)
            (i32.const 16)
           )
           (i32.const 16)
          )
         )
         (i32.const 20)
        )
       )
       (i32.store
        (i32.add
         (get_local $0)
         (i32.const 4548)
        )
        (i32.mul
         (get_local $3)
         (i32.const 24)
        )
       )
       (set_local $3
        (i32.add
         (get_local $0)
         (i32.const 4688)
        )
       )
       (if
        (i32.eq
         (i32.load
          (i32.add
           (get_local $0)
           (i32.const 4576)
          )
         )
         (i32.const 8)
        )
        (i32.store
         (get_local $3)
         (i32.const 45743)
        )
        (i32.store
         (get_local $3)
         (i32.const 26080)
        )
       )
       (br $do-once)
      )
      (i32.store
       (i32.add
        (get_local $0)
        (i32.const 5744)
       )
       (i32.const 1)
      )
      (i32.store
       (i32.add
        (get_local $0)
        (i32.const 4580)
       )
       (if (result i32)
        (get_local $3)
        (i32.const 2)
        (i32.const 1)
       )
      )
      (i32.store
       (i32.add
        (get_local $0)
        (i32.const 4584)
       )
       (i32.mul
        (i32.shr_s
         (i32.shl
          (get_local $2)
          (i32.const 16)
         )
         (i32.const 16)
        )
        (tee_local $3
         (i32.shr_s
          (i32.shl
           (get_local $1)
           (i32.const 16)
          )
          (i32.const 16)
         )
        )
       )
      )
      (i32.store
       (i32.add
        (get_local $0)
        (i32.const 4548)
       )
       (i32.mul
        (get_local $3)
        (i32.const 14)
       )
      )
      (set_local $3
       (i32.add
        (get_local $0)
        (i32.const 4688)
       )
      )
      (if
       (i32.eq
        (i32.load
         (i32.add
          (get_local $0)
          (i32.const 4576)
         )
        )
        (i32.const 8)
       )
       (i32.store
        (get_local $3)
        (i32.const 45766)
       )
       (i32.store
        (get_local $3)
        (i32.const 45754)
       )
      )
     )
     (i32.store
      (get_local $5)
      (get_local $2)
     )
     (i32.store
      (i32.add
       (get_local $0)
       (i32.const 4608)
      )
      (i32.const 0)
     )
     (get_local $4)
    )
   )
  )
  (set_local $5
   (i32.eq
    (get_local $1)
    (i32.const 8)
   )
  )
  (block $switch3
   (block $switch-default7
    (block $switch-case4
     (br_table $switch-case4 $switch-default7 $switch-default7 $switch-default7 $switch-case4 $switch-default7 $switch-default7 $switch-default7 $switch-case4 $switch-default7
      (i32.sub
       (get_local $1)
       (i32.const 8)
      )
     )
    )
    (br $switch3)
   )
   (call $_celt_fatal
    (i32.const 46646)
    (i32.const 46387)
    (i32.const 241)
   )
  )
  (block $switch8
   (block $switch-default11
    (block $switch-case9
     (br_table $switch-case9 $switch-default11 $switch-case9 $switch-default11
      (i32.sub
       (tee_local $7
        (i32.load
         (i32.add
          (get_local $0)
          (i32.const 4580)
         )
        )
       )
       (i32.const 2)
      )
     )
    )
    (br $switch8)
   )
   (call $_celt_fatal
    (i32.const 46708)
    (i32.const 46387)
    (i32.const 242)
   )
  )
  (block $label$break$L24
   (if
    (i32.eq
     (i32.load
      (tee_local $4
       (i32.add
        (get_local $0)
        (i32.const 4576)
       )
      )
     )
     (get_local $1)
    )
    (block
     (set_local $4
      (i32.load
       (i32.add
        (get_local $0)
        (i32.const 4588)
       )
      )
     )
     (set_local $2
      (i32.load
       (i32.add
        (get_local $0)
        (i32.const 4584)
       )
      )
     )
    )
    (block
     (i64.store align=4
      (tee_local $6
       (i32.add
        (get_local $0)
        (i32.const 7168)
       )
      )
      (i64.const 0)
     )
     (i32.store offset=8
      (get_local $6)
      (i32.const 0)
     )
     (i64.store offset=16 align=4
      (get_local $0)
      (i64.const 0)
     )
     (i32.store
      (i32.add
       (get_local $0)
       (i32.const 5740)
      )
      (i32.const 0)
     )
     (i32.store
      (i32.add
       (get_local $0)
       (i32.const 5748)
      )
      (i32.const 0)
     )
     (i32.store
      (i32.add
       (get_local $0)
       (i32.const 4608)
      )
      (i32.const 0)
     )
     (set_local $2
      (i32.add
       (get_local $0)
       (i32.const 4544)
      )
     )
     (drop
      (call $_memset
       (i32.add
        (get_local $0)
        (i32.const 148)
       )
       (i32.const 0)
       (i32.const 4384)
      )
     )
     (i32.store
      (get_local $2)
      (i32.const 100)
     )
     (i32.store
      (i32.add
       (get_local $0)
       (i32.const 4664)
      )
      (i32.const 1)
     )
     (i32.store8
      (get_local $6)
      (i32.const 10)
     )
     (i32.store
      (i32.add
       (get_local $0)
       (i32.const 4476)
      )
      (i32.const 100)
     )
     (i32.store
      (i32.add
       (get_local $0)
       (i32.const 4492)
      )
      (i32.const 65536)
     )
     (i32.store8
      (i32.add
       (get_local $0)
       (i32.const 4541)
      )
      (i32.const 0)
     )
     (i32.store
      (get_local $4)
      (get_local $1)
     )
     (set_local $2
      (i32.eq
       (get_local $7)
       (i32.const 4)
      )
     )
     (set_local $4
      (i32.add
       (get_local $0)
       (i32.const 4688)
      )
     )
     (block $__rjto$1
      (block $__rjti$1
       (if
        (get_local $5)
        (block
         (if
          (get_local $2)
          (i32.store
           (get_local $4)
           (i32.const 45743)
          )
          (i32.store
           (get_local $4)
           (i32.const 45766)
          )
         )
         (br $__rjti$1)
        )
        (block
         (if
          (get_local $2)
          (i32.store
           (get_local $4)
           (i32.const 26080)
          )
          (i32.store
           (get_local $4)
           (i32.const 45754)
          )
         )
         (block $switch-default17
          (block $switch-case15
           (br_table $switch-case15 $switch-default17 $switch-default17 $switch-default17 $switch-case15 $switch-default17
            (i32.sub
             (get_local $1)
             (i32.const 8)
            )
           )
          )
          (br $__rjti$1)
         )
         (i32.store
          (i32.add
           (get_local $0)
           (i32.const 4640)
          )
          (i32.const 16)
         )
         (i32.store
          (i32.add
           (get_local $0)
           (i32.const 4692)
          )
          (i32.const 40908)
         )
        )
       )
       (br $__rjto$1)
      )
      (i32.store
       (i32.add
        (get_local $0)
        (i32.const 4640)
       )
       (i32.const 10)
      )
      (i32.store
       (i32.add
        (get_local $0)
        (i32.const 4692)
       )
       (i32.const 40868)
      )
     )
     (i32.store
      (i32.add
       (get_local $0)
       (i32.const 4588)
      )
      (tee_local $4
       (i32.mul
        (get_local $1)
        (i32.const 5)
       )
      )
     )
     (i32.store
      (i32.add
       (get_local $0)
       (i32.const 4584)
      )
      (tee_local $2
       (i32.mul
        (i32.shr_s
         (i32.mul
          (get_local $1)
          (i32.const 327680)
         )
         (i32.const 16)
        )
        (i32.shr_s
         (i32.shl
          (get_local $7)
          (i32.const 16)
         )
         (i32.const 16)
        )
       )
      )
     )
     (i32.store
      (i32.add
       (get_local $0)
       (i32.const 4592)
      )
      (i32.mul
       (tee_local $6
        (i32.shr_s
         (tee_local $5
          (i32.shl
           (get_local $1)
           (i32.const 16)
          )
         )
         (i32.const 16)
        )
       )
       (i32.const 20)
      )
     )
     (i32.store
      (i32.add
       (get_local $0)
       (i32.const 4596)
      )
      (i32.shr_s
       (get_local $5)
       (i32.const 15)
      )
     )
     (i32.store
      (i32.add
       (get_local $0)
       (i32.const 4552)
      )
      (i32.mul
       (get_local $6)
       (i32.const 18)
      )
     )
     (i32.store
      (i32.add
       (get_local $0)
       (i32.const 4548)
      )
      (i32.mul
       (get_local $6)
       (if (result i32)
        (i32.eq
         (get_local $7)
         (i32.const 4)
        )
        (i32.const 24)
        (i32.const 14)
       )
      )
     )
     (block $switch18
      (block $switch-default21
       (block $switch-case20
        (block $switch-case19
         (br_table $switch-case20 $switch-default21 $switch-default21 $switch-default21 $switch-case19 $switch-default21
          (i32.sub
           (get_local $1)
           (i32.const 12)
          )
         )
        )
        (i32.store
         (i32.add
          (get_local $0)
          (i32.const 4684)
         )
         (i32.const 45728)
        )
        (br $label$break$L24)
       )
       (i32.store
        (i32.add
         (get_local $0)
         (i32.const 4684)
        )
        (i32.const 45722)
       )
       (br $label$break$L24)
      )
      (i32.store
       (i32.add
        (get_local $0)
        (i32.const 4684)
       )
       (i32.const 45713)
      )
     )
    )
   )
  )
  (if
   (i32.eq
    (i32.mul
     (get_local $4)
     (get_local $7)
    )
    (get_local $2)
   )
   (return
    (get_local $3)
   )
   (call $_celt_fatal
    (i32.const 46781)
    (i32.const 46387)
    (i32.const 302)
   )
  )
  (i32.const 0)
 )
 (func $_silk_setup_complexity (; 260 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (if
   (i32.ge_u
    (get_local $1)
    (i32.const 11)
   )
   (call $_celt_fatal
    (i32.const 46333)
    (i32.const 46387)
    (i32.const 315)
   )
  )
  (set_local $6
   (call $_silk_min_int_238
    (tee_local $6
     (block $label$break$L4 (result i32)
      (block $switch-default
       (block $switch-case0
        (block $switch-case
         (br_table $switch-case $switch-case0 $switch-default
          (get_local $1)
         )
        )
        (i32.store
         (i32.add
          (get_local $0)
          (i32.const 4644)
         )
         (i32.const 0)
        )
        (i32.store
         (i32.add
          (get_local $0)
          (i32.const 4652)
         )
         (i32.const 52429)
        )
        (i32.store
         (tee_local $4
          (i32.add
           (get_local $0)
           (i32.const 4648)
          )
         )
         (i32.const 6)
        )
        (i32.store
         (i32.add
          (get_local $0)
          (i32.const 4636)
         )
         (i32.const 12)
        )
        (i32.store
         (i32.add
          (get_local $0)
          (i32.const 4600)
         )
         (tee_local $2
          (i32.mul
           (tee_local $3
            (i32.load
             (i32.add
              (get_local $0)
              (i32.const 4576)
             )
            )
           )
           (i32.const 3)
          )
         )
        )
        (i32.store
         (i32.add
          (get_local $0)
          (i32.const 4628)
         )
         (i32.const 1)
        )
        (i32.store
         (i32.add
          (get_local $0)
          (i32.const 4632)
         )
         (i32.const 0)
        )
        (i32.store
         (i32.add
          (get_local $0)
          (i32.const 4660)
         )
         (i32.const 2)
        )
        (i32.store
         (i32.add
          (get_local $0)
          (i32.const 4672)
         )
         (i32.const 0)
        )
        (br $label$break$L4
         (i32.const 6)
        )
       )
       (i32.store
        (i32.add
         (get_local $0)
         (i32.const 4644)
        )
        (i32.const 1)
       )
       (i32.store
        (i32.add
         (get_local $0)
         (i32.const 4652)
        )
        (i32.const 49807)
       )
       (i32.store
        (tee_local $4
         (i32.add
          (get_local $0)
          (i32.const 4648)
         )
        )
        (i32.const 8)
       )
       (i32.store
        (i32.add
         (get_local $0)
         (i32.const 4636)
        )
        (i32.const 14)
       )
       (i32.store
        (i32.add
         (get_local $0)
         (i32.const 4600)
        )
        (tee_local $2
         (i32.mul
          (tee_local $3
           (i32.load
            (i32.add
             (get_local $0)
             (i32.const 4576)
            )
           )
          )
          (i32.const 5)
         )
        )
       )
       (i32.store
        (i32.add
         (get_local $0)
         (i32.const 4628)
        )
        (i32.const 1)
       )
       (i32.store
        (i32.add
         (get_local $0)
         (i32.const 4632)
        )
        (i32.const 0)
       )
       (i32.store
        (i32.add
         (get_local $0)
         (i32.const 4660)
        )
        (i32.const 3)
       )
       (i32.store
        (i32.add
         (get_local $0)
         (i32.const 4672)
        )
        (i32.const 0)
       )
       (br $label$break$L4
        (i32.const 8)
       )
      )
      (if
       (i32.lt_s
        (get_local $1)
        (i32.const 3)
       )
       (block
        (i32.store
         (i32.add
          (get_local $0)
          (i32.const 4644)
         )
         (i32.const 0)
        )
        (i32.store
         (i32.add
          (get_local $0)
          (i32.const 4652)
         )
         (i32.const 52429)
        )
        (i32.store
         (tee_local $4
          (i32.add
           (get_local $0)
           (i32.const 4648)
          )
         )
         (i32.const 6)
        )
        (i32.store
         (i32.add
          (get_local $0)
          (i32.const 4636)
         )
         (i32.const 12)
        )
        (i32.store
         (i32.add
          (get_local $0)
          (i32.const 4600)
         )
         (tee_local $2
          (i32.mul
           (tee_local $3
            (i32.load
             (i32.add
              (get_local $0)
              (i32.const 4576)
             )
            )
           )
           (i32.const 3)
          )
         )
        )
        (i32.store
         (i32.add
          (get_local $0)
          (i32.const 4628)
         )
         (i32.const 2)
        )
        (i32.store
         (i32.add
          (get_local $0)
          (i32.const 4632)
         )
         (i32.const 0)
        )
        (i32.store
         (i32.add
          (get_local $0)
          (i32.const 4660)
         )
         (i32.const 2)
        )
        (i32.store
         (i32.add
          (get_local $0)
          (i32.const 4672)
         )
         (i32.const 0)
        )
        (br $label$break$L4
         (i32.const 6)
        )
       )
      )
      (if
       (i32.eq
        (get_local $1)
        (i32.const 3)
       )
       (block
        (i32.store
         (i32.add
          (get_local $0)
          (i32.const 4644)
         )
         (i32.const 1)
        )
        (i32.store
         (i32.add
          (get_local $0)
          (i32.const 4652)
         )
         (i32.const 49807)
        )
        (i32.store
         (tee_local $4
          (i32.add
           (get_local $0)
           (i32.const 4648)
          )
         )
         (i32.const 8)
        )
        (i32.store
         (i32.add
          (get_local $0)
          (i32.const 4636)
         )
         (i32.const 14)
        )
        (i32.store
         (i32.add
          (get_local $0)
          (i32.const 4600)
         )
         (tee_local $2
          (i32.mul
           (tee_local $3
            (i32.load
             (i32.add
              (get_local $0)
              (i32.const 4576)
             )
            )
           )
           (i32.const 5)
          )
         )
        )
        (i32.store
         (i32.add
          (get_local $0)
          (i32.const 4628)
         )
         (i32.const 2)
        )
        (i32.store
         (i32.add
          (get_local $0)
          (i32.const 4632)
         )
         (i32.const 0)
        )
        (i32.store
         (i32.add
          (get_local $0)
          (i32.const 4660)
         )
         (i32.const 4)
        )
        (i32.store
         (i32.add
          (get_local $0)
          (i32.const 4672)
         )
         (i32.const 0)
        )
        (br $label$break$L4
         (i32.const 8)
        )
       )
      )
      (if
       (i32.lt_s
        (get_local $1)
        (i32.const 6)
       )
       (block
        (i32.store
         (i32.add
          (get_local $0)
          (i32.const 4644)
         )
         (i32.const 1)
        )
        (i32.store
         (i32.add
          (get_local $0)
          (i32.const 4652)
         )
         (i32.const 48497)
        )
        (i32.store
         (tee_local $4
          (i32.add
           (get_local $0)
           (i32.const 4648)
          )
         )
         (i32.const 10)
        )
        (i32.store
         (i32.add
          (get_local $0)
          (i32.const 4636)
         )
         (i32.const 16)
        )
        (i32.store
         (i32.add
          (get_local $0)
          (i32.const 4600)
         )
         (tee_local $2
          (i32.mul
           (tee_local $3
            (i32.load
             (i32.add
              (get_local $0)
              (i32.const 4576)
             )
            )
           )
           (i32.const 5)
          )
         )
        )
        (i32.store
         (i32.add
          (get_local $0)
          (i32.const 4628)
         )
         (i32.const 2)
        )
        (i32.store
         (i32.add
          (get_local $0)
          (i32.const 4632)
         )
         (i32.const 1)
        )
        (i32.store
         (i32.add
          (get_local $0)
          (i32.const 4660)
         )
         (i32.const 6)
        )
        (i32.store
         (i32.add
          (get_local $0)
          (i32.const 4672)
         )
         (tee_local $5
          (i32.mul
           (get_local $3)
           (i32.const 983)
          )
         )
        )
        (br $label$break$L4
         (i32.const 10)
        )
       )
      )
      (set_local $2
       (i32.add
        (get_local $0)
        (i32.const 4644)
       )
      )
      (if (result i32)
       (i32.lt_s
        (get_local $1)
        (i32.const 8)
       )
       (block (result i32)
        (i32.store
         (get_local $2)
         (i32.const 1)
        )
        (i32.store
         (i32.add
          (get_local $0)
          (i32.const 4652)
         )
         (i32.const 47186)
        )
        (i32.store
         (tee_local $4
          (i32.add
           (get_local $0)
           (i32.const 4648)
          )
         )
         (i32.const 12)
        )
        (i32.store
         (i32.add
          (get_local $0)
          (i32.const 4636)
         )
         (i32.const 20)
        )
        (i32.store
         (i32.add
          (get_local $0)
          (i32.const 4600)
         )
         (tee_local $2
          (i32.mul
           (tee_local $3
            (i32.load
             (i32.add
              (get_local $0)
              (i32.const 4576)
             )
            )
           )
           (i32.const 5)
          )
         )
        )
        (i32.store
         (i32.add
          (get_local $0)
          (i32.const 4628)
         )
         (i32.const 3)
        )
        (i32.store
         (i32.add
          (get_local $0)
          (i32.const 4632)
         )
         (i32.const 1)
        )
        (i32.store
         (i32.add
          (get_local $0)
          (i32.const 4660)
         )
         (i32.const 8)
        )
        (i32.store
         (i32.add
          (get_local $0)
          (i32.const 4672)
         )
         (tee_local $5
          (i32.mul
           (get_local $3)
           (i32.const 983)
          )
         )
        )
        (i32.const 12)
       )
       (block (result i32)
        (i32.store
         (get_local $2)
         (i32.const 2)
        )
        (i32.store
         (i32.add
          (get_local $0)
          (i32.const 4652)
         )
         (i32.const 45875)
        )
        (i32.store
         (tee_local $4
          (i32.add
           (get_local $0)
           (i32.const 4648)
          )
         )
         (i32.const 16)
        )
        (i32.store
         (i32.add
          (get_local $0)
          (i32.const 4636)
         )
         (i32.const 24)
        )
        (i32.store
         (i32.add
          (get_local $0)
          (i32.const 4600)
         )
         (tee_local $2
          (i32.mul
           (tee_local $3
            (i32.load
             (i32.add
              (get_local $0)
              (i32.const 4576)
             )
            )
           )
           (i32.const 5)
          )
         )
        )
        (i32.store
         (i32.add
          (get_local $0)
          (i32.const 4628)
         )
         (i32.const 4)
        )
        (i32.store
         (i32.add
          (get_local $0)
          (i32.const 4632)
         )
         (i32.const 1)
        )
        (i32.store
         (i32.add
          (get_local $0)
          (i32.const 4660)
         )
         (i32.const 16)
        )
        (i32.store
         (i32.add
          (get_local $0)
          (i32.const 4672)
         )
         (tee_local $5
          (i32.mul
           (get_local $3)
           (i32.const 983)
          )
         )
        )
        (i32.const 16)
       )
      )
     )
    )
    (i32.load
     (i32.add
      (get_local $0)
      (i32.const 4640)
     )
    )
   )
  )
  (i32.store
   (get_local $4)
   (get_local $6)
  )
  (i32.store
   (i32.add
    (get_local $0)
    (i32.const 4604)
   )
   (tee_local $4
    (i32.add
     (i32.mul
      (get_local $3)
      (i32.const 5)
     )
     (i32.shl
      (get_local $2)
      (i32.const 1)
     )
    )
   )
  )
  (i32.store
   (i32.add
    (get_local $0)
    (i32.const 4624)
   )
   (get_local $1)
  )
  (if
   (i32.ge_s
    (get_local $6)
    (i32.const 17)
   )
   (call $_celt_fatal
    (i32.const 46408)
    (i32.const 46387)
    (i32.const 393)
   )
  )
  (if
   (i32.ge_s
    (get_local $5)
    (i32.const 32768)
   )
   (call $_celt_fatal
    (i32.const 46486)
    (i32.const 46387)
    (i32.const 396)
   )
  )
  (if
   (i32.ge_s
    (get_local $2)
    (i32.const 81)
   )
   (call $_celt_fatal
    (i32.const 46533)
    (i32.const 46387)
    (i32.const 397)
   )
  )
  (if
   (i32.lt_s
    (get_local $4)
    (i32.const 241)
   )
   (return
    (i32.const 0)
   )
   (call $_celt_fatal
    (i32.const 46584)
    (i32.const 46387)
    (i32.const 398)
   )
  )
  (i32.const 0)
 )
 (func $_silk_setup_LBRR (; 261 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (set_local $3
   (i32.load
    (tee_local $2
     (i32.add
      (get_local $0)
      (i32.const 6092)
     )
    )
   )
  )
  (i32.store
   (get_local $2)
   (get_local $1)
  )
  (if
   (i32.eqz
    (get_local $1)
   )
   (return
    (i32.const 0)
   )
  )
  (if
   (get_local $3)
   (block
    (set_local $1
     (call $_silk_max_int_393
      (i32.sub
       (i32.const 7)
       (i32.add
        (i32.mul
         (i32.shr_s
          (tee_local $1
           (i32.load
            (i32.add
             (get_local $0)
             (i32.const 4616)
            )
           )
          )
          (i32.const 16)
         )
         (i32.const 26214)
        )
        (i32.shr_u
         (i32.mul
          (i32.and
           (get_local $1)
           (i32.const 65535)
          )
          (i32.const 26214)
         )
         (i32.const 16)
        )
       )
      )
     )
    )
    (i32.store
     (i32.add
      (get_local $0)
      (i32.const 6096)
     )
     (get_local $1)
    )
   )
   (i32.store
    (i32.add
     (get_local $0)
     (i32.const 6096)
    )
    (i32.const 7)
   )
  )
  (i32.const 0)
 )
 (func $_silk_max_int_393 (; 262 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (if (result i32)
   (i32.gt_s
    (get_local $0)
    (i32.const 2)
   )
   (get_local $0)
   (i32.const 2)
  )
 )
 (func $_silk_float2short_array (; 263 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (loop $while-in
   (if
    (i32.gt_s
     (get_local $2)
     (i32.const 0)
    )
    (block
     (if
      (i32.le_s
       (tee_local $3
        (call $_lrintf
         (f32.load
          (i32.add
           (get_local $1)
           (i32.shl
            (tee_local $2
             (i32.add
              (get_local $2)
              (i32.const -1)
             )
            )
            (i32.const 2)
           )
          )
         )
        )
       )
       (i32.const -32768)
      )
      (set_local $3
       (i32.const -32768)
      )
     )
     (i32.store16
      (i32.add
       (get_local $0)
       (i32.shl
        (get_local $2)
        (i32.const 1)
       )
      )
      (if (result i32)
       (i32.lt_s
        (get_local $3)
        (i32.const 32767)
       )
       (get_local $3)
       (i32.const 32767)
      )
     )
     (br $while-in)
    )
   )
  )
 )
 (func $_silk_short2float_array (; 264 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (loop $while-in
   (set_local $3
    (i32.add
     (get_local $2)
     (i32.const -1)
    )
   )
   (if
    (i32.gt_s
     (get_local $2)
     (i32.const 0)
    )
    (block
     (f32.store
      (i32.add
       (get_local $0)
       (i32.shl
        (get_local $3)
        (i32.const 2)
       )
      )
      (f32.convert_s/i32
       (i32.load16_s
        (i32.add
         (get_local $1)
         (i32.shl
          (get_local $3)
          (i32.const 1)
         )
        )
       )
      )
     )
     (set_local $2
      (get_local $3)
     )
     (br $while-in)
    )
   )
  )
 )
 (func $_silk_A2NLSF (; 265 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (set_local $16
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.const 128)
   )
  )
  (i32.store
   (tee_local $19
    (i32.add
     (get_local $16)
     (i32.const 120)
    )
   )
   (tee_local $12
    (i32.sub
     (get_local $16)
     (i32.const -64)
    )
   )
  )
  (i32.store offset=4
   (get_local $19)
   (tee_local $13
    (get_local $16)
   )
  )
  (call $_silk_A2NLSF_init
   (get_local $1)
   (get_local $12)
   (get_local $13)
   (tee_local $11
    (i32.shr_s
     (get_local $2)
     (i32.const 1)
    )
   )
  )
  (set_local $17
   (if (result i32)
    (i32.lt_s
     (tee_local $3
      (call $_silk_A2NLSF_eval_poly
       (get_local $12)
       (i32.const 8192)
       (get_local $11)
      )
     )
     (i32.const 0)
    )
    (block (result i32)
     (i32.store16
      (get_local $0)
      (i32.const 0)
     )
     (set_local $3
      (call $_silk_A2NLSF_eval_poly
       (get_local $13)
       (i32.const 8192)
       (get_local $11)
      )
     )
     (set_local $10
      (i32.const 1)
     )
     (get_local $13)
    )
    (get_local $12)
   )
  )
  (set_local $6
   (i32.const 8192)
  )
  (set_local $14
   (i32.const 1)
  )
  (block $__rjto$3
   (block $__rjti$3
    (loop $while-in
     (block $while-out
      (set_local $4
       (call $_silk_A2NLSF_eval_poly
        (get_local $17)
        (tee_local $15
         (i32.load16_s
          (i32.add
           (i32.shl
            (get_local $14)
            (i32.const 1)
           )
           (i32.const 27760)
          )
         )
        )
        (get_local $11)
       )
      )
      (set_local $8
       (block $__rjto$2 (result i32)
        (block $__rjti$2
         (block $__rjti$1
          (if
           (i32.lt_s
            (get_local $3)
            (i32.const 1)
           )
           (block
            (br_if $__rjti$1
             (i32.ge_s
              (get_local $4)
              (get_local $5)
             )
            )
            (br_if $__rjti$2
             (i32.or
              (i32.lt_s
               (get_local $3)
               (i32.const 0)
              )
              (i32.gt_s
               (get_local $4)
               (i32.sub
                (i32.const 0)
                (get_local $5)
               )
              )
             )
            )
           )
           (br_if $__rjti$2
            (i32.gt_s
             (get_local $4)
             (i32.sub
              (i32.const 0)
              (get_local $5)
             )
            )
           )
          )
         )
         (set_local $20
          (i32.eqz
           (get_local $4)
          )
         )
         (set_local $18
          (i32.const 0)
         )
         (set_local $8
          (i32.const -256)
         )
         (set_local $9
          (get_local $15)
         )
         (set_local $5
          (get_local $4)
         )
         (set_local $4
          (get_local $6)
         )
         (loop $while-in1
          (if
           (i32.ne
            (get_local $18)
            (i32.const 3)
           )
           (block
            (set_local $6
             (call $_silk_A2NLSF_eval_poly
              (get_local $17)
              (tee_local $15
               (i32.add
                (i32.shr_s
                 (tee_local $6
                  (i32.add
                   (get_local $4)
                   (get_local $9)
                  )
                 )
                 (i32.const 1)
                )
                (i32.and
                 (get_local $6)
                 (i32.const 1)
                )
               )
              )
              (get_local $11)
             )
            )
            (block $__rjto$0
             (block $__rjti$0
              (if
               (i32.lt_s
                (get_local $3)
                (i32.const 1)
               )
               (br_if $__rjti$0
                (i32.eqz
                 (i32.or
                  (i32.gt_s
                   (get_local $6)
                   (i32.const -1)
                  )
                  (i32.eqz
                   (get_local $3)
                  )
                 )
                )
               )
               (br_if $__rjti$0
                (i32.ge_s
                 (get_local $6)
                 (i32.const 1)
                )
               )
              )
              (set_local $5
               (get_local $6)
              )
              (set_local $9
               (get_local $15)
              )
              (br $__rjto$0)
             )
             (set_local $8
              (i32.add
               (get_local $8)
               (i32.shr_u
                (i32.const 128)
                (get_local $18)
               )
              )
             )
             (set_local $4
              (get_local $15)
             )
             (set_local $3
              (get_local $6)
             )
            )
            (set_local $18
             (i32.add
              (get_local $18)
              (i32.const 1)
             )
            )
            (br $while-in1)
           )
          )
         )
         (set_local $9
          (i32.sub
           (i32.const 0)
           (get_local $3)
          )
         )
         (set_local $4
          (i32.sub
           (get_local $3)
           (get_local $5)
          )
         )
         (if
          (i32.lt_s
           (if (result i32)
            (i32.gt_s
             (get_local $3)
             (i32.const 0)
            )
            (get_local $3)
            (get_local $9)
           )
           (i32.const 65536)
          )
          (if
           (get_local $4)
           (set_local $8
            (i32.add
             (get_local $8)
             (i32.div_s
              (i32.add
               (i32.shl
                (get_local $3)
                (i32.const 5)
               )
               (i32.shr_s
                (get_local $4)
                (i32.const 1)
               )
              )
              (get_local $4)
             )
            )
           )
          )
          (set_local $8
           (i32.add
            (get_local $8)
            (i32.div_s
             (get_local $3)
             (i32.shr_s
              (get_local $4)
              (i32.const 5)
             )
            )
           )
          )
         )
         (set_local $3
          (i32.and
           (call $_silk_min_32_406
            (i32.add
             (i32.shl
              (get_local $14)
              (i32.const 8)
             )
             (get_local $8)
            )
           )
           (i32.const 65535)
          )
         )
         (i32.store16
          (i32.add
           (get_local $0)
           (i32.shl
            (get_local $10)
            (i32.const 1)
           )
          )
          (get_local $3)
         )
         (br_if $__rjti$3
          (i32.ge_s
           (tee_local $10
            (i32.add
             (get_local $10)
             (i32.const 1)
            )
           )
           (get_local $2)
          )
         )
         (set_local $5
          (get_local $20)
         )
         (set_local $3
          (get_local $7)
         )
         (set_local $7
          (i32.load16_s
           (i32.add
            (i32.shl
             (tee_local $9
              (get_local $14)
             )
             (i32.const 1)
            )
            (i32.const 27758)
           )
          )
         )
         (set_local $4
          (i32.sub
           (i32.const 4096)
           (i32.and
            (i32.shl
             (get_local $10)
             (i32.const 12)
            )
            (i32.const 8192)
           )
          )
         )
         (br $__rjto$2
          (i32.load
           (i32.add
            (get_local $19)
            (i32.shl
             (i32.and
              (get_local $10)
              (i32.const 1)
             )
             (i32.const 2)
            )
           )
          )
         )
        )
        (set_local $9
         (i32.add
          (get_local $14)
          (i32.const 1)
         )
        )
        (if (result i32)
         (i32.gt_s
          (get_local $14)
          (i32.const 127)
         )
         (block (result i32)
          (br_if $while-out
           (i32.gt_s
            (get_local $7)
            (i32.const 15)
           )
          )
          (call $_silk_bwexpander_32
           (get_local $1)
           (get_local $2)
           (i32.sub
            (i32.const 65536)
            (i32.shl
             (i32.const 1)
             (tee_local $3
              (i32.add
               (get_local $7)
               (i32.const 1)
              )
             )
            )
           )
          )
          (call $_silk_A2NLSF_init
           (get_local $1)
           (get_local $12)
           (get_local $13)
           (get_local $11)
          )
          (if (result i32)
           (i32.lt_s
            (tee_local $4
             (call $_silk_A2NLSF_eval_poly
              (get_local $12)
              (i32.const 8192)
              (get_local $11)
             )
            )
            (i32.const 0)
           )
           (block (result i32)
            (i32.store16
             (get_local $0)
             (i32.const 0)
            )
            (set_local $4
             (call $_silk_A2NLSF_eval_poly
              (get_local $13)
              (i32.const 8192)
              (get_local $11)
             )
            )
            (set_local $5
             (i32.const 0)
            )
            (set_local $9
             (i32.const 1)
            )
            (set_local $10
             (i32.const 1)
            )
            (set_local $7
             (i32.const 8192)
            )
            (get_local $13)
           )
           (block (result i32)
            (set_local $5
             (i32.const 0)
            )
            (set_local $9
             (i32.const 1)
            )
            (set_local $10
             (i32.const 0)
            )
            (set_local $7
             (i32.const 8192)
            )
            (get_local $12)
           )
          )
         )
         (block (result i32)
          (set_local $5
           (i32.const 0)
          )
          (set_local $3
           (get_local $7)
          )
          (set_local $7
           (get_local $15)
          )
          (get_local $17)
         )
        )
       )
      )
      (set_local $6
       (get_local $7)
      )
      (set_local $7
       (get_local $3)
      )
      (set_local $14
       (get_local $9)
      )
      (set_local $17
       (get_local $8)
      )
      (set_local $3
       (get_local $4)
      )
      (br $while-in)
     )
    )
    (br $__rjto$3)
   )
   (set_global $STACKTOP
    (get_local $16)
   )
   (return)
  )
  (i32.store16
   (get_local $0)
   (tee_local $1
    (i32.div_s
     (i32.const 32768)
     (i32.add
      (get_local $2)
      (i32.const 1)
     )
    )
   )
  )
  (set_local $3
   (i32.const 1)
  )
  (loop $while-in3
   (if
    (i32.lt_s
     (get_local $3)
     (get_local $2)
    )
    (block
     (i32.store16
      (i32.add
       (get_local $0)
       (i32.shl
        (get_local $3)
        (i32.const 1)
       )
      )
      (tee_local $1
       (i32.add
        (i32.and
         (get_local $1)
         (i32.const 65535)
        )
        (i32.load16_u
         (get_local $0)
        )
       )
      )
     )
     (set_local $3
      (i32.add
       (get_local $3)
       (i32.const 1)
      )
     )
     (br $while-in3)
    )
   )
  )
  (set_global $STACKTOP
   (get_local $16)
  )
 )
 (func $_silk_A2NLSF_init (; 266 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (i32.store
   (i32.add
    (get_local $1)
    (i32.shl
     (get_local $3)
     (i32.const 2)
    )
   )
   (i32.const 65536)
  )
  (i32.store
   (i32.add
    (get_local $2)
    (i32.shl
     (get_local $3)
     (i32.const 2)
    )
   )
   (i32.const 65536)
  )
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $4)
     (get_local $3)
    )
    (block
     (i32.store
      (i32.add
       (get_local $1)
       (i32.shl
        (get_local $4)
        (i32.const 2)
       )
      )
      (i32.sub
       (i32.sub
        (i32.const 0)
        (i32.load
         (tee_local $5
          (i32.add
           (get_local $0)
           (i32.shl
            (i32.add
             (i32.sub
              (get_local $3)
              (get_local $4)
             )
             (i32.const -1)
            )
            (i32.const 2)
           )
          )
         )
        )
       )
       (i32.load
        (tee_local $6
         (i32.add
          (get_local $0)
          (i32.shl
           (i32.add
            (get_local $4)
            (get_local $3)
           )
           (i32.const 2)
          )
         )
        )
       )
      )
     )
     (i32.store
      (i32.add
       (get_local $2)
       (i32.shl
        (get_local $4)
        (i32.const 2)
       )
      )
      (i32.sub
       (i32.load
        (get_local $6)
       )
       (i32.load
        (get_local $5)
       )
      )
     )
     (set_local $4
      (i32.add
       (get_local $4)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (set_local $0
   (get_local $3)
  )
  (loop $while-in1
   (if
    (i32.gt_s
     (get_local $0)
     (i32.const 0)
    )
    (block
     (i32.store
      (tee_local $5
       (i32.add
        (get_local $1)
        (i32.shl
         (tee_local $4
          (i32.add
           (get_local $0)
           (i32.const -1)
          )
         )
         (i32.const 2)
        )
       )
      )
      (i32.sub
       (i32.load
        (get_local $5)
       )
       (i32.load
        (i32.add
         (get_local $1)
         (i32.shl
          (get_local $0)
          (i32.const 2)
         )
        )
       )
      )
     )
     (i32.store
      (tee_local $5
       (i32.add
        (get_local $2)
        (i32.shl
         (get_local $4)
         (i32.const 2)
        )
       )
      )
      (i32.add
       (i32.load
        (get_local $5)
       )
       (i32.load
        (i32.add
         (get_local $2)
         (i32.shl
          (get_local $0)
          (i32.const 2)
         )
        )
       )
      )
     )
     (set_local $0
      (get_local $4)
     )
     (br $while-in1)
    )
   )
  )
  (call $_silk_A2NLSF_trans_poly
   (get_local $1)
   (get_local $3)
  )
  (call $_silk_A2NLSF_trans_poly
   (get_local $2)
   (get_local $3)
  )
 )
 (func $_silk_A2NLSF_eval_poly (; 267 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (set_local $3
   (i32.load
    (i32.add
     (get_local $0)
     (i32.shl
      (get_local $2)
      (i32.const 2)
     )
    )
   )
  )
  (set_local $4
   (i32.shl
    (get_local $1)
    (i32.const 4)
   )
  )
  (if
   (i32.eq
    (get_local $2)
    (i32.const 8)
   )
   (return
    (i32.add
     (i32.add
      (i32.load
       (get_local $0)
      )
      (i32.add
       (i32.mul
        (i32.shr_s
         (tee_local $2
          (i32.add
           (i32.add
            (i32.load offset=4
             (get_local $0)
            )
            (i32.add
             (i32.mul
              (i32.shr_s
               (tee_local $2
                (i32.add
                 (i32.add
                  (i32.load offset=8
                   (get_local $0)
                  )
                  (i32.add
                   (i32.mul
                    (i32.shr_s
                     (tee_local $2
                      (i32.add
                       (i32.add
                        (i32.load offset=12
                         (get_local $0)
                        )
                        (i32.add
                         (i32.mul
                          (i32.shr_s
                           (tee_local $2
                            (i32.add
                             (i32.add
                              (i32.load offset=16
                               (get_local $0)
                              )
                              (i32.add
                               (i32.mul
                                (i32.shr_s
                                 (tee_local $2
                                  (i32.add
                                   (i32.add
                                    (i32.load offset=20
                                     (get_local $0)
                                    )
                                    (i32.add
                                     (i32.mul
                                      (i32.shr_s
                                       (tee_local $2
                                        (i32.add
                                         (i32.add
                                          (i32.load offset=24
                                           (get_local $0)
                                          )
                                          (i32.add
                                           (i32.mul
                                            (i32.shr_s
                                             (tee_local $2
                                              (i32.add
                                               (i32.add
                                                (i32.load offset=28
                                                 (get_local $0)
                                                )
                                                (i32.add
                                                 (i32.mul
                                                  (i32.shr_s
                                                   (get_local $3)
                                                   (i32.const 16)
                                                  )
                                                  (tee_local $0
                                                   (i32.shr_s
                                                    (i32.shl
                                                     (get_local $1)
                                                     (i32.const 20)
                                                    )
                                                    (i32.const 16)
                                                   )
                                                  )
                                                 )
                                                 (i32.shr_s
                                                  (i32.mul
                                                   (i32.and
                                                    (get_local $3)
                                                    (i32.const 65535)
                                                   )
                                                   (get_local $0)
                                                  )
                                                  (i32.const 16)
                                                 )
                                                )
                                               )
                                               (i32.mul
                                                (get_local $3)
                                                (tee_local $1
                                                 (i32.shr_s
                                                  (i32.add
                                                   (i32.shr_s
                                                    (get_local $4)
                                                    (i32.const 15)
                                                   )
                                                   (i32.const 1)
                                                  )
                                                  (i32.const 1)
                                                 )
                                                )
                                               )
                                              )
                                             )
                                             (i32.const 16)
                                            )
                                            (get_local $0)
                                           )
                                           (i32.shr_s
                                            (i32.mul
                                             (i32.and
                                              (get_local $2)
                                              (i32.const 65535)
                                             )
                                             (get_local $0)
                                            )
                                            (i32.const 16)
                                           )
                                          )
                                         )
                                         (i32.mul
                                          (get_local $2)
                                          (get_local $1)
                                         )
                                        )
                                       )
                                       (i32.const 16)
                                      )
                                      (get_local $0)
                                     )
                                     (i32.shr_s
                                      (i32.mul
                                       (i32.and
                                        (get_local $2)
                                        (i32.const 65535)
                                       )
                                       (get_local $0)
                                      )
                                      (i32.const 16)
                                     )
                                    )
                                   )
                                   (i32.mul
                                    (get_local $2)
                                    (get_local $1)
                                   )
                                  )
                                 )
                                 (i32.const 16)
                                )
                                (get_local $0)
                               )
                               (i32.shr_s
                                (i32.mul
                                 (i32.and
                                  (get_local $2)
                                  (i32.const 65535)
                                 )
                                 (get_local $0)
                                )
                                (i32.const 16)
                               )
                              )
                             )
                             (i32.mul
                              (get_local $2)
                              (get_local $1)
                             )
                            )
                           )
                           (i32.const 16)
                          )
                          (get_local $0)
                         )
                         (i32.shr_s
                          (i32.mul
                           (i32.and
                            (get_local $2)
                            (i32.const 65535)
                           )
                           (get_local $0)
                          )
                          (i32.const 16)
                         )
                        )
                       )
                       (i32.mul
                        (get_local $2)
                        (get_local $1)
                       )
                      )
                     )
                     (i32.const 16)
                    )
                    (get_local $0)
                   )
                   (i32.shr_s
                    (i32.mul
                     (i32.and
                      (get_local $2)
                      (i32.const 65535)
                     )
                     (get_local $0)
                    )
                    (i32.const 16)
                   )
                  )
                 )
                 (i32.mul
                  (get_local $2)
                  (get_local $1)
                 )
                )
               )
               (i32.const 16)
              )
              (get_local $0)
             )
             (i32.shr_s
              (i32.mul
               (i32.and
                (get_local $2)
                (i32.const 65535)
               )
               (get_local $0)
              )
              (i32.const 16)
             )
            )
           )
           (i32.mul
            (get_local $2)
            (get_local $1)
           )
          )
         )
         (i32.const 16)
        )
        (get_local $0)
       )
       (i32.shr_s
        (i32.mul
         (i32.and
          (get_local $2)
          (i32.const 65535)
         )
         (get_local $0)
        )
        (i32.const 16)
       )
      )
     )
     (i32.mul
      (get_local $2)
      (get_local $1)
     )
    )
   )
  )
  (set_local $5
   (i32.shr_s
    (i32.shl
     (get_local $1)
     (i32.const 20)
    )
    (i32.const 16)
   )
  )
  (set_local $4
   (i32.shr_s
    (i32.add
     (i32.shr_s
      (get_local $4)
      (i32.const 15)
     )
     (i32.const 1)
    )
    (i32.const 1)
   )
  )
  (set_local $1
   (get_local $3)
  )
  (loop $while-in
   (set_local $3
    (i32.add
     (get_local $2)
     (i32.const -1)
    )
   )
   (if
    (i32.gt_s
     (get_local $2)
     (i32.const 0)
    )
    (block
     (set_local $1
      (i32.add
       (i32.add
        (i32.load
         (i32.add
          (get_local $0)
          (i32.shl
           (get_local $3)
           (i32.const 2)
          )
         )
        )
        (i32.add
         (i32.mul
          (i32.shr_s
           (get_local $1)
           (i32.const 16)
          )
          (get_local $5)
         )
         (i32.shr_s
          (i32.mul
           (i32.and
            (get_local $1)
            (i32.const 65535)
           )
           (get_local $5)
          )
          (i32.const 16)
         )
        )
       )
       (i32.mul
        (get_local $1)
        (get_local $4)
       )
      )
     )
     (set_local $2
      (get_local $3)
     )
     (br $while-in)
    )
   )
  )
  (get_local $1)
 )
 (func $_silk_min_32_406 (; 268 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (if (result i32)
   (i32.lt_s
    (get_local $0)
    (i32.const 32767)
   )
   (get_local $0)
   (i32.const 32767)
  )
 )
 (func $_silk_A2NLSF_trans_poly (; 269 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (set_local $3
   (i32.const 2)
  )
  (loop $while-in
   (if
    (i32.le_s
     (get_local $3)
     (get_local $1)
    )
    (block
     (set_local $2
      (get_local $1)
     )
     (loop $while-in1
      (if
       (i32.gt_s
        (get_local $2)
        (get_local $3)
       )
       (block
        (i32.store
         (tee_local $4
          (i32.add
           (get_local $0)
           (i32.shl
            (i32.add
             (get_local $2)
             (i32.const -2)
            )
            (i32.const 2)
           )
          )
         )
         (i32.sub
          (i32.load
           (get_local $4)
          )
          (i32.load
           (i32.add
            (get_local $0)
            (i32.shl
             (get_local $2)
             (i32.const 2)
            )
           )
          )
         )
        )
        (set_local $2
         (i32.add
          (get_local $2)
          (i32.const -1)
         )
        )
        (br $while-in1)
       )
      )
     )
     (i32.store
      (tee_local $2
       (i32.add
        (get_local $0)
        (i32.shl
         (i32.add
          (get_local $3)
          (i32.const -2)
         )
         (i32.const 2)
        )
       )
      )
      (i32.sub
       (i32.load
        (get_local $2)
       )
       (i32.shl
        (i32.load
         (i32.add
          (get_local $0)
          (i32.shl
           (get_local $3)
           (i32.const 2)
          )
         )
        )
        (i32.const 1)
       )
      )
     )
     (set_local $3
      (i32.add
       (get_local $3)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
 )
 (func $_silk_ana_filt_bank_1 (; 270 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (set_local $10
   (i32.shr_s
    (get_local $4)
    (i32.const 1)
   )
  )
  (set_local $9
   (i32.add
    (get_local $1)
    (i32.const 4)
   )
  )
  (set_local $4
   (i32.const 0)
  )
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $4)
     (get_local $10)
    )
    (block
     (set_local $7
      (i32.add
       (i32.mul
        (i32.shr_s
         (tee_local $6
          (i32.sub
           (tee_local $5
            (i32.shl
             (i32.load16_s
              (i32.add
               (get_local $0)
               (i32.shl
                (tee_local $8
                 (i32.shl
                  (get_local $4)
                  (i32.const 1)
                 )
                )
                (i32.const 1)
               )
              )
             )
             (i32.const 10)
            )
           )
           (i32.load
            (get_local $1)
           )
          )
         )
         (i32.const 16)
        )
        (i32.const -24290)
       )
       (i32.shr_s
        (i32.mul
         (i32.and
          (get_local $6)
          (i32.const 65535)
         )
         (i32.const -24290)
        )
        (i32.const 16)
       )
      )
     )
     (i32.store
      (get_local $1)
      (i32.add
       (get_local $5)
       (i32.add
        (get_local $6)
        (get_local $7)
       )
      )
     )
     (set_local $6
      (i32.add
       (i32.mul
        (i32.shr_s
         (tee_local $6
          (i32.sub
           (tee_local $8
            (i32.shl
             (i32.load16_s
              (i32.add
               (get_local $0)
               (i32.shl
                (i32.or
                 (get_local $8)
                 (i32.const 1)
                )
                (i32.const 1)
               )
              )
             )
             (i32.const 10)
            )
           )
           (tee_local $11
            (i32.load
             (get_local $9)
            )
           )
          )
         )
         (i32.const 16)
        )
        (i32.const 10788)
       )
       (i32.shr_u
        (i32.mul
         (i32.and
          (get_local $6)
          (i32.const 65535)
         )
         (i32.const 10788)
        )
        (i32.const 16)
       )
      )
     )
     (i32.store
      (get_local $9)
      (i32.add
       (get_local $8)
       (get_local $6)
      )
     )
     (i32.store16
      (i32.add
       (get_local $2)
       (i32.shl
        (get_local $4)
        (i32.const 1)
       )
      )
      (tee_local $5
       (if (result i32)
        (i32.gt_s
         (tee_local $5
          (i32.add
           (tee_local $6
            (i32.add
             (get_local $11)
             (get_local $6)
            )
           )
           (tee_local $7
            (i32.add
             (get_local $5)
             (get_local $7)
            )
           )
          )
         )
         (i32.const 67107839)
        )
        (i32.const 32767)
        (if (result i32)
         (i32.lt_s
          (get_local $5)
          (i32.const -67109888)
         )
         (i32.const -32768)
         (i32.shr_s
          (i32.add
           (i32.shr_s
            (get_local $5)
            (i32.const 10)
           )
           (i32.const 1)
          )
          (i32.const 1)
         )
        )
       )
      )
     )
     (i32.store16
      (i32.add
       (get_local $3)
       (i32.shl
        (get_local $4)
        (i32.const 1)
       )
      )
      (tee_local $5
       (if (result i32)
        (i32.gt_s
         (tee_local $5
          (i32.sub
           (get_local $6)
           (get_local $7)
          )
         )
         (i32.const 67107839)
        )
        (i32.const 32767)
        (if (result i32)
         (i32.lt_s
          (get_local $5)
          (i32.const -67109888)
         )
         (i32.const -32768)
         (i32.shr_s
          (i32.add
           (i32.shr_s
            (get_local $5)
            (i32.const 10)
           )
           (i32.const 1)
          )
          (i32.const 1)
         )
        )
       )
      )
     )
     (set_local $4
      (i32.add
       (get_local $4)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
 )
 (func $_silk_biquad_alt_stride1 (; 271 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (set_local $12
   (i32.and
    (tee_local $2
     (i32.sub
      (i32.const 0)
      (get_local $2)
     )
    )
    (i32.const 16383)
   )
  )
  (set_local $13
   (i32.and
    (tee_local $3
     (i32.sub
      (i32.const 0)
      (get_local $3)
     )
    )
    (i32.const 16383)
   )
  )
  (set_local $9
   (i32.add
    (get_local $4)
    (i32.const 4)
   )
  )
  (set_local $14
   (i32.shr_s
    (i32.shl
     (i32.shr_u
      (get_local $2)
      (i32.const 14)
     )
     (i32.const 16)
    )
    (i32.const 16)
   )
  )
  (set_local $16
   (i32.add
    (get_local $1)
    (i32.const 4)
   )
  )
  (set_local $15
   (i32.shr_s
    (i32.shl
     (i32.shr_u
      (get_local $3)
      (i32.const 14)
     )
     (i32.const 16)
    )
    (i32.const 16)
   )
  )
  (set_local $17
   (i32.add
    (get_local $1)
    (i32.const 8)
   )
  )
  (set_local $2
   (i32.const 0)
  )
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $2)
     (get_local $6)
    )
    (block
     (i32.store
      (get_local $4)
      (tee_local $11
       (i32.add
        (i32.add
         (i32.load
          (get_local $9)
         )
         (i32.shr_s
          (i32.add
           (i32.shr_s
            (i32.add
             (i32.mul
              (tee_local $7
               (i32.shr_s
                (tee_local $8
                 (i32.shl
                  (i32.add
                   (i32.load
                    (get_local $4)
                   )
                   (i32.add
                    (i32.mul
                     (i32.shr_s
                      (tee_local $8
                       (i32.load
                        (get_local $1)
                       )
                      )
                      (i32.const 16)
                     )
                     (tee_local $3
                      (i32.load16_s
                       (i32.add
                        (get_local $0)
                        (i32.shl
                         (get_local $2)
                         (i32.const 1)
                        )
                       )
                      )
                     )
                    )
                    (i32.shr_s
                     (i32.mul
                      (i32.and
                       (get_local $8)
                       (i32.const 65535)
                      )
                      (get_local $3)
                     )
                     (i32.const 16)
                    )
                   )
                  )
                  (i32.const 2)
                 )
                )
                (i32.const 16)
               )
              )
              (get_local $12)
             )
             (i32.shr_u
              (i32.mul
               (tee_local $10
                (i32.and
                 (get_local $8)
                 (i32.const 65532)
                )
               )
               (get_local $12)
              )
              (i32.const 16)
             )
            )
            (i32.const 13)
           )
           (i32.const 1)
          )
          (i32.const 1)
         )
        )
        (i32.add
         (i32.mul
          (get_local $7)
          (get_local $14)
         )
         (i32.shr_s
          (i32.mul
           (get_local $10)
           (get_local $14)
          )
          (i32.const 16)
         )
        )
       )
      )
     )
     (i32.store
      (get_local $4)
      (i32.add
       (get_local $11)
       (i32.add
        (i32.mul
         (i32.shr_s
          (tee_local $11
           (i32.load
            (get_local $16)
           )
          )
          (i32.const 16)
         )
         (get_local $3)
        )
        (i32.shr_s
         (i32.mul
          (i32.and
           (get_local $11)
           (i32.const 65535)
          )
          (get_local $3)
         )
         (i32.const 16)
        )
       )
      )
     )
     (i32.store
      (get_local $9)
      (tee_local $7
       (i32.add
        (i32.shr_s
         (i32.add
          (i32.shr_s
           (i32.add
            (i32.mul
             (get_local $7)
             (get_local $13)
            )
            (i32.shr_u
             (i32.mul
              (get_local $10)
              (get_local $13)
             )
             (i32.const 16)
            )
           )
           (i32.const 13)
          )
          (i32.const 1)
         )
         (i32.const 1)
        )
        (i32.add
         (i32.mul
          (get_local $7)
          (get_local $15)
         )
         (i32.shr_s
          (i32.mul
           (get_local $10)
           (get_local $15)
          )
          (i32.const 16)
         )
        )
       )
      )
     )
     (i32.store
      (get_local $9)
      (i32.add
       (get_local $7)
       (i32.add
        (i32.mul
         (i32.shr_s
          (tee_local $7
           (i32.load
            (get_local $17)
           )
          )
          (i32.const 16)
         )
         (get_local $3)
        )
        (i32.shr_s
         (i32.mul
          (i32.and
           (get_local $7)
           (i32.const 65535)
          )
          (get_local $3)
         )
         (i32.const 16)
        )
       )
      )
     )
     (i32.store16
      (i32.add
       (get_local $5)
       (i32.shl
        (get_local $2)
        (i32.const 1)
       )
      )
      (tee_local $3
       (if (result i32)
        (i32.gt_s
         (get_local $8)
         (i32.const 536854528)
        )
        (i32.const 32767)
        (if (result i32)
         (i32.lt_s
          (get_local $8)
          (i32.const -536887295)
         )
         (i32.const -32768)
         (i32.shr_s
          (i32.add
           (get_local $8)
           (i32.const 16383)
          )
          (i32.const 14)
         )
        )
       )
      )
     )
     (set_local $2
      (i32.add
       (get_local $2)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
 )
 (func $_silk_bwexpander_32 (; 272 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (set_local $6
   (i32.add
    (get_local $2)
    (i32.const -65536)
   )
  )
  (set_local $3
   (i32.add
    (get_local $1)
    (i32.const -1)
   )
  )
  (set_local $1
   (i32.const 0)
  )
  (loop $while-in
   (set_local $4
    (i32.shr_s
     (get_local $2)
     (i32.const 16)
    )
   )
   (if
    (i32.lt_s
     (get_local $1)
     (get_local $3)
    )
    (block
     (set_local $5
      (i32.shr_s
       (i32.shl
        (tee_local $8
         (i32.load
          (tee_local $7
           (i32.add
            (get_local $0)
            (i32.shl
             (get_local $1)
             (i32.const 2)
            )
           )
          )
         )
        )
        (i32.const 16)
       )
       (i32.const 16)
      )
     )
     (i32.store
      (get_local $7)
      (i32.add
       (i32.add
        (i32.mul
         (get_local $4)
         (get_local $5)
        )
        (i32.shr_s
         (i32.mul
          (i32.and
           (get_local $2)
           (i32.const 65535)
          )
          (get_local $5)
         )
         (i32.const 16)
        )
       )
       (i32.mul
        (get_local $2)
        (i32.shr_s
         (i32.add
          (i32.shr_s
           (get_local $8)
           (i32.const 15)
          )
          (i32.const 1)
         )
         (i32.const 1)
        )
       )
      )
     )
     (set_local $1
      (i32.add
       (get_local $1)
       (i32.const 1)
      )
     )
     (set_local $2
      (i32.add
       (get_local $2)
       (i32.shr_s
        (i32.add
         (i32.shr_s
          (i32.mul
           (get_local $2)
           (get_local $6)
          )
          (i32.const 15)
         )
         (i32.const 1)
        )
        (i32.const 1)
       )
      )
     )
     (br $while-in)
    )
   )
  )
  (set_local $0
   (i32.shr_s
    (i32.shl
     (tee_local $3
      (i32.load
       (tee_local $1
        (i32.add
         (get_local $0)
         (i32.shl
          (get_local $3)
          (i32.const 2)
         )
        )
       )
      )
     )
     (i32.const 16)
    )
    (i32.const 16)
   )
  )
  (i32.store
   (get_local $1)
   (i32.add
    (i32.add
     (i32.mul
      (get_local $4)
      (get_local $0)
     )
     (i32.shr_s
      (i32.mul
       (i32.and
        (get_local $2)
        (i32.const 65535)
       )
       (get_local $0)
      )
      (i32.const 16)
     )
    )
    (i32.mul
     (get_local $2)
     (i32.shr_s
      (i32.add
       (i32.shr_s
        (get_local $3)
        (i32.const 15)
       )
       (i32.const 1)
      )
      (i32.const 1)
     )
    )
   )
  )
 )
 (func $_silk_bwexpander (; 273 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (set_local $4
   (i32.add
    (get_local $2)
    (i32.const -65536)
   )
  )
  (set_local $3
   (i32.add
    (get_local $1)
    (i32.const -1)
   )
  )
  (set_local $1
   (i32.const 0)
  )
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $1)
     (get_local $3)
    )
    (block
     (i32.store16
      (tee_local $5
       (i32.add
        (get_local $0)
        (i32.shl
         (get_local $1)
         (i32.const 1)
        )
       )
      )
      (i32.shr_u
       (i32.add
        (i32.shr_u
         (i32.mul
          (get_local $2)
          (i32.load16_s
           (get_local $5)
          )
         )
         (i32.const 15)
        )
        (i32.const 1)
       )
       (i32.const 1)
      )
     )
     (set_local $1
      (i32.add
       (get_local $1)
       (i32.const 1)
      )
     )
     (set_local $2
      (i32.add
       (get_local $2)
       (i32.shr_s
        (i32.add
         (i32.shr_s
          (i32.mul
           (get_local $2)
           (get_local $4)
          )
          (i32.const 15)
         )
         (i32.const 1)
        )
        (i32.const 1)
       )
      )
     )
     (br $while-in)
    )
   )
  )
  (i32.store16
   (tee_local $0
    (i32.add
     (get_local $0)
     (i32.shl
      (get_local $3)
      (i32.const 1)
     )
    )
   )
   (i32.shr_u
    (i32.add
     (i32.shr_u
      (i32.mul
       (get_local $2)
       (i32.load16_s
        (get_local $0)
       )
      )
      (i32.const 15)
     )
     (i32.const 1)
    )
    (i32.const 1)
   )
  )
 )
 (func $_silk_decode_pitch (; 274 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (set_local $5
   (i32.eq
    (get_local $4)
    (i32.const 4)
   )
  )
  (if
   (i32.eq
    (get_local $3)
    (i32.const 8)
   )
   (if
    (get_local $5)
    (block
     (set_local $6
      (i32.const 28080)
     )
     (set_local $7
      (i32.const 11)
     )
    )
    (if
     (i32.eq
      (get_local $4)
      (i32.const 2)
     )
     (block
      (set_local $6
       (i32.const 47153)
      )
      (set_local $7
       (i32.const 3)
      )
     )
     (call $_celt_fatal
      (i32.const 48965)
      (i32.const 46879)
      (i32.const 54)
     )
    )
   )
   (if
    (get_local $5)
    (block
     (set_local $6
      (i32.const 28128)
     )
     (set_local $7
      (i32.const 34)
     )
    )
    (if
     (i32.eq
      (get_local $4)
      (i32.const 2)
     )
     (block
      (set_local $6
       (i32.const 28048)
      )
      (set_local $7
       (i32.const 12)
      )
     )
     (call $_celt_fatal
      (i32.const 48965)
      (i32.const 46879)
      (i32.const 63)
     )
    )
   )
  )
  (set_local $8
   (i32.add
    (tee_local $3
     (i32.shr_s
      (tee_local $5
       (i32.shl
        (get_local $3)
        (i32.const 16)
       )
      )
      (i32.const 15)
     )
    )
    (i32.shr_s
     (i32.shl
      (get_local $0)
      (i32.const 16)
     )
     (i32.const 16)
    )
   )
  )
  (set_local $9
   (i32.shr_s
    (i32.shl
     (get_local $1)
     (i32.const 24)
    )
    (i32.const 24)
   )
  )
  (set_local $10
   (i32.gt_s
    (get_local $3)
    (tee_local $1
     (i32.mul
      (i32.shr_s
       (get_local $5)
       (i32.const 16)
      )
      (i32.const 18)
     )
    )
   )
  )
  (set_local $5
   (i32.const 0)
  )
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $5)
     (get_local $4)
    )
    (block
     (i32.store
      (tee_local $11
       (i32.add
        (get_local $2)
        (i32.shl
         (get_local $5)
         (i32.const 2)
        )
       )
      )
      (tee_local $0
       (i32.add
        (get_local $8)
        (i32.load8_s
         (i32.add
          (get_local $6)
          (i32.add
           (i32.mul
            (get_local $5)
            (get_local $7)
           )
           (get_local $9)
          )
         )
        )
       )
      )
     )
     (if
      (get_local $10)
      (if
       (i32.gt_s
        (get_local $0)
        (get_local $3)
       )
       (set_local $0
        (get_local $3)
       )
       (if
        (i32.lt_s
         (get_local $0)
         (get_local $1)
        )
        (set_local $0
         (get_local $1)
        )
       )
      )
      (if
       (i32.gt_s
        (get_local $0)
        (get_local $1)
       )
       (set_local $0
        (get_local $1)
       )
       (if
        (i32.lt_s
         (get_local $0)
         (get_local $3)
        )
        (set_local $0
         (get_local $3)
        )
       )
      )
     )
     (i32.store
      (get_local $11)
      (get_local $0)
     )
     (set_local $5
      (i32.add
       (get_local $5)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
 )
 (func $_silk_inner_prod_aligned_scale (; 275 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $4)
     (get_local $3)
    )
    (block
     (set_local $5
      (i32.add
       (get_local $5)
       (i32.shr_s
        (i32.mul
         (i32.load16_s
          (i32.add
           (get_local $0)
           (i32.shl
            (get_local $4)
            (i32.const 1)
           )
          )
         )
         (i32.load16_s
          (i32.add
           (get_local $1)
           (i32.shl
            (get_local $4)
            (i32.const 1)
           )
          )
         )
        )
        (get_local $2)
       )
      )
     )
     (set_local $4
      (i32.add
       (get_local $4)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (get_local $5)
 )
 (func $_silk_lin2log (; 276 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (set_local $1
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.const 16)
   )
  )
  (call $_silk_CLZ_FRAC
   (get_local $0)
   (tee_local $3
    (i32.add
     (get_local $1)
     (i32.const 4)
    )
   )
   (get_local $1)
  )
  (set_local $2
   (i32.mul
    (tee_local $0
     (i32.load
      (get_local $1)
     )
    )
    (i32.sub
     (i32.const 128)
     (get_local $0)
    )
   )
  )
  (set_local $0
   (i32.add
    (i32.add
     (get_local $0)
     (i32.add
      (i32.mul
       (i32.shr_s
        (get_local $2)
        (i32.const 16)
       )
       (i32.const 179)
      )
      (i32.shr_u
       (i32.mul
        (i32.and
         (get_local $2)
         (i32.const 65535)
        )
        (i32.const 179)
       )
       (i32.const 16)
      )
     )
    )
    (i32.sub
     (i32.const 3968)
     (i32.shl
      (i32.load
       (get_local $3)
      )
      (i32.const 7)
     )
    )
   )
  )
  (set_global $STACKTOP
   (get_local $1)
  )
  (get_local $0)
 )
 (func $_silk_log2lin (; 277 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (if
   (i32.lt_s
    (get_local $0)
    (i32.const 0)
   )
   (return
    (i32.const 0)
   )
  )
  (if
   (i32.gt_s
    (get_local $0)
    (i32.const 3966)
   )
   (return
    (i32.const 2147483647)
   )
  )
  (set_local $1
   (i32.and
    (get_local $0)
    (i32.const 127)
   )
  )
  (i32.add
   (tee_local $3
    (i32.shl
     (i32.const 1)
     (tee_local $2
      (i32.shr_s
       (get_local $0)
       (i32.const 7)
      )
     )
    )
   )
   (tee_local $0
    (if (result i32)
     (i32.lt_s
      (get_local $0)
      (i32.const 2048)
     )
     (i32.shr_s
      (i32.shl
       (i32.add
        (get_local $1)
        (i32.shr_s
         (i32.mul
          (i32.mul
           (get_local $1)
           (i32.sub
            (i32.const 128)
            (get_local $1)
           )
          )
          (i32.const -174)
         )
         (i32.const 16)
        )
       )
       (get_local $2)
      )
      (i32.const 7)
     )
     (i32.mul
      (i32.shr_s
       (get_local $3)
       (i32.const 7)
      )
      (i32.add
       (get_local $1)
       (i32.shr_s
        (i32.mul
         (i32.mul
          (get_local $1)
          (i32.sub
           (i32.const 128)
           (get_local $1)
          )
         )
         (i32.const -174)
        )
        (i32.const 16)
       )
      )
     )
    )
   )
  )
 )
 (func $_silk_LPC_analysis_filter (; 278 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (if
   (i32.le_s
    (get_local $4)
    (i32.const 5)
   )
   (call $_celt_fatal
    (i32.const 46899)
    (i32.const 46924)
    (i32.const 67)
   )
  )
  (if
   (i32.and
    (get_local $4)
    (i32.const 1)
   )
   (call $_celt_fatal
    (i32.const 46951)
    (i32.const 46924)
    (i32.const 68)
   )
  )
  (if
   (i32.gt_s
    (get_local $4)
    (get_local $3)
   )
   (call $_celt_fatal
    (i32.const 46982)
    (i32.const 46924)
    (i32.const 69)
   )
  )
  (set_local $9
   (i32.add
    (get_local $2)
    (i32.const 2)
   )
  )
  (set_local $10
   (i32.add
    (get_local $2)
    (i32.const 4)
   )
  )
  (set_local $11
   (i32.add
    (get_local $2)
    (i32.const 6)
   )
  )
  (set_local $12
   (i32.add
    (get_local $2)
    (i32.const 8)
   )
  )
  (set_local $13
   (i32.add
    (get_local $2)
    (i32.const 10)
   )
  )
  (set_local $7
   (get_local $4)
  )
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $7)
     (get_local $3)
    )
    (block
     (set_local $8
      (i32.add
       (i32.add
        (i32.add
         (i32.add
          (i32.add
           (i32.mul
            (i32.load16_s
             (tee_local $5
              (i32.add
               (get_local $1)
               (i32.shl
                (i32.add
                 (get_local $7)
                 (i32.const -1)
                )
                (i32.const 1)
               )
              )
             )
            )
            (i32.load16_s
             (get_local $2)
            )
           )
           (i32.mul
            (i32.load16_s
             (i32.add
              (get_local $5)
              (i32.const -2)
             )
            )
            (i32.load16_s
             (get_local $9)
            )
           )
          )
          (i32.mul
           (i32.load16_s
            (i32.add
             (get_local $5)
             (i32.const -4)
            )
           )
           (i32.load16_s
            (get_local $10)
           )
          )
         )
         (i32.mul
          (i32.load16_s
           (i32.add
            (get_local $5)
            (i32.const -6)
           )
          )
          (i32.load16_s
           (get_local $11)
          )
         )
        )
        (i32.mul
         (i32.load16_s
          (i32.add
           (get_local $5)
           (i32.const -8)
          )
         )
         (i32.load16_s
          (get_local $12)
         )
        )
       )
       (i32.mul
        (i32.load16_s
         (i32.add
          (get_local $5)
          (i32.const -10)
         )
        )
        (i32.load16_s
         (get_local $13)
        )
       )
      )
     )
     (set_local $6
      (i32.const 6)
     )
     (loop $while-in1
      (if
       (i32.lt_s
        (get_local $6)
        (get_local $4)
       )
       (block
        (set_local $8
         (i32.add
          (i32.add
           (get_local $8)
           (i32.mul
            (i32.load16_s
             (i32.add
              (get_local $5)
              (i32.shl
               (i32.sub
                (i32.const 0)
                (get_local $6)
               )
               (i32.const 1)
              )
             )
            )
            (i32.load16_s
             (i32.add
              (get_local $2)
              (i32.shl
               (get_local $6)
               (i32.const 1)
              )
             )
            )
           )
          )
          (i32.mul
           (i32.load16_s
            (i32.add
             (get_local $5)
             (i32.shl
              (i32.xor
               (get_local $6)
               (i32.const -1)
              )
              (i32.const 1)
             )
            )
           )
           (i32.load16_s
            (i32.add
             (get_local $2)
             (i32.shl
              (i32.or
               (get_local $6)
               (i32.const 1)
              )
              (i32.const 1)
             )
            )
           )
          )
         )
        )
        (set_local $6
         (i32.add
          (get_local $6)
          (i32.const 2)
         )
        )
        (br $while-in1)
       )
      )
     )
     (set_local $8
      (i32.gt_s
       (tee_local $6
        (i32.sub
         (i32.shl
          (i32.load16_s
           (i32.add
            (get_local $1)
            (i32.shl
             (get_local $7)
             (i32.const 1)
            )
           )
          )
          (i32.const 12)
         )
         (get_local $8)
        )
       )
       (i32.const 134215679)
      )
     )
     (set_local $5
      (i32.and
       (i32.shr_u
        (i32.add
         (i32.shr_u
          (get_local $6)
          (i32.const 11)
         )
         (i32.const 1)
        )
        (i32.const 1)
       )
       (i32.const 65535)
      )
     )
     (if
      (i32.lt_s
       (get_local $6)
       (i32.const -134219776)
      )
      (set_local $5
       (i32.const -32768)
      )
     )
     (i32.store16
      (i32.add
       (get_local $0)
       (i32.shl
        (get_local $7)
        (i32.const 1)
       )
      )
      (if (result i32)
       (get_local $8)
       (i32.const 32767)
       (get_local $5)
      )
     )
     (set_local $7
      (i32.add
       (get_local $7)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (drop
   (call $_memset
    (get_local $0)
    (i32.const 0)
    (i32.shl
     (get_local $4)
     (i32.const 1)
    )
   )
  )
 )
 (func $_silk_LPC_inverse_pred_gain_c (; 279 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (set_local $3
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.const 96)
   )
  )
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $2)
     (get_local $1)
    )
    (block
     (i32.store
      (i32.add
       (get_local $3)
       (i32.shl
        (get_local $2)
        (i32.const 2)
       )
      )
      (i32.shl
       (tee_local $5
        (i32.load16_s
         (i32.add
          (get_local $0)
          (i32.shl
           (get_local $2)
           (i32.const 1)
          )
         )
        )
       )
       (i32.const 12)
      )
     )
     (set_local $4
      (i32.add
       (get_local $4)
       (get_local $5)
      )
     )
     (set_local $2
      (i32.add
       (get_local $2)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (if
   (i32.gt_s
    (get_local $4)
    (i32.const 4095)
   )
   (block
    (set_global $STACKTOP
     (get_local $3)
    )
    (return
     (i32.const 0)
    )
   )
  )
  (set_local $0
   (call $_LPC_inverse_pred_gain_QA_c
    (get_local $3)
    (get_local $1)
   )
  )
  (set_global $STACKTOP
   (get_local $3)
  )
  (get_local $0)
 )
 (func $_LPC_inverse_pred_gain_QA_c (; 280 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i64)
  (local $4 i32)
  (local $5 i32)
  (local $6 i64)
  (local $7 i32)
  (local $8 i64)
  (local $9 i32)
  (local $10 i32)
  (local $11 i64)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (set_local $3
   (i64.const 1073741824)
  )
  (block $__rjto$1 (result i32)
   (block $__rjti$1
    (block $__rjti$0
     (loop $label$continue$L1
      (block $label$break$L1
       (set_local $2
        (i32.gt_u
         (i32.add
          (tee_local $4
           (i32.load
            (i32.add
             (get_local $0)
             (i32.shl
              (tee_local $9
               (i32.add
                (get_local $1)
                (i32.const -1)
               )
              )
              (i32.const 2)
             )
            )
           )
          )
          (i32.const 16773022)
         )
         (i32.const 33546044)
        )
       )
       (br_if $__rjti$0
        (i32.le_s
         (get_local $1)
         (i32.const 1)
        )
       )
       (br_if $__rjti$1
        (get_local $2)
       )
       (br_if $__rjti$1
        (i32.lt_s
         (tee_local $13
          (i32.and
           (i32.wrap/i64
            (i64.shr_u
             (i64.mul
              (get_local $3)
              (i64.extend_s/i32
               (tee_local $2
                (i32.sub
                 (i32.const 1073741824)
                 (i32.wrap/i64
                  (i64.shr_u
                   (i64.mul
                    (tee_local $8
                     (i64.extend_s/i32
                      (i32.sub
                       (i32.const 0)
                       (i32.shl
                        (get_local $4)
                        (i32.const 7)
                       )
                      )
                     )
                    )
                    (get_local $8)
                   )
                   (i64.const 32)
                  )
                 )
                )
               )
              )
             )
             (i64.const 30)
            )
           )
           (i32.const -4)
          )
         )
         (i32.const 107374)
        )
       )
       (set_local $4
        (i32.sub
         (i32.const 0)
         (get_local $2)
        )
       )
       (set_local $4
        (i32.sub
         (i32.const 32)
         (call $_silk_CLZ32
          (if (result i32)
           (i32.gt_s
            (get_local $2)
            (i32.const 0)
           )
           (get_local $2)
           (get_local $4)
          )
         )
        )
       )
       (set_local $2
        (call $_silk_INVERSE32_varQ_435
         (get_local $2)
         (i32.add
          (get_local $4)
          (i32.const 30)
         )
        )
       )
       (set_local $14
        (i32.shr_s
         (get_local $1)
         (i32.const 1)
        )
       )
       (set_local $10
        (i32.eq
         (get_local $4)
         (i32.const 1)
        )
       )
       (set_local $6
        (i64.extend_s/i32
         (get_local $2)
        )
       )
       (set_local $11
        (i64.extend_u/i32
         (i32.add
          (get_local $4)
          (i32.const -1)
         )
        )
       )
       (set_local $7
        (i32.const 0)
       )
       (loop $while-in
        (if
         (i32.lt_s
          (get_local $7)
          (get_local $14)
         )
         (block
          (set_local $12
           (i32.gt_s
            (tee_local $1
             (i32.sub
              (tee_local $2
               (i32.load
                (tee_local $15
                 (i32.add
                  (get_local $0)
                  (i32.shl
                   (get_local $7)
                   (i32.const 2)
                  )
                 )
                )
               )
              )
              (tee_local $5
               (i32.wrap/i64
                (i64.shr_u
                 (i64.add
                  (i64.shr_u
                   (i64.mul
                    (i64.extend_s/i32
                     (tee_local $4
                      (i32.load
                       (tee_local $16
                        (i32.add
                         (get_local $0)
                         (i32.shl
                          (i32.add
                           (i32.sub
                            (get_local $9)
                            (get_local $7)
                           )
                           (i32.const -1)
                          )
                          (i32.const 2)
                         )
                        )
                       )
                      )
                     )
                    )
                    (get_local $8)
                   )
                   (i64.const 30)
                  )
                  (i64.const 1)
                 )
                 (i64.const 1)
                )
               )
              )
             )
            )
            (i32.const -1)
           )
          )
          (br_if $__rjti$1
           (i64.gt_u
            (i64.add
             (tee_local $3
              (if (result i64)
               (get_local $10)
               (block (result i64)
                (if
                 (get_local $12)
                 (block
                  (set_local $3
                   (i64.shr_s
                    (i64.mul
                     (i64.extend_s/i32
                      (if (result i32)
                       (i32.lt_s
                        (i32.and
                         (get_local $2)
                         (i32.xor
                          (get_local $5)
                          (i32.const -2147483648)
                         )
                        )
                        (i32.const 0)
                       )
                       (i32.const -2147483648)
                       (get_local $1)
                      )
                     )
                     (get_local $6)
                    )
                    (i64.const 1)
                   )
                  )
                  (if
                   (i32.lt_s
                    (i32.and
                     (get_local $2)
                     (i32.xor
                      (get_local $5)
                      (i32.const -2147483648)
                     )
                    )
                    (i32.const 0)
                   )
                   (set_local $1
                    (i32.const -2147483648)
                   )
                  )
                 )
                 (block
                  (set_local $3
                   (i64.shr_s
                    (i64.mul
                     (i64.extend_s/i32
                      (if (result i32)
                       (i32.lt_s
                        (i32.and
                         (i32.xor
                          (get_local $2)
                          (i32.const -2147483648)
                         )
                         (get_local $5)
                        )
                        (i32.const 0)
                       )
                       (i32.const 2147483647)
                       (get_local $1)
                      )
                     )
                     (get_local $6)
                    )
                    (i64.const 1)
                   )
                  )
                  (if
                   (i32.lt_s
                    (i32.and
                     (i32.xor
                      (get_local $2)
                      (i32.const -2147483648)
                     )
                     (get_local $5)
                    )
                    (i32.const 0)
                   )
                   (set_local $1
                    (i32.const 2147483647)
                   )
                  )
                 )
                )
                (i64.add
                 (get_local $3)
                 (i64.and
                  (i64.mul
                   (i64.extend_s/i32
                    (get_local $1)
                   )
                   (get_local $6)
                  )
                  (i64.const 1)
                 )
                )
               )
               (block (result i64)
                (if
                 (get_local $12)
                 (if
                  (i32.lt_s
                   (i32.and
                    (get_local $2)
                    (i32.xor
                     (get_local $5)
                     (i32.const -2147483648)
                    )
                   )
                   (i32.const 0)
                  )
                  (set_local $1
                   (i32.const -2147483648)
                  )
                 )
                 (if
                  (i32.lt_s
                   (i32.and
                    (i32.xor
                     (get_local $2)
                     (i32.const -2147483648)
                    )
                    (get_local $5)
                   )
                   (i32.const 0)
                  )
                  (set_local $1
                   (i32.const 2147483647)
                  )
                 )
                )
                (i64.shr_s
                 (i64.add
                  (i64.shr_s
                   (i64.mul
                    (i64.extend_s/i32
                     (get_local $1)
                    )
                    (get_local $6)
                   )
                   (get_local $11)
                  )
                  (i64.const 1)
                 )
                 (i64.const 1)
                )
               )
              )
             )
             (i64.const 2147483648)
            )
            (i64.const 4294967295)
           )
          )
          (i64.store32
           (get_local $15)
           (get_local $3)
          )
          (set_local $5
           (i32.gt_s
            (tee_local $1
             (i32.sub
              (get_local $4)
              (tee_local $2
               (i32.wrap/i64
                (i64.shr_u
                 (i64.add
                  (i64.shr_u
                   (i64.mul
                    (i64.extend_s/i32
                     (get_local $2)
                    )
                    (get_local $8)
                   )
                   (i64.const 30)
                  )
                  (i64.const 1)
                 )
                 (i64.const 1)
                )
               )
              )
             )
            )
            (i32.const -1)
           )
          )
          (br_if $__rjti$1
           (i64.gt_u
            (i64.add
             (tee_local $3
              (if (result i64)
               (get_local $10)
               (block (result i64)
                (if
                 (get_local $5)
                 (block
                  (set_local $3
                   (i64.shr_s
                    (i64.mul
                     (i64.extend_s/i32
                      (if (result i32)
                       (i32.lt_s
                        (i32.and
                         (get_local $4)
                         (i32.xor
                          (get_local $2)
                          (i32.const -2147483648)
                         )
                        )
                        (i32.const 0)
                       )
                       (i32.const -2147483648)
                       (get_local $1)
                      )
                     )
                     (get_local $6)
                    )
                    (i64.const 1)
                   )
                  )
                  (if
                   (i32.lt_s
                    (i32.and
                     (get_local $4)
                     (i32.xor
                      (get_local $2)
                      (i32.const -2147483648)
                     )
                    )
                    (i32.const 0)
                   )
                   (set_local $1
                    (i32.const -2147483648)
                   )
                  )
                 )
                 (block
                  (set_local $3
                   (i64.shr_s
                    (i64.mul
                     (i64.extend_s/i32
                      (if (result i32)
                       (i32.lt_s
                        (i32.and
                         (i32.xor
                          (get_local $4)
                          (i32.const -2147483648)
                         )
                         (get_local $2)
                        )
                        (i32.const 0)
                       )
                       (i32.const 2147483647)
                       (get_local $1)
                      )
                     )
                     (get_local $6)
                    )
                    (i64.const 1)
                   )
                  )
                  (if
                   (i32.lt_s
                    (i32.and
                     (i32.xor
                      (get_local $4)
                      (i32.const -2147483648)
                     )
                     (get_local $2)
                    )
                    (i32.const 0)
                   )
                   (set_local $1
                    (i32.const 2147483647)
                   )
                  )
                 )
                )
                (i64.add
                 (get_local $3)
                 (i64.and
                  (i64.mul
                   (i64.extend_s/i32
                    (get_local $1)
                   )
                   (get_local $6)
                  )
                  (i64.const 1)
                 )
                )
               )
               (block (result i64)
                (if
                 (get_local $5)
                 (if
                  (i32.lt_s
                   (i32.and
                    (get_local $4)
                    (i32.xor
                     (get_local $2)
                     (i32.const -2147483648)
                    )
                   )
                   (i32.const 0)
                  )
                  (set_local $1
                   (i32.const -2147483648)
                  )
                 )
                 (if
                  (i32.lt_s
                   (i32.and
                    (i32.xor
                     (get_local $4)
                     (i32.const -2147483648)
                    )
                    (get_local $2)
                   )
                   (i32.const 0)
                  )
                  (set_local $1
                   (i32.const 2147483647)
                  )
                 )
                )
                (i64.shr_s
                 (i64.add
                  (i64.shr_s
                   (i64.mul
                    (i64.extend_s/i32
                     (get_local $1)
                    )
                    (get_local $6)
                   )
                   (get_local $11)
                  )
                  (i64.const 1)
                 )
                 (i64.const 1)
                )
               )
              )
             )
             (i64.const 2147483648)
            )
            (i64.const 4294967295)
           )
          )
          (i64.store32
           (get_local $16)
           (get_local $3)
          )
          (set_local $7
           (i32.add
            (get_local $7)
            (i32.const 1)
           )
          )
          (br $while-in)
         )
        )
       )
       (set_local $1
        (get_local $9)
       )
       (set_local $3
        (i64.extend_s/i32
         (get_local $13)
        )
       )
       (br $label$continue$L1)
      )
     )
    )
    (if
     (get_local $2)
     (return
      (i32.const 0)
     )
     (return
      (if (result i32)
       (i32.lt_s
        (tee_local $0
         (i32.and
          (i32.wrap/i64
           (i64.shr_u
            (i64.mul
             (get_local $3)
             (i64.extend_s/i32
              (i32.sub
               (i32.const 1073741824)
               (i32.wrap/i64
                (i64.shr_u
                 (i64.mul
                  (tee_local $3
                   (i64.extend_s/i32
                    (i32.sub
                     (i32.const 0)
                     (i32.shl
                      (i32.load
                       (get_local $0)
                      )
                      (i32.const 7)
                     )
                    )
                   )
                  )
                  (get_local $3)
                 )
                 (i64.const 32)
                )
               )
              )
             )
            )
            (i64.const 30)
           )
          )
          (i32.const -4)
         )
        )
        (i32.const 107374)
       )
       (i32.const 0)
       (get_local $0)
      )
     )
    )
   )
   (i32.const 0)
  )
 )
 (func $_silk_INVERSE32_varQ_435 (; 281 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (set_local $2
   (i32.sub
    (i32.const 0)
    (get_local $0)
   )
  )
  (set_local $2
   (call $_silk_CLZ32
    (if (result i32)
     (i32.gt_s
      (get_local $0)
      (i32.const 0)
     )
     (get_local $0)
     (get_local $2)
    )
   )
  )
  (set_local $0
   (i32.shr_s
    (tee_local $6
     (i32.shl
      (tee_local $5
       (i32.div_s
        (i32.const 536870911)
        (tee_local $4
         (i32.shr_s
          (tee_local $3
           (i32.shl
            (get_local $0)
            (i32.add
             (get_local $2)
             (i32.const -1)
            )
           )
          )
          (i32.const 16)
         )
        )
       )
      )
      (i32.const 16)
     )
    )
    (i32.const 16)
   )
  )
  (set_local $0
   (i32.add
    (i32.add
     (get_local $6)
     (i32.add
      (i32.mul
       (i32.shr_s
        (tee_local $3
         (i32.sub
          (i32.const 0)
          (i32.shl
           (i32.add
            (i32.mul
             (get_local $4)
             (get_local $0)
            )
            (i32.shr_s
             (i32.mul
              (i32.and
               (get_local $3)
               (i32.const 65535)
              )
              (get_local $0)
             )
             (i32.const 16)
            )
           )
           (i32.const 3)
          )
         )
        )
        (i32.const 16)
       )
       (get_local $0)
      )
      (i32.shr_s
       (i32.mul
        (i32.and
         (get_local $3)
         (i32.const 65528)
        )
        (get_local $0)
       )
       (i32.const 16)
      )
     )
    )
    (i32.mul
     (i32.shr_s
      (i32.add
       (i32.shr_s
        (get_local $5)
        (i32.const 15)
       )
       (i32.const 1)
      )
      (i32.const 1)
     )
     (get_local $3)
    )
   )
  )
  (if
   (i32.ge_s
    (tee_local $1
     (i32.sub
      (i32.sub
       (i32.const 62)
       (get_local $2)
      )
      (get_local $1)
     )
    )
    (i32.const 1)
   )
   (block
    (set_local $0
     (i32.shr_s
      (get_local $0)
      (get_local $1)
     )
    )
    (return
     (if (result i32)
      (i32.lt_s
       (get_local $1)
       (i32.const 32)
      )
      (get_local $0)
      (i32.const 0)
     )
    )
   )
  )
  (if (result i32)
   (i32.gt_s
    (tee_local $2
     (i32.shr_s
      (i32.const -2147483648)
      (tee_local $1
       (i32.sub
        (i32.const 0)
        (get_local $1)
       )
      )
     )
    )
    (tee_local $3
     (i32.shr_u
      (i32.const 2147483647)
      (get_local $1)
     )
    )
   )
   (block (result i32)
    (if
     (i32.gt_s
      (get_local $0)
      (get_local $2)
     )
     (return
      (i32.shl
       (get_local $2)
       (get_local $1)
      )
     )
    )
    (i32.shl
     (if (result i32)
      (i32.lt_s
       (get_local $0)
       (get_local $3)
      )
      (get_local $3)
      (get_local $0)
     )
     (get_local $1)
    )
   )
   (block (result i32)
    (if
     (i32.gt_s
      (get_local $0)
      (get_local $3)
     )
     (return
      (i32.shl
       (get_local $3)
       (get_local $1)
      )
     )
    )
    (i32.shl
     (if (result i32)
      (i32.lt_s
       (get_local $0)
       (get_local $2)
      )
      (get_local $2)
      (get_local $0)
     )
     (get_local $1)
    )
   )
  )
 )
 (func $_silk_NLSF2A (; 282 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (set_local $3
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.const 320)
   )
  )
  (set_local $4
   (i32.add
    (get_local $3)
    (i32.const 224)
   )
  )
  (set_local $7
   (i32.add
    (get_local $3)
    (i32.const 160)
   )
  )
  (set_local $8
   (i32.add
    (get_local $3)
    (i32.const 96)
   )
  )
  (set_local $5
   (get_local $3)
  )
  (block $switch
   (block $switch-default
    (block $switch-case
     (br_table $switch-case $switch-default $switch-default $switch-default $switch-default $switch-default $switch-case $switch-default
      (i32.sub
       (get_local $2)
       (i32.const 10)
      )
     )
    )
    (br $switch)
   )
   (call $_celt_fatal
    (i32.const 47009)
    (i32.const 47042)
    (i32.const 89)
   )
  )
  (set_local $6
   (if (result i32)
    (i32.eq
     (get_local $2)
     (i32.const 16)
    )
    (i32.const 28032)
    (i32.const 47056)
   )
  )
  (set_local $3
   (i32.const 0)
  )
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $3)
     (get_local $2)
    )
    (block
     (i32.store
      (i32.add
       (get_local $4)
       (i32.shl
        (i32.load8_u
         (i32.add
          (get_local $6)
          (get_local $3)
         )
        )
        (i32.const 2)
       )
      )
      (i32.shr_s
       (i32.add
        (i32.shr_s
         (i32.add
          (i32.shl
           (tee_local $11
            (i32.load16_s
             (i32.add
              (i32.shl
               (tee_local $10
                (i32.shr_s
                 (tee_local $9
                  (i32.load16_s
                   (i32.add
                    (get_local $1)
                    (i32.shl
                     (get_local $3)
                     (i32.const 1)
                    )
                   )
                  )
                 )
                 (i32.const 8)
                )
               )
               (i32.const 1)
              )
              (i32.const 27760)
             )
            )
           )
           (i32.const 8)
          )
          (i32.mul
           (i32.sub
            (i32.load16_s
             (i32.add
              (i32.shl
               (get_local $10)
               (i32.const 1)
              )
              (i32.const 27762)
             )
            )
            (get_local $11)
           )
           (i32.and
            (get_local $9)
            (i32.const 255)
           )
          )
         )
         (i32.const 3)
        )
        (i32.const 1)
       )
       (i32.const 1)
      )
     )
     (set_local $3
      (i32.add
       (get_local $3)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (call $_silk_NLSF2A_find_poly
   (get_local $7)
   (get_local $4)
   (tee_local $6
    (i32.shr_s
     (get_local $2)
     (i32.const 1)
    )
   )
  )
  (call $_silk_NLSF2A_find_poly
   (get_local $8)
   (i32.add
    (get_local $4)
    (i32.const 4)
   )
   (get_local $6)
  )
  (set_local $1
   (i32.const 0)
  )
  (loop $while-in2
   (if
    (i32.lt_s
     (get_local $1)
     (get_local $6)
    )
    (block
     (set_local $4
      (i32.add
       (i32.load
        (i32.add
         (get_local $7)
         (i32.shl
          (tee_local $3
           (i32.add
            (get_local $1)
            (i32.const 1)
           )
          )
          (i32.const 2)
         )
        )
       )
       (i32.load
        (i32.add
         (get_local $7)
         (i32.shl
          (get_local $1)
          (i32.const 2)
         )
        )
       )
      )
     )
     (i32.store
      (i32.add
       (get_local $5)
       (i32.shl
        (get_local $1)
        (i32.const 2)
       )
      )
      (i32.sub
       (i32.sub
        (i32.const 0)
        (tee_local $9
         (i32.sub
          (i32.load
           (i32.add
            (get_local $8)
            (i32.shl
             (get_local $3)
             (i32.const 2)
            )
           )
          )
          (i32.load
           (i32.add
            (get_local $8)
            (i32.shl
             (get_local $1)
             (i32.const 2)
            )
           )
          )
         )
        )
       )
       (get_local $4)
      )
     )
     (i32.store
      (i32.add
       (get_local $5)
       (i32.shl
        (i32.add
         (i32.sub
          (get_local $2)
          (get_local $1)
         )
         (i32.const -1)
        )
        (i32.const 2)
       )
      )
      (i32.sub
       (get_local $9)
       (get_local $4)
      )
     )
     (set_local $1
      (get_local $3)
     )
     (br $while-in2)
    )
   )
  )
  (call $_silk_LPC_fit
   (get_local $0)
   (get_local $5)
   (get_local $2)
  )
  (set_local $3
   (i32.const 0)
  )
  (loop $while-in4
   (if
    (i32.and
     (i32.eqz
      (call $_silk_LPC_inverse_pred_gain_c
       (get_local $0)
       (get_local $2)
      )
     )
     (i32.lt_u
      (get_local $3)
      (i32.const 16)
     )
    )
    (block
     (call $_silk_bwexpander_32
      (get_local $5)
      (get_local $2)
      (i32.sub
       (i32.const 65536)
       (i32.shl
        (i32.const 2)
        (get_local $3)
       )
      )
     )
     (set_local $1
      (i32.const 0)
     )
     (loop $while-in6
      (if
       (i32.lt_s
        (get_local $1)
        (get_local $2)
       )
       (block
        (i32.store16
         (i32.add
          (get_local $0)
          (i32.shl
           (get_local $1)
           (i32.const 1)
          )
         )
         (i32.shr_u
          (i32.add
           (i32.shr_u
            (i32.load
             (i32.add
              (get_local $5)
              (i32.shl
               (get_local $1)
               (i32.const 2)
              )
             )
            )
            (i32.const 4)
           )
           (i32.const 1)
          )
          (i32.const 1)
         )
        )
        (set_local $1
         (i32.add
          (get_local $1)
          (i32.const 1)
         )
        )
        (br $while-in6)
       )
      )
     )
     (set_local $3
      (i32.add
       (get_local $3)
       (i32.const 1)
      )
     )
     (br $while-in4)
    )
   )
  )
  (set_global $STACKTOP
   (get_local $5)
  )
 )
 (func $_silk_NLSF2A_find_poly (; 283 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i64)
  (i32.store
   (get_local $0)
   (i32.const 65536)
  )
  (set_local $7
   (i32.add
    (get_local $0)
    (i32.const 4)
   )
  )
  (set_local $3
   (i32.const 1)
  )
  (set_local $6
   (i32.sub
    (i32.const 0)
    (i32.load
     (get_local $1)
    )
   )
  )
  (loop $while-in
   (i32.store
    (get_local $7)
    (get_local $6)
   )
   (if
    (i32.lt_s
     (get_local $3)
     (get_local $2)
    )
    (block
     (i32.store
      (i32.add
       (get_local $0)
       (i32.shl
        (tee_local $6
         (i32.add
          (get_local $3)
          (i32.const 1)
         )
        )
        (i32.const 2)
       )
      )
      (i32.sub
       (i32.shl
        (tee_local $4
         (i32.load
          (i32.add
           (get_local $0)
           (i32.shl
            (i32.add
             (get_local $3)
             (i32.const -1)
            )
            (i32.const 2)
           )
          )
         )
        )
        (i32.const 1)
       )
       (i32.wrap/i64
        (i64.shr_u
         (i64.add
          (i64.shr_u
           (i64.mul
            (tee_local $9
             (i64.extend_s/i32
              (tee_local $8
               (i32.load
                (i32.add
                 (get_local $1)
                 (i32.shl
                  (get_local $3)
                  (i32.const 3)
                 )
                )
               )
              )
             )
            )
            (i64.extend_s/i32
             (i32.load
              (i32.add
               (get_local $0)
               (i32.shl
                (get_local $3)
                (i32.const 2)
               )
              )
             )
            )
           )
           (i64.const 15)
          )
          (i64.const 1)
         )
         (i64.const 1)
        )
       )
      )
     )
     (set_local $5
      (get_local $3)
     )
     (set_local $3
      (get_local $4)
     )
     (loop $while-in1
      (if
       (i32.gt_s
        (get_local $5)
        (i32.const 1)
       )
       (block
        (i32.store
         (tee_local $4
          (i32.add
           (get_local $0)
           (i32.shl
            (get_local $5)
            (i32.const 2)
           )
          )
         )
         (i32.add
          (i32.load
           (get_local $4)
          )
          (i32.sub
           (tee_local $4
            (i32.load
             (i32.add
              (get_local $0)
              (i32.shl
               (i32.add
                (get_local $5)
                (i32.const -2)
               )
               (i32.const 2)
              )
             )
            )
           )
           (i32.wrap/i64
            (i64.shr_u
             (i64.add
              (i64.shr_u
               (i64.mul
                (get_local $9)
                (i64.extend_s/i32
                 (get_local $3)
                )
               )
               (i64.const 15)
              )
              (i64.const 1)
             )
             (i64.const 1)
            )
           )
          )
         )
        )
        (set_local $5
         (i32.add
          (get_local $5)
          (i32.const -1)
         )
        )
        (set_local $3
         (get_local $4)
        )
        (br $while-in1)
       )
      )
     )
     (set_local $3
      (get_local $6)
     )
     (set_local $6
      (i32.sub
       (i32.load
        (get_local $7)
       )
       (get_local $8)
      )
     )
     (br $while-in)
    )
   )
  )
 )
 (func $_silk_NLSF_stabilize (; 284 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (set_local $9
   (i32.add
    (get_local $0)
    (i32.shl
     (i32.add
      (get_local $2)
      (i32.const -1)
     )
     (i32.const 1)
    )
   )
  )
  (set_local $11
   (i32.add
    (get_local $1)
    (i32.shl
     (get_local $2)
     (i32.const 1)
    )
   )
  )
  (block $__rjto$0
   (block $__rjti$0
    (loop $while-in
     (if
      (i32.lt_u
       (get_local $10)
       (i32.const 20)
      )
      (block
       (set_local $4
        (i32.sub
         (tee_local $3
          (i32.load16_s
           (get_local $0)
          )
         )
         (tee_local $12
          (i32.load16_s
           (get_local $1)
          )
         )
        )
       )
       (set_local $6
        (i32.const 1)
       )
       (set_local $5
        (i32.const 0)
       )
       (loop $while-in1
        (if
         (i32.lt_s
          (get_local $6)
          (get_local $2)
         )
         (block
          (set_local $3
           (if (result i32)
            (tee_local $13
             (i32.lt_s
              (tee_local $8
               (i32.sub
                (tee_local $7
                 (i32.load16_s
                  (i32.add
                   (get_local $0)
                   (i32.shl
                    (get_local $6)
                    (i32.const 1)
                   )
                  )
                 )
                )
                (i32.add
                 (i32.shr_s
                  (i32.shl
                   (get_local $3)
                   (i32.const 16)
                  )
                  (i32.const 16)
                 )
                 (i32.load16_s
                  (i32.add
                   (get_local $1)
                   (i32.shl
                    (get_local $6)
                    (i32.const 1)
                   )
                  )
                 )
                )
               )
              )
              (get_local $4)
             )
            )
            (get_local $6)
            (get_local $5)
           )
          )
          (if
           (get_local $13)
           (set_local $4
            (get_local $8)
           )
          )
          (set_local $6
           (i32.add
            (get_local $6)
            (i32.const 1)
           )
          )
          (set_local $5
           (get_local $3)
          )
          (set_local $3
           (get_local $7)
          )
          (br $while-in1)
         )
        )
       )
       (set_local $3
        (if (result i32)
         (tee_local $8
          (i32.lt_s
           (tee_local $7
            (i32.sub
             (i32.const 32768)
             (i32.add
              (i32.load16_s
               (get_local $9)
              )
              (i32.load16_s
               (get_local $11)
              )
             )
            )
           )
           (get_local $4)
          )
         )
         (get_local $2)
         (get_local $5)
        )
       )
       (br_if $__rjti$0
        (i32.gt_s
         (if (result i32)
          (get_local $8)
          (get_local $7)
          (get_local $4)
         )
         (i32.const -1)
        )
       )
       (block $do-once
        (if
         (get_local $3)
         (block
          (if
           (i32.eq
            (get_local $3)
            (get_local $2)
           )
           (block
            (i32.store16
             (get_local $9)
             (i32.sub
              (i32.const 32768)
              (i32.load16_u
               (get_local $11)
              )
             )
            )
            (br $do-once)
           )
          )
          (set_local $7
           (i32.const 0)
          )
          (set_local $4
           (i32.const 0)
          )
          (loop $while-in3
           (if
            (i32.lt_s
             (get_local $4)
             (get_local $3)
            )
            (block
             (set_local $7
              (i32.add
               (get_local $7)
               (i32.load16_s
                (i32.add
                 (get_local $1)
                 (i32.shl
                  (get_local $4)
                  (i32.const 1)
                 )
                )
               )
              )
             )
             (set_local $4
              (i32.add
               (get_local $4)
               (i32.const 1)
              )
             )
             (br $while-in3)
            )
           )
          )
          (set_local $8
           (i32.shr_s
            (i32.load16_s
             (tee_local $12
              (i32.add
               (get_local $1)
               (i32.shl
                (get_local $3)
                (i32.const 1)
               )
              )
             )
            )
            (i32.const 1)
           )
          )
          (set_local $6
           (i32.const 32768)
          )
          (set_local $4
           (get_local $2)
          )
          (loop $while-in5
           (if
            (i32.gt_s
             (get_local $4)
             (get_local $3)
            )
            (block
             (set_local $6
              (i32.sub
               (get_local $6)
               (i32.load16_s
                (i32.add
                 (get_local $1)
                 (i32.shl
                  (get_local $4)
                  (i32.const 1)
                 )
                )
               )
              )
             )
             (set_local $4
              (i32.add
               (get_local $4)
               (i32.const -1)
              )
             )
             (br $while-in5)
            )
           )
          )
          (set_local $5
           (i32.add
            (i32.shr_s
             (i32.add
              (tee_local $4
               (i32.load16_s
                (tee_local $13
                 (i32.add
                  (get_local $0)
                  (i32.shl
                   (i32.add
                    (get_local $3)
                    (i32.const -1)
                   )
                   (i32.const 1)
                  )
                 )
                )
               )
              )
              (tee_local $3
               (i32.load16_s
                (tee_local $14
                 (i32.add
                  (get_local $0)
                  (i32.shl
                   (get_local $3)
                   (i32.const 1)
                  )
                 )
                )
               )
              )
             )
             (i32.const 1)
            )
            (i32.and
             (i32.add
              (i32.and
               (get_local $4)
               (i32.const 65535)
              )
              (i32.and
               (get_local $3)
               (i32.const 65535)
              )
             )
             (i32.const 1)
            )
           )
          )
          (if
           (i32.gt_s
            (tee_local $3
             (i32.add
              (get_local $7)
              (get_local $8)
             )
            )
            (tee_local $4
             (i32.sub
              (get_local $6)
              (get_local $8)
             )
            )
           )
           (if
            (i32.le_s
             (get_local $5)
             (get_local $3)
            )
            (set_local $3
             (if (result i32)
              (i32.lt_s
               (get_local $5)
               (get_local $4)
              )
              (get_local $4)
              (get_local $5)
             )
            )
           )
           (if
            (i32.gt_s
             (get_local $5)
             (get_local $4)
            )
            (set_local $3
             (get_local $4)
            )
            (if
             (i32.ge_s
              (get_local $5)
              (get_local $3)
             )
             (set_local $3
              (get_local $5)
             )
            )
           )
          )
          (i32.store16
           (get_local $13)
           (tee_local $3
            (i32.sub
             (get_local $3)
             (get_local $8)
            )
           )
          )
          (i32.store16
           (get_local $14)
           (i32.add
            (get_local $3)
            (i32.load16_u
             (get_local $12)
            )
           )
          )
         )
         (i32.store16
          (get_local $0)
          (get_local $12)
         )
        )
       )
       (set_local $10
        (i32.add
         (get_local $10)
         (i32.const 1)
        )
       )
       (br $while-in)
      )
     )
    )
    (br $__rjto$0)
   )
   (return)
  )
  (if
   (i32.ne
    (get_local $10)
    (i32.const 20)
   )
   (return)
  )
  (call $_silk_insertion_sort_increasing_all_values_int16
   (get_local $0)
   (get_local $2)
  )
  (set_local $3
   (call $_silk_max_int
    (i32.load16_s
     (get_local $0)
    )
    (i32.load16_s
     (get_local $1)
    )
   )
  )
  (i32.store16
   (get_local $0)
   (get_local $3)
  )
  (set_local $4
   (i32.const 1)
  )
  (loop $while-in7
   (if
    (i32.lt_s
     (get_local $4)
     (get_local $2)
    )
    (block
     (set_local $3
      (call $_silk_max_int
       (i32.load16_s
        (tee_local $5
         (i32.add
          (get_local $0)
          (i32.shl
           (get_local $4)
           (i32.const 1)
          )
         )
        )
       )
       (i32.shr_s
        (i32.shl
         (if (result i32)
          (i32.lt_s
           (if (result i32)
            (i32.gt_s
             (tee_local $3
              (i32.add
               (i32.shr_s
                (i32.shl
                 (get_local $3)
                 (i32.const 16)
                )
                (i32.const 16)
               )
               (i32.load16_s
                (i32.add
                 (get_local $1)
                 (i32.shl
                  (get_local $4)
                  (i32.const 1)
                 )
                )
               )
              )
             )
             (i32.const -32768)
            )
            (get_local $3)
            (tee_local $3
             (i32.const -32768)
            )
           )
           (i32.const 32767)
          )
          (get_local $3)
          (i32.const 32767)
         )
         (i32.const 16)
        )
        (i32.const 16)
       )
      )
     )
     (i32.store16
      (get_local $5)
      (get_local $3)
     )
     (set_local $4
      (i32.add
       (get_local $4)
       (i32.const 1)
      )
     )
     (br $while-in7)
    )
   )
  )
  (set_local $3
   (call $_silk_min_int_238
    (i32.load16_s
     (get_local $9)
    )
    (i32.sub
     (i32.const 32768)
     (i32.load16_s
      (get_local $11)
     )
    )
   )
  )
  (i32.store16
   (get_local $9)
   (get_local $3)
  )
  (set_local $4
   (i32.add
    (get_local $2)
    (i32.const -2)
   )
  )
  (set_local $2
   (get_local $3)
  )
  (loop $while-in9
   (if
    (i32.gt_s
     (get_local $4)
     (i32.const -1)
    )
    (block
     (set_local $2
      (call $_silk_min_int_238
       (i32.load16_s
        (tee_local $3
         (i32.add
          (get_local $0)
          (i32.shl
           (get_local $4)
           (i32.const 1)
          )
         )
        )
       )
       (i32.sub
        (i32.shr_s
         (i32.shl
          (get_local $2)
          (i32.const 16)
         )
         (i32.const 16)
        )
        (i32.load16_s
         (i32.add
          (get_local $1)
          (i32.shl
           (i32.add
            (get_local $4)
            (i32.const 1)
           )
           (i32.const 1)
          )
         )
        )
       )
      )
     )
     (i32.store16
      (get_local $3)
      (get_local $2)
     )
     (set_local $4
      (i32.add
       (get_local $4)
       (i32.const -1)
      )
     )
     (br $while-in9)
    )
   )
  )
 )
 (func $_silk_NLSF_VQ_weights_laroia (; 285 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (if
   (i32.le_s
    (get_local $2)
    (i32.const 0)
   )
   (call $_celt_fatal
    (i32.const 47066)
    (i32.const 47090)
    (i32.const 51)
   )
  )
  (if
   (i32.and
    (get_local $2)
    (i32.const 1)
   )
   (call $_celt_fatal
    (i32.const 47120)
    (i32.const 47090)
    (i32.const 52)
   )
  )
  (set_local $4
   (i32.div_s
    (i32.const 131072)
    (call $_silk_max_32_344
     (tee_local $3
      (i32.load16_s
       (get_local $1)
      )
     )
    )
   )
  )
  (set_local $3
   (i32.div_s
    (i32.const 131072)
    (call $_silk_max_32_344
     (i32.sub
      (i32.load16_s offset=2
       (get_local $1)
      )
      (get_local $3)
     )
    )
   )
  )
  (set_local $4
   (i32.and
    (call $_silk_min_32_406
     (i32.add
      (get_local $4)
      (get_local $3)
     )
    )
    (i32.const 65535)
   )
  )
  (i32.store16
   (get_local $0)
   (get_local $4)
  )
  (set_local $5
   (i32.add
    (get_local $2)
    (i32.const -1)
   )
  )
  (set_local $2
   (get_local $3)
  )
  (set_local $3
   (i32.const 1)
  )
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $3)
     (get_local $5)
    )
    (block
     (set_local $2
      (i32.and
       (call $_silk_min_32_406
        (i32.add
         (tee_local $4
          (i32.div_s
           (i32.const 131072)
           (call $_silk_max_32_344
            (i32.sub
             (i32.load16_s
              (tee_local $7
               (i32.add
                (get_local $1)
                (i32.shl
                 (tee_local $6
                  (i32.add
                   (get_local $3)
                   (i32.const 1)
                  )
                 )
                 (i32.const 1)
                )
               )
              )
             )
             (i32.load16_s
              (i32.add
               (get_local $1)
               (i32.shl
                (get_local $3)
                (i32.const 1)
               )
              )
             )
            )
           )
          )
         )
         (get_local $2)
        )
       )
       (i32.const 65535)
      )
     )
     (i32.store16
      (i32.add
       (get_local $0)
       (i32.shl
        (get_local $3)
        (i32.const 1)
       )
      )
      (get_local $2)
     )
     (set_local $2
      (i32.div_s
       (i32.const 131072)
       (call $_silk_max_32_344
        (i32.sub
         (i32.load16_s
          (i32.add
           (get_local $1)
           (i32.shl
            (tee_local $3
             (i32.add
              (get_local $3)
              (i32.const 2)
             )
            )
            (i32.const 1)
           )
          )
         )
         (i32.load16_s
          (get_local $7)
         )
        )
       )
      )
     )
     (set_local $4
      (i32.and
       (call $_silk_min_32_406
        (i32.add
         (get_local $4)
         (get_local $2)
        )
       )
       (i32.const 65535)
      )
     )
     (i32.store16
      (i32.add
       (get_local $0)
       (i32.shl
        (get_local $6)
        (i32.const 1)
       )
      )
      (get_local $4)
     )
     (br $while-in)
    )
   )
  )
  (set_local $1
   (i32.and
    (call $_silk_min_32_406
     (i32.add
      (i32.div_s
       (i32.const 131072)
       (call $_silk_max_32_344
        (i32.sub
         (i32.const 32768)
         (i32.load16_s
          (i32.add
           (get_local $1)
           (i32.shl
            (get_local $5)
            (i32.const 1)
           )
          )
         )
        )
       )
      )
      (get_local $2)
     )
    )
    (i32.const 65535)
   )
  )
  (i32.store16
   (i32.add
    (get_local $0)
    (i32.shl
     (get_local $5)
     (i32.const 1)
    )
   )
   (get_local $1)
  )
 )
 (func $_silk_resampler_init (; 286 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (drop
   (call $_memset
    (get_local $0)
    (i32.const 0)
    (i32.const 300)
   )
  )
  (if
   (get_local $3)
   (block
    (block $label$break$L32
     (if
      (i32.lt_s
       (get_local $1)
       (i32.const 16000)
      )
      (block
       (if
        (i32.lt_s
         (get_local $1)
         (i32.const 12000)
        )
        (br_if $label$break$L32
         (i32.eqz
          (i32.sub
           (get_local $1)
           (i32.const 8000)
          )
         )
        )
        (br_if $label$break$L32
         (i32.eqz
          (i32.sub
           (get_local $1)
           (i32.const 12000)
          )
         )
        )
       )
       (call $_celt_fatal
        (i32.const 49348)
        (i32.const 47166)
        (i32.const 94)
       )
      )
      (block
       (if
        (i32.lt_s
         (get_local $1)
         (i32.const 24000)
        )
        (block
         (br_if $label$break$L32
          (i32.eqz
           (i32.sub
            (get_local $1)
            (i32.const 16000)
           )
          )
         )
         (call $_celt_fatal
          (i32.const 49348)
          (i32.const 47166)
          (i32.const 94)
         )
        )
       )
       (if
        (i32.lt_s
         (get_local $1)
         (i32.const 48000)
        )
        (br_if $label$break$L32
         (i32.eqz
          (i32.sub
           (get_local $1)
           (i32.const 24000)
          )
         )
        )
        (br_if $label$break$L32
         (i32.eqz
          (i32.sub
           (get_local $1)
           (i32.const 48000)
          )
         )
        )
       )
       (call $_celt_fatal
        (i32.const 49348)
        (i32.const 47166)
        (i32.const 94)
       )
      )
     )
    )
    (block $label$break$L50
     (if
      (i32.lt_s
       (get_local $2)
       (i32.const 12000)
      )
      (br_if $label$break$L50
       (i32.eqz
        (i32.sub
         (get_local $2)
         (i32.const 8000)
        )
       )
      )
      (if
       (i32.lt_s
        (get_local $2)
        (i32.const 16000)
       )
       (br_if $label$break$L50
        (i32.eqz
         (i32.sub
          (get_local $2)
          (i32.const 12000)
         )
        )
       )
       (br_if $label$break$L50
        (i32.eqz
         (i32.sub
          (get_local $2)
          (i32.const 16000)
         )
        )
       )
      )
     )
     (call $_celt_fatal
      (i32.const 49348)
      (i32.const 47166)
      (i32.const 94)
     )
    )
    (i32.store offset=292
     (get_local $0)
     (i32.load8_s
      (i32.add
       (i32.add
        (i32.mul
         (i32.shr_s
          (i32.sub
           (i32.shr_s
            (get_local $1)
            (i32.const 12)
           )
           (i32.gt_s
            (get_local $1)
            (i32.const 16000)
           )
          )
          (i32.gt_s
           (get_local $1)
           (i32.const 24000)
          )
         )
         (i32.const 3)
        )
        (i32.shr_s
         (i32.sub
          (i32.shr_s
           (get_local $2)
           (i32.const 12)
          )
          (i32.gt_s
           (get_local $2)
           (i32.const 16000)
          )
         )
         (i32.gt_s
          (get_local $2)
          (i32.const 24000)
         )
        )
       )
       (i32.const 47179)
      )
     )
    )
   )
   (block
    (block $label$break$L3
     (if
      (i32.lt_s
       (get_local $1)
       (i32.const 12000)
      )
      (br_if $label$break$L3
       (i32.eqz
        (i32.sub
         (get_local $1)
         (i32.const 8000)
        )
       )
      )
      (if
       (i32.lt_s
        (get_local $1)
        (i32.const 16000)
       )
       (br_if $label$break$L3
        (i32.eqz
         (i32.sub
          (get_local $1)
          (i32.const 12000)
         )
        )
       )
       (br_if $label$break$L3
        (i32.eqz
         (i32.sub
          (get_local $1)
          (i32.const 16000)
         )
        )
       )
      )
     )
     (call $_celt_fatal
      (i32.const 49348)
      (i32.const 47166)
      (i32.const 101)
     )
    )
    (block $label$break$L13
     (if
      (i32.lt_s
       (get_local $2)
       (i32.const 16000)
      )
      (block
       (if
        (i32.lt_s
         (get_local $2)
         (i32.const 12000)
        )
        (br_if $label$break$L13
         (i32.eqz
          (i32.sub
           (get_local $2)
           (i32.const 8000)
          )
         )
        )
        (br_if $label$break$L13
         (i32.eqz
          (i32.sub
           (get_local $2)
           (i32.const 12000)
          )
         )
        )
       )
       (call $_celt_fatal
        (i32.const 49348)
        (i32.const 47166)
        (i32.const 101)
       )
      )
      (block
       (if
        (i32.lt_s
         (get_local $2)
         (i32.const 24000)
        )
        (block
         (br_if $label$break$L13
          (i32.eqz
           (i32.sub
            (get_local $2)
            (i32.const 16000)
           )
          )
         )
         (call $_celt_fatal
          (i32.const 49348)
          (i32.const 47166)
          (i32.const 101)
         )
        )
       )
       (if
        (i32.lt_s
         (get_local $2)
         (i32.const 48000)
        )
        (br_if $label$break$L13
         (i32.eqz
          (i32.sub
           (get_local $2)
           (i32.const 24000)
          )
         )
        )
        (br_if $label$break$L13
         (i32.eqz
          (i32.sub
           (get_local $2)
           (i32.const 48000)
          )
         )
        )
       )
       (call $_celt_fatal
        (i32.const 49348)
        (i32.const 47166)
        (i32.const 101)
       )
      )
     )
    )
    (i32.store offset=292
     (get_local $0)
     (i32.load8_s
      (i32.add
       (i32.add
        (i32.mul
         (i32.shr_s
          (i32.sub
           (i32.shr_s
            (get_local $1)
            (i32.const 12)
           )
           (i32.gt_s
            (get_local $1)
            (i32.const 16000)
           )
          )
          (i32.gt_s
           (get_local $1)
           (i32.const 24000)
          )
         )
         (i32.const 5)
        )
        (i32.shr_s
         (i32.sub
          (i32.shr_s
           (get_local $2)
           (i32.const 12)
          )
          (i32.gt_s
           (get_local $2)
           (i32.const 16000)
          )
         )
         (i32.gt_s
          (get_local $2)
          (i32.const 24000)
         )
        )
       )
       (i32.const 47192)
      )
     )
    )
   )
  )
  (i32.store offset=284
   (get_local $0)
   (tee_local $3
    (i32.div_s
     (get_local $1)
     (i32.const 1000)
    )
   )
  )
  (i32.store offset=288
   (get_local $0)
   (i32.div_s
    (get_local $2)
    (i32.const 1000)
   )
  )
  (i32.store offset=268
   (get_local $0)
   (i32.mul
    (get_local $3)
    (i32.const 10)
   )
  )
  (block $do-once
   (if
    (i32.gt_s
     (get_local $2)
     (get_local $1)
    )
    (block
     (set_local $3
      (i32.add
       (get_local $0)
       (i32.const 264)
      )
     )
     (set_local $4
      (if (result i32)
       (i32.eq
        (i32.shl
         (get_local $1)
         (i32.const 1)
        )
        (get_local $2)
       )
       (block (result i32)
        (i32.store
         (get_local $3)
         (i32.const 1)
        )
        (i32.const 0)
       )
       (block (result i32)
        (i32.store
         (get_local $3)
         (i32.const 2)
        )
        (i32.const 1)
       )
      )
     )
    )
    (block
     (set_local $3
      (i32.add
       (get_local $0)
       (i32.const 264)
      )
     )
     (if
      (i32.ge_s
       (get_local $2)
       (get_local $1)
      )
      (block
       (i32.store
        (get_local $3)
        (i32.const 0)
       )
       (br $do-once)
      )
     )
     (i32.store
      (get_local $3)
      (i32.const 3)
     )
     (if
      (i32.eq
       (tee_local $3
        (i32.shl
         (get_local $2)
         (i32.const 2)
        )
       )
       (i32.mul
        (get_local $1)
        (i32.const 3)
       )
      )
      (block
       (i32.store offset=280
        (get_local $0)
        (i32.const 3)
       )
       (i32.store offset=276
        (get_local $0)
        (i32.const 18)
       )
       (i32.store offset=296
        (get_local $0)
        (i32.const 28304)
       )
       (br $do-once)
      )
     )
     (if
      (i32.eq
       (tee_local $5
        (i32.mul
         (get_local $2)
         (i32.const 3)
        )
       )
       (i32.shl
        (get_local $1)
        (i32.const 1)
       )
      )
      (block
       (i32.store offset=280
        (get_local $0)
        (i32.const 2)
       )
       (i32.store offset=276
        (get_local $0)
        (i32.const 18)
       )
       (i32.store offset=296
        (get_local $0)
        (i32.const 28368)
       )
       (br $do-once)
      )
     )
     (if
      (i32.eq
       (i32.shl
        (get_local $2)
        (i32.const 1)
       )
       (get_local $1)
      )
      (block
       (i32.store offset=280
        (get_local $0)
        (i32.const 1)
       )
       (i32.store offset=276
        (get_local $0)
        (i32.const 24)
       )
       (i32.store offset=296
        (get_local $0)
        (i32.const 28416)
       )
       (br $do-once)
      )
     )
     (if
      (i32.eq
       (get_local $5)
       (get_local $1)
      )
      (block
       (i32.store offset=280
        (get_local $0)
        (i32.const 1)
       )
       (i32.store offset=276
        (get_local $0)
        (i32.const 36)
       )
       (i32.store offset=296
        (get_local $0)
        (i32.const 28448)
       )
       (br $do-once)
      )
     )
     (if
      (i32.eq
       (get_local $3)
       (get_local $1)
      )
      (block
       (i32.store offset=280
        (get_local $0)
        (i32.const 1)
       )
       (i32.store offset=276
        (get_local $0)
        (i32.const 36)
       )
       (i32.store offset=296
        (get_local $0)
        (i32.const 28496)
       )
       (br $do-once)
      )
     )
     (if
      (i32.eq
       (i32.mul
        (get_local $2)
        (i32.const 6)
       )
       (get_local $1)
      )
      (block
       (i32.store offset=280
        (get_local $0)
        (i32.const 1)
       )
       (i32.store offset=276
        (get_local $0)
        (i32.const 36)
       )
       (i32.store offset=296
        (get_local $0)
        (i32.const 28544)
       )
      )
      (call $_celt_fatal
       (i32.const 49348)
       (i32.const 47166)
       (i32.const 154)
      )
     )
    )
   )
  )
  (i32.store
   (tee_local $5
    (i32.add
     (get_local $0)
     (i32.const 272)
    )
   )
   (tee_local $0
    (i32.shl
     (i32.div_s
      (i32.shl
       (get_local $1)
       (i32.or
        (get_local $4)
        (i32.const 14)
       )
      )
      (get_local $2)
     )
     (i32.const 2)
    )
   )
  )
  (set_local $3
   (i32.shr_s
    (i32.shl
     (get_local $2)
     (i32.const 16)
    )
    (i32.const 16)
   )
  )
  (set_local $2
   (i32.shr_s
    (i32.add
     (i32.shr_s
      (get_local $2)
      (i32.const 15)
     )
     (i32.const 1)
    )
    (i32.const 1)
   )
  )
  (set_local $1
   (i32.shl
    (get_local $1)
    (get_local $4)
   )
  )
  (loop $while-in
   (if
    (i32.lt_s
     (i32.add
      (i32.add
       (i32.mul
        (i32.shr_s
         (get_local $0)
         (i32.const 16)
        )
        (get_local $3)
       )
       (i32.shr_s
        (i32.mul
         (i32.and
          (get_local $0)
          (i32.const 65535)
         )
         (get_local $3)
        )
        (i32.const 16)
       )
      )
      (i32.mul
       (get_local $0)
       (get_local $2)
      )
     )
     (get_local $1)
    )
    (block
     (i32.store
      (get_local $5)
      (tee_local $0
       (i32.add
        (get_local $0)
        (i32.const 1)
       )
      )
     )
     (br $while-in)
    )
   )
  )
 )
 (func $_silk_resampler (; 287 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (if
   (i32.gt_s
    (tee_local $4
     (i32.load
      (tee_local $5
       (i32.add
        (get_local $0)
        (i32.const 284)
       )
      )
     )
    )
    (get_local $3)
   )
   (call $_celt_fatal
    (i32.const 47213)
    (i32.const 47166)
    (i32.const 184)
   )
  )
  (if
   (i32.lt_s
    (get_local $4)
    (tee_local $6
     (i32.load
      (tee_local $7
       (i32.add
        (get_local $0)
        (i32.const 292)
       )
      )
     )
    )
   )
   (call $_celt_fatal
    (i32.const 47253)
    (i32.const 47166)
    (i32.const 186)
   )
  )
  (drop
   (call $_memcpy
    (i32.add
     (i32.add
      (get_local $0)
      (i32.const 168)
     )
     (i32.shl
      (get_local $6)
      (i32.const 1)
     )
    )
    (get_local $2)
    (i32.shl
     (tee_local $6
      (i32.sub
       (get_local $4)
       (get_local $6)
      )
     )
     (i32.const 1)
    )
   )
  )
  (drop
   (call $_memcpy
    (tee_local $0
     (block $switch (result i32)
      (block $switch-default
       (block $switch-case1
        (block $switch-case0
         (block $switch-case
          (br_table $switch-case $switch-case0 $switch-case1 $switch-default
           (i32.sub
            (i32.load offset=264
             (get_local $0)
            )
            (i32.const 1)
           )
          )
         )
         (call $_silk_resampler_private_up2_HQ_wrapper
          (get_local $0)
          (get_local $1)
          (tee_local $4
           (i32.add
            (get_local $0)
            (i32.const 168)
           )
          )
          (i32.load
           (get_local $5)
          )
         )
         (call $_silk_resampler_private_up2_HQ_wrapper
          (get_local $0)
          (i32.add
           (get_local $1)
           (i32.shl
            (i32.load offset=288
             (get_local $0)
            )
            (i32.const 1)
           )
          )
          (i32.add
           (get_local $2)
           (i32.shl
            (get_local $6)
            (i32.const 1)
           )
          )
          (i32.sub
           (get_local $3)
           (i32.load
            (get_local $5)
           )
          )
         )
         (br $switch
          (get_local $4)
         )
        )
        (call $_silk_resampler_private_IIR_FIR
         (get_local $0)
         (get_local $1)
         (tee_local $4
          (i32.add
           (get_local $0)
           (i32.const 168)
          )
         )
         (i32.load
          (get_local $5)
         )
        )
        (call $_silk_resampler_private_IIR_FIR
         (get_local $0)
         (i32.add
          (get_local $1)
          (i32.shl
           (i32.load offset=288
            (get_local $0)
           )
           (i32.const 1)
          )
         )
         (i32.add
          (get_local $2)
          (i32.shl
           (get_local $6)
           (i32.const 1)
          )
         )
         (i32.sub
          (get_local $3)
          (i32.load
           (get_local $5)
          )
         )
        )
        (br $switch
         (get_local $4)
        )
       )
       (call $_silk_resampler_private_down_FIR
        (get_local $0)
        (get_local $1)
        (tee_local $4
         (i32.add
          (get_local $0)
          (i32.const 168)
         )
        )
        (i32.load
         (get_local $5)
        )
       )
       (call $_silk_resampler_private_down_FIR
        (get_local $0)
        (i32.add
         (get_local $1)
         (i32.shl
          (i32.load offset=288
           (get_local $0)
          )
          (i32.const 1)
         )
        )
        (i32.add
         (get_local $2)
         (i32.shl
          (get_local $6)
          (i32.const 1)
         )
        )
        (i32.sub
         (get_local $3)
         (i32.load
          (get_local $5)
         )
        )
       )
       (br $switch
        (get_local $4)
       )
      )
      (drop
       (call $_memcpy
        (get_local $1)
        (tee_local $4
         (i32.add
          (get_local $0)
          (i32.const 168)
         )
        )
        (i32.shl
         (i32.load
          (get_local $5)
         )
         (i32.const 1)
        )
       )
      )
      (drop
       (call $_memcpy
        (i32.add
         (get_local $1)
         (i32.shl
          (i32.load offset=288
           (get_local $0)
          )
          (i32.const 1)
         )
        )
        (i32.add
         (get_local $2)
         (i32.shl
          (get_local $6)
          (i32.const 1)
         )
        )
        (i32.shl
         (i32.sub
          (get_local $3)
          (i32.load
           (get_local $5)
          )
         )
         (i32.const 1)
        )
       )
      )
      (get_local $4)
     )
    )
    (i32.add
     (get_local $2)
     (i32.shl
      (i32.sub
       (get_local $3)
       (tee_local $0
        (i32.load
         (get_local $7)
        )
       )
      )
      (i32.const 1)
     )
    )
    (i32.shl
     (get_local $0)
     (i32.const 1)
    )
   )
  )
 )
 (func $_silk_resampler_down2_3 (; 288 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (set_local $10
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.const 1936)
   )
  )
  (i64.store align=4
   (tee_local $6
    (get_local $10)
   )
   (i64.load align=4
    (get_local $0)
   )
  )
  (i64.store offset=8 align=4
   (get_local $6)
   (i64.load offset=8 align=4
    (get_local $0)
   )
  )
  (set_local $11
   (i32.add
    (get_local $0)
    (i32.const 16)
   )
  )
  (set_local $12
   (i32.add
    (get_local $6)
    (i32.const 16)
   )
  )
  (set_local $8
   (get_local $2)
  )
  (loop $while-in
   (call $_silk_resampler_private_AR2
    (get_local $11)
    (get_local $12)
    (get_local $8)
    (i32.const 41178)
    (tee_local $7
     (if (result i32)
      (i32.lt_s
       (get_local $3)
       (i32.const 480)
      )
      (get_local $3)
      (i32.const 480)
     )
    )
   )
   (set_local $2
    (get_local $6)
   )
   (set_local $9
    (get_local $7)
   )
   (loop $while-in1
    (if
     (i32.gt_s
      (get_local $9)
      (i32.const 2)
     )
     (block
      (i32.store16
       (get_local $1)
       (tee_local $4
        (if (result i32)
         (i32.gt_s
          (tee_local $4
           (i32.add
            (i32.add
             (i32.add
              (i32.add
               (i32.mul
                (i32.shr_s
                 (tee_local $5
                  (i32.load
                   (get_local $2)
                  )
                 )
                 (i32.const 16)
                )
                (i32.const 4697)
               )
               (i32.shr_u
                (i32.mul
                 (i32.and
                  (get_local $5)
                  (i32.const 65535)
                 )
                 (i32.const 4697)
                )
                (i32.const 16)
               )
              )
              (i32.add
               (i32.mul
                (i32.shr_s
                 (tee_local $5
                  (i32.load
                   (tee_local $13
                    (i32.add
                     (get_local $2)
                     (i32.const 4)
                    )
                   )
                  )
                 )
                 (i32.const 16)
                )
                (i32.const 10739)
               )
               (i32.shr_u
                (i32.mul
                 (i32.and
                  (get_local $5)
                  (i32.const 65535)
                 )
                 (i32.const 10739)
                )
                (i32.const 16)
               )
              )
             )
             (i32.add
              (i32.mul
               (i32.shr_s
                (tee_local $5
                 (i32.load
                  (tee_local $14
                   (i32.add
                    (get_local $2)
                    (i32.const 8)
                   )
                  )
                 )
                )
                (i32.const 16)
               )
               (i32.const 8276)
              )
              (i32.shr_u
               (i32.mul
                (i32.and
                 (get_local $5)
                 (i32.const 65535)
                )
                (i32.const 8276)
               )
               (i32.const 16)
              )
             )
            )
            (i32.add
             (i32.mul
              (i32.shr_s
               (tee_local $4
                (i32.load
                 (tee_local $5
                  (i32.add
                   (get_local $2)
                   (i32.const 12)
                  )
                 )
                )
               )
               (i32.const 16)
              )
              (i32.const 1567)
             )
             (i32.shr_u
              (i32.mul
               (i32.and
                (get_local $4)
                (i32.const 65535)
               )
               (i32.const 1567)
              )
              (i32.const 16)
             )
            )
           )
          )
          (i32.const 2097119)
         )
         (i32.const 32767)
         (if (result i32)
          (i32.lt_s
           (get_local $4)
           (i32.const -2097184)
          )
          (i32.const -32768)
          (i32.shr_s
           (i32.add
            (i32.shr_s
             (get_local $4)
             (i32.const 5)
            )
            (i32.const 1)
           )
           (i32.const 1)
          )
         )
        )
       )
      )
      (i32.store16 offset=2
       (get_local $1)
       (tee_local $2
        (if (result i32)
         (i32.gt_s
          (tee_local $2
           (i32.add
            (i32.add
             (i32.add
              (i32.add
               (i32.mul
                (i32.shr_s
                 (tee_local $4
                  (i32.load
                   (get_local $13)
                  )
                 )
                 (i32.const 16)
                )
                (i32.const 1567)
               )
               (i32.shr_u
                (i32.mul
                 (i32.and
                  (get_local $4)
                  (i32.const 65535)
                 )
                 (i32.const 1567)
                )
                (i32.const 16)
               )
              )
              (i32.add
               (i32.mul
                (i32.shr_s
                 (tee_local $4
                  (i32.load
                   (get_local $14)
                  )
                 )
                 (i32.const 16)
                )
                (i32.const 8276)
               )
               (i32.shr_u
                (i32.mul
                 (i32.and
                  (get_local $4)
                  (i32.const 65535)
                 )
                 (i32.const 8276)
                )
                (i32.const 16)
               )
              )
             )
             (i32.add
              (i32.mul
               (i32.shr_s
                (tee_local $4
                 (i32.load
                  (get_local $5)
                 )
                )
                (i32.const 16)
               )
               (i32.const 10739)
              )
              (i32.shr_u
               (i32.mul
                (i32.and
                 (get_local $4)
                 (i32.const 65535)
                )
                (i32.const 10739)
               )
               (i32.const 16)
              )
             )
            )
            (i32.add
             (i32.mul
              (i32.shr_s
               (tee_local $2
                (i32.load offset=16
                 (get_local $2)
                )
               )
               (i32.const 16)
              )
              (i32.const 4697)
             )
             (i32.shr_u
              (i32.mul
               (i32.and
                (get_local $2)
                (i32.const 65535)
               )
               (i32.const 4697)
              )
              (i32.const 16)
             )
            )
           )
          )
          (i32.const 2097119)
         )
         (i32.const 32767)
         (if (result i32)
          (i32.lt_s
           (get_local $2)
           (i32.const -2097184)
          )
          (i32.const -32768)
          (i32.shr_s
           (i32.add
            (i32.shr_s
             (get_local $2)
             (i32.const 5)
            )
            (i32.const 1)
           )
           (i32.const 1)
          )
         )
        )
       )
      )
      (set_local $2
       (get_local $5)
      )
      (set_local $9
       (i32.add
        (get_local $9)
        (i32.const -3)
       )
      )
      (set_local $1
       (i32.add
        (get_local $1)
        (i32.const 4)
       )
      )
      (br $while-in1)
     )
    )
   )
   (if
    (i32.gt_s
     (tee_local $3
      (i32.sub
       (get_local $3)
       (get_local $7)
      )
     )
     (i32.const 0)
    )
    (block
     (i64.store align=4
      (get_local $6)
      (i64.load align=4
       (tee_local $2
        (i32.add
         (get_local $6)
         (i32.shl
          (get_local $7)
          (i32.const 2)
         )
        )
       )
      )
     )
     (i64.store offset=8 align=4
      (get_local $6)
      (i64.load offset=8 align=4
       (get_local $2)
      )
     )
     (set_local $8
      (i32.add
       (get_local $8)
       (i32.shl
        (get_local $7)
        (i32.const 1)
       )
      )
     )
     (br $while-in)
    )
   )
  )
  (i64.store align=4
   (get_local $0)
   (i64.load align=4
    (tee_local $1
     (i32.add
      (get_local $6)
      (i32.shl
       (get_local $7)
       (i32.const 2)
      )
     )
    )
   )
  )
  (i64.store offset=8 align=4
   (get_local $0)
   (i64.load offset=8 align=4
    (get_local $1)
   )
  )
  (set_global $STACKTOP
   (get_local $10)
  )
 )
 (func $_silk_resampler_down2 (; 289 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (set_local $9
   (i32.shr_s
    (get_local $3)
    (i32.const 1)
   )
  )
  (set_local $7
   (i32.add
    (get_local $0)
    (i32.const 4)
   )
  )
  (set_local $3
   (i32.const 0)
  )
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $3)
     (get_local $9)
    )
    (block
     (set_local $8
      (i32.add
       (i32.mul
        (i32.shr_s
         (tee_local $4
          (i32.sub
           (tee_local $5
            (i32.shl
             (i32.load16_s
              (i32.add
               (get_local $2)
               (i32.shl
                (tee_local $6
                 (i32.shl
                  (get_local $3)
                  (i32.const 1)
                 )
                )
                (i32.const 1)
               )
              )
             )
             (i32.const 10)
            )
           )
           (i32.load
            (get_local $0)
           )
          )
         )
         (i32.const 16)
        )
        (i32.const -25727)
       )
       (i32.shr_s
        (i32.mul
         (i32.and
          (get_local $4)
          (i32.const 65535)
         )
         (i32.const -25727)
        )
        (i32.const 16)
       )
      )
     )
     (i32.store
      (get_local $0)
      (i32.add
       (get_local $5)
       (i32.add
        (get_local $4)
        (get_local $8)
       )
      )
     )
     (set_local $4
      (i32.add
       (i32.mul
        (i32.shr_s
         (tee_local $4
          (i32.sub
           (tee_local $6
            (i32.shl
             (i32.load16_s
              (i32.add
               (get_local $2)
               (i32.shl
                (i32.or
                 (get_local $6)
                 (i32.const 1)
                )
                (i32.const 1)
               )
              )
             )
             (i32.const 10)
            )
           )
           (tee_local $10
            (i32.load
             (get_local $7)
            )
           )
          )
         )
         (i32.const 16)
        )
        (i32.const 9872)
       )
       (i32.shr_u
        (i32.mul
         (i32.and
          (get_local $4)
          (i32.const 65535)
         )
         (i32.const 9872)
        )
        (i32.const 16)
       )
      )
     )
     (i32.store
      (get_local $7)
      (i32.add
       (get_local $6)
       (get_local $4)
      )
     )
     (i32.store16
      (i32.add
       (get_local $1)
       (i32.shl
        (get_local $3)
        (i32.const 1)
       )
      )
      (tee_local $5
       (if (result i32)
        (i32.gt_s
         (tee_local $5
          (i32.add
           (i32.add
            (i32.add
             (get_local $5)
             (get_local $8)
            )
            (get_local $10)
           )
           (get_local $4)
          )
         )
         (i32.const 67107839)
        )
        (i32.const 32767)
        (if (result i32)
         (i32.lt_s
          (get_local $5)
          (i32.const -67109888)
         )
         (i32.const -32768)
         (i32.shr_s
          (i32.add
           (i32.shr_s
            (get_local $5)
            (i32.const 10)
           )
           (i32.const 1)
          )
          (i32.const 1)
         )
        )
       )
      )
     )
     (set_local $3
      (i32.add
       (get_local $3)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
 )
 (func $_silk_resampler_private_AR2 (; 290 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (set_local $8
   (i32.add
    (get_local $0)
    (i32.const 4)
   )
  )
  (set_local $9
   (i32.add
    (get_local $3)
    (i32.const 2)
   )
  )
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $5)
     (get_local $4)
    )
    (block
     (i32.store
      (i32.add
       (get_local $1)
       (i32.shl
        (get_local $5)
        (i32.const 2)
       )
      )
      (tee_local $6
       (i32.add
        (i32.load
         (get_local $0)
        )
        (i32.shl
         (i32.load16_s
          (i32.add
           (get_local $2)
           (i32.shl
            (get_local $5)
            (i32.const 1)
           )
          )
         )
         (i32.const 8)
        )
       )
      )
     )
     (i32.store
      (get_local $0)
      (i32.add
       (i32.load
        (get_local $8)
       )
       (i32.add
        (i32.mul
         (tee_local $7
          (i32.shr_s
           (tee_local $6
            (i32.shl
             (get_local $6)
             (i32.const 2)
            )
           )
           (i32.const 16)
          )
         )
         (tee_local $10
          (i32.load16_s
           (get_local $3)
          )
         )
        )
        (i32.shr_s
         (i32.mul
          (tee_local $6
           (i32.and
            (get_local $6)
            (i32.const 65532)
           )
          )
          (get_local $10)
         )
         (i32.const 16)
        )
       )
      )
     )
     (i32.store
      (get_local $8)
      (i32.add
       (i32.mul
        (get_local $7)
        (tee_local $7
         (i32.load16_s
          (get_local $9)
         )
        )
       )
       (i32.shr_s
        (i32.mul
         (get_local $6)
         (get_local $7)
        )
        (i32.const 16)
       )
      )
     )
     (set_local $5
      (i32.add
       (get_local $5)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
 )
 (func $_silk_resampler_private_down_FIR (; 291 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (set_local $8
   (get_global $STACKTOP)
  )
  (set_local $5
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (i32.add
        (tee_local $6
         (i32.load
          (tee_local $9
           (i32.add
            (get_local $0)
            (i32.const 268)
           )
          )
         )
        )
        (tee_local $4
         (i32.load
          (tee_local $7
           (i32.add
            (get_local $0)
            (i32.const 276)
           )
          )
         )
        )
       )
       (i32.const 2)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (drop
   (call $_memcpy
    (get_local $5)
    (tee_local $10
     (i32.add
      (get_local $0)
      (i32.const 24)
     )
    )
    (i32.shl
     (get_local $4)
     (i32.const 2)
    )
   )
  )
  (set_local $12
   (i32.add
    (i32.load
     (tee_local $11
      (i32.add
       (get_local $0)
       (i32.const 296)
      )
     )
    )
    (i32.const 4)
   )
  )
  (set_local $13
   (i32.load offset=272
    (get_local $0)
   )
  )
  (set_local $14
   (i32.add
    (get_local $0)
    (i32.const 280)
   )
  )
  (loop $while-in
   (block $while-out
    (call $_silk_resampler_private_AR2
     (get_local $0)
     (i32.add
      (get_local $5)
      (i32.shl
       (get_local $4)
       (i32.const 2)
      )
     )
     (get_local $2)
     (i32.load
      (get_local $11)
     )
     (tee_local $4
      (if (result i32)
       (i32.lt_s
        (get_local $3)
        (get_local $6)
       )
       (get_local $3)
       (get_local $6)
      )
     )
    )
    (set_local $1
     (call $_silk_resampler_private_down_FIR_INTERPOL
      (get_local $1)
      (get_local $5)
      (get_local $12)
      (i32.load
       (get_local $7)
      )
      (i32.load
       (get_local $14)
      )
      (i32.shl
       (get_local $4)
       (i32.const 16)
      )
      (get_local $13)
     )
    )
    (br_if $while-out
     (i32.le_s
      (tee_local $3
       (i32.sub
        (get_local $3)
        (get_local $4)
       )
      )
      (i32.const 1)
     )
    )
    (set_local $2
     (i32.add
      (get_local $2)
      (i32.shl
       (get_local $4)
       (i32.const 1)
      )
     )
    )
    (drop
     (call $_memcpy
      (get_local $5)
      (i32.add
       (get_local $5)
       (i32.shl
        (get_local $4)
        (i32.const 2)
       )
      )
      (i32.shl
       (tee_local $4
        (i32.load
         (get_local $7)
        )
       )
       (i32.const 2)
      )
     )
    )
    (set_local $6
     (i32.load
      (get_local $9)
     )
    )
    (br $while-in)
   )
  )
  (drop
   (call $_memcpy
    (get_local $10)
    (i32.add
     (get_local $5)
     (i32.shl
      (get_local $4)
      (i32.const 2)
     )
    )
    (i32.shl
     (i32.load
      (get_local $7)
     )
     (i32.const 2)
    )
   )
  )
  (set_global $STACKTOP
   (get_local $8)
  )
 )
 (func $_silk_resampler_private_down_FIR_INTERPOL (; 292 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (result i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (block $switch
   (block $switch-default
    (block $switch-case5
     (block $switch-case2
      (block $switch-case
       (br_table $switch-case $switch-default $switch-default $switch-default $switch-default $switch-default $switch-case2 $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-case5 $switch-default
        (i32.sub
         (get_local $3)
         (i32.const 18)
        )
       )
      )
      (set_local $15
       (i32.shr_s
        (i32.shl
         (get_local $4)
         (i32.const 16)
        )
        (i32.const 16)
       )
      )
      (set_local $16
       (i32.add
        (get_local $4)
        (i32.const -1)
       )
      )
      (loop $while-in
       (if
        (i32.lt_s
         (get_local $14)
         (get_local $5)
        )
        (block
         (i32.store16
          (get_local $0)
          (tee_local $3
           (if (result i32)
            (i32.gt_s
             (tee_local $3
              (i32.add
               (i32.add
                (i32.add
                 (i32.add
                  (i32.add
                   (i32.add
                    (i32.add
                     (i32.add
                      (i32.add
                       (i32.add
                        (i32.add
                         (i32.add
                          (i32.add
                           (i32.add
                            (i32.add
                             (i32.add
                              (i32.add
                               (i32.add
                                (i32.mul
                                 (i32.shr_s
                                  (tee_local $7
                                   (i32.load
                                    (tee_local $3
                                     (i32.add
                                      (get_local $1)
                                      (i32.shl
                                       (i32.shr_s
                                        (get_local $14)
                                        (i32.const 16)
                                       )
                                       (i32.const 2)
                                      )
                                     )
                                    )
                                   )
                                  )
                                  (i32.const 16)
                                 )
                                 (tee_local $13
                                  (i32.load16_s
                                   (tee_local $4
                                    (i32.add
                                     (get_local $2)
                                     (i32.shl
                                      (i32.mul
                                       (tee_local $12
                                        (i32.shr_s
                                         (i32.mul
                                          (i32.and
                                           (get_local $14)
                                           (i32.const 65535)
                                          )
                                          (get_local $15)
                                         )
                                         (i32.const 16)
                                        )
                                       )
                                       (i32.const 9)
                                      )
                                      (i32.const 1)
                                     )
                                    )
                                   )
                                  )
                                 )
                                )
                                (i32.shr_s
                                 (i32.mul
                                  (i32.and
                                   (get_local $7)
                                   (i32.const 65535)
                                  )
                                  (get_local $13)
                                 )
                                 (i32.const 16)
                                )
                               )
                               (i32.add
                                (i32.mul
                                 (i32.shr_s
                                  (tee_local $7
                                   (i32.load offset=4
                                    (get_local $3)
                                   )
                                  )
                                  (i32.const 16)
                                 )
                                 (tee_local $13
                                  (i32.load16_s offset=2
                                   (get_local $4)
                                  )
                                 )
                                )
                                (i32.shr_s
                                 (i32.mul
                                  (i32.and
                                   (get_local $7)
                                   (i32.const 65535)
                                  )
                                  (get_local $13)
                                 )
                                 (i32.const 16)
                                )
                               )
                              )
                              (i32.add
                               (i32.mul
                                (i32.shr_s
                                 (tee_local $7
                                  (i32.load offset=8
                                   (get_local $3)
                                  )
                                 )
                                 (i32.const 16)
                                )
                                (tee_local $13
                                 (i32.load16_s offset=4
                                  (get_local $4)
                                 )
                                )
                               )
                               (i32.shr_s
                                (i32.mul
                                 (i32.and
                                  (get_local $7)
                                  (i32.const 65535)
                                 )
                                 (get_local $13)
                                )
                                (i32.const 16)
                               )
                              )
                             )
                             (i32.add
                              (i32.mul
                               (i32.shr_s
                                (tee_local $7
                                 (i32.load offset=12
                                  (get_local $3)
                                 )
                                )
                                (i32.const 16)
                               )
                               (tee_local $13
                                (i32.load16_s offset=6
                                 (get_local $4)
                                )
                               )
                              )
                              (i32.shr_s
                               (i32.mul
                                (i32.and
                                 (get_local $7)
                                 (i32.const 65535)
                                )
                                (get_local $13)
                               )
                               (i32.const 16)
                              )
                             )
                            )
                            (i32.add
                             (i32.mul
                              (i32.shr_s
                               (tee_local $7
                                (i32.load offset=16
                                 (get_local $3)
                                )
                               )
                               (i32.const 16)
                              )
                              (tee_local $13
                               (i32.load16_s offset=8
                                (get_local $4)
                               )
                              )
                             )
                             (i32.shr_s
                              (i32.mul
                               (i32.and
                                (get_local $7)
                                (i32.const 65535)
                               )
                               (get_local $13)
                              )
                              (i32.const 16)
                             )
                            )
                           )
                           (i32.add
                            (i32.mul
                             (i32.shr_s
                              (tee_local $7
                               (i32.load offset=20
                                (get_local $3)
                               )
                              )
                              (i32.const 16)
                             )
                             (tee_local $13
                              (i32.load16_s offset=10
                               (get_local $4)
                              )
                             )
                            )
                            (i32.shr_s
                             (i32.mul
                              (i32.and
                               (get_local $7)
                               (i32.const 65535)
                              )
                              (get_local $13)
                             )
                             (i32.const 16)
                            )
                           )
                          )
                          (i32.add
                           (i32.mul
                            (i32.shr_s
                             (tee_local $7
                              (i32.load offset=24
                               (get_local $3)
                              )
                             )
                             (i32.const 16)
                            )
                            (tee_local $13
                             (i32.load16_s offset=12
                              (get_local $4)
                             )
                            )
                           )
                           (i32.shr_s
                            (i32.mul
                             (i32.and
                              (get_local $7)
                              (i32.const 65535)
                             )
                             (get_local $13)
                            )
                            (i32.const 16)
                           )
                          )
                         )
                         (i32.add
                          (i32.mul
                           (i32.shr_s
                            (tee_local $7
                             (i32.load offset=28
                              (get_local $3)
                             )
                            )
                            (i32.const 16)
                           )
                           (tee_local $13
                            (i32.load16_s offset=14
                             (get_local $4)
                            )
                           )
                          )
                          (i32.shr_s
                           (i32.mul
                            (i32.and
                             (get_local $7)
                             (i32.const 65535)
                            )
                            (get_local $13)
                           )
                           (i32.const 16)
                          )
                         )
                        )
                        (i32.add
                         (i32.mul
                          (i32.shr_s
                           (tee_local $7
                            (i32.load offset=32
                             (get_local $3)
                            )
                           )
                           (i32.const 16)
                          )
                          (tee_local $4
                           (i32.load16_s offset=16
                            (get_local $4)
                           )
                          )
                         )
                         (i32.shr_s
                          (i32.mul
                           (i32.and
                            (get_local $7)
                            (i32.const 65535)
                           )
                           (get_local $4)
                          )
                          (i32.const 16)
                         )
                        )
                       )
                       (i32.add
                        (i32.mul
                         (i32.shr_s
                          (tee_local $7
                           (i32.load offset=68
                            (get_local $3)
                           )
                          )
                          (i32.const 16)
                         )
                         (tee_local $12
                          (i32.load16_s
                           (tee_local $4
                            (i32.add
                             (get_local $2)
                             (i32.shl
                              (i32.mul
                               (i32.sub
                                (get_local $16)
                                (get_local $12)
                               )
                               (i32.const 9)
                              )
                              (i32.const 1)
                             )
                            )
                           )
                          )
                         )
                        )
                        (i32.shr_s
                         (i32.mul
                          (i32.and
                           (get_local $7)
                           (i32.const 65535)
                          )
                          (get_local $12)
                         )
                         (i32.const 16)
                        )
                       )
                      )
                      (i32.add
                       (i32.mul
                        (i32.shr_s
                         (tee_local $7
                          (i32.load
                           (i32.sub
                            (get_local $3)
                            (i32.const -64)
                           )
                          )
                         )
                         (i32.const 16)
                        )
                        (tee_local $12
                         (i32.load16_s offset=2
                          (get_local $4)
                         )
                        )
                       )
                       (i32.shr_s
                        (i32.mul
                         (i32.and
                          (get_local $7)
                          (i32.const 65535)
                         )
                         (get_local $12)
                        )
                        (i32.const 16)
                       )
                      )
                     )
                     (i32.add
                      (i32.mul
                       (i32.shr_s
                        (tee_local $7
                         (i32.load offset=60
                          (get_local $3)
                         )
                        )
                        (i32.const 16)
                       )
                       (tee_local $12
                        (i32.load16_s offset=4
                         (get_local $4)
                        )
                       )
                      )
                      (i32.shr_s
                       (i32.mul
                        (i32.and
                         (get_local $7)
                         (i32.const 65535)
                        )
                        (get_local $12)
                       )
                       (i32.const 16)
                      )
                     )
                    )
                    (i32.add
                     (i32.mul
                      (i32.shr_s
                       (tee_local $7
                        (i32.load offset=56
                         (get_local $3)
                        )
                       )
                       (i32.const 16)
                      )
                      (tee_local $12
                       (i32.load16_s offset=6
                        (get_local $4)
                       )
                      )
                     )
                     (i32.shr_s
                      (i32.mul
                       (i32.and
                        (get_local $7)
                        (i32.const 65535)
                       )
                       (get_local $12)
                      )
                      (i32.const 16)
                     )
                    )
                   )
                   (i32.add
                    (i32.mul
                     (i32.shr_s
                      (tee_local $7
                       (i32.load offset=52
                        (get_local $3)
                       )
                      )
                      (i32.const 16)
                     )
                     (tee_local $12
                      (i32.load16_s offset=8
                       (get_local $4)
                      )
                     )
                    )
                    (i32.shr_s
                     (i32.mul
                      (i32.and
                       (get_local $7)
                       (i32.const 65535)
                      )
                      (get_local $12)
                     )
                     (i32.const 16)
                    )
                   )
                  )
                  (i32.add
                   (i32.mul
                    (i32.shr_s
                     (tee_local $7
                      (i32.load offset=48
                       (get_local $3)
                      )
                     )
                     (i32.const 16)
                    )
                    (tee_local $12
                     (i32.load16_s offset=10
                      (get_local $4)
                     )
                    )
                   )
                   (i32.shr_s
                    (i32.mul
                     (i32.and
                      (get_local $7)
                      (i32.const 65535)
                     )
                     (get_local $12)
                    )
                    (i32.const 16)
                   )
                  )
                 )
                 (i32.add
                  (i32.mul
                   (i32.shr_s
                    (tee_local $7
                     (i32.load offset=44
                      (get_local $3)
                     )
                    )
                    (i32.const 16)
                   )
                   (tee_local $12
                    (i32.load16_s offset=12
                     (get_local $4)
                    )
                   )
                  )
                  (i32.shr_s
                   (i32.mul
                    (i32.and
                     (get_local $7)
                     (i32.const 65535)
                    )
                    (get_local $12)
                   )
                   (i32.const 16)
                  )
                 )
                )
                (i32.add
                 (i32.mul
                  (i32.shr_s
                   (tee_local $7
                    (i32.load offset=40
                     (get_local $3)
                    )
                   )
                   (i32.const 16)
                  )
                  (tee_local $12
                   (i32.load16_s offset=14
                    (get_local $4)
                   )
                  )
                 )
                 (i32.shr_s
                  (i32.mul
                   (i32.and
                    (get_local $7)
                    (i32.const 65535)
                   )
                   (get_local $12)
                  )
                  (i32.const 16)
                 )
                )
               )
               (i32.add
                (i32.mul
                 (i32.shr_s
                  (tee_local $3
                   (i32.load offset=36
                    (get_local $3)
                   )
                  )
                  (i32.const 16)
                 )
                 (tee_local $4
                  (i32.load16_s offset=16
                   (get_local $4)
                  )
                 )
                )
                (i32.shr_s
                 (i32.mul
                  (i32.and
                   (get_local $3)
                   (i32.const 65535)
                  )
                  (get_local $4)
                 )
                 (i32.const 16)
                )
               )
              )
             )
             (i32.const 2097119)
            )
            (i32.const 32767)
            (if (result i32)
             (i32.lt_s
              (get_local $3)
              (i32.const -2097184)
             )
             (i32.const -32768)
             (i32.shr_s
              (i32.add
               (i32.shr_s
                (get_local $3)
                (i32.const 5)
               )
               (i32.const 1)
              )
              (i32.const 1)
             )
            )
           )
          )
         )
         (set_local $0
          (i32.add
           (get_local $0)
           (i32.const 2)
          )
         )
         (set_local $14
          (i32.add
           (get_local $14)
           (get_local $6)
          )
         )
         (br $while-in)
        )
       )
      )
      (return
       (get_local $0)
      )
     )
     (set_local $14
      (i32.add
       (get_local $2)
       (i32.const 2)
      )
     )
     (set_local $15
      (i32.add
       (get_local $2)
       (i32.const 4)
      )
     )
     (set_local $16
      (i32.add
       (get_local $2)
       (i32.const 6)
      )
     )
     (set_local $7
      (i32.add
       (get_local $2)
       (i32.const 8)
      )
     )
     (set_local $12
      (i32.add
       (get_local $2)
       (i32.const 10)
      )
     )
     (set_local $13
      (i32.add
       (get_local $2)
       (i32.const 12)
      )
     )
     (set_local $17
      (i32.add
       (get_local $2)
       (i32.const 14)
      )
     )
     (set_local $18
      (i32.add
       (get_local $2)
       (i32.const 16)
      )
     )
     (set_local $19
      (i32.add
       (get_local $2)
       (i32.const 18)
      )
     )
     (set_local $20
      (i32.add
       (get_local $2)
       (i32.const 20)
      )
     )
     (set_local $21
      (i32.add
       (get_local $2)
       (i32.const 22)
      )
     )
     (set_local $4
      (i32.const 0)
     )
     (loop $while-in1
      (if
       (i32.lt_s
        (get_local $4)
        (get_local $5)
       )
       (block
        (i32.store16
         (get_local $0)
         (tee_local $3
          (if (result i32)
           (i32.gt_s
            (tee_local $3
             (i32.add
              (i32.add
               (i32.add
                (i32.add
                 (i32.add
                  (i32.add
                   (i32.add
                    (i32.add
                     (i32.add
                      (i32.add
                       (i32.add
                        (i32.add
                         (i32.mul
                          (i32.shr_s
                           (tee_local $10
                            (i32.add
                             (i32.load
                              (tee_local $3
                               (i32.add
                                (get_local $1)
                                (i32.shl
                                 (i32.shr_s
                                  (get_local $4)
                                  (i32.const 16)
                                 )
                                 (i32.const 2)
                                )
                               )
                              )
                             )
                             (i32.load offset=92
                              (get_local $3)
                             )
                            )
                           )
                           (i32.const 16)
                          )
                          (tee_local $11
                           (i32.load16_s
                            (get_local $2)
                           )
                          )
                         )
                         (i32.shr_s
                          (i32.mul
                           (i32.and
                            (get_local $10)
                            (i32.const 65535)
                           )
                           (get_local $11)
                          )
                          (i32.const 16)
                         )
                        )
                        (i32.add
                         (i32.mul
                          (i32.shr_s
                           (tee_local $10
                            (i32.add
                             (i32.load offset=4
                              (get_local $3)
                             )
                             (i32.load offset=88
                              (get_local $3)
                             )
                            )
                           )
                           (i32.const 16)
                          )
                          (tee_local $11
                           (i32.load16_s
                            (get_local $14)
                           )
                          )
                         )
                         (i32.shr_s
                          (i32.mul
                           (i32.and
                            (get_local $10)
                            (i32.const 65535)
                           )
                           (get_local $11)
                          )
                          (i32.const 16)
                         )
                        )
                       )
                       (i32.add
                        (i32.mul
                         (i32.shr_s
                          (tee_local $10
                           (i32.add
                            (i32.load offset=8
                             (get_local $3)
                            )
                            (i32.load offset=84
                             (get_local $3)
                            )
                           )
                          )
                          (i32.const 16)
                         )
                         (tee_local $11
                          (i32.load16_s
                           (get_local $15)
                          )
                         )
                        )
                        (i32.shr_s
                         (i32.mul
                          (i32.and
                           (get_local $10)
                           (i32.const 65535)
                          )
                          (get_local $11)
                         )
                         (i32.const 16)
                        )
                       )
                      )
                      (i32.add
                       (i32.mul
                        (i32.shr_s
                         (tee_local $10
                          (i32.add
                           (i32.load offset=12
                            (get_local $3)
                           )
                           (i32.load offset=80
                            (get_local $3)
                           )
                          )
                         )
                         (i32.const 16)
                        )
                        (tee_local $11
                         (i32.load16_s
                          (get_local $16)
                         )
                        )
                       )
                       (i32.shr_s
                        (i32.mul
                         (i32.and
                          (get_local $10)
                          (i32.const 65535)
                         )
                         (get_local $11)
                        )
                        (i32.const 16)
                       )
                      )
                     )
                     (i32.add
                      (i32.mul
                       (i32.shr_s
                        (tee_local $10
                         (i32.add
                          (i32.load offset=16
                           (get_local $3)
                          )
                          (i32.load offset=76
                           (get_local $3)
                          )
                         )
                        )
                        (i32.const 16)
                       )
                       (tee_local $11
                        (i32.load16_s
                         (get_local $7)
                        )
                       )
                      )
                      (i32.shr_s
                       (i32.mul
                        (i32.and
                         (get_local $10)
                         (i32.const 65535)
                        )
                        (get_local $11)
                       )
                       (i32.const 16)
                      )
                     )
                    )
                    (i32.add
                     (i32.mul
                      (i32.shr_s
                       (tee_local $10
                        (i32.add
                         (i32.load offset=20
                          (get_local $3)
                         )
                         (i32.load offset=72
                          (get_local $3)
                         )
                        )
                       )
                       (i32.const 16)
                      )
                      (tee_local $11
                       (i32.load16_s
                        (get_local $12)
                       )
                      )
                     )
                     (i32.shr_s
                      (i32.mul
                       (i32.and
                        (get_local $10)
                        (i32.const 65535)
                       )
                       (get_local $11)
                      )
                      (i32.const 16)
                     )
                    )
                   )
                   (i32.add
                    (i32.mul
                     (i32.shr_s
                      (tee_local $10
                       (i32.add
                        (i32.load offset=24
                         (get_local $3)
                        )
                        (i32.load offset=68
                         (get_local $3)
                        )
                       )
                      )
                      (i32.const 16)
                     )
                     (tee_local $11
                      (i32.load16_s
                       (get_local $13)
                      )
                     )
                    )
                    (i32.shr_s
                     (i32.mul
                      (i32.and
                       (get_local $10)
                       (i32.const 65535)
                      )
                      (get_local $11)
                     )
                     (i32.const 16)
                    )
                   )
                  )
                  (i32.add
                   (i32.mul
                    (i32.shr_s
                     (tee_local $10
                      (i32.add
                       (i32.load offset=28
                        (get_local $3)
                       )
                       (i32.load
                        (i32.sub
                         (get_local $3)
                         (i32.const -64)
                        )
                       )
                      )
                     )
                     (i32.const 16)
                    )
                    (tee_local $11
                     (i32.load16_s
                      (get_local $17)
                     )
                    )
                   )
                   (i32.shr_s
                    (i32.mul
                     (i32.and
                      (get_local $10)
                      (i32.const 65535)
                     )
                     (get_local $11)
                    )
                    (i32.const 16)
                   )
                  )
                 )
                 (i32.add
                  (i32.mul
                   (i32.shr_s
                    (tee_local $10
                     (i32.add
                      (i32.load offset=32
                       (get_local $3)
                      )
                      (i32.load offset=60
                       (get_local $3)
                      )
                     )
                    )
                    (i32.const 16)
                   )
                   (tee_local $11
                    (i32.load16_s
                     (get_local $18)
                    )
                   )
                  )
                  (i32.shr_s
                   (i32.mul
                    (i32.and
                     (get_local $10)
                     (i32.const 65535)
                    )
                    (get_local $11)
                   )
                   (i32.const 16)
                  )
                 )
                )
                (i32.add
                 (i32.mul
                  (i32.shr_s
                   (tee_local $10
                    (i32.add
                     (i32.load offset=36
                      (get_local $3)
                     )
                     (i32.load offset=56
                      (get_local $3)
                     )
                    )
                   )
                   (i32.const 16)
                  )
                  (tee_local $11
                   (i32.load16_s
                    (get_local $19)
                   )
                  )
                 )
                 (i32.shr_s
                  (i32.mul
                   (i32.and
                    (get_local $10)
                    (i32.const 65535)
                   )
                   (get_local $11)
                  )
                  (i32.const 16)
                 )
                )
               )
               (i32.add
                (i32.mul
                 (i32.shr_s
                  (tee_local $10
                   (i32.add
                    (i32.load offset=40
                     (get_local $3)
                    )
                    (i32.load offset=52
                     (get_local $3)
                    )
                   )
                  )
                  (i32.const 16)
                 )
                 (tee_local $11
                  (i32.load16_s
                   (get_local $20)
                  )
                 )
                )
                (i32.shr_s
                 (i32.mul
                  (i32.and
                   (get_local $10)
                   (i32.const 65535)
                  )
                  (get_local $11)
                 )
                 (i32.const 16)
                )
               )
              )
              (i32.add
               (i32.mul
                (i32.shr_s
                 (tee_local $3
                  (i32.add
                   (i32.load offset=44
                    (get_local $3)
                   )
                   (i32.load offset=48
                    (get_local $3)
                   )
                  )
                 )
                 (i32.const 16)
                )
                (tee_local $10
                 (i32.load16_s
                  (get_local $21)
                 )
                )
               )
               (i32.shr_s
                (i32.mul
                 (i32.and
                  (get_local $3)
                  (i32.const 65535)
                 )
                 (get_local $10)
                )
                (i32.const 16)
               )
              )
             )
            )
            (i32.const 2097119)
           )
           (i32.const 32767)
           (if (result i32)
            (i32.lt_s
             (get_local $3)
             (i32.const -2097184)
            )
            (i32.const -32768)
            (i32.shr_s
             (i32.add
              (i32.shr_s
               (get_local $3)
               (i32.const 5)
              )
              (i32.const 1)
             )
             (i32.const 1)
            )
           )
          )
         )
        )
        (set_local $0
         (i32.add
          (get_local $0)
          (i32.const 2)
         )
        )
        (set_local $4
         (i32.add
          (get_local $4)
          (get_local $6)
         )
        )
        (br $while-in1)
       )
      )
     )
     (return
      (get_local $0)
     )
    )
    (set_local $14
     (i32.add
      (get_local $2)
      (i32.const 2)
     )
    )
    (set_local $15
     (i32.add
      (get_local $2)
      (i32.const 4)
     )
    )
    (set_local $16
     (i32.add
      (get_local $2)
      (i32.const 6)
     )
    )
    (set_local $7
     (i32.add
      (get_local $2)
      (i32.const 8)
     )
    )
    (set_local $12
     (i32.add
      (get_local $2)
      (i32.const 10)
     )
    )
    (set_local $13
     (i32.add
      (get_local $2)
      (i32.const 12)
     )
    )
    (set_local $17
     (i32.add
      (get_local $2)
      (i32.const 14)
     )
    )
    (set_local $18
     (i32.add
      (get_local $2)
      (i32.const 16)
     )
    )
    (set_local $19
     (i32.add
      (get_local $2)
      (i32.const 18)
     )
    )
    (set_local $20
     (i32.add
      (get_local $2)
      (i32.const 20)
     )
    )
    (set_local $21
     (i32.add
      (get_local $2)
      (i32.const 22)
     )
    )
    (set_local $10
     (i32.add
      (get_local $2)
      (i32.const 24)
     )
    )
    (set_local $11
     (i32.add
      (get_local $2)
      (i32.const 26)
     )
    )
    (set_local $22
     (i32.add
      (get_local $2)
      (i32.const 28)
     )
    )
    (set_local $23
     (i32.add
      (get_local $2)
      (i32.const 30)
     )
    )
    (set_local $24
     (i32.add
      (get_local $2)
      (i32.const 32)
     )
    )
    (set_local $25
     (i32.add
      (get_local $2)
      (i32.const 34)
     )
    )
    (set_local $4
     (i32.const 0)
    )
    (loop $while-in4
     (if
      (i32.lt_s
       (get_local $4)
       (get_local $5)
      )
      (block
       (i32.store16
        (get_local $0)
        (tee_local $3
         (if (result i32)
          (i32.gt_s
           (tee_local $3
            (i32.add
             (i32.add
              (i32.add
               (i32.add
                (i32.add
                 (i32.add
                  (i32.add
                   (i32.add
                    (i32.add
                     (i32.add
                      (i32.add
                       (i32.add
                        (i32.add
                         (i32.add
                          (i32.add
                           (i32.add
                            (i32.add
                             (i32.add
                              (i32.mul
                               (i32.shr_s
                                (tee_local $8
                                 (i32.add
                                  (i32.load
                                   (tee_local $3
                                    (i32.add
                                     (get_local $1)
                                     (i32.shl
                                      (i32.shr_s
                                       (get_local $4)
                                       (i32.const 16)
                                      )
                                      (i32.const 2)
                                     )
                                    )
                                   )
                                  )
                                  (i32.load offset=140
                                   (get_local $3)
                                  )
                                 )
                                )
                                (i32.const 16)
                               )
                               (tee_local $9
                                (i32.load16_s
                                 (get_local $2)
                                )
                               )
                              )
                              (i32.shr_s
                               (i32.mul
                                (i32.and
                                 (get_local $8)
                                 (i32.const 65535)
                                )
                                (get_local $9)
                               )
                               (i32.const 16)
                              )
                             )
                             (i32.add
                              (i32.mul
                               (i32.shr_s
                                (tee_local $8
                                 (i32.add
                                  (i32.load offset=4
                                   (get_local $3)
                                  )
                                  (i32.load offset=136
                                   (get_local $3)
                                  )
                                 )
                                )
                                (i32.const 16)
                               )
                               (tee_local $9
                                (i32.load16_s
                                 (get_local $14)
                                )
                               )
                              )
                              (i32.shr_s
                               (i32.mul
                                (i32.and
                                 (get_local $8)
                                 (i32.const 65535)
                                )
                                (get_local $9)
                               )
                               (i32.const 16)
                              )
                             )
                            )
                            (i32.add
                             (i32.mul
                              (i32.shr_s
                               (tee_local $8
                                (i32.add
                                 (i32.load offset=8
                                  (get_local $3)
                                 )
                                 (i32.load offset=132
                                  (get_local $3)
                                 )
                                )
                               )
                               (i32.const 16)
                              )
                              (tee_local $9
                               (i32.load16_s
                                (get_local $15)
                               )
                              )
                             )
                             (i32.shr_s
                              (i32.mul
                               (i32.and
                                (get_local $8)
                                (i32.const 65535)
                               )
                               (get_local $9)
                              )
                              (i32.const 16)
                             )
                            )
                           )
                           (i32.add
                            (i32.mul
                             (i32.shr_s
                              (tee_local $8
                               (i32.add
                                (i32.load offset=12
                                 (get_local $3)
                                )
                                (i32.load offset=128
                                 (get_local $3)
                                )
                               )
                              )
                              (i32.const 16)
                             )
                             (tee_local $9
                              (i32.load16_s
                               (get_local $16)
                              )
                             )
                            )
                            (i32.shr_s
                             (i32.mul
                              (i32.and
                               (get_local $8)
                               (i32.const 65535)
                              )
                              (get_local $9)
                             )
                             (i32.const 16)
                            )
                           )
                          )
                          (i32.add
                           (i32.mul
                            (i32.shr_s
                             (tee_local $8
                              (i32.add
                               (i32.load offset=16
                                (get_local $3)
                               )
                               (i32.load offset=124
                                (get_local $3)
                               )
                              )
                             )
                             (i32.const 16)
                            )
                            (tee_local $9
                             (i32.load16_s
                              (get_local $7)
                             )
                            )
                           )
                           (i32.shr_s
                            (i32.mul
                             (i32.and
                              (get_local $8)
                              (i32.const 65535)
                             )
                             (get_local $9)
                            )
                            (i32.const 16)
                           )
                          )
                         )
                         (i32.add
                          (i32.mul
                           (i32.shr_s
                            (tee_local $8
                             (i32.add
                              (i32.load offset=20
                               (get_local $3)
                              )
                              (i32.load offset=120
                               (get_local $3)
                              )
                             )
                            )
                            (i32.const 16)
                           )
                           (tee_local $9
                            (i32.load16_s
                             (get_local $12)
                            )
                           )
                          )
                          (i32.shr_s
                           (i32.mul
                            (i32.and
                             (get_local $8)
                             (i32.const 65535)
                            )
                            (get_local $9)
                           )
                           (i32.const 16)
                          )
                         )
                        )
                        (i32.add
                         (i32.mul
                          (i32.shr_s
                           (tee_local $8
                            (i32.add
                             (i32.load offset=24
                              (get_local $3)
                             )
                             (i32.load offset=116
                              (get_local $3)
                             )
                            )
                           )
                           (i32.const 16)
                          )
                          (tee_local $9
                           (i32.load16_s
                            (get_local $13)
                           )
                          )
                         )
                         (i32.shr_s
                          (i32.mul
                           (i32.and
                            (get_local $8)
                            (i32.const 65535)
                           )
                           (get_local $9)
                          )
                          (i32.const 16)
                         )
                        )
                       )
                       (i32.add
                        (i32.mul
                         (i32.shr_s
                          (tee_local $8
                           (i32.add
                            (i32.load offset=28
                             (get_local $3)
                            )
                            (i32.load offset=112
                             (get_local $3)
                            )
                           )
                          )
                          (i32.const 16)
                         )
                         (tee_local $9
                          (i32.load16_s
                           (get_local $17)
                          )
                         )
                        )
                        (i32.shr_s
                         (i32.mul
                          (i32.and
                           (get_local $8)
                           (i32.const 65535)
                          )
                          (get_local $9)
                         )
                         (i32.const 16)
                        )
                       )
                      )
                      (i32.add
                       (i32.mul
                        (i32.shr_s
                         (tee_local $8
                          (i32.add
                           (i32.load offset=32
                            (get_local $3)
                           )
                           (i32.load offset=108
                            (get_local $3)
                           )
                          )
                         )
                         (i32.const 16)
                        )
                        (tee_local $9
                         (i32.load16_s
                          (get_local $18)
                         )
                        )
                       )
                       (i32.shr_s
                        (i32.mul
                         (i32.and
                          (get_local $8)
                          (i32.const 65535)
                         )
                         (get_local $9)
                        )
                        (i32.const 16)
                       )
                      )
                     )
                     (i32.add
                      (i32.mul
                       (i32.shr_s
                        (tee_local $8
                         (i32.add
                          (i32.load offset=36
                           (get_local $3)
                          )
                          (i32.load offset=104
                           (get_local $3)
                          )
                         )
                        )
                        (i32.const 16)
                       )
                       (tee_local $9
                        (i32.load16_s
                         (get_local $19)
                        )
                       )
                      )
                      (i32.shr_s
                       (i32.mul
                        (i32.and
                         (get_local $8)
                         (i32.const 65535)
                        )
                        (get_local $9)
                       )
                       (i32.const 16)
                      )
                     )
                    )
                    (i32.add
                     (i32.mul
                      (i32.shr_s
                       (tee_local $8
                        (i32.add
                         (i32.load offset=40
                          (get_local $3)
                         )
                         (i32.load offset=100
                          (get_local $3)
                         )
                        )
                       )
                       (i32.const 16)
                      )
                      (tee_local $9
                       (i32.load16_s
                        (get_local $20)
                       )
                      )
                     )
                     (i32.shr_s
                      (i32.mul
                       (i32.and
                        (get_local $8)
                        (i32.const 65535)
                       )
                       (get_local $9)
                      )
                      (i32.const 16)
                     )
                    )
                   )
                   (i32.add
                    (i32.mul
                     (i32.shr_s
                      (tee_local $8
                       (i32.add
                        (i32.load offset=44
                         (get_local $3)
                        )
                        (i32.load offset=96
                         (get_local $3)
                        )
                       )
                      )
                      (i32.const 16)
                     )
                     (tee_local $9
                      (i32.load16_s
                       (get_local $21)
                      )
                     )
                    )
                    (i32.shr_s
                     (i32.mul
                      (i32.and
                       (get_local $8)
                       (i32.const 65535)
                      )
                      (get_local $9)
                     )
                     (i32.const 16)
                    )
                   )
                  )
                  (i32.add
                   (i32.mul
                    (i32.shr_s
                     (tee_local $8
                      (i32.add
                       (i32.load offset=48
                        (get_local $3)
                       )
                       (i32.load offset=92
                        (get_local $3)
                       )
                      )
                     )
                     (i32.const 16)
                    )
                    (tee_local $9
                     (i32.load16_s
                      (get_local $10)
                     )
                    )
                   )
                   (i32.shr_s
                    (i32.mul
                     (i32.and
                      (get_local $8)
                      (i32.const 65535)
                     )
                     (get_local $9)
                    )
                    (i32.const 16)
                   )
                  )
                 )
                 (i32.add
                  (i32.mul
                   (i32.shr_s
                    (tee_local $8
                     (i32.add
                      (i32.load offset=52
                       (get_local $3)
                      )
                      (i32.load offset=88
                       (get_local $3)
                      )
                     )
                    )
                    (i32.const 16)
                   )
                   (tee_local $9
                    (i32.load16_s
                     (get_local $11)
                    )
                   )
                  )
                  (i32.shr_s
                   (i32.mul
                    (i32.and
                     (get_local $8)
                     (i32.const 65535)
                    )
                    (get_local $9)
                   )
                   (i32.const 16)
                  )
                 )
                )
                (i32.add
                 (i32.mul
                  (i32.shr_s
                   (tee_local $8
                    (i32.add
                     (i32.load offset=56
                      (get_local $3)
                     )
                     (i32.load offset=84
                      (get_local $3)
                     )
                    )
                   )
                   (i32.const 16)
                  )
                  (tee_local $9
                   (i32.load16_s
                    (get_local $22)
                   )
                  )
                 )
                 (i32.shr_s
                  (i32.mul
                   (i32.and
                    (get_local $8)
                    (i32.const 65535)
                   )
                   (get_local $9)
                  )
                  (i32.const 16)
                 )
                )
               )
               (i32.add
                (i32.mul
                 (i32.shr_s
                  (tee_local $8
                   (i32.add
                    (i32.load offset=60
                     (get_local $3)
                    )
                    (i32.load offset=80
                     (get_local $3)
                    )
                   )
                  )
                  (i32.const 16)
                 )
                 (tee_local $9
                  (i32.load16_s
                   (get_local $23)
                  )
                 )
                )
                (i32.shr_s
                 (i32.mul
                  (i32.and
                   (get_local $8)
                   (i32.const 65535)
                  )
                  (get_local $9)
                 )
                 (i32.const 16)
                )
               )
              )
              (i32.add
               (i32.mul
                (i32.shr_s
                 (tee_local $8
                  (i32.add
                   (i32.load
                    (i32.sub
                     (get_local $3)
                     (i32.const -64)
                    )
                   )
                   (i32.load offset=76
                    (get_local $3)
                   )
                  )
                 )
                 (i32.const 16)
                )
                (tee_local $9
                 (i32.load16_s
                  (get_local $24)
                 )
                )
               )
               (i32.shr_s
                (i32.mul
                 (i32.and
                  (get_local $8)
                  (i32.const 65535)
                 )
                 (get_local $9)
                )
                (i32.const 16)
               )
              )
             )
             (i32.add
              (i32.mul
               (i32.shr_s
                (tee_local $3
                 (i32.add
                  (i32.load offset=68
                   (get_local $3)
                  )
                  (i32.load offset=72
                   (get_local $3)
                  )
                 )
                )
                (i32.const 16)
               )
               (tee_local $8
                (i32.load16_s
                 (get_local $25)
                )
               )
              )
              (i32.shr_s
               (i32.mul
                (i32.and
                 (get_local $3)
                 (i32.const 65535)
                )
                (get_local $8)
               )
               (i32.const 16)
              )
             )
            )
           )
           (i32.const 2097119)
          )
          (i32.const 32767)
          (if (result i32)
           (i32.lt_s
            (get_local $3)
            (i32.const -2097184)
           )
           (i32.const -32768)
           (i32.shr_s
            (i32.add
             (i32.shr_s
              (get_local $3)
              (i32.const 5)
             )
             (i32.const 1)
            )
            (i32.const 1)
           )
          )
         )
        )
       )
       (set_local $0
        (i32.add
         (get_local $0)
         (i32.const 2)
        )
       )
       (set_local $4
        (i32.add
         (get_local $4)
         (get_local $6)
        )
       )
       (br $while-in4)
      )
     )
    )
    (return
     (get_local $0)
    )
   )
   (call $_celt_fatal
    (i32.const 49348)
    (i32.const 47301)
    (i32.const 139)
   )
  )
  (i32.const 0)
 )
 (func $_silk_resampler_private_IIR_FIR (; 293 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (set_local $7
   (get_global $STACKTOP)
  )
  (set_local $5
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (tee_local $4
        (i32.load
         (tee_local $8
          (i32.add
           (get_local $0)
           (i32.const 268)
          )
         )
        )
       )
       (i32.const 2)
      )
      (i32.const 31)
     )
     (i32.const -16)
    )
   )
  )
  (i64.store align=4
   (get_local $5)
   (i64.load align=4
    (tee_local $6
     (i32.add
      (get_local $0)
      (i32.const 24)
     )
    )
   )
  )
  (i64.store offset=8 align=4
   (get_local $5)
   (i64.load offset=8 align=4
    (get_local $6)
   )
  )
  (set_local $9
   (i32.load offset=272
    (get_local $0)
   )
  )
  (set_local $10
   (i32.add
    (get_local $5)
    (i32.const 16)
   )
  )
  (loop $while-in
   (call $_silk_resampler_private_up2_HQ
    (get_local $0)
    (get_local $10)
    (get_local $2)
    (if (result i32)
     (i32.lt_s
      (get_local $3)
      (get_local $4)
     )
     (tee_local $4
      (get_local $3)
     )
     (get_local $4)
    )
   )
   (set_local $1
    (call $_silk_resampler_private_IIR_FIR_INTERPOL
     (get_local $1)
     (get_local $5)
     (i32.shl
      (get_local $4)
      (i32.const 17)
     )
     (get_local $9)
    )
   )
   (if
    (i32.gt_s
     (tee_local $3
      (i32.sub
       (get_local $3)
       (get_local $4)
      )
     )
     (i32.const 0)
    )
    (block
     (i64.store align=4
      (get_local $5)
      (i64.load align=4
       (tee_local $11
        (i32.add
         (get_local $5)
         (i32.shl
          (get_local $4)
          (i32.const 2)
         )
        )
       )
      )
     )
     (i64.store offset=8 align=4
      (get_local $5)
      (i64.load offset=8 align=4
       (get_local $11)
      )
     )
     (set_local $2
      (i32.add
       (get_local $2)
       (i32.shl
        (get_local $4)
        (i32.const 1)
       )
      )
     )
     (set_local $4
      (i32.load
       (get_local $8)
      )
     )
     (br $while-in)
    )
   )
  )
  (i64.store align=2
   (get_local $6)
   (i64.load align=2
    (tee_local $0
     (i32.add
      (get_local $5)
      (i32.shl
       (get_local $4)
       (i32.const 2)
      )
     )
    )
   )
  )
  (i64.store offset=8 align=2
   (get_local $6)
   (i64.load offset=8 align=2
    (get_local $0)
   )
  )
  (set_global $STACKTOP
   (get_local $7)
  )
 )
 (func $_silk_resampler_private_IIR_FIR_INTERPOL (; 294 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $5)
     (get_local $2)
    )
    (block
     (set_local $7
      (i32.sub
       (i32.const 11)
       (tee_local $6
        (i32.shr_u
         (i32.mul
          (i32.and
           (get_local $5)
           (i32.const 65535)
          )
          (i32.const 12)
         )
         (i32.const 16)
        )
       )
      )
     )
     (i32.store16
      (get_local $0)
      (tee_local $4
       (if (result i32)
        (i32.gt_s
         (tee_local $4
          (i32.add
           (i32.add
            (i32.add
             (i32.add
              (i32.add
               (i32.add
                (i32.add
                 (i32.mul
                  (i32.load16_s
                   (tee_local $4
                    (i32.add
                     (get_local $1)
                     (i32.shl
                      (i32.shr_s
                       (get_local $5)
                       (i32.const 16)
                      )
                      (i32.const 1)
                     )
                    )
                   )
                  )
                  (i32.load16_s
                   (i32.add
                    (i32.shl
                     (get_local $6)
                     (i32.const 3)
                    )
                    (i32.const 28592)
                   )
                  )
                 )
                 (i32.mul
                  (i32.load16_s offset=2
                   (get_local $4)
                  )
                  (i32.load16_s
                   (i32.add
                    (i32.shl
                     (get_local $6)
                     (i32.const 3)
                    )
                    (i32.const 28594)
                   )
                  )
                 )
                )
                (i32.mul
                 (i32.load16_s offset=4
                  (get_local $4)
                 )
                 (i32.load16_s
                  (i32.add
                   (i32.shl
                    (get_local $6)
                    (i32.const 3)
                   )
                   (i32.const 28596)
                  )
                 )
                )
               )
               (i32.mul
                (i32.load16_s offset=6
                 (get_local $4)
                )
                (i32.load16_s
                 (i32.add
                  (i32.shl
                   (get_local $6)
                   (i32.const 3)
                  )
                  (i32.const 28598)
                 )
                )
               )
              )
              (i32.mul
               (i32.load16_s offset=8
                (get_local $4)
               )
               (i32.load16_s
                (i32.add
                 (i32.shl
                  (get_local $7)
                  (i32.const 3)
                 )
                 (i32.const 28598)
                )
               )
              )
             )
             (i32.mul
              (i32.load16_s offset=10
               (get_local $4)
              )
              (i32.load16_s
               (i32.add
                (i32.shl
                 (get_local $7)
                 (i32.const 3)
                )
                (i32.const 28596)
               )
              )
             )
            )
            (i32.mul
             (i32.load16_s offset=12
              (get_local $4)
             )
             (i32.load16_s
              (i32.add
               (i32.shl
                (get_local $7)
                (i32.const 3)
               )
               (i32.const 28594)
              )
             )
            )
           )
           (i32.mul
            (i32.load16_s offset=14
             (get_local $4)
            )
            (i32.load16_s
             (i32.add
              (i32.shl
               (get_local $7)
               (i32.const 3)
              )
              (i32.const 28592)
             )
            )
           )
          )
         )
         (i32.const 1073725439)
        )
        (i32.const 32767)
        (if (result i32)
         (i32.lt_s
          (get_local $4)
          (i32.const -1073758208)
         )
         (i32.const -32768)
         (i32.shr_s
          (i32.add
           (i32.shr_s
            (get_local $4)
            (i32.const 14)
           )
           (i32.const 1)
          )
          (i32.const 1)
         )
        )
       )
      )
     )
     (set_local $0
      (i32.add
       (get_local $0)
       (i32.const 2)
      )
     )
     (set_local $5
      (i32.add
       (get_local $5)
       (get_local $3)
      )
     )
     (br $while-in)
    )
   )
  )
  (get_local $0)
 )
 (func $_silk_resampler_private_up2_HQ (; 295 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (set_local $9
   (i32.add
    (get_local $0)
    (i32.const 4)
   )
  )
  (set_local $10
   (i32.add
    (get_local $0)
    (i32.const 8)
   )
  )
  (set_local $11
   (i32.add
    (get_local $0)
    (i32.const 12)
   )
  )
  (set_local $12
   (i32.add
    (get_local $0)
    (i32.const 16)
   )
  )
  (set_local $13
   (i32.add
    (get_local $0)
    (i32.const 20)
   )
  )
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $8)
     (get_local $3)
    )
    (block
     (set_local $4
      (i32.add
       (i32.mul
        (i32.shr_s
         (tee_local $4
          (i32.sub
           (tee_local $5
            (i32.shl
             (i32.load16_s
              (i32.add
               (get_local $2)
               (i32.shl
                (get_local $8)
                (i32.const 1)
               )
              )
             )
             (i32.const 10)
            )
           )
           (tee_local $6
            (i32.load
             (get_local $0)
            )
           )
          )
         )
         (i32.const 16)
        )
        (i32.const 1746)
       )
       (i32.shr_u
        (i32.mul
         (i32.and
          (get_local $4)
          (i32.const 65535)
         )
         (i32.const 1746)
        )
        (i32.const 16)
       )
      )
     )
     (i32.store
      (get_local $0)
      (i32.add
       (get_local $5)
       (get_local $4)
      )
     )
     (set_local $4
      (i32.add
       (i32.mul
        (i32.shr_s
         (tee_local $4
          (i32.sub
           (tee_local $6
            (i32.add
             (get_local $6)
             (get_local $4)
            )
           )
           (tee_local $7
            (i32.load
             (get_local $9)
            )
           )
          )
         )
         (i32.const 16)
        )
        (i32.const 14986)
       )
       (i32.shr_u
        (i32.mul
         (i32.and
          (get_local $4)
          (i32.const 65535)
         )
         (i32.const 14986)
        )
        (i32.const 16)
       )
      )
     )
     (i32.store
      (get_local $9)
      (i32.add
       (get_local $6)
       (get_local $4)
      )
     )
     (set_local $7
      (i32.add
       (i32.mul
        (i32.shr_s
         (tee_local $6
          (i32.sub
           (tee_local $4
            (i32.add
             (get_local $7)
             (get_local $4)
            )
           )
           (i32.load
            (get_local $10)
           )
          )
         )
         (i32.const 16)
        )
        (i32.const -26453)
       )
       (i32.shr_s
        (i32.mul
         (i32.and
          (get_local $6)
          (i32.const 65535)
         )
         (i32.const -26453)
        )
        (i32.const 16)
       )
      )
     )
     (i32.store
      (get_local $10)
      (i32.add
       (get_local $4)
       (i32.add
        (get_local $6)
        (get_local $7)
       )
      )
     )
     (set_local $4
      (if (result i32)
       (i32.gt_s
        (tee_local $4
         (i32.add
          (get_local $4)
          (get_local $7)
         )
        )
        (i32.const 33553919)
       )
       (i32.const 32767)
       (if (result i32)
        (i32.lt_s
         (get_local $4)
         (i32.const -33554944)
        )
        (i32.const -32768)
        (i32.shr_s
         (i32.add
          (i32.shr_s
           (get_local $4)
           (i32.const 9)
          )
          (i32.const 1)
         )
         (i32.const 1)
        )
       )
      )
     )
     (i32.store16
      (i32.add
       (get_local $1)
       (i32.shl
        (tee_local $7
         (i32.shl
          (get_local $8)
          (i32.const 1)
         )
        )
        (i32.const 1)
       )
      )
      (get_local $4)
     )
     (i32.store
      (get_local $11)
      (i32.add
       (get_local $5)
       (tee_local $4
        (i32.add
         (i32.mul
          (i32.shr_s
           (tee_local $4
            (i32.sub
             (get_local $5)
             (tee_local $5
              (i32.load
               (get_local $11)
              )
             )
            )
           )
           (i32.const 16)
          )
          (i32.const 6854)
         )
         (i32.shr_u
          (i32.mul
           (i32.and
            (get_local $4)
            (i32.const 65535)
           )
           (i32.const 6854)
          )
          (i32.const 16)
         )
        )
       )
      )
     )
     (set_local $5
      (i32.add
       (i32.mul
        (i32.shr_s
         (tee_local $5
          (i32.sub
           (tee_local $4
            (i32.add
             (get_local $5)
             (get_local $4)
            )
           )
           (tee_local $6
            (i32.load
             (get_local $12)
            )
           )
          )
         )
         (i32.const 16)
        )
        (i32.const 25769)
       )
       (i32.shr_u
        (i32.mul
         (i32.and
          (get_local $5)
          (i32.const 65535)
         )
         (i32.const 25769)
        )
        (i32.const 16)
       )
      )
     )
     (i32.store
      (get_local $12)
      (i32.add
       (get_local $4)
       (get_local $5)
      )
     )
     (set_local $6
      (i32.add
       (i32.mul
        (i32.shr_s
         (tee_local $4
          (i32.sub
           (tee_local $5
            (i32.add
             (get_local $6)
             (get_local $5)
            )
           )
           (i32.load
            (get_local $13)
           )
          )
         )
         (i32.const 16)
        )
        (i32.const -9994)
       )
       (i32.shr_s
        (i32.mul
         (i32.and
          (get_local $4)
          (i32.const 65535)
         )
         (i32.const -9994)
        )
        (i32.const 16)
       )
      )
     )
     (i32.store
      (get_local $13)
      (i32.add
       (get_local $5)
       (i32.add
        (get_local $4)
        (get_local $6)
       )
      )
     )
     (i32.store16
      (i32.add
       (get_local $1)
       (i32.shl
        (i32.or
         (get_local $7)
         (i32.const 1)
        )
        (i32.const 1)
       )
      )
      (tee_local $5
       (if (result i32)
        (i32.gt_s
         (tee_local $5
          (i32.add
           (get_local $5)
           (get_local $6)
          )
         )
         (i32.const 33553919)
        )
        (i32.const 32767)
        (if (result i32)
         (i32.lt_s
          (get_local $5)
          (i32.const -33554944)
         )
         (i32.const -32768)
         (i32.shr_s
          (i32.add
           (i32.shr_s
            (get_local $5)
            (i32.const 9)
           )
           (i32.const 1)
          )
          (i32.const 1)
         )
        )
       )
      )
     )
     (set_local $8
      (i32.add
       (get_local $8)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
 )
 (func $_silk_resampler_private_up2_HQ_wrapper (; 296 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (call $_silk_resampler_private_up2_HQ
   (get_local $0)
   (get_local $1)
   (get_local $2)
   (get_local $3)
  )
 )
 (func $_silk_sigm_Q15 (; 297 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (if (result i32)
   (i32.lt_s
    (get_local $0)
    (i32.const 0)
   )
   (block (result i32)
    (if
     (i32.lt_s
      (get_local $0)
      (i32.const -191)
     )
     (return
      (i32.const 0)
     )
    )
    (i32.sub
     (i32.load
      (i32.add
       (i32.shl
        (tee_local $1
         (i32.shr_s
          (tee_local $0
           (i32.sub
            (i32.const 0)
            (get_local $0)
           )
          )
          (i32.const 5)
         )
        )
        (i32.const 2)
       )
       (i32.const 28688)
      )
     )
     (i32.mul
      (i32.shr_s
       (i32.shl
        (i32.load
         (i32.add
          (i32.shl
           (get_local $1)
           (i32.const 2)
          )
          (i32.const 28720)
         )
        )
        (i32.const 16)
       )
       (i32.const 16)
      )
      (i32.and
       (get_local $0)
       (i32.const 31)
      )
     )
    )
   )
   (block (result i32)
    (if
     (i32.gt_s
      (get_local $0)
      (i32.const 191)
     )
     (return
      (i32.const 32767)
     )
    )
    (i32.add
     (i32.load
      (i32.add
       (i32.shl
        (tee_local $1
         (i32.shr_s
          (get_local $0)
          (i32.const 5)
         )
        )
        (i32.const 2)
       )
       (i32.const 28752)
      )
     )
     (i32.mul
      (i32.shr_s
       (i32.shl
        (i32.load
         (i32.add
          (i32.shl
           (get_local $1)
           (i32.const 2)
          )
          (i32.const 28720)
         )
        )
        (i32.const 16)
       )
       (i32.const 16)
      )
      (i32.and
       (get_local $0)
       (i32.const 31)
      )
     )
    )
   )
  )
 )
 (func $_silk_insertion_sort_increasing (; 298 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (if
   (i32.le_s
    (get_local $3)
    (i32.const 0)
   )
   (call $_celt_fatal
    (i32.const 49099)
    (i32.const 47335)
    (i32.const 51)
   )
  )
  (if
   (i32.le_s
    (get_local $2)
    (i32.const 0)
   )
   (call $_celt_fatal
    (i32.const 49145)
    (i32.const 47335)
    (i32.const 52)
   )
  )
  (if
   (i32.lt_s
    (get_local $2)
    (get_local $3)
   )
   (call $_celt_fatal
    (i32.const 49169)
    (i32.const 47335)
    (i32.const 53)
   )
  )
  (loop $while-in
   (if
    (i32.ne
     (get_local $4)
     (get_local $3)
    )
    (block
     (i32.store
      (i32.add
       (get_local $1)
       (i32.shl
        (get_local $4)
        (i32.const 2)
       )
      )
      (get_local $4)
     )
     (set_local $4
      (i32.add
       (get_local $4)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (set_local $6
   (i32.const 1)
  )
  (loop $while-in1
   (if
    (i32.ne
     (get_local $6)
     (get_local $3)
    )
    (block
     (set_local $7
      (i32.load
       (i32.add
        (get_local $0)
        (i32.shl
         (get_local $6)
         (i32.const 2)
        )
       )
      )
     )
     (set_local $4
      (get_local $6)
     )
     (loop $while-in3
      (block $while-out2
       (br_if $while-out2
        (i32.le_s
         (get_local $4)
         (i32.const 0)
        )
       )
       (br_if $while-out2
        (i32.ge_s
         (get_local $7)
         (tee_local $8
          (i32.load
           (i32.add
            (get_local $0)
            (i32.shl
             (tee_local $5
              (i32.add
               (get_local $4)
               (i32.const -1)
              )
             )
             (i32.const 2)
            )
           )
          )
         )
        )
       )
       (i32.store
        (i32.add
         (get_local $0)
         (i32.shl
          (get_local $4)
          (i32.const 2)
         )
        )
        (get_local $8)
       )
       (i32.store
        (i32.add
         (get_local $1)
         (i32.shl
          (get_local $4)
          (i32.const 2)
         )
        )
        (i32.load
         (i32.add
          (get_local $1)
          (i32.shl
           (get_local $5)
           (i32.const 2)
          )
         )
        )
       )
       (set_local $4
        (get_local $5)
       )
       (br $while-in3)
      )
     )
     (i32.store
      (i32.add
       (get_local $0)
       (i32.shl
        (get_local $4)
        (i32.const 2)
       )
      )
      (get_local $7)
     )
     (i32.store
      (i32.add
       (get_local $1)
       (i32.shl
        (get_local $4)
        (i32.const 2)
       )
      )
      (get_local $6)
     )
     (set_local $6
      (i32.add
       (get_local $6)
       (i32.const 1)
      )
     )
     (br $while-in1)
    )
   )
  )
  (set_local $7
   (i32.add
    (get_local $0)
    (i32.shl
     (i32.add
      (get_local $3)
      (i32.const -1)
     )
     (i32.const 2)
    )
   )
  )
  (set_local $4
   (i32.add
    (get_local $3)
    (i32.const -2)
   )
  )
  (loop $while-in5
   (if
    (i32.lt_s
     (get_local $3)
     (get_local $2)
    )
    (block
     (if
      (i32.lt_s
       (tee_local $9
        (i32.load
         (i32.add
          (get_local $0)
          (i32.shl
           (get_local $3)
           (i32.const 2)
          )
         )
        )
       )
       (i32.load
        (get_local $7)
       )
      )
      (block
       (set_local $5
        (get_local $4)
       )
       (loop $while-in7
        (block $while-out6
         (br_if $while-out6
          (i32.le_s
           (get_local $5)
           (i32.const -1)
          )
         )
         (br_if $while-out6
          (i32.ge_s
           (get_local $9)
           (tee_local $8
            (i32.load
             (i32.add
              (get_local $0)
              (i32.shl
               (get_local $5)
               (i32.const 2)
              )
             )
            )
           )
          )
         )
         (i32.store
          (i32.add
           (get_local $0)
           (i32.shl
            (tee_local $6
             (i32.add
              (get_local $5)
              (i32.const 1)
             )
            )
            (i32.const 2)
           )
          )
          (get_local $8)
         )
         (i32.store
          (i32.add
           (get_local $1)
           (i32.shl
            (get_local $6)
            (i32.const 2)
           )
          )
          (i32.load
           (i32.add
            (get_local $1)
            (i32.shl
             (get_local $5)
             (i32.const 2)
            )
           )
          )
         )
         (set_local $5
          (i32.add
           (get_local $5)
           (i32.const -1)
          )
         )
         (br $while-in7)
        )
       )
       (i32.store
        (i32.add
         (get_local $0)
         (i32.shl
          (tee_local $5
           (i32.add
            (get_local $5)
            (i32.const 1)
           )
          )
          (i32.const 2)
         )
        )
        (get_local $9)
       )
       (i32.store
        (i32.add
         (get_local $1)
         (i32.shl
          (get_local $5)
          (i32.const 2)
         )
        )
        (get_local $3)
       )
      )
     )
     (set_local $3
      (i32.add
       (get_local $3)
       (i32.const 1)
      )
     )
     (br $while-in5)
    )
   )
  )
 )
 (func $_silk_insertion_sort_increasing_all_values_int16 (; 299 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (if
   (i32.le_s
    (get_local $1)
    (i32.const 0)
   )
   (call $_celt_fatal
    (i32.const 49145)
    (i32.const 47335)
    (i32.const 144)
   )
  )
  (set_local $2
   (i32.const 1)
  )
  (loop $while-in
   (if
    (i32.ne
     (get_local $2)
     (get_local $1)
    )
    (block
     (set_local $4
      (i32.load16_s
       (i32.add
        (get_local $0)
        (i32.shl
         (get_local $2)
         (i32.const 1)
        )
       )
      )
     )
     (set_local $3
      (get_local $2)
     )
     (loop $while-in1
      (block $while-out0
       (br_if $while-out0
        (i32.le_s
         (get_local $3)
         (i32.const 0)
        )
       )
       (br_if $while-out0
        (i32.ge_s
         (get_local $4)
         (tee_local $6
          (i32.load16_s
           (i32.add
            (get_local $0)
            (i32.shl
             (tee_local $5
              (i32.add
               (get_local $3)
               (i32.const -1)
              )
             )
             (i32.const 1)
            )
           )
          )
         )
        )
       )
       (i32.store16
        (i32.add
         (get_local $0)
         (i32.shl
          (get_local $3)
          (i32.const 1)
         )
        )
        (get_local $6)
       )
       (set_local $3
        (get_local $5)
       )
       (br $while-in1)
      )
     )
     (i32.store16
      (i32.add
       (get_local $0)
       (i32.shl
        (get_local $3)
        (i32.const 1)
       )
      )
      (get_local $4)
     )
     (set_local $2
      (i32.add
       (get_local $2)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
 )
 (func $_silk_sum_sqr_shift (; 300 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (set_local $6
   (i32.sub
    (i32.const 31)
    (call $_silk_CLZ32
     (get_local $3)
    )
   )
  )
  (set_local $8
   (i32.and
    (i32.add
     (if (result i32)
      (i32.gt_s
       (tee_local $7
        (i32.add
         (get_local $3)
         (i32.const -1)
        )
       )
       (i32.const 0)
      )
      (get_local $7)
      (i32.const 0)
     )
     (i32.const 1)
    )
    (i32.const -2)
   )
  )
  (set_local $4
   (get_local $3)
  )
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $5)
     (get_local $7)
    )
    (block
     (set_local $4
      (i32.add
       (get_local $4)
       (i32.shr_u
        (i32.add
         (i32.mul
          (tee_local $4
           (i32.load16_s
            (i32.add
             (get_local $2)
             (i32.shl
              (get_local $5)
              (i32.const 1)
             )
            )
           )
          )
          (get_local $4)
         )
         (i32.mul
          (tee_local $4
           (i32.load16_s
            (i32.add
             (get_local $2)
             (i32.shl
              (i32.or
               (get_local $5)
               (i32.const 1)
              )
              (i32.const 1)
             )
            )
           )
          )
          (get_local $4)
         )
        )
        (get_local $6)
       )
      )
     )
     (set_local $5
      (i32.add
       (get_local $5)
       (i32.const 2)
      )
     )
     (br $while-in)
    )
   )
  )
  (if
   (i32.lt_s
    (get_local $8)
    (get_local $3)
   )
   (set_local $4
    (i32.add
     (get_local $4)
     (i32.shr_u
      (i32.mul
       (tee_local $4
        (i32.load16_s
         (i32.add
          (get_local $2)
          (i32.shl
           (get_local $8)
           (i32.const 1)
          )
         )
        )
       )
       (get_local $4)
      )
      (get_local $6)
     )
    )
   )
  )
  (set_local $5
   (i32.add
    (get_local $6)
    (i32.const 3)
   )
  )
  (set_local $4
   (call $_silk_CLZ32
    (get_local $4)
   )
  )
  (set_local $6
   (call $_silk_max_int_251
    (i32.sub
     (get_local $5)
     (get_local $4)
    )
   )
  )
  (set_local $8
   (i32.and
    (i32.add
     (if (result i32)
      (i32.gt_s
       (get_local $7)
       (i32.const 0)
      )
      (get_local $7)
      (i32.const 0)
     )
     (i32.const 1)
    )
    (i32.const -2)
   )
  )
  (set_local $5
   (i32.const 0)
  )
  (set_local $4
   (i32.const 0)
  )
  (loop $while-in1
   (if
    (i32.lt_s
     (get_local $5)
     (get_local $7)
    )
    (block
     (set_local $9
      (i32.load16_s
       (i32.add
        (get_local $2)
        (i32.shl
         (get_local $5)
         (i32.const 1)
        )
       )
      )
     )
     (set_local $10
      (i32.load16_s
       (i32.add
        (get_local $2)
        (i32.shl
         (i32.or
          (get_local $5)
          (i32.const 1)
         )
         (i32.const 1)
        )
       )
      )
     )
     (set_local $5
      (i32.add
       (get_local $5)
       (i32.const 2)
      )
     )
     (set_local $4
      (i32.add
       (get_local $4)
       (i32.shr_u
        (i32.add
         (i32.mul
          (get_local $9)
          (get_local $9)
         )
         (i32.mul
          (get_local $10)
          (get_local $10)
         )
        )
        (get_local $6)
       )
      )
     )
     (br $while-in1)
    )
   )
  )
  (if
   (i32.ge_s
    (get_local $8)
    (get_local $3)
   )
   (block
    (i32.store
     (get_local $1)
     (get_local $6)
    )
    (i32.store
     (get_local $0)
     (get_local $4)
    )
    (return)
   )
  )
  (set_local $4
   (i32.add
    (get_local $4)
    (i32.shr_u
     (i32.mul
      (tee_local $2
       (i32.load16_s
        (i32.add
         (get_local $2)
         (i32.shl
          (get_local $8)
          (i32.const 1)
         )
        )
       )
      )
      (get_local $2)
     )
     (get_local $6)
    )
   )
  )
  (i32.store
   (get_local $1)
   (get_local $6)
  )
  (i32.store
   (get_local $0)
   (get_local $4)
  )
 )
 (func $_silk_stereo_decode_pred (; 301 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (set_local $4
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.const 32)
   )
  )
  (set_local $2
   (i32.div_s
    (tee_local $3
     (call $_ec_dec_icdf
      (get_local $0)
      (i32.const 25872)
      (i32.const 8)
     )
    )
    (i32.const 5)
   )
  )
  (i32.store offset=8
   (get_local $4)
   (get_local $2)
  )
  (i32.store offset=20
   (get_local $4)
   (i32.add
    (get_local $3)
    (i32.mul
     (get_local $2)
     (i32.const -5)
    )
   )
  )
  (set_local $2
   (i32.const 0)
  )
  (loop $while-in
   (if
    (i32.ne
     (get_local $2)
     (i32.const 2)
    )
    (block
     (set_local $3
      (call $_ec_dec_icdf
       (get_local $0)
       (i32.const 45710)
       (i32.const 8)
      )
     )
     (i32.store
      (i32.add
       (get_local $4)
       (i32.mul
        (get_local $2)
        (i32.const 12)
       )
      )
      (get_local $3)
     )
     (set_local $3
      (call $_ec_dec_icdf
       (get_local $0)
       (i32.const 45717)
       (i32.const 8)
      )
     )
     (i32.store offset=4
      (i32.add
       (get_local $4)
       (i32.mul
        (get_local $2)
        (i32.const 12)
       )
      )
      (get_local $3)
     )
     (set_local $2
      (i32.add
       (get_local $2)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (set_local $2
   (i32.const 0)
  )
  (loop $while-in1
   (if
    (i32.ne
     (get_local $2)
     (i32.const 2)
    )
    (block
     (set_local $3
      (i32.add
       (i32.load
        (tee_local $0
         (i32.add
          (get_local $4)
          (i32.mul
           (get_local $2)
           (i32.const 12)
          )
         )
        )
       )
       (i32.mul
        (i32.load offset=8
         (i32.add
          (get_local $4)
          (i32.mul
           (get_local $2)
           (i32.const 12)
          )
         )
        )
        (i32.const 3)
       )
      )
     )
     (i32.store
      (get_local $0)
      (get_local $3)
     )
     (i32.store
      (i32.add
       (get_local $1)
       (i32.shl
        (get_local $2)
        (i32.const 2)
       )
      )
      (i32.add
       (i32.mul
        (i32.add
         (i32.mul
          (i32.shr_s
           (i32.sub
            (tee_local $0
             (i32.load16_s
              (i32.add
               (i32.shl
                (get_local $3)
                (i32.const 1)
               )
               (i32.const 25842)
              )
             )
            )
            (tee_local $3
             (i32.load16_s
              (i32.add
               (i32.shl
                (get_local $3)
                (i32.const 1)
               )
               (i32.const 25840)
              )
             )
            )
           )
           (i32.const 16)
          )
          (i32.const 6554)
         )
         (i32.shr_u
          (i32.mul
           (i32.and
            (i32.sub
             (i32.and
              (get_local $0)
              (i32.const 65535)
             )
             (get_local $3)
            )
            (i32.const 65535)
           )
           (i32.const 6554)
          )
          (i32.const 16)
         )
        )
        (i32.or
         (i32.shr_s
          (i32.shl
           (i32.load offset=4
            (i32.add
             (get_local $4)
             (i32.mul
              (get_local $2)
              (i32.const 12)
             )
            )
           )
           (i32.const 17)
          )
          (i32.const 16)
         )
         (i32.const 1)
        )
       )
       (get_local $3)
      )
     )
     (set_local $2
      (i32.add
       (get_local $2)
       (i32.const 1)
      )
     )
     (br $while-in1)
    )
   )
  )
  (i32.store
   (get_local $1)
   (i32.sub
    (i32.load
     (get_local $1)
    )
    (i32.load offset=4
     (get_local $1)
    )
   )
  )
  (set_global $STACKTOP
   (get_local $4)
  )
 )
 (func $_silk_stereo_decode_mid_only (; 302 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (set_local $2
   (call $_ec_dec_icdf
    (get_local $0)
    (i32.const 45682)
    (i32.const 8)
   )
  )
  (i32.store
   (get_local $1)
   (get_local $2)
  )
 )
 (func $_silk_stereo_encode_pred (; 303 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (if
   (i32.ge_s
    (tee_local $2
     (i32.add
      (i32.mul
       (i32.load8_s offset=2
        (get_local $1)
       )
       (i32.const 5)
      )
      (i32.load8_s offset=5
       (get_local $1)
      )
     )
    )
    (i32.const 25)
   )
   (call $_celt_fatal
    (i32.const 47347)
    (i32.const 47372)
    (i32.const 44)
   )
  )
  (call $_ec_enc_icdf
   (get_local $0)
   (get_local $2)
   (i32.const 25872)
   (i32.const 8)
  )
  (set_local $2
   (i32.const 0)
  )
  (block $__rjto$2
   (block $__rjti$1
    (block $__rjti$0
     (loop $while-in
      (block $while-out
       (br_if $__rjto$2
        (i32.ge_u
         (get_local $2)
         (i32.const 2)
        )
       )
       (br_if $__rjti$0
        (i32.ge_s
         (tee_local $3
          (i32.load8_s
           (i32.add
            (get_local $1)
            (i32.mul
             (get_local $2)
             (i32.const 3)
            )
           )
          )
         )
         (i32.const 3)
        )
       )
       (br_if $__rjti$1
        (i32.ge_s
         (i32.load8_s
          (tee_local $4
           (i32.add
            (i32.add
             (get_local $1)
             (i32.mul
              (get_local $2)
              (i32.const 3)
             )
            )
            (i32.const 1)
           )
          )
         )
         (i32.const 5)
        )
       )
       (call $_ec_enc_icdf
        (get_local $0)
        (get_local $3)
        (i32.const 45710)
        (i32.const 8)
       )
       (call $_ec_enc_icdf
        (get_local $0)
        (i32.load8_s
         (get_local $4)
        )
        (i32.const 45717)
        (i32.const 8)
       )
       (set_local $2
        (i32.add
         (get_local $2)
         (i32.const 1)
        )
       )
       (br $while-in)
      )
     )
    )
    (call $_celt_fatal
     (i32.const 47398)
     (i32.const 47372)
     (i32.const 47)
    )
    (br $__rjto$2)
   )
   (call $_celt_fatal
    (i32.const 47433)
    (i32.const 47372)
    (i32.const 48)
   )
  )
 )
 (func $_silk_stereo_encode_mid_only (; 304 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (call $_ec_enc_icdf
   (get_local $0)
   (i32.shr_s
    (i32.shl
     (get_local $1)
     (i32.const 24)
    )
    (i32.const 24)
   )
   (i32.const 45682)
   (i32.const 8)
  )
 )
 (func $_silk_stereo_find_predictor (; 305 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (result i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (set_local $8
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.const 16)
   )
  )
  (set_local $6
   (i32.add
    (get_local $8)
    (i32.const 8)
   )
  )
  (call $_silk_sum_sqr_shift
   (tee_local $9
    (i32.add
     (get_local $8)
     (i32.const 4)
    )
   )
   (tee_local $7
    (i32.add
     (get_local $8)
     (i32.const 12)
    )
   )
   (get_local $1)
   (get_local $4)
  )
  (call $_silk_sum_sqr_shift
   (get_local $8)
   (get_local $6)
   (get_local $2)
   (get_local $4)
  )
  (set_local $7
   (i32.add
    (tee_local $7
     (call $_silk_max_int
      (tee_local $10
       (i32.load
        (get_local $7)
       )
      )
      (tee_local $6
       (i32.load
        (get_local $6)
       )
      )
     )
    )
    (i32.and
     (get_local $7)
     (i32.const 1)
    )
   )
  )
  (i32.store
   (get_local $8)
   (tee_local $11
    (i32.shr_s
     (i32.load
      (get_local $8)
     )
     (i32.sub
      (get_local $7)
      (get_local $6)
     )
    )
   )
  )
  (set_local $6
   (call $_silk_max_int
    (i32.shr_s
     (i32.load
      (get_local $9)
     )
     (i32.sub
      (get_local $7)
      (get_local $10)
     )
    )
    (i32.const 1)
   )
  )
  (i32.store
   (get_local $9)
   (get_local $6)
  )
  (set_local $2
   (i32.shr_s
    (i32.shl
     (if (result i32)
      (i32.lt_s
       (if (result i32)
        (i32.gt_s
         (tee_local $1
          (call $_silk_DIV32_varQ_377
           (tee_local $10
            (call $_silk_inner_prod_aligned_scale
             (get_local $1)
             (get_local $2)
             (get_local $7)
             (get_local $4)
            )
           )
           (get_local $6)
           (i32.const 13)
          )
         )
         (i32.const -16384)
        )
        (get_local $1)
        (tee_local $1
         (i32.const -16384)
        )
       )
       (i32.const 16384)
      )
      (get_local $1)
      (tee_local $1
       (i32.const 16384)
      )
     )
     (i32.const 16)
    )
    (i32.const 16)
   )
  )
  (set_local $4
   (i32.sub
    (i32.const 0)
    (tee_local $9
     (i32.add
      (i32.mul
       (i32.shr_s
        (get_local $1)
        (i32.const 16)
       )
       (get_local $2)
      )
      (i32.shr_s
       (i32.mul
        (i32.and
         (get_local $1)
         (i32.const 65535)
        )
        (get_local $2)
       )
       (i32.const 16)
      )
     )
    )
   )
  )
  (set_local $5
   (call $_silk_max_int
    (get_local $5)
    (if (result i32)
     (i32.gt_s
      (get_local $9)
      (i32.const 0)
     )
     (get_local $9)
     (get_local $4)
    )
   )
  )
  (set_local $4
   (i32.shr_s
    (get_local $7)
    (i32.const 1)
   )
  )
  (set_local $7
   (i32.load
    (get_local $3)
   )
  )
  (set_local $12
   (i32.mul
    (i32.shr_s
     (i32.sub
      (i32.shl
       (call $_silk_SQRT_APPROX
        (get_local $6)
       )
       (get_local $4)
      )
      (i32.load
       (get_local $3)
      )
     )
     (i32.const 16)
    )
    (tee_local $5
     (i32.shr_s
      (i32.shl
       (get_local $5)
       (i32.const 16)
      )
      (i32.const 16)
     )
    )
   )
  )
  (set_local $13
   (i32.shl
    (call $_silk_SQRT_APPROX
     (get_local $6)
    )
    (get_local $4)
   )
  )
  (i32.store
   (get_local $3)
   (i32.add
    (get_local $7)
    (i32.add
     (get_local $12)
     (i32.shr_s
      (i32.mul
       (i32.and
        (i32.sub
         (get_local $13)
         (i32.load
          (get_local $3)
         )
        )
        (i32.const 65535)
       )
       (get_local $5)
      )
      (i32.const 16)
     )
    )
   )
  )
  (i32.store
   (get_local $8)
   (tee_local $6
    (i32.add
     (i32.sub
      (get_local $11)
      (i32.shl
       (i32.add
        (i32.mul
         (i32.shr_s
          (get_local $10)
          (i32.const 16)
         )
         (get_local $2)
        )
        (i32.shr_s
         (i32.mul
          (i32.and
           (get_local $10)
           (i32.const 65535)
          )
          (get_local $2)
         )
         (i32.const 16)
        )
       )
       (i32.const 4)
      )
     )
     (i32.shl
      (i32.add
       (i32.mul
        (i32.shr_s
         (get_local $6)
         (i32.const 16)
        )
        (tee_local $2
         (i32.shr_s
          (i32.shl
           (get_local $9)
           (i32.const 16)
          )
          (i32.const 16)
         )
        )
       )
       (i32.shr_s
        (i32.mul
         (i32.and
          (get_local $6)
          (i32.const 65535)
         )
         (get_local $2)
        )
        (i32.const 16)
       )
      )
      (i32.const 6)
     )
    )
   )
  )
  (set_local $7
   (i32.load
    (tee_local $2
     (i32.add
      (get_local $3)
      (i32.const 4)
     )
    )
   )
  )
  (set_local $9
   (i32.mul
    (i32.shr_s
     (i32.sub
      (i32.shl
       (call $_silk_SQRT_APPROX
        (get_local $6)
       )
       (get_local $4)
      )
      (i32.load
       (get_local $2)
      )
     )
     (i32.const 16)
    )
    (get_local $5)
   )
  )
  (set_local $4
   (i32.shl
    (call $_silk_SQRT_APPROX
     (get_local $6)
    )
    (get_local $4)
   )
  )
  (i32.store
   (get_local $2)
   (tee_local $2
    (i32.add
     (get_local $7)
     (i32.add
      (get_local $9)
      (i32.shr_s
       (i32.mul
        (i32.and
         (i32.sub
          (get_local $4)
          (i32.load
           (get_local $2)
          )
         )
         (i32.const 65535)
        )
        (get_local $5)
       )
       (i32.const 16)
      )
     )
    )
   )
  )
  (if
   (i32.le_s
    (tee_local $2
     (call $_silk_DIV32_varQ_377
      (get_local $2)
      (if (result i32)
       (i32.gt_s
        (tee_local $2
         (i32.load
          (get_local $3)
         )
        )
        (i32.const 1)
       )
       (get_local $2)
       (i32.const 1)
      )
      (i32.const 14)
     )
    )
    (i32.const 0)
   )
   (set_local $2
    (i32.const 0)
   )
  )
  (i32.store
   (get_local $0)
   (if (result i32)
    (i32.lt_s
     (get_local $2)
     (i32.const 32767)
    )
    (get_local $2)
    (i32.const 32767)
   )
  )
  (set_global $STACKTOP
   (get_local $8)
  )
  (get_local $1)
 )
 (func $_silk_stereo_quant_pred (; 306 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (loop $while-in
   (if
    (i32.ne
     (get_local $3)
     (i32.const 2)
    )
    (block
     (set_local $9
      (i32.add
       (get_local $0)
       (i32.shl
        (get_local $3)
        (i32.const 2)
       )
      )
     )
     (set_local $7
      (i32.add
       (get_local $1)
       (i32.mul
        (get_local $3)
        (i32.const 3)
       )
      )
     )
     (set_local $12
      (i32.add
       (i32.add
        (get_local $1)
        (i32.mul
         (get_local $3)
         (i32.const 3)
        )
       )
       (i32.const 1)
      )
     )
     (set_local $6
      (i32.const 2147483647)
     )
     (set_local $2
      (i32.const 0)
     )
     (loop $label$continue$L4
      (block $label$break$L4
       (br_if $label$break$L4
        (i32.ge_u
         (get_local $2)
         (i32.const 15)
        )
       )
       (set_local $14
        (i32.add
         (i32.mul
          (i32.shr_s
           (i32.sub
            (tee_local $4
             (i32.load16_s
              (i32.add
               (i32.shl
                (tee_local $13
                 (i32.add
                  (get_local $2)
                  (i32.const 1)
                 )
                )
                (i32.const 1)
               )
               (i32.const 25840)
              )
             )
            )
            (tee_local $10
             (i32.load16_s
              (i32.add
               (i32.shl
                (get_local $2)
                (i32.const 1)
               )
               (i32.const 25840)
              )
             )
            )
           )
           (i32.const 16)
          )
          (i32.const 6554)
         )
         (i32.shr_u
          (i32.mul
           (i32.and
            (i32.sub
             (i32.and
              (get_local $4)
              (i32.const 65535)
             )
             (get_local $10)
            )
            (i32.const 65535)
           )
           (i32.const 6554)
          )
          (i32.const 16)
         )
        )
       )
       (set_local $15
        (i32.and
         (get_local $2)
         (i32.const 255)
        )
       )
       (set_local $5
        (i32.const 0)
       )
       (loop $while-in1
        (if
         (i32.lt_u
          (get_local $5)
          (i32.const 5)
         )
         (block
          (set_local $2
           (i32.sub
            (tee_local $11
             (i32.load
              (get_local $9)
             )
            )
            (tee_local $4
             (i32.add
              (i32.mul
               (get_local $14)
               (i32.or
                (i32.shr_s
                 (i32.shl
                  (get_local $5)
                  (i32.const 17)
                 )
                 (i32.const 16)
                )
                (i32.const 1)
               )
              )
              (get_local $10)
             )
            )
           )
          )
          (set_local $16
           (i32.sub
            (get_local $4)
            (get_local $11)
           )
          )
          (br_if $label$break$L4
           (i32.ge_s
            (if (result i32)
             (i32.gt_s
              (get_local $11)
              (get_local $4)
             )
             (get_local $2)
             (tee_local $2
              (get_local $16)
             )
            )
            (get_local $6)
           )
          )
          (i32.store8
           (get_local $7)
           (get_local $15)
          )
          (i32.store8
           (get_local $12)
           (get_local $5)
          )
          (set_local $5
           (i32.add
            (get_local $5)
            (i32.const 1)
           )
          )
          (set_local $6
           (get_local $2)
          )
          (set_local $8
           (get_local $4)
          )
          (br $while-in1)
         )
        )
       )
       (set_local $2
        (get_local $13)
       )
       (br $label$continue$L4)
      )
     )
     (i32.store8 offset=2
      (i32.add
       (get_local $1)
       (i32.mul
        (get_local $3)
        (i32.const 3)
       )
      )
      (tee_local $2
       (i32.div_s
        (tee_local $6
         (i32.load8_s
          (get_local $7)
         )
        )
        (i32.const 3)
       )
      )
     )
     (i32.store8
      (get_local $7)
      (i32.add
       (i32.mul
        (i32.shr_s
         (i32.shl
          (get_local $2)
          (i32.const 24)
         )
         (i32.const 24)
        )
        (i32.const -3)
       )
       (i32.and
        (get_local $6)
        (i32.const 255)
       )
      )
     )
     (i32.store
      (get_local $9)
      (get_local $8)
     )
     (set_local $3
      (i32.add
       (get_local $3)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (i32.store
   (get_local $0)
   (i32.sub
    (i32.load
     (get_local $0)
    )
    (i32.load offset=4
     (get_local $0)
    )
   )
  )
 )
 (func $_silk_LPC_fit (; 307 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (loop $while-in
   (block $while-out
    (br_if $while-out
     (i32.ge_u
      (get_local $7)
      (i32.const 10)
     )
    )
    (set_local $5
     (i32.const 0)
    )
    (set_local $6
     (i32.const 0)
    )
    (loop $while-in1
     (if
      (i32.lt_s
       (get_local $6)
       (get_local $2)
      )
      (block
       (set_local $8
        (i32.sub
         (i32.const 0)
         (tee_local $4
          (i32.load
           (i32.add
            (get_local $1)
            (i32.shl
             (get_local $6)
             (i32.const 2)
            )
           )
          )
         )
        )
       )
       (if
        (tee_local $8
         (i32.gt_s
          (if (result i32)
           (i32.gt_s
            (get_local $4)
            (i32.const 0)
           )
           (get_local $4)
           (tee_local $4
            (get_local $8)
           )
          )
          (get_local $5)
         )
        )
        (set_local $3
         (get_local $6)
        )
       )
       (if
        (get_local $8)
        (set_local $5
         (get_local $4)
        )
       )
       (set_local $6
        (i32.add
         (get_local $6)
         (i32.const 1)
        )
       )
       (br $while-in1)
      )
     )
    )
    (br_if $while-out
     (i32.le_s
      (get_local $5)
      (i32.const 1048559)
     )
    )
    (set_local $4
     (i32.shr_s
      (i32.add
       (i32.shr_s
        (get_local $5)
        (i32.const 4)
       )
       (i32.const 1)
      )
      (i32.const 1)
     )
    )
    (call $_silk_bwexpander_32
     (get_local $1)
     (get_local $2)
     (i32.sub
      (i32.const 65470)
      (i32.div_s
       (i32.add
        (i32.shl
         (if (result i32)
          (i32.lt_s
           (get_local $5)
           (i32.const 5242800)
          )
          (get_local $4)
          (tee_local $4
           (i32.const 163838)
          )
         )
         (i32.const 14)
        )
        (i32.const -536854528)
       )
       (i32.shr_s
        (i32.mul
         (get_local $4)
         (i32.add
          (get_local $3)
          (i32.const 1)
         )
        )
        (i32.const 2)
       )
      )
     )
    )
    (set_local $7
     (i32.add
      (get_local $7)
      (i32.const 1)
     )
    )
    (br $while-in)
   )
  )
  (if
   (i32.ne
    (get_local $7)
    (i32.const 10)
   )
   (block
    (set_local $3
     (i32.const 0)
    )
    (loop $while-in3
     (if
      (i32.lt_s
       (get_local $3)
       (get_local $2)
      )
      (block
       (i32.store16
        (i32.add
         (get_local $0)
         (i32.shl
          (get_local $3)
          (i32.const 1)
         )
        )
        (i32.shr_u
         (i32.add
          (i32.shr_u
           (i32.load
            (i32.add
             (get_local $1)
             (i32.shl
              (get_local $3)
              (i32.const 2)
             )
            )
           )
           (i32.const 4)
          )
          (i32.const 1)
         )
         (i32.const 1)
        )
       )
       (set_local $3
        (i32.add
         (get_local $3)
         (i32.const 1)
        )
       )
       (br $while-in3)
      )
     )
    )
    (return)
   )
  )
  (set_local $3
   (i32.const 0)
  )
  (loop $while-in5
   (if
    (i32.lt_s
     (get_local $3)
     (get_local $2)
    )
    (block
     (i32.store16
      (i32.add
       (get_local $0)
       (i32.shl
        (get_local $3)
        (i32.const 1)
       )
      )
      (tee_local $4
       (if (result i32)
        (i32.gt_s
         (tee_local $4
          (i32.load
           (tee_local $5
            (i32.add
             (get_local $1)
             (i32.shl
              (get_local $3)
              (i32.const 2)
             )
            )
           )
          )
         )
         (i32.const 1048559)
        )
        (i32.const 32767)
        (if (result i32)
         (i32.lt_s
          (get_local $4)
          (i32.const -1048592)
         )
         (i32.const -32768)
         (i32.shr_s
          (i32.add
           (i32.shr_s
            (get_local $4)
            (i32.const 4)
           )
           (i32.const 1)
          )
          (i32.const 1)
         )
        )
       )
      )
     )
     (i32.store
      (get_local $5)
      (i32.shr_s
       (i32.shl
        (get_local $4)
        (i32.const 16)
       )
       (i32.const 11)
      )
     )
     (set_local $3
      (i32.add
       (get_local $3)
       (i32.const 1)
      )
     )
     (br $while-in5)
    )
   )
  )
 )
 (func $_silk_apply_sine_window_FLP (; 308 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 f32)
  (local $5 i32)
  (local $6 f32)
  (local $7 f32)
  (local $8 f32)
  (if
   (i32.ge_u
    (i32.add
     (get_local $2)
     (i32.const -1)
    )
    (i32.const 2)
   )
   (call $_celt_fatal
    (i32.const 47489)
    (i32.const 47538)
    (i32.const 48)
   )
  )
  (if
   (i32.and
    (get_local $3)
    (i32.const 3)
   )
   (call $_celt_fatal
    (i32.const 47573)
    (i32.const 47538)
    (i32.const 51)
   )
  )
  (set_local $8
   (f32.mul
    (tee_local $7
     (f32.sub
      (f32.const 2)
      (f32.mul
       (tee_local $4
        (f32.div
         (f32.const 3.1415927410125732)
         (f32.convert_s/i32
          (i32.add
           (get_local $3)
           (i32.const 1)
          )
         )
        )
       )
       (get_local $4)
      )
     )
    )
    (f32.const 0.5)
   )
  )
  (set_local $6
   (if (result f32)
    (tee_local $2
     (i32.lt_s
      (get_local $2)
      (i32.const 2)
     )
    )
    (f32.const 0)
    (f32.const 1)
   )
  )
  (if
   (i32.eqz
    (get_local $2)
   )
   (set_local $4
    (get_local $8)
   )
  )
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $5)
     (get_local $3)
    )
    (block
     (f32.store
      (i32.add
       (get_local $0)
       (i32.shl
        (get_local $5)
        (i32.const 2)
       )
      )
      (f32.mul
       (f32.mul
        (f32.load
         (i32.add
          (get_local $1)
          (i32.shl
           (get_local $5)
           (i32.const 2)
          )
         )
        )
        (f32.const 0.5)
       )
       (f32.add
        (get_local $6)
        (get_local $4)
       )
      )
     )
     (f32.store
      (i32.add
       (get_local $0)
       (i32.shl
        (tee_local $2
         (i32.or
          (get_local $5)
          (i32.const 1)
         )
        )
        (i32.const 2)
       )
      )
      (f32.mul
       (f32.load
        (i32.add
         (get_local $1)
         (i32.shl
          (get_local $2)
          (i32.const 2)
         )
        )
       )
       (get_local $4)
      )
     )
     (f32.store
      (i32.add
       (get_local $0)
       (i32.shl
        (tee_local $2
         (i32.or
          (get_local $5)
          (i32.const 2)
         )
        )
        (i32.const 2)
       )
      )
      (f32.mul
       (f32.mul
        (f32.load
         (i32.add
          (get_local $1)
          (i32.shl
           (get_local $2)
           (i32.const 2)
          )
         )
        )
        (f32.const 0.5)
       )
       (f32.add
        (get_local $4)
        (tee_local $6
         (f32.sub
          (f32.mul
           (get_local $7)
           (get_local $4)
          )
          (get_local $6)
         )
        )
       )
      )
     )
     (f32.store
      (i32.add
       (get_local $0)
       (i32.shl
        (tee_local $2
         (i32.or
          (get_local $5)
          (i32.const 3)
         )
        )
        (i32.const 2)
       )
      )
      (f32.mul
       (f32.load
        (i32.add
         (get_local $1)
         (i32.shl
          (get_local $2)
          (i32.const 2)
         )
        )
       )
       (get_local $6)
      )
     )
     (set_local $5
      (i32.add
       (get_local $5)
       (i32.const 4)
      )
     )
     (set_local $4
      (f32.sub
       (f32.mul
        (get_local $7)
        (get_local $6)
       )
       (get_local $4)
      )
     )
     (br $while-in)
    )
   )
  )
 )
 (func $_silk_corrVector_FLP (; 309 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 f32)
  (set_local $4
   (i32.add
    (get_local $0)
    (i32.const 16)
   )
  )
  (set_local $0
   (i32.const 0)
  )
  (loop $while-in
   (if
    (i32.ne
     (get_local $0)
     (i32.const 5)
    )
    (block
     (set_local $5
      (f32.demote/f64
       (call $_silk_inner_product_FLP
        (get_local $4)
        (get_local $1)
        (get_local $2)
       )
      )
     )
     (f32.store
      (i32.add
       (get_local $3)
       (i32.shl
        (get_local $0)
        (i32.const 2)
       )
      )
      (get_local $5)
     )
     (set_local $4
      (i32.add
       (get_local $4)
       (i32.const -4)
      )
     )
     (set_local $0
      (i32.add
       (get_local $0)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
 )
 (func $_silk_corrMatrix_FLP (; 310 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 f32)
  (local $5 f64)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (set_local $5
   (call $_silk_energy_FLP
    (tee_local $6
     (i32.add
      (get_local $0)
      (i32.const 16)
     )
    )
    (get_local $1)
   )
  )
  (f32.store
   (get_local $2)
   (f32.demote/f64
    (get_local $5)
   )
  )
  (set_local $3
   (i32.const 1)
  )
  (loop $while-in
   (if
    (i32.ne
     (get_local $3)
     (i32.const 5)
    )
    (block
     (f32.store
      (i32.add
       (get_local $2)
       (i32.shl
        (i32.mul
         (get_local $3)
         (i32.const 6)
        )
        (i32.const 2)
       )
      )
      (f32.demote/f64
       (tee_local $5
        (f64.add
         (get_local $5)
         (f64.promote/f32
          (f32.sub
           (f32.mul
            (tee_local $4
             (f32.load
              (i32.add
               (get_local $6)
               (i32.shl
                (i32.sub
                 (i32.const 0)
                 (get_local $3)
                )
                (i32.const 2)
               )
              )
             )
            )
            (get_local $4)
           )
           (f32.mul
            (tee_local $4
             (f32.load
              (i32.add
               (get_local $6)
               (i32.shl
                (i32.sub
                 (get_local $1)
                 (get_local $3)
                )
                (i32.const 2)
               )
              )
             )
            )
            (get_local $4)
           )
          )
         )
        )
       )
      )
     )
     (set_local $3
      (i32.add
       (get_local $3)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (set_local $7
   (i32.add
    (get_local $0)
    (i32.const 12)
   )
  )
  (set_local $3
   (i32.const 1)
  )
  (loop $while-in1
   (if
    (i32.ne
     (get_local $3)
     (i32.const 5)
    )
    (block
     (set_local $4
      (f32.demote/f64
       (tee_local $5
        (call $_silk_inner_product_FLP
         (get_local $6)
         (get_local $7)
         (get_local $1)
        )
       )
      )
     )
     (f32.store
      (i32.add
       (get_local $2)
       (i32.shl
        (i32.mul
         (get_local $3)
         (i32.const 5)
        )
        (i32.const 2)
       )
      )
      (get_local $4)
     )
     (f32.store
      (i32.add
       (get_local $2)
       (i32.shl
        (get_local $3)
        (i32.const 2)
       )
      )
      (get_local $4)
     )
     (set_local $9
      (i32.sub
       (i32.const 5)
       (get_local $3)
      )
     )
     (set_local $0
      (i32.const 1)
     )
     (loop $while-in3
      (if
       (i32.lt_u
        (get_local $0)
        (get_local $9)
       )
       (block
        (f32.store
         (i32.add
          (get_local $2)
          (i32.shl
           (i32.add
            (i32.mul
             (tee_local $10
              (i32.add
               (get_local $3)
               (get_local $0)
              )
             )
             (i32.const 5)
            )
            (get_local $0)
           )
           (i32.const 2)
          )
         )
         (tee_local $4
          (f32.demote/f64
           (tee_local $5
            (f64.add
             (get_local $5)
             (f64.promote/f32
              (f32.sub
               (f32.mul
                (f32.load
                 (i32.add
                  (get_local $6)
                  (i32.shl
                   (tee_local $8
                    (i32.sub
                     (i32.const 0)
                     (get_local $0)
                    )
                   )
                   (i32.const 2)
                  )
                 )
                )
                (f32.load
                 (i32.add
                  (get_local $7)
                  (i32.shl
                   (get_local $8)
                   (i32.const 2)
                  )
                 )
                )
               )
               (f32.mul
                (f32.load
                 (i32.add
                  (get_local $6)
                  (i32.shl
                   (tee_local $8
                    (i32.sub
                     (get_local $1)
                     (get_local $0)
                    )
                   )
                   (i32.const 2)
                  )
                 )
                )
                (f32.load
                 (i32.add
                  (get_local $7)
                  (i32.shl
                   (get_local $8)
                   (i32.const 2)
                  )
                 )
                )
               )
              )
             )
            )
           )
          )
         )
        )
        (f32.store
         (i32.add
          (get_local $2)
          (i32.shl
           (i32.add
            (i32.mul
             (get_local $0)
             (i32.const 5)
            )
            (get_local $10)
           )
           (i32.const 2)
          )
         )
         (get_local $4)
        )
        (set_local $0
         (i32.add
          (get_local $0)
          (i32.const 1)
         )
        )
        (br $while-in3)
       )
      )
     )
     (set_local $7
      (i32.add
       (get_local $7)
       (i32.const -4)
      )
     )
     (set_local $3
      (i32.add
       (get_local $3)
       (i32.const 1)
      )
     )
     (br $while-in1)
    )
   )
  )
 )
 (func $_silk_encode_do_VAD_FLP (; 311 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (call $_silk_VAD_GetSA_Q8_c
   (get_local $0)
   (i32.add
    (get_local $0)
    (i32.const 5098)
   )
  )
  (if
   (i32.and
    (i32.eqz
     (get_local $1)
    )
    (i32.gt_s
     (tee_local $2
      (i32.load
       (tee_local $1
        (i32.add
         (get_local $0)
         (i32.const 4532)
        )
       )
      )
     )
     (i32.const 12)
    )
   )
   (i32.store
    (get_local $1)
    (i32.const 12)
   )
   (if
    (i32.ge_s
     (get_local $2)
     (i32.const 13)
    )
    (block
     (i32.store
      (i32.add
       (get_local $0)
       (i32.const 6084)
      )
      (i32.const 0)
     )
     (i32.store
      (i32.add
       (get_local $0)
       (i32.const 6080)
      )
      (i32.const 0)
     )
     (i32.store8
      (i32.add
       (get_local $0)
       (i32.const 4765)
      )
      (i32.const 1)
     )
     (i32.store8
      (i32.add
       (i32.add
        (get_local $0)
        (i32.const 4720)
       )
       (i32.load
        (i32.add
         (get_local $0)
         (i32.const 5748)
        )
       )
      )
      (i32.const 1)
     )
     (return)
    )
   )
  )
  (i32.store8
   (i32.add
    (get_local $0)
    (i32.const 4765)
   )
   (i32.const 0)
  )
  (set_local $1
   (i32.load
    (tee_local $2
     (i32.add
      (get_local $0)
      (i32.const 6084)
     )
    )
   )
  )
  (i32.store
   (get_local $2)
   (i32.add
    (get_local $1)
    (i32.const 1)
   )
  )
  (if
   (i32.lt_s
    (get_local $1)
    (i32.const 10)
   )
   (i32.store
    (i32.add
     (get_local $0)
     (i32.const 6080)
    )
    (i32.const 0)
   )
   (if
    (i32.gt_s
     (get_local $1)
     (i32.const 29)
    )
    (block
     (i32.store
      (get_local $2)
      (i32.const 10)
     )
     (i32.store
      (i32.add
       (get_local $0)
       (i32.const 6080)
      )
      (i32.const 0)
     )
    )
   )
  )
  (i32.store8
   (i32.add
    (i32.add
     (get_local $0)
     (i32.const 4720)
    )
    (i32.load
     (i32.add
      (get_local $0)
      (i32.const 5748)
     )
    )
   )
   (i32.const 0)
  )
 )
 (func $_silk_encode_frame_FLP (; 312 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (result i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local $26 i32)
  (local $27 i32)
  (local $28 i32)
  (local $29 i32)
  (local $30 i32)
  (local $31 i32)
  (local $32 i32)
  (local $33 i32)
  (local $34 i32)
  (local $35 i32)
  (local $36 i32)
  (local $37 i32)
  (local $38 i32)
  (local $39 i32)
  (local $40 i32)
  (local $41 i32)
  (local $42 i32)
  (local $43 i32)
  (local $44 i32)
  (local $45 i32)
  (local $46 i32)
  (local $47 i32)
  (local $48 i32)
  (local $49 i32)
  (local $50 i32)
  (local $51 i32)
  (local $52 i32)
  (local $53 i32)
  (local $54 i32)
  (local $55 i32)
  (local $56 i32)
  (local $57 i32)
  (local $58 i32)
  (local $59 i32)
  (local $60 i32)
  (local $61 i32)
  (local $62 i32)
  (local $63 i32)
  (local $64 i32)
  (local $65 i32)
  (local $66 i32)
  (local $67 i32)
  (local $68 i32)
  (local $69 i32)
  (local $70 f32)
  (set_local $10
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.const 13584)
   )
  )
  (set_local $18
   (i32.add
    (get_local $10)
    (i32.const 12816)
   )
  )
  (set_local $21
   (i32.add
    (get_local $10)
    (i32.const 1328)
   )
  )
  (set_local $15
   (i32.add
    (get_local $10)
    (i32.const 12768)
   )
  )
  (set_local $16
   (i32.add
    (get_local $10)
    (i32.const 4040)
   )
  )
  (set_local $17
   (i32.add
    (get_local $10)
    (i32.const 4016)
   )
  )
  (set_local $43
   (i32.add
    (get_local $10)
    (i32.const 8416)
   )
  )
  (set_local $44
   (i32.add
    (get_local $10)
    (i32.const 4064)
   )
  )
  (set_local $38
   (i32.add
    (get_local $10)
    (i32.const 1312)
   )
  )
  (set_local $45
   (i32.add
    (get_local $10)
    (i32.const 32)
   )
  )
  (set_local $46
   (i32.add
    (get_local $10)
    (i32.const 13568)
   )
  )
  (i64.store
   (tee_local $39
    (i32.add
     (get_local $10)
     (i32.const 16)
    )
   )
   (i64.const 0)
  )
  (i64.store offset=8
   (get_local $39)
   (i64.const 0)
  )
  (set_local $11
   (i32.load
    (tee_local $6
     (i32.add
      (get_local $0)
      (i32.const 4620)
     )
    )
   )
  )
  (i32.store
   (get_local $6)
   (i32.add
    (get_local $11)
    (i32.const 1)
   )
  )
  (i32.store8
   (tee_local $47
    (i32.add
     (get_local $0)
     (i32.const 4770)
    )
   )
   (i32.and
    (get_local $11)
    (i32.const 3)
   )
  )
  (set_local $22
   (i32.add
    (i32.add
     (get_local $0)
     (i32.const 7180)
    )
    (i32.shl
     (tee_local $11
      (i32.load
       (tee_local $60
        (i32.add
         (get_local $0)
         (i32.const 4592)
        )
       )
      )
     )
     (i32.const 2)
    )
   )
  )
  (call $_silk_LP_variable_cutoff
   (i32.add
    (get_local $0)
    (i32.const 16)
   )
   (tee_local $6
    (i32.add
     (get_local $0)
     (i32.const 5098)
    )
   )
   (i32.load
    (tee_local $23
     (i32.add
      (get_local $0)
      (i32.const 4584)
     )
    )
   )
  )
  (call $_silk_short2float_array
   (i32.add
    (get_local $22)
    (i32.shl
     (i32.mul
      (i32.load
       (tee_local $48
        (i32.add
         (get_local $0)
         (i32.const 4576)
        )
       )
      )
      (i32.const 5)
     )
     (i32.const 2)
    )
   )
   (get_local $6)
   (i32.load
    (get_local $23)
   )
  )
  (loop $while-in
   (if
    (i32.ne
     (get_local $20)
     (i32.const 8)
    )
    (block
     (f32.store
      (tee_local $6
       (i32.add
        (get_local $22)
        (i32.shl
         (i32.add
          (i32.mul
           (i32.load
            (get_local $48)
           )
           (i32.const 5)
          )
          (i32.mul
           (get_local $20)
           (i32.shr_s
            (i32.load
             (get_local $23)
            )
            (i32.const 3)
           )
          )
         )
         (i32.const 2)
        )
       )
      )
      (f32.add
       (f32.load
        (get_local $6)
       )
       (f32.mul
        (f32.convert_s/i32
         (i32.sub
          (i32.const 1)
          (i32.and
           (get_local $20)
           (i32.const 2)
          )
         )
        )
        (f32.const 9.999999974752427e-07)
       )
      )
     )
     (set_local $20
      (i32.add
       (get_local $20)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (set_local $6
   (i32.add
    (get_local $21)
    (i32.shl
     (get_local $11)
     (i32.const 2)
    )
   )
  )
  (block $label$break$L5
   (if
    (i32.eqz
     (i32.load
      (tee_local $61
       (i32.add
        (get_local $0)
        (i32.const 4680)
       )
      )
     )
    )
    (block
     (call $_silk_find_pitch_lags_FLP
      (get_local $0)
      (get_local $18)
      (get_local $21)
      (get_local $22)
     )
     (call $_silk_noise_shape_analysis_FLP
      (get_local $0)
      (get_local $18)
      (get_local $6)
      (get_local $22)
     )
     (call $_silk_find_pred_coefs_FLP
      (get_local $0)
      (get_local $18)
      (get_local $6)
      (get_local $22)
      (get_local $3)
     )
     (call $_silk_process_gains_FLP
      (get_local $0)
      (get_local $18)
      (get_local $3)
     )
     (call $_silk_LBRR_encode_FLP
      (get_local $0)
      (get_local $18)
      (get_local $22)
      (get_local $3)
     )
     (set_local $6
      (call $_silk_gains_ID
       (tee_local $40
        (i32.add
         (get_local $0)
         (i32.const 4736)
        )
       )
       (i32.load
        (tee_local $28
         (i32.add
          (get_local $0)
          (i32.const 4580)
         )
        )
       )
      )
     )
     (i64.store align=4
      (get_local $15)
      (i64.load align=4
       (get_local $2)
      )
     )
     (i64.store offset=8 align=4
      (get_local $15)
      (i64.load offset=8 align=4
       (get_local $2)
      )
     )
     (i64.store offset=16 align=4
      (get_local $15)
      (i64.load offset=16 align=4
       (get_local $2)
      )
     )
     (i64.store offset=24 align=4
      (get_local $15)
      (i64.load offset=24 align=4
       (get_local $2)
      )
     )
     (i64.store offset=32 align=4
      (get_local $15)
      (i64.load offset=32 align=4
       (get_local $2)
      )
     )
     (i64.store offset=40 align=4
      (get_local $15)
      (i64.load offset=40 align=4
       (get_local $2)
      )
     )
     (drop
      (call $_memcpy
       (get_local $43)
       (tee_local $29
        (i32.add
         (get_local $0)
         (i32.const 148)
        )
       )
       (i32.const 4352)
      )
     )
     (set_local $62
      (i32.load8_s
       (get_local $47)
      )
     )
     (set_local $50
      (i32.load16_s
       (tee_local $49
        (i32.add
         (get_local $0)
         (i32.const 5772)
        )
       )
      )
     )
     (set_local $52
      (i32.load
       (tee_local $51
        (i32.add
         (get_local $0)
         (i32.const 5768)
        )
       )
      )
     )
     (set_local $63
      (i32.add
       (get_local $4)
       (i32.const -5)
      )
     )
     (set_local $64
      (i32.add
       (get_local $0)
       (i32.const 4736)
      )
     )
     (set_local $41
      (i32.add
       (get_local $0)
       (i32.const 4772)
      )
     )
     (set_local $53
      (i32.add
       (get_local $18)
       (i32.const 692)
      )
     )
     (set_local $30
      (i32.add
       (get_local $2)
       (i32.const 24)
      )
     )
     (set_local $12
      (i32.add
       (get_local $2)
       (i32.const 28)
      )
     )
     (set_local $54
      (i32.add
       (get_local $0)
       (i32.const 5748)
      )
     )
     (set_local $55
      (i32.add
       (get_local $0)
       (i32.const 4765)
      )
     )
     (set_local $42
      (i32.add
       (get_local $0)
       (i32.const 4766)
      )
     )
     (set_local $56
      (i32.add
       (get_local $2)
       (i32.const 20)
      )
     )
     (set_local $65
      (i32.add
       (get_local $0)
       (i32.const 4588)
      )
     )
     (set_local $57
      (i32.add
       (get_local $18)
       (i32.const 744)
      )
     )
     (set_local $27
      (i32.add
       (get_local $0)
       (i32.const 7168)
      )
     )
     (set_local $67
      (tee_local $66
       (i32.eq
        (get_local $3)
        (i32.const 2)
       )
      )
     )
     (set_local $68
      (i32.ne
       (get_local $5)
       (i32.const 0)
      )
     )
     (set_local $8
      (i32.const -1)
     )
     (set_local $5
      (get_local $6)
     )
     (set_local $20
      (i32.const 0)
     )
     (set_local $13
      (i32.const 256)
     )
     (set_local $21
      (i32.const -1)
     )
     (set_local $11
      (i32.const 0)
     )
     (block $__rjto$2
      (block $__rjti$2
       (loop $label$continue$L7
        (block $label$break$L7
         (block $__rjto$1
          (block $__rjti$1
           (if
            (tee_local $34
             (i32.eq
              (get_local $5)
              (get_local $8)
             )
            )
            (block
             (set_local $35
              (get_local $33)
             )
             (br $__rjti$1)
            )
            (if
             (i32.eq
              (get_local $5)
              (get_local $21)
             )
             (block
              (set_local $35
               (get_local $20)
              )
              (br $__rjti$1)
             )
             (block
              (if
               (i32.eqz
                (tee_local $14
                 (i32.eqz
                  (get_local $24)
                 )
                )
               )
               (block
                (i64.store align=4
                 (get_local $2)
                 (i64.load align=4
                  (get_local $15)
                 )
                )
                (i64.store offset=8 align=4
                 (get_local $2)
                 (i64.load offset=8 align=4
                  (get_local $15)
                 )
                )
                (i64.store offset=16 align=4
                 (get_local $2)
                 (i64.load offset=16 align=4
                  (get_local $15)
                 )
                )
                (i64.store offset=24 align=4
                 (get_local $2)
                 (i64.load offset=24 align=4
                  (get_local $15)
                 )
                )
                (i64.store offset=32 align=4
                 (get_local $2)
                 (i64.load offset=32 align=4
                  (get_local $15)
                 )
                )
                (i64.store offset=40 align=4
                 (get_local $2)
                 (i64.load offset=40 align=4
                  (get_local $15)
                 )
                )
                (drop
                 (call $_memcpy
                  (get_local $29)
                  (get_local $43)
                  (i32.const 4352)
                 )
                )
                (i32.store8
                 (get_local $47)
                 (get_local $62)
                )
                (i32.store16
                 (get_local $49)
                 (get_local $50)
                )
                (i32.store
                 (get_local $51)
                 (get_local $52)
                )
               )
              )
              (call $_silk_NSQ_wrapper_FLP
               (get_local $0)
               (get_local $18)
               (get_local $64)
               (get_local $29)
               (get_local $41)
               (get_local $22)
              )
              (if
               (i32.and
                (tee_local $7
                 (i32.eq
                  (get_local $24)
                  (i32.const 6)
                 )
                )
                (i32.eqz
                 (get_local $9)
                )
               )
               (block
                (i64.store align=4
                 (get_local $16)
                 (i64.load align=4
                  (get_local $2)
                 )
                )
                (i64.store offset=8 align=4
                 (get_local $16)
                 (i64.load offset=8 align=4
                  (get_local $2)
                 )
                )
                (i64.store offset=16 align=4
                 (get_local $16)
                 (i64.load offset=16 align=4
                  (get_local $2)
                 )
                )
                (set_local $11
                 (i32.load
                  (get_local $30)
                 )
                )
                (i64.store align=4
                 (get_local $17)
                 (i64.load align=4
                  (get_local $12)
                 )
                )
                (i64.store offset=8 align=4
                 (get_local $17)
                 (i64.load offset=8 align=4
                  (get_local $12)
                 )
                )
                (i32.store offset=16
                 (get_local $17)
                 (i32.load offset=16
                  (get_local $12)
                 )
                )
               )
              )
              (call $_silk_encode_indices
               (get_local $0)
               (get_local $2)
               (i32.load
                (get_local $54)
               )
               (i32.const 0)
               (get_local $3)
              )
              (call $_silk_encode_pulses
               (get_local $2)
               (i32.load8_s
                (get_local $55)
               )
               (i32.load8_s
                (get_local $42)
               )
               (get_local $41)
               (i32.load
                (get_local $23)
               )
              )
              (set_local $6
               (call $_ec_tell
                (i32.load
                 (get_local $56)
                )
                (i32.load
                 (get_local $12)
                )
               )
              )
              (if
               (i32.and
                (i32.and
                 (get_local $7)
                 (i32.eqz
                  (get_local $9)
                 )
                )
                (i32.gt_s
                 (get_local $6)
                 (get_local $4)
                )
               )
               (block
                (i64.store align=4
                 (get_local $2)
                 (i64.load align=4
                  (get_local $16)
                 )
                )
                (i64.store offset=8 align=4
                 (get_local $2)
                 (i64.load offset=8 align=4
                  (get_local $16)
                 )
                )
                (i64.store offset=16 align=4
                 (get_local $2)
                 (i64.load offset=16 align=4
                  (get_local $16)
                 )
                )
                (i32.store
                 (get_local $30)
                 (get_local $11)
                )
                (i64.store align=4
                 (get_local $12)
                 (i64.load align=4
                  (get_local $17)
                 )
                )
                (i64.store offset=8 align=4
                 (get_local $12)
                 (i64.load offset=8 align=4
                  (get_local $17)
                 )
                )
                (i32.store offset=16
                 (get_local $12)
                 (i32.load offset=16
                  (get_local $17)
                 )
                )
                (i32.store8
                 (get_local $27)
                 (tee_local $7
                  (i32.load8_s
                   (get_local $57)
                  )
                 )
                )
                (set_local $6
                 (i32.load
                  (get_local $28)
                 )
                )
                (set_local $26
                 (i32.const 0)
                )
                (loop $while-in1
                 (if
                  (i32.lt_s
                   (get_local $26)
                   (get_local $6)
                  )
                  (block
                   (i32.store8
                    (i32.add
                     (i32.add
                      (get_local $0)
                      (i32.const 4736)
                     )
                     (get_local $26)
                    )
                    (i32.const 4)
                   )
                   (set_local $26
                    (i32.add
                     (get_local $26)
                     (i32.const 1)
                    )
                   )
                   (br $while-in1)
                  )
                 )
                )
                (if
                 (i32.eqz
                  (get_local $66)
                 )
                 (i32.store8
                  (get_local $40)
                  (get_local $7)
                 )
                )
                (i32.store16
                 (get_local $49)
                 (get_local $50)
                )
                (i32.store
                 (get_local $51)
                 (get_local $52)
                )
                (set_local $6
                 (i32.load
                  (get_local $23)
                 )
                )
                (set_local $7
                 (i32.const 0)
                )
                (loop $while-in3
                 (if
                  (i32.lt_s
                   (get_local $7)
                   (get_local $6)
                  )
                  (block
                   (i32.store8
                    (i32.add
                     (i32.add
                      (get_local $0)
                      (i32.const 4772)
                     )
                     (get_local $7)
                    )
                    (i32.const 0)
                   )
                   (set_local $7
                    (i32.add
                     (get_local $7)
                     (i32.const 1)
                    )
                   )
                   (br $while-in3)
                  )
                 )
                )
                (call $_silk_encode_indices
                 (get_local $0)
                 (get_local $2)
                 (i32.load
                  (get_local $54)
                 )
                 (i32.const 0)
                 (get_local $3)
                )
                (call $_silk_encode_pulses
                 (get_local $2)
                 (i32.load8_s
                  (get_local $55)
                 )
                 (i32.load8_s
                  (get_local $42)
                 )
                 (get_local $41)
                 (i32.load
                  (get_local $23)
                 )
                )
                (set_local $6
                 (call $_ec_tell
                  (i32.load
                   (get_local $56)
                  )
                  (i32.load
                   (get_local $12)
                  )
                 )
                )
               )
              )
              (if
               (i32.or
                (get_local $68)
                (i32.xor
                 (get_local $14)
                 (i32.const 1)
                )
               )
               (block
                (set_local $35
                 (get_local $6)
                )
                (br $__rjti$1)
               )
               (br_if $label$break$L5
                (i32.le_s
                 (get_local $6)
                 (get_local $4)
                )
               )
              )
             )
            )
           )
           (br $__rjto$1)
          )
          (set_local $25
           (get_local $11)
          )
          (br_if $label$break$L7
           (i32.eq
            (get_local $24)
            (i32.const 6)
           )
          )
          (set_local $6
           (get_local $35)
          )
         )
         (block $label$break$L36
          (if
           (tee_local $69
            (i32.gt_s
             (get_local $6)
             (get_local $4)
            )
           )
           (block
            (if
             (get_local $9)
             (block
              (set_local $21
               (get_local $5)
              )
              (set_local $5
               (get_local $8)
              )
              (set_local $19
               (i32.const 1)
              )
              (set_local $31
               (i32.shr_s
                (i32.shl
                 (get_local $13)
                 (i32.const 16)
                )
                (i32.const 16)
               )
              )
              (set_local $20
               (get_local $6)
              )
              (br $label$break$L36)
             )
            )
            (set_local $7
             (if (result i32)
              (i32.gt_u
               (get_local $24)
               (i32.const 1)
              )
              (block (result i32)
               (f32.store
                (get_local $53)
                (if (result f32)
                 (f32.gt
                  (tee_local $70
                   (f32.mul
                    (f32.load
                     (get_local $53)
                    )
                    (f32.const 1.5)
                   )
                  )
                  (f32.const 1.5)
                 )
                 (get_local $70)
                 (f32.const 1.5)
                )
               )
               (i32.store8
                (get_local $42)
                (i32.const 0)
               )
               (set_local $5
                (i32.const -1)
               )
               (i32.const 0)
              )
              (block (result i32)
               (set_local $31
                (i32.shr_s
                 (i32.shl
                  (get_local $13)
                  (i32.const 16)
                 )
                 (i32.const 16)
                )
               )
               (set_local $20
                (get_local $6)
               )
               (i32.const 1)
              )
             )
            )
            (set_local $26
             (i32.load
              (get_local $28)
             )
            )
            (set_local $34
             (i32.eqz
              (get_local $24)
             )
            )
            (set_local $19
             (i32.const 0)
            )
            (set_local $5
             (loop $while-in6 (result i32)
              (if (result i32)
               (i32.lt_s
                (get_local $19)
                (get_local $26)
               )
               (block
                (set_local $14
                 (i32.mul
                  (tee_local $21
                   (i32.add
                    (get_local $19)
                    (i32.const 1)
                   )
                  )
                  (tee_local $9
                   (i32.load
                    (get_local $65)
                   )
                  )
                 )
                )
                (set_local $36
                 (i32.const 0)
                )
                (set_local $37
                 (i32.mul
                  (get_local $19)
                  (get_local $9)
                 )
                )
                (loop $while-in8
                 (if
                  (i32.lt_s
                   (get_local $37)
                   (get_local $14)
                  )
                  (block
                   (set_local $9
                    (i32.sub
                     (i32.const 0)
                     (tee_local $59
                      (i32.load8_s
                       (i32.add
                        (i32.add
                         (get_local $0)
                         (i32.const 4772)
                        )
                        (get_local $37)
                       )
                      )
                     )
                    )
                   )
                   (set_local $36
                    (i32.add
                     (get_local $36)
                     (if (result i32)
                      (i32.gt_s
                       (get_local $59)
                       (i32.const -1)
                      )
                      (get_local $59)
                      (get_local $9)
                     )
                    )
                   )
                   (set_local $37
                    (i32.add
                     (get_local $37)
                     (i32.const 1)
                    )
                   )
                   (br $while-in8)
                  )
                 )
                )
                (set_local $14
                 (i32.add
                  (get_local $10)
                  (i32.shl
                   (get_local $19)
                   (i32.const 2)
                  )
                 )
                )
                (block $__rjto$0
                 (block $__rjti$0
                  (br_if $__rjti$0
                   (get_local $34)
                  )
                  (set_local $9
                   (i32.add
                    (get_local $39)
                    (i32.shl
                     (get_local $19)
                     (i32.const 2)
                    )
                   )
                  )
                  (if
                   (i32.lt_s
                    (get_local $36)
                    (i32.load
                     (get_local $14)
                    )
                   )
                   (br_if $__rjti$0
                    (i32.eqz
                     (i32.load
                      (get_local $9)
                     )
                    )
                   )
                  )
                  (i32.store
                   (get_local $9)
                   (i32.const 1)
                  )
                  (br $__rjto$0)
                 )
                 (i32.store
                  (get_local $14)
                  (get_local $36)
                 )
                 (i32.store16
                  (i32.add
                   (get_local $46)
                   (i32.shl
                    (get_local $19)
                    (i32.const 1)
                   )
                  )
                  (get_local $13)
                 )
                )
                (set_local $19
                 (get_local $21)
                )
                (br $while-in6)
               )
               (block (result i32)
                (set_local $9
                 (i32.const 0)
                )
                (set_local $21
                 (get_local $5)
                )
                (set_local $19
                 (get_local $7)
                )
                (get_local $8)
               )
              )
             )
            )
           )
           (block
            (br_if $label$break$L5
             (i32.ge_s
              (get_local $6)
              (get_local $63)
             )
            )
            (set_local $32
             (i32.shr_s
              (i32.shl
               (get_local $13)
               (i32.const 16)
              )
              (i32.const 16)
             )
            )
            (if
             (get_local $34)
             (set_local $9
              (i32.const 1)
             )
             (block
              (i64.store align=4
               (get_local $16)
               (i64.load align=4
                (get_local $2)
               )
              )
              (i64.store offset=8 align=4
               (get_local $16)
               (i64.load offset=8 align=4
                (get_local $2)
               )
              )
              (i64.store offset=16 align=4
               (get_local $16)
               (i64.load offset=16 align=4
                (get_local $2)
               )
              )
              (set_local $11
               (i32.load
                (get_local $30)
               )
              )
              (i64.store align=4
               (get_local $17)
               (i64.load align=4
                (get_local $12)
               )
              )
              (i64.store offset=8 align=4
               (get_local $17)
               (i64.load offset=8 align=4
                (get_local $12)
               )
              )
              (i32.store offset=16
               (get_local $17)
               (i32.load offset=16
                (get_local $12)
               )
              )
              (br_if $__rjti$2
               (i32.ge_u
                (get_local $11)
                (i32.const 1276)
               )
              )
              (drop
               (call $_memcpy
                (get_local $45)
                (i32.load
                 (get_local $2)
                )
                (get_local $11)
               )
              )
              (drop
               (call $_memcpy
                (get_local $44)
                (get_local $29)
                (i32.const 4352)
               )
              )
              (set_local $9
               (i32.const 1)
              )
              (set_local $58
               (i32.load8_s
                (get_local $27)
               )
              )
             )
            )
            (set_local $33
             (get_local $6)
            )
           )
          )
         )
         (set_local $6
          (block $do-once10 (result i32)
           (if (result i32)
            (i32.and
             (get_local $9)
             (get_local $19)
            )
            (block (result i32)
             (if
              (i32.le_s
               (tee_local $13
                (i32.shr_s
                 (i32.shl
                  (tee_local $7
                   (i32.add
                    (get_local $32)
                    (i32.div_s
                     (i32.mul
                      (tee_local $6
                       (i32.sub
                        (get_local $31)
                        (get_local $32)
                       )
                      )
                      (i32.sub
                       (get_local $4)
                       (get_local $33)
                      )
                     )
                     (i32.sub
                      (get_local $20)
                      (get_local $33)
                     )
                    )
                   )
                  )
                  (i32.const 16)
                 )
                 (i32.const 16)
                )
               )
               (tee_local $6
                (i32.add
                 (get_local $32)
                 (tee_local $8
                  (i32.shr_s
                   (get_local $6)
                   (i32.const 2)
                  )
                 )
                )
               )
              )
              (if
               (i32.ge_s
                (get_local $13)
                (tee_local $6
                 (i32.sub
                  (get_local $31)
                  (get_local $8)
                 )
                )
               )
               (set_local $6
                (get_local $7)
               )
              )
             )
             (i32.and
              (get_local $6)
              (i32.const 65535)
             )
            )
            (block (result i32)
             (if
              (i32.eqz
               (get_local $69)
              )
              (br $do-once10
               (i32.and
                (i32.add
                 (i32.mul
                  (i32.shr_s
                   (tee_local $8
                    (call $_silk_log2lin
                     (i32.add
                      (i32.div_s
                       (i32.shl
                        (i32.sub
                         (get_local $6)
                         (get_local $4)
                        )
                        (i32.const 7)
                       )
                       (i32.load
                        (get_local $23)
                       )
                      )
                      (i32.const 2048)
                     )
                    )
                   )
                   (i32.const 16)
                  )
                  (tee_local $6
                   (i32.shr_s
                    (i32.shl
                     (get_local $13)
                     (i32.const 16)
                    )
                    (i32.const 16)
                   )
                  )
                 )
                 (i32.shr_u
                  (i32.mul
                   (i32.and
                    (get_local $8)
                    (i32.const 65535)
                   )
                   (get_local $6)
                  )
                  (i32.const 16)
                 )
                )
                (i32.const 65535)
               )
              )
             )
             (if (result i32)
              (i32.lt_s
               (i32.shr_s
                (i32.shl
                 (get_local $13)
                 (i32.const 16)
                )
                (i32.const 16)
               )
               (i32.const 16384)
              )
              (i32.and
               (i32.shl
                (i32.shr_s
                 (i32.shl
                  (get_local $13)
                  (i32.const 16)
                 )
                 (i32.const 16)
                )
                (i32.const 1)
               )
               (i32.const 65535)
              )
              (i32.const 32767)
             )
            )
           )
          )
         )
         (set_local $7
          (i32.load
           (get_local $28)
          )
         )
         (set_local $14
          (i32.const 0)
         )
         (loop $while-in13
          (if
           (i32.lt_s
            (get_local $14)
            (get_local $7)
           )
           (block
            (i32.store
             (i32.add
              (get_local $38)
              (i32.shl
               (get_local $14)
               (i32.const 2)
              )
             )
             (i32.shl
              (if (result i32)
               (i32.lt_s
                (if (result i32)
                 (i32.gt_s
                  (tee_local $8
                   (i32.add
                    (i32.mul
                     (i32.shr_s
                      (tee_local $13
                       (i32.load
                        (i32.add
                         (i32.add
                          (get_local $18)
                          (i32.const 728)
                         )
                         (i32.shl
                          (get_local $14)
                          (i32.const 2)
                         )
                        )
                       )
                      )
                      (i32.const 16)
                     )
                     (tee_local $8
                      (i32.shr_s
                       (i32.shl
                        (tee_local $8
                         (if (result i32)
                          (i32.load
                           (i32.add
                            (get_local $39)
                            (i32.shl
                             (get_local $14)
                             (i32.const 2)
                            )
                           )
                          )
                          (i32.load16_s
                           (i32.add
                            (get_local $46)
                            (i32.shl
                             (get_local $14)
                             (i32.const 1)
                            )
                           )
                          )
                          (get_local $6)
                         )
                        )
                        (i32.const 16)
                       )
                       (i32.const 16)
                      )
                     )
                    )
                    (i32.shr_s
                     (i32.mul
                      (i32.and
                       (get_local $13)
                       (i32.const 65535)
                      )
                      (get_local $8)
                     )
                     (i32.const 16)
                    )
                   )
                  )
                  (i32.const -8388608)
                 )
                 (get_local $8)
                 (tee_local $8
                  (i32.const -8388608)
                 )
                )
                (i32.const 8388607)
               )
               (get_local $8)
               (i32.const 8388607)
              )
              (i32.const 8)
             )
            )
            (set_local $14
             (i32.add
              (get_local $14)
              (i32.const 1)
             )
            )
            (br $while-in13)
           )
          )
         )
         (i32.store8
          (get_local $27)
          (i32.load8_s
           (get_local $57)
          )
         )
         (call $_silk_gains_quant
          (get_local $40)
          (get_local $38)
          (get_local $27)
          (get_local $67)
          (get_local $7)
         )
         (set_local $13
          (call $_silk_gains_ID
           (get_local $40)
           (tee_local $8
            (i32.load
             (get_local $28)
            )
           )
          )
         )
         (set_local $7
          (i32.const 0)
         )
         (loop $while-in15
          (if
           (i32.lt_s
            (get_local $7)
            (get_local $8)
           )
           (block
            (f32.store
             (i32.add
              (get_local $18)
              (i32.shl
               (get_local $7)
               (i32.const 2)
              )
             )
             (f32.mul
              (f32.convert_s/i32
               (i32.load
                (i32.add
                 (get_local $38)
                 (i32.shl
                  (get_local $7)
                  (i32.const 2)
                 )
                )
               )
              )
              (f32.const 0.0000152587890625)
             )
            )
            (set_local $7
             (i32.add
              (get_local $7)
              (i32.const 1)
             )
            )
            (br $while-in15)
           )
          )
         )
         (set_local $24
          (i32.add
           (get_local $24)
           (i32.const 1)
          )
         )
         (set_local $8
          (get_local $5)
         )
         (set_local $5
          (get_local $13)
         )
         (set_local $13
          (get_local $6)
         )
         (br $label$continue$L7)
        )
       )
       (br $__rjto$2)
      )
      (call $_celt_fatal
       (i32.const 47688)
       (i32.const 47658)
       (i32.const 281)
      )
     )
     (if
      (i32.and
       (i32.ne
        (get_local $9)
        (i32.const 0)
       )
       (i32.or
        (get_local $34)
        (i32.gt_s
         (get_local $35)
         (get_local $4)
        )
       )
      )
      (block
       (i64.store align=4
        (get_local $2)
        (i64.load align=4
         (get_local $16)
        )
       )
       (i64.store offset=8 align=4
        (get_local $2)
        (i64.load offset=8 align=4
         (get_local $16)
        )
       )
       (i64.store offset=16 align=4
        (get_local $2)
        (i64.load offset=16 align=4
         (get_local $16)
        )
       )
       (i32.store
        (get_local $30)
        (get_local $25)
       )
       (i64.store align=4
        (get_local $12)
        (i64.load align=4
         (get_local $17)
        )
       )
       (i64.store offset=8 align=4
        (get_local $12)
        (i64.load offset=8 align=4
         (get_local $17)
        )
       )
       (i32.store offset=16
        (get_local $12)
        (i32.load offset=16
         (get_local $17)
        )
       )
       (if
        (i32.lt_u
         (get_local $25)
         (i32.const 1276)
        )
        (block
         (drop
          (call $_memcpy
           (i32.load
            (get_local $2)
           )
           (get_local $45)
           (get_local $25)
          )
         )
         (drop
          (call $_memcpy
           (get_local $29)
           (get_local $44)
           (i32.const 4352)
          )
         )
         (i32.store8
          (get_local $27)
          (get_local $58)
         )
        )
        (call $_celt_fatal
         (i32.const 47611)
         (i32.const 47658)
         (i32.const 251)
        )
       )
      )
     )
    )
   )
  )
  (drop
   (call $_memmove
    (i32.add
     (get_local $0)
     (i32.const 7180)
    )
    (i32.add
     (i32.add
      (get_local $0)
      (i32.const 7180)
     )
     (i32.shl
      (i32.load
       (get_local $23)
      )
      (i32.const 2)
     )
    )
    (i32.shl
     (i32.add
      (i32.load
       (get_local $60)
      )
      (i32.mul
       (i32.load
        (get_local $48)
       )
       (i32.const 5)
      )
     )
     (i32.const 2)
    )
   )
  )
  (if
   (i32.load
    (get_local $61)
   )
   (block
    (i32.store
     (get_local $1)
     (i32.const 0)
    )
    (set_global $STACKTOP
     (get_local $10)
    )
    (return
     (i32.const 0)
    )
   )
  )
  (i32.store
   (i32.add
    (get_local $0)
    (i32.const 4544)
   )
   (i32.load offset=224
    (i32.add
     (get_local $18)
     (i32.shl
      (i32.load
       (i32.add
        (get_local $0)
        (i32.const 4580)
       )
      )
      (i32.const 2)
     )
    )
   )
  )
  (i32.store8
   (i32.add
    (get_local $0)
    (i32.const 4541)
   )
   (i32.load8_s
    (i32.add
     (get_local $0)
     (i32.const 4765)
    )
   )
  )
  (i32.store
   (i32.add
    (get_local $0)
    (i32.const 4664)
   )
   (i32.const 0)
  )
  (set_local $0
   (i32.shr_s
    (i32.add
     (call $_ec_tell
      (i32.load offset=20
       (get_local $2)
      )
      (i32.load offset=28
       (get_local $2)
      )
     )
     (i32.const 7)
    )
    (i32.const 3)
   )
  )
  (i32.store
   (get_local $1)
   (get_local $0)
  )
  (set_global $STACKTOP
   (get_local $10)
  )
  (i32.const 0)
 )
 (func $_silk_LBRR_encode_FLP (; 313 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (set_local $6
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.const 4384)
   )
  )
  (set_local $4
   (i32.load
    (tee_local $9
     (i32.add
      (get_local $0)
      (i32.const 5748)
     )
    )
   )
  )
  (if
   (i32.eqz
    (i32.load
     (i32.add
      (get_local $0)
      (i32.const 6092)
     )
    )
   )
   (block
    (set_global $STACKTOP
     (get_local $6)
    )
    (return)
   )
  )
  (if
   (i32.le_s
    (i32.load
     (i32.add
      (get_local $0)
      (i32.const 4532)
     )
    )
    (i32.const 77)
   )
   (block
    (set_global $STACKTOP
     (get_local $6)
    )
    (return)
   )
  )
  (set_local $10
   (i32.add
    (get_local $6)
    (i32.const 16)
   )
  )
  (set_local $5
   (i32.add
    (i32.add
     (get_local $0)
     (i32.const 6100)
    )
    (i32.mul
     (get_local $4)
     (i32.const 36)
    )
   )
  )
  (i32.store
   (i32.add
    (i32.add
     (get_local $0)
     (i32.const 4724)
    )
    (i32.shl
     (get_local $4)
     (i32.const 2)
    )
   )
   (i32.const 1)
  )
  (drop
   (call $_memcpy
    (tee_local $11
     (i32.add
      (get_local $6)
      (i32.const 32)
     )
    )
    (i32.add
     (get_local $0)
     (i32.const 148)
    )
    (i32.const 4352)
   )
  )
  (i64.store align=2
   (get_local $5)
   (i64.load align=2
    (tee_local $4
     (i32.add
      (get_local $0)
      (i32.const 4736)
     )
    )
   )
  )
  (i64.store offset=8 align=2
   (get_local $5)
   (i64.load offset=8 align=2
    (get_local $4)
   )
  )
  (i64.store offset=16 align=2
   (get_local $5)
   (i64.load offset=16 align=2
    (get_local $4)
   )
  )
  (i64.store offset=24 align=2
   (get_local $5)
   (i64.load offset=24 align=2
    (get_local $4)
   )
  )
  (i32.store offset=32 align=2
   (get_local $5)
   (i32.load offset=32 align=2
    (get_local $4)
   )
  )
  (drop
   (call $_memcpy
    (get_local $6)
    (get_local $1)
    (i32.shl
     (tee_local $4
      (i32.load
       (tee_local $8
        (i32.add
         (get_local $0)
         (i32.const 4580)
        )
       )
      )
     )
     (i32.const 2)
    )
   )
  )
  (block $__rjto$0
   (block $__rjti$0
    (br_if $__rjti$0
     (i32.eqz
      (tee_local $7
       (i32.load
        (get_local $9)
       )
      )
     )
    )
    (br_if $__rjti$0
     (i32.eqz
      (i32.load
       (i32.add
        (i32.add
         (get_local $0)
         (i32.shl
          (get_local $7)
          (i32.const 2)
         )
        )
        (i32.const 4720)
       )
      )
     )
    )
    (set_local $7
     (i32.add
      (get_local $0)
      (i32.const 4540)
     )
    )
    (br $__rjto$0)
   )
   (i32.store8
    (tee_local $4
     (i32.add
      (get_local $0)
      (i32.const 4540)
     )
    )
    (i32.load8_s
     (i32.add
      (get_local $0)
      (i32.const 7168)
     )
    )
   )
   (set_local $7
    (i32.and
     (call $_silk_min_int
      (i32.shr_s
       (i32.shl
        (i32.add
         (i32.load
          (i32.add
           (get_local $0)
           (i32.const 6096)
          )
         )
         (i32.load8_u
          (get_local $5)
         )
        )
        (i32.const 24)
       )
       (i32.const 24)
      )
     )
     (i32.const 255)
    )
   )
   (i32.store8
    (get_local $5)
    (get_local $7)
   )
   (set_local $7
    (get_local $4)
   )
   (set_local $4
    (i32.load
     (get_local $8)
    )
   )
  )
  (call $_silk_gains_dequant
   (get_local $10)
   (get_local $5)
   (get_local $7)
   (i32.eq
    (get_local $3)
    (i32.const 2)
   )
   (get_local $4)
  )
  (set_local $3
   (i32.const 0)
  )
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $3)
     (i32.load
      (get_local $8)
     )
    )
    (block
     (f32.store
      (i32.add
       (get_local $1)
       (i32.shl
        (get_local $3)
        (i32.const 2)
       )
      )
      (f32.mul
       (f32.convert_s/i32
        (i32.load
         (i32.add
          (get_local $10)
          (i32.shl
           (get_local $3)
           (i32.const 2)
          )
         )
        )
       )
       (f32.const 0.0000152587890625)
      )
     )
     (set_local $3
      (i32.add
       (get_local $3)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (call $_silk_NSQ_wrapper_FLP
   (get_local $0)
   (get_local $1)
   (get_local $5)
   (get_local $11)
   (i32.add
    (i32.add
     (get_local $0)
     (i32.const 6208)
    )
    (i32.mul
     (i32.load
      (get_local $9)
     )
     (i32.const 320)
    )
   )
   (get_local $2)
  )
  (drop
   (call $_memcpy
    (get_local $1)
    (get_local $6)
    (i32.shl
     (i32.load
      (get_local $8)
     )
     (i32.const 2)
    )
   )
  )
  (set_global $STACKTOP
   (get_local $6)
  )
 )
 (func $_silk_find_LPC_FLP (; 314 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 f32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 f32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 f32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 f64)
  (local $21 f64)
  (set_local $4
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.const 1696)
   )
  )
  (set_local $12
   (i32.add
    (get_local $4)
    (i32.const 1600)
   )
  )
  (set_local $9
   (i32.add
    (get_local $4)
    (i32.const 1536)
   )
  )
  (set_local $7
   (i32.add
    (i32.load
     (i32.add
      (get_local $0)
      (i32.const 4588)
     )
    )
    (tee_local $6
     (i32.load
      (tee_local $5
       (i32.add
        (get_local $0)
        (i32.const 4640)
       )
      )
     )
    )
   )
  )
  (i32.store8
   (tee_local $10
    (i32.add
     (get_local $0)
     (i32.const 4767)
    )
   )
   (i32.const 4)
  )
  (set_local $8
   (call $_silk_burg_modified_FLP
    (tee_local $15
     (i32.add
      (get_local $4)
      (i32.const 1632)
     )
    )
    (get_local $2)
    (get_local $3)
    (get_local $7)
    (i32.load
     (tee_local $13
      (i32.add
       (get_local $0)
       (i32.const 4580)
      )
     )
    )
    (get_local $6)
   )
  )
  (block $label$break$L1
   (if
    (i32.load
     (tee_local $16
      (i32.add
       (get_local $0)
       (i32.const 4632)
      )
     )
    )
    (if
     (i32.eqz
      (i32.load
       (i32.add
        (get_local $0)
        (i32.const 4664)
       )
      )
     )
     (if
      (i32.eq
       (i32.load
        (get_local $13)
       )
       (i32.const 4)
      )
      (block
       (set_local $3
        (call $_silk_burg_modified_FLP
         (get_local $9)
         (i32.add
          (get_local $2)
          (i32.shl
           (tee_local $17
            (i32.shl
             (get_local $7)
             (i32.const 1)
            )
           )
           (i32.const 2)
          )
         )
         (get_local $3)
         (get_local $7)
         (i32.const 2)
         (i32.load
          (get_local $5)
         )
        )
       )
       (set_local $3
        (f32.sub
         (get_local $8)
         (get_local $3)
        )
       )
       (call $_silk_A2NLSF_FLP
        (get_local $1)
        (get_local $9)
        (i32.load
         (get_local $5)
        )
       )
       (set_local $18
        (i32.add
         (get_local $0)
         (i32.const 4500)
        )
       )
       (set_local $14
        (f32.const 3402823466385288598117041e14)
       )
       (set_local $6
        (i32.const 3)
       )
       (loop $while-in
        (br_if $label$break$L1
         (i32.le_s
          (get_local $6)
          (i32.const -1)
         )
        )
        (call $_silk_interpolate
         (get_local $12)
         (get_local $18)
         (get_local $1)
         (get_local $6)
         (i32.load
          (get_local $5)
         )
        )
        (call $_silk_NLSF2A_FLP
         (get_local $9)
         (get_local $12)
         (i32.load
          (get_local $5)
         )
        )
        (call $_silk_LPC_analysis_filter_FLP
         (get_local $4)
         (get_local $9)
         (get_local $2)
         (get_local $17)
         (i32.load
          (get_local $5)
         )
        )
        (set_local $20
         (call $_silk_energy_FLP
          (tee_local $19
           (i32.add
            (get_local $4)
            (i32.shl
             (tee_local $11
              (i32.load
               (get_local $5)
              )
             )
             (i32.const 2)
            )
           )
          )
          (tee_local $11
           (i32.sub
            (get_local $7)
            (get_local $11)
           )
          )
         )
        )
        (set_local $21
         (call $_silk_energy_FLP
          (i32.add
           (get_local $19)
           (i32.shl
            (get_local $7)
            (i32.const 2)
           )
          )
          (get_local $11)
         )
        )
        (if
         (f32.gt
          (get_local $3)
          (tee_local $8
           (f32.demote/f64
            (f64.add
             (get_local $20)
             (get_local $21)
            )
           )
          )
         )
         (block
          (i32.store8
           (get_local $10)
           (get_local $6)
          )
          (set_local $3
           (get_local $8)
          )
         )
         (br_if $label$break$L1
          (f32.lt
           (get_local $14)
           (get_local $8)
          )
         )
        )
        (set_local $14
         (get_local $8)
        )
        (set_local $6
         (i32.add
          (get_local $6)
          (i32.const -1)
         )
        )
        (br $while-in)
       )
      )
     )
    )
   )
  )
  (if
   (i32.eq
    (i32.load8_s
     (get_local $10)
    )
    (i32.const 4)
   )
   (block
    (call $_silk_A2NLSF_FLP
     (get_local $1)
     (get_local $15)
     (i32.load
      (get_local $5)
     )
    )
    (if
     (i32.eq
      (i32.load8_s
       (get_local $10)
      )
      (i32.const 4)
     )
     (block
      (set_global $STACKTOP
       (get_local $4)
      )
      (return)
     )
    )
   )
  )
  (if
   (i32.eqz
    (i32.load
     (get_local $16)
    )
   )
   (call $_celt_fatal
    (i32.const 47731)
    (i32.const 47896)
    (i32.const 103)
   )
  )
  (if
   (i32.load
    (i32.add
     (get_local $0)
     (i32.const 4664)
    )
   )
   (call $_celt_fatal
    (i32.const 47731)
    (i32.const 47896)
    (i32.const 103)
   )
  )
  (if
   (i32.eq
    (i32.load
     (get_local $13)
    )
    (i32.const 4)
   )
   (set_global $STACKTOP
    (get_local $4)
   )
   (call $_celt_fatal
    (i32.const 47731)
    (i32.const 47896)
    (i32.const 103)
   )
  )
 )
 (func $_silk_find_LTP_FLP (; 315 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32)
  (local $6 i32)
  (local $7 f32)
  (local $8 i32)
  (local $9 i32)
  (local $10 f32)
  (set_local $8
   (i32.add
    (get_local $4)
    (i32.const 5)
   )
  )
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $6)
     (get_local $5)
    )
    (block
     (call $_silk_corrMatrix_FLP
      (tee_local $9
       (i32.add
        (get_local $2)
        (i32.shl
         (i32.sub
          (i32.const -2)
          (i32.load
           (i32.add
            (get_local $3)
            (i32.shl
             (get_local $6)
             (i32.const 2)
            )
           )
          )
         )
         (i32.const 2)
        )
       )
      )
      (get_local $4)
      (get_local $0)
     )
     (call $_silk_corrVector_FLP
      (get_local $9)
      (get_local $2)
      (get_local $4)
      (get_local $1)
     )
     (set_local $7
      (f32.demote/f64
       (call $_silk_energy_FLP
        (get_local $2)
        (get_local $8)
       )
      )
     )
     (call $_silk_scale_vector_FLP
      (get_local $0)
      (tee_local $7
       (f32.div
        (f32.const 1)
        (if (result f32)
         (f32.lt
          (tee_local $10
           (f32.add
            (f32.mul
             (f32.add
              (f32.load
               (get_local $0)
              )
              (f32.load offset=96
               (get_local $0)
              )
             )
             (f32.const 0.014999999664723873)
            )
            (f32.const 1)
           )
          )
          (get_local $7)
         )
         (get_local $7)
         (get_local $10)
        )
       )
      )
      (i32.const 25)
     )
     (call $_silk_scale_vector_FLP
      (get_local $1)
      (get_local $7)
      (i32.const 5)
     )
     (set_local $0
      (i32.add
       (get_local $0)
       (i32.const 100)
      )
     )
     (set_local $1
      (i32.add
       (get_local $1)
       (i32.const 20)
      )
     )
     (set_local $2
      (i32.add
       (get_local $2)
       (i32.shl
        (get_local $4)
        (i32.const 2)
       )
      )
     )
     (set_local $6
      (i32.add
       (get_local $6)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
 )
 (func $_silk_find_pitch_lags_FLP (; 316 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 f32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 f32)
  (set_local $4
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.const 1744)
   )
  )
  (if
   (i32.lt_s
    (tee_local $14
     (i32.add
      (tee_local $6
       (i32.add
        (tee_local $9
         (i32.load
          (tee_local $7
           (i32.add
            (get_local $0)
            (i32.const 4596)
           )
          )
         )
        )
        (i32.load
         (i32.add
          (get_local $0)
          (i32.const 4584)
         )
        )
       )
      )
      (tee_local $10
       (i32.load
        (i32.add
         (get_local $0)
         (i32.const 4592)
        )
       )
      )
     )
    )
    (tee_local $15
     (i32.load
      (tee_local $12
       (i32.add
        (get_local $0)
        (i32.const 4548)
       )
      )
     )
    )
   )
   (call $_celt_fatal
    (i32.const 47922)
    (i32.const 47984)
    (i32.const 59)
   )
  )
  (set_local $5
   (i32.add
    (get_local $4)
    (i32.const 1664)
   )
  )
  (set_local $11
   (i32.add
    (get_local $4)
    (i32.const 1600)
   )
  )
  (set_local $13
   (i32.add
    (get_local $4)
    (i32.const 1536)
   )
  )
  (set_local $10
   (i32.add
    (get_local $3)
    (i32.shl
     (i32.sub
      (i32.const 0)
      (get_local $10)
     )
     (i32.const 2)
    )
   )
  )
  (call $_silk_apply_sine_window_FLP
   (get_local $4)
   (tee_local $6
    (i32.add
     (i32.add
      (get_local $3)
      (i32.shl
       (get_local $6)
       (i32.const 2)
      )
     )
     (i32.shl
      (i32.sub
       (i32.const 0)
       (get_local $15)
      )
      (i32.const 2)
     )
    )
   )
   (i32.const 1)
   (get_local $9)
  )
  (drop
   (call $_memcpy
    (tee_local $9
     (i32.add
      (get_local $4)
      (i32.shl
       (tee_local $3
        (i32.load
         (get_local $7)
        )
       )
       (i32.const 2)
      )
     )
    )
    (tee_local $6
     (i32.add
      (get_local $6)
      (i32.shl
       (get_local $3)
       (i32.const 2)
      )
     )
    )
    (i32.shl
     (tee_local $7
      (i32.sub
       (i32.load
        (get_local $12)
       )
       (i32.shl
        (get_local $3)
        (i32.const 1)
       )
      )
     )
     (i32.const 2)
    )
   )
  )
  (call $_silk_apply_sine_window_FLP
   (i32.add
    (get_local $9)
    (i32.shl
     (get_local $7)
     (i32.const 2)
    )
   )
   (i32.add
    (get_local $6)
    (i32.shl
     (get_local $7)
     (i32.const 2)
    )
   )
   (i32.const 2)
   (get_local $3)
  )
  (call $_silk_autocorrelation_FLP
   (get_local $5)
   (get_local $4)
   (i32.load
    (get_local $12)
   )
   (i32.add
    (i32.load
     (tee_local $3
      (i32.add
       (get_local $0)
       (i32.const 4648)
      )
     )
    )
    (i32.const 1)
   )
  )
  (f32.store
   (get_local $5)
   (tee_local $16
    (f32.add
     (tee_local $8
      (f32.load
       (get_local $5)
      )
     )
     (f32.add
      (f32.mul
       (get_local $8)
       (f32.const 1.0000000474974513e-03)
      )
      (f32.const 1)
     )
    )
   )
  )
  (set_local $8
   (call $_silk_schur_FLP
    (get_local $13)
    (get_local $5)
    (i32.load
     (get_local $3)
    )
   )
  )
  (f32.store offset=704
   (get_local $1)
   (f32.div
    (get_local $16)
    (if (result f32)
     (f32.gt
      (get_local $8)
      (f32.const 1)
     )
     (get_local $8)
     (f32.const 1)
    )
   )
  )
  (call $_silk_k2a_FLP
   (get_local $11)
   (get_local $13)
   (i32.load
    (get_local $3)
   )
  )
  (call $_silk_bwexpander_FLP
   (get_local $11)
   (i32.load
    (get_local $3)
   )
   (f32.const 0.9900000095367432)
  )
  (call $_silk_LPC_analysis_filter_FLP
   (get_local $2)
   (get_local $11)
   (get_local $10)
   (get_local $14)
   (i32.load
    (get_local $3)
   )
  )
  (if
   (i32.load8_s
    (tee_local $5
     (i32.add
      (get_local $0)
      (i32.const 4765)
     )
    )
   )
   (if
    (i32.eqz
     (i32.load
      (i32.add
       (get_local $0)
       (i32.const 4664)
      )
     )
    )
    (block
     (if
      (call $_silk_pitch_analysis_core_FLP
       (get_local $2)
       (i32.add
        (get_local $1)
        (i32.const 228)
       )
       (i32.add
        (get_local $0)
        (i32.const 4762)
       )
       (i32.add
        (get_local $0)
        (i32.const 4764)
       )
       (i32.add
        (get_local $0)
        (i32.const 10060)
       )
       (i32.load
        (i32.add
         (get_local $0)
         (i32.const 4544)
        )
       )
       (f32.mul
        (f32.convert_s/i32
         (i32.load
          (i32.add
           (get_local $0)
           (i32.const 4652)
          )
         )
        )
        (f32.const 0.0000152587890625)
       )
       (f32.sub
        (f32.sub
         (f32.sub
          (f32.sub
           (f32.const 0.6000000238418579)
           (f32.mul
            (f32.convert_s/i32
             (i32.load
              (get_local $3)
             )
            )
            (f32.const 0.004000000189989805)
           )
          )
          (f32.mul
           (f32.mul
            (f32.convert_s/i32
             (i32.load
              (i32.add
               (get_local $0)
               (i32.const 4532)
              )
             )
            )
            (f32.const 0.10000000149011612)
           )
           (f32.const 0.00390625)
          )
         )
         (f32.mul
          (f32.convert_s/i32
           (i32.shr_s
            (i32.load8_s
             (i32.add
              (get_local $0)
              (i32.const 4541)
             )
            )
            (i32.const 1)
           )
          )
          (f32.const 0.15000000596046448)
         )
        )
        (f32.mul
         (f32.mul
          (f32.convert_s/i32
           (i32.load
            (i32.add
             (get_local $0)
             (i32.const 4712)
            )
           )
          )
          (f32.const 0.10000000149011612)
         )
         (f32.const 0.000030517578125)
        )
       )
       (i32.load
        (i32.add
         (get_local $0)
         (i32.const 4576)
        )
       )
       (i32.load
        (i32.add
         (get_local $0)
         (i32.const 4644)
        )
       )
       (i32.load
        (i32.add
         (get_local $0)
         (i32.const 4580)
        )
       )
      )
      (i32.store8
       (get_local $5)
       (i32.const 1)
      )
      (i32.store8
       (get_local $5)
       (i32.const 2)
      )
     )
     (set_global $STACKTOP
      (get_local $4)
     )
     (return)
    )
   )
  )
  (i64.store align=4
   (tee_local $1
    (i32.add
     (get_local $1)
     (i32.const 228)
    )
   )
   (i64.const 0)
  )
  (i64.store offset=8 align=4
   (get_local $1)
   (i64.const 0)
  )
  (i32.store16
   (i32.add
    (get_local $0)
    (i32.const 4762)
   )
   (i32.const 0)
  )
  (i32.store8
   (i32.add
    (get_local $0)
    (i32.const 4764)
   )
   (i32.const 0)
  )
  (f32.store
   (i32.add
    (get_local $0)
    (i32.const 10060)
   )
   (f32.const 0)
  )
  (set_global $STACKTOP
   (get_local $4)
  )
 )
 (func $_silk_find_pred_coefs_FLP (; 317 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 f32)
  (set_local $8
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.const 2064)
   )
  )
  (set_local $10
   (i32.add
    (get_local $8)
    (i32.const 1664)
   )
  )
  (set_local $12
   (i32.add
    (get_local $8)
    (i32.const 1584)
   )
  )
  (set_local $13
   (i32.add
    (get_local $8)
    (i32.const 1568)
   )
  )
  (set_local $5
   (i32.add
    (get_local $8)
    (i32.const 1536)
   )
  )
  (set_local $9
   (get_local $8)
  )
  (set_local $7
   (i32.load
    (tee_local $11
     (i32.add
      (get_local $0)
      (i32.const 4580)
     )
    )
   )
  )
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $6)
     (get_local $7)
    )
    (block
     (f32.store
      (i32.add
       (get_local $13)
       (i32.shl
        (get_local $6)
        (i32.const 2)
       )
      )
      (f32.div
       (f32.const 1)
       (f32.load
        (i32.add
         (get_local $1)
         (i32.shl
          (get_local $6)
          (i32.const 2)
         )
        )
       )
      )
     )
     (set_local $6
      (i32.add
       (get_local $6)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (if
   (i32.eq
    (i32.load8_s
     (i32.add
      (get_local $0)
      (i32.const 4765)
     )
    )
    (i32.const 2)
   )
   (if
    (i32.lt_s
     (i32.sub
      (i32.load
       (i32.add
        (get_local $0)
        (i32.const 4592)
       )
      )
      (i32.load
       (tee_local $14
        (i32.add
         (get_local $0)
         (i32.const 4640)
        )
       )
      )
     )
     (i32.add
      (i32.load
       (tee_local $6
        (i32.add
         (get_local $1)
         (i32.const 228)
        )
       )
      )
      (i32.const 2)
     )
    )
    (call $_celt_fatal
     (i32.const 48017)
     (i32.const 48134)
     (i32.const 62)
    )
    (block
     (call $_silk_find_LTP_FLP
      (get_local $10)
      (get_local $12)
      (get_local $2)
      (get_local $6)
      (i32.load
       (tee_local $2
        (i32.add
         (get_local $0)
         (i32.const 4588)
        )
       )
      )
      (get_local $7)
     )
     (call $_silk_quant_LTP_gains_FLP
      (tee_local $7
       (i32.add
        (get_local $1)
        (i32.const 144)
       )
      )
      (i32.add
       (get_local $0)
       (i32.const 4740)
      )
      (i32.add
       (get_local $0)
       (i32.const 4768)
      )
      (i32.add
       (get_local $0)
       (i32.const 4656)
      )
      (i32.add
       (get_local $1)
       (i32.const 708)
      )
      (get_local $10)
      (get_local $12)
      (i32.load
       (get_local $2)
      )
      (i32.load
       (get_local $11)
      )
     )
     (call $_silk_LTP_scale_ctrl_FLP
      (get_local $0)
      (get_local $1)
      (get_local $4)
     )
     (call $_silk_LTP_analysis_filter_FLP
      (get_local $9)
      (i32.add
       (get_local $3)
       (i32.shl
        (i32.sub
         (i32.const 0)
         (tee_local $3
          (i32.load
           (get_local $14)
          )
         )
        )
        (i32.const 2)
       )
      )
      (get_local $7)
      (get_local $6)
      (get_local $13)
      (i32.load
       (get_local $2)
      )
      (i32.load
       (get_local $11)
      )
      (get_local $3)
     )
    )
   )
   (block
    (set_local $10
     (i32.add
      (get_local $0)
      (i32.const 4588)
     )
    )
    (set_local $4
     (get_local $9)
    )
    (set_local $6
     (i32.add
      (get_local $3)
      (i32.shl
       (i32.sub
        (i32.const 0)
        (tee_local $2
         (i32.load
          (tee_local $12
           (i32.add
            (get_local $0)
            (i32.const 4640)
           )
          )
         )
        )
       )
       (i32.const 2)
      )
     )
    )
    (set_local $3
     (i32.const 0)
    )
    (loop $while-in1
     (if
      (i32.lt_s
       (get_local $3)
       (get_local $7)
      )
      (block
       (call $_silk_scale_copy_vector_FLP
        (get_local $4)
        (get_local $6)
        (f32.load
         (i32.add
          (get_local $13)
          (i32.shl
           (get_local $3)
           (i32.const 2)
          )
         )
        )
        (i32.add
         (i32.load
          (get_local $10)
         )
         (get_local $2)
        )
       )
       (set_local $4
        (i32.add
         (get_local $4)
         (i32.shl
          (i32.add
           (tee_local $7
            (i32.load
             (get_local $10)
            )
           )
           (tee_local $2
            (i32.load
             (get_local $12)
            )
           )
          )
          (i32.const 2)
         )
        )
       )
       (set_local $6
        (i32.add
         (get_local $6)
         (i32.shl
          (get_local $7)
          (i32.const 2)
         )
        )
       )
       (set_local $3
        (i32.add
         (get_local $3)
         (i32.const 1)
        )
       )
       (set_local $7
        (i32.load
         (get_local $11)
        )
       )
       (br $while-in1)
      )
     )
    )
    (drop
     (call $_memset
      (i32.add
       (get_local $1)
       (i32.const 144)
      )
      (i32.const 0)
      (i32.mul
       (get_local $7)
       (i32.const 20)
      )
     )
    )
    (f32.store offset=708
     (get_local $1)
     (f32.const 0)
    )
    (i32.store
     (i32.add
      (get_local $0)
      (i32.const 4656)
     )
     (i32.const 0)
    )
   )
  )
  (if
   (i32.load
    (i32.add
     (get_local $0)
     (i32.const 4664)
    )
   )
   (block
    (call $_silk_find_LPC_FLP
     (get_local $0)
     (get_local $5)
     (get_local $9)
     (f32.const 0.009999999776482582)
    )
    (call $_silk_process_NLSFs_FLP
     (get_local $0)
     (tee_local $3
      (i32.add
       (get_local $1)
       (i32.const 16)
      )
     )
     (get_local $5)
     (tee_local $2
      (i32.add
       (get_local $0)
       (i32.const 4500)
      )
     )
    )
    (call $_silk_residual_energy_FLP
     (i32.add
      (get_local $1)
      (i32.const 712)
     )
     (get_local $9)
     (get_local $3)
     (get_local $1)
     (i32.load
      (i32.add
       (get_local $0)
       (i32.const 4588)
      )
     )
     (i32.load
      (get_local $11)
     )
     (i32.load
      (i32.add
       (get_local $0)
       (i32.const 4640)
      )
     )
    )
    (i64.store align=4
     (get_local $2)
     (i64.load align=4
      (get_local $5)
     )
    )
    (i64.store offset=8 align=4
     (get_local $2)
     (i64.load offset=8 align=4
      (get_local $5)
     )
    )
    (i64.store offset=16 align=4
     (get_local $2)
     (i64.load offset=16 align=4
      (get_local $5)
     )
    )
    (i64.store offset=24 align=4
     (get_local $2)
     (i64.load offset=24 align=4
      (get_local $5)
     )
    )
    (set_global $STACKTOP
     (get_local $8)
    )
    (return)
   )
  )
  (set_local $15
   (f32.div
    (f32.demote/f64
     (call $_llvm_exp2_f64
      (f64.promote/f32
       (f32.div
        (f32.load offset=708
         (get_local $1)
        )
        (f32.const 3)
       )
      )
     )
    )
    (f32.const 1e4)
   )
  )
  (call $_silk_find_LPC_FLP
   (get_local $0)
   (get_local $5)
   (get_local $9)
   (f32.div
    (get_local $15)
    (f32.add
     (f32.mul
      (f32.load offset=700
       (get_local $1)
      )
      (f32.const 0.75)
     )
     (f32.const 0.25)
    )
   )
  )
  (call $_silk_process_NLSFs_FLP
   (get_local $0)
   (tee_local $3
    (i32.add
     (get_local $1)
     (i32.const 16)
    )
   )
   (get_local $5)
   (tee_local $2
    (i32.add
     (get_local $0)
     (i32.const 4500)
    )
   )
  )
  (call $_silk_residual_energy_FLP
   (i32.add
    (get_local $1)
    (i32.const 712)
   )
   (get_local $9)
   (get_local $3)
   (get_local $1)
   (i32.load
    (i32.add
     (get_local $0)
     (i32.const 4588)
    )
   )
   (i32.load
    (get_local $11)
   )
   (i32.load
    (i32.add
     (get_local $0)
     (i32.const 4640)
    )
   )
  )
  (i64.store align=4
   (get_local $2)
   (i64.load align=4
    (get_local $5)
   )
  )
  (i64.store offset=8 align=4
   (get_local $2)
   (i64.load offset=8 align=4
    (get_local $5)
   )
  )
  (i64.store offset=16 align=4
   (get_local $2)
   (i64.load offset=16 align=4
    (get_local $5)
   )
  )
  (i64.store offset=24 align=4
   (get_local $2)
   (i64.load offset=24 align=4
    (get_local $5)
   )
  )
  (set_global $STACKTOP
   (get_local $8)
  )
 )
 (func $_silk_LPC_analysis_filter_FLP (; 318 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (if
   (i32.gt_s
    (get_local $4)
    (get_local $3)
   )
   (call $_celt_fatal
    (i32.const 48167)
    (i32.const 48201)
    (i32.const 218)
   )
  )
  (block $switch
   (block $switch-default
    (block $switch-case3
     (block $switch-case2
      (block $switch-case1
       (block $switch-case0
        (block $switch-case
         (br_table $switch-case $switch-default $switch-case0 $switch-default $switch-case1 $switch-default $switch-case2 $switch-default $switch-default $switch-default $switch-case3 $switch-default
          (i32.sub
           (get_local $4)
           (i32.const 6)
          )
         )
        )
        (call $_silk_LPC_analysis_filter6_FLP
         (get_local $0)
         (get_local $1)
         (get_local $2)
         (get_local $3)
        )
        (br $switch)
       )
       (call $_silk_LPC_analysis_filter8_FLP
        (get_local $0)
        (get_local $1)
        (get_local $2)
        (get_local $3)
       )
       (br $switch)
      )
      (call $_silk_LPC_analysis_filter10_FLP
       (get_local $0)
       (get_local $1)
       (get_local $2)
       (get_local $3)
      )
      (br $switch)
     )
     (call $_silk_LPC_analysis_filter12_FLP
      (get_local $0)
      (get_local $1)
      (get_local $2)
      (get_local $3)
     )
     (br $switch)
    )
    (call $_silk_LPC_analysis_filter16_FLP
     (get_local $0)
     (get_local $1)
     (get_local $2)
     (get_local $3)
    )
    (br $switch)
   )
   (call $_celt_fatal
    (i32.const 49348)
    (i32.const 48201)
    (i32.const 242)
   )
  )
  (drop
   (call $_memset
    (get_local $0)
    (i32.const 0)
    (i32.shl
     (get_local $4)
     (i32.const 2)
    )
   )
  )
 )
 (func $_silk_LPC_analysis_filter6_FLP (; 319 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (set_local $6
   (i32.add
    (get_local $1)
    (i32.const 4)
   )
  )
  (set_local $7
   (i32.add
    (get_local $1)
    (i32.const 8)
   )
  )
  (set_local $8
   (i32.add
    (get_local $1)
    (i32.const 12)
   )
  )
  (set_local $9
   (i32.add
    (get_local $1)
    (i32.const 16)
   )
  )
  (set_local $10
   (i32.add
    (get_local $1)
    (i32.const 20)
   )
  )
  (set_local $4
   (i32.const 6)
  )
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $4)
     (get_local $3)
    )
    (block
     (f32.store
      (i32.add
       (get_local $0)
       (i32.shl
        (get_local $4)
        (i32.const 2)
       )
      )
      (f32.sub
       (f32.load
        (i32.add
         (get_local $2)
         (i32.shl
          (get_local $4)
          (i32.const 2)
         )
        )
       )
       (f32.add
        (f32.add
         (f32.add
          (f32.add
           (f32.add
            (f32.mul
             (f32.load
              (tee_local $5
               (i32.add
                (get_local $2)
                (i32.shl
                 (i32.add
                  (get_local $4)
                  (i32.const -1)
                 )
                 (i32.const 2)
                )
               )
              )
             )
             (f32.load
              (get_local $1)
             )
            )
            (f32.mul
             (f32.load
              (i32.add
               (get_local $5)
               (i32.const -4)
              )
             )
             (f32.load
              (get_local $6)
             )
            )
           )
           (f32.mul
            (f32.load
             (i32.add
              (get_local $5)
              (i32.const -8)
             )
            )
            (f32.load
             (get_local $7)
            )
           )
          )
          (f32.mul
           (f32.load
            (i32.add
             (get_local $5)
             (i32.const -12)
            )
           )
           (f32.load
            (get_local $8)
           )
          )
         )
         (f32.mul
          (f32.load
           (i32.add
            (get_local $5)
            (i32.const -16)
           )
          )
          (f32.load
           (get_local $9)
          )
         )
        )
        (f32.mul
         (f32.load
          (i32.add
           (get_local $5)
           (i32.const -20)
          )
         )
         (f32.load
          (get_local $10)
         )
        )
       )
      )
     )
     (set_local $4
      (i32.add
       (get_local $4)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
 )
 (func $_silk_LPC_analysis_filter8_FLP (; 320 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (set_local $6
   (i32.add
    (get_local $1)
    (i32.const 4)
   )
  )
  (set_local $7
   (i32.add
    (get_local $1)
    (i32.const 8)
   )
  )
  (set_local $8
   (i32.add
    (get_local $1)
    (i32.const 12)
   )
  )
  (set_local $9
   (i32.add
    (get_local $1)
    (i32.const 16)
   )
  )
  (set_local $10
   (i32.add
    (get_local $1)
    (i32.const 20)
   )
  )
  (set_local $11
   (i32.add
    (get_local $1)
    (i32.const 24)
   )
  )
  (set_local $12
   (i32.add
    (get_local $1)
    (i32.const 28)
   )
  )
  (set_local $5
   (i32.const 8)
  )
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $5)
     (get_local $3)
    )
    (block
     (f32.store
      (i32.add
       (get_local $0)
       (i32.shl
        (get_local $5)
        (i32.const 2)
       )
      )
      (f32.sub
       (f32.load
        (i32.add
         (get_local $2)
         (i32.shl
          (get_local $5)
          (i32.const 2)
         )
        )
       )
       (f32.add
        (f32.add
         (f32.add
          (f32.add
           (f32.add
            (f32.add
             (f32.add
              (f32.mul
               (f32.load
                (tee_local $4
                 (i32.add
                  (get_local $2)
                  (i32.shl
                   (i32.add
                    (get_local $5)
                    (i32.const -1)
                   )
                   (i32.const 2)
                  )
                 )
                )
               )
               (f32.load
                (get_local $1)
               )
              )
              (f32.mul
               (f32.load
                (i32.add
                 (get_local $4)
                 (i32.const -4)
                )
               )
               (f32.load
                (get_local $6)
               )
              )
             )
             (f32.mul
              (f32.load
               (i32.add
                (get_local $4)
                (i32.const -8)
               )
              )
              (f32.load
               (get_local $7)
              )
             )
            )
            (f32.mul
             (f32.load
              (i32.add
               (get_local $4)
               (i32.const -12)
              )
             )
             (f32.load
              (get_local $8)
             )
            )
           )
           (f32.mul
            (f32.load
             (i32.add
              (get_local $4)
              (i32.const -16)
             )
            )
            (f32.load
             (get_local $9)
            )
           )
          )
          (f32.mul
           (f32.load
            (i32.add
             (get_local $4)
             (i32.const -20)
            )
           )
           (f32.load
            (get_local $10)
           )
          )
         )
         (f32.mul
          (f32.load
           (i32.add
            (get_local $4)
            (i32.const -24)
           )
          )
          (f32.load
           (get_local $11)
          )
         )
        )
        (f32.mul
         (f32.load
          (i32.add
           (get_local $4)
           (i32.const -28)
          )
         )
         (f32.load
          (get_local $12)
         )
        )
       )
      )
     )
     (set_local $5
      (i32.add
       (get_local $5)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
 )
 (func $_silk_LPC_analysis_filter10_FLP (; 321 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (set_local $6
   (i32.add
    (get_local $1)
    (i32.const 4)
   )
  )
  (set_local $7
   (i32.add
    (get_local $1)
    (i32.const 8)
   )
  )
  (set_local $8
   (i32.add
    (get_local $1)
    (i32.const 12)
   )
  )
  (set_local $9
   (i32.add
    (get_local $1)
    (i32.const 16)
   )
  )
  (set_local $10
   (i32.add
    (get_local $1)
    (i32.const 20)
   )
  )
  (set_local $11
   (i32.add
    (get_local $1)
    (i32.const 24)
   )
  )
  (set_local $12
   (i32.add
    (get_local $1)
    (i32.const 28)
   )
  )
  (set_local $13
   (i32.add
    (get_local $1)
    (i32.const 32)
   )
  )
  (set_local $14
   (i32.add
    (get_local $1)
    (i32.const 36)
   )
  )
  (set_local $5
   (i32.const 10)
  )
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $5)
     (get_local $3)
    )
    (block
     (f32.store
      (i32.add
       (get_local $0)
       (i32.shl
        (get_local $5)
        (i32.const 2)
       )
      )
      (f32.sub
       (f32.load
        (i32.add
         (get_local $2)
         (i32.shl
          (get_local $5)
          (i32.const 2)
         )
        )
       )
       (f32.add
        (f32.add
         (f32.add
          (f32.add
           (f32.add
            (f32.add
             (f32.add
              (f32.add
               (f32.add
                (f32.mul
                 (f32.load
                  (tee_local $4
                   (i32.add
                    (get_local $2)
                    (i32.shl
                     (i32.add
                      (get_local $5)
                      (i32.const -1)
                     )
                     (i32.const 2)
                    )
                   )
                  )
                 )
                 (f32.load
                  (get_local $1)
                 )
                )
                (f32.mul
                 (f32.load
                  (i32.add
                   (get_local $4)
                   (i32.const -4)
                  )
                 )
                 (f32.load
                  (get_local $6)
                 )
                )
               )
               (f32.mul
                (f32.load
                 (i32.add
                  (get_local $4)
                  (i32.const -8)
                 )
                )
                (f32.load
                 (get_local $7)
                )
               )
              )
              (f32.mul
               (f32.load
                (i32.add
                 (get_local $4)
                 (i32.const -12)
                )
               )
               (f32.load
                (get_local $8)
               )
              )
             )
             (f32.mul
              (f32.load
               (i32.add
                (get_local $4)
                (i32.const -16)
               )
              )
              (f32.load
               (get_local $9)
              )
             )
            )
            (f32.mul
             (f32.load
              (i32.add
               (get_local $4)
               (i32.const -20)
              )
             )
             (f32.load
              (get_local $10)
             )
            )
           )
           (f32.mul
            (f32.load
             (i32.add
              (get_local $4)
              (i32.const -24)
             )
            )
            (f32.load
             (get_local $11)
            )
           )
          )
          (f32.mul
           (f32.load
            (i32.add
             (get_local $4)
             (i32.const -28)
            )
           )
           (f32.load
            (get_local $12)
           )
          )
         )
         (f32.mul
          (f32.load
           (i32.add
            (get_local $4)
            (i32.const -32)
           )
          )
          (f32.load
           (get_local $13)
          )
         )
        )
        (f32.mul
         (f32.load
          (i32.add
           (get_local $4)
           (i32.const -36)
          )
         )
         (f32.load
          (get_local $14)
         )
        )
       )
      )
     )
     (set_local $5
      (i32.add
       (get_local $5)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
 )
 (func $_silk_LPC_analysis_filter12_FLP (; 322 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (set_local $6
   (i32.add
    (get_local $1)
    (i32.const 4)
   )
  )
  (set_local $7
   (i32.add
    (get_local $1)
    (i32.const 8)
   )
  )
  (set_local $8
   (i32.add
    (get_local $1)
    (i32.const 12)
   )
  )
  (set_local $9
   (i32.add
    (get_local $1)
    (i32.const 16)
   )
  )
  (set_local $10
   (i32.add
    (get_local $1)
    (i32.const 20)
   )
  )
  (set_local $11
   (i32.add
    (get_local $1)
    (i32.const 24)
   )
  )
  (set_local $12
   (i32.add
    (get_local $1)
    (i32.const 28)
   )
  )
  (set_local $13
   (i32.add
    (get_local $1)
    (i32.const 32)
   )
  )
  (set_local $14
   (i32.add
    (get_local $1)
    (i32.const 36)
   )
  )
  (set_local $15
   (i32.add
    (get_local $1)
    (i32.const 40)
   )
  )
  (set_local $16
   (i32.add
    (get_local $1)
    (i32.const 44)
   )
  )
  (set_local $5
   (i32.const 12)
  )
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $5)
     (get_local $3)
    )
    (block
     (f32.store
      (i32.add
       (get_local $0)
       (i32.shl
        (get_local $5)
        (i32.const 2)
       )
      )
      (f32.sub
       (f32.load
        (i32.add
         (get_local $2)
         (i32.shl
          (get_local $5)
          (i32.const 2)
         )
        )
       )
       (f32.add
        (f32.add
         (f32.add
          (f32.add
           (f32.add
            (f32.add
             (f32.add
              (f32.add
               (f32.add
                (f32.add
                 (f32.add
                  (f32.mul
                   (f32.load
                    (tee_local $4
                     (i32.add
                      (get_local $2)
                      (i32.shl
                       (i32.add
                        (get_local $5)
                        (i32.const -1)
                       )
                       (i32.const 2)
                      )
                     )
                    )
                   )
                   (f32.load
                    (get_local $1)
                   )
                  )
                  (f32.mul
                   (f32.load
                    (i32.add
                     (get_local $4)
                     (i32.const -4)
                    )
                   )
                   (f32.load
                    (get_local $6)
                   )
                  )
                 )
                 (f32.mul
                  (f32.load
                   (i32.add
                    (get_local $4)
                    (i32.const -8)
                   )
                  )
                  (f32.load
                   (get_local $7)
                  )
                 )
                )
                (f32.mul
                 (f32.load
                  (i32.add
                   (get_local $4)
                   (i32.const -12)
                  )
                 )
                 (f32.load
                  (get_local $8)
                 )
                )
               )
               (f32.mul
                (f32.load
                 (i32.add
                  (get_local $4)
                  (i32.const -16)
                 )
                )
                (f32.load
                 (get_local $9)
                )
               )
              )
              (f32.mul
               (f32.load
                (i32.add
                 (get_local $4)
                 (i32.const -20)
                )
               )
               (f32.load
                (get_local $10)
               )
              )
             )
             (f32.mul
              (f32.load
               (i32.add
                (get_local $4)
                (i32.const -24)
               )
              )
              (f32.load
               (get_local $11)
              )
             )
            )
            (f32.mul
             (f32.load
              (i32.add
               (get_local $4)
               (i32.const -28)
              )
             )
             (f32.load
              (get_local $12)
             )
            )
           )
           (f32.mul
            (f32.load
             (i32.add
              (get_local $4)
              (i32.const -32)
             )
            )
            (f32.load
             (get_local $13)
            )
           )
          )
          (f32.mul
           (f32.load
            (i32.add
             (get_local $4)
             (i32.const -36)
            )
           )
           (f32.load
            (get_local $14)
           )
          )
         )
         (f32.mul
          (f32.load
           (i32.add
            (get_local $4)
            (i32.const -40)
           )
          )
          (f32.load
           (get_local $15)
          )
         )
        )
        (f32.mul
         (f32.load
          (i32.add
           (get_local $4)
           (i32.const -44)
          )
         )
         (f32.load
          (get_local $16)
         )
        )
       )
      )
     )
     (set_local $5
      (i32.add
       (get_local $5)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
 )
 (func $_silk_LPC_analysis_filter16_FLP (; 323 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (set_local $6
   (i32.add
    (get_local $1)
    (i32.const 4)
   )
  )
  (set_local $7
   (i32.add
    (get_local $1)
    (i32.const 8)
   )
  )
  (set_local $8
   (i32.add
    (get_local $1)
    (i32.const 12)
   )
  )
  (set_local $9
   (i32.add
    (get_local $1)
    (i32.const 16)
   )
  )
  (set_local $10
   (i32.add
    (get_local $1)
    (i32.const 20)
   )
  )
  (set_local $11
   (i32.add
    (get_local $1)
    (i32.const 24)
   )
  )
  (set_local $12
   (i32.add
    (get_local $1)
    (i32.const 28)
   )
  )
  (set_local $13
   (i32.add
    (get_local $1)
    (i32.const 32)
   )
  )
  (set_local $14
   (i32.add
    (get_local $1)
    (i32.const 36)
   )
  )
  (set_local $15
   (i32.add
    (get_local $1)
    (i32.const 40)
   )
  )
  (set_local $16
   (i32.add
    (get_local $1)
    (i32.const 44)
   )
  )
  (set_local $17
   (i32.add
    (get_local $1)
    (i32.const 48)
   )
  )
  (set_local $18
   (i32.add
    (get_local $1)
    (i32.const 52)
   )
  )
  (set_local $19
   (i32.add
    (get_local $1)
    (i32.const 56)
   )
  )
  (set_local $20
   (i32.add
    (get_local $1)
    (i32.const 60)
   )
  )
  (set_local $5
   (i32.const 16)
  )
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $5)
     (get_local $3)
    )
    (block
     (f32.store
      (i32.add
       (get_local $0)
       (i32.shl
        (get_local $5)
        (i32.const 2)
       )
      )
      (f32.sub
       (f32.load
        (i32.add
         (get_local $2)
         (i32.shl
          (get_local $5)
          (i32.const 2)
         )
        )
       )
       (f32.add
        (f32.add
         (f32.add
          (f32.add
           (f32.add
            (f32.add
             (f32.add
              (f32.add
               (f32.add
                (f32.add
                 (f32.add
                  (f32.add
                   (f32.add
                    (f32.add
                     (f32.add
                      (f32.mul
                       (f32.load
                        (tee_local $4
                         (i32.add
                          (get_local $2)
                          (i32.shl
                           (i32.add
                            (get_local $5)
                            (i32.const -1)
                           )
                           (i32.const 2)
                          )
                         )
                        )
                       )
                       (f32.load
                        (get_local $1)
                       )
                      )
                      (f32.mul
                       (f32.load
                        (i32.add
                         (get_local $4)
                         (i32.const -4)
                        )
                       )
                       (f32.load
                        (get_local $6)
                       )
                      )
                     )
                     (f32.mul
                      (f32.load
                       (i32.add
                        (get_local $4)
                        (i32.const -8)
                       )
                      )
                      (f32.load
                       (get_local $7)
                      )
                     )
                    )
                    (f32.mul
                     (f32.load
                      (i32.add
                       (get_local $4)
                       (i32.const -12)
                      )
                     )
                     (f32.load
                      (get_local $8)
                     )
                    )
                   )
                   (f32.mul
                    (f32.load
                     (i32.add
                      (get_local $4)
                      (i32.const -16)
                     )
                    )
                    (f32.load
                     (get_local $9)
                    )
                   )
                  )
                  (f32.mul
                   (f32.load
                    (i32.add
                     (get_local $4)
                     (i32.const -20)
                    )
                   )
                   (f32.load
                    (get_local $10)
                   )
                  )
                 )
                 (f32.mul
                  (f32.load
                   (i32.add
                    (get_local $4)
                    (i32.const -24)
                   )
                  )
                  (f32.load
                   (get_local $11)
                  )
                 )
                )
                (f32.mul
                 (f32.load
                  (i32.add
                   (get_local $4)
                   (i32.const -28)
                  )
                 )
                 (f32.load
                  (get_local $12)
                 )
                )
               )
               (f32.mul
                (f32.load
                 (i32.add
                  (get_local $4)
                  (i32.const -32)
                 )
                )
                (f32.load
                 (get_local $13)
                )
               )
              )
              (f32.mul
               (f32.load
                (i32.add
                 (get_local $4)
                 (i32.const -36)
                )
               )
               (f32.load
                (get_local $14)
               )
              )
             )
             (f32.mul
              (f32.load
               (i32.add
                (get_local $4)
                (i32.const -40)
               )
              )
              (f32.load
               (get_local $15)
              )
             )
            )
            (f32.mul
             (f32.load
              (i32.add
               (get_local $4)
               (i32.const -44)
              )
             )
             (f32.load
              (get_local $16)
             )
            )
           )
           (f32.mul
            (f32.load
             (i32.add
              (get_local $4)
              (i32.const -48)
             )
            )
            (f32.load
             (get_local $17)
            )
           )
          )
          (f32.mul
           (f32.load
            (i32.add
             (get_local $4)
             (i32.const -52)
            )
           )
           (f32.load
            (get_local $18)
           )
          )
         )
         (f32.mul
          (f32.load
           (i32.add
            (get_local $4)
            (i32.const -56)
           )
          )
          (f32.load
           (get_local $19)
          )
         )
        )
        (f32.mul
         (f32.load
          (i32.add
           (get_local $4)
           (i32.const -60)
          )
         )
         (f32.load
          (get_local $20)
         )
        )
       )
      )
     )
     (set_local $5
      (i32.add
       (get_local $5)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
 )
 (func $_silk_LTP_analysis_filter_FLP (; 324 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 f32)
  (local $13 i32)
  (local $14 i32)
  (local $15 f32)
  (local $16 i32)
  (set_local $11
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.const 32)
   )
  )
  (set_local $13
   (i32.add
    (get_local $5)
    (get_local $7)
   )
  )
  (set_local $7
   (i32.const 0)
  )
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $7)
     (get_local $6)
    )
    (block
     (set_local $9
      (i32.sub
       (i32.const 0)
       (i32.load
        (i32.add
         (get_local $3)
         (i32.shl
          (get_local $7)
          (i32.const 2)
         )
        )
       )
      )
     )
     (set_local $15
      (f32.load
       (i32.add
        (get_local $4)
        (i32.shl
         (get_local $7)
         (i32.const 2)
        )
       )
      )
     )
     (set_local $10
      (i32.mul
       (get_local $7)
       (i32.const 5)
      )
     )
     (set_local $8
      (i32.const 0)
     )
     (loop $while-in1
      (if
       (i32.ne
        (get_local $8)
        (i32.const 5)
       )
       (block
        (i32.store
         (i32.add
          (get_local $11)
          (i32.shl
           (get_local $8)
           (i32.const 2)
          )
         )
         (i32.load
          (i32.add
           (get_local $2)
           (i32.shl
            (i32.add
             (get_local $10)
             (get_local $8)
            )
            (i32.const 2)
           )
          )
         )
        )
        (set_local $8
         (i32.add
          (get_local $8)
          (i32.const 1)
         )
        )
        (br $while-in1)
       )
      )
     )
     (set_local $10
      (i32.add
       (get_local $1)
       (i32.shl
        (get_local $9)
        (i32.const 2)
       )
      )
     )
     (set_local $8
      (i32.const 0)
     )
     (loop $while-in3
      (if
       (i32.lt_s
        (get_local $8)
        (get_local $13)
       )
       (block
        (i32.store
         (tee_local $14
          (i32.add
           (get_local $0)
           (i32.shl
            (get_local $8)
            (i32.const 2)
           )
          )
         )
         (tee_local $16
          (i32.load
           (i32.add
            (get_local $1)
            (i32.shl
             (get_local $8)
             (i32.const 2)
            )
           )
          )
         )
        )
        (set_local $9
         (i32.const 0)
        )
        (set_local $12
         (f32.reinterpret/i32
          (get_local $16)
         )
        )
        (loop $while-in5
         (if
          (i32.ne
           (get_local $9)
           (i32.const 5)
          )
          (block
           (f32.store
            (get_local $14)
            (tee_local $12
             (f32.sub
              (get_local $12)
              (f32.mul
               (f32.load
                (i32.add
                 (get_local $11)
                 (i32.shl
                  (get_local $9)
                  (i32.const 2)
                 )
                )
               )
               (f32.load
                (i32.add
                 (get_local $10)
                 (i32.shl
                  (i32.sub
                   (i32.const 2)
                   (get_local $9)
                  )
                  (i32.const 2)
                 )
                )
               )
              )
             )
            )
           )
           (set_local $9
            (i32.add
             (get_local $9)
             (i32.const 1)
            )
           )
           (br $while-in5)
          )
         )
        )
        (f32.store
         (get_local $14)
         (f32.mul
          (get_local $12)
          (get_local $15)
         )
        )
        (set_local $10
         (i32.add
          (get_local $10)
          (i32.const 4)
         )
        )
        (set_local $8
         (i32.add
          (get_local $8)
          (i32.const 1)
         )
        )
        (br $while-in3)
       )
      )
     )
     (set_local $7
      (i32.add
       (get_local $7)
       (i32.const 1)
      )
     )
     (set_local $0
      (i32.add
       (get_local $0)
       (i32.shl
        (get_local $13)
        (i32.const 2)
       )
      )
     )
     (set_local $1
      (i32.add
       (get_local $1)
       (i32.shl
        (get_local $5)
        (i32.const 2)
       )
      )
     )
     (br $while-in)
    )
   )
  )
  (set_global $STACKTOP
   (get_local $11)
  )
 )
 (func $_silk_LTP_scale_ctrl_FLP (; 325 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 f32)
  (if
   (get_local $2)
   (block
    (i32.store8
     (i32.add
      (get_local $0)
      (i32.const 4769)
     )
     (i32.const 0)
    )
    (set_local $2
     (i32.const 0)
    )
   )
   (i32.store8
    (i32.add
     (get_local $0)
     (i32.const 4769)
    )
    (tee_local $2
     (if (result i32)
      (f32.gt
       (tee_local $3
        (f32.mul
         (f32.mul
          (f32.load offset=708
           (get_local $1)
          )
          (f32.convert_s/i32
           (i32.add
            (i32.load
             (i32.add
              (get_local $0)
              (i32.const 4616)
             )
            )
            (i32.load
             (i32.add
              (get_local $0)
              (i32.const 5744)
             )
            )
           )
          )
         )
         (f32.const 0.10000000149011612)
        )
       )
       (f32.const 2)
      )
      (i32.const 2)
      (if (result i32)
       (f32.lt
        (get_local $3)
        (f32.const 0)
       )
       (i32.const 0)
       (i32.trunc_s/f32
        (get_local $3)
       )
      )
     )
    )
   )
  )
  (f32.store offset=224
   (get_local $1)
   (f32.mul
    (f32.convert_s/i32
     (i32.load16_s
      (i32.add
       (i32.shl
        (i32.shr_s
         (i32.shl
          (get_local $2)
          (i32.const 24)
         )
         (i32.const 24)
        )
        (i32.const 1)
       )
       (i32.const 41172)
      )
     )
    )
    (f32.const 0.00006103515625)
   )
  )
 )
 (func $_silk_noise_shape_analysis_FLP (; 326 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 f32)
  (local $6 i32)
  (local $7 f32)
  (local $8 i32)
  (local $9 f32)
  (local $10 i32)
  (local $11 f32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 f32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (set_local $8
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.const 1184)
   )
  )
  (set_local $14
   (i32.add
    (get_local $8)
    (i32.const 224)
   )
  )
  (set_local $15
   (i32.add
    (get_local $8)
    (i32.const 112)
   )
  )
  (set_local $16
   (get_local $8)
  )
  (set_local $4
   (i32.add
    (get_local $3)
    (i32.shl
     (i32.sub
      (i32.const 0)
      (i32.load
       (i32.add
        (get_local $0)
        (i32.const 4600)
       )
      )
     )
     (i32.const 2)
    )
   )
  )
  (set_local $5
   (f32.mul
    (f32.convert_s/i32
     (i32.load
      (tee_local $3
       (i32.add
        (get_local $0)
        (i32.const 4716)
       )
      )
     )
    )
    (f32.const 0.0078125)
   )
  )
  (f32.store
   (tee_local $22
    (i32.add
     (get_local $1)
     (i32.const 696)
    )
   )
   (tee_local $7
    (f32.mul
     (f32.mul
      (f32.convert_s/i32
       (i32.add
        (i32.load
         (tee_local $23
          (i32.add
           (get_local $0)
           (i32.const 4696)
          )
         )
        )
        (i32.load
         (i32.add
          (get_local $0)
          (i32.const 4700)
         )
        )
       )
      )
      (f32.const 0.5)
     )
     (f32.const 0.000030517578125)
    )
   )
  )
  (set_local $9
   (call $_silk_sigmoid
    (f32.mul
     (f32.add
      (get_local $5)
      (f32.const -20)
     )
     (f32.const 0.25)
    )
   )
  )
  (f32.store
   (tee_local $19
    (i32.add
     (get_local $1)
     (i32.const 700)
    )
   )
   (get_local $9)
  )
  (if
   (i32.eqz
    (i32.load
     (i32.add
      (get_local $0)
      (i32.const 4676)
     )
    )
   )
   (set_local $5
    (f32.sub
     (get_local $5)
     (f32.mul
      (f32.mul
       (f32.mul
        (f32.mul
         (get_local $9)
         (f32.const 2)
        )
        (f32.add
         (f32.mul
          (get_local $7)
          (f32.const 0.5)
         )
         (f32.const 0.5)
        )
       )
       (tee_local $5
        (f32.sub
         (f32.const 1)
         (f32.mul
          (f32.convert_s/i32
           (i32.load
            (i32.add
             (get_local $0)
             (i32.const 4532)
            )
           )
          )
          (f32.const 0.00390625)
         )
        )
       )
      )
      (get_local $5)
     )
    )
   )
  )
  (if
   (i32.eq
    (i32.load8_s
     (tee_local $20
      (i32.add
       (get_local $0)
       (i32.const 4765)
      )
     )
    )
    (i32.const 2)
   )
   (block
    (set_local $5
     (f32.add
      (get_local $5)
      (f32.mul
       (f32.load
        (i32.add
         (get_local $0)
         (i32.const 10060)
        )
       )
       (f32.const 2)
      )
     )
    )
    (i32.store8
     (i32.add
      (get_local $0)
      (i32.const 4766)
     )
     (i32.const 0)
    )
    (set_local $8
     (i32.add
      (get_local $0)
      (i32.const 4576)
     )
    )
    (set_local $3
     (i32.add
      (get_local $0)
      (i32.const 4580)
     )
    )
   )
   (block
    (set_local $7
     (f32.add
      (get_local $5)
      (f32.mul
       (f32.add
        (f32.mul
         (f32.mul
          (f32.convert_s/i32
           (i32.load
            (get_local $3)
           )
          )
          (f32.const -0.4000000059604645)
         )
         (f32.const 0.0078125)
        )
        (f32.const 6)
       )
       (f32.sub
        (f32.const 1)
        (get_local $7)
       )
      )
     )
    )
    (set_local $12
     (i32.div_s
      (i32.mul
       (i32.shr_s
        (i32.shl
         (i32.load
          (tee_local $3
           (i32.add
            (get_local $0)
            (i32.const 4580)
           )
          )
         )
         (i32.const 16)
        )
        (i32.const 16)
       )
       (i32.const 5)
      )
      (i32.const 2)
     )
    )
    (set_local $17
     (f32.convert_s/i32
      (tee_local $13
       (i32.shl
        (i32.load
         (tee_local $8
          (i32.add
           (get_local $0)
           (i32.const 4576)
          )
         )
        )
        (i32.const 1)
       )
      )
     )
    )
    (set_local $5
     (f32.const 0)
    )
    (set_local $9
     (f32.const 0)
    )
    (loop $while-in
     (if
      (i32.lt_s
       (get_local $6)
       (get_local $12)
      )
      (block
       (set_local $11
        (f32.demote/f64
         (call $_silk_energy_FLP
          (get_local $2)
          (get_local $13)
         )
        )
       )
       (set_local $11
        (call $_silk_log2
         (f64.promote/f32
          (f32.add
           (get_local $17)
           (get_local $11)
          )
         )
        )
       )
       (if
        (get_local $6)
        (set_local $5
         (f32.add
          (get_local $5)
          (f32.abs
           (f32.sub
            (get_local $11)
            (get_local $9)
           )
          )
         )
        )
       )
       (set_local $2
        (i32.add
         (get_local $2)
         (i32.shl
          (get_local $13)
          (i32.const 2)
         )
        )
       )
       (set_local $6
        (i32.add
         (get_local $6)
         (i32.const 1)
        )
       )
       (set_local $9
        (get_local $11)
       )
       (br $while-in)
      )
     )
    )
    (set_local $2
     (i32.add
      (get_local $0)
      (i32.const 4766)
     )
    )
    (if
     (f32.gt
      (get_local $5)
      (f32.mul
       (f32.convert_s/i32
        (i32.add
         (get_local $12)
         (i32.const -1)
        )
       )
       (f32.const 0.6000000238418579)
      )
     )
     (i32.store8
      (get_local $2)
      (i32.const 0)
     )
     (i32.store8
      (get_local $2)
      (i32.const 1)
     )
    )
    (set_local $5
     (get_local $7)
    )
   )
  )
  (set_local $9
   (f32.div
    (f32.const 0.9399999976158142)
    (f32.add
     (f32.mul
      (tee_local $7
       (f32.mul
        (f32.load offset=704
         (get_local $1)
        )
        (f32.const 1.0000000474974513e-03)
       )
      )
      (get_local $7)
     )
     (f32.const 1)
    )
   )
  )
  (set_local $7
   (f32.add
    (f32.mul
     (f32.convert_s/i32
      (i32.load
       (tee_local $13
        (i32.add
         (get_local $0)
         (i32.const 4672)
        )
       )
      )
     )
     (f32.const 0.0000152587890625)
    )
    (f32.mul
     (f32.load
      (get_local $19)
     )
     (f32.const 0.009999999776482582)
    )
   )
  )
  (set_local $21
   (i32.add
    (get_local $0)
    (i32.const 4604)
   )
  )
  (set_local $24
   (i32.add
    (get_local $0)
    (i32.const 4588)
   )
  )
  (set_local $6
   (i32.add
    (get_local $0)
    (i32.const 4636)
   )
  )
  (set_local $2
   (get_local $4)
  )
  (set_local $12
   (i32.const 0)
  )
  (loop $while-in1
   (if
    (i32.lt_s
     (get_local $12)
     (tee_local $4
      (i32.load
       (get_local $3)
      )
     )
    )
    (block
     (call $_silk_apply_sine_window_FLP
      (get_local $14)
      (get_local $2)
      (i32.const 1)
      (tee_local $4
       (i32.div_s
        (i32.sub
         (i32.load
          (get_local $21)
         )
         (tee_local $18
          (i32.mul
           (tee_local $10
            (i32.load
             (get_local $8)
            )
           )
           (i32.const 3)
          )
         )
        )
        (i32.const 2)
       )
      )
     )
     (drop
      (call $_memcpy
       (i32.add
        (get_local $14)
        (i32.shl
         (get_local $4)
         (i32.const 2)
        )
       )
       (i32.add
        (get_local $2)
        (i32.shl
         (get_local $4)
         (i32.const 2)
        )
       )
       (i32.mul
        (get_local $10)
        (i32.const 12)
       )
      )
     )
     (call $_silk_apply_sine_window_FLP
      (i32.add
       (get_local $14)
       (i32.shl
        (tee_local $10
         (i32.add
          (get_local $4)
          (get_local $18)
         )
        )
        (i32.const 2)
       )
      )
      (i32.add
       (get_local $2)
       (i32.shl
        (get_local $10)
        (i32.const 2)
       )
      )
      (i32.const 2)
      (get_local $4)
     )
     (set_local $18
      (i32.load
       (get_local $24)
      )
     )
     (set_local $4
      (i32.load
       (get_local $21)
      )
     )
     (set_local $10
      (i32.load
       (get_local $6)
      )
     )
     (if
      (i32.gt_s
       (i32.load
        (get_local $13)
       )
       (i32.const 0)
      )
      (call $_silk_warped_autocorrelation_FLP
       (get_local $15)
       (get_local $14)
       (get_local $7)
       (get_local $4)
       (get_local $10)
      )
      (call $_silk_autocorrelation_FLP
       (get_local $15)
       (get_local $14)
       (get_local $4)
       (i32.add
        (get_local $10)
        (i32.const 1)
       )
      )
     )
     (set_local $2
      (i32.add
       (get_local $2)
       (i32.shl
        (get_local $18)
        (i32.const 2)
       )
      )
     )
     (f32.store
      (get_local $15)
      (f32.add
       (tee_local $11
        (f32.load
         (get_local $15)
        )
       )
       (f32.add
        (f32.mul
         (get_local $11)
         (f32.const 2.9999999242136255e-05)
        )
        (f32.const 1)
       )
      )
     )
     (set_local $11
      (call $_silk_schur_FLP
       (get_local $16)
       (get_local $15)
       (i32.load
        (get_local $6)
       )
      )
     )
     (call $_silk_k2a_FLP
      (tee_local $4
       (i32.add
        (i32.add
         (get_local $1)
         (i32.const 244)
        )
        (i32.shl
         (i32.mul
          (get_local $12)
          (i32.const 24)
         )
         (i32.const 2)
        )
       )
      )
      (get_local $16)
      (i32.load
       (get_local $6)
      )
     )
     (f32.store
      (tee_local $10
       (i32.add
        (get_local $1)
        (i32.shl
         (get_local $12)
         (i32.const 2)
        )
       )
      )
      (tee_local $11
       (f32.sqrt
        (get_local $11)
       )
      )
     )
     (if
      (i32.gt_s
       (i32.load
        (get_local $13)
       )
       (i32.const 0)
      )
      (block
       (set_local $17
        (call $_warped_gain
         (get_local $4)
         (get_local $7)
         (i32.load
          (get_local $6)
         )
        )
       )
       (f32.store
        (get_local $10)
        (f32.mul
         (get_local $11)
         (get_local $17)
        )
       )
      )
     )
     (call $_silk_bwexpander_FLP
      (get_local $4)
      (i32.load
       (get_local $6)
      )
      (get_local $9)
     )
     (set_local $10
      (i32.load
       (get_local $6)
      )
     )
     (if
      (i32.gt_s
       (i32.load
        (get_local $13)
       )
       (i32.const 0)
      )
      (call $_warped_true2monic_coefs
       (get_local $4)
       (get_local $7)
       (get_local $10)
      )
      (call $_limit_coefs
       (get_local $4)
       (get_local $10)
      )
     )
     (set_local $12
      (i32.add
       (get_local $12)
       (i32.const 1)
      )
     )
     (br $while-in1)
    )
   )
  )
  (set_local $5
   (f32.demote/f64
    (call $_llvm_exp2_f64
     (f64.promote/f32
      (f32.mul
       (get_local $5)
       (f32.const -0.1599999964237213)
      )
     )
    )
   )
  )
  (set_local $6
   (i32.const 0)
  )
  (set_local $2
   (get_local $4)
  )
  (loop $while-in3
   (if
    (i32.lt_s
     (get_local $6)
     (get_local $2)
    )
    (block
     (f32.store
      (tee_local $2
       (i32.add
        (get_local $1)
        (i32.shl
         (get_local $6)
         (i32.const 2)
        )
       )
      )
      (f32.add
       (f32.mul
        (f32.load
         (get_local $2)
        )
        (get_local $5)
       )
       (f32.const 1.2483305931091309)
      )
     )
     (set_local $6
      (i32.add
       (get_local $6)
       (i32.const 1)
      )
     )
     (set_local $2
      (i32.load
       (get_local $3)
      )
     )
     (br $while-in3)
    )
   )
  )
  (set_local $5
   (f32.mul
    (f32.mul
     (f32.add
      (f32.mul
       (f32.add
        (f32.mul
         (f32.convert_s/i32
          (i32.load
           (get_local $23)
          )
         )
         (f32.const 0.000030517578125)
        )
        (f32.const -1)
       )
       (f32.const 0.5)
      )
      (f32.const 1)
     )
     (f32.const 4)
    )
    (f32.mul
     (f32.convert_s/i32
      (i32.load
       (tee_local $6
        (i32.add
         (get_local $0)
         (i32.const 4532)
        )
       )
      )
     )
     (f32.const 0.00390625)
    )
   )
  )
  (set_local $5
   (if (result f32)
    (i32.eq
     (i32.load8_s
      (get_local $20)
     )
     (i32.const 2)
    )
    (block (result f32)
     (set_local $4
      (i32.const 0)
     )
     (loop $while-in6
      (if
       (i32.lt_s
        (get_local $4)
        (get_local $2)
       )
       (block
        (f32.store
         (i32.add
          (i32.add
           (get_local $1)
           (i32.const 628)
          )
          (i32.shl
           (get_local $4)
           (i32.const 2)
          )
         )
         (f32.add
          (tee_local $7
           (f32.add
            (f32.div
             (f32.const 0.20000000298023224)
             (f32.convert_s/i32
              (i32.load
               (get_local $8)
              )
             )
            )
            (f32.div
             (f32.const 3)
             (f32.convert_s/i32
              (i32.load
               (i32.add
                (i32.add
                 (get_local $1)
                 (i32.const 228)
                )
                (i32.shl
                 (get_local $4)
                 (i32.const 2)
                )
               )
              )
             )
            )
           )
          )
          (f32.const -1)
         )
        )
        (f32.store
         (i32.add
          (i32.add
           (get_local $1)
           (i32.const 644)
          )
          (i32.shl
           (get_local $4)
           (i32.const 2)
          )
         )
         (f32.sub
          (f32.sub
           (f32.const 1)
           (get_local $7)
          )
          (f32.mul
           (get_local $7)
           (get_local $5)
          )
         )
        )
        (set_local $4
         (i32.add
          (get_local $4)
          (i32.const 1)
         )
        )
        (set_local $2
         (i32.load
          (get_local $3)
         )
        )
        (br $while-in6)
       )
      )
     )
     (f32.sub
      (f32.const -0.25)
      (f32.mul
       (f32.mul
        (f32.convert_s/i32
         (i32.load
          (get_local $6)
         )
        )
        (f32.const 0.26249998807907104)
       )
       (f32.const 0.00390625)
      )
     )
    )
    (block (result f32)
     (f32.store
      (tee_local $4
       (i32.add
        (get_local $1)
        (i32.const 628)
       )
      )
      (f32.add
       (tee_local $7
        (f32.div
         (f32.const 1.2999999523162842)
         (f32.convert_s/i32
          (i32.load
           (get_local $8)
          )
         )
        )
       )
       (f32.const -1)
      )
     )
     (f32.store
      (tee_local $6
       (i32.add
        (get_local $1)
        (i32.const 644)
       )
      )
      (f32.sub
       (f32.sub
        (f32.const 1)
        (get_local $7)
       )
       (f32.mul
        (f32.mul
         (get_local $7)
         (get_local $5)
        )
        (f32.const 0.6000000238418579)
       )
      )
     )
     (set_local $8
      (i32.const 1)
     )
     (loop $while-in8 (result f32)
      (if (result f32)
       (i32.lt_s
        (get_local $8)
        (tee_local $2
         (i32.load
          (get_local $3)
         )
        )
       )
       (block
        (i32.store
         (i32.add
          (i32.add
           (get_local $1)
           (i32.const 628)
          )
          (i32.shl
           (get_local $8)
           (i32.const 2)
          )
         )
         (i32.load
          (get_local $4)
         )
        )
        (i32.store
         (i32.add
          (i32.add
           (get_local $1)
           (i32.const 644)
          )
          (i32.shl
           (get_local $8)
           (i32.const 2)
          )
         )
         (i32.load
          (get_local $6)
         )
        )
        (set_local $8
         (i32.add
          (get_local $8)
          (i32.const 1)
         )
        )
        (br $while-in8)
       )
       (f32.const -0.25)
      )
     )
    )
   )
  )
  (set_local $7
   (if (result f32)
    (i32.eq
     (i32.load8_s
      (get_local $20)
     )
     (i32.const 2)
    )
    (f32.mul
     (f32.add
      (f32.mul
       (f32.sub
        (f32.const 1)
        (f32.mul
         (f32.sub
          (f32.const 1)
          (f32.load
           (get_local $19)
          )
         )
         (f32.load
          (get_local $22)
         )
        )
       )
       (f32.const 0.20000000298023224)
      )
      (f32.const 0.30000001192092896)
     )
     (f32.sqrt
      (f32.load
       (i32.add
        (get_local $0)
        (i32.const 10060)
       )
      )
     )
    )
    (f32.const 0)
   )
  )
  (set_local $8
   (i32.add
    (get_local $0)
    (i32.const 7172)
   )
  )
  (set_local $4
   (i32.add
    (get_local $0)
    (i32.const 7176)
   )
  )
  (set_local $0
   (i32.const 0)
  )
  (loop $while-in10
   (if
    (i32.lt_s
     (get_local $0)
     (get_local $2)
    )
    (block
     (f32.store
      (get_local $8)
      (tee_local $9
       (f32.add
        (tee_local $9
         (f32.load
          (get_local $8)
         )
        )
        (f32.mul
         (f32.sub
          (get_local $7)
          (get_local $9)
         )
         (f32.const 0.4000000059604645)
        )
       )
      )
     )
     (f32.store
      (i32.add
       (i32.add
        (get_local $1)
        (i32.const 676)
       )
       (i32.shl
        (get_local $0)
        (i32.const 2)
       )
      )
      (get_local $9)
     )
     (f32.store
      (get_local $4)
      (tee_local $9
       (f32.add
        (tee_local $9
         (f32.load
          (get_local $4)
         )
        )
        (f32.mul
         (f32.sub
          (get_local $5)
          (get_local $9)
         )
         (f32.const 0.4000000059604645)
        )
       )
      )
     )
     (f32.store
      (i32.add
       (i32.add
        (get_local $1)
        (i32.const 660)
       )
       (i32.shl
        (get_local $0)
        (i32.const 2)
       )
      )
      (get_local $9)
     )
     (set_local $0
      (i32.add
       (get_local $0)
       (i32.const 1)
      )
     )
     (set_local $2
      (i32.load
       (get_local $3)
      )
     )
     (br $while-in10)
    )
   )
  )
  (set_global $STACKTOP
   (get_local $16)
  )
 )
 (func $_silk_sigmoid (; 327 ;) (; has Stack IR ;) (param $0 f32) (result f32)
  (f32.demote/f64
   (f64.div
    (f64.const 1)
    (f64.add
     (call $Math_exp
      (f64.promote/f32
       (f32.neg
        (get_local $0)
       )
      )
     )
     (f64.const 1)
    )
   )
  )
 )
 (func $_silk_log2 (; 328 ;) (; has Stack IR ;) (param $0 f64) (result f32)
  (f32.demote/f64
   (f64.mul
    (call $_llvm_log10_f64
     (get_local $0)
    )
    (f64.const 3.32192809488736)
   )
  )
 )
 (func $_warped_gain (; 329 ;) (; has Stack IR ;) (param $0 i32) (param $1 f32) (param $2 i32) (result f32)
  (local $3 f32)
  (set_local $3
   (f32.load
    (i32.add
     (get_local $0)
     (i32.shl
      (i32.add
       (get_local $2)
       (i32.const -1)
      )
      (i32.const 2)
     )
    )
   )
  )
  (set_local $2
   (i32.add
    (get_local $2)
    (i32.const -2)
   )
  )
  (loop $while-in
   (set_local $3
    (f32.mul
     (get_local $3)
     (get_local $1)
    )
   )
   (if
    (i32.gt_s
     (get_local $2)
     (i32.const -1)
    )
    (block
     (set_local $3
      (f32.sub
       (f32.load
        (i32.add
         (get_local $0)
         (i32.shl
          (get_local $2)
          (i32.const 2)
         )
        )
       )
       (get_local $3)
      )
     )
     (set_local $2
      (i32.add
       (get_local $2)
       (i32.const -1)
      )
     )
     (br $while-in)
    )
   )
  )
  (f32.div
   (f32.const 1)
   (f32.add
    (get_local $3)
    (f32.const 1)
   )
  )
 )
 (func $_warped_true2monic_coefs (; 330 ;) (; has Stack IR ;) (param $0 i32) (param $1 f32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 f32)
  (local $7 f32)
  (local $8 i32)
  (local $9 f32)
  (local $10 f32)
  (set_local $4
   (get_local $2)
  )
  (loop $while-in
   (set_local $3
    (i32.add
     (get_local $4)
     (i32.const -1)
    )
   )
   (if
    (i32.gt_s
     (get_local $4)
     (i32.const 1)
    )
    (block
     (f32.store
      (tee_local $4
       (i32.add
        (get_local $0)
        (i32.shl
         (i32.add
          (get_local $4)
          (i32.const -2)
         )
         (i32.const 2)
        )
       )
      )
      (f32.sub
       (f32.load
        (get_local $4)
       )
       (f32.mul
        (f32.load
         (i32.add
          (get_local $0)
          (i32.shl
           (get_local $3)
           (i32.const 2)
          )
         )
        )
        (get_local $1)
       )
      )
     )
     (set_local $4
      (get_local $3)
     )
     (br $while-in)
    )
   )
  )
  (set_local $6
   (f32.div
    (tee_local $9
     (f32.sub
      (f32.const 1)
      (f32.mul
       (get_local $1)
       (get_local $1)
      )
     )
    )
    (f32.add
     (f32.mul
      (f32.load
       (get_local $0)
      )
      (get_local $1)
     )
     (f32.const 1)
    )
   )
  )
  (set_local $4
   (i32.const 0)
  )
  (loop $while-in1
   (if
    (i32.lt_s
     (get_local $4)
     (get_local $2)
    )
    (block
     (f32.store
      (tee_local $3
       (i32.add
        (get_local $0)
        (i32.shl
         (get_local $4)
         (i32.const 2)
        )
       )
      )
      (f32.mul
       (f32.load
        (get_local $3)
       )
       (get_local $6)
      )
     )
     (set_local $4
      (i32.add
       (get_local $4)
       (i32.const 1)
      )
     )
     (br $while-in1)
    )
   )
  )
  (set_local $4
   (i32.const 0)
  )
  (block $__rjto$0
   (loop $while-in3
    (block $while-out2
     (br_if $__rjto$0
      (i32.ge_u
       (get_local $8)
       (i32.const 10)
      )
     )
     (set_local $7
      (f32.const -1)
     )
     (set_local $3
      (i32.const 0)
     )
     (loop $while-in5
      (if
       (i32.lt_s
        (get_local $3)
        (get_local $2)
       )
       (block
        (if
         (tee_local $5
          (f32.gt
           (tee_local $10
            (f32.abs
             (f32.load
              (i32.add
               (get_local $0)
               (i32.shl
                (get_local $3)
                (i32.const 2)
               )
              )
             )
            )
           )
           (get_local $7)
          )
         )
         (set_local $4
          (get_local $3)
         )
        )
        (if
         (get_local $5)
         (set_local $7
          (get_local $10)
         )
        )
        (set_local $3
         (i32.add
          (get_local $3)
          (i32.const 1)
         )
        )
        (br $while-in5)
       )
      )
     )
     (br_if $__rjto$0
      (f32.le
       (get_local $7)
       (f32.const 3.999000072479248)
      )
     )
     (set_local $3
      (i32.const 1)
     )
     (loop $while-in7
      (if
       (i32.lt_s
        (get_local $3)
        (get_local $2)
       )
       (block
        (f32.store
         (tee_local $5
          (i32.add
           (get_local $0)
           (i32.shl
            (i32.add
             (get_local $3)
             (i32.const -1)
            )
            (i32.const 2)
           )
          )
         )
         (f32.add
          (f32.load
           (get_local $5)
          )
          (f32.mul
           (f32.load
            (i32.add
             (get_local $0)
             (i32.shl
              (get_local $3)
              (i32.const 2)
             )
            )
           )
           (get_local $1)
          )
         )
        )
        (set_local $3
         (i32.add
          (get_local $3)
          (i32.const 1)
         )
        )
        (br $while-in7)
       )
      )
     )
     (set_local $6
      (f32.div
       (f32.const 1)
       (get_local $6)
      )
     )
     (set_local $3
      (i32.const 0)
     )
     (loop $while-in9
      (if
       (i32.lt_s
        (get_local $3)
        (get_local $2)
       )
       (block
        (f32.store
         (tee_local $5
          (i32.add
           (get_local $0)
           (i32.shl
            (get_local $3)
            (i32.const 2)
           )
          )
         )
         (f32.mul
          (f32.load
           (get_local $5)
          )
          (get_local $6)
         )
        )
        (set_local $3
         (i32.add
          (get_local $3)
          (i32.const 1)
         )
        )
        (br $while-in9)
       )
      )
     )
     (call $_silk_bwexpander_FLP
      (get_local $0)
      (get_local $2)
      (f32.sub
       (f32.const 0.9900000095367432)
       (f32.div
        (f32.mul
         (f32.add
          (f32.mul
           (f32.convert_s/i32
            (get_local $8)
           )
           (f32.const 0.10000000149011612)
          )
          (f32.const 0.800000011920929)
         )
         (f32.add
          (get_local $7)
          (f32.const -3.999000072479248)
         )
        )
        (f32.mul
         (get_local $7)
         (f32.convert_s/i32
          (i32.add
           (get_local $4)
           (i32.const 1)
          )
         )
        )
       )
      )
     )
     (set_local $3
      (get_local $2)
     )
     (loop $while-in11
      (set_local $5
       (i32.add
        (get_local $3)
        (i32.const -1)
       )
      )
      (if
       (i32.gt_s
        (get_local $3)
        (i32.const 1)
       )
       (block
        (f32.store
         (tee_local $3
          (i32.add
           (get_local $0)
           (i32.shl
            (i32.add
             (get_local $3)
             (i32.const -2)
            )
            (i32.const 2)
           )
          )
         )
         (f32.sub
          (f32.load
           (get_local $3)
          )
          (f32.mul
           (f32.load
            (i32.add
             (get_local $0)
             (i32.shl
              (get_local $5)
              (i32.const 2)
             )
            )
           )
           (get_local $1)
          )
         )
        )
        (set_local $3
         (get_local $5)
        )
        (br $while-in11)
       )
      )
     )
     (set_local $6
      (f32.div
       (get_local $9)
       (f32.add
        (f32.mul
         (f32.load
          (get_local $0)
         )
         (get_local $1)
        )
        (f32.const 1)
       )
      )
     )
     (set_local $3
      (i32.const 0)
     )
     (loop $while-in13
      (if
       (i32.lt_s
        (get_local $3)
        (get_local $2)
       )
       (block
        (f32.store
         (tee_local $5
          (i32.add
           (get_local $0)
           (i32.shl
            (get_local $3)
            (i32.const 2)
           )
          )
         )
         (f32.mul
          (f32.load
           (get_local $5)
          )
          (get_local $6)
         )
        )
        (set_local $3
         (i32.add
          (get_local $3)
          (i32.const 1)
         )
        )
        (br $while-in13)
       )
      )
     )
     (set_local $8
      (i32.add
       (get_local $8)
       (i32.const 1)
      )
     )
     (br $while-in3)
    )
   )
  )
 )
 (func $_limit_coefs (; 331 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 f32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 f32)
  (local $7 i32)
  (block $__rjto$0
   (loop $while-in
    (block $while-out
     (br_if $__rjto$0
      (i32.ge_u
       (get_local $4)
       (i32.const 10)
      )
     )
     (set_local $2
      (f32.const -1)
     )
     (set_local $3
      (i32.const 0)
     )
     (loop $while-in1
      (if
       (i32.lt_s
        (get_local $3)
        (get_local $1)
       )
       (block
        (if
         (tee_local $7
          (f32.gt
           (tee_local $6
            (f32.abs
             (f32.load
              (i32.add
               (get_local $0)
               (i32.shl
                (get_local $3)
                (i32.const 2)
               )
              )
             )
            )
           )
           (get_local $2)
          )
         )
         (set_local $5
          (get_local $3)
         )
        )
        (if
         (get_local $7)
         (set_local $2
          (get_local $6)
         )
        )
        (set_local $3
         (i32.add
          (get_local $3)
          (i32.const 1)
         )
        )
        (br $while-in1)
       )
      )
     )
     (br_if $__rjto$0
      (f32.le
       (get_local $2)
       (f32.const 3.999000072479248)
      )
     )
     (call $_silk_bwexpander_FLP
      (get_local $0)
      (get_local $1)
      (f32.sub
       (f32.const 0.9900000095367432)
       (f32.div
        (f32.mul
         (f32.add
          (f32.mul
           (f32.convert_s/i32
            (get_local $4)
           )
           (f32.const 0.10000000149011612)
          )
          (f32.const 0.800000011920929)
         )
         (f32.add
          (get_local $2)
          (f32.const -3.999000072479248)
         )
        )
        (f32.mul
         (get_local $2)
         (f32.convert_s/i32
          (i32.add
           (get_local $5)
           (i32.const 1)
          )
         )
        )
       )
      )
     )
     (set_local $4
      (i32.add
       (get_local $4)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
 )
 (func $_silk_process_gains_FLP (; 332 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 f32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 f32)
  (set_local $7
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.eq
    (i32.load8_s
     (tee_local $8
      (i32.add
       (get_local $0)
       (i32.const 4765)
      )
     )
    )
    (i32.const 2)
   )
   (block
    (set_local $5
     (f32.sub
      (f32.const 1)
      (f32.mul
       (call $_silk_sigmoid
        (f32.mul
         (f32.add
          (f32.load offset=708
           (get_local $1)
          )
          (f32.const -12)
         )
         (f32.const 0.25)
        )
       )
       (f32.const 0.5)
      )
     )
    )
    (set_local $4
     (i32.add
      (get_local $0)
      (i32.const 4580)
     )
    )
    (loop $while-in
     (if
      (i32.lt_s
       (get_local $3)
       (i32.load
        (get_local $4)
       )
      )
      (block
       (f32.store
        (tee_local $6
         (i32.add
          (get_local $1)
          (i32.shl
           (get_local $3)
           (i32.const 2)
          )
         )
        )
        (f32.mul
         (f32.load
          (get_local $6)
         )
         (get_local $5)
        )
       )
       (set_local $3
        (i32.add
         (get_local $3)
         (i32.const 1)
        )
       )
       (br $while-in)
      )
     )
    )
   )
   (set_local $4
    (i32.add
     (get_local $0)
     (i32.const 4580)
    )
   )
  )
  (set_local $9
   (f32.demote/f64
    (f64.div
     (call $_llvm_exp2_f64
      (f64.promote/f32
       (f32.mul
        (f32.sub
         (f32.const 21)
         (f32.mul
          (f32.convert_s/i32
           (i32.load
            (i32.add
             (get_local $0)
             (i32.const 4716)
            )
           )
          )
          (f32.const 0.0078125)
         )
        )
        (f32.const 0.33000001311302185)
       )
      )
     )
     (f64.convert_s/i32
      (i32.load
       (i32.add
        (get_local $0)
        (i32.const 4588)
       )
      )
     )
    )
   )
  )
  (set_local $3
   (i32.const 0)
  )
  (loop $while-in1
   (if
    (i32.lt_s
     (get_local $3)
     (tee_local $6
      (i32.load
       (get_local $4)
      )
     )
    )
    (block
     (set_local $5
      (f32.sqrt
       (f32.add
        (f32.mul
         (tee_local $5
          (f32.load
           (tee_local $6
            (i32.add
             (get_local $1)
             (i32.shl
              (get_local $3)
              (i32.const 2)
             )
            )
           )
          )
         )
         (get_local $5)
        )
        (f32.mul
         (f32.load
          (i32.add
           (i32.add
            (get_local $1)
            (i32.const 712)
           )
           (i32.shl
            (get_local $3)
            (i32.const 2)
           )
          )
         )
         (get_local $9)
        )
       )
      )
     )
     (f32.store
      (get_local $6)
      (if (result f32)
       (f32.lt
        (get_local $5)
        (f32.const 32767)
       )
       (get_local $5)
       (f32.const 32767)
      )
     )
     (set_local $3
      (i32.add
       (get_local $3)
       (i32.const 1)
      )
     )
     (br $while-in1)
    )
   )
  )
  (set_local $3
   (i32.const 0)
  )
  (loop $while-in3
   (if
    (i32.lt_s
     (get_local $3)
     (get_local $6)
    )
    (block
     (i32.store
      (i32.add
       (get_local $7)
       (i32.shl
        (get_local $3)
        (i32.const 2)
       )
      )
      (i32.trunc_s/f32
       (f32.mul
        (f32.load
         (i32.add
          (get_local $1)
          (i32.shl
           (get_local $3)
           (i32.const 2)
          )
         )
        )
        (f32.const 65536)
       )
      )
     )
     (set_local $3
      (i32.add
       (get_local $3)
       (i32.const 1)
      )
     )
     (br $while-in3)
    )
   )
  )
  (drop
   (call $_memcpy
    (i32.add
     (get_local $1)
     (i32.const 728)
    )
    (get_local $7)
    (i32.shl
     (get_local $6)
     (i32.const 2)
    )
   )
  )
  (i32.store8 offset=744
   (get_local $1)
   (i32.load8_s
    (tee_local $3
     (i32.add
      (get_local $0)
      (i32.const 7168)
     )
    )
   )
  )
  (call $_silk_gains_quant
   (i32.add
    (get_local $0)
    (i32.const 4736)
   )
   (get_local $7)
   (get_local $3)
   (i32.eq
    (get_local $2)
    (i32.const 2)
   )
   (i32.load
    (get_local $4)
   )
  )
  (set_local $2
   (i32.const 0)
  )
  (loop $while-in5
   (if
    (i32.lt_s
     (get_local $2)
     (i32.load
      (get_local $4)
     )
    )
    (block
     (f32.store
      (i32.add
       (get_local $1)
       (i32.shl
        (get_local $2)
        (i32.const 2)
       )
      )
      (f32.mul
       (f32.convert_s/i32
        (i32.load
         (i32.add
          (get_local $7)
          (i32.shl
           (get_local $2)
           (i32.const 2)
          )
         )
        )
       )
       (f32.const 0.0000152587890625)
      )
     )
     (set_local $2
      (i32.add
       (get_local $2)
       (i32.const 1)
      )
     )
     (br $while-in5)
    )
   )
  )
  (set_local $2
   (if (result i32)
    (i32.eq
     (tee_local $4
      (i32.load8_s
       (get_local $8)
      )
     )
     (i32.const 2)
    )
    (block (result i32)
     (set_local $2
      (i32.add
       (get_local $0)
       (i32.const 4766)
      )
     )
     (if (result i32)
      (f32.gt
       (f32.add
        (f32.load offset=708
         (get_local $1)
        )
        (f32.mul
         (f32.convert_s/i32
          (i32.load
           (i32.add
            (get_local $0)
            (i32.const 4712)
           )
          )
         )
         (f32.const 0.000030517578125)
        )
       )
       (f32.const 1)
      )
      (block (result i32)
       (i32.store8
        (get_local $2)
        (i32.const 0)
       )
       (i32.const 0)
      )
      (block (result i32)
       (i32.store8
        (get_local $2)
        (i32.const 1)
       )
       (i32.const 1)
      )
     )
    )
    (i32.load8_s
     (i32.add
      (get_local $0)
      (i32.const 4766)
     )
    )
   )
  )
  (f32.store offset=692
   (get_local $1)
   (f32.add
    (f32.add
     (f32.add
      (f32.add
       (f32.add
        (f32.mul
         (f32.convert_s/i32
          (i32.load
           (i32.add
            (get_local $0)
            (i32.const 4628)
           )
          )
         )
         (f32.const -0.05000000074505806)
        )
        (f32.const 1.2000000476837158)
       )
       (f32.mul
        (f32.mul
         (f32.convert_s/i32
          (i32.load
           (i32.add
            (get_local $0)
            (i32.const 4532)
           )
          )
         )
         (f32.const -0.20000000298023224)
        )
        (f32.const 0.00390625)
       )
      )
      (f32.mul
       (f32.load offset=696
        (get_local $1)
       )
       (f32.const -0.10000000149011612)
      )
     )
     (f32.mul
      (f32.load offset=700
       (get_local $1)
      )
      (f32.const -0.20000000298023224)
     )
    )
    (f32.mul
     (f32.mul
      (f32.convert_s/i32
       (i32.load16_s
        (i32.add
         (i32.add
          (i32.shl
           (i32.shr_s
            (get_local $4)
            (i32.const 1)
           )
           (i32.const 2)
          )
          (i32.const 41164)
         )
         (i32.shl
          (i32.shr_s
           (i32.shl
            (get_local $2)
            (i32.const 24)
           )
           (i32.const 24)
          )
          (i32.const 1)
         )
        )
       )
      )
      (f32.const 0.0009765625)
     )
     (f32.const 0.800000011920929)
    )
   )
  )
  (set_global $STACKTOP
   (get_local $7)
  )
 )
 (func $_silk_residual_energy_FLP (; 333 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32)
  (local $7 f32)
  (local $8 f64)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (set_local $9
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.const 768)
   )
  )
  (set_local $10
   (i32.add
    (get_local $9)
    (i32.shl
     (get_local $6)
     (i32.const 2)
    )
   )
  )
  (call $_silk_LPC_analysis_filter_FLP
   (get_local $9)
   (get_local $2)
   (get_local $1)
   (tee_local $12
    (i32.shl
     (tee_local $11
      (i32.add
       (get_local $6)
       (get_local $4)
      )
     )
     (i32.const 1)
    )
   )
   (get_local $6)
  )
  (set_local $8
   (f64.promote/f32
    (f32.mul
     (tee_local $7
      (f32.load
       (get_local $3)
      )
     )
     (get_local $7)
    )
   )
  )
  (set_local $7
   (f32.demote/f64
    (f64.mul
     (call $_silk_energy_FLP
      (get_local $10)
      (get_local $4)
     )
     (get_local $8)
    )
   )
  )
  (f32.store
   (get_local $0)
   (get_local $7)
  )
  (set_local $8
   (f64.promote/f32
    (f32.mul
     (tee_local $7
      (f32.load offset=4
       (get_local $3)
      )
     )
     (get_local $7)
    )
   )
  )
  (set_local $7
   (f32.demote/f64
    (f64.mul
     (call $_silk_energy_FLP
      (tee_local $11
       (i32.add
        (get_local $10)
        (i32.shl
         (get_local $11)
         (i32.const 2)
        )
       )
      )
      (get_local $4)
     )
     (get_local $8)
    )
   )
  )
  (f32.store offset=4
   (get_local $0)
   (get_local $7)
  )
  (if
   (i32.ne
    (get_local $5)
    (i32.const 4)
   )
   (block
    (set_global $STACKTOP
     (get_local $9)
    )
    (return)
   )
  )
  (call $_silk_LPC_analysis_filter_FLP
   (get_local $9)
   (i32.sub
    (get_local $2)
    (i32.const -64)
   )
   (i32.add
    (get_local $1)
    (i32.shl
     (get_local $12)
     (i32.const 2)
    )
   )
   (get_local $12)
   (get_local $6)
  )
  (set_local $8
   (f64.promote/f32
    (f32.mul
     (tee_local $7
      (f32.load offset=8
       (get_local $3)
      )
     )
     (get_local $7)
    )
   )
  )
  (set_local $7
   (f32.demote/f64
    (f64.mul
     (call $_silk_energy_FLP
      (get_local $10)
      (get_local $4)
     )
     (get_local $8)
    )
   )
  )
  (f32.store offset=8
   (get_local $0)
   (get_local $7)
  )
  (set_local $8
   (f64.promote/f32
    (f32.mul
     (tee_local $7
      (f32.load offset=12
       (get_local $3)
      )
     )
     (get_local $7)
    )
   )
  )
  (set_local $7
   (f32.demote/f64
    (f64.mul
     (call $_silk_energy_FLP
      (get_local $11)
      (get_local $4)
     )
     (get_local $8)
    )
   )
  )
  (f32.store offset=12
   (get_local $0)
   (get_local $7)
  )
  (set_global $STACKTOP
   (get_local $9)
  )
 )
 (func $_silk_warped_autocorrelation_FLP (; 334 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 f32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 f64)
  (local $8 i32)
  (local $9 i32)
  (local $10 f64)
  (local $11 i32)
  (local $12 f64)
  (local $13 f64)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 f64)
  (local $18 i32)
  (local $19 f64)
  (set_local $5
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.const 416)
   )
  )
  (drop
   (call $_memset
    (tee_local $6
     (i32.add
      (get_local $5)
      (i32.const 208)
     )
    )
    (i32.const 0)
    (i32.const 200)
   )
  )
  (drop
   (call $_memset
    (get_local $5)
    (i32.const 0)
    (i32.const 200)
   )
  )
  (if
   (i32.and
    (get_local $4)
    (i32.const 1)
   )
   (call $_celt_fatal
    (i32.const 48238)
    (i32.const 48275)
    (i32.const 49)
   )
  )
  (set_local $13
   (f64.promote/f32
    (get_local $2)
   )
  )
  (set_local $15
   (i32.add
    (get_local $6)
    (i32.shl
     (get_local $4)
     (i32.const 3)
    )
   )
  )
  (set_local $14
   (i32.add
    (get_local $5)
    (i32.shl
     (get_local $4)
     (i32.const 3)
    )
   )
  )
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $9)
     (get_local $3)
    )
    (block
     (set_local $7
      (f64.promote/f32
       (f32.load
        (i32.add
         (get_local $1)
         (i32.shl
          (get_local $9)
          (i32.const 2)
         )
        )
       )
      )
     )
     (set_local $8
      (i32.const 0)
     )
     (loop $while-in1
      (if
       (i32.lt_s
        (get_local $8)
        (get_local $4)
       )
       (block
        (set_local $12
         (f64.add
          (get_local $10)
          (f64.mul
           (f64.sub
            (tee_local $17
             (f64.load
              (tee_local $16
               (i32.add
                (get_local $6)
                (i32.shl
                 (tee_local $11
                  (i32.or
                   (get_local $8)
                   (i32.const 1)
                  )
                 )
                 (i32.const 3)
                )
               )
              )
             )
            )
            (get_local $7)
           )
           (get_local $13)
          )
         )
        )
        (f64.store
         (i32.add
          (get_local $6)
          (i32.shl
           (get_local $8)
           (i32.const 3)
          )
         )
         (get_local $7)
        )
        (f64.store
         (tee_local $18
          (i32.add
           (get_local $5)
           (i32.shl
            (get_local $8)
            (i32.const 3)
           )
          )
         )
         (f64.add
          (f64.load
           (get_local $18)
          )
          (f64.mul
           (tee_local $19
            (f64.load
             (get_local $6)
            )
           )
           (get_local $7)
          )
         )
        )
        (set_local $10
         (f64.load
          (i32.add
           (get_local $6)
           (i32.shl
            (tee_local $8
             (i32.add
              (get_local $8)
              (i32.const 2)
             )
            )
            (i32.const 3)
           )
          )
         )
        )
        (f64.store
         (get_local $16)
         (get_local $12)
        )
        (f64.store
         (tee_local $11
          (i32.add
           (get_local $5)
           (i32.shl
            (get_local $11)
            (i32.const 3)
           )
          )
         )
         (f64.add
          (f64.load
           (get_local $11)
          )
          (f64.mul
           (get_local $19)
           (get_local $12)
          )
         )
        )
        (set_local $7
         (f64.add
          (get_local $17)
          (f64.mul
           (f64.sub
            (get_local $10)
            (get_local $12)
           )
           (get_local $13)
          )
         )
        )
        (br $while-in1)
       )
      )
     )
     (f64.store
      (get_local $15)
      (get_local $7)
     )
     (f64.store
      (get_local $14)
      (f64.add
       (f64.load
        (get_local $14)
       )
       (f64.mul
        (tee_local $10
         (f64.load
          (get_local $6)
         )
        )
        (get_local $7)
       )
      )
     )
     (set_local $9
      (i32.add
       (get_local $9)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (set_local $1
   (i32.const 0)
  )
  (loop $while-in3
   (if
    (i32.le_s
     (get_local $1)
     (get_local $4)
    )
    (block
     (f32.store
      (i32.add
       (get_local $0)
       (i32.shl
        (get_local $1)
        (i32.const 2)
       )
      )
      (f32.demote/f64
       (f64.load
        (i32.add
         (get_local $5)
         (i32.shl
          (get_local $1)
          (i32.const 3)
         )
        )
       )
      )
     )
     (set_local $1
      (i32.add
       (get_local $1)
       (i32.const 1)
      )
     )
     (br $while-in3)
    )
   )
  )
  (set_global $STACKTOP
   (get_local $5)
  )
 )
 (func $_silk_A2NLSF_FLP (; 335 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (set_local $4
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.sub
    (get_global $STACKTOP)
    (i32.const -64)
   )
  )
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $3)
     (get_local $2)
    )
    (block
     (set_local $5
      (call $_silk_float2int
       (f32.mul
        (f32.load
         (i32.add
          (get_local $1)
          (i32.shl
           (get_local $3)
           (i32.const 2)
          )
         )
        )
        (f32.const 65536)
       )
      )
     )
     (i32.store
      (i32.add
       (get_local $4)
       (i32.shl
        (get_local $3)
        (i32.const 2)
       )
      )
      (get_local $5)
     )
     (set_local $3
      (i32.add
       (get_local $3)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (call $_silk_A2NLSF
   (get_local $0)
   (get_local $4)
   (get_local $2)
  )
  (set_global $STACKTOP
   (get_local $4)
  )
 )
 (func $_silk_float2int (; 336 ;) (; has Stack IR ;) (param $0 f32) (result i32)
  (call $_lrintf
   (get_local $0)
  )
 )
 (func $_silk_NLSF2A_FLP (; 337 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (set_local $3
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.const 32)
   )
  )
  (call $_silk_NLSF2A
   (get_local $3)
   (get_local $1)
   (get_local $2)
  )
  (set_local $1
   (i32.const 0)
  )
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $1)
     (get_local $2)
    )
    (block
     (f32.store
      (i32.add
       (get_local $0)
       (i32.shl
        (get_local $1)
        (i32.const 2)
       )
      )
      (f32.mul
       (f32.convert_s/i32
        (i32.load16_s
         (i32.add
          (get_local $3)
          (i32.shl
           (get_local $1)
           (i32.const 1)
          )
         )
        )
       )
       (f32.const 0.000244140625)
      )
     )
     (set_local $1
      (i32.add
       (get_local $1)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (set_global $STACKTOP
   (get_local $3)
  )
 )
 (func $_silk_process_NLSFs_FLP (; 338 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (set_local $4
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.sub
    (get_global $STACKTOP)
    (i32.const -64)
   )
  )
  (call $_silk_process_NLSFs
   (get_local $0)
   (get_local $4)
   (get_local $2)
   (get_local $3)
  )
  (set_local $3
   (i32.add
    (get_local $0)
    (i32.const 4640)
   )
  )
  (set_local $0
   (i32.const 0)
  )
  (loop $while-in
   (if
    (i32.ne
     (get_local $0)
     (i32.const 2)
    )
    (block
     (set_local $2
      (i32.const 0)
     )
     (loop $while-in1
      (if
       (i32.lt_s
        (get_local $2)
        (i32.load
         (get_local $3)
        )
       )
       (block
        (f32.store
         (i32.add
          (i32.add
           (get_local $1)
           (i32.shl
            (get_local $0)
            (i32.const 6)
           )
          )
          (i32.shl
           (get_local $2)
           (i32.const 2)
          )
         )
         (f32.mul
          (f32.convert_s/i32
           (i32.load16_s
            (i32.add
             (i32.add
              (get_local $4)
              (i32.shl
               (get_local $0)
               (i32.const 5)
              )
             )
             (i32.shl
              (get_local $2)
              (i32.const 1)
             )
            )
           )
          )
          (f32.const 0.000244140625)
         )
        )
        (set_local $2
         (i32.add
          (get_local $2)
          (i32.const 1)
         )
        )
        (br $while-in1)
       )
      )
     )
     (set_local $0
      (i32.add
       (get_local $0)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (set_global $STACKTOP
   (get_local $4)
  )
 )
 (func $_silk_NSQ_wrapper_FLP (; 339 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 f32)
  (set_local $10
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.const 1008)
   )
  )
  (set_local $15
   (i32.add
    (get_local $10)
    (i32.const 368)
   )
  )
  (set_local $16
   (i32.add
    (get_local $10)
    (i32.const 352)
   )
  )
  (set_local $17
   (i32.add
    (get_local $10)
    (i32.const 288)
   )
  )
  (set_local $18
   (i32.add
    (get_local $10)
    (i32.const 240)
   )
  )
  (set_local $19
   (i32.add
    (get_local $10)
    (i32.const 48)
   )
  )
  (set_local $20
   (i32.add
    (get_local $10)
    (i32.const 32)
   )
  )
  (set_local $21
   (i32.add
    (get_local $10)
    (i32.const 16)
   )
  )
  (set_local $12
   (i32.load
    (i32.add
     (get_local $0)
     (i32.const 4580)
    )
   )
  )
  (set_local $9
   (i32.add
    (get_local $0)
    (i32.const 4636)
   )
  )
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $13)
     (get_local $12)
    )
    (block
     (set_local $14
      (i32.load
       (get_local $9)
      )
     )
     (set_local $6
      (i32.mul
       (get_local $13)
       (i32.const 24)
      )
     )
     (set_local $11
      (i32.const 0)
     )
     (loop $while-in1
      (if
       (i32.lt_s
        (get_local $11)
        (get_local $14)
       )
       (block
        (set_local $8
         (i32.and
          (call $_silk_float2int
           (f32.mul
            (f32.load
             (i32.add
              (i32.add
               (get_local $1)
               (i32.const 244)
              )
              (i32.shl
               (tee_local $7
                (i32.add
                 (get_local $6)
                 (get_local $11)
                )
               )
               (i32.const 2)
              )
             )
            )
            (f32.const 8192)
           )
          )
          (i32.const 65535)
         )
        )
        (i32.store16
         (i32.add
          (get_local $19)
          (i32.shl
           (get_local $7)
           (i32.const 1)
          )
         )
         (get_local $8)
        )
        (set_local $11
         (i32.add
          (get_local $11)
          (i32.const 1)
         )
        )
        (br $while-in1)
       )
      )
     )
     (set_local $13
      (i32.add
       (get_local $13)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (set_local $6
   (i32.const 0)
  )
  (loop $while-in3
   (if
    (i32.lt_s
     (get_local $6)
     (get_local $12)
    )
    (block
     (set_local $7
      (i32.shl
       (call $_silk_float2int
        (f32.mul
         (f32.load
          (i32.add
           (i32.add
            (get_local $1)
            (i32.const 644)
           )
           (i32.shl
            (get_local $6)
            (i32.const 2)
           )
          )
         )
         (f32.const 16384)
        )
       )
       (i32.const 16)
      )
     )
     (set_local $8
      (i32.and
       (call $_silk_float2int
        (f32.mul
         (f32.load
          (i32.add
           (i32.add
            (get_local $1)
            (i32.const 628)
           )
           (i32.shl
            (get_local $6)
            (i32.const 2)
           )
          )
         )
         (f32.const 16384)
        )
       )
       (i32.const 65535)
      )
     )
     (i32.store
      (i32.add
       (get_local $20)
       (i32.shl
        (get_local $6)
        (i32.const 2)
       )
      )
      (i32.or
       (get_local $7)
       (get_local $8)
      )
     )
     (set_local $8
      (call $_silk_float2int
       (f32.mul
        (f32.load
         (i32.add
          (i32.add
           (get_local $1)
           (i32.const 660)
          )
          (i32.shl
           (get_local $6)
           (i32.const 2)
          )
         )
        )
        (f32.const 16384)
       )
      )
     )
     (i32.store
      (i32.add
       (get_local $21)
       (i32.shl
        (get_local $6)
        (i32.const 2)
       )
      )
      (get_local $8)
     )
     (set_local $8
      (call $_silk_float2int
       (f32.mul
        (f32.load
         (i32.add
          (i32.add
           (get_local $1)
           (i32.const 676)
          )
          (i32.shl
           (get_local $6)
           (i32.const 2)
          )
         )
        )
        (f32.const 16384)
       )
      )
     )
     (i32.store
      (i32.add
       (get_local $10)
       (i32.shl
        (get_local $6)
        (i32.const 2)
       )
      )
      (get_local $8)
     )
     (set_local $6
      (i32.add
       (get_local $6)
       (i32.const 1)
      )
     )
     (br $while-in3)
    )
   )
  )
  (set_local $22
   (f32.mul
    (f32.load offset=692
     (get_local $1)
    )
    (f32.const 1024)
   )
  )
  (set_local $7
   (i32.mul
    (get_local $12)
    (i32.const 5)
   )
  )
  (set_local $6
   (i32.const 0)
  )
  (loop $while-in5
   (if
    (i32.lt_s
     (get_local $6)
     (get_local $7)
    )
    (block
     (set_local $8
      (i32.and
       (call $_silk_float2int
        (f32.mul
         (f32.load
          (i32.add
           (i32.add
            (get_local $1)
            (i32.const 144)
           )
           (i32.shl
            (get_local $6)
            (i32.const 2)
           )
          )
         )
         (f32.const 16384)
        )
       )
       (i32.const 65535)
      )
     )
     (i32.store16
      (i32.add
       (get_local $18)
       (i32.shl
        (get_local $6)
        (i32.const 1)
       )
      )
      (get_local $8)
     )
     (set_local $6
      (i32.add
       (get_local $6)
       (i32.const 1)
      )
     )
     (br $while-in5)
    )
   )
  )
  (set_local $14
   (call $_silk_float2int
    (get_local $22)
   )
  )
  (set_local $6
   (i32.add
    (get_local $0)
    (i32.const 4640)
   )
  )
  (set_local $11
   (i32.const 0)
  )
  (loop $while-in7
   (if
    (i32.ne
     (get_local $11)
     (i32.const 2)
    )
    (block
     (set_local $7
      (i32.load
       (get_local $6)
      )
     )
     (set_local $9
      (i32.const 0)
     )
     (loop $while-in9
      (if
       (i32.lt_s
        (get_local $9)
        (get_local $7)
       )
       (block
        (set_local $8
         (i32.and
          (call $_silk_float2int
           (f32.mul
            (f32.load
             (i32.add
              (i32.add
               (i32.add
                (get_local $1)
                (i32.const 16)
               )
               (i32.shl
                (get_local $11)
                (i32.const 6)
               )
              )
              (i32.shl
               (get_local $9)
               (i32.const 2)
              )
             )
            )
            (f32.const 4096)
           )
          )
          (i32.const 65535)
         )
        )
        (i32.store16
         (i32.add
          (i32.add
           (get_local $17)
           (i32.shl
            (get_local $11)
            (i32.const 5)
           )
          )
          (i32.shl
           (get_local $9)
           (i32.const 1)
          )
         )
         (get_local $8)
        )
        (set_local $9
         (i32.add
          (get_local $9)
          (i32.const 1)
         )
        )
        (br $while-in9)
       )
      )
     )
     (set_local $11
      (i32.add
       (get_local $11)
       (i32.const 1)
      )
     )
     (br $while-in7)
    )
   )
  )
  (set_local $7
   (i32.const 0)
  )
  (loop $while-in11
   (if
    (i32.lt_s
     (get_local $7)
     (get_local $12)
    )
    (block
     (set_local $8
      (call $_silk_float2int
       (f32.mul
        (f32.load
         (i32.add
          (get_local $1)
          (i32.shl
           (get_local $7)
           (i32.const 2)
          )
         )
        )
        (f32.const 65536)
       )
      )
     )
     (i32.store
      (i32.add
       (get_local $16)
       (i32.shl
        (get_local $7)
        (i32.const 2)
       )
      )
      (get_local $8)
     )
     (set_local $7
      (i32.add
       (get_local $7)
       (i32.const 1)
      )
     )
     (br $while-in11)
    )
   )
  )
  (set_local $6
   (if (result i32)
    (i32.eq
     (i32.load8_s offset=29
      (get_local $2)
     )
     (i32.const 2)
    )
    (i32.load16_s
     (i32.add
      (i32.shl
       (i32.load8_s offset=33
        (get_local $2)
       )
       (i32.const 1)
      )
      (i32.const 41172)
     )
    )
    (i32.const 0)
   )
  )
  (set_local $7
   (i32.load
    (i32.add
     (get_local $0)
     (i32.const 4584)
    )
   )
  )
  (set_local $9
   (i32.const 0)
  )
  (loop $while-in13
   (if
    (i32.lt_s
     (get_local $9)
     (get_local $7)
    )
    (block
     (set_local $8
      (i32.and
       (call $_silk_float2int
        (f32.load
         (i32.add
          (get_local $5)
          (i32.shl
           (get_local $9)
           (i32.const 2)
          )
         )
        )
       )
       (i32.const 65535)
      )
     )
     (i32.store16
      (i32.add
       (get_local $15)
       (i32.shl
        (get_local $9)
        (i32.const 1)
       )
      )
      (get_local $8)
     )
     (set_local $9
      (i32.add
       (get_local $9)
       (i32.const 1)
      )
     )
     (br $while-in13)
    )
   )
  )
  (if
   (i32.le_s
    (i32.load
     (i32.add
      (get_local $0)
      (i32.const 4628)
     )
    )
    (i32.const 1)
   )
   (if
    (i32.le_s
     (i32.load
      (i32.add
       (get_local $0)
       (i32.const 4672)
      )
     )
     (i32.const 0)
    )
    (block
     (call $_silk_NSQ_c
      (get_local $0)
      (get_local $3)
      (get_local $2)
      (get_local $15)
      (get_local $4)
      (get_local $17)
      (get_local $18)
      (get_local $19)
      (get_local $10)
      (get_local $21)
      (get_local $20)
      (get_local $16)
      (i32.add
       (get_local $1)
       (i32.const 228)
      )
      (get_local $14)
      (get_local $6)
     )
     (set_global $STACKTOP
      (get_local $10)
     )
     (return)
    )
   )
  )
  (call $_silk_NSQ_del_dec_c
   (get_local $0)
   (get_local $3)
   (get_local $2)
   (get_local $15)
   (get_local $4)
   (get_local $17)
   (get_local $18)
   (get_local $19)
   (get_local $10)
   (get_local $21)
   (get_local $20)
   (get_local $16)
   (i32.add
    (get_local $1)
    (i32.const 228)
   )
   (get_local $14)
   (get_local $6)
  )
  (set_global $STACKTOP
   (get_local $10)
  )
 )
 (func $_silk_quant_LTP_gains_FLP (; 340 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (param $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (set_local $10
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.const 528)
   )
  )
  (set_local $13
   (i32.add
    (get_local $10)
    (i32.const 520)
   )
  )
  (set_local $14
   (i32.add
    (get_local $10)
    (i32.const 480)
   )
  )
  (set_local $15
   (i32.add
    (get_local $10)
    (i32.const 80)
   )
  )
  (set_local $9
   (i32.mul
    (get_local $8)
    (i32.const 25)
   )
  )
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $11)
     (get_local $9)
    )
    (block
     (set_local $12
      (call $_silk_float2int
       (f32.mul
        (f32.load
         (i32.add
          (get_local $5)
          (i32.shl
           (get_local $11)
           (i32.const 2)
          )
         )
        )
        (f32.const 131072)
       )
      )
     )
     (i32.store
      (i32.add
       (get_local $15)
       (i32.shl
        (get_local $11)
        (i32.const 2)
       )
      )
      (get_local $12)
     )
     (set_local $11
      (i32.add
       (get_local $11)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (set_local $12
   (i32.mul
    (get_local $8)
    (i32.const 5)
   )
  )
  (set_local $9
   (i32.const 0)
  )
  (loop $while-in1
   (if
    (i32.lt_s
     (get_local $9)
     (get_local $12)
    )
    (block
     (set_local $5
      (call $_silk_float2int
       (f32.mul
        (f32.load
         (i32.add
          (get_local $6)
          (i32.shl
           (get_local $9)
           (i32.const 2)
          )
         )
        )
        (f32.const 131072)
       )
      )
     )
     (i32.store
      (i32.add
       (get_local $10)
       (i32.shl
        (get_local $9)
        (i32.const 2)
       )
      )
      (get_local $5)
     )
     (set_local $9
      (i32.add
       (get_local $9)
       (i32.const 1)
      )
     )
     (br $while-in1)
    )
   )
  )
  (call $_silk_quant_LTP_gains
   (get_local $14)
   (get_local $1)
   (get_local $2)
   (get_local $3)
   (get_local $13)
   (get_local $15)
   (get_local $10)
   (get_local $7)
   (get_local $8)
  )
  (set_local $1
   (i32.const 0)
  )
  (loop $while-in3
   (if
    (i32.lt_s
     (get_local $1)
     (get_local $12)
    )
    (block
     (f32.store
      (i32.add
       (get_local $0)
       (i32.shl
        (get_local $1)
        (i32.const 2)
       )
      )
      (f32.mul
       (f32.convert_s/i32
        (i32.load16_s
         (i32.add
          (get_local $14)
          (i32.shl
           (get_local $1)
           (i32.const 1)
          )
         )
        )
       )
       (f32.const 0.00006103515625)
      )
     )
     (set_local $1
      (i32.add
       (get_local $1)
       (i32.const 1)
      )
     )
     (br $while-in3)
    )
   )
  )
  (f32.store
   (get_local $4)
   (f32.mul
    (f32.convert_s/i32
     (i32.load
      (get_local $13)
     )
    )
    (f32.const 0.0078125)
   )
  )
  (set_global $STACKTOP
   (get_local $10)
  )
 )
 (func $_silk_autocorrelation_FLP (; 341 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 f32)
  (if
   (i32.gt_s
    (get_local $3)
    (get_local $2)
   )
   (set_local $3
    (get_local $2)
   )
  )
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $4)
     (get_local $3)
    )
    (block
     (set_local $5
      (f32.demote/f64
       (call $_silk_inner_product_FLP
        (get_local $1)
        (i32.add
         (get_local $1)
         (i32.shl
          (get_local $4)
          (i32.const 2)
         )
        )
        (i32.sub
         (get_local $2)
         (get_local $4)
        )
       )
      )
     )
     (f32.store
      (i32.add
       (get_local $0)
       (i32.shl
        (get_local $4)
        (i32.const 2)
       )
      )
      (get_local $5)
     )
     (set_local $4
      (i32.add
       (get_local $4)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
 )
 (func $_silk_burg_modified_FLP (; 342 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 f32) (param $3 i32) (param $4 i32) (param $5 i32) (result f32)
  (local $6 i32)
  (local $7 i32)
  (local $8 f64)
  (local $9 f64)
  (local $10 i32)
  (local $11 i32)
  (local $12 f64)
  (local $13 i32)
  (local $14 f64)
  (local $15 f64)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 f64)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local $26 f64)
  (local $27 f64)
  (local $28 f32)
  (local $29 f32)
  (local $30 f32)
  (set_local $11
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.const 992)
   )
  )
  (if
   (i32.ge_s
    (tee_local $7
     (i32.mul
      (get_local $3)
      (get_local $4)
     )
    )
    (i32.const 385)
   )
   (call $_celt_fatal
    (i32.const 48315)
    (i32.const 48375)
    (i32.const 55)
   )
  )
  (set_local $19
   (i32.add
    (get_local $11)
    (i32.const 800)
   )
  )
  (set_local $22
   (i32.add
    (get_local $11)
    (i32.const 608)
   )
  )
  (set_local $16
   (i32.add
    (get_local $11)
    (i32.const 400)
   )
  )
  (set_local $17
   (i32.add
    (get_local $11)
    (i32.const 192)
   )
  )
  (set_local $15
   (call $_silk_energy_FLP
    (get_local $1)
    (get_local $7)
   )
  )
  (drop
   (call $_memset
    (get_local $19)
    (i32.const 0)
    (i32.const 192)
   )
  )
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $6)
     (get_local $4)
    )
    (block
     (set_local $13
      (i32.add
       (get_local $1)
       (i32.shl
        (i32.mul
         (get_local $6)
         (get_local $3)
        )
        (i32.const 2)
       )
      )
     )
     (set_local $7
      (i32.const 1)
     )
     (loop $while-in1
      (if
       (i32.le_s
        (get_local $7)
        (get_local $5)
       )
       (block
        (set_local $14
         (call $_silk_inner_product_FLP
          (get_local $13)
          (i32.add
           (get_local $13)
           (i32.shl
            (get_local $7)
            (i32.const 2)
           )
          )
          (i32.sub
           (get_local $3)
           (get_local $7)
          )
         )
        )
        (f64.store
         (tee_local $10
          (i32.add
           (get_local $19)
           (i32.shl
            (i32.add
             (get_local $7)
             (i32.const -1)
            )
            (i32.const 3)
           )
          )
         )
         (f64.add
          (f64.load
           (get_local $10)
          )
          (get_local $14)
         )
        )
        (set_local $7
         (i32.add
          (get_local $7)
          (i32.const 1)
         )
        )
        (br $while-in1)
       )
      )
     )
     (set_local $6
      (i32.add
       (get_local $6)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (drop
   (call $_memcpy
    (get_local $22)
    (get_local $19)
    (i32.const 192)
   )
  )
  (f64.store
   (get_local $16)
   (tee_local $14
    (f64.add
     (f64.add
      (get_local $15)
      (tee_local $27
       (f64.mul
        (get_local $15)
        (f64.const 9.999999747378752e-06)
       )
      )
     )
     (f64.const 9.999999717180685e-10)
    )
   )
  )
  (f64.store
   (get_local $17)
   (get_local $14)
  )
  (set_local $20
   (f64.promote/f32
    (get_local $2)
   )
  )
  (set_local $14
   (f64.const 1)
  )
  (set_local $7
   (i32.const 0)
  )
  (set_local $23
   (i32.const 1)
  )
  (set_local $25
   (i32.const 2)
  )
  (block $__rjto$0
   (block $__rjti$0
    (loop $while-in3
     (if
      (i32.lt_s
       (get_local $7)
       (get_local $5)
      )
      (block
       (set_local $21
        (i32.add
         (tee_local $24
          (i32.sub
           (get_local $3)
           (get_local $7)
          )
         )
         (i32.const -1)
        )
       )
       (set_local $10
        (i32.const 0)
       )
       (loop $while-in5
        (if
         (i32.lt_s
          (get_local $10)
          (get_local $4)
         )
         (block
          (set_local $2
           (f32.load
            (i32.add
             (tee_local $13
              (i32.add
               (get_local $1)
               (i32.shl
                (i32.mul
                 (get_local $10)
                 (get_local $3)
                )
                (i32.const 2)
               )
              )
             )
             (i32.shl
              (get_local $7)
              (i32.const 2)
             )
            )
           )
          )
          (set_local $8
           (f64.promote/f32
            (tee_local $28
             (f32.load
              (i32.add
               (get_local $13)
               (i32.shl
                (get_local $21)
                (i32.const 2)
               )
              )
             )
            )
           )
          )
          (set_local $9
           (f64.promote/f32
            (get_local $2)
           )
          )
          (set_local $6
           (i32.const 0)
          )
          (loop $while-in7
           (if
            (i32.ne
             (get_local $7)
             (get_local $6)
            )
            (block
             (f64.store
              (tee_local $18
               (i32.add
                (get_local $19)
                (i32.shl
                 (get_local $6)
                 (i32.const 3)
                )
               )
              )
              (f64.sub
               (f64.load
                (get_local $18)
               )
               (f64.promote/f32
                (f32.mul
                 (get_local $2)
                 (tee_local $29
                  (f32.load
                   (i32.add
                    (get_local $13)
                    (i32.shl
                     (i32.add
                      (i32.sub
                       (get_local $7)
                       (get_local $6)
                      )
                      (i32.const -1)
                     )
                     (i32.const 2)
                    )
                   )
                  )
                 )
                )
               )
              )
             )
             (f64.store
              (tee_local $18
               (i32.add
                (get_local $22)
                (i32.shl
                 (get_local $6)
                 (i32.const 3)
                )
               )
              )
              (f64.sub
               (f64.load
                (get_local $18)
               )
               (f64.promote/f32
                (f32.mul
                 (get_local $28)
                 (tee_local $30
                  (f32.load
                   (i32.add
                    (get_local $13)
                    (i32.shl
                     (i32.add
                      (get_local $24)
                      (get_local $6)
                     )
                     (i32.const 2)
                    )
                   )
                  )
                 )
                )
               )
              )
             )
             (set_local $8
              (f64.add
               (get_local $8)
               (f64.mul
                (tee_local $12
                 (f64.load
                  (i32.add
                   (get_local $11)
                   (i32.shl
                    (get_local $6)
                    (i32.const 3)
                   )
                  )
                 )
                )
                (f64.promote/f32
                 (get_local $30)
                )
               )
              )
             )
             (set_local $9
              (f64.add
               (get_local $9)
               (f64.mul
                (get_local $12)
                (f64.promote/f32
                 (get_local $29)
                )
               )
              )
             )
             (set_local $6
              (i32.add
               (get_local $6)
               (i32.const 1)
              )
             )
             (br $while-in7)
            )
           )
          )
          (set_local $6
           (i32.const 0)
          )
          (loop $while-in9
           (if
            (i32.ne
             (get_local $6)
             (get_local $23)
            )
            (block
             (f64.store
              (tee_local $18
               (i32.add
                (get_local $16)
                (i32.shl
                 (get_local $6)
                 (i32.const 3)
                )
               )
              )
              (f64.sub
               (f64.load
                (get_local $18)
               )
               (f64.mul
                (get_local $9)
                (f64.promote/f32
                 (f32.load
                  (i32.add
                   (get_local $13)
                   (i32.shl
                    (i32.sub
                     (get_local $7)
                     (get_local $6)
                    )
                    (i32.const 2)
                   )
                  )
                 )
                )
               )
              )
             )
             (f64.store
              (tee_local $18
               (i32.add
                (get_local $17)
                (i32.shl
                 (get_local $6)
                 (i32.const 3)
                )
               )
              )
              (f64.sub
               (f64.load
                (get_local $18)
               )
               (f64.mul
                (get_local $8)
                (f64.promote/f32
                 (f32.load
                  (i32.add
                   (get_local $13)
                   (i32.shl
                    (i32.add
                     (i32.add
                      (get_local $24)
                      (get_local $6)
                     )
                     (i32.const -1)
                    )
                    (i32.const 2)
                   )
                  )
                 )
                )
               )
              )
             )
             (set_local $6
              (i32.add
               (get_local $6)
               (i32.const 1)
              )
             )
             (br $while-in9)
            )
           )
          )
          (set_local $10
           (i32.add
            (get_local $10)
            (i32.const 1)
           )
          )
          (br $while-in5)
         )
        )
       )
       (set_local $8
        (f64.load
         (i32.add
          (get_local $22)
          (i32.shl
           (get_local $7)
           (i32.const 3)
          )
         )
        )
       )
       (set_local $9
        (f64.load
         (i32.add
          (get_local $19)
          (i32.shl
           (get_local $7)
           (i32.const 3)
          )
         )
        )
       )
       (set_local $6
        (i32.const 0)
       )
       (loop $while-in11
        (if
         (i32.ne
          (get_local $7)
          (get_local $6)
         )
         (block
          (set_local $8
           (f64.add
            (get_local $8)
            (f64.mul
             (f64.load
              (i32.add
               (get_local $19)
               (i32.shl
                (tee_local $13
                 (i32.add
                  (i32.sub
                   (get_local $7)
                   (get_local $6)
                  )
                  (i32.const -1)
                 )
                )
                (i32.const 3)
               )
              )
             )
             (tee_local $12
              (f64.load
               (i32.add
                (get_local $11)
                (i32.shl
                 (get_local $6)
                 (i32.const 3)
                )
               )
              )
             )
            )
           )
          )
          (set_local $9
           (f64.add
            (get_local $9)
            (f64.mul
             (f64.load
              (i32.add
               (get_local $22)
               (i32.shl
                (get_local $13)
                (i32.const 3)
               )
              )
             )
             (get_local $12)
            )
           )
          )
          (set_local $6
           (i32.add
            (get_local $6)
            (i32.const 1)
           )
          )
          (br $while-in11)
         )
        )
       )
       (f64.store
        (i32.add
         (get_local $16)
         (i32.shl
          (tee_local $13
           (i32.add
            (get_local $7)
            (i32.const 1)
           )
          )
          (i32.const 3)
         )
        )
        (get_local $9)
       )
       (f64.store
        (i32.add
         (get_local $17)
         (i32.shl
          (get_local $13)
          (i32.const 3)
         )
        )
        (get_local $8)
       )
       (set_local $9
        (f64.load
         (get_local $16)
        )
       )
       (set_local $12
        (f64.load
         (get_local $17)
        )
       )
       (set_local $6
        (i32.const 0)
       )
       (loop $while-in13
        (if
         (i32.ne
          (get_local $7)
          (get_local $6)
         )
         (block
          (set_local $8
           (f64.add
            (get_local $8)
            (f64.mul
             (f64.load
              (i32.add
               (get_local $17)
               (i32.shl
                (i32.sub
                 (get_local $7)
                 (get_local $6)
                )
                (i32.const 3)
               )
              )
             )
             (tee_local $26
              (f64.load
               (i32.add
                (get_local $11)
                (i32.shl
                 (get_local $6)
                 (i32.const 3)
                )
               )
              )
             )
            )
           )
          )
          (set_local $9
           (f64.add
            (get_local $9)
            (f64.mul
             (f64.load
              (i32.add
               (get_local $16)
               (i32.shl
                (tee_local $6
                 (i32.add
                  (get_local $6)
                  (i32.const 1)
                 )
                )
                (i32.const 3)
               )
              )
             )
             (get_local $26)
            )
           )
          )
          (set_local $12
           (f64.add
            (get_local $12)
            (f64.mul
             (f64.load
              (i32.add
               (get_local $17)
               (i32.shl
                (get_local $6)
                (i32.const 3)
               )
              )
             )
             (get_local $26)
            )
           )
          )
          (br $while-in13)
         )
        )
       )
       (set_local $8
        (if (result f64)
         (f64.le
          (tee_local $12
           (f64.mul
            (get_local $14)
            (f64.sub
             (f64.const 1)
             (f64.mul
              (tee_local $9
               (f64.div
                (f64.mul
                 (get_local $8)
                 (f64.const -2)
                )
                (f64.add
                 (get_local $9)
                 (get_local $12)
                )
               )
              )
              (get_local $9)
             )
            )
           )
          )
          (get_local $20)
         )
         (block (result f64)
          (set_local $9
           (f64.neg
            (tee_local $12
             (f64.sqrt
              (f64.sub
               (f64.const 1)
               (f64.div
                (get_local $20)
                (get_local $14)
               )
              )
             )
            )
           )
          )
          (set_local $6
           (i32.const 1)
          )
          (set_local $14
           (get_local $20)
          )
          (if (result f64)
           (f64.gt
            (get_local $8)
            (f64.const 0)
           )
           (get_local $9)
           (get_local $12)
          )
         )
         (block (result f64)
          (set_local $6
           (i32.const 0)
          )
          (set_local $14
           (get_local $12)
          )
          (get_local $9)
         )
        )
       )
       (set_local $24
        (i32.shr_u
         (get_local $23)
         (i32.const 1)
        )
       )
       (set_local $10
        (i32.const 0)
       )
       (loop $while-in15
        (if
         (i32.ne
          (get_local $10)
          (get_local $24)
         )
         (block
          (set_local $9
           (f64.load
            (tee_local $21
             (i32.add
              (get_local $11)
              (i32.shl
               (get_local $10)
               (i32.const 3)
              )
             )
            )
           )
          )
          (f64.store
           (get_local $21)
           (f64.add
            (get_local $9)
            (f64.mul
             (get_local $8)
             (tee_local $12
              (f64.load
               (tee_local $21
                (i32.add
                 (get_local $11)
                 (i32.shl
                  (i32.add
                   (i32.sub
                    (get_local $7)
                    (get_local $10)
                   )
                   (i32.const -1)
                  )
                  (i32.const 3)
                 )
                )
               )
              )
             )
            )
           )
          )
          (f64.store
           (get_local $21)
           (f64.add
            (get_local $12)
            (f64.mul
             (get_local $8)
             (get_local $9)
            )
           )
          )
          (set_local $10
           (i32.add
            (get_local $10)
            (i32.const 1)
           )
          )
          (br $while-in15)
         )
        )
       )
       (f64.store
        (i32.add
         (get_local $11)
         (i32.shl
          (get_local $7)
          (i32.const 3)
         )
        )
        (get_local $8)
       )
       (br_if $__rjti$0
        (get_local $6)
       )
       (set_local $6
        (i32.const 0)
       )
       (loop $while-in17
        (if
         (i32.ne
          (get_local $6)
          (get_local $25)
         )
         (block
          (set_local $9
           (f64.load
            (tee_local $10
             (i32.add
              (get_local $16)
              (i32.shl
               (get_local $6)
               (i32.const 3)
              )
             )
            )
           )
          )
          (f64.store
           (get_local $10)
           (f64.add
            (get_local $9)
            (f64.mul
             (get_local $8)
             (tee_local $12
              (f64.load
               (tee_local $10
                (i32.add
                 (get_local $17)
                 (i32.shl
                  (i32.add
                   (i32.sub
                    (get_local $7)
                    (get_local $6)
                   )
                   (i32.const 1)
                  )
                  (i32.const 3)
                 )
                )
               )
              )
             )
            )
           )
          )
          (f64.store
           (get_local $10)
           (f64.add
            (get_local $12)
            (f64.mul
             (get_local $8)
             (get_local $9)
            )
           )
          )
          (set_local $6
           (i32.add
            (get_local $6)
            (i32.const 1)
           )
          )
          (br $while-in17)
         )
        )
       )
       (set_local $7
        (get_local $13)
       )
       (set_local $23
        (i32.add
         (get_local $23)
         (i32.const 1)
        )
       )
       (set_local $25
        (i32.add
         (get_local $25)
         (i32.const 1)
        )
       )
       (br $while-in3)
      )
     )
    )
    (br $__rjto$0)
   )
   (loop $while-in19
    (if
     (i32.lt_s
      (tee_local $7
       (i32.add
        (get_local $7)
        (i32.const 1)
       )
      )
      (get_local $5)
     )
     (block
      (f64.store
       (i32.add
        (get_local $11)
        (i32.shl
         (get_local $7)
         (i32.const 3)
        )
       )
       (f64.const 0)
      )
      (br $while-in19)
     )
    )
   )
   (if
    (get_local $6)
    (block
     (set_local $7
      (i32.const 0)
     )
     (loop $while-in21
      (if
       (i32.lt_s
        (get_local $7)
        (get_local $5)
       )
       (block
        (f32.store
         (i32.add
          (get_local $0)
          (i32.shl
           (get_local $7)
           (i32.const 2)
          )
         )
         (f32.neg
          (f32.demote/f64
           (f64.load
            (i32.add
             (get_local $11)
             (i32.shl
              (get_local $7)
              (i32.const 3)
             )
            )
           )
          )
         )
        )
        (set_local $7
         (i32.add
          (get_local $7)
          (i32.const 1)
         )
        )
        (br $while-in21)
       )
      )
     )
     (set_local $0
      (i32.const 0)
     )
     (loop $while-in23
      (if
       (i32.lt_s
        (get_local $0)
        (get_local $4)
       )
       (block
        (set_local $8
         (call $_silk_energy_FLP
          (i32.add
           (get_local $1)
           (i32.shl
            (i32.mul
             (get_local $0)
             (get_local $3)
            )
            (i32.const 2)
           )
          )
          (get_local $5)
         )
        )
        (set_local $15
         (f64.sub
          (get_local $15)
          (get_local $8)
         )
        )
        (set_local $0
         (i32.add
          (get_local $0)
          (i32.const 1)
         )
        )
        (br $while-in23)
       )
      )
     )
     (set_global $STACKTOP
      (get_local $11)
     )
     (return
      (f32.demote/f64
       (f64.mul
        (get_local $15)
        (get_local $14)
       )
      )
     )
    )
   )
  )
  (set_local $14
   (f64.load
    (get_local $16)
   )
  )
  (set_local $8
   (f64.const 1)
  )
  (set_local $1
   (i32.const 0)
  )
  (loop $while-in25
   (if
    (i32.lt_s
     (get_local $1)
     (get_local $5)
    )
    (block
     (set_local $20
      (f64.load
       (i32.add
        (get_local $16)
        (i32.shl
         (tee_local $3
          (i32.add
           (get_local $1)
           (i32.const 1)
          )
         )
         (i32.const 3)
        )
       )
      )
     )
     (f32.store
      (i32.add
       (get_local $0)
       (i32.shl
        (get_local $1)
        (i32.const 2)
       )
      )
      (f32.neg
       (f32.demote/f64
        (tee_local $15
         (f64.load
          (i32.add
           (get_local $11)
           (i32.shl
            (get_local $1)
            (i32.const 3)
           )
          )
         )
        )
       )
      )
     )
     (set_local $14
      (f64.add
       (get_local $14)
       (f64.mul
        (get_local $20)
        (get_local $15)
       )
      )
     )
     (set_local $8
      (f64.add
       (get_local $8)
       (f64.mul
        (get_local $15)
        (get_local $15)
       )
      )
     )
     (set_local $1
      (get_local $3)
     )
     (br $while-in25)
    )
   )
  )
  (set_global $STACKTOP
   (get_local $11)
  )
  (f32.demote/f64
   (f64.sub
    (get_local $14)
    (f64.mul
     (get_local $27)
     (get_local $8)
    )
   )
  )
 )
 (func $_silk_bwexpander_FLP (; 343 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 f32)
  (local $3 f32)
  (local $4 i32)
  (local $5 i32)
  (set_local $4
   (i32.add
    (get_local $1)
    (i32.const -1)
   )
  )
  (set_local $3
   (get_local $2)
  )
  (set_local $1
   (i32.const 0)
  )
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $1)
     (get_local $4)
    )
    (block
     (f32.store
      (tee_local $5
       (i32.add
        (get_local $0)
        (i32.shl
         (get_local $1)
         (i32.const 2)
        )
       )
      )
      (f32.mul
       (f32.load
        (get_local $5)
       )
       (get_local $3)
      )
     )
     (set_local $3
      (f32.mul
       (get_local $3)
       (get_local $2)
      )
     )
     (set_local $1
      (i32.add
       (get_local $1)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (f32.store
   (tee_local $0
    (i32.add
     (get_local $0)
     (i32.shl
      (get_local $4)
      (i32.const 2)
     )
    )
   )
   (f32.mul
    (f32.load
     (get_local $0)
    )
    (get_local $3)
   )
  )
 )
 (func $_silk_energy_FLP (; 344 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result f64)
  (local $2 f64)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (set_local $4
   (i32.and
    (i32.add
     (if (result i32)
      (i32.gt_s
       (tee_local $5
        (i32.add
         (get_local $1)
         (i32.const -3)
        )
       )
       (i32.const 0)
      )
      (get_local $5)
      (i32.const 0)
     )
     (i32.const 3)
    )
    (i32.const -4)
   )
  )
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $3)
     (get_local $5)
    )
    (block
     (set_local $2
      (f64.add
       (get_local $2)
       (f64.add
        (f64.add
         (f64.add
          (f64.mul
           (tee_local $2
            (f64.promote/f32
             (f32.load
              (i32.add
               (get_local $0)
               (i32.shl
                (get_local $3)
                (i32.const 2)
               )
              )
             )
            )
           )
           (get_local $2)
          )
          (f64.mul
           (tee_local $2
            (f64.promote/f32
             (f32.load
              (i32.add
               (get_local $0)
               (i32.shl
                (i32.or
                 (get_local $3)
                 (i32.const 1)
                )
                (i32.const 2)
               )
              )
             )
            )
           )
           (get_local $2)
          )
         )
         (f64.mul
          (tee_local $2
           (f64.promote/f32
            (f32.load
             (i32.add
              (get_local $0)
              (i32.shl
               (i32.or
                (get_local $3)
                (i32.const 2)
               )
               (i32.const 2)
              )
             )
            )
           )
          )
          (get_local $2)
         )
        )
        (f64.mul
         (tee_local $2
          (f64.promote/f32
           (f32.load
            (i32.add
             (get_local $0)
             (i32.shl
              (i32.or
               (get_local $3)
               (i32.const 3)
              )
              (i32.const 2)
             )
            )
           )
          )
         )
         (get_local $2)
        )
       )
      )
     )
     (set_local $3
      (i32.add
       (get_local $3)
       (i32.const 4)
      )
     )
     (br $while-in)
    )
   )
  )
  (loop $while-in1
   (if
    (i32.lt_s
     (get_local $4)
     (get_local $1)
    )
    (block
     (set_local $2
      (f64.add
       (get_local $2)
       (f64.mul
        (tee_local $2
         (f64.promote/f32
          (f32.load
           (i32.add
            (get_local $0)
            (i32.shl
             (get_local $4)
             (i32.const 2)
            )
           )
          )
         )
        )
        (get_local $2)
       )
      )
     )
     (set_local $4
      (i32.add
       (get_local $4)
       (i32.const 1)
      )
     )
     (br $while-in1)
    )
   )
  )
  (get_local $2)
 )
 (func $_silk_inner_product_FLP (; 345 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result f64)
  (local $3 i32)
  (local $4 i32)
  (local $5 f64)
  (local $6 i32)
  (local $7 i32)
  (set_local $4
   (i32.and
    (i32.add
     (if (result i32)
      (i32.gt_s
       (tee_local $7
        (i32.add
         (get_local $2)
         (i32.const -3)
        )
       )
       (i32.const 0)
      )
      (get_local $7)
      (i32.const 0)
     )
     (i32.const 3)
    )
    (i32.const -4)
   )
  )
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $3)
     (get_local $7)
    )
    (block
     (set_local $5
      (f64.add
       (get_local $5)
       (f64.add
        (f64.add
         (f64.add
          (f64.mul
           (f64.promote/f32
            (f32.load
             (i32.add
              (get_local $0)
              (i32.shl
               (get_local $3)
               (i32.const 2)
              )
             )
            )
           )
           (f64.promote/f32
            (f32.load
             (i32.add
              (get_local $1)
              (i32.shl
               (get_local $3)
               (i32.const 2)
              )
             )
            )
           )
          )
          (f64.mul
           (f64.promote/f32
            (f32.load
             (i32.add
              (get_local $0)
              (i32.shl
               (tee_local $6
                (i32.or
                 (get_local $3)
                 (i32.const 1)
                )
               )
               (i32.const 2)
              )
             )
            )
           )
           (f64.promote/f32
            (f32.load
             (i32.add
              (get_local $1)
              (i32.shl
               (get_local $6)
               (i32.const 2)
              )
             )
            )
           )
          )
         )
         (f64.mul
          (f64.promote/f32
           (f32.load
            (i32.add
             (get_local $0)
             (i32.shl
              (tee_local $6
               (i32.or
                (get_local $3)
                (i32.const 2)
               )
              )
              (i32.const 2)
             )
            )
           )
          )
          (f64.promote/f32
           (f32.load
            (i32.add
             (get_local $1)
             (i32.shl
              (get_local $6)
              (i32.const 2)
             )
            )
           )
          )
         )
        )
        (f64.mul
         (f64.promote/f32
          (f32.load
           (i32.add
            (get_local $0)
            (i32.shl
             (tee_local $6
              (i32.or
               (get_local $3)
               (i32.const 3)
              )
             )
             (i32.const 2)
            )
           )
          )
         )
         (f64.promote/f32
          (f32.load
           (i32.add
            (get_local $1)
            (i32.shl
             (get_local $6)
             (i32.const 2)
            )
           )
          )
         )
        )
       )
      )
     )
     (set_local $3
      (i32.add
       (get_local $3)
       (i32.const 4)
      )
     )
     (br $while-in)
    )
   )
  )
  (loop $while-in1
   (if
    (i32.lt_s
     (get_local $4)
     (get_local $2)
    )
    (block
     (set_local $5
      (f64.add
       (get_local $5)
       (f64.mul
        (f64.promote/f32
         (f32.load
          (i32.add
           (get_local $0)
           (i32.shl
            (get_local $4)
            (i32.const 2)
           )
          )
         )
        )
        (f64.promote/f32
         (f32.load
          (i32.add
           (get_local $1)
           (i32.shl
            (get_local $4)
            (i32.const 2)
           )
          )
         )
        )
       )
      )
     )
     (set_local $4
      (i32.add
       (get_local $4)
       (i32.const 1)
      )
     )
     (br $while-in1)
    )
   )
  )
  (get_local $5)
 )
 (func $_silk_k2a_FLP (; 346 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 f32)
  (local $7 i32)
  (local $8 f32)
  (local $9 i32)
  (local $10 f32)
  (set_local $5
   (i32.const 1)
  )
  (loop $while-in
   (set_local $9
    (i32.shr_u
     (get_local $5)
     (i32.const 1)
    )
   )
   (if
    (i32.lt_s
     (get_local $3)
     (get_local $2)
    )
    (block
     (set_local $6
      (f32.load
       (i32.add
        (get_local $1)
        (i32.shl
         (get_local $3)
         (i32.const 2)
        )
       )
      )
     )
     (set_local $4
      (i32.const 0)
     )
     (loop $while-in1
      (if
       (i32.ne
        (get_local $4)
        (get_local $9)
       )
       (block
        (set_local $8
         (f32.load
          (tee_local $7
           (i32.add
            (get_local $0)
            (i32.shl
             (get_local $4)
             (i32.const 2)
            )
           )
          )
         )
        )
        (f32.store
         (get_local $7)
         (f32.add
          (get_local $8)
          (f32.mul
           (tee_local $10
            (f32.load
             (tee_local $7
              (i32.add
               (get_local $0)
               (i32.shl
                (i32.add
                 (i32.sub
                  (get_local $3)
                  (get_local $4)
                 )
                 (i32.const -1)
                )
                (i32.const 2)
               )
              )
             )
            )
           )
           (get_local $6)
          )
         )
        )
        (f32.store
         (get_local $7)
         (f32.add
          (get_local $10)
          (f32.mul
           (get_local $8)
           (get_local $6)
          )
         )
        )
        (set_local $4
         (i32.add
          (get_local $4)
          (i32.const 1)
         )
        )
        (br $while-in1)
       )
      )
     )
     (f32.store
      (i32.add
       (get_local $0)
       (i32.shl
        (get_local $3)
        (i32.const 2)
       )
      )
      (f32.neg
       (get_local $6)
      )
     )
     (set_local $3
      (i32.add
       (get_local $3)
       (i32.const 1)
      )
     )
     (set_local $5
      (i32.add
       (get_local $5)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
 )
 (func $_silk_pitch_analysis_core_FLP (; 347 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 f32) (param $7 f32) (param $8 i32) (param $9 i32) (param $10 i32) (result i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 f32)
  (local $20 i32)
  (local $21 f64)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 f64)
  (local $26 i32)
  (local $27 i32)
  (local $28 i32)
  (local $29 i32)
  (local $30 i32)
  (local $31 i32)
  (local $32 f64)
  (local $33 i32)
  (local $34 i32)
  (local $35 i32)
  (local $36 f32)
  (local $37 i32)
  (local $38 i32)
  (local $39 i32)
  (local $40 f32)
  (local $41 f32)
  (local $42 f32)
  (local $43 i32)
  (local $44 i32)
  (local $45 f32)
  (local $46 f32)
  (block $folding-inner0
   (set_local $15
    (get_global $STACKTOP)
   )
   (set_global $STACKTOP
    (i32.add
     (get_global $STACKTOP)
     (i32.const 13696)
    )
   )
   (set_local $27
    (i32.add
     (get_local $15)
     (i32.const 12416)
    )
   )
   (set_local $17
    (i32.add
     (get_local $15)
     (i32.const 11776)
    )
   )
   (set_local $11
    (i32.add
     (get_local $15)
     (i32.const 11136)
    )
   )
   (set_local $22
    (i32.add
     (get_local $15)
     (i32.const 10816)
    )
   )
   (set_local $12
    (i32.add
     (get_local $15)
     (i32.const 10784)
    )
   )
   (set_local $23
    (i32.add
     (get_local $15)
     (i32.const 8400)
    )
   )
   (set_local $28
    (i32.add
     (get_local $15)
     (i32.const 8128)
    )
   )
   (set_local $37
    (i32.add
     (get_local $15)
     (i32.const 8080)
    )
   )
   (set_local $29
    (i32.add
     (get_local $15)
     (i32.const 7984)
    )
   )
   (set_local $16
    (i32.add
     (get_local $15)
     (i32.const 7680)
    )
   )
   (set_local $38
    (i32.add
     (get_local $15)
     (i32.const 4960)
    )
   )
   (set_local $39
    (i32.add
     (get_local $15)
     (i32.const 2240)
    )
   )
   (set_local $33
    (i32.add
     (get_local $15)
     (i32.const 960)
    )
   )
   (set_local $30
    (get_local $15)
   )
   (set_local $31
    (i32.eq
     (get_local $8)
     (i32.const 8)
    )
   )
   (block $switch
    (block $switch-default
     (block $switch-case
      (br_table $switch-case $switch-default $switch-default $switch-default $switch-case $switch-default $switch-default $switch-default $switch-case $switch-default
       (i32.sub
        (get_local $8)
        (i32.const 8)
       )
      )
     )
     (br $switch)
    )
    (call $_celt_fatal
     (i32.const 48406)
     (i32.const 48468)
     (i32.const 112)
    )
   )
   (if
    (i32.le_s
     (get_local $9)
     (i32.const -1)
    )
    (call $_celt_fatal
     (i32.const 48505)
     (i32.const 48468)
     (i32.const 115)
    )
   )
   (if
    (i32.ge_s
     (get_local $9)
     (i32.const 3)
    )
    (call $_celt_fatal
     (i32.const 48557)
     (i32.const 48468)
     (i32.const 116)
    )
   )
   (set_local $18
    (i32.mul
     (i32.add
      (i32.mul
       (get_local $10)
       (i32.const 5)
      )
      (i32.const 20)
     )
     (get_local $8)
    )
   )
   (set_local $34
    (i32.add
     (tee_local $43
      (i32.mul
       (get_local $10)
       (i32.const 20)
      )
     )
     (i32.const 80)
    )
   )
   (set_local $20
    (i32.add
     (i32.mul
      (get_local $10)
      (i32.const 40)
     )
     (i32.const 160)
    )
   )
   (set_local $35
    (i32.mul
     (get_local $8)
     (i32.const 5)
    )
   )
   (set_local $15
    (i32.shl
     (get_local $8)
     (i32.const 1)
    )
   )
   (set_local $26
    (i32.add
     (tee_local $24
      (i32.mul
       (get_local $8)
       (i32.const 18)
      )
     )
     (i32.const -1)
    )
   )
   (block $do-once
    (if
     (tee_local $44
      (i32.eq
       (get_local $8)
       (i32.const 16)
      )
     )
     (block
      (call $_silk_float2short_array
       (get_local $33)
       (get_local $0)
       (get_local $18)
      )
      (i64.store
       (get_local $12)
       (i64.const 0)
      )
      (call $_silk_resampler_down2
       (get_local $12)
       (get_local $11)
       (get_local $33)
       (get_local $18)
      )
      (call $_silk_short2float_array
       (get_local $27)
       (get_local $11)
       (get_local $20)
      )
      (set_local $13
       (get_local $11)
      )
      (set_local $14
       (get_local $12)
      )
     )
     (block
      (if
       (i32.eq
        (get_local $8)
        (i32.const 12)
       )
       (block
        (call $_silk_float2short_array
         (get_local $30)
         (get_local $0)
         (get_local $18)
        )
        (i64.store
         (get_local $12)
         (i64.const 0)
        )
        (i64.store offset=8
         (get_local $12)
         (i64.const 0)
        )
        (i64.store offset=16
         (get_local $12)
         (i64.const 0)
        )
        (call $_silk_resampler_down2_3
         (get_local $12)
         (get_local $11)
         (get_local $30)
         (get_local $18)
        )
        (call $_silk_short2float_array
         (get_local $27)
         (get_local $11)
         (get_local $20)
        )
        (set_local $13
         (get_local $11)
        )
        (set_local $14
         (get_local $12)
        )
        (br $do-once)
       )
      )
      (if
       (get_local $31)
       (block
        (call $_silk_float2short_array
         (get_local $11)
         (get_local $0)
         (get_local $20)
        )
        (set_local $13
         (get_local $11)
        )
        (set_local $14
         (get_local $12)
        )
       )
       (call $_celt_fatal
        (i32.const 48609)
        (i32.const 48468)
        (i32.const 151)
       )
      )
     )
    )
   )
   (i64.store
    (get_local $12)
    (i64.const 0)
   )
   (call $_silk_resampler_down2
    (get_local $14)
    (get_local $22)
    (get_local $13)
    (get_local $20)
   )
   (call $_silk_short2float_array
    (get_local $17)
    (get_local $22)
    (get_local $34)
   )
   (set_local $12
    (i32.add
     (get_local $43)
     (i32.const 79)
    )
   )
   (loop $while-in
    (if
     (i32.gt_s
      (get_local $12)
      (i32.const 0)
     )
     (block
      (if
       (f32.gt
        (tee_local $19
         (f32.add
          (f32.load
           (i32.add
            (get_local $17)
            (i32.shl
             (tee_local $11
              (i32.add
               (get_local $12)
               (i32.const -1)
              )
             )
             (i32.const 2)
            )
           )
          )
          (f32.convert_s/i32
           (i32.trunc_s/f32
            (f32.load
             (tee_local $12
              (i32.add
               (get_local $17)
               (i32.shl
                (get_local $12)
                (i32.const 2)
               )
              )
             )
            )
           )
          )
         )
        )
        (f32.const 32767)
       )
       (set_local $19
        (f32.const 32767)
       )
       (if
        (f32.lt
         (get_local $19)
         (f32.const -32768)
        )
        (set_local $19
         (f32.const -32768)
        )
       )
      )
      (f32.store
       (get_local $12)
       (f32.convert_s/i32
        (i32.shr_s
         (i32.shl
          (i32.trunc_s/f32
           (get_local $19)
          )
          (i32.const 16)
         )
         (i32.const 16)
        )
       )
      )
      (set_local $12
       (get_local $11)
      )
      (br $while-in)
     )
    )
   )
   (drop
    (call $_memset
     (get_local $23)
     (i32.const 0)
     (i32.mul
      (get_local $10)
      (i32.const 596)
     )
    )
   )
   (set_local $33
    (i32.shr_s
     (get_local $10)
     (i32.const 1)
    )
   )
   (set_local $22
    (i32.add
     (get_local $17)
     (i32.shl
      (get_local $34)
      (i32.const 2)
     )
    )
   )
   (set_local $34
    (i32.add
     (get_local $28)
     (i32.const 256)
    )
   )
   (set_local $18
    (i32.add
     (get_local $23)
     (i32.const 32)
    )
   )
   (set_local $20
    (i32.const 0)
   )
   (set_local $12
    (i32.add
     (get_local $17)
     (i32.const 320)
    )
   )
   (block $__rjto$3
    (block $__rjti$3
     (block $__rjti$2
      (block $__rjti$1
       (block $__rjti$0
        (loop $while-in3
         (block $while-out2
          (br_if $__rjti$3
           (i32.ge_s
            (get_local $20)
            (get_local $33)
           )
          )
          (br_if $__rjti$0
           (i32.gt_u
            (tee_local $11
             (i32.add
              (get_local $12)
              (i32.const 160)
             )
            )
            (get_local $22)
           )
          )
          (br_if $__rjti$1
           (i32.lt_u
            (tee_local $13
             (i32.add
              (get_local $12)
              (i32.const -32)
             )
            )
            (get_local $17)
           )
          )
          (br_if $__rjti$2
           (i32.gt_u
            (i32.add
             (get_local $12)
             (i32.const 128)
            )
            (get_local $22)
           )
          )
          (call $_celt_pitch_xcorr_c
           (get_local $12)
           (i32.add
            (get_local $12)
            (i32.const -288)
           )
           (get_local $28)
           (i32.const 40)
           (i32.const 65)
          )
          (set_local $21
           (f64.promote/f32
            (f32.load
             (get_local $34)
            )
           )
          )
          (set_local $32
           (call $_silk_energy_FLP
            (get_local $12)
            (i32.const 40)
           )
          )
          (set_local $25
           (call $_silk_energy_FLP
            (get_local $13)
            (i32.const 40)
           )
          )
          (f32.store
           (get_local $18)
           (f32.add
            (f32.load
             (get_local $18)
            )
            (f32.demote/f64
             (f64.div
              (f64.mul
               (get_local $21)
               (f64.const 2)
              )
              (tee_local $21
               (f64.add
                (f64.add
                 (get_local $32)
                 (get_local $25)
                )
                (f64.const 16e4)
               )
              )
             )
            )
           )
          )
          (set_local $14
           (i32.const 9)
          )
          (set_local $12
           (get_local $13)
          )
          (loop $while-in5
           (if
            (i32.ne
             (get_local $14)
             (i32.const 73)
            )
            (block
             (f32.store
              (tee_local $13
               (i32.add
                (get_local $23)
                (i32.shl
                 (get_local $14)
                 (i32.const 2)
                )
               )
              )
              (f32.add
               (f32.load
                (get_local $13)
               )
               (f32.demote/f64
                (f64.div
                 (f64.mul
                  (f64.promote/f32
                   (f32.load
                    (i32.add
                     (get_local $28)
                     (i32.shl
                      (i32.sub
                       (i32.const 72)
                       (get_local $14)
                      )
                      (i32.const 2)
                     )
                    )
                   )
                  )
                  (f64.const 2)
                 )
                 (tee_local $21
                  (f64.add
                   (get_local $21)
                   (f64.sub
                    (f64.mul
                     (tee_local $21
                      (f64.promote/f32
                       (f32.load
                        (tee_local $13
                         (i32.add
                          (get_local $12)
                          (i32.const -4)
                         )
                        )
                       )
                      )
                     )
                     (get_local $21)
                    )
                    (f64.mul
                     (tee_local $21
                      (f64.promote/f32
                       (f32.load offset=156
                        (get_local $12)
                       )
                      )
                     )
                     (get_local $21)
                    )
                   )
                  )
                 )
                )
               )
              )
             )
             (set_local $14
              (i32.add
               (get_local $14)
               (i32.const 1)
              )
             )
             (set_local $12
              (get_local $13)
             )
             (br $while-in5)
            )
           )
          )
          (set_local $20
           (i32.add
            (get_local $20)
            (i32.const 1)
           )
          )
          (set_local $12
           (get_local $11)
          )
          (br $while-in3)
         )
        )
       )
       (call $_celt_fatal
        (i32.const 48639)
        (i32.const 48468)
        (i32.const 173)
       )
       (br $__rjto$3)
      )
      (call $_celt_fatal
       (i32.const 48719)
       (i32.const 48468)
       (i32.const 178)
      )
      (br $__rjto$3)
     )
     (call $_celt_fatal
      (i32.const 48761)
      (i32.const 48468)
      (i32.const 179)
     )
     (br $__rjto$3)
    )
    (set_local $12
     (i32.const 72)
    )
    (loop $while-in7
     (if
      (i32.gt_u
       (get_local $12)
       (i32.const 7)
      )
      (block
       (set_local $19
        (f32.load
         (tee_local $11
          (i32.add
           (get_local $23)
           (i32.shl
            (get_local $12)
            (i32.const 2)
           )
          )
         )
        )
       )
       (f32.store
        (get_local $11)
        (f32.sub
         (get_local $19)
         (f32.mul
          (f32.mul
           (get_local $19)
           (f32.convert_s/i32
            (get_local $12)
           )
          )
          (f32.const 0.000244140625)
         )
        )
       )
       (set_local $12
        (i32.add
         (get_local $12)
         (i32.const -1)
        )
       )
       (br $while-in7)
      )
     )
    )
    (if
     (i32.ge_s
      (i32.mul
       (tee_local $11
        (i32.add
         (i32.shl
          (get_local $9)
          (i32.const 1)
         )
         (i32.const 4)
        )
       )
       (i32.const 3)
      )
      (i32.const 25)
     )
     (call $_celt_fatal
      (i32.const 48840)
      (i32.const 48468)
      (i32.const 218)
     )
    )
    (call $_silk_insertion_sort_decreasing_FLP
     (get_local $18)
     (get_local $29)
     (get_local $11)
    )
    (if
     (f32.lt
      (tee_local $19
       (f32.load
        (get_local $18)
       )
      )
      (f32.const 0.20000000298023224)
     )
     (block
      (drop
       (call $_memset
        (get_local $1)
        (i32.const 0)
        (i32.shl
         (get_local $10)
         (i32.const 2)
        )
       )
      )
      (br $folding-inner0)
     )
    )
    (set_local $6
     (f32.mul
      (get_local $19)
      (get_local $6)
     )
    )
    (set_local $12
     (i32.const 0)
    )
    (loop $while-in9
     (block $while-out8
      (if
       (i32.ge_s
        (get_local $12)
        (get_local $11)
       )
       (block
        (set_local $12
         (get_local $11)
        )
        (br $while-out8)
       )
      )
      (if
       (f32.gt
        (f32.load
         (i32.add
          (get_local $23)
          (i32.shl
           (i32.add
            (get_local $12)
            (i32.const 8)
           )
           (i32.const 2)
          )
         )
        )
        (get_local $6)
       )
       (block
        (i32.store
         (tee_local $13
          (i32.add
           (get_local $29)
           (i32.shl
            (get_local $12)
            (i32.const 2)
           )
          )
         )
         (i32.add
          (i32.shl
           (i32.load
            (get_local $13)
           )
           (i32.const 1)
          )
          (i32.const 16)
         )
        )
        (set_local $12
         (i32.add
          (get_local $12)
          (i32.const 1)
         )
        )
        (br $while-in9)
       )
      )
     )
    )
    (if
     (i32.le_s
      (get_local $12)
      (i32.const 0)
     )
     (call $_celt_fatal
      (i32.const 48896)
      (i32.const 48468)
      (i32.const 241)
     )
    )
    (set_local $11
     (i32.const 11)
    )
    (loop $while-in11
     (if
      (i32.ne
       (get_local $11)
       (i32.const 148)
      )
      (block
       (i32.store16
        (i32.add
         (get_local $16)
         (i32.shl
          (get_local $11)
          (i32.const 1)
         )
        )
        (i32.const 0)
       )
       (set_local $11
        (i32.add
         (get_local $11)
         (i32.const 1)
        )
       )
       (br $while-in11)
      )
     )
    )
    (set_local $11
     (i32.const 0)
    )
    (loop $while-in13
     (if
      (i32.ne
       (get_local $11)
       (get_local $12)
      )
      (block
       (i32.store16
        (i32.add
         (get_local $16)
         (i32.shl
          (i32.load
           (i32.add
            (get_local $29)
            (i32.shl
             (get_local $11)
             (i32.const 2)
            )
           )
          )
          (i32.const 1)
         )
        )
        (i32.const 1)
       )
       (set_local $11
        (i32.add
         (get_local $11)
         (i32.const 1)
        )
       )
       (br $while-in13)
      )
     )
    )
    (set_local $12
     (i32.const 146)
    )
    (loop $while-in15
     (if
      (i32.gt_u
       (get_local $12)
       (i32.const 15)
      )
      (block
       (i32.store16
        (tee_local $13
         (i32.add
          (get_local $16)
          (i32.shl
           (get_local $12)
           (i32.const 1)
          )
         )
        )
        (i32.add
         (i32.add
          (i32.load16_u
           (i32.add
            (get_local $16)
            (i32.shl
             (tee_local $11
              (i32.add
               (get_local $12)
               (i32.const -1)
              )
             )
             (i32.const 1)
            )
           )
          )
          (i32.load16_u
           (i32.add
            (get_local $16)
            (i32.shl
             (i32.add
              (get_local $12)
              (i32.const -2)
             )
             (i32.const 1)
            )
           )
          )
         )
         (i32.load16_u
          (get_local $13)
         )
        )
       )
       (set_local $12
        (get_local $11)
       )
       (br $while-in15)
      )
     )
    )
    (set_local $12
     (i32.const 0)
    )
    (set_local $11
     (i32.const 16)
    )
    (loop $while-in17
     (if
      (i32.ne
       (get_local $11)
       (i32.const 144)
      )
      (block
       (if
        (i32.gt_s
         (i32.load16_s
          (i32.add
           (get_local $16)
           (i32.shl
            (tee_local $13
             (i32.add
              (get_local $11)
              (i32.const 1)
             )
            )
            (i32.const 1)
           )
          )
         )
         (i32.const 0)
        )
        (block
         (i32.store
          (i32.add
           (get_local $29)
           (i32.shl
            (get_local $12)
            (i32.const 2)
           )
          )
          (get_local $11)
         )
         (set_local $12
          (i32.add
           (get_local $12)
           (i32.const 1)
          )
         )
        )
       )
       (set_local $11
        (get_local $13)
       )
       (br $while-in17)
      )
     )
    )
    (set_local $11
     (i32.const 146)
    )
    (loop $while-in19
     (if
      (i32.gt_u
       (get_local $11)
       (i32.const 15)
      )
      (block
       (i32.store16
        (tee_local $14
         (i32.add
          (get_local $16)
          (i32.shl
           (get_local $11)
           (i32.const 1)
          )
         )
        )
        (i32.add
         (i32.add
          (i32.add
           (i32.load16_u
            (i32.add
             (get_local $16)
             (i32.shl
              (tee_local $13
               (i32.add
                (get_local $11)
                (i32.const -1)
               )
              )
              (i32.const 1)
             )
            )
           )
           (i32.load16_u
            (i32.add
             (get_local $16)
             (i32.shl
              (i32.add
               (get_local $11)
               (i32.const -2)
              )
              (i32.const 1)
             )
            )
           )
          )
          (i32.load16_u
           (i32.add
            (get_local $16)
            (i32.shl
             (i32.add
              (get_local $11)
              (i32.const -3)
             )
             (i32.const 1)
            )
           )
          )
         )
         (i32.load16_u
          (get_local $14)
         )
        )
       )
       (set_local $11
        (get_local $13)
       )
       (br $while-in19)
      )
     )
    )
    (set_local $11
     (i32.const 0)
    )
    (set_local $13
     (i32.const 16)
    )
    (loop $while-in21
     (if
      (i32.ne
       (get_local $13)
       (i32.const 147)
      )
      (block
       (if
        (i32.gt_s
         (i32.load16_s
          (i32.add
           (get_local $16)
           (i32.shl
            (get_local $13)
            (i32.const 1)
           )
          )
         )
         (i32.const 0)
        )
        (block
         (i32.store16
          (i32.add
           (get_local $16)
           (i32.shl
            (get_local $11)
            (i32.const 1)
           )
          )
          (i32.add
           (get_local $13)
           (i32.const 65534)
          )
         )
         (set_local $11
          (i32.add
           (get_local $11)
           (i32.const 1)
          )
         )
        )
       )
       (set_local $13
        (i32.add
         (get_local $13)
         (i32.const 1)
        )
       )
       (br $while-in21)
      )
     )
    )
    (drop
     (call $_memset
      (get_local $23)
      (i32.const 0)
      (i32.const 2384)
     )
    )
    (set_local $13
     (i32.add
      (get_local $0)
      (i32.const 640)
     )
    )
    (set_local $17
     (i32.add
      (get_local $27)
      (i32.const 640)
     )
    )
    (set_local $14
     (i32.const 0)
    )
    (if
     (i32.eqz
      (get_local $31)
     )
     (set_local $13
      (get_local $17)
     )
    )
    (loop $while-in23
     (if
      (i32.lt_s
       (get_local $14)
       (get_local $10)
      )
      (block
       (set_local $21
        (f64.add
         (call $_silk_energy_FLP
          (get_local $13)
          (i32.const 40)
         )
         (f64.const 1)
        )
       )
       (set_local $17
        (i32.const 0)
       )
       (loop $while-in25
        (if
         (i32.lt_s
          (get_local $17)
          (get_local $11)
         )
         (block
          (set_local $6
           (if (result f32)
            (f64.gt
             (tee_local $32
              (call $_silk_inner_product_FLP
               (tee_local $20
                (i32.add
                 (get_local $13)
                 (i32.shl
                  (i32.sub
                   (i32.const 0)
                   (tee_local $18
                    (i32.load16_s
                     (i32.add
                      (get_local $16)
                      (i32.shl
                       (get_local $17)
                       (i32.const 1)
                      )
                     )
                    )
                   )
                  )
                  (i32.const 2)
                 )
                )
               )
               (get_local $13)
               (i32.const 40)
              )
             )
             (f64.const 0)
            )
            (block (result f32)
             (set_local $25
              (call $_silk_energy_FLP
               (get_local $20)
               (i32.const 40)
              )
             )
             (f32.demote/f64
              (f64.div
               (f64.mul
                (get_local $32)
                (f64.const 2)
               )
               (f64.add
                (get_local $25)
                (get_local $21)
               )
              )
             )
            )
            (f32.const 0)
           )
          )
          (f32.store
           (i32.add
            (i32.add
             (get_local $23)
             (i32.mul
              (get_local $14)
              (i32.const 596)
             )
            )
            (i32.shl
             (get_local $18)
             (i32.const 2)
            )
           )
           (get_local $6)
          )
          (set_local $17
           (i32.add
            (get_local $17)
            (i32.const 1)
           )
          )
          (br $while-in25)
         )
        )
       )
       (set_local $14
        (i32.add
         (get_local $14)
         (i32.const 1)
        )
       )
       (set_local $13
        (i32.add
         (get_local $13)
         (i32.const 160)
        )
       )
       (br $while-in23)
      )
     )
    )
    (set_local $45
     (if (result f32)
      (i32.gt_s
       (get_local $5)
       (i32.const 0)
      )
      (call $_silk_log2
       (f64.promote/f32
        (f32.convert_s/i32
         (tee_local $5
          (if (result i32)
           (i32.eq
            (get_local $8)
            (i32.const 12)
           )
           (i32.div_s
            (i32.shl
             (get_local $5)
             (i32.const 1)
            )
            (i32.const 3)
           )
           (i32.shr_s
            (get_local $5)
            (get_local $44)
           )
          )
         )
        )
       )
      )
      (f32.const 0)
     )
    )
    (set_local $27
     (if (result i32)
      (tee_local $28
       (i32.eq
        (get_local $10)
        (i32.const 4)
       )
      )
      (block (result i32)
       (set_local $18
        (i32.const 28080)
       )
       (set_local $20
        (i32.const 11)
       )
       (if (result i32)
        (i32.and
         (get_local $31)
         (i32.gt_s
          (get_local $9)
          (i32.const 0)
         )
        )
        (i32.const 11)
        (i32.const 3)
       )
      )
      (block (result i32)
       (set_local $18
        (i32.const 47153)
       )
       (set_local $20
        (i32.const 3)
       )
       (i32.const 3)
      )
     )
    )
    (set_local $41
     (f32.mul
      (tee_local $40
       (f32.convert_s/i32
        (get_local $10)
       )
      )
      (f32.const 0.20000000298023224)
     )
    )
    (set_local $31
     (i32.gt_s
      (get_local $5)
      (i32.const 0)
     )
    )
    (set_local $46
     (f32.mul
      (get_local $40)
      (get_local $7)
     )
    )
    (set_local $13
     (i32.const -1)
    )
    (set_local $5
     (i32.const 0)
    )
    (set_local $19
     (f32.const -1e3)
    )
    (set_local $17
     (i32.const 0)
    )
    (loop $while-in27
     (if
      (i32.lt_s
       (get_local $17)
       (get_local $12)
      )
      (block
       (set_local $16
        (i32.load
         (i32.add
          (get_local $29)
          (i32.shl
           (get_local $17)
           (i32.const 2)
          )
         )
        )
       )
       (set_local $11
        (i32.const 0)
       )
       (loop $while-in29
        (if
         (i32.lt_u
          (get_local $11)
          (get_local $27)
         )
         (block
          (f32.store
           (tee_local $22
            (i32.add
             (get_local $37)
             (i32.shl
              (get_local $11)
              (i32.const 2)
             )
            )
           )
           (f32.const 0)
          )
          (set_local $14
           (i32.const 0)
          )
          (set_local $6
           (f32.const 0)
          )
          (loop $while-in31
           (if
            (i32.lt_s
             (get_local $14)
             (get_local $10)
            )
            (block
             (f32.store
              (get_local $22)
              (tee_local $6
               (f32.add
                (get_local $6)
                (f32.load
                 (i32.add
                  (i32.add
                   (get_local $23)
                   (i32.mul
                    (get_local $14)
                    (i32.const 596)
                   )
                  )
                  (i32.shl
                   (i32.add
                    (get_local $16)
                    (i32.load8_s
                     (i32.add
                      (get_local $18)
                      (i32.add
                       (i32.mul
                        (get_local $14)
                        (get_local $20)
                       )
                       (get_local $11)
                      )
                     )
                    )
                   )
                   (i32.const 2)
                  )
                 )
                )
               )
              )
             )
             (set_local $14
              (i32.add
               (get_local $14)
               (i32.const 1)
              )
             )
             (br $while-in31)
            )
           )
          )
          (set_local $11
           (i32.add
            (get_local $11)
            (i32.const 1)
           )
          )
          (br $while-in29)
         )
        )
       )
       (set_local $11
        (i32.const 0)
       )
       (set_local $6
        (f32.const -1e3)
       )
       (set_local $14
        (i32.const 0)
       )
       (loop $while-in33
        (if
         (i32.lt_u
          (get_local $14)
          (get_local $27)
         )
         (block
          (if
           (tee_local $22
            (f32.gt
             (tee_local $7
              (f32.load
               (i32.add
                (get_local $37)
                (i32.shl
                 (get_local $14)
                 (i32.const 2)
                )
               )
              )
             )
             (get_local $6)
            )
           )
           (set_local $6
            (get_local $7)
           )
          )
          (if
           (get_local $22)
           (set_local $11
            (get_local $14)
           )
          )
          (set_local $14
           (i32.add
            (get_local $14)
            (i32.const 1)
           )
          )
          (br $while-in33)
         )
        )
       )
       (set_local $42
        (call $_silk_log2
         (f64.promote/f32
          (f32.convert_s/i32
           (get_local $16)
          )
         )
        )
       )
       (set_local $7
        (f32.sub
         (get_local $6)
         (f32.mul
          (get_local $41)
          (get_local $42)
         )
        )
       )
       (if
        (get_local $31)
        (set_local $7
         (f32.sub
          (get_local $7)
          (f32.div
           (f32.mul
            (f32.mul
             (get_local $41)
             (f32.load
              (get_local $4)
             )
            )
            (tee_local $7
             (f32.mul
              (tee_local $7
               (f32.sub
                (get_local $42)
                (get_local $45)
               )
              )
              (get_local $7)
             )
            )
           )
           (f32.add
            (get_local $7)
            (f32.const 0.5)
           )
          )
         )
        )
       )
       (if
        (i32.eqz
         (tee_local $14
          (i32.and
           (f32.gt
            (get_local $7)
            (get_local $19)
           )
           (f32.gt
            (get_local $6)
            (get_local $46)
           )
          )
         )
        )
        (set_local $6
         (get_local $36)
        )
       )
       (if
        (i32.eqz
         (get_local $14)
        )
        (set_local $7
         (get_local $19)
        )
       )
       (if
        (get_local $14)
        (set_local $5
         (get_local $11)
        )
       )
       (if
        (get_local $14)
        (set_local $13
         (get_local $16)
        )
       )
       (set_local $19
        (get_local $7)
       )
       (set_local $36
        (get_local $6)
       )
       (set_local $17
        (i32.add
         (get_local $17)
         (i32.const 1)
        )
       )
       (br $while-in27)
      )
     )
    )
    (if
     (i32.eq
      (get_local $13)
      (i32.const -1)
     )
     (block
      (i64.store align=4
       (get_local $1)
       (i64.const 0)
      )
      (i64.store offset=8 align=4
       (get_local $1)
       (i64.const 0)
      )
      (br $folding-inner0)
     )
    )
    (f32.store
     (get_local $4)
     (f32.div
      (get_local $36)
      (get_local $40)
     )
    )
    (set_local $0
     (if (result i32)
      (i32.gt_s
       (get_local $8)
       (i32.const 8)
      )
      (block (result i32)
       (set_local $4
        (if (result i32)
         (i32.eq
          (get_local $8)
          (i32.const 12)
         )
         (i32.add
          (i32.shr_s
           (tee_local $4
            (i32.mul
             (i32.shr_s
              (i32.shl
               (get_local $13)
               (i32.const 16)
              )
              (i32.const 16)
             )
             (i32.const 3)
            )
           )
           (i32.const 1)
          )
          (i32.and
           (get_local $4)
           (i32.const 1)
          )
         )
         (i32.shl
          (get_local $13)
          (i32.const 1)
         )
        )
       )
       (if
        (i32.lt_s
         (get_local $15)
         (get_local $24)
        )
        (if
         (i32.lt_s
          (get_local $4)
          (get_local $24)
         )
         (if
          (i32.lt_s
           (get_local $4)
           (get_local $15)
          )
          (set_local $4
           (get_local $15)
          )
         )
         (set_local $4
          (get_local $26)
         )
        )
        (if
         (i32.gt_s
          (get_local $4)
          (get_local $15)
         )
         (set_local $4
          (get_local $15)
         )
         (if
          (i32.lt_s
           (get_local $4)
           (get_local $26)
          )
          (set_local $4
           (get_local $26)
          )
         )
        )
       )
       (set_local $12
        (call $_silk_max_int
         (i32.add
          (get_local $4)
          (i32.const -2)
         )
         (get_local $15)
        )
       )
       (set_local $16
        (call $_silk_min_int_238
         (i32.add
          (get_local $4)
          (i32.const 2)
         )
         (get_local $26)
        )
       )
       (call $_silk_P_Ana_calc_corr_st3
        (get_local $39)
        (get_local $0)
        (get_local $12)
        (get_local $35)
        (get_local $10)
        (get_local $9)
       )
       (call $_silk_P_Ana_calc_energy_st3
        (get_local $38)
        (get_local $0)
        (get_local $12)
        (get_local $35)
        (get_local $10)
        (get_local $9)
       )
       (set_local $13
        (if (result i32)
         (get_local $28)
         (block (result i32)
          (set_local $14
           (i32.const 34)
          )
          (set_local $26
           (i32.load8_s
            (i32.add
             (get_local $9)
             (i32.const 47163)
            )
           )
          )
          (i32.const 28128)
         )
         (block (result i32)
          (set_local $14
           (i32.const 12)
          )
          (set_local $26
           (i32.const 12)
          )
          (i32.const 28048)
         )
        )
       )
       (set_local $19
        (f32.div
         (f32.const 0.05000000074505806)
         (f32.convert_s/i32
          (get_local $4)
         )
        )
       )
       (set_local $32
        (f64.add
         (call $_silk_energy_FLP
          (i32.add
           (get_local $0)
           (i32.shl
            (i32.mul
             (get_local $8)
             (i32.const 20)
            )
            (i32.const 2)
           )
          )
          (i32.mul
           (get_local $35)
           (get_local $10)
          )
         )
         (f64.const 1)
        )
       )
       (set_local $5
        (get_local $4)
       )
       (set_local $11
        (i32.const 0)
       )
       (set_local $8
        (get_local $12)
       )
       (set_local $4
        (i32.const 0)
       )
       (set_local $6
        (f32.const -1e3)
       )
       (loop $while-in35
        (if
         (i32.le_s
          (get_local $8)
          (get_local $16)
         )
         (block
          (set_local $0
           (get_local $5)
          )
          (set_local $5
           (i32.const 0)
          )
          (loop $while-in37
           (if
            (i32.lt_s
             (get_local $5)
             (get_local $26)
            )
            (block
             (set_local $25
              (f64.const 0)
             )
             (set_local $21
              (get_local $32)
             )
             (set_local $9
              (i32.const 0)
             )
             (loop $while-in39
              (if
               (i32.lt_s
                (get_local $9)
                (get_local $10)
               )
               (block
                (set_local $25
                 (f64.add
                  (get_local $25)
                  (f64.promote/f32
                   (f32.load
                    (i32.add
                     (i32.add
                      (i32.add
                       (get_local $39)
                       (i32.mul
                        (get_local $9)
                        (i32.const 680)
                       )
                      )
                      (i32.mul
                       (get_local $5)
                       (i32.const 20)
                      )
                     )
                     (i32.shl
                      (get_local $11)
                      (i32.const 2)
                     )
                    )
                   )
                  )
                 )
                )
                (set_local $21
                 (f64.add
                  (get_local $21)
                  (f64.promote/f32
                   (f32.load
                    (i32.add
                     (i32.add
                      (i32.add
                       (get_local $38)
                       (i32.mul
                        (get_local $9)
                        (i32.const 680)
                       )
                      )
                      (i32.mul
                       (get_local $5)
                       (i32.const 20)
                      )
                     )
                     (i32.shl
                      (get_local $11)
                      (i32.const 2)
                     )
                    )
                   )
                  )
                 )
                )
                (set_local $9
                 (i32.add
                  (get_local $9)
                  (i32.const 1)
                 )
                )
                (br $while-in39)
               )
              )
             )
             (if
              (f32.gt
               (tee_local $7
                (if (result f32)
                 (f64.gt
                  (get_local $25)
                  (f64.const 0)
                 )
                 (f32.mul
                  (f32.sub
                   (f32.const 1)
                   (f32.mul
                    (get_local $19)
                    (f32.convert_s/i32
                     (get_local $5)
                    )
                   )
                  )
                  (f32.demote/f64
                   (f64.div
                    (f64.mul
                     (get_local $25)
                     (f64.const 2)
                    )
                    (get_local $21)
                   )
                  )
                 )
                 (f32.const 0)
                )
               )
               (get_local $6)
              )
              (block
               (if
                (tee_local $9
                 (i32.lt_s
                  (i32.add
                   (get_local $8)
                   (i32.load8_s
                    (i32.add
                     (get_local $5)
                     (i32.const 28128)
                    )
                   )
                  )
                  (get_local $24)
                 )
                )
                (set_local $6
                 (get_local $7)
                )
               )
               (if
                (get_local $9)
                (set_local $4
                 (get_local $5)
                )
               )
               (if
                (get_local $9)
                (set_local $0
                 (get_local $8)
                )
               )
              )
             )
             (set_local $5
              (i32.add
               (get_local $5)
               (i32.const 1)
              )
             )
             (br $while-in37)
            )
           )
          )
          (set_local $5
           (get_local $0)
          )
          (set_local $11
           (i32.add
            (get_local $11)
            (i32.const 1)
           )
          )
          (set_local $8
           (i32.add
            (get_local $8)
            (i32.const 1)
           )
          )
          (br $while-in35)
         )
        )
       )
       (set_local $9
        (i32.gt_s
         (get_local $15)
         (get_local $24)
        )
       )
       (set_local $8
        (i32.const 0)
       )
       (loop $while-in41
        (if
         (i32.lt_s
          (get_local $8)
          (get_local $10)
         )
         (block
          (i32.store
           (tee_local $12
            (i32.add
             (get_local $1)
             (i32.shl
              (get_local $8)
              (i32.const 2)
             )
            )
           )
           (tee_local $0
            (i32.add
             (get_local $5)
             (i32.load8_s
              (i32.add
               (get_local $13)
               (i32.add
                (i32.mul
                 (get_local $8)
                 (get_local $14)
                )
                (get_local $4)
               )
              )
             )
            )
           )
          )
          (if
           (get_local $9)
           (if
            (i32.gt_s
             (get_local $0)
             (get_local $15)
            )
            (set_local $0
             (get_local $15)
            )
            (if
             (i32.lt_s
              (get_local $0)
              (get_local $24)
             )
             (set_local $0
              (get_local $24)
             )
            )
           )
           (if
            (i32.gt_s
             (get_local $0)
             (get_local $24)
            )
            (set_local $0
             (get_local $24)
            )
            (if
             (i32.lt_s
              (get_local $0)
              (get_local $15)
             )
             (set_local $0
              (get_local $15)
             )
            )
           )
          )
          (i32.store
           (get_local $12)
           (get_local $0)
          )
          (set_local $8
           (i32.add
            (get_local $8)
            (i32.const 1)
           )
          )
          (br $while-in41)
         )
        )
       )
       (i32.sub
        (get_local $5)
        (get_local $15)
       )
      )
      (block (result i32)
       (set_local $4
        (i32.const 0)
       )
       (loop $while-in43
        (if
         (i32.lt_s
          (get_local $4)
          (get_local $10)
         )
         (block
          (i32.store
           (i32.add
            (get_local $1)
            (i32.shl
             (get_local $4)
             (i32.const 2)
            )
           )
           (if (result i32)
            (i32.lt_s
             (if (result i32)
              (i32.gt_s
               (tee_local $0
                (i32.add
                 (get_local $13)
                 (i32.load8_s
                  (i32.add
                   (get_local $18)
                   (i32.add
                    (i32.mul
                     (get_local $4)
                     (get_local $20)
                    )
                    (get_local $5)
                   )
                  )
                 )
                )
               )
               (i32.const 16)
              )
              (get_local $0)
              (tee_local $0
               (i32.const 16)
              )
             )
             (i32.const 144)
            )
            (get_local $0)
            (i32.const 144)
           )
          )
          (set_local $4
           (i32.add
            (get_local $4)
            (i32.const 1)
           )
          )
          (br $while-in43)
         )
        )
       )
       (set_local $4
        (get_local $5)
       )
       (i32.add
        (get_local $13)
        (i32.const 65520)
       )
      )
     )
    )
    (i32.store16
     (get_local $2)
     (get_local $0)
    )
    (i32.store8
     (get_local $3)
     (get_local $4)
    )
    (if
     (i32.gt_s
      (i32.load16_s
       (get_local $2)
      )
      (i32.const -1)
     )
     (block
      (set_global $STACKTOP
       (get_local $30)
      )
      (return
       (i32.const 0)
      )
     )
     (call $_celt_fatal
      (i32.const 48932)
      (i32.const 48468)
      (i32.const 474)
     )
    )
   )
   (return
    (i32.const 0)
   )
  )
  (f32.store
   (get_local $4)
   (f32.const 0)
  )
  (i32.store16
   (get_local $2)
   (i32.const 0)
  )
  (i32.store8
   (get_local $3)
   (i32.const 0)
  )
  (set_global $STACKTOP
   (get_local $30)
  )
  (i32.const 1)
 )
 (func $_silk_P_Ana_calc_corr_st3 (; 348 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (set_local $8
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.const 192)
   )
  )
  (if
   (i32.le_s
    (get_local $5)
    (i32.const -1)
   )
   (call $_celt_fatal
    (i32.const 48505)
    (i32.const 48468)
    (i32.const 509)
   )
  )
  (if
   (i32.ge_s
    (get_local $5)
    (i32.const 3)
   )
   (call $_celt_fatal
    (i32.const 48557)
    (i32.const 48468)
    (i32.const 510)
   )
  )
  (set_local $11
   (i32.add
    (get_local $8)
    (i32.const 96)
   )
  )
  (block $switch
   (block $switch-default
    (block $switch-case0
     (block $switch-case
      (br_table $switch-case0 $switch-default $switch-case $switch-default
       (i32.sub
        (get_local $4)
        (i32.const 2)
       )
      )
     )
     (set_local $12
      (i32.const 28128)
     )
     (set_local $10
      (i32.add
       (i32.shl
        (get_local $5)
        (i32.const 3)
       )
       (i32.const 28272)
      )
     )
     (set_local $13
      (i32.const 34)
     )
     (set_local $14
      (i32.load8_s
       (i32.add
        (get_local $5)
        (i32.const 47163)
       )
      )
     )
     (br $switch)
    )
    (set_local $12
     (i32.const 28048)
    )
    (set_local $10
     (i32.const 47159)
    )
    (set_local $13
     (i32.const 12)
    )
    (set_local $14
     (i32.const 12)
    )
    (br $switch)
   )
   (call $_celt_fatal
    (i32.const 48965)
    (i32.const 48468)
    (i32.const 518)
   )
  )
  (set_local $15
   (i32.sub
    (i32.const 0)
    (get_local $2)
   )
  )
  (set_local $5
   (i32.const 0)
  )
  (set_local $9
   (i32.add
    (get_local $1)
    (i32.shl
     (get_local $3)
     (i32.const 4)
    )
   )
  )
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $5)
     (get_local $4)
    )
    (block
     (set_local $2
      (i32.load8_s
       (i32.add
        (get_local $10)
        (tee_local $1
         (i32.shl
          (get_local $5)
          (i32.const 1)
         )
        )
       )
      )
     )
     (call $_celt_pitch_xcorr_c
      (get_local $9)
      (i32.add
       (i32.add
        (get_local $9)
        (i32.shl
         (get_local $15)
         (i32.const 2)
        )
       )
       (i32.shl
        (i32.sub
         (i32.const 0)
         (tee_local $6
          (i32.load8_s
           (i32.add
            (get_local $10)
            (i32.or
             (get_local $1)
             (i32.const 1)
            )
           )
          )
         )
        )
        (i32.const 2)
       )
      )
      (get_local $8)
      (get_local $3)
      (i32.add
       (i32.sub
        (get_local $6)
        (get_local $2)
       )
       (i32.const 1)
      )
     )
     (set_local $7
      (i32.const 0)
     )
     (set_local $1
      (get_local $2)
     )
     (loop $while-in2
      (if
       (i32.le_s
        (get_local $1)
        (get_local $6)
       )
       (block
        (i32.store
         (i32.add
          (get_local $11)
          (i32.shl
           (get_local $7)
           (i32.const 2)
          )
         )
         (i32.load
          (i32.add
           (get_local $8)
           (i32.shl
            (i32.sub
             (get_local $6)
             (get_local $1)
            )
            (i32.const 2)
           )
          )
         )
        )
        (set_local $7
         (i32.add
          (get_local $7)
          (i32.const 1)
         )
        )
        (set_local $1
         (i32.add
          (get_local $1)
          (i32.const 1)
         )
        )
        (br $while-in2)
       )
      )
     )
     (set_local $7
      (i32.mul
       (get_local $5)
       (get_local $13)
      )
     )
     (set_local $1
      (i32.const 0)
     )
     (loop $while-in4
      (if
       (i32.lt_s
        (get_local $1)
        (get_local $14)
       )
       (block
        (set_local $16
         (i32.sub
          (i32.load8_s
           (i32.add
            (get_local $12)
            (i32.add
             (get_local $7)
             (get_local $1)
            )
           )
          )
          (get_local $2)
         )
        )
        (set_local $6
         (i32.const 0)
        )
        (loop $while-in6
         (if
          (i32.ne
           (get_local $6)
           (i32.const 5)
          )
          (block
           (i32.store
            (i32.add
             (i32.add
              (i32.add
               (get_local $0)
               (i32.mul
                (get_local $5)
                (i32.const 680)
               )
              )
              (i32.mul
               (get_local $1)
               (i32.const 20)
              )
             )
             (i32.shl
              (get_local $6)
              (i32.const 2)
             )
            )
            (i32.load
             (i32.add
              (get_local $11)
              (i32.shl
               (i32.add
                (get_local $16)
                (get_local $6)
               )
               (i32.const 2)
              )
             )
            )
           )
           (set_local $6
            (i32.add
             (get_local $6)
             (i32.const 1)
            )
           )
           (br $while-in6)
          )
         )
        )
        (set_local $1
         (i32.add
          (get_local $1)
          (i32.const 1)
         )
        )
        (br $while-in4)
       )
      )
     )
     (set_local $5
      (i32.add
       (get_local $5)
       (i32.const 1)
      )
     )
     (set_local $9
      (i32.add
       (get_local $9)
       (i32.shl
        (get_local $3)
        (i32.const 2)
       )
      )
     )
     (br $while-in)
    )
   )
  )
  (set_global $STACKTOP
   (get_local $8)
  )
 )
 (func $_silk_P_Ana_calc_energy_st3 (; 349 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32)
  (local $6 i32)
  (local $7 f64)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (set_local $8
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.const 96)
   )
  )
  (if
   (i32.le_s
    (get_local $5)
    (i32.const -1)
   )
   (call $_celt_fatal
    (i32.const 48505)
    (i32.const 48468)
    (i32.const 575)
   )
  )
  (if
   (i32.ge_s
    (get_local $5)
    (i32.const 3)
   )
   (call $_celt_fatal
    (i32.const 48557)
    (i32.const 48468)
    (i32.const 576)
   )
  )
  (block $switch
   (block $switch-default
    (block $switch-case0
     (block $switch-case
      (br_table $switch-case0 $switch-default $switch-case $switch-default
       (i32.sub
        (get_local $4)
        (i32.const 2)
       )
      )
     )
     (set_local $12
      (i32.const 28128)
     )
     (set_local $9
      (i32.add
       (i32.shl
        (get_local $5)
        (i32.const 3)
       )
       (i32.const 28272)
      )
     )
     (set_local $13
      (i32.const 34)
     )
     (set_local $14
      (i32.load8_s
       (i32.add
        (get_local $5)
        (i32.const 47163)
       )
      )
     )
     (br $switch)
    )
    (set_local $12
     (i32.const 28048)
    )
    (set_local $9
     (i32.const 47159)
    )
    (set_local $13
     (i32.const 12)
    )
    (set_local $14
     (i32.const 12)
    )
    (br $switch)
   )
   (call $_celt_fatal
    (i32.const 48965)
    (i32.const 48468)
    (i32.const 584)
   )
  )
  (set_local $10
   (i32.add
    (get_local $1)
    (i32.shl
     (get_local $3)
     (i32.const 4)
    )
   )
  )
  (set_local $1
   (i32.const 0)
  )
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $1)
     (get_local $4)
    )
    (block
     (set_local $7
      (f64.add
       (call $_silk_energy_FLP
        (tee_local $6
         (i32.add
          (get_local $10)
          (i32.shl
           (i32.sub
            (i32.const 0)
            (i32.add
             (tee_local $15
              (i32.load8_s
               (i32.add
                (get_local $9)
                (tee_local $5
                 (i32.shl
                  (get_local $1)
                  (i32.const 1)
                 )
                )
               )
              )
             )
             (get_local $2)
            )
           )
           (i32.const 2)
          )
         )
        )
        (get_local $3)
       )
       (f64.const 0.001)
      )
     )
     (f32.store
      (get_local $8)
      (f32.demote/f64
       (get_local $7)
      )
     )
     (set_local $11
      (i32.sub
       (i32.load8_s
        (i32.add
         (get_local $9)
         (i32.or
          (get_local $5)
          (i32.const 1)
         )
        )
       )
       (get_local $15)
      )
     )
     (set_local $5
      (i32.const 1)
     )
     (loop $while-in2
      (if
       (i32.le_s
        (get_local $5)
        (get_local $11)
       )
       (block
        (f32.store
         (i32.add
          (get_local $8)
          (i32.shl
           (get_local $5)
           (i32.const 2)
          )
         )
         (f32.demote/f64
          (tee_local $7
           (f64.add
            (f64.sub
             (get_local $7)
             (f64.mul
              (tee_local $7
               (f64.promote/f32
                (f32.load
                 (i32.add
                  (get_local $6)
                  (i32.shl
                   (i32.sub
                    (get_local $3)
                    (get_local $5)
                   )
                   (i32.const 2)
                  )
                 )
                )
               )
              )
              (get_local $7)
             )
            )
            (f64.mul
             (tee_local $7
              (f64.promote/f32
               (f32.load
                (i32.add
                 (get_local $6)
                 (i32.shl
                  (i32.sub
                   (i32.const 0)
                   (get_local $5)
                  )
                  (i32.const 2)
                 )
                )
               )
              )
             )
             (get_local $7)
            )
           )
          )
         )
        )
        (set_local $5
         (i32.add
          (get_local $5)
          (i32.const 1)
         )
        )
        (br $while-in2)
       )
      )
     )
     (set_local $11
      (i32.mul
       (get_local $1)
       (get_local $13)
      )
     )
     (set_local $5
      (i32.const 0)
     )
     (loop $while-in4
      (if
       (i32.lt_s
        (get_local $5)
        (get_local $14)
       )
       (block
        (set_local $16
         (i32.sub
          (i32.load8_s
           (i32.add
            (get_local $12)
            (i32.add
             (get_local $11)
             (get_local $5)
            )
           )
          )
          (get_local $15)
         )
        )
        (set_local $6
         (i32.const 0)
        )
        (loop $while-in6
         (if
          (i32.ne
           (get_local $6)
           (i32.const 5)
          )
          (block
           (i32.store
            (i32.add
             (i32.add
              (i32.add
               (get_local $0)
               (i32.mul
                (get_local $1)
                (i32.const 680)
               )
              )
              (i32.mul
               (get_local $5)
               (i32.const 20)
              )
             )
             (i32.shl
              (get_local $6)
              (i32.const 2)
             )
            )
            (i32.load
             (i32.add
              (get_local $8)
              (i32.shl
               (i32.add
                (get_local $16)
                (get_local $6)
               )
               (i32.const 2)
              )
             )
            )
           )
           (set_local $6
            (i32.add
             (get_local $6)
             (i32.const 1)
            )
           )
           (br $while-in6)
          )
         )
        )
        (set_local $5
         (i32.add
          (get_local $5)
          (i32.const 1)
         )
        )
        (br $while-in4)
       )
      )
     )
     (set_local $10
      (i32.add
       (get_local $10)
       (i32.shl
        (get_local $3)
        (i32.const 2)
       )
      )
     )
     (set_local $1
      (i32.add
       (get_local $1)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (set_global $STACKTOP
   (get_local $8)
  )
 )
 (func $_silk_scale_copy_vector_FLP (; 350 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 f32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (set_local $5
   (i32.and
    (get_local $3)
    (i32.const 65532)
   )
  )
  (loop $while-in
   (if
    (i32.lt_u
     (get_local $4)
     (get_local $5)
    )
    (block
     (f32.store
      (i32.add
       (get_local $0)
       (i32.shl
        (get_local $4)
        (i32.const 2)
       )
      )
      (f32.mul
       (f32.load
        (i32.add
         (get_local $1)
         (i32.shl
          (get_local $4)
          (i32.const 2)
         )
        )
       )
       (get_local $2)
      )
     )
     (f32.store
      (i32.add
       (get_local $0)
       (i32.shl
        (tee_local $6
         (i32.or
          (get_local $4)
          (i32.const 1)
         )
        )
        (i32.const 2)
       )
      )
      (f32.mul
       (f32.load
        (i32.add
         (get_local $1)
         (i32.shl
          (get_local $6)
          (i32.const 2)
         )
        )
       )
       (get_local $2)
      )
     )
     (f32.store
      (i32.add
       (get_local $0)
       (i32.shl
        (tee_local $6
         (i32.or
          (get_local $4)
          (i32.const 2)
         )
        )
        (i32.const 2)
       )
      )
      (f32.mul
       (f32.load
        (i32.add
         (get_local $1)
         (i32.shl
          (get_local $6)
          (i32.const 2)
         )
        )
       )
       (get_local $2)
      )
     )
     (f32.store
      (i32.add
       (get_local $0)
       (i32.shl
        (tee_local $6
         (i32.or
          (get_local $4)
          (i32.const 3)
         )
        )
        (i32.const 2)
       )
      )
      (f32.mul
       (f32.load
        (i32.add
         (get_local $1)
         (i32.shl
          (get_local $6)
          (i32.const 2)
         )
        )
       )
       (get_local $2)
      )
     )
     (set_local $4
      (i32.add
       (get_local $4)
       (i32.const 4)
      )
     )
     (br $while-in)
    )
   )
  )
  (loop $while-in1
   (if
    (i32.lt_s
     (get_local $5)
     (get_local $3)
    )
    (block
     (f32.store
      (i32.add
       (get_local $0)
       (i32.shl
        (get_local $5)
        (i32.const 2)
       )
      )
      (f32.mul
       (f32.load
        (i32.add
         (get_local $1)
         (i32.shl
          (get_local $5)
          (i32.const 2)
         )
        )
       )
       (get_local $2)
      )
     )
     (set_local $5
      (i32.add
       (get_local $5)
       (i32.const 1)
      )
     )
     (br $while-in1)
    )
   )
  )
 )
 (func $_silk_scale_vector_FLP (; 351 ;) (; has Stack IR ;) (param $0 i32) (param $1 f32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (set_local $5
   (i32.and
    (get_local $2)
    (i32.const 65532)
   )
  )
  (loop $while-in
   (if
    (i32.lt_u
     (get_local $3)
     (get_local $5)
    )
    (block
     (f32.store
      (tee_local $4
       (i32.add
        (get_local $0)
        (i32.shl
         (get_local $3)
         (i32.const 2)
        )
       )
      )
      (f32.mul
       (f32.load
        (get_local $4)
       )
       (get_local $1)
      )
     )
     (f32.store
      (tee_local $4
       (i32.add
        (get_local $0)
        (i32.shl
         (i32.or
          (get_local $3)
          (i32.const 1)
         )
         (i32.const 2)
        )
       )
      )
      (f32.mul
       (f32.load
        (get_local $4)
       )
       (get_local $1)
      )
     )
     (f32.store
      (tee_local $4
       (i32.add
        (get_local $0)
        (i32.shl
         (i32.or
          (get_local $3)
          (i32.const 2)
         )
         (i32.const 2)
        )
       )
      )
      (f32.mul
       (f32.load
        (get_local $4)
       )
       (get_local $1)
      )
     )
     (f32.store
      (tee_local $4
       (i32.add
        (get_local $0)
        (i32.shl
         (i32.or
          (get_local $3)
          (i32.const 3)
         )
         (i32.const 2)
        )
       )
      )
      (f32.mul
       (f32.load
        (get_local $4)
       )
       (get_local $1)
      )
     )
     (set_local $3
      (i32.add
       (get_local $3)
       (i32.const 4)
      )
     )
     (br $while-in)
    )
   )
  )
  (loop $while-in1
   (if
    (i32.lt_s
     (get_local $5)
     (get_local $2)
    )
    (block
     (f32.store
      (tee_local $3
       (i32.add
        (get_local $0)
        (i32.shl
         (get_local $5)
         (i32.const 2)
        )
       )
      )
      (f32.mul
       (f32.load
        (get_local $3)
       )
       (get_local $1)
      )
     )
     (set_local $5
      (i32.add
       (get_local $5)
       (i32.const 1)
      )
     )
     (br $while-in1)
    )
   )
  )
 )
 (func $_silk_schur_FLP (; 352 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result f32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 f64)
  (local $7 i32)
  (local $8 i32)
  (local $9 f64)
  (local $10 i32)
  (local $11 f64)
  (local $12 f32)
  (set_local $4
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.const 400)
   )
  )
  (if
   (i32.ge_u
    (get_local $2)
    (i32.const 25)
   )
   (call $_celt_fatal
    (i32.const 49016)
    (i32.const 49076)
    (i32.const 44)
   )
  )
  (loop $while-in
   (f64.store offset=8
    (i32.add
     (get_local $4)
     (i32.shl
      (get_local $3)
      (i32.const 4)
     )
    )
    (tee_local $6
     (f64.promote/f32
      (f32.load
       (i32.add
        (get_local $1)
        (i32.shl
         (get_local $3)
         (i32.const 2)
        )
       )
      )
     )
    )
   )
   (f64.store
    (i32.add
     (get_local $4)
     (i32.shl
      (get_local $3)
      (i32.const 4)
     )
    )
    (get_local $6)
   )
   (set_local $5
    (i32.add
     (get_local $3)
     (i32.const 1)
    )
   )
   (if
    (i32.ne
     (get_local $3)
     (get_local $2)
    )
    (block
     (set_local $3
      (get_local $5)
     )
     (br $while-in)
    )
   )
  )
  (set_local $8
   (i32.add
    (get_local $4)
    (i32.const 8)
   )
  )
  (set_local $1
   (i32.const 0)
  )
  (loop $while-in1
   (if
    (i32.ne
     (get_local $1)
     (get_local $2)
    )
    (block
     (f32.store
      (i32.add
       (get_local $0)
       (i32.shl
        (get_local $1)
        (i32.const 2)
       )
      )
      (f32.demote/f64
       (tee_local $6
        (f64.div
         (f64.neg
          (f64.load
           (i32.add
            (get_local $4)
            (i32.shl
             (tee_local $3
              (i32.add
               (get_local $1)
               (i32.const 1)
              )
             )
             (i32.const 4)
            )
           )
          )
         )
         (if (result f64)
          (f64.gt
           (tee_local $6
            (f64.load
             (get_local $8)
            )
           )
           (f64.const 9.999999717180685e-10)
          )
          (get_local $6)
          (f64.const 9.999999717180685e-10)
         )
        )
       )
      )
     )
     (set_local $10
      (i32.sub
       (get_local $2)
       (get_local $1)
      )
     )
     (set_local $5
      (i32.const 0)
     )
     (loop $while-in3
      (if
       (i32.lt_s
        (get_local $5)
        (get_local $10)
       )
       (block
        (set_local $9
         (f64.load
          (tee_local $7
           (i32.add
            (get_local $4)
            (i32.shl
             (i32.add
              (i32.add
               (get_local $5)
               (get_local $1)
              )
              (i32.const 1)
             )
             (i32.const 4)
            )
           )
          )
         )
        )
        (f64.store
         (get_local $7)
         (f64.add
          (get_local $9)
          (f64.mul
           (tee_local $11
            (f64.load
             (tee_local $7
              (i32.add
               (i32.add
                (get_local $4)
                (i32.shl
                 (get_local $5)
                 (i32.const 4)
                )
               )
               (i32.const 8)
              )
             )
            )
           )
           (get_local $6)
          )
         )
        )
        (f64.store
         (get_local $7)
         (f64.add
          (get_local $11)
          (f64.mul
           (get_local $9)
           (get_local $6)
          )
         )
        )
        (set_local $5
         (i32.add
          (get_local $5)
          (i32.const 1)
         )
        )
        (br $while-in3)
       )
      )
     )
     (set_local $1
      (get_local $3)
     )
     (br $while-in1)
    )
   )
  )
  (set_local $12
   (f32.demote/f64
    (f64.load
     (get_local $8)
    )
   )
  )
  (set_global $STACKTOP
   (get_local $4)
  )
  (get_local $12)
 )
 (func $_silk_insertion_sort_decreasing_FLP (; 353 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 f32)
  (local $7 f32)
  (local $8 i32)
  (if
   (i32.le_s
    (get_local $2)
    (i32.const 0)
   )
   (call $_celt_fatal
    (i32.const 49099)
    (i32.const 49123)
    (i32.const 50)
   )
  )
  (if
   (i32.lt_s
    (i32.const 65)
    (get_local $2)
   )
   (call $_celt_fatal
    (i32.const 49169)
    (i32.const 49123)
    (i32.const 52)
   )
  )
  (loop $while-in
   (if
    (i32.ne
     (get_local $3)
     (get_local $2)
    )
    (block
     (i32.store
      (i32.add
       (get_local $1)
       (i32.shl
        (get_local $3)
        (i32.const 2)
       )
      )
      (get_local $3)
     )
     (set_local $3
      (i32.add
       (get_local $3)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (set_local $5
   (i32.const 1)
  )
  (loop $while-in1
   (if
    (i32.ne
     (get_local $5)
     (get_local $2)
    )
    (block
     (set_local $6
      (f32.load
       (i32.add
        (get_local $0)
        (i32.shl
         (get_local $5)
         (i32.const 2)
        )
       )
      )
     )
     (set_local $3
      (get_local $5)
     )
     (loop $while-in3
      (block $while-out2
       (br_if $while-out2
        (i32.le_s
         (get_local $3)
         (i32.const 0)
        )
       )
       (br_if $while-out2
        (i32.eqz
         (f32.gt
          (get_local $6)
          (tee_local $7
           (f32.load
            (i32.add
             (get_local $0)
             (i32.shl
              (tee_local $4
               (i32.add
                (get_local $3)
                (i32.const -1)
               )
              )
              (i32.const 2)
             )
            )
           )
          )
         )
        )
       )
       (f32.store
        (i32.add
         (get_local $0)
         (i32.shl
          (get_local $3)
          (i32.const 2)
         )
        )
        (get_local $7)
       )
       (i32.store
        (i32.add
         (get_local $1)
         (i32.shl
          (get_local $3)
          (i32.const 2)
         )
        )
        (i32.load
         (i32.add
          (get_local $1)
          (i32.shl
           (get_local $4)
           (i32.const 2)
          )
         )
        )
       )
       (set_local $3
        (get_local $4)
       )
       (br $while-in3)
      )
     )
     (f32.store
      (i32.add
       (get_local $0)
       (i32.shl
        (get_local $3)
        (i32.const 2)
       )
      )
      (get_local $6)
     )
     (i32.store
      (i32.add
       (get_local $1)
       (i32.shl
        (get_local $3)
        (i32.const 2)
       )
      )
      (get_local $5)
     )
     (set_local $5
      (i32.add
       (get_local $5)
       (i32.const 1)
      )
     )
     (br $while-in1)
    )
   )
  )
  (set_local $8
   (i32.add
    (get_local $0)
    (i32.shl
     (i32.add
      (get_local $2)
      (i32.const -1)
     )
     (i32.const 2)
    )
   )
  )
  (set_local $3
   (i32.add
    (get_local $2)
    (i32.const -2)
   )
  )
  (loop $while-in5
   (if
    (i32.lt_s
     (get_local $2)
     (i32.const 65)
    )
    (block
     (if
      (f32.gt
       (tee_local $6
        (f32.load
         (i32.add
          (get_local $0)
          (i32.shl
           (get_local $2)
           (i32.const 2)
          )
         )
        )
       )
       (f32.load
        (get_local $8)
       )
      )
      (block
       (set_local $4
        (get_local $3)
       )
       (loop $while-in7
        (block $while-out6
         (br_if $while-out6
          (i32.le_s
           (get_local $4)
           (i32.const -1)
          )
         )
         (br_if $while-out6
          (i32.eqz
           (f32.gt
            (get_local $6)
            (tee_local $7
             (f32.load
              (i32.add
               (get_local $0)
               (i32.shl
                (get_local $4)
                (i32.const 2)
               )
              )
             )
            )
           )
          )
         )
         (f32.store
          (i32.add
           (get_local $0)
           (i32.shl
            (tee_local $5
             (i32.add
              (get_local $4)
              (i32.const 1)
             )
            )
            (i32.const 2)
           )
          )
          (get_local $7)
         )
         (i32.store
          (i32.add
           (get_local $1)
           (i32.shl
            (get_local $5)
            (i32.const 2)
           )
          )
          (i32.load
           (i32.add
            (get_local $1)
            (i32.shl
             (get_local $4)
             (i32.const 2)
            )
           )
          )
         )
         (set_local $4
          (i32.add
           (get_local $4)
           (i32.const -1)
          )
         )
         (br $while-in7)
        )
       )
       (f32.store
        (i32.add
         (get_local $0)
         (i32.shl
          (tee_local $4
           (i32.add
            (get_local $4)
            (i32.const 1)
           )
          )
          (i32.const 2)
         )
        )
        (get_local $6)
       )
       (i32.store
        (i32.add
         (get_local $1)
         (i32.shl
          (get_local $4)
          (i32.const 2)
         )
        )
        (get_local $2)
       )
      )
     )
     (set_local $2
      (i32.add
       (get_local $2)
       (i32.const 1)
      )
     )
     (br $while-in5)
    )
   )
  )
 )
 (func $_opus_pcm_soft_clip (; 354 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 f32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 f32)
  (local $10 f32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 f32)
  (local $17 f32)
  (local $18 i32)
  (local $19 f32)
  (if
   (i32.or
    (i32.or
     (i32.or
      (i32.lt_s
       (get_local $2)
       (i32.const 1)
      )
      (i32.lt_s
       (get_local $1)
       (i32.const 1)
      )
     )
     (i32.eqz
      (get_local $0)
     )
    )
    (i32.eqz
     (get_local $3)
    )
   )
   (return)
  )
  (set_local $7
   (i32.mul
    (get_local $1)
    (get_local $2)
   )
  )
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $5)
     (get_local $7)
    )
    (block
     (set_local $6
      (f32.gt
       (tee_local $4
        (f32.load
         (tee_local $11
          (i32.add
           (get_local $0)
           (i32.shl
            (get_local $5)
            (i32.const 2)
           )
          )
         )
        )
       )
       (f32.const 2)
      )
     )
     (set_local $12
      (i32.or
       (tee_local $8
        (f32.lt
         (get_local $4)
         (f32.const -2)
        )
       )
       (get_local $6)
      )
     )
     (set_local $9
      (if (result f32)
       (i32.and
        (get_local $8)
        (i32.xor
         (get_local $6)
         (i32.const 1)
        )
       )
       (f32.const -2)
       (f32.const 2)
      )
     )
     (f32.store
      (get_local $11)
      (if (result f32)
       (get_local $12)
       (get_local $9)
       (get_local $4)
      )
     )
     (set_local $5
      (i32.add
       (get_local $5)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (set_local $12
   (i32.const 0)
  )
  (loop $while-in1
   (if
    (i32.ne
     (get_local $12)
     (get_local $2)
    )
    (block
     (set_local $8
      (i32.add
       (get_local $0)
       (i32.shl
        (get_local $12)
        (i32.const 2)
       )
      )
     )
     (set_local $9
      (f32.load
       (tee_local $15
        (i32.add
         (get_local $3)
         (i32.shl
          (get_local $12)
          (i32.const 2)
         )
        )
       )
      )
     )
     (set_local $5
      (i32.const 0)
     )
     (loop $while-in3
      (block $while-out2
       (br_if $while-out2
        (i32.ge_s
         (get_local $5)
         (get_local $1)
        )
       )
       (br_if $while-out2
        (f32.ge
         (tee_local $10
          (f32.mul
           (tee_local $4
            (f32.load
             (tee_local $6
              (i32.add
               (get_local $8)
               (i32.shl
                (i32.mul
                 (get_local $5)
                 (get_local $2)
                )
                (i32.const 2)
               )
              )
             )
            )
           )
           (get_local $9)
          )
         )
         (f32.const 0)
        )
       )
       (f32.store
        (get_local $6)
        (f32.add
         (get_local $4)
         (f32.mul
          (get_local $10)
          (get_local $4)
         )
        )
       )
       (set_local $5
        (i32.add
         (get_local $5)
         (i32.const 1)
        )
       )
       (br $while-in3)
      )
     )
     (set_local $16
      (f32.load
       (get_local $8)
      )
     )
     (set_local $11
      (i32.const 0)
     )
     (loop $while-in5
      (block $while-out4
       (set_local $7
        (get_local $11)
       )
       (loop $while-in7
        (block $while-out6
         (br_if $while-out6
          (i32.ge_s
           (get_local $7)
           (get_local $1)
          )
         )
         (br_if $while-out6
          (i32.or
           (f32.gt
            (tee_local $4
             (f32.load
              (i32.add
               (get_local $8)
               (i32.shl
                (i32.mul
                 (get_local $7)
                 (get_local $2)
                )
                (i32.const 2)
               )
              )
             )
            )
            (f32.const 1)
           )
           (f32.lt
            (get_local $4)
            (f32.const -1)
           )
          )
         )
         (set_local $7
          (i32.add
           (get_local $7)
           (i32.const 1)
          )
         )
         (br $while-in7)
        )
       )
       (if
        (i32.eq
         (get_local $7)
         (get_local $1)
        )
        (block
         (set_local $9
          (f32.const 0)
         )
         (br $while-out4)
        )
       )
       (set_local $4
        (f32.abs
         (tee_local $10
          (f32.load
           (i32.add
            (get_local $8)
            (i32.shl
             (i32.mul
              (get_local $7)
              (get_local $2)
             )
             (i32.const 2)
            )
           )
          )
         )
        )
       )
       (set_local $6
        (get_local $7)
       )
       (loop $while-in9
        (block $while-out8
         (br_if $while-out8
          (i32.le_s
           (get_local $6)
           (i32.const 0)
          )
         )
         (br_if $while-out8
          (i32.eqz
           (f32.ge
            (f32.mul
             (get_local $10)
             (f32.load
              (i32.add
               (get_local $8)
               (i32.shl
                (i32.mul
                 (tee_local $5
                  (i32.add
                   (get_local $6)
                   (i32.const -1)
                  )
                 )
                 (get_local $2)
                )
                (i32.const 2)
               )
              )
             )
            )
            (f32.const 0)
           )
          )
         )
         (set_local $6
          (get_local $5)
         )
         (br $while-in9)
        )
       )
       (set_local $5
        (get_local $7)
       )
       (loop $while-in11
        (block $while-out10
         (br_if $while-out10
          (i32.ge_s
           (get_local $5)
           (get_local $1)
          )
         )
         (br_if $while-out10
          (i32.eqz
           (f32.ge
            (f32.mul
             (get_local $10)
             (tee_local $9
              (f32.load
               (i32.add
                (get_local $8)
                (i32.shl
                 (i32.mul
                  (get_local $5)
                  (get_local $2)
                 )
                 (i32.const 2)
                )
               )
              )
             )
            )
            (f32.const 0)
           )
          )
         )
         (if
          (tee_local $13
           (f32.gt
            (tee_local $9
             (f32.abs
              (get_local $9)
             )
            )
            (get_local $4)
           )
          )
          (set_local $4
           (get_local $9)
          )
         )
         (if
          (get_local $13)
          (set_local $7
           (get_local $5)
          )
         )
         (set_local $5
          (i32.add
           (get_local $5)
           (i32.const 1)
          )
         )
         (br $while-in11)
        )
       )
       (set_local $13
        (if (result i32)
         (get_local $6)
         (i32.const 0)
         (f32.ge
          (f32.mul
           (get_local $10)
           (f32.load
            (get_local $8)
           )
          )
          (f32.const 0)
         )
        )
       )
       (set_local $9
        (f32.neg
         (tee_local $4
          (f32.add
           (tee_local $4
            (f32.div
             (f32.add
              (get_local $4)
              (f32.const -1)
             )
             (f32.mul
              (get_local $4)
              (get_local $4)
             )
            )
           )
           (f32.mul
            (get_local $4)
            (f32.const 2.399999914359796e-07)
           )
          )
         )
        )
       )
       (if
        (i32.eqz
         (f32.gt
          (get_local $10)
          (f32.const 0)
         )
        )
        (set_local $9
         (get_local $4)
        )
       )
       (loop $while-in13
        (if
         (i32.lt_s
          (get_local $6)
          (get_local $5)
         )
         (block
          (set_local $4
           (f32.load
            (tee_local $14
             (i32.add
              (get_local $8)
              (i32.shl
               (i32.mul
                (get_local $6)
                (get_local $2)
               )
               (i32.const 2)
              )
             )
            )
           )
          )
          (f32.store
           (get_local $14)
           (f32.add
            (get_local $4)
            (f32.mul
             (f32.mul
              (get_local $9)
              (get_local $4)
             )
             (get_local $4)
            )
           )
          )
          (set_local $6
           (i32.add
            (get_local $6)
            (i32.const 1)
           )
          )
          (br $while-in13)
         )
        )
       )
       (block $label$break$L41
        (if
         (i32.and
          (get_local $13)
          (i32.gt_s
           (get_local $7)
           (i32.const 1)
          )
         )
         (block
          (set_local $17
           (f32.div
            (tee_local $4
             (f32.sub
              (get_local $16)
              (f32.load
               (get_local $8)
              )
             )
            )
            (f32.convert_s/i32
             (get_local $7)
            )
           )
          )
          (loop $while-in15
           (br_if $label$break$L41
            (i32.ge_s
             (get_local $11)
             (get_local $7)
            )
           )
           (set_local $10
            (f32.add
             (f32.load
              (tee_local $6
               (i32.add
                (get_local $8)
                (i32.shl
                 (i32.mul
                  (get_local $11)
                  (get_local $2)
                 )
                 (i32.const 2)
                )
               )
              )
             )
             (tee_local $4
              (f32.sub
               (get_local $4)
               (get_local $17)
              )
             )
            )
           )
           (f32.store
            (get_local $6)
            (get_local $10)
           )
           (set_local $18
            (i32.or
             (tee_local $13
              (f32.lt
               (get_local $10)
               (f32.const -1)
              )
             )
             (tee_local $14
              (f32.gt
               (get_local $10)
               (f32.const 1)
              )
             )
            )
           )
           (set_local $19
            (if (result f32)
             (i32.and
              (get_local $13)
              (i32.xor
               (get_local $14)
               (i32.const 1)
              )
             )
             (f32.const -1)
             (f32.const 1)
            )
           )
           (f32.store
            (get_local $6)
            (if (result f32)
             (get_local $18)
             (get_local $19)
             (get_local $10)
            )
           )
           (set_local $11
            (i32.add
             (get_local $11)
             (i32.const 1)
            )
           )
           (br $while-in15)
          )
         )
        )
       )
       (if
        (i32.ne
         (get_local $5)
         (get_local $1)
        )
        (block
         (set_local $11
          (get_local $5)
         )
         (br $while-in5)
        )
       )
      )
     )
     (f32.store
      (get_local $15)
      (get_local $9)
     )
     (set_local $12
      (i32.add
       (get_local $12)
       (i32.const 1)
      )
     )
     (br $while-in1)
    )
   )
  )
 )
 (func $_encode_size (; 355 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (if (result i32)
   (i32.lt_s
    (get_local $0)
    (i32.const 252)
   )
   (block (result i32)
    (i32.store8
     (get_local $1)
     (get_local $0)
    )
    (i32.const 1)
   )
   (block (result i32)
    (i32.store8
     (get_local $1)
     (tee_local $2
      (i32.or
       (get_local $0)
       (i32.const 252)
      )
     )
    )
    (i32.store8 offset=1
     (get_local $1)
     (i32.shr_u
      (i32.sub
       (get_local $0)
       (i32.and
        (get_local $2)
        (i32.const 255)
       )
      )
      (i32.const 2)
     )
    )
    (i32.const 2)
   )
  )
 )
 (func $_opus_packet_get_samples_per_frame (; 356 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (if
   (i32.lt_s
    (i32.shr_s
     (i32.shl
      (get_local $0)
      (i32.const 24)
     )
     (i32.const 24)
    )
    (i32.const 0)
   )
   (return
    (i32.div_s
     (i32.shl
      (get_local $1)
      (i32.and
       (i32.shr_u
        (i32.and
         (get_local $0)
         (i32.const 255)
        )
        (i32.const 3)
       )
       (i32.const 3)
      )
     )
     (i32.const 400)
    )
   )
  )
  (if (result i32)
   (i32.eq
    (i32.and
     (get_local $0)
     (i32.const 96)
    )
    (i32.const 96)
   )
   (if (result i32)
    (i32.and
     (get_local $0)
     (i32.const 8)
    )
    (i32.div_s
     (get_local $1)
     (i32.const 50)
    )
    (i32.div_s
     (get_local $1)
     (i32.const 100)
    )
   )
   (if (result i32)
    (i32.eq
     (tee_local $2
      (i32.and
       (i32.shr_u
        (i32.and
         (get_local $0)
         (i32.const 255)
        )
        (i32.const 3)
       )
       (i32.const 3)
      )
     )
     (i32.const 3)
    )
    (i32.div_s
     (i32.mul
      (get_local $1)
      (i32.const 60)
     )
     (i32.const 1000)
    )
    (i32.div_s
     (i32.shl
      (get_local $1)
      (get_local $2)
     )
     (i32.const 100)
    )
   )
  )
 )
 (func $_opus_packet_parse_impl (; 357 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (result i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (block $folding-inner0
   (if
    (i32.or
     (i32.eqz
      (get_local $4)
     )
     (i32.lt_s
      (get_local $1)
      (i32.const 0)
     )
    )
    (return
     (i32.const -1)
    )
   )
   (br_if $folding-inner0
    (i32.eqz
     (get_local $1)
    )
   )
   (set_local $11
    (call $_opus_packet_get_samples_per_frame
     (tee_local $17
      (i32.load8_s
       (get_local $0)
      )
     )
     (i32.const 48000)
    )
   )
   (set_local $6
    (i32.add
     (get_local $0)
     (i32.const 1)
    )
   )
   (set_local $7
    (i32.add
     (get_local $1)
     (i32.const -1)
    )
   )
   (block $label$break$L59
    (block $__rjti$2
     (block $__rjti$1
      (block $__rjti$0
       (block $switch-default
        (block $switch-case1
         (block $switch-case0
          (block $switch-case
           (br_table $switch-case $switch-case0 $switch-case1 $switch-default
            (i32.and
             (get_local $17)
             (i32.const 3)
            )
           )
          )
          (set_local $8
           (i32.const 1)
          )
          (set_local $9
           (get_local $6)
          )
          (set_local $1
           (get_local $7)
          )
          (br $__rjti$0)
         )
         (br_if $folding-inner0
          (i32.and
           (get_local $7)
           (i32.const 1)
          )
         )
         (i32.store16
          (get_local $4)
          (tee_local $1
           (i32.div_s
            (get_local $7)
            (i32.const 2)
           )
          )
         )
         (set_local $12
          (i32.const 2)
         )
         (set_local $9
          (get_local $6)
         )
         (br $__rjti$2)
        )
        (set_local $9
         (call $_parse_size
          (get_local $6)
          (get_local $7)
          (get_local $4)
         )
        )
        (br_if $folding-inner0
         (i32.lt_s
          (tee_local $1
           (i32.load16_s
            (get_local $4)
           )
          )
          (i32.const 0)
         )
        )
        (br_if $folding-inner0
         (i32.lt_s
          (tee_local $12
           (i32.sub
            (get_local $7)
            (get_local $9)
           )
          )
          (get_local $1)
         )
        )
        (set_local $8
         (i32.const 2)
        )
        (set_local $9
         (i32.add
          (get_local $6)
          (get_local $9)
         )
        )
        (set_local $1
         (i32.sub
          (get_local $12)
          (get_local $1)
         )
        )
        (br $__rjti$0)
       )
       (br_if $folding-inner0
        (i32.lt_s
         (get_local $1)
         (i32.const 2)
        )
       )
       (set_local $13
        (tee_local $6
         (i32.and
          (tee_local $14
           (i32.load8_s
            (get_local $6)
           )
          )
          (i32.const 63)
         )
        )
       )
       (br_if $folding-inner0
        (i32.or
         (i32.eqz
          (get_local $6)
         )
         (i32.gt_s
          (i32.mul
           (get_local $11)
           (get_local $13)
          )
          (i32.const 5760)
         )
        )
       )
       (set_local $6
        (i32.add
         (get_local $0)
         (i32.const 2)
        )
       )
       (set_local $11
        (i32.add
         (get_local $1)
         (i32.const -2)
        )
       )
       (set_local $6
        (if (result i32)
         (i32.and
          (get_local $14)
          (i32.const 64)
         )
         (block (result i32)
          (set_local $1
           (get_local $11)
          )
          (set_local $11
           (i32.const 0)
          )
          (loop $while-in
           (block $while-out
            (if
             (i32.lt_s
              (get_local $1)
              (i32.const 1)
             )
             (block
              (set_local $15
               (i32.const -4)
              )
              (set_local $10
               (i32.const 51)
              )
              (br $while-out)
             )
            )
            (set_local $18
             (i32.add
              (get_local $6)
              (i32.const 1)
             )
            )
            (set_local $16
             (i32.eq
              (tee_local $6
               (i32.load8_s
                (get_local $6)
               )
              )
              (i32.const -1)
             )
            )
            (set_local $6
             (i32.and
              (get_local $6)
              (i32.const 255)
             )
            )
            (set_local $8
             (i32.sub
              (i32.add
               (get_local $1)
               (i32.const -1)
              )
              (tee_local $1
               (if (result i32)
                (get_local $16)
                (i32.const 254)
                (get_local $6)
               )
              )
             )
            )
            (set_local $19
             (i32.add
              (get_local $11)
              (get_local $1)
             )
            )
            (if
             (get_local $16)
             (block
              (set_local $6
               (get_local $18)
              )
              (set_local $1
               (get_local $8)
              )
              (set_local $11
               (get_local $19)
              )
              (br $while-in)
             )
            )
           )
          )
          (if
           (i32.eq
            (get_local $10)
            (i32.const 51)
           )
           (return
            (get_local $15)
           )
          )
          (br_if $folding-inner0
           (i32.lt_s
            (get_local $8)
            (i32.const 0)
           )
          )
          (set_local $1
           (get_local $18)
          )
          (get_local $8)
         )
         (block (result i32)
          (set_local $1
           (get_local $6)
          )
          (get_local $11)
         )
        )
       )
       (if
        (tee_local $8
         (i32.xor
          (i32.shr_u
           (i32.and
            (get_local $14)
            (i32.const 255)
           )
           (i32.const 7)
          )
          (i32.const 1)
         )
        )
        (block
         (br_if $folding-inner0
          (i32.ne
           (i32.mul
            (tee_local $12
             (i32.div_s
              (get_local $6)
              (get_local $13)
             )
            )
            (get_local $13)
           )
           (get_local $6)
          )
         )
         (set_local $8
          (i32.add
           (get_local $13)
           (i32.const -1)
          )
         )
         (set_local $9
          (i32.and
           (get_local $12)
           (i32.const 65535)
          )
         )
         (set_local $7
          (i32.const 0)
         )
         (loop $while-in3
          (if
           (i32.lt_s
            (get_local $7)
            (get_local $8)
           )
           (block
            (i32.store16
             (i32.add
              (get_local $4)
              (i32.shl
               (get_local $7)
               (i32.const 1)
              )
             )
             (get_local $9)
            )
            (set_local $7
             (i32.add
              (get_local $7)
              (i32.const 1)
             )
            )
            (br $while-in3)
           )
           (block
            (set_local $8
             (get_local $13)
            )
            (set_local $9
             (get_local $1)
            )
            (set_local $1
             (get_local $12)
            )
            (br $__rjti$0)
           )
          )
         )
        )
       )
       (set_local $16
        (i32.add
         (get_local $13)
         (i32.const -1)
        )
       )
       (set_local $10
        (i32.const 0)
       )
       (set_local $7
        (get_local $6)
       )
       (loop $while-in5
        (block $while-out4
         (if
          (i32.ge_s
           (get_local $10)
           (get_local $16)
          )
          (block
           (set_local $10
            (i32.const 23)
           )
           (br $while-out4)
          )
         )
         (set_local $14
          (call $_parse_size
           (get_local $1)
           (get_local $6)
           (tee_local $8
            (i32.add
             (get_local $4)
             (i32.shl
              (get_local $10)
              (i32.const 1)
             )
            )
           )
          )
         )
         (if
          (i32.lt_s
           (tee_local $11
            (i32.load16_s
             (get_local $8)
            )
           )
           (i32.const 0)
          )
          (block
           (set_local $15
            (i32.const -4)
           )
           (set_local $10
            (i32.const 51)
           )
           (br $while-out4)
          )
         )
         (set_local $15
          (if (result i32)
           (i32.lt_s
            (tee_local $8
             (i32.sub
              (get_local $6)
              (get_local $14)
             )
            )
            (get_local $11)
           )
           (block (result i32)
            (set_local $10
             (i32.const 51)
            )
            (i32.const -4)
           )
           (block
            (set_local $10
             (i32.add
              (get_local $10)
              (i32.const 1)
             )
            )
            (set_local $7
             (i32.sub
              (get_local $7)
              (i32.add
               (get_local $14)
               (get_local $11)
              )
             )
            )
            (set_local $1
             (i32.add
              (get_local $1)
              (get_local $14)
             )
            )
            (set_local $6
             (get_local $8)
            )
            (br $while-in5)
           )
          )
         )
        )
       )
       (if
        (i32.eq
         (get_local $10)
         (i32.const 23)
        )
        (block
         (if
          (i32.ge_s
           (get_local $7)
           (i32.const 0)
          )
          (block
           (set_local $8
            (get_local $13)
           )
           (set_local $9
            (get_local $1)
           )
           (set_local $1
            (get_local $7)
           )
           (br $__rjti$0)
          )
         )
         (br $folding-inner0)
        )
        (if
         (i32.eq
          (get_local $10)
          (i32.const 51)
         )
         (return
          (get_local $15)
         )
        )
       )
       (br $label$break$L59)
      )
      (set_local $12
       (get_local $8)
      )
     )
    )
    (br_if $folding-inner0
     (i32.gt_s
      (get_local $1)
      (i32.const 1275)
     )
    )
    (i32.store16
     (i32.add
      (get_local $4)
      (i32.shl
       (i32.add
        (get_local $12)
        (i32.const -1)
       )
       (i32.const 1)
      )
     )
     (get_local $1)
    )
   )
   (if
    (get_local $5)
    (i32.store
     (get_local $5)
     (i32.sub
      (get_local $9)
      (get_local $0)
     )
    )
   )
   (set_local $1
    (i32.eqz
     (get_local $3)
    )
   )
   (set_local $0
    (i32.const 0)
   )
   (loop $while-in10
    (if
     (i32.ne
      (get_local $0)
      (get_local $12)
     )
     (block
      (if
       (i32.eqz
        (get_local $1)
       )
       (i32.store
        (i32.add
         (get_local $3)
         (i32.shl
          (get_local $0)
          (i32.const 2)
         )
        )
        (get_local $9)
       )
      )
      (set_local $9
       (i32.add
        (get_local $9)
        (i32.load16_s
         (i32.add
          (get_local $4)
          (i32.shl
           (get_local $0)
           (i32.const 1)
          )
         )
        )
       )
      )
      (set_local $0
       (i32.add
        (get_local $0)
        (i32.const 1)
       )
      )
      (br $while-in10)
     )
    )
   )
   (if
    (i32.eqz
     (get_local $2)
    )
    (return
     (get_local $12)
    )
   )
   (i32.store8
    (get_local $2)
    (get_local $17)
   )
   (return
    (get_local $12)
   )
  )
  (i32.const -4)
 )
 (func $_parse_size (; 358 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (if
   (i32.lt_s
    (get_local $1)
    (i32.const 1)
   )
   (block
    (i32.store16
     (get_local $2)
     (i32.const -1)
    )
    (return
     (i32.const -1)
    )
   )
  )
  (if
   (i32.lt_s
    (tee_local $3
     (i32.load8_u
      (get_local $0)
     )
    )
    (i32.const 252)
   )
   (block
    (i32.store16
     (get_local $2)
     (get_local $3)
    )
    (return
     (i32.const 1)
    )
   )
  )
  (if (result i32)
   (i32.lt_s
    (get_local $1)
    (i32.const 2)
   )
   (block (result i32)
    (i32.store16
     (get_local $2)
     (i32.const -1)
    )
    (i32.const -1)
   )
   (block (result i32)
    (i32.store16
     (get_local $2)
     (i32.add
      (i32.shl
       (i32.load8_u offset=1
        (get_local $0)
       )
       (i32.const 2)
      )
      (get_local $3)
     )
    )
    (i32.const 2)
   )
  )
 )
 (func $_opus_decoder_get_size (; 359 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (set_local $1
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.const 16)
   )
  )
  (set_local $0
   (if (result i32)
    (i32.gt_u
     (i32.add
      (get_local $0)
      (i32.const -1)
     )
     (i32.const 1)
    )
    (i32.const 0)
    (if (result i32)
     (call $_silk_Get_Decoder_Size
      (get_local $1)
     )
     (i32.const 0)
     (block (result i32)
      (set_local $2
       (call $_align
        (i32.load
         (get_local $1)
        )
       )
      )
      (i32.store
       (get_local $1)
       (get_local $2)
      )
      (set_local $0
       (call $_celt_decoder_get_size
        (get_local $0)
       )
      )
      (i32.add
       (i32.add
        (call $_align
         (i32.const 88)
        )
        (get_local $2)
       )
       (get_local $0)
      )
     )
    )
   )
  )
  (set_global $STACKTOP
   (get_local $1)
  )
  (get_local $0)
 )
 (func $_align (; 360 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (i32.and
   (i32.add
    (get_local $0)
    (i32.const 3)
   )
   (i32.const -4)
  )
 )
 (func $_opus_decoder_init (; 361 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (set_local $5
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.const 16)
   )
  )
  (set_local $4
   (i32.add
    (get_local $5)
    (i32.const 4)
   )
  )
  (set_local $0
   (block $__rjto$0 (result i32)
    (block $__rjti$0
     (br $__rjto$0
      (if (result i32)
       (i32.lt_s
        (get_local $1)
        (i32.const 16000)
       )
       (if (result i32)
        (i32.lt_s
         (get_local $1)
         (i32.const 12000)
        )
        (block $switch (result i32)
         (br_if $__rjti$0
          (i32.eqz
           (i32.sub
            (get_local $1)
            (i32.const 8000)
           )
          )
         )
         (i32.const -1)
        )
        (block $switch0 (result i32)
         (br_if $__rjti$0
          (i32.eqz
           (i32.sub
            (get_local $1)
            (i32.const 12000)
           )
          )
         )
         (i32.const -1)
        )
       )
       (block (result i32)
        (if
         (i32.lt_s
          (get_local $1)
          (i32.const 24000)
         )
         (block $switch3
          (br_if $__rjti$0
           (i32.eqz
            (i32.sub
             (get_local $1)
             (i32.const 16000)
            )
           )
          )
          (br $__rjto$0
           (i32.const -1)
          )
         )
        )
        (if (result i32)
         (i32.lt_s
          (get_local $1)
          (i32.const 48000)
         )
         (block $switch6 (result i32)
          (br_if $__rjti$0
           (i32.eqz
            (i32.sub
             (get_local $1)
             (i32.const 24000)
            )
           )
          )
          (i32.const -1)
         )
         (block $switch9 (result i32)
          (br_if $__rjti$0
           (i32.eqz
            (i32.sub
             (get_local $1)
             (i32.const 48000)
            )
           )
          )
          (i32.const -1)
         )
        )
       )
      )
     )
    )
    (if (result i32)
     (i32.lt_u
      (i32.add
       (get_local $2)
       (i32.const -1)
      )
      (i32.const 2)
     )
     (block (result i32)
      (set_local $3
       (call $_opus_decoder_get_size
        (get_local $2)
       )
      )
      (drop
       (call $_memset
        (get_local $0)
        (i32.const 0)
        (get_local $3)
       )
      )
      (if (result i32)
       (call $_silk_Get_Decoder_Size
        (get_local $4)
       )
       (i32.const -3)
       (block (result i32)
        (set_local $3
         (call $_align
          (i32.load
           (get_local $4)
          )
         )
        )
        (i32.store
         (get_local $4)
         (get_local $3)
        )
        (set_local $4
         (call $_align
          (i32.const 88)
         )
        )
        (i32.store offset=4
         (get_local $0)
         (get_local $4)
        )
        (i32.store
         (get_local $0)
         (tee_local $3
          (i32.add
           (get_local $4)
           (get_local $3)
          )
         )
        )
        (set_local $3
         (i32.add
          (get_local $0)
          (get_local $3)
         )
        )
        (i32.store offset=8
         (get_local $0)
         (get_local $2)
        )
        (i32.store offset=48
         (get_local $0)
         (get_local $2)
        )
        (i32.store offset=12
         (get_local $0)
         (get_local $1)
        )
        (i32.store offset=24
         (get_local $0)
         (get_local $1)
        )
        (i32.store offset=16
         (get_local $0)
         (get_local $2)
        )
        (if (result i32)
         (call $_silk_InitDecoder
          (i32.add
           (get_local $0)
           (get_local $4)
          )
         )
         (i32.const -3)
         (if (result i32)
          (call $_celt_decoder_init
           (get_local $3)
           (get_local $1)
           (get_local $2)
          )
          (i32.const -3)
          (block (result i32)
           (i32.store
            (get_local $5)
            (i32.const 0)
           )
           (drop
            (call $_opus_custom_decoder_ctl
             (get_local $3)
             (i32.const 10016)
             (get_local $5)
            )
           )
           (i32.store offset=60
            (get_local $0)
            (i32.const 0)
           )
           (i32.store
            (i32.sub
             (get_local $0)
             (i32.const -64)
            )
            (i32.div_s
             (get_local $1)
             (i32.const 400)
            )
           )
           (i32.store offset=44
            (get_local $0)
            (i32.const 0)
           )
           (i32.const 0)
          )
         )
        )
       )
      )
     )
     (i32.const -1)
    )
   )
  )
  (set_global $STACKTOP
   (get_local $5)
  )
  (get_local $0)
 )
 (func $_opus_decoder_create (; 362 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (block $__rjto$0
   (block $__rjti$0
    (if
     (i32.lt_s
      (get_local $0)
      (i32.const 16000)
     )
     (if
      (i32.lt_s
       (get_local $0)
       (i32.const 12000)
      )
      (br_if $__rjti$0
       (i32.eqz
        (i32.sub
         (get_local $0)
         (i32.const 8000)
        )
       )
      )
      (br_if $__rjti$0
       (i32.eqz
        (i32.sub
         (get_local $0)
         (i32.const 12000)
        )
       )
      )
     )
     (block
      (if
       (i32.lt_s
        (get_local $0)
        (i32.const 24000)
       )
       (block
        (br_if $__rjto$0
         (i32.sub
          (get_local $0)
          (i32.const 16000)
         )
        )
        (br $__rjti$0)
       )
      )
      (if
       (i32.lt_s
        (get_local $0)
        (i32.const 48000)
       )
       (br_if $__rjti$0
        (i32.eqz
         (i32.sub
          (get_local $0)
          (i32.const 24000)
         )
        )
       )
       (br_if $__rjti$0
        (i32.eqz
         (i32.sub
          (get_local $0)
          (i32.const 48000)
         )
        )
       )
      )
     )
    )
    (br $__rjto$0)
   )
   (if
    (i32.lt_u
     (i32.add
      (get_local $1)
      (i32.const -1)
     )
     (i32.const 2)
    )
    (block
     (if
      (i32.eqz
       (tee_local $3
        (call $_opus_alloc
         (call $_opus_decoder_get_size
          (get_local $1)
         )
        )
       )
      )
      (block
       (if
        (i32.eqz
         (get_local $2)
        )
        (return
         (i32.const 0)
        )
       )
       (i32.store
        (get_local $2)
        (i32.const -7)
       )
       (return
        (i32.const 0)
       )
      )
     )
     (set_local $0
      (call $_opus_decoder_init
       (get_local $3)
       (get_local $0)
       (get_local $1)
      )
     )
     (if
      (get_local $2)
      (i32.store
       (get_local $2)
       (get_local $0)
      )
     )
     (if
      (i32.eqz
       (get_local $0)
      )
      (return
       (get_local $3)
      )
     )
     (call $_opus_free
      (get_local $3)
     )
     (return
      (i32.const 0)
     )
    )
   )
  )
  (if
   (i32.eqz
    (get_local $2)
   )
   (return
    (i32.const 0)
   )
  )
  (i32.store
   (get_local $2)
   (i32.const -1)
  )
  (i32.const 0)
 )
 (func $_opus_alloc (; 363 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (call $_malloc
   (get_local $0)
  )
 )
 (func $_opus_free (; 364 ;) (; has Stack IR ;) (param $0 i32)
  (call $_free
   (get_local $0)
  )
 )
 (func $_opus_decode_native (; 365 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (result i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (block $folding-inner1
   (block $folding-inner0
    (set_local $7
     (get_global $STACKTOP)
    )
    (set_global $STACKTOP
     (i32.add
      (get_global $STACKTOP)
      (i32.const 112)
     )
    )
    (set_local $10
     (i32.add
      (get_local $7)
      (i32.const 96)
     )
    )
    (set_local $14
     (i32.add
      (get_local $7)
      (i32.const 100)
     )
    )
    (call $_validate_opus_decoder
     (get_local $0)
    )
    (br_if $folding-inner1
     (i32.gt_u
      (get_local $5)
      (i32.const 1)
     )
    )
    (if
     (i32.or
      (i32.or
       (i32.eqz
        (get_local $2)
       )
       (i32.xor
        (tee_local $15
         (i32.eqz
          (get_local $5)
         )
        )
        (i32.const 1)
       )
      )
      (i32.eqz
       (get_local $1)
      )
     )
     (block
      (br_if $folding-inner1
       (i32.rem_s
        (get_local $4)
        (i32.div_s
         (i32.load offset=12
          (get_local $0)
         )
         (i32.const 400)
        )
       )
      )
      (if
       (i32.or
        (i32.eqz
         (get_local $2)
        )
        (i32.eqz
         (get_local $1)
        )
       )
       (block
        (set_local $5
         (i32.add
          (get_local $0)
          (i32.const 8)
         )
        )
        (set_local $1
         (i32.const 0)
        )
        (loop $while-in
         (block $while-out
          (if
           (i32.lt_s
            (tee_local $2
             (call $_opus_decode_frame
              (get_local $0)
              (i32.const 0)
              (i32.const 0)
              (i32.add
               (get_local $3)
               (i32.shl
                (i32.mul
                 (get_local $1)
                 (i32.load
                  (get_local $5)
                 )
                )
                (i32.const 2)
               )
              )
              (i32.sub
               (get_local $4)
               (get_local $1)
              )
              (i32.const 0)
             )
            )
            (i32.const 0)
           )
           (block
            (set_local $9
             (get_local $2)
            )
            (set_local $8
             (i32.const 34)
            )
            (br $while-out)
           )
          )
          (if
           (i32.lt_s
            (tee_local $11
             (i32.add
              (get_local $1)
              (get_local $2)
             )
            )
            (get_local $4)
           )
           (block
            (set_local $1
             (get_local $11)
            )
            (br $while-in)
           )
          )
         )
        )
        (br_if $folding-inner0
         (i32.eq
          (get_local $8)
          (i32.const 34)
         )
        )
        (if
         (i32.ne
          (get_local $11)
          (get_local $4)
         )
         (call $_celt_fatal
          (i32.const 49194)
          (i32.const 49236)
          (i32.const 652)
         )
        )
        (i32.store offset=72
         (get_local $0)
         (get_local $4)
        )
        (set_global $STACKTOP
         (get_local $7)
        )
        (return
         (get_local $4)
        )
       )
      )
     )
    )
    (br_if $folding-inner1
     (i32.lt_s
      (get_local $2)
      (i32.const 0)
     )
    )
    (set_local $11
     (call $_opus_packet_get_mode
      (tee_local $5
       (i32.load8_s
        (get_local $1)
       )
      )
     )
    )
    (set_local $12
     (call $_opus_packet_get_bandwidth
      (get_local $5)
     )
    )
    (set_local $8
     (call $_opus_packet_get_samples_per_frame
      (get_local $5)
      (i32.load offset=12
       (get_local $0)
      )
     )
    )
    (set_local $13
     (call $_opus_packet_get_nb_channels
      (get_local $5)
     )
    )
    (if
     (i32.lt_s
      (tee_local $2
       (call $_opus_packet_parse_impl
        (get_local $1)
        (get_local $2)
        (get_local $14)
        (i32.const 0)
        (get_local $7)
        (get_local $10)
       )
      )
      (i32.const 0)
     )
     (block
      (set_global $STACKTOP
       (get_local $7)
      )
      (return
       (get_local $2)
      )
     )
    )
    (set_local $5
     (i32.add
      (get_local $1)
      (i32.load
       (get_local $10)
      )
     )
    )
    (if
     (get_local $15)
     (block
      (if
       (i32.gt_s
        (i32.mul
         (get_local $2)
         (get_local $8)
        )
        (get_local $4)
       )
       (block
        (set_global $STACKTOP
         (get_local $7)
        )
        (return
         (i32.const -2)
        )
       )
      )
      (i32.store offset=56
       (get_local $0)
       (get_local $11)
      )
      (i32.store offset=52
       (get_local $0)
       (get_local $12)
      )
      (i32.store
       (i32.sub
        (get_local $0)
        (i32.const -64)
       )
       (get_local $8)
      )
      (i32.store offset=48
       (get_local $0)
       (get_local $13)
      )
      (set_local $12
       (i32.add
        (get_local $0)
        (i32.const 8)
       )
      )
      (set_local $1
       (i32.const 0)
      )
      (set_local $10
       (i32.const 0)
      )
      (if
       (i32.eq
        (tee_local $8
         (loop $while-in1 (result i32)
          (block $while-out0 (result i32)
           (drop
            (br_if $while-out0
             (i32.const 31)
             (i32.ge_s
              (get_local $10)
              (get_local $2)
             )
            )
           )
           (if
            (i32.lt_s
             (tee_local $11
              (call $_opus_decode_frame
               (get_local $0)
               (get_local $5)
               (i32.load16_s
                (tee_local $13
                 (i32.add
                  (get_local $7)
                  (i32.shl
                   (get_local $10)
                   (i32.const 1)
                  )
                 )
                )
               )
               (i32.add
                (get_local $3)
                (i32.shl
                 (i32.mul
                  (get_local $1)
                  (i32.load
                   (get_local $12)
                  )
                 )
                 (i32.const 2)
                )
               )
               (i32.sub
                (get_local $4)
                (get_local $1)
               )
               (i32.const 0)
              )
             )
             (i32.const 0)
            )
            (block
             (set_local $9
              (get_local $11)
             )
             (br $while-out0
              (i32.const 34)
             )
            )
           )
           (if (result i32)
            (i32.eq
             (get_local $11)
             (get_local $8)
            )
            (block
             (set_local $5
              (i32.add
               (get_local $5)
               (i32.load16_s
                (get_local $13)
               )
              )
             )
             (set_local $1
              (i32.add
               (get_local $1)
               (get_local $8)
              )
             )
             (set_local $10
              (i32.add
               (get_local $10)
               (i32.const 1)
              )
             )
             (br $while-in1)
            )
            (i32.const 29)
           )
          )
         )
        )
        (i32.const 29)
       )
       (call $_celt_fatal
        (i32.const 49307)
        (i32.const 49236)
        (i32.const 724)
       )
       (if
        (i32.eq
         (get_local $8)
         (i32.const 31)
        )
        (block
         (i32.store offset=72
          (get_local $0)
          (get_local $1)
         )
         (if
          (get_local $6)
          (call $_opus_pcm_soft_clip
           (get_local $3)
           (get_local $1)
           (i32.load
            (get_local $12)
           )
           (i32.add
            (get_local $0)
            (i32.const 76)
           )
          )
          (block
           (f32.store offset=80
            (get_local $0)
            (f32.const 0)
           )
           (f32.store offset=76
            (get_local $0)
            (f32.const 0)
           )
          )
         )
         (set_global $STACKTOP
          (get_local $7)
         )
         (return
          (get_local $1)
         )
        )
        (br_if $folding-inner0
         (i32.eq
          (get_local $8)
          (i32.const 34)
         )
        )
       )
      )
     )
     (block
      (if
       (i32.eqz
        (i32.or
         (i32.gt_s
          (get_local $8)
          (get_local $4)
         )
         (i32.eq
          (get_local $11)
          (i32.const 1002)
         )
        )
       )
       (if
        (i32.ne
         (i32.load
          (tee_local $10
           (i32.add
            (get_local $0)
            (i32.const 56)
           )
          )
         )
         (i32.const 1002)
        )
        (block
         (set_local $14
          (i32.load
           (tee_local $2
            (i32.add
             (get_local $0)
             (i32.const 72)
            )
           )
          )
         )
         (set_local $1
          (i32.sub
           (get_local $4)
           (get_local $8)
          )
         )
         (block $do-once
          (if
           (i32.ne
            (get_local $8)
            (get_local $4)
           )
           (if
            (i32.lt_s
             (tee_local $9
              (call $_opus_decode_native
               (get_local $0)
               (i32.const 0)
               (i32.const 0)
               (get_local $3)
               (get_local $1)
               (i32.const 0)
               (get_local $6)
              )
             )
             (i32.const 0)
            )
            (block
             (i32.store
              (get_local $2)
              (get_local $14)
             )
             (br $folding-inner0)
            )
            (block
             (br_if $do-once
              (i32.eq
               (get_local $9)
               (get_local $1)
              )
             )
             (call $_celt_fatal
              (i32.const 49255)
              (i32.const 49236)
              (i32.const 689)
             )
            )
           )
          )
         )
         (i32.store
          (get_local $10)
          (get_local $11)
         )
         (i32.store offset=52
          (get_local $0)
          (get_local $12)
         )
         (i32.store
          (i32.sub
           (get_local $0)
           (i32.const -64)
          )
          (get_local $8)
         )
         (i32.store offset=48
          (get_local $0)
          (get_local $13)
         )
         (br_if $folding-inner0
          (i32.lt_s
           (tee_local $9
            (call $_opus_decode_frame
             (get_local $0)
             (get_local $5)
             (i32.load16_s
              (get_local $7)
             )
             (i32.add
              (get_local $3)
              (i32.shl
               (i32.mul
                (i32.load offset=8
                 (get_local $0)
                )
                (get_local $1)
               )
               (i32.const 2)
              )
             )
             (get_local $8)
             (i32.const 1)
            )
           )
           (i32.const 0)
          )
         )
         (i32.store
          (get_local $2)
          (get_local $4)
         )
         (set_global $STACKTOP
          (get_local $7)
         )
         (return
          (get_local $4)
         )
        )
       )
      )
      (set_local $9
       (call $_opus_decode_native
        (get_local $0)
        (i32.const 0)
        (i32.const 0)
        (get_local $3)
        (get_local $4)
        (i32.const 0)
        (get_local $6)
       )
      )
      (br $folding-inner0)
     )
    )
    (return
     (i32.const 0)
    )
   )
   (set_global $STACKTOP
    (get_local $7)
   )
   (return
    (get_local $9)
   )
  )
  (set_global $STACKTOP
   (get_local $7)
  )
  (i32.const -1)
 )
 (func $_validate_opus_decoder (; 366 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (if
   (i32.ge_u
    (i32.add
     (tee_local $2
      (i32.load offset=8
       (get_local $0)
      )
     )
     (i32.const -1)
    )
    (i32.const 2)
   )
   (call $_celt_fatal
    (i32.const 50286)
    (i32.const 49236)
    (i32.const 84)
   )
  )
  (block $label$break$L4
   (if
    (i32.lt_s
     (tee_local $1
      (i32.load offset=12
       (get_local $0)
      )
     )
     (i32.const 16000)
    )
    (block
     (if
      (i32.lt_s
       (get_local $1)
       (i32.const 12000)
      )
      (br_if $label$break$L4
       (i32.eqz
        (i32.sub
         (get_local $1)
         (i32.const 8000)
        )
       )
      )
      (br_if $label$break$L4
       (i32.eqz
        (i32.sub
         (get_local $1)
         (i32.const 12000)
        )
       )
      )
     )
     (call $_celt_fatal
      (i32.const 50343)
      (i32.const 49236)
      (i32.const 85)
     )
    )
    (block
     (if
      (i32.lt_s
       (get_local $1)
       (i32.const 24000)
      )
      (block
       (br_if $label$break$L4
        (i32.eqz
         (i32.sub
          (get_local $1)
          (i32.const 16000)
         )
        )
       )
       (call $_celt_fatal
        (i32.const 50343)
        (i32.const 49236)
        (i32.const 85)
       )
      )
     )
     (if
      (i32.lt_s
       (get_local $1)
       (i32.const 48000)
      )
      (br_if $label$break$L4
       (i32.eqz
        (i32.sub
         (get_local $1)
         (i32.const 24000)
        )
       )
      )
      (br_if $label$break$L4
       (i32.eqz
        (i32.sub
         (get_local $1)
         (i32.const 48000)
        )
       )
      )
     )
     (call $_celt_fatal
      (i32.const 50343)
      (i32.const 49236)
      (i32.const 85)
     )
    )
   )
  )
  (if
   (i32.ne
    (i32.load offset=24
     (get_local $0)
    )
    (get_local $1)
   )
   (call $_celt_fatal
    (i32.const 50452)
    (i32.const 49236)
    (i32.const 86)
   )
  )
  (block $label$break$L25
   (if
    (i32.lt_s
     (tee_local $1
      (i32.load offset=28
       (get_local $0)
      )
     )
     (i32.const 12000)
    )
    (if
     (i32.lt_s
      (get_local $1)
      (i32.const 8000)
     )
     (br_if $label$break$L25
      (i32.eqz
       (get_local $1)
      )
     )
     (br_if $label$break$L25
      (i32.eqz
       (i32.sub
        (get_local $1)
        (i32.const 8000)
       )
      )
     )
    )
    (if
     (i32.lt_s
      (get_local $1)
      (i32.const 16000)
     )
     (br_if $label$break$L25
      (i32.eqz
       (i32.sub
        (get_local $1)
        (i32.const 12000)
       )
      )
     )
     (br_if $label$break$L25
      (i32.eqz
       (i32.sub
        (get_local $1)
        (i32.const 16000)
       )
      )
     )
    )
   )
   (call $_celt_fatal
    (i32.const 50510)
    (i32.const 49236)
    (i32.const 87)
   )
  )
  (if
   (i32.ne
    (i32.load offset=16
     (get_local $0)
    )
    (get_local $2)
   )
   (call $_celt_fatal
    (i32.const 50704)
    (i32.const 49236)
    (i32.const 88)
   )
  )
  (if
   (i32.ge_u
    (i32.load offset=20
     (get_local $0)
    )
    (i32.const 3)
   )
   (call $_celt_fatal
    (i32.const 50766)
    (i32.const 49236)
    (i32.const 89)
   )
  )
  (block $switch25
   (block $switch-default31
    (block $switch-case26
     (br_table $switch-case26 $switch-default31 $switch-default31 $switch-default31 $switch-default31 $switch-default31 $switch-default31 $switch-default31 $switch-default31 $switch-default31 $switch-case26 $switch-default31 $switch-default31 $switch-default31 $switch-default31 $switch-default31 $switch-default31 $switch-default31 $switch-default31 $switch-default31 $switch-case26 $switch-default31 $switch-default31 $switch-default31 $switch-default31 $switch-default31 $switch-default31 $switch-default31 $switch-default31 $switch-default31 $switch-default31 $switch-default31 $switch-default31 $switch-default31 $switch-default31 $switch-default31 $switch-default31 $switch-default31 $switch-default31 $switch-default31 $switch-case26 $switch-default31 $switch-default31 $switch-default31 $switch-default31 $switch-default31 $switch-default31 $switch-default31 $switch-default31 $switch-default31 $switch-default31 $switch-default31 $switch-default31 $switch-default31 $switch-default31 $switch-default31 $switch-default31 $switch-default31 $switch-default31 $switch-default31 $switch-case26 $switch-default31
      (i32.load offset=32
       (get_local $0)
      )
     )
    )
    (br $switch25)
   )
   (call $_celt_fatal
    (i32.const 50904)
    (i32.const 49236)
    (i32.const 90)
   )
  )
  (if
   (i32.le_s
    (tee_local $1
     (i32.load offset=44
      (get_local $0)
     )
    )
    (i32.const -1)
   )
   (call $_celt_fatal
    (i32.const 51113)
    (i32.const 49236)
    (i32.const 92)
   )
  )
  (if
   (get_local $1)
   (call $_celt_fatal
    (i32.const 51145)
    (i32.const 49236)
    (i32.const 93)
   )
  )
  (if
   (i32.ge_u
    (i32.add
     (i32.load offset=48
      (get_local $0)
     )
     (i32.const -1)
    )
    (i32.const 2)
   )
   (call $_celt_fatal
    (i32.const 51189)
    (i32.const 49236)
    (i32.const 95)
   )
  )
 )
 (func $_opus_decode_frame (; 367 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (result i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local $26 i32)
  (local $27 i32)
  (local $28 i32)
  (local $29 i32)
  (local $30 i32)
  (local $31 i32)
  (local $32 i32)
  (local $33 i32)
  (local $34 i32)
  (local $35 i32)
  (local $36 i32)
  (local $37 i32)
  (local $38 i32)
  (local $39 i32)
  (local $40 i32)
  (local $41 i32)
  (local $42 i32)
  (local $43 i32)
  (local $44 i32)
  (local $45 i32)
  (local $46 f32)
  (set_local $10
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.const 160)
   )
  )
  (i32.store
   (tee_local $27
    (i32.add
     (get_local $10)
     (i32.const 88)
    )
   )
   (i32.const 0)
  )
  (set_local $9
   (i32.load offset=4
    (get_local $0)
   )
  )
  (set_local $6
   (i32.load
    (get_local $0)
   )
  )
  (if
   (i32.gt_s
    (tee_local $17
     (i32.shr_s
      (tee_local $18
       (i32.div_s
        (tee_local $7
         (i32.load
          (tee_local $24
           (i32.add
            (get_local $0)
            (i32.const 12)
           )
          )
         )
        )
        (i32.const 50)
       )
      )
      (i32.const 3)
     )
    )
    (get_local $4)
   )
   (block
    (set_global $STACKTOP
     (get_local $10)
    )
    (return
     (i32.const -2)
    )
   )
  )
  (set_local $31
   (i32.add
    (get_local $10)
    (i32.const 80)
   )
  )
  (set_local $32
   (i32.add
    (get_local $10)
    (i32.const 72)
   )
  )
  (set_local $43
   (i32.sub
    (get_local $10)
    (i32.const -64)
   )
  )
  (set_local $33
   (i32.add
    (get_local $10)
    (i32.const 56)
   )
  )
  (set_local $34
   (i32.add
    (get_local $10)
    (i32.const 48)
   )
  )
  (set_local $44
   (i32.add
    (get_local $10)
    (i32.const 40)
   )
  )
  (set_local $35
   (i32.add
    (get_local $10)
    (i32.const 32)
   )
  )
  (set_local $36
   (i32.add
    (get_local $10)
    (i32.const 24)
   )
  )
  (set_local $37
   (i32.add
    (get_local $10)
    (i32.const 16)
   )
  )
  (set_local $38
   (i32.add
    (get_local $10)
    (i32.const 8)
   )
  )
  (set_local $16
   (i32.add
    (get_local $10)
    (i32.const 96)
   )
  )
  (set_local $28
   (i32.add
    (get_local $10)
    (i32.const 92)
   )
  )
  (set_local $39
   (i32.add
    (get_local $10)
    (i32.const 144)
   )
  )
  (set_local $40
   (i32.add
    (get_local $10)
    (i32.const 84)
   )
  )
  (set_local $41
   (i32.add
    (get_local $0)
    (get_local $9)
   )
  )
  (set_local $13
   (i32.add
    (get_local $0)
    (get_local $6)
   )
  )
  (set_local $12
   (i32.shr_s
    (get_local $18)
    (i32.const 1)
   )
  )
  (set_local $15
   (i32.shr_s
    (get_local $18)
    (i32.const 2)
   )
  )
  (if
   (i32.le_s
    (tee_local $7
     (i32.mul
      (i32.div_s
       (get_local $7)
       (i32.const 25)
      )
      (i32.const 3)
     )
    )
    (get_local $4)
   )
   (set_local $4
    (get_local $7)
   )
  )
  (set_local $4
   (block $__rjto$6 (result i32)
    (block $__rjti$6
     (block $__rjti$5
      (br $__rjto$6
       (if (result i32)
        (i32.lt_s
         (get_local $2)
         (i32.const 2)
        )
        (block
         (if
          (i32.lt_s
           (get_local $4)
           (tee_local $1
            (i32.load
             (i32.sub
              (get_local $0)
              (i32.const -64)
             )
            )
           )
          )
          (set_local $1
           (get_local $4)
          )
         )
         (br $__rjti$5)
        )
        (if (result i32)
         (get_local $1)
         (block (result i32)
          (set_local $9
           (i32.load
            (i32.sub
             (get_local $0)
             (i32.const -64)
            )
           )
          )
          (set_local $6
           (i32.load offset=56
            (get_local $0)
           )
          )
          (set_local $7
           (i32.load offset=52
            (get_local $0)
           )
          )
          (call $_ec_dec_init
           (get_local $16)
           (get_local $1)
           (get_local $2)
          )
          (if (result i32)
           (i32.gt_s
            (tee_local $8
             (i32.load offset=60
              (get_local $0)
             )
            )
            (i32.const 0)
           )
           (block (result i32)
            (set_local $8
             (i32.eq
              (get_local $8)
              (i32.const 1002)
             )
            )
            (if
             (i32.ne
              (get_local $6)
              (i32.const 1002)
             )
             (block
              (if
               (i32.eqz
                (get_local $8)
               )
               (block
                (set_local $8
                 (get_local $1)
                )
                (set_local $1
                 (get_local $4)
                )
                (set_local $4
                 (get_local $9)
                )
                (br $__rjti$6)
               )
              )
              (set_local $14
               (i32.mul
                (get_local $15)
                (i32.load offset=8
                 (get_local $0)
                )
               )
              )
              (set_local $11
               (call $_llvm_stacksave)
              )
              (set_local $8
               (get_local $1)
              )
              (set_local $22
               (i32.const 1)
              )
              (set_local $1
               (get_local $4)
              )
              (set_local $29
               (get_local $14)
              )
              (br $__rjto$6
               (get_local $11)
              )
             )
            )
            (if (result i32)
             (get_local $8)
             (block
              (set_local $8
               (get_local $1)
              )
              (set_local $6
               (i32.const 1002)
              )
              (set_local $1
               (get_local $4)
              )
              (set_local $4
               (get_local $9)
              )
              (br $__rjti$6)
             )
             (if (result i32)
              (i32.load offset=68
               (get_local $0)
              )
              (block
               (set_local $8
                (get_local $1)
               )
               (set_local $6
                (i32.const 1002)
               )
               (set_local $1
                (get_local $4)
               )
               (set_local $4
                (get_local $9)
               )
               (br $__rjti$6)
              )
              (block (result i32)
               (set_local $6
                (i32.mul
                 (get_local $15)
                 (i32.load offset=8
                  (get_local $0)
                 )
                )
               )
               (set_local $11
                (call $_llvm_stacksave)
               )
               (set_local $21
                (get_global $STACKTOP)
               )
               (set_global $STACKTOP
                (i32.add
                 (get_global $STACKTOP)
                 (i32.and
                  (i32.add
                   (i32.shl
                    (get_local $6)
                    (i32.const 2)
                   )
                   (i32.const 15)
                  )
                  (i32.const -16)
                 )
                )
               )
               (drop
                (call $_opus_decode_frame
                 (get_local $0)
                 (i32.const 0)
                 (i32.const 0)
                 (get_local $21)
                 (if (result i32)
                  (i32.lt_s
                   (get_local $15)
                   (get_local $9)
                  )
                  (get_local $15)
                  (get_local $9)
                 )
                 (i32.const 0)
                )
               )
               (set_local $8
                (get_local $1)
               )
               (set_local $6
                (i32.const 1002)
               )
               (set_local $22
                (i32.const 1)
               )
               (set_local $1
                (get_local $4)
               )
               (set_local $29
                (i32.const 1)
               )
               (get_local $11)
              )
             )
            )
           )
           (block
            (set_local $8
             (get_local $1)
            )
            (set_local $1
             (get_local $4)
            )
            (set_local $4
             (get_local $9)
            )
            (br $__rjti$6)
           )
          )
         )
         (block
          (set_local $1
           (get_local $4)
          )
          (br $__rjti$5)
         )
        )
       )
      )
     )
     (if
      (i32.eqz
       (tee_local $6
        (i32.load offset=60
         (get_local $0)
        )
       )
      )
      (block
       (set_local $0
        (i32.add
         (get_local $0)
         (i32.const 8)
        )
       )
       (set_local $2
        (i32.const 0)
       )
       (loop $while-in
        (if
         (i32.lt_s
          (get_local $2)
          (i32.mul
           (get_local $1)
           (i32.load
            (get_local $0)
           )
          )
         )
         (block
          (f32.store
           (i32.add
            (get_local $3)
            (i32.shl
             (get_local $2)
             (i32.const 2)
            )
           )
           (f32.const 0)
          )
          (set_local $2
           (i32.add
            (get_local $2)
            (i32.const 1)
           )
          )
          (br $while-in)
         )
        )
       )
       (set_global $STACKTOP
        (get_local $10)
       )
       (return
        (get_local $1)
       )
      )
     )
     (if
      (i32.le_s
       (get_local $1)
       (get_local $18)
      )
      (block
       (if
        (i32.ge_s
         (get_local $1)
         (get_local $18)
        )
        (block
         (set_local $7
          (i32.const 0)
         )
         (set_local $4
          (get_local $1)
         )
         (br $__rjti$6)
        )
       )
       (if
        (i32.gt_s
         (get_local $1)
         (get_local $12)
        )
        (block
         (set_local $7
          (i32.const 0)
         )
         (set_local $4
          (get_local $12)
         )
         (br $__rjti$6)
        )
       )
       (if
        (i32.eq
         (get_local $6)
         (i32.const 1000)
        )
        (block
         (set_local $6
          (i32.const 1000)
         )
         (set_local $7
          (i32.const 0)
         )
         (set_local $4
          (get_local $1)
         )
         (br $__rjti$6)
        )
       )
       (set_local $7
        (i32.const 0)
       )
       (set_local $4
        (if (result i32)
         (i32.and
          (i32.gt_s
           (get_local $1)
           (get_local $15)
          )
          (i32.lt_s
           (get_local $1)
           (get_local $12)
          )
         )
         (get_local $15)
         (get_local $1)
        )
       )
       (br $__rjti$6)
      )
     )
     (set_local $5
      (i32.add
       (get_local $0)
       (i32.const 8)
      )
     )
     (set_local $2
      (get_local $1)
     )
     (block $__rjto$0
      (block $__rjti$0
       (loop $while-in3
        (block $while-out2
         (if
          (i32.lt_s
           (tee_local $4
            (call $_opus_decode_frame
             (get_local $0)
             (i32.const 0)
             (i32.const 0)
             (get_local $3)
             (if (result i32)
              (i32.lt_s
               (get_local $2)
               (get_local $18)
              )
              (get_local $2)
              (get_local $18)
             )
             (i32.const 0)
            )
           )
           (i32.const 0)
          )
          (block
           (set_local $1
            (get_local $4)
           )
           (br $__rjti$0)
          )
         )
         (set_local $3
          (i32.add
           (get_local $3)
           (i32.shl
            (i32.mul
             (get_local $4)
             (i32.load
              (get_local $5)
             )
            )
            (i32.const 2)
           )
          )
         )
         (br_if $while-in3
          (i32.gt_s
           (tee_local $2
            (i32.sub
             (get_local $2)
             (get_local $4)
            )
           )
           (i32.const 0)
          )
         )
        )
       )
      )
      (set_global $STACKTOP
       (get_local $10)
      )
      (return
       (get_local $1)
      )
     )
    )
    (set_local $11
     (call $_llvm_stacksave)
    )
    (set_local $29
     (i32.const 1)
    )
    (set_local $9
     (get_local $4)
    )
    (get_local $11)
   )
  )
  (set_local $1
   (block $label$break$L39 (result i32)
    (if (result i32)
     (i32.gt_s
      (get_local $9)
      (get_local $1)
     )
     (i32.const -1)
     (block (result i32)
      (if
       (i32.eq
        (get_local $6)
        (i32.const 1002)
       )
       (block
        (set_local $14
         (get_global $STACKTOP)
        )
        (set_global $STACKTOP
         (i32.add
          (get_global $STACKTOP)
          (i32.const 16)
         )
        )
        (set_local $6
         (i32.const 1002)
        )
       )
       (block
        (set_local $30
         (i32.add
          (get_local $0)
          (i32.const 8)
         )
        )
        (set_local $11
         (get_global $STACKTOP)
        )
        (set_global $STACKTOP
         (i32.add
          (get_global $STACKTOP)
          (i32.and
           (i32.add
            (i32.shl
             (i32.mul
              (if (result i32)
               (i32.gt_s
                (get_local $12)
                (get_local $9)
               )
               (get_local $12)
               (get_local $9)
              )
              (i32.load
               (get_local $30)
              )
             )
             (i32.const 1)
            )
            (i32.const 15)
           )
           (i32.const -16)
          )
         )
        )
        (if
         (i32.eq
          (i32.load offset=60
           (get_local $0)
          )
          (i32.const 1002)
         )
         (drop
          (call $_silk_InitDecoder
           (get_local $41)
          )
         )
        )
        (i32.store offset=32
         (get_local $0)
         (if (result i32)
          (i32.gt_s
           (tee_local $1
            (i32.div_s
             (i32.mul
              (get_local $9)
              (i32.const 1000)
             )
             (i32.load
              (get_local $24)
             )
            )
           )
           (i32.const 10)
          )
          (get_local $1)
          (i32.const 10)
         )
        )
        (set_local $42
         (if (result i32)
          (get_local $8)
          (block (result i32)
           (i32.store offset=20
            (get_local $0)
            (i32.load offset=48
             (get_local $0)
            )
           )
           (block $label$break$L49
            (if
             (i32.eq
              (get_local $6)
              (i32.const 1000)
             )
             (block $switch
              (block $switch-default
               (block $switch-case7
                (block $switch-case6
                 (block $switch-case
                  (br_table $switch-case $switch-case6 $switch-case7 $switch-default
                   (i32.sub
                    (get_local $7)
                    (i32.const 1101)
                   )
                  )
                 )
                 (i32.store offset=28
                  (get_local $0)
                  (i32.const 8000)
                 )
                 (br $label$break$L49)
                )
                (i32.store offset=28
                 (get_local $0)
                 (i32.const 12000)
                )
                (br $label$break$L49)
               )
               (i32.store offset=28
                (get_local $0)
                (i32.const 16000)
               )
               (br $label$break$L49)
              )
              (i32.store offset=28
               (get_local $0)
               (i32.const 16000)
              )
              (call $_celt_fatal
               (i32.const 49348)
               (i32.const 49236)
               (i32.const 389)
              )
             )
             (i32.store offset=28
              (get_local $0)
              (i32.const 16000)
             )
            )
           )
           (i32.shl
            (get_local $5)
            (i32.const 1)
           )
          )
          (i32.const 1)
         )
        )
        (set_local $45
         (i32.add
          (get_local $0)
          (i32.const 16)
         )
        )
        (set_local $26
         (i32.eqz
          (get_local $42)
         )
        )
        (set_local $1
         (get_local $11)
        )
        (set_local $14
         (i32.const 0)
        )
        (loop $while-in9
         (if
          (call $_silk_Decode
           (get_local $41)
           (get_local $45)
           (get_local $42)
           (i32.eqz
            (get_local $14)
           )
           (get_local $16)
           (get_local $1)
           (get_local $28)
          )
          (block
           (drop
            (br_if $label$break$L39
             (i32.const -3)
             (get_local $26)
            )
           )
           (i32.store
            (get_local $28)
            (get_local $9)
           )
           (set_local $19
            (i32.const 0)
           )
           (loop $while-in12
            (if
             (i32.lt_s
              (get_local $19)
              (i32.mul
               (get_local $9)
               (tee_local $12
                (i32.load
                 (get_local $30)
                )
               )
              )
             )
             (block
              (i32.store16
               (i32.add
                (get_local $1)
                (i32.shl
                 (get_local $19)
                 (i32.const 1)
                )
               )
               (i32.const 0)
              )
              (set_local $19
               (i32.add
                (get_local $19)
                (i32.const 1)
               )
              )
              (br $while-in12)
             )
            )
           )
          )
          (set_local $12
           (i32.load
            (get_local $30)
           )
          )
         )
         (set_local $14
          (i32.add
           (get_local $14)
           (tee_local $19
            (i32.load
             (get_local $28)
            )
           )
          )
         )
         (set_local $1
          (i32.add
           (get_local $1)
           (i32.shl
            (i32.mul
             (get_local $19)
             (get_local $12)
            )
            (i32.const 1)
           )
          )
         )
         (br_if $while-in9
          (i32.lt_s
           (get_local $14)
           (get_local $9)
          )
         )
        )
        (set_local $14
         (get_local $11)
        )
       )
      )
      (set_local $1
       (i32.eq
        (get_local $6)
        (i32.const 1002)
       )
      )
      (block $__rjto$2
       (set_local $5
        (block $__rjti$2 (result i32)
         (block $__rjti$1
          (set_local $5
           (if (result i32)
            (tee_local $19
             (i32.eqz
              (get_local $5)
             )
            )
            (if (result i32)
             (get_local $1)
             (br $__rjti$1)
             (if (result i32)
              (get_local $8)
              (if (result i32)
               (i32.gt_s
                (i32.add
                 (i32.add
                  (call $_ec_tell
                   (i32.load
                    (tee_local $26
                     (i32.add
                      (get_local $16)
                      (i32.const 20)
                     )
                    )
                   )
                   (i32.load
                    (tee_local $5
                     (i32.add
                      (get_local $16)
                      (i32.const 28)
                     )
                    )
                   )
                  )
                  (i32.const 17)
                 )
                 (if (result i32)
                  (i32.eq
                   (i32.load offset=56
                    (get_local $0)
                   )
                   (i32.const 1001)
                  )
                  (i32.const 20)
                  (i32.const 0)
                 )
                )
                (i32.shl
                 (get_local $2)
                 (i32.const 3)
                )
               )
               (block
                (set_local $1
                 (i32.const 0)
                )
                (br $__rjti$2
                 (i32.const 17)
                )
               )
               (block (result i32)
                (if
                 (i32.eq
                  (get_local $6)
                  (i32.const 1001)
                 )
                 (block
                  (if
                   (i32.eqz
                    (tee_local $11
                     (call $_ec_dec_bit_logp
                      (get_local $16)
                      (i32.const 12)
                     )
                    )
                   )
                   (block
                    (set_local $1
                     (i32.const 0)
                    )
                    (br $__rjti$2
                     (i32.const 17)
                    )
                   )
                  )
                  (set_local $1
                   (call $_ec_dec_bit_logp
                    (get_local $16)
                    (i32.const 1)
                   )
                  )
                  (set_local $12
                   (i32.add
                    (call $_ec_dec_uint
                     (get_local $16)
                     (i32.const 256)
                    )
                    (i32.const 2)
                   )
                  )
                  (set_local $5
                   (call $_ec_tell
                    (i32.load
                     (get_local $26)
                    )
                    (i32.load
                     (get_local $5)
                    )
                   )
                  )
                 )
                 (block
                  (set_local $1
                   (call $_ec_dec_bit_logp
                    (get_local $16)
                    (i32.const 1)
                   )
                  )
                  (set_local $5
                   (call $_ec_tell
                    (i32.load
                     (get_local $26)
                    )
                    (i32.load
                     (get_local $5)
                    )
                   )
                  )
                  (set_local $11
                   (i32.const 1)
                  )
                  (set_local $12
                   (i32.sub
                    (get_local $2)
                    (i32.shr_s
                     (i32.add
                      (get_local $5)
                      (i32.const 7)
                     )
                     (i32.const 3)
                    )
                   )
                  )
                 )
                )
                (if (result i32)
                 (i32.lt_s
                  (i32.shl
                   (tee_local $2
                    (i32.sub
                     (get_local $2)
                     (get_local $12)
                    )
                   )
                   (i32.const 3)
                  )
                  (get_local $5)
                 )
                 (block
                  (set_local $2
                   (i32.const 0)
                  )
                  (br $__rjti$2
                   (i32.const 17)
                  )
                 )
                 (block (result i32)
                  (i32.store
                   (tee_local $5
                    (i32.add
                     (get_local $16)
                     (i32.const 4)
                    )
                   )
                   (i32.sub
                    (i32.load
                     (get_local $5)
                    )
                    (get_local $12)
                   )
                  )
                  (set_local $22
                   (i32.const 0)
                  )
                  (i32.const 17)
                 )
                )
               )
              )
              (block
               (set_local $1
                (i32.const 0)
               )
               (br $__rjti$2
                (i32.const 17)
               )
              )
             )
            )
            (if
             (get_local $1)
             (br $__rjti$1)
             (block
              (set_local $1
               (i32.const 0)
              )
              (br $__rjti$2
               (i32.const 17)
              )
             )
            )
           )
          )
          (br $__rjto$2)
         )
         (set_local $1
          (i32.const 0)
         )
         (i32.const 0)
        )
       )
       (set_local $11
        (get_global $STACKTOP)
       )
       (set_global $STACKTOP
        (i32.add
         (get_global $STACKTOP)
         (i32.and
          (i32.add
           (i32.shl
            (get_local $29)
            (i32.const 2)
           )
           (i32.const 15)
          )
          (i32.const -16)
         )
        )
       )
       (if
        (get_local $22)
        (if
         (i32.ne
          (get_local $6)
          (i32.const 1002)
         )
         (block
          (drop
           (call $_opus_decode_frame
            (get_local $0)
            (i32.const 0)
            (i32.const 0)
            (get_local $11)
            (if (result i32)
             (i32.lt_s
              (get_local $15)
              (get_local $9)
             )
             (get_local $15)
             (get_local $9)
            )
            (i32.const 0)
           )
          )
          (set_local $21
           (get_local $11)
          )
         )
        )
        (set_local $22
         (i32.const 0)
        )
       )
       (set_local $12
        (i32.const 0)
       )
       (set_local $11
        (i32.const 0)
       )
      )
      (block $__rjto$3
       (block $__rjti$3
        (block $switch-default22
         (block $switch-case21
          (block $switch-case20
           (block $switch-case18
            (block $switch-case17
             (block $switch-case16
              (br_table $switch-case16 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-case17 $switch-case18 $switch-case18 $switch-case20 $switch-case21 $switch-default22
               (get_local $7)
              )
             )
             (br $__rjto$3)
            )
            (set_local $7
             (i32.const 13)
            )
            (br $__rjti$3)
           )
           (set_local $7
            (i32.const 17)
           )
           (br $__rjti$3)
          )
          (set_local $7
           (i32.const 19)
          )
          (br $__rjti$3)
         )
         (set_local $7
          (i32.const 21)
         )
         (br $__rjti$3)
        )
        (call $_celt_fatal
         (i32.const 49348)
         (i32.const 49236)
         (i32.const 488)
        )
        (br $__rjto$3)
       )
       (i32.store
        (get_local $10)
        (get_local $7)
       )
       (if
        (call $_opus_custom_decoder_ctl
         (get_local $13)
         (i32.const 10012)
         (get_local $10)
        )
        (call $_celt_fatal
         (i32.const 49368)
         (i32.const 49236)
         (i32.const 491)
        )
       )
      )
      (i32.store
       (get_local $38)
       (i32.load offset=48
        (get_local $0)
       )
      )
      (if
       (call $_opus_custom_decoder_ctl
        (get_local $13)
        (i32.const 10008)
        (get_local $38)
       )
       (call $_celt_fatal
        (i32.const 49503)
        (i32.const 49236)
        (i32.const 493)
       )
      )
      (if
       (tee_local $11
        (i32.eqz
         (get_local $11)
        )
       )
       (block
        (set_local $23
         (get_global $STACKTOP)
        )
        (set_global $STACKTOP
         (i32.add
          (get_global $STACKTOP)
          (i32.const 16)
         )
        )
       )
       (block
        (set_local $7
         (get_global $STACKTOP)
        )
        (set_global $STACKTOP
         (i32.add
          (get_global $STACKTOP)
          (i32.and
           (i32.add
            (i32.shl
             (i32.mul
              (get_local $15)
              (i32.load offset=8
               (get_local $0)
              )
             )
             (i32.const 2)
            )
            (i32.const 15)
           )
           (i32.const -16)
          )
         )
        )
        (if
         (get_local $1)
         (block
          (i32.store
           (get_local $37)
           (i32.const 0)
          )
          (if
           (call $_opus_custom_decoder_ctl
            (get_local $13)
            (i32.const 10010)
            (get_local $37)
           )
           (call $_celt_fatal
            (i32.const 49662)
            (i32.const 49236)
            (i32.const 502)
           )
          )
          (drop
           (call $_celt_decode_with_ec
            (get_local $13)
            (i32.add
             (get_local $8)
             (get_local $2)
            )
            (get_local $12)
            (get_local $7)
            (get_local $15)
            (i32.const 0)
           )
          )
          (i32.store
           (get_local $36)
           (get_local $27)
          )
          (if
           (call $_opus_custom_decoder_ctl
            (get_local $13)
            (i32.const 4031)
            (get_local $36)
           )
           (call $_celt_fatal
            (i32.const 49785)
            (i32.const 49236)
            (i32.const 505)
           )
           (set_local $23
            (get_local $7)
           )
          )
         )
         (set_local $23
          (get_local $7)
         )
        )
       )
      )
      (i32.store
       (get_local $35)
       (get_local $5)
      )
      (if
       (call $_opus_custom_decoder_ctl
        (get_local $13)
        (i32.const 10010)
        (get_local $35)
       )
       (call $_celt_fatal
        (i32.const 49930)
        (i32.const 49236)
        (i32.const 509)
       )
      )
      (block $label$break$L132
       (block $__rjti$4
        (if
         (i32.eq
          (get_local $6)
          (i32.const 1000)
         )
         (block
          (i32.store16
           (get_local $39)
           (i32.const -1)
          )
          (set_local $5
           (i32.add
            (get_local $0)
            (i32.const 8)
           )
          )
          (set_local $7
           (i32.const 0)
          )
          (loop $while-in26
           (if
            (i32.lt_s
             (get_local $7)
             (i32.mul
              (get_local $9)
              (i32.load
               (get_local $5)
              )
             )
            )
            (block
             (f32.store
              (i32.add
               (get_local $3)
               (i32.shl
                (get_local $7)
                (i32.const 2)
               )
              )
              (f32.const 0)
             )
             (set_local $7
              (i32.add
               (get_local $7)
               (i32.const 1)
              )
             )
             (br $while-in26)
            )
           )
          )
          (if
           (i32.eq
            (i32.load offset=60
             (get_local $0)
            )
            (i32.const 1001)
           )
           (block
            (if
             (i32.eqz
              (i32.or
               (get_local $11)
               (i32.eqz
                (get_local $1)
               )
              )
             )
             (if
              (i32.load offset=68
               (get_local $0)
              )
              (block
               (set_local $6
                (i32.const 1000)
               )
               (br $__rjti$4)
              )
             )
            )
            (i32.store
             (get_local $34)
             (i32.const 0)
            )
            (if
             (call $_opus_custom_decoder_ctl
              (get_local $13)
              (i32.const 10010)
              (get_local $34)
             )
             (call $_celt_fatal
              (i32.const 49662)
              (i32.const 49236)
              (i32.const 531)
             )
             (block
              (drop
               (call $_celt_decode_with_ec
                (get_local $13)
                (get_local $39)
                (i32.const 2)
                (get_local $3)
                (get_local $17)
                (i32.const 0)
               )
              )
              (set_local $6
               (i32.const 1000)
              )
              (br $__rjti$4)
             )
            )
           )
           (block
            (set_local $6
             (i32.const 1000)
            )
            (br $__rjti$4)
           )
          )
         )
         (block
          (if
           (i32.and
            (i32.ne
             (get_local $6)
             (tee_local $5
              (i32.load offset=60
               (get_local $0)
              )
             )
            )
            (i32.gt_s
             (get_local $5)
             (i32.const 0)
            )
           )
           (if
            (i32.eqz
             (i32.load offset=68
              (get_local $0)
             )
            )
            (if
             (call $_opus_custom_decoder_ctl
              (get_local $13)
              (i32.const 4028)
              (get_local $44)
             )
             (call $_celt_fatal
              (i32.const 50071)
              (i32.const 49236)
              (i32.const 516)
             )
            )
           )
          )
          (set_local $5
           (if (result i32)
            (i32.lt_s
             (get_local $18)
             (get_local $9)
            )
            (get_local $18)
            (get_local $9)
           )
          )
          (set_local $25
           (call $_celt_decode_with_ec
            (get_local $13)
            (if (result i32)
             (get_local $19)
             (get_local $8)
             (i32.const 0)
            )
            (get_local $2)
            (get_local $3)
            (get_local $5)
            (get_local $16)
           )
          )
          (br_if $__rjti$4
           (i32.ne
            (get_local $6)
            (i32.const 1002)
           )
          )
          (set_local $20
           (get_local $6)
          )
         )
        )
        (br $label$break$L132)
       )
       (set_local $7
        (i32.add
         (get_local $0)
         (i32.const 8)
        )
       )
       (set_local $20
        (loop $while-in29 (result i32)
         (if (result i32)
          (i32.lt_s
           (get_local $20)
           (i32.mul
            (get_local $9)
            (i32.load
             (get_local $7)
            )
           )
          )
          (block
           (f32.store
            (tee_local $5
             (i32.add
              (get_local $3)
              (i32.shl
               (get_local $20)
               (i32.const 2)
              )
             )
            )
            (f32.add
             (f32.load
              (get_local $5)
             )
             (f32.mul
              (f32.convert_s/i32
               (i32.load16_s
                (i32.add
                 (get_local $14)
                 (i32.shl
                  (get_local $20)
                  (i32.const 1)
                 )
                )
               )
              )
              (f32.const 0.000030517578125)
             )
            )
           )
           (set_local $20
            (i32.add
             (get_local $20)
             (i32.const 1)
            )
           )
           (br $while-in29)
          )
          (get_local $6)
         )
        )
       )
      )
      (i32.store
       (get_local $33)
       (get_local $40)
      )
      (if
       (call $_opus_custom_decoder_ctl
        (get_local $13)
        (i32.const 10015)
        (get_local $33)
       )
       (call $_celt_fatal
        (i32.const 50142)
        (i32.const 49236)
        (i32.const 549)
       )
      )
      (set_local $14
       (i32.load offset=60
        (i32.load
         (get_local $40)
        )
       )
      )
      (if
       (i32.eqz
        (get_local $11)
       )
       (if
        (get_local $1)
        (block
         (set_local $7
          (i32.add
           (get_local $0)
           (i32.const 8)
          )
         )
         (set_local $8
          (i32.const 0)
         )
         (loop $while-in33
          (if
           (i32.lt_s
            (get_local $8)
            (tee_local $6
             (i32.load
              (get_local $7)
             )
            )
           )
           (block
            (set_local $6
             (i32.const 0)
            )
            (loop $while-in35
             (if
              (i32.lt_s
               (get_local $6)
               (get_local $17)
              )
              (block
               (i32.store
                (i32.add
                 (get_local $3)
                 (i32.shl
                  (tee_local $5
                   (i32.add
                    (i32.mul
                     (i32.load
                      (get_local $7)
                     )
                     (get_local $6)
                    )
                    (get_local $8)
                   )
                  )
                  (i32.const 2)
                 )
                )
                (i32.load
                 (i32.add
                  (get_local $23)
                  (i32.shl
                   (get_local $5)
                   (i32.const 2)
                  )
                 )
                )
               )
               (set_local $6
                (i32.add
                 (get_local $6)
                 (i32.const 1)
                )
               )
               (br $while-in35)
              )
             )
            )
            (set_local $8
             (i32.add
              (get_local $8)
              (i32.const 1)
             )
            )
            (br $while-in33)
           )
          )
         )
         (set_local $7
          (i32.add
           (get_local $3)
           (i32.shl
            (tee_local $5
             (i32.mul
              (get_local $6)
              (get_local $17)
             )
            )
            (i32.const 2)
           )
          )
         )
         (call $_smooth_fade
          (i32.add
           (get_local $23)
           (i32.shl
            (get_local $5)
            (i32.const 2)
           )
          )
          (get_local $7)
          (get_local $7)
          (get_local $17)
          (get_local $6)
          (get_local $14)
          (i32.load
           (get_local $24)
          )
         )
        )
        (block
         (if
          (call $_opus_custom_decoder_ctl
           (get_local $13)
           (i32.const 4028)
           (get_local $43)
          )
          (call $_celt_fatal
           (i32.const 50071)
           (i32.const 49236)
           (i32.const 556)
          )
         )
         (i32.store
          (get_local $32)
          (i32.const 0)
         )
         (if
          (call $_opus_custom_decoder_ctl
           (get_local $13)
           (i32.const 10010)
           (get_local $32)
          )
          (call $_celt_fatal
           (i32.const 49662)
           (i32.const 49236)
           (i32.const 557)
          )
         )
         (drop
          (call $_celt_decode_with_ec
           (get_local $13)
           (i32.add
            (get_local $8)
            (get_local $2)
           )
           (get_local $12)
           (get_local $23)
           (get_local $15)
           (i32.const 0)
          )
         )
         (i32.store
          (get_local $31)
          (get_local $27)
         )
         (if
          (call $_opus_custom_decoder_ctl
           (get_local $13)
           (i32.const 4031)
           (get_local $31)
          )
          (call $_celt_fatal
           (i32.const 49785)
           (i32.const 49236)
           (i32.const 560)
          )
          (call $_smooth_fade
           (tee_local $5
            (i32.add
             (get_local $3)
             (i32.shl
              (i32.mul
               (tee_local $7
                (i32.load offset=8
                 (get_local $0)
                )
               )
               (i32.sub
                (get_local $9)
                (get_local $17)
               )
              )
              (i32.const 2)
             )
            )
           )
           (i32.add
            (get_local $23)
            (i32.shl
             (i32.mul
              (get_local $7)
              (get_local $17)
             )
             (i32.const 2)
            )
           )
           (get_local $5)
           (get_local $17)
           (get_local $7)
           (get_local $14)
           (i32.load
            (get_local $24)
           )
          )
         )
        )
       )
      )
      (block $do-once36
       (if
        (get_local $22)
        (block
         (set_local $6
          (i32.add
           (get_local $0)
           (i32.const 8)
          )
         )
         (if
          (i32.lt_s
           (get_local $9)
           (get_local $15)
          )
          (block
           (call $_smooth_fade
            (get_local $21)
            (get_local $3)
            (get_local $3)
            (get_local $17)
            (i32.load
             (get_local $6)
            )
            (get_local $14)
            (i32.load
             (get_local $24)
            )
           )
           (br $do-once36)
          )
         )
         (set_local $8
          (i32.const 0)
         )
         (loop $while-in39
          (if
           (i32.lt_s
            (get_local $8)
            (tee_local $5
             (i32.mul
              (tee_local $7
               (i32.load
                (get_local $6)
               )
              )
              (get_local $17)
             )
            )
           )
           (block
            (i32.store
             (i32.add
              (get_local $3)
              (i32.shl
               (get_local $8)
               (i32.const 2)
              )
             )
             (i32.load
              (i32.add
               (get_local $21)
               (i32.shl
                (get_local $8)
                (i32.const 2)
               )
              )
             )
            )
            (set_local $8
             (i32.add
              (get_local $8)
              (i32.const 1)
             )
            )
            (br $while-in39)
           )
          )
         )
         (call $_smooth_fade
          (i32.add
           (get_local $21)
           (i32.shl
            (get_local $5)
            (i32.const 2)
           )
          )
          (tee_local $5
           (i32.add
            (get_local $3)
            (i32.shl
             (get_local $5)
             (i32.const 2)
            )
           )
          )
          (get_local $5)
          (get_local $17)
          (get_local $7)
          (get_local $14)
          (i32.load
           (get_local $24)
          )
         )
        )
       )
      )
      (block $label$break$L174
       (if
        (tee_local $5
         (i32.load offset=40
          (get_local $0)
         )
        )
        (block
         (set_local $46
          (f32.demote/f64
           (call $Math_exp
            (f64.mul
             (f64.promote/f32
              (f32.mul
               (f32.convert_s/i32
                (get_local $5)
               )
               (f32.const 6.488140788860619e-04)
              )
             )
             (f64.const 0.6931471805599453)
            )
           )
          )
         )
         (set_local $7
          (i32.add
           (get_local $0)
           (i32.const 8)
          )
         )
         (set_local $6
          (i32.const 0)
         )
         (loop $while-in42
          (br_if $label$break$L174
           (i32.ge_s
            (get_local $6)
            (i32.mul
             (get_local $9)
             (i32.load
              (get_local $7)
             )
            )
           )
          )
          (f32.store
           (tee_local $5
            (i32.add
             (get_local $3)
             (i32.shl
              (get_local $6)
              (i32.const 2)
             )
            )
           )
           (f32.mul
            (f32.load
             (get_local $5)
            )
            (get_local $46)
           )
          )
          (set_local $6
           (i32.add
            (get_local $6)
            (i32.const 1)
           )
          )
          (br $while-in42)
         )
        )
       )
      )
      (i32.store offset=84
       (get_local $0)
       (tee_local $2
        (if (result i32)
         (i32.lt_s
          (get_local $2)
          (i32.const 2)
         )
         (i32.const 0)
         (i32.xor
          (i32.load offset=28
           (get_local $16)
          )
          (i32.load
           (get_local $27)
          )
         )
        )
       )
      )
      (i32.store offset=60
       (get_local $0)
       (get_local $20)
      )
      (i32.store offset=68
       (get_local $0)
       (i32.and
        (i32.eqz
         (get_local $1)
        )
        (i32.xor
         (get_local $11)
         (i32.const 1)
        )
       )
      )
      (if (result i32)
       (i32.lt_s
        (get_local $25)
        (i32.const 0)
       )
       (get_local $25)
       (get_local $9)
      )
     )
    )
   )
  )
  (call $_llvm_stackrestore
   (get_local $4)
  )
  (set_global $STACKTOP
   (get_local $10)
  )
  (get_local $1)
 )
 (func $_opus_packet_get_mode (; 368 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (if (result i32)
   (i32.lt_s
    (i32.shr_s
     (i32.shl
      (get_local $0)
      (i32.const 24)
     )
     (i32.const 24)
    )
    (i32.const 0)
   )
   (i32.const 1002)
   (if (result i32)
    (i32.eq
     (i32.and
      (get_local $0)
      (i32.const 96)
     )
     (i32.const 96)
    )
    (i32.const 1001)
    (i32.const 1000)
   )
  )
 )
 (func $_opus_packet_get_bandwidth (; 369 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (if
   (i32.lt_s
    (i32.shr_s
     (i32.shl
      (get_local $0)
      (i32.const 24)
     )
     (i32.const 24)
    )
    (i32.const 0)
   )
   (block
    (set_local $1
     (i32.add
      (tee_local $0
       (i32.and
        (i32.shr_u
         (i32.and
          (get_local $0)
          (i32.const 255)
         )
         (i32.const 5)
        )
        (i32.const 3)
       )
      )
      (i32.const 1102)
     )
    )
    (return
     (if (result i32)
      (get_local $0)
      (get_local $1)
      (i32.const 1101)
     )
    )
   )
  )
  (if (result i32)
   (i32.eq
    (i32.and
     (get_local $0)
     (i32.const 96)
    )
    (i32.const 96)
   )
   (i32.or
    (i32.and
     (i32.shr_u
      (i32.and
       (get_local $0)
       (i32.const 255)
      )
      (i32.const 4)
     )
     (i32.const 1)
    )
    (i32.const 1104)
   )
   (i32.add
    (i32.and
     (i32.shr_u
      (i32.and
       (get_local $0)
       (i32.const 255)
      )
      (i32.const 5)
     )
     (i32.const 3)
    )
    (i32.const 1101)
   )
  )
 )
 (func $_opus_packet_get_nb_channels (; 370 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (i32.and
   (i32.shr_s
    (i32.shl
     (i32.add
      (i32.and
       (i32.shr_u
        (i32.and
         (get_local $0)
         (i32.const 255)
        )
        (i32.const 2)
       )
       (i32.const 1)
      )
      (i32.const 1)
     )
     (i32.const 24)
    )
    (i32.const 24)
   )
   (i32.const 255)
  )
 )
 (func $_smooth_fade (; 371 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32)
  (local $7 i32)
  (local $8 f32)
  (local $9 i32)
  (local $10 i32)
  (set_local $10
   (i32.div_s
    (i32.const 48000)
    (get_local $6)
   )
  )
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $7)
     (get_local $4)
    )
    (block
     (set_local $6
      (i32.const 0)
     )
     (loop $while-in1
      (if
       (i32.lt_s
        (get_local $6)
        (get_local $3)
       )
       (block
        (f32.store
         (i32.add
          (get_local $2)
          (i32.shl
           (tee_local $9
            (i32.add
             (i32.mul
              (get_local $6)
              (get_local $4)
             )
             (get_local $7)
            )
           )
           (i32.const 2)
          )
         )
         (f32.add
          (f32.mul
           (tee_local $8
            (f32.mul
             (tee_local $8
              (f32.load
               (i32.add
                (get_local $5)
                (i32.shl
                 (i32.mul
                  (get_local $6)
                  (get_local $10)
                 )
                 (i32.const 2)
                )
               )
              )
             )
             (get_local $8)
            )
           )
           (f32.load
            (i32.add
             (get_local $1)
             (i32.shl
              (get_local $9)
              (i32.const 2)
             )
            )
           )
          )
          (f32.mul
           (f32.sub
            (f32.const 1)
            (get_local $8)
           )
           (f32.load
            (i32.add
             (get_local $0)
             (i32.shl
              (get_local $9)
              (i32.const 2)
             )
            )
           )
          )
         )
        )
        (set_local $6
         (i32.add
          (get_local $6)
          (i32.const 1)
         )
        )
        (br $while-in1)
       )
      )
     )
     (set_local $7
      (i32.add
       (get_local $7)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
 )
 (func $_opus_packet_get_nb_frames (; 372 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (block $label$break$L1 (result i32)
   (if (result i32)
    (i32.lt_s
     (get_local $1)
     (i32.const 1)
    )
    (i32.const -1)
    (block (result i32)
     (block $switch
      (block $switch-default
       (block $switch-case0
        (block $switch-case
         (br_table $switch-case $switch-default $switch-default $switch-case0 $switch-default
          (i32.and
           (i32.load8_s
            (get_local $0)
           )
           (i32.const 3)
          )
         )
        )
        (br $label$break$L1
         (i32.const 1)
        )
       )
       (br $switch)
      )
      (br $label$break$L1
       (i32.const 2)
      )
     )
     (if (result i32)
      (i32.lt_s
       (get_local $1)
       (i32.const 2)
      )
      (i32.const -4)
      (i32.and
       (i32.load8_s offset=1
        (get_local $0)
       )
       (i32.const 63)
      )
     )
    )
   )
  )
 )
 (func $_opus_decode_float (; 373 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (result i32)
  (if
   (i32.lt_s
    (get_local $4)
    (i32.const 1)
   )
   (return
    (i32.const -1)
   )
  )
  (call $_opus_decode_native
   (get_local $0)
   (get_local $1)
   (get_local $2)
   (get_local $3)
   (get_local $4)
   (get_local $5)
   (i32.const 0)
  )
 )
 (func $_opus_decoder_destroy (; 374 ;) (; has Stack IR ;) (param $0 i32)
  (call $_opus_free
   (get_local $0)
  )
 )
 (func $_opus_encoder_get_size (; 375 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (set_local $1
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.gt_u
    (i32.add
     (get_local $0)
     (i32.const -1)
    )
    (i32.const 1)
   )
   (block
    (set_global $STACKTOP
     (get_local $1)
    )
    (return
     (i32.const 0)
    )
   )
  )
  (if
   (call $_silk_Get_Encoder_Size
    (get_local $1)
   )
   (block
    (set_global $STACKTOP
     (get_local $1)
    )
    (return
     (i32.const 0)
    )
   )
  )
  (set_local $2
   (call $_align
    (i32.load
     (get_local $1)
    )
   )
  )
  (i32.store
   (get_local $1)
   (get_local $2)
  )
  (set_local $0
   (call $_celt_encoder_get_size
    (get_local $0)
   )
  )
  (set_local $0
   (i32.add
    (i32.add
     (call $_align
      (i32.const 18136)
     )
     (get_local $2)
    )
    (get_local $0)
   )
  )
  (set_global $STACKTOP
   (get_local $1)
  )
  (get_local $0)
 )
 (func $_opus_encoder_init (; 376 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (block $folding-inner1
   (block $folding-inner0
    (set_local $4
     (get_global $STACKTOP)
    )
    (set_global $STACKTOP
     (i32.add
      (get_global $STACKTOP)
      (i32.const 16)
     )
    )
    (set_local $10
     (i32.add
      (get_local $4)
      (i32.const 8)
     )
    )
    (set_local $6
     (i32.add
      (get_local $4)
      (i32.const 12)
     )
    )
    (block $label$break$L1
     (if
      (i32.lt_s
       (get_local $1)
       (i32.const 16000)
      )
      (block
       (if
        (i32.lt_s
         (get_local $1)
         (i32.const 12000)
        )
        (br_if $label$break$L1
         (i32.eqz
          (i32.sub
           (get_local $1)
           (i32.const 8000)
          )
         )
        )
        (br_if $label$break$L1
         (i32.eqz
          (i32.sub
           (get_local $1)
           (i32.const 12000)
          )
         )
        )
       )
       (br $folding-inner1)
      )
      (block
       (if
        (i32.lt_s
         (get_local $1)
         (i32.const 24000)
        )
        (block
         (br_if $label$break$L1
          (i32.eqz
           (i32.sub
            (get_local $1)
            (i32.const 16000)
           )
          )
         )
         (br $folding-inner1)
        )
       )
       (if
        (i32.lt_s
         (get_local $1)
         (i32.const 48000)
        )
        (br_if $label$break$L1
         (i32.eqz
          (i32.sub
           (get_local $1)
           (i32.const 24000)
          )
         )
        )
        (br_if $label$break$L1
         (i32.eqz
          (i32.sub
           (get_local $1)
           (i32.const 48000)
          )
         )
        )
       )
       (br $folding-inner1)
      )
     )
    )
    (br_if $folding-inner1
     (i32.ge_u
      (i32.add
       (get_local $2)
       (i32.const -1)
      )
      (i32.const 2)
     )
    )
    (block $switch12
     (block $switch-default16
      (block $switch-case13
       (br_table $switch-case13 $switch-case13 $switch-default16 $switch-case13 $switch-default16
        (i32.sub
         (get_local $3)
         (i32.const 2048)
        )
       )
      )
      (br $switch12)
     )
     (br $folding-inner1)
    )
    (set_local $5
     (call $_opus_encoder_get_size
      (get_local $2)
     )
    )
    (drop
     (call $_memset
      (get_local $0)
      (i32.const 0)
      (get_local $5)
     )
    )
    (br_if $folding-inner1
     (call $_silk_Get_Encoder_Size
      (get_local $6)
     )
    )
    (set_local $5
     (call $_align
      (i32.load
       (get_local $6)
      )
     )
    )
    (i32.store
     (get_local $6)
     (get_local $5)
    )
    (set_local $7
     (call $_align
      (i32.const 18136)
     )
    )
    (i32.store offset=4
     (get_local $0)
     (get_local $7)
    )
    (i32.store
     (get_local $0)
     (tee_local $5
      (i32.add
       (get_local $7)
       (get_local $5)
      )
     )
    )
    (set_local $8
     (i32.add
      (get_local $0)
      (get_local $5)
     )
    )
    (i32.store offset=112
     (get_local $0)
     (get_local $2)
    )
    (i32.store
     (i32.add
      (get_local $0)
      (i32.const 14188)
     )
     (get_local $2)
    )
    (i32.store
     (tee_local $9
      (i32.add
       (get_local $0)
       (i32.const 144)
      )
     )
     (get_local $1)
    )
    (i32.store
     (tee_local $6
      (i32.add
       (get_local $0)
       (i32.const 180)
      )
     )
     (i32.const 0)
    )
    (if
     (call $_silk_InitEncoder
      (i32.add
       (get_local $0)
       (get_local $7)
      )
      (i32.const 0)
      (i32.add
       (get_local $0)
       (i32.const 8)
      )
     )
     (block
      (set_global $STACKTOP
       (get_local $4)
      )
      (return
       (i32.const -3)
      )
     )
    )
    (i32.store offset=8
     (get_local $0)
     (get_local $2)
    )
    (i32.store offset=12
     (get_local $0)
     (get_local $2)
    )
    (i32.store offset=16
     (get_local $0)
     (i32.load
      (get_local $9)
     )
    )
    (i32.store offset=20
     (get_local $0)
     (i32.const 16000)
    )
    (i32.store offset=24
     (get_local $0)
     (i32.const 8000)
    )
    (i32.store offset=28
     (get_local $0)
     (i32.const 16000)
    )
    (i32.store offset=32
     (get_local $0)
     (i32.const 20)
    )
    (i32.store offset=36
     (get_local $0)
     (i32.const 25000)
    )
    (i32.store offset=40
     (get_local $0)
     (i32.const 0)
    )
    (i32.store
     (tee_local $5
      (i32.add
       (get_local $0)
       (i32.const 44)
      )
     )
     (i32.const 9)
    )
    (i32.store offset=48
     (get_local $0)
     (i32.const 0)
    )
    (i32.store offset=56
     (get_local $0)
     (i32.const 0)
    )
    (i32.store offset=60
     (get_local $0)
     (i32.const 0)
    )
    (i32.store offset=76
     (get_local $0)
     (i32.const 0)
    )
    (if
     (call $_celt_encoder_init
      (get_local $8)
      (get_local $1)
      (get_local $2)
      (i32.load
       (get_local $6)
      )
     )
     (block
      (set_global $STACKTOP
       (get_local $4)
      )
      (return
       (i32.const -3)
      )
     )
    )
    (i32.store
     (get_local $4)
     (i32.const 0)
    )
    (drop
     (call $_opus_custom_encoder_ctl
      (get_local $8)
      (i32.const 10016)
      (get_local $4)
     )
    )
    (i32.store
     (get_local $10)
     (i32.load
      (get_local $5)
     )
    )
    (drop
     (call $_opus_custom_encoder_ctl
      (get_local $8)
      (i32.const 4010)
      (get_local $10)
     )
    )
    (i32.store offset=148
     (get_local $0)
     (i32.const 1)
    )
    (i32.store offset=152
     (get_local $0)
     (i32.const 1)
    )
    (i32.store offset=164
     (get_local $0)
     (i32.const -1000)
    )
    (i32.store offset=160
     (get_local $0)
     (i32.add
      (i32.mul
       (get_local $1)
       (get_local $2)
      )
      (i32.const 3000)
     )
    )
    (i32.store
     (tee_local $2
      (i32.add
       (get_local $0)
       (i32.const 108)
      )
     )
     (get_local $3)
    )
    (i32.store offset=124
     (get_local $0)
     (i32.const -1000)
    )
    (i32.store offset=128
     (get_local $0)
     (i32.const -1000)
    )
    (i32.store offset=132
     (get_local $0)
     (i32.const 1105)
    )
    (i32.store offset=120
     (get_local $0)
     (i32.const -1000)
    )
    (i32.store offset=136
     (get_local $0)
     (i32.const -1000)
    )
    (i32.store offset=140
     (get_local $0)
     (i32.const -1)
    )
    (i32.store offset=172
     (get_local $0)
     (i32.div_s
      (tee_local $1
       (i32.load
        (get_local $9)
       )
      )
      (i32.const 100)
     )
    )
    (i32.store offset=168
     (get_local $0)
     (i32.const 24)
    )
    (i32.store offset=156
     (get_local $0)
     (i32.const 5000)
    )
    (i32.store offset=116
     (get_local $0)
     (i32.div_s
      (get_local $1)
      (i32.const 250)
     )
    )
    (i32.store16
     (i32.add
      (get_local $0)
      (i32.const 14192)
     )
     (i32.const 16384)
    )
    (f32.store
     (i32.add
      (get_local $0)
      (i32.const 14200)
     )
     (f32.const 1)
    )
    (set_local $1
     (i32.shl
      (call $_silk_lin2log
       (i32.const 60)
      )
      (i32.const 8)
     )
    )
    (i32.store
     (i32.add
      (get_local $0)
      (i32.const 14196)
     )
     (get_local $1)
    )
    (i32.store
     (i32.add
      (get_local $0)
      (i32.const 14248)
     )
     (i32.const 1)
    )
    (i32.store
     (i32.add
      (get_local $0)
      (i32.const 14220)
     )
     (i32.const 1001)
    )
    (i32.store
     (i32.add
      (get_local $0)
      (i32.const 14236)
     )
     (i32.const 1105)
    )
    (call $_tonality_analysis_init
     (i32.add
      (get_local $0)
      (i32.const 188)
     )
     (i32.load
      (get_local $9)
     )
    )
    (i32.store offset=192
     (get_local $0)
     (i32.load
      (get_local $2)
     )
    )
    (set_global $STACKTOP
     (get_local $4)
    )
    (return
     (i32.const 0)
    )
   )
  )
  (set_global $STACKTOP
   (get_local $4)
  )
  (i32.const -1)
 )
 (func $_opus_encoder_create (; 377 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (block $label$break$L13
   (block $__rjti$0
    (if
     (i32.lt_s
      (get_local $0)
      (i32.const 16000)
     )
     (if
      (i32.lt_s
       (get_local $0)
       (i32.const 12000)
      )
      (br_if $__rjti$0
       (i32.eqz
        (i32.sub
         (get_local $0)
         (i32.const 8000)
        )
       )
      )
      (br_if $__rjti$0
       (i32.eqz
        (i32.sub
         (get_local $0)
         (i32.const 12000)
        )
       )
      )
     )
     (block
      (if
       (i32.lt_s
        (get_local $0)
        (i32.const 24000)
       )
       (block
        (br_if $label$break$L13
         (i32.sub
          (get_local $0)
          (i32.const 16000)
         )
        )
        (br $__rjti$0)
       )
      )
      (if
       (i32.lt_s
        (get_local $0)
        (i32.const 48000)
       )
       (br_if $__rjti$0
        (i32.eqz
         (i32.sub
          (get_local $0)
          (i32.const 24000)
         )
        )
       )
       (br_if $__rjti$0
        (i32.eqz
         (i32.sub
          (get_local $0)
          (i32.const 48000)
         )
        )
       )
      )
     )
    )
    (br $label$break$L13)
   )
   (if
    (i32.lt_u
     (i32.add
      (get_local $1)
      (i32.const -1)
     )
     (i32.const 2)
    )
    (block
     (block $switch13
      (block $switch-default17
       (block $switch-case14
        (br_table $switch-case14 $switch-case14 $switch-default17 $switch-case14 $switch-default17
         (i32.sub
          (get_local $2)
          (i32.const 2048)
         )
        )
       )
       (br $switch13)
      )
      (br $label$break$L13)
     )
     (if
      (i32.eqz
       (tee_local $4
        (call $_opus_alloc
         (call $_opus_encoder_get_size
          (get_local $1)
         )
        )
       )
      )
      (block
       (if
        (i32.eqz
         (get_local $3)
        )
        (return
         (i32.const 0)
        )
       )
       (i32.store
        (get_local $3)
        (i32.const -7)
       )
       (return
        (i32.const 0)
       )
      )
     )
     (set_local $0
      (call $_opus_encoder_init
       (get_local $4)
       (get_local $0)
       (get_local $1)
       (get_local $2)
      )
     )
     (if
      (get_local $3)
      (i32.store
       (get_local $3)
       (get_local $0)
      )
     )
     (if
      (i32.eqz
       (get_local $0)
      )
      (return
       (get_local $4)
      )
     )
     (call $_opus_free
      (get_local $4)
     )
     (return
      (i32.const 0)
     )
    )
   )
  )
  (if
   (i32.eqz
    (get_local $3)
   )
   (return
    (i32.const 0)
   )
  )
  (i32.store
   (get_local $3)
   (i32.const -1)
  )
  (i32.const 0)
 )
 (func $_downmix_float (; 378 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32)
  (local $7 i32)
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $7)
     (get_local $2)
    )
    (block
     (f32.store
      (i32.add
       (get_local $1)
       (i32.shl
        (get_local $7)
        (i32.const 2)
       )
      )
      (f32.mul
       (f32.load
        (i32.add
         (get_local $0)
         (i32.shl
          (i32.add
           (i32.mul
            (i32.add
             (get_local $7)
             (get_local $3)
            )
            (get_local $6)
           )
           (get_local $4)
          )
          (i32.const 2)
         )
        )
       )
       (f32.const 32768)
      )
     )
     (set_local $7
      (i32.add
       (get_local $7)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (if
   (i32.gt_s
    (get_local $5)
    (i32.const -1)
   )
   (block
    (set_local $4
     (i32.const 0)
    )
    (loop $while-in1
     (if
      (i32.lt_s
       (get_local $4)
       (get_local $2)
      )
      (block
       (f32.store
        (tee_local $7
         (i32.add
          (get_local $1)
          (i32.shl
           (get_local $4)
           (i32.const 2)
          )
         )
        )
        (f32.add
         (f32.load
          (get_local $7)
         )
         (f32.mul
          (f32.load
           (i32.add
            (get_local $0)
            (i32.shl
             (i32.add
              (i32.mul
               (i32.add
                (get_local $4)
                (get_local $3)
               )
               (get_local $6)
              )
              (get_local $5)
             )
             (i32.const 2)
            )
           )
          )
          (f32.const 32768)
         )
        )
       )
       (set_local $4
        (i32.add
         (get_local $4)
         (i32.const 1)
        )
       )
       (br $while-in1)
      )
     )
    )
    (return)
   )
  )
  (if
   (i32.ne
    (get_local $5)
    (i32.const -2)
   )
   (return)
  )
  (set_local $5
   (i32.const 1)
  )
  (loop $while-in3
   (if
    (i32.lt_s
     (get_local $5)
     (get_local $6)
    )
    (block
     (set_local $4
      (i32.const 0)
     )
     (loop $while-in5
      (if
       (i32.lt_s
        (get_local $4)
        (get_local $2)
       )
       (block
        (f32.store
         (tee_local $7
          (i32.add
           (get_local $1)
           (i32.shl
            (get_local $4)
            (i32.const 2)
           )
          )
         )
         (f32.add
          (f32.load
           (get_local $7)
          )
          (f32.mul
           (f32.load
            (i32.add
             (get_local $0)
             (i32.shl
              (i32.add
               (i32.mul
                (i32.add
                 (get_local $4)
                 (get_local $3)
                )
                (get_local $6)
               )
               (get_local $5)
              )
              (i32.const 2)
             )
            )
           )
           (f32.const 32768)
          )
         )
        )
        (set_local $4
         (i32.add
          (get_local $4)
          (i32.const 1)
         )
        )
        (br $while-in5)
       )
      )
     )
     (set_local $5
      (i32.add
       (get_local $5)
       (i32.const 1)
      )
     )
     (br $while-in3)
    )
   )
  )
 )
 (func $_frame_size_select (; 379 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (if
   (i32.gt_s
    (tee_local $3
     (i32.div_s
      (get_local $2)
      (i32.const 400)
     )
    )
    (get_local $0)
   )
   (return
    (i32.const -1)
   )
  )
  (if
   (i32.ne
    (get_local $1)
    (i32.const 5000)
   )
   (block
    (if
     (i32.ge_u
      (i32.add
       (get_local $1)
       (i32.const -5001)
      )
      (i32.const 9)
     )
     (return
      (i32.const -1)
     )
    )
    (set_local $0
     (if (result i32)
      (i32.gt_s
       (tee_local $1
        (if (result i32)
         (i32.lt_s
          (get_local $1)
          (i32.const 5006)
         )
         (i32.shl
          (get_local $3)
          (i32.add
           (get_local $1)
           (i32.const -5001)
          )
         )
         (i32.div_s
          (i32.mul
           (i32.add
            (get_local $1)
            (i32.const -5003)
           )
           (get_local $2)
          )
          (i32.const 50)
         )
        )
       )
       (get_local $0)
      )
      (return
       (i32.const -1)
      )
      (get_local $1)
     )
    )
   )
  )
  (if
   (i32.eqz
    (i32.or
     (i32.or
      (i32.eq
       (i32.mul
        (get_local $0)
        (i32.const 400)
       )
       (get_local $2)
      )
      (i32.eq
       (i32.mul
        (get_local $0)
        (i32.const 200)
       )
       (get_local $2)
      )
     )
     (i32.eq
      (i32.mul
       (get_local $0)
       (i32.const 100)
      )
      (get_local $2)
     )
    )
   )
   (if
    (i32.eqz
     (i32.or
      (i32.or
       (i32.or
        (i32.or
         (i32.or
          (i32.eq
           (tee_local $1
            (i32.mul
             (get_local $0)
             (i32.const 50)
            )
           )
           (get_local $2)
          )
          (i32.eq
           (i32.mul
            (get_local $0)
            (i32.const 25)
           )
           (get_local $2)
          )
         )
         (i32.eq
          (get_local $1)
          (i32.mul
           (get_local $2)
           (i32.const 3)
          )
         )
        )
        (i32.eq
         (get_local $1)
         (i32.shl
          (get_local $2)
          (i32.const 2)
         )
        )
       )
       (i32.eq
        (get_local $1)
        (i32.mul
         (get_local $2)
         (i32.const 5)
        )
       )
      )
      (i32.eq
       (get_local $1)
       (i32.mul
        (get_local $2)
        (i32.const 6)
       )
      )
     )
    )
    (return
     (i32.const -1)
    )
   )
  )
  (get_local $0)
 )
 (func $_compute_stereo_width (; 380 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result f32)
  (local $4 f32)
  (local $5 f32)
  (local $6 f32)
  (local $7 f32)
  (local $8 f32)
  (local $9 f32)
  (local $10 f32)
  (local $11 i32)
  (local $12 f32)
  (local $13 f32)
  (local $14 i32)
  (set_local $13
   (f32.div
    (f32.const 25)
    (f32.convert_s/i32
     (if (result i32)
      (i32.gt_s
       (tee_local $11
        (i32.div_s
         (get_local $2)
         (get_local $1)
        )
       )
       (i32.const 50)
      )
      (get_local $11)
      (i32.const 50)
     )
    )
   )
  )
  (set_local $14
   (i32.add
    (get_local $1)
    (i32.const -3)
   )
  )
  (set_local $2
   (i32.const 0)
  )
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $2)
     (get_local $14)
    )
    (block
     (set_local $6
      (f32.load
       (i32.add
        (get_local $0)
        (i32.shl
         (tee_local $1
          (i32.shl
           (get_local $2)
           (i32.const 1)
          )
         )
         (i32.const 2)
        )
       )
      )
     )
     (set_local $2
      (i32.add
       (get_local $2)
       (i32.const 4)
      )
     )
     (set_local $5
      (f32.add
       (get_local $5)
       (f32.add
        (f32.add
         (f32.add
          (f32.mul
           (tee_local $7
            (f32.load
             (i32.add
              (get_local $0)
              (i32.shl
               (i32.or
                (get_local $1)
                (i32.const 1)
               )
               (i32.const 2)
              )
             )
            )
           )
           (get_local $7)
          )
          (f32.mul
           (tee_local $9
            (f32.load
             (i32.add
              (get_local $0)
              (i32.shl
               (i32.or
                (get_local $1)
                (i32.const 3)
               )
               (i32.const 2)
              )
             )
            )
           )
           (get_local $9)
          )
         )
         (f32.mul
          (tee_local $10
           (f32.load
            (i32.add
             (get_local $0)
             (i32.shl
              (i32.or
               (get_local $1)
               (i32.const 5)
              )
              (i32.const 2)
             )
            )
           )
          )
          (get_local $10)
         )
        )
        (f32.mul
         (tee_local $12
          (f32.load
           (i32.add
            (get_local $0)
            (i32.shl
             (i32.or
              (get_local $1)
              (i32.const 7)
             )
             (i32.const 2)
            )
           )
          )
         )
         (get_local $12)
        )
       )
      )
     )
     (set_local $8
      (f32.add
       (get_local $8)
       (f32.add
        (f32.add
         (f32.add
          (f32.mul
           (get_local $6)
           (get_local $7)
          )
          (f32.mul
           (tee_local $7
            (f32.load
             (i32.add
              (get_local $0)
              (i32.shl
               (i32.or
                (get_local $1)
                (i32.const 2)
               )
               (i32.const 2)
              )
             )
            )
           )
           (get_local $9)
          )
         )
         (f32.mul
          (tee_local $9
           (f32.load
            (i32.add
             (get_local $0)
             (i32.shl
              (i32.or
               (get_local $1)
               (i32.const 4)
              )
              (i32.const 2)
             )
            )
           )
          )
          (get_local $10)
         )
        )
        (f32.mul
         (tee_local $10
          (f32.load
           (i32.add
            (get_local $0)
            (i32.shl
             (i32.or
              (get_local $1)
              (i32.const 6)
             )
             (i32.const 2)
            )
           )
          )
         )
         (get_local $12)
        )
       )
      )
     )
     (set_local $4
      (f32.add
       (get_local $4)
       (f32.add
        (f32.add
         (f32.add
          (f32.mul
           (get_local $6)
           (get_local $6)
          )
          (f32.mul
           (get_local $7)
           (get_local $7)
          )
         )
         (f32.mul
          (get_local $9)
          (get_local $9)
         )
        )
        (f32.mul
         (get_local $10)
         (get_local $10)
        )
       )
      )
     )
     (br $while-in)
    )
   )
  )
  (f32.store
   (get_local $3)
   (tee_local $6
    (f32.add
     (tee_local $6
      (f32.load
       (get_local $3)
      )
     )
     (f32.mul
      (tee_local $7
       (f32.sub
        (f32.const 1)
        (get_local $13)
       )
      )
      (f32.sub
       (if (result f32)
        (tee_local $1
         (i32.or
          (f32.ne
           (get_local $5)
           (get_local $5)
          )
          (i32.xor
           (i32.and
            (i32.and
             (f32.eq
              (get_local $4)
              (get_local $4)
             )
             (f32.lt
              (get_local $4)
              (f32.const 1e9)
             )
            )
            (f32.lt
             (get_local $5)
             (f32.const 1e9)
            )
           )
           (i32.const 1)
          )
         )
        )
        (f32.const 0)
        (get_local $4)
       )
       (get_local $6)
      )
     )
    )
   )
  )
  (set_local $4
   (f32.add
    (tee_local $4
     (f32.load
      (tee_local $0
       (i32.add
        (get_local $3)
        (i32.const 4)
       )
      )
     )
    )
    (f32.mul
     (get_local $7)
     (f32.sub
      (if (result f32)
       (get_local $1)
       (f32.const 0)
       (get_local $8)
      )
      (get_local $4)
     )
    )
   )
  )
  (f32.store
   (get_local $0)
   (get_local $4)
  )
  (set_local $5
   (f32.add
    (tee_local $8
     (f32.load
      (tee_local $2
       (i32.add
        (get_local $3)
        (i32.const 8)
       )
      )
     )
    )
    (f32.mul
     (get_local $7)
     (f32.sub
      (if (result f32)
       (get_local $1)
       (f32.const 0)
       (get_local $5)
      )
      (get_local $8)
     )
    )
   )
  )
  (f32.store
   (get_local $2)
   (get_local $5)
  )
  (f32.store
   (get_local $3)
   (if (result f32)
    (f32.lt
     (get_local $6)
     (f32.const 0)
    )
    (tee_local $6
     (f32.const 0)
    )
    (get_local $6)
   )
  )
  (f32.store
   (get_local $0)
   (if (result f32)
    (f32.lt
     (get_local $4)
     (f32.const 0)
    )
    (tee_local $4
     (f32.const 0)
    )
    (get_local $4)
   )
  )
  (f32.store
   (get_local $2)
   (if (result f32)
    (f32.lt
     (get_local $5)
     (f32.const 0)
    )
    (tee_local $5
     (f32.const 0)
    )
    (get_local $5)
   )
  )
  (if (result f32)
   (f32.gt
    (if (result f32)
     (f32.gt
      (get_local $6)
      (get_local $5)
     )
     (get_local $6)
     (get_local $5)
    )
    (f32.const 7.999999797903001e-04)
   )
   (block (result f32)
    (set_local $6
     (f32.sqrt
      (tee_local $8
       (f32.sqrt
        (get_local $6)
       )
      )
     )
    )
    (set_local $5
     (f32.sqrt
      (tee_local $7
       (f32.sqrt
        (get_local $5)
       )
      )
     )
    )
    (f32.store
     (get_local $0)
     (if (result f32)
      (f32.lt
       (get_local $4)
       (tee_local $8
        (f32.mul
         (get_local $8)
         (get_local $7)
        )
       )
      )
      (get_local $4)
      (tee_local $4
       (get_local $8)
      )
     )
    )
    (set_local $5
     (f32.add
      (tee_local $7
       (f32.load
        (tee_local $0
         (i32.add
          (get_local $3)
          (i32.const 12)
         )
        )
       )
      )
      (f32.div
       (f32.sub
        (f32.mul
         (f32.sqrt
          (f32.sub
           (f32.const 1)
           (f32.mul
            (tee_local $4
             (f32.div
              (get_local $4)
              (f32.add
               (get_local $8)
               (f32.const 1.0000000036274937e-15)
              )
             )
            )
            (get_local $4)
           )
          )
         )
         (f32.div
          (f32.abs
           (f32.sub
            (get_local $6)
            (get_local $5)
           )
          )
          (f32.add
           (f32.add
            (get_local $6)
            (f32.const 1.0000000036274937e-15)
           )
           (get_local $5)
          )
         )
        )
        (get_local $7)
       )
       (tee_local $4
        (f32.convert_s/i32
         (get_local $11)
        )
       )
      )
     )
    )
    (f32.store
     (get_local $0)
     (get_local $5)
    )
    (if
     (i32.eqz
      (f32.gt
       (tee_local $4
        (f32.sub
         (f32.load
          (tee_local $0
           (i32.add
            (get_local $3)
            (i32.const 16)
           )
          )
         )
         (f32.div
          (f32.const 0.019999999552965164)
          (get_local $4)
         )
        )
       )
       (get_local $5)
      )
     )
     (set_local $4
      (get_local $5)
     )
    )
    (f32.store
     (get_local $0)
     (get_local $4)
    )
    (if (result f32)
     (f32.gt
      (tee_local $4
       (f32.mul
        (get_local $4)
        (f32.const 20)
       )
      )
      (f32.const 1)
     )
     (f32.const 1)
     (get_local $4)
    )
   )
   (if (result f32)
    (f32.gt
     (tee_local $4
      (f32.mul
       (f32.load offset=16
        (get_local $3)
       )
       (f32.const 20)
      )
     )
     (f32.const 1)
    )
    (f32.const 1)
    (get_local $4)
   )
  )
 )
 (func $_opus_encode_native (; 381 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (param $8 i32) (param $9 i32) (param $10 i32) (param $11 i32) (result i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 f32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local $26 i32)
  (local $27 i32)
  (local $28 i32)
  (local $29 i32)
  (local $30 i32)
  (local $31 f32)
  (local $32 i32)
  (local $33 i32)
  (local $34 i32)
  (local $35 i32)
  (local $36 i32)
  (local $37 i32)
  (local $38 i32)
  (local $39 i32)
  (local $40 i32)
  (local $41 i32)
  (local $42 i32)
  (local $43 i32)
  (local $44 i32)
  (local $45 i32)
  (local $46 i32)
  (local $47 i32)
  (local $48 i32)
  (local $49 i32)
  (local $50 i32)
  (local $51 i32)
  (local $52 i32)
  (local $53 i32)
  (local $54 i32)
  (local $55 f32)
  (local $56 i32)
  (local $57 i32)
  (local $58 i32)
  (local $59 i32)
  (local $60 i32)
  (local $61 i32)
  (local $62 i32)
  (local $63 i32)
  (local $64 i32)
  (local $65 i32)
  (local $66 i32)
  (local $67 i32)
  (local $68 i32)
  (local $69 i32)
  (local $70 i32)
  (local $71 i32)
  (local $72 i32)
  (local $73 i32)
  (local $74 i32)
  (local $75 i32)
  (local $76 i32)
  (local $77 i32)
  (local $78 i32)
  (local $79 i32)
  (local $80 i32)
  (local $81 i32)
  (local $82 i32)
  (local $83 i32)
  (local $84 i32)
  (local $85 i32)
  (local $86 i32)
  (local $87 i32)
  (local $88 i32)
  (local $89 i32)
  (local $90 i32)
  (local $91 i32)
  (set_local $12
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.const 512)
   )
  )
  (i32.store
   (tee_local $51
    (i32.add
     (get_local $12)
     (i32.const 452)
    )
   )
   (i32.const 0)
  )
  (i32.store
   (tee_local $47
    (i32.add
     (get_local $0)
     (i32.const 18132)
    )
   )
   (i32.const 0)
  )
  (if
   (i32.or
    (i32.lt_s
     (get_local $2)
     (i32.const 1)
    )
    (i32.lt_s
     (tee_local $14
      (if (result i32)
       (i32.lt_s
        (get_local $4)
        (i32.const 1276)
       )
       (get_local $4)
       (i32.const 1276)
      )
     )
     (i32.const 1)
    )
   )
   (block
    (set_global $STACKTOP
     (get_local $12)
    )
    (return
     (i32.const -1)
    )
   )
  )
  (if
   (i32.eq
    (get_local $14)
    (i32.const 1)
   )
   (if
    (i32.eq
     (i32.load offset=144
      (get_local $0)
     )
     (i32.mul
      (get_local $2)
      (i32.const 10)
     )
    )
    (block
     (set_global $STACKTOP
      (get_local $12)
     )
     (return
      (i32.const -2)
     )
    )
   )
  )
  (set_local $23
   (i32.load offset=4
    (get_local $0)
   )
  )
  (set_local $13
   (i32.load
    (get_local $0)
   )
  )
  (set_local $36
   (if (result i32)
    (i32.eq
     (i32.load
      (tee_local $35
       (i32.add
        (get_local $0)
        (i32.const 108)
       )
      )
     )
     (i32.const 2051)
    )
    (i32.const 0)
    (i32.load offset=116
     (get_local $0)
    )
   )
  )
  (set_local $56
   (i32.add
    (get_local $12)
    (i32.const 264)
   )
  )
  (set_local $57
   (i32.add
    (get_local $12)
    (i32.const 256)
   )
  )
  (set_local $58
   (i32.add
    (get_local $12)
    (i32.const 248)
   )
  )
  (set_local $59
   (i32.add
    (get_local $12)
    (i32.const 240)
   )
  )
  (set_local $60
   (i32.add
    (get_local $12)
    (i32.const 232)
   )
  )
  (set_local $83
   (i32.add
    (get_local $12)
    (i32.const 224)
   )
  )
  (set_local $61
   (i32.add
    (get_local $12)
    (i32.const 216)
   )
  )
  (set_local $62
   (i32.add
    (get_local $12)
    (i32.const 208)
   )
  )
  (set_local $63
   (i32.add
    (get_local $12)
    (i32.const 200)
   )
  )
  (set_local $84
   (i32.add
    (get_local $12)
    (i32.const 192)
   )
  )
  (set_local $64
   (i32.add
    (get_local $12)
    (i32.const 184)
   )
  )
  (set_local $85
   (i32.add
    (get_local $12)
    (i32.const 176)
   )
  )
  (set_local $65
   (i32.add
    (get_local $12)
    (i32.const 168)
   )
  )
  (set_local $66
   (i32.add
    (get_local $12)
    (i32.const 160)
   )
  )
  (set_local $67
   (i32.add
    (get_local $12)
    (i32.const 152)
   )
  )
  (set_local $68
   (i32.add
    (get_local $12)
    (i32.const 144)
   )
  )
  (set_local $69
   (i32.add
    (get_local $12)
    (i32.const 136)
   )
  )
  (set_local $70
   (i32.add
    (get_local $12)
    (i32.const 128)
   )
  )
  (set_local $71
   (i32.add
    (get_local $12)
    (i32.const 120)
   )
  )
  (set_local $72
   (i32.add
    (get_local $12)
    (i32.const 112)
   )
  )
  (set_local $73
   (i32.add
    (get_local $12)
    (i32.const 104)
   )
  )
  (set_local $74
   (i32.add
    (get_local $12)
    (i32.const 96)
   )
  )
  (set_local $75
   (i32.add
    (get_local $12)
    (i32.const 88)
   )
  )
  (set_local $76
   (i32.add
    (get_local $12)
    (i32.const 80)
   )
  )
  (set_local $77
   (i32.add
    (get_local $12)
    (i32.const 72)
   )
  )
  (set_local $78
   (i32.sub
    (get_local $12)
    (i32.const -64)
   )
  )
  (set_local $79
   (i32.add
    (get_local $12)
    (i32.const 56)
   )
  )
  (set_local $80
   (i32.add
    (get_local $12)
    (i32.const 48)
   )
  )
  (set_local $44
   (i32.add
    (get_local $12)
    (i32.const 40)
   )
  )
  (set_local $27
   (i32.add
    (get_local $12)
    (i32.const 32)
   )
  )
  (set_local $81
   (i32.add
    (get_local $12)
    (i32.const 504)
   )
  )
  (set_local $25
   (i32.add
    (get_local $12)
    (i32.const 456)
   )
  )
  (set_local $45
   (i32.add
    (get_local $12)
    (i32.const 448)
   )
  )
  (set_local $29
   (i32.add
    (get_local $12)
    (i32.const 384)
   )
  )
  (set_local $32
   (i32.add
    (get_local $12)
    (i32.const 284)
   )
  )
  (set_local $82
   (i32.add
    (tee_local $30
     (get_local $12)
    )
    (i32.const 280)
   )
  )
  (set_local $52
   (i32.add
    (get_local $12)
    (i32.const 272)
   )
  )
  (set_local $86
   (i32.add
    (get_local $12)
    (i32.const 510)
   )
  )
  (set_local $87
   (i32.add
    (get_local $12)
    (i32.const 508)
   )
  )
  (set_local $48
   (i32.add
    (get_local $0)
    (get_local $23)
   )
  )
  (set_local $17
   (i32.add
    (get_local $0)
    (get_local $13)
   )
  )
  (set_local $33
   (if (result i32)
    (i32.gt_s
     (tee_local $12
      (i32.load offset=168
       (get_local $0)
      )
     )
     (get_local $5)
    )
    (get_local $5)
    (get_local $12)
   )
  )
  (i32.store
   (get_local $27)
   (get_local $45)
  )
  (drop
   (call $_opus_custom_encoder_ctl
    (get_local $17)
    (i32.const 10015)
    (get_local $27)
   )
  )
  (i32.store
   (get_local $29)
   (i32.const 0)
  )
  (block $do-once
   (if
    (i32.gt_s
     (i32.load
      (tee_local $23
       (i32.add
        (get_local $0)
        (i32.const 44)
       )
      )
     )
     (i32.const 6)
    )
    (block
     (set_local $6
      (if (result i32)
       (i32.gt_s
        (tee_local $27
         (i32.load offset=144
          (get_local $0)
         )
        )
        (i32.const 15999)
       )
       (block (result i32)
        (if
         (call $_is_digital_silence
          (get_local $1)
          (get_local $2)
          (i32.load
           (tee_local $13
            (i32.add
             (get_local $0)
             (i32.const 112)
            )
           )
          )
          (get_local $33)
         )
         (block
          (i32.store
           (tee_local $5
            (i32.add
             (get_local $0)
             (i32.const 18116)
            )
           )
           (i32.const 0)
          )
          (set_local $8
           (i32.const -1)
          )
          (set_local $9
           (i32.const -1)
          )
          (set_local $27
           (i32.const 1)
          )
          (br $do-once)
         )
        )
        (set_local $5
         (i32.load
          (i32.add
           (get_local $0)
           (i32.const 7636)
          )
         )
        )
        (set_local $12
         (i32.load
          (i32.add
           (get_local $0)
           (i32.const 7640)
          )
         )
        )
        (call $_run_analysis
         (i32.add
          (get_local $0)
          (i32.const 188)
         )
         (i32.load
          (get_local $45)
         )
         (get_local $6)
         (get_local $7)
         (get_local $2)
         (get_local $8)
         (get_local $9)
         (get_local $27)
         (get_local $33)
         (get_local $10)
         (get_local $29)
        )
        (if
         (f32.gt
          (f32.load offset=36
           (get_local $29)
          )
          (f32.const 0.10000000149011612)
         )
         (block
          (set_local $20
           (f32.mul
            (f32.load
             (tee_local $6
              (i32.add
               (get_local $0)
               (i32.const 18124)
              )
             )
            )
            (f32.const 0.9990000128746033)
           )
          )
          (set_local $31
           (call $_compute_frame_energy
            (get_local $1)
            (get_local $2)
            (i32.load
             (get_local $13)
            )
           )
          )
          (f32.store
           (get_local $6)
           (if (result f32)
            (f32.gt
             (get_local $20)
             (get_local $31)
            )
            (get_local $20)
            (get_local $31)
           )
          )
         )
        )
        (get_local $12)
       )
       (block (result i32)
        (set_local $5
         (i32.const -1)
        )
        (i32.const -1)
       )
      )
     )
     (set_local $8
      (i32.load
       (get_local $29)
      )
     )
     (i32.store offset=140
      (get_local $0)
      (i32.const -1)
     )
     (i32.store
      (tee_local $7
       (i32.add
        (get_local $0)
        (i32.const 18116)
       )
      )
      (i32.const 0)
     )
     (set_local $5
      (if (result i32)
       (get_local $8)
       (block (result i32)
        (if
         (i32.eq
          (i32.load offset=124
           (get_local $0)
          )
          (i32.const -1000)
         )
         (i32.store offset=140
          (get_local $0)
          (i32.trunc_s/f64
           (f64.floor
            (f64.add
             (f64.promote/f32
              (f32.mul
               (f32.sub
                (f32.const 1)
                (tee_local $20
                 (block $switch (result f32)
                  (block $switch-default
                   (block $switch-case0
                    (if
                     (tee_local $8
                      (i32.load
                       (i32.add
                        (get_local $0)
                        (i32.const 14224)
                       )
                      )
                     )
                     (if
                      (i32.eq
                       (get_local $8)
                       (i32.const 1002)
                      )
                      (br $switch-case0)
                      (br $switch-default)
                     )
                    )
                    (br $switch
                     (f32.load offset=20
                      (get_local $29)
                     )
                    )
                   )
                   (br $switch
                    (f32.load offset=28
                     (get_local $29)
                    )
                   )
                  )
                  (f32.load offset=24
                   (get_local $29)
                  )
                 )
                )
               )
               (f32.const 100)
              )
             )
             (f64.const 0.5)
            )
           )
          )
         )
        )
        (if
         (i32.lt_s
          (tee_local $8
           (i32.load offset=32
            (get_local $29)
           )
          )
          (i32.const 13)
         )
         (block
          (i32.store
           (get_local $7)
           (i32.const 1101)
          )
          (set_local $8
           (get_local $5)
          )
          (set_local $9
           (get_local $6)
          )
          (set_local $27
           (i32.const 0)
          )
          (set_local $5
           (get_local $7)
          )
          (br $do-once)
         )
        )
        (if
         (i32.lt_s
          (get_local $8)
          (i32.const 15)
         )
         (block
          (i32.store
           (get_local $7)
           (i32.const 1102)
          )
          (set_local $8
           (get_local $5)
          )
          (set_local $9
           (get_local $6)
          )
          (set_local $27
           (i32.const 0)
          )
          (set_local $5
           (get_local $7)
          )
          (br $do-once)
         )
        )
        (if
         (i32.lt_s
          (get_local $8)
          (i32.const 17)
         )
         (block
          (i32.store
           (get_local $7)
           (i32.const 1103)
          )
          (set_local $8
           (get_local $5)
          )
          (set_local $9
           (get_local $6)
          )
          (set_local $27
           (i32.const 0)
          )
          (set_local $5
           (get_local $7)
          )
          (br $do-once)
         )
        )
        (if
         (i32.lt_s
          (get_local $8)
          (i32.const 19)
         )
         (i32.store
          (get_local $7)
          (i32.const 1104)
         )
         (i32.store
          (get_local $7)
          (i32.const 1105)
         )
        )
        (set_local $8
         (get_local $5)
        )
        (set_local $9
         (get_local $6)
        )
        (set_local $27
         (i32.const 0)
        )
        (get_local $7)
       )
       (block (result i32)
        (set_local $8
         (get_local $5)
        )
        (set_local $9
         (get_local $6)
        )
        (set_local $27
         (i32.const 0)
        )
        (get_local $7)
       )
      )
     )
    )
    (block
     (i32.store offset=140
      (get_local $0)
      (i32.const -1)
     )
     (i32.store
      (tee_local $5
       (i32.add
        (get_local $0)
        (i32.const 18116)
       )
      )
      (i32.const 0)
     )
     (set_local $8
      (i32.const -1)
     )
     (set_local $9
      (i32.const -1)
     )
     (set_local $27
      (i32.const 0)
     )
    )
   )
  )
  (set_local $20
   (if (result f32)
    (i32.eq
     (i32.load
      (tee_local $22
       (i32.add
        (get_local $0)
        (i32.const 112)
       )
      )
     )
     (i32.const 2)
    )
    (if (result f32)
     (i32.eq
      (i32.load offset=120
       (get_local $0)
      )
      (i32.const 1)
     )
     (f32.const 0)
     (call $_compute_stereo_width
      (get_local $1)
      (get_local $2)
      (i32.load offset=144
       (get_local $0)
      )
      (i32.add
       (get_local $0)
       (i32.const 14256)
      )
     )
    )
    (f32.const 0)
   )
  )
  (set_local $7
   (call $_user_bitrate_to_bitrate
    (get_local $0)
    (get_local $2)
    (get_local $14)
   )
  )
  (i32.store
   (tee_local $40
    (i32.add
     (get_local $0)
     (i32.const 160)
    )
   )
   (get_local $7)
  )
  (set_local $21
   (i32.div_s
    (tee_local $18
     (i32.load
      (tee_local $24
       (i32.add
        (get_local $0)
        (i32.const 144)
       )
      )
     )
    )
    (get_local $2)
   )
  )
  (set_local $7
   (block $do-once3 (result i32)
    (block $__rjti$18
     (br $do-once3
      (if (result i32)
       (tee_local $16
        (i32.load
         (tee_local $37
          (i32.add
           (get_local $0)
           (i32.const 148)
          )
         )
        )
       )
       (block
        (set_local $6
         (get_local $14)
        )
        (set_local $14
         (get_local $7)
        )
        (br $__rjti$18)
       )
       (if (result i32)
        (i32.lt_s
         (tee_local $6
          (i32.div_s
           (i32.add
            (i32.div_s
             (i32.mul
              (get_local $7)
              (i32.const 12)
             )
             (i32.const 8)
            )
            (i32.div_s
             (tee_local $7
              (i32.div_s
               (i32.mul
                (get_local $18)
                (i32.const 12)
               )
               (get_local $2)
              )
             )
             (i32.const 2)
            )
           )
           (get_local $7)
          )
         )
         (get_local $14)
        )
        (block (result i32)
         (i32.store
          (get_local $40)
          (tee_local $14
           (i32.div_s
            (i32.shl
             (i32.mul
              (get_local $6)
              (get_local $7)
             )
             (i32.const 3)
            )
            (i32.const 12)
           )
          )
         )
         (if (result i32)
          (i32.lt_s
           (get_local $6)
           (i32.const 1)
          )
          (i32.const 1)
          (br $__rjti$18)
         )
        )
        (block
         (i32.store
          (get_local $40)
          (tee_local $7
           (i32.div_s
            (i32.shl
             (i32.mul
              (get_local $14)
              (get_local $7)
             )
             (i32.const 3)
            )
            (i32.const 12)
           )
          )
         )
         (set_local $6
          (get_local $14)
         )
         (set_local $14
          (get_local $7)
         )
         (br $__rjti$18)
        )
       )
      )
     )
    )
    (if (result i32)
     (i32.or
      (i32.lt_s
       (get_local $6)
       (i32.const 3)
      )
      (i32.lt_s
       (get_local $14)
       (i32.mul
        (get_local $21)
        (i32.const 24)
       )
      )
     )
     (get_local $6)
     (block
      (if
       (i32.lt_s
        (get_local $21)
        (i32.const 50)
       )
       (drop
        (br_if $do-once3
         (get_local $6)
         (i32.or
          (i32.lt_s
           (tee_local $41
            (i32.mul
             (get_local $6)
             (get_local $21)
            )
           )
           (i32.const 300)
          )
          (i32.lt_s
           (get_local $14)
           (i32.const 2400)
          )
         )
        )
       )
       (set_local $41
        (i32.mul
         (get_local $21)
         (get_local $6)
        )
       )
      )
      (set_local $53
       (i32.shl
        (get_local $41)
        (i32.const 3)
       )
      )
      (set_local $12
       (call $_compute_equiv_rate
        (get_local $14)
        (tee_local $10
         (i32.load
          (get_local $22)
         )
        )
        (get_local $21)
        (get_local $16)
        (i32.const 0)
        (tee_local $19
         (i32.load
          (get_local $23)
         )
        )
        (tee_local $26
         (i32.load
          (tee_local $46
           (i32.add
            (get_local $0)
            (i32.const 40)
           )
          )
         )
        )
       )
      )
      (block $label$break$L59
       (block $switch-default9
        (block $switch-case8
         (block $switch-case7
          (br_table $switch-case7 $switch-case8 $switch-default9
           (i32.sub
            (i32.load offset=124
             (get_local $0)
            )
            (i32.const 3001)
           )
          )
         )
         (set_local $13
          (i32.const 127)
         )
         (br $label$break$L59)
        )
        (set_local $13
         (i32.const 0)
        )
        (br $label$break$L59)
       )
       (if
        (i32.gt_s
         (tee_local $7
          (i32.load offset=140
           (get_local $0)
          )
         )
         (i32.const -1)
        )
        (block
         (set_local $13
          (i32.shr_s
           (tee_local $7
            (i32.mul
             (get_local $7)
             (i32.const 327)
            )
           )
           (i32.const 8)
          )
         )
         (if
          (i32.eqz
           (i32.or
            (i32.ne
             (i32.load
              (get_local $35)
             )
             (i32.const 2049)
            )
            (i32.lt_s
             (get_local $7)
             (i32.const 29440)
            )
           )
          )
          (set_local $13
           (i32.const 115)
          )
         )
        )
        (set_local $13
         (if (result i32)
          (i32.eq
           (i32.load
            (get_local $35)
           )
           (i32.const 2048)
          )
          (i32.const 115)
          (i32.const 48)
         )
        )
       )
      )
      (if
       (i32.and
        (i32.ne
         (tee_local $7
          (i32.load
           (tee_local $34
            (i32.add
             (get_local $0)
             (i32.const 120)
            )
           )
          )
         )
         (i32.const -1000)
        )
        (i32.eq
         (get_local $10)
         (i32.const 2)
        )
       )
       (block
        (i32.store
         (tee_local $28
          (i32.add
           (get_local $0)
           (i32.const 14188)
          )
         )
         (get_local $7)
        )
        (set_local $10
         (get_local $7)
        )
       )
       (if
        (i32.eq
         (get_local $10)
         (i32.const 2)
        )
        (block
         (set_local $10
          (if (result i32)
           (i32.gt_s
            (get_local $12)
            (i32.add
             (i32.shr_u
              (i32.mul
               (i32.mul
                (get_local $13)
                (get_local $13)
               )
               (i32.const 2000)
              )
              (i32.const 14)
             )
             (if (result i32)
              (i32.eq
               (i32.load
                (tee_local $28
                 (i32.add
                  (get_local $0)
                  (i32.const 14188)
                 )
                )
               )
               (i32.const 2)
              )
              (i32.const 16000)
              (i32.const 18000)
             )
            )
           )
           (i32.const 2)
           (i32.const 1)
          )
         )
         (i32.store
          (get_local $28)
          (get_local $10)
         )
        )
        (i32.store
         (tee_local $28
          (i32.add
           (get_local $0)
           (i32.const 14188)
          )
         )
         (get_local $10)
        )
       )
      )
      (set_local $23
       (call $_compute_equiv_rate
        (get_local $14)
        (get_local $10)
        (get_local $21)
        (get_local $16)
        (i32.const 0)
        (get_local $19)
        (get_local $26)
       )
      )
      (block $do-once12
       (if
        (i32.eq
         (tee_local $12
          (i32.load
           (get_local $35)
          )
         )
         (i32.const 2051)
        )
        (block
         (i32.store
          (tee_local $12
           (i32.add
            (get_local $0)
            (i32.const 14220)
           )
          )
          (i32.const 1002)
         )
         (set_local $7
          (i32.const 1002)
         )
        )
        (block
         (if
          (i32.eq
           (tee_local $7
            (i32.load offset=136
             (get_local $0)
            )
           )
           (i32.const -1000)
          )
          (block
           (set_local $7
            (i32.trunc_s/f32
             (f32.add
              (f32.mul
               (tee_local $31
                (f32.sub
                 (f32.const 1)
                 (get_local $20)
                )
               )
               (f32.const 1e4)
              )
              (f32.mul
               (get_local $20)
               (f32.const 1e4)
              )
             )
            )
           )
           (set_local $7
            (i32.add
             (tee_local $15
              (i32.add
               (i32.shr_s
                (i32.mul
                 (i32.mul
                  (get_local $13)
                  (get_local $13)
                 )
                 (i32.sub
                  (i32.trunc_s/f32
                   (f32.add
                    (f32.mul
                     (get_local $31)
                     (f32.const 64e3)
                    )
                    (f32.mul
                     (get_local $20)
                     (f32.const 44e3)
                    )
                   )
                  )
                  (get_local $7)
                 )
                )
                (i32.const 14)
               )
               (get_local $7)
              )
             )
             (i32.const 8000)
            )
           )
           (if
            (i32.ne
             (get_local $12)
             (i32.const 2048)
            )
            (set_local $7
             (get_local $15)
            )
           )
           (if
            (i32.eq
             (tee_local $15
              (i32.load
               (i32.add
                (get_local $0)
                (i32.const 14224)
               )
              )
             )
             (i32.const 1002)
            )
            (set_local $7
             (i32.add
              (get_local $7)
              (i32.const -4000)
             )
            )
            (block
             (set_local $12
              (i32.add
               (get_local $7)
               (i32.const 4000)
              )
             )
             (if
              (i32.gt_s
               (get_local $15)
               (i32.const 0)
              )
              (set_local $7
               (get_local $12)
              )
             )
            )
           )
           (i32.store
            (tee_local $12
             (i32.add
              (get_local $0)
              (i32.const 14220)
             )
            )
            (tee_local $7
             (if (result i32)
              (i32.lt_s
               (get_local $23)
               (get_local $7)
              )
              (i32.const 1000)
              (i32.const 1002)
             )
            )
           )
           (if
            (i32.load offset=48
             (get_local $0)
            )
            (if
             (i32.gt_s
              (get_local $26)
              (i32.shr_s
               (i32.sub
                (i32.const 128)
                (get_local $13)
               )
               (i32.const 4)
              )
             )
             (block
              (i32.store
               (get_local $12)
               (i32.const 1000)
              )
              (set_local $7
               (i32.const 1000)
              )
             )
            )
           )
           (block $do-once14
            (if
             (i32.load offset=184
              (get_local $0)
             )
             (block
              (if
               (i32.load
                (get_local $29)
               )
               (block
                (i32.store offset=56
                 (get_local $0)
                 (i32.const 0)
                )
                (br $do-once14)
               )
              )
              (i32.store offset=56
               (get_local $0)
               (i32.xor
                (get_local $27)
                (i32.const 1)
               )
              )
              (if
               (i32.and
                (i32.eqz
                 (get_local $27)
                )
                (i32.gt_s
                 (get_local $13)
                 (i32.const 100)
                )
               )
               (block
                (i32.store
                 (get_local $12)
                 (i32.const 1000)
                )
                (set_local $7
                 (i32.const 1000)
                )
               )
              )
             )
             (i32.store offset=56
              (get_local $0)
              (i32.const 0)
             )
            )
           )
           (if
            (i32.lt_s
             (get_local $6)
             (i32.div_s
              (i32.mul
               (if (result i32)
                (i32.gt_s
                 (get_local $21)
                 (i32.const 50)
                )
                (i32.const 9000)
                (i32.const 6000)
               )
               (get_local $2)
              )
              (i32.shl
               (get_local $18)
               (i32.const 3)
              )
             )
            )
            (block
             (i32.store
              (get_local $12)
              (i32.const 1002)
             )
             (set_local $7
              (i32.const 1002)
             )
             (br $do-once12)
            )
           )
          )
          (i32.store
           (tee_local $12
            (i32.add
             (get_local $0)
             (i32.const 14220)
            )
           )
           (get_local $7)
          )
         )
         (if
          (i32.eq
           (get_local $7)
           (i32.const 1002)
          )
          (set_local $7
           (i32.const 1002)
          )
          (if
           (i32.gt_s
            (i32.div_s
             (get_local $18)
             (i32.const 100)
            )
            (get_local $2)
           )
           (block
            (i32.store
             (get_local $12)
             (i32.const 1002)
            )
            (set_local $7
             (i32.const 1002)
            )
           )
          )
         )
        )
       )
      )
      (if
       (i32.load
        (tee_local $43
         (i32.add
          (get_local $0)
          (i32.const 176)
         )
        )
       )
       (block
        (i32.store
         (get_local $12)
         (i32.const 1002)
        )
        (set_local $7
         (i32.const 1002)
        )
       )
      )
      (block $do-once16
       (if
        (i32.gt_s
         (tee_local $15
          (i32.load
           (tee_local $54
            (i32.add
             (get_local $0)
             (i32.const 14224)
            )
           )
          )
         )
         (i32.const 0)
        )
        (block
         (if
          (i32.and
           (i32.eq
            (get_local $15)
            (i32.const 1002)
           )
           (i32.xor
            (tee_local $23
             (i32.eq
              (get_local $7)
              (i32.const 1002)
             )
            )
            (i32.const 1)
           )
          )
          (block
           (set_local $23
            (tee_local $38
             (i32.ne
              (get_local $7)
              (i32.const 1002)
             )
            )
           )
           (if
            (get_local $38)
            (block
             (set_local $18
              (i32.const 1)
             )
             (set_local $38
              (i32.const 0)
             )
             (br $do-once16)
            )
           )
          )
          (block
           (if
            (i32.eqz
             (get_local $23)
            )
            (block
             (set_local $23
              (i32.const 0)
             )
             (set_local $18
              (i32.const 0)
             )
             (br $do-once16)
            )
           )
           (if
            (i32.eq
             (get_local $15)
             (i32.const 1002)
            )
            (block
             (set_local $23
              (i32.const 0)
             )
             (set_local $18
              (i32.const 0)
             )
             (set_local $7
              (i32.const 1002)
             )
             (br $do-once16)
            )
           )
           (set_local $23
            (i32.ne
             (get_local $7)
             (i32.const 1002)
            )
           )
          )
         )
         (set_local $7
          (if (result i32)
           (i32.gt_s
            (i32.div_s
             (get_local $18)
             (i32.const 100)
            )
            (get_local $2)
           )
           (block (result i32)
            (set_local $18
             (i32.const 0)
            )
            (set_local $38
             (i32.const 0)
            )
            (i32.const 1002)
           )
           (block (result i32)
            (i32.store
             (get_local $12)
             (get_local $15)
            )
            (set_local $18
             (i32.const 1)
            )
            (set_local $38
             (i32.const 1)
            )
            (get_local $15)
           )
          )
         )
        )
        (block
         (set_local $23
          (i32.const 0)
         )
         (set_local $18
          (i32.const 0)
         )
        )
       )
      )
      (block $__rjto$12
       (block $__rjti$12
        (br_if $__rjti$12
         (i32.ne
          (get_local $10)
          (i32.const 1)
         )
        )
        (br_if $__rjti$12
         (i32.ne
          (i32.load
           (i32.add
            (get_local $0)
            (i32.const 14228)
           )
          )
          (i32.const 2)
         )
        )
        (br_if $__rjti$12
         (i32.or
          (i32.or
           (i32.load
            (tee_local $42
             (i32.add
              (get_local $0)
              (i32.const 68)
             )
            )
           )
           (i32.eq
            (get_local $7)
            (i32.const 1002)
           )
          )
          (i32.eq
           (get_local $15)
           (i32.const 1002)
          )
         )
        )
        (i32.store
         (get_local $42)
         (i32.const 1)
        )
        (i32.store
         (get_local $28)
         (i32.const 2)
        )
        (set_local $10
         (i32.const 2)
        )
        (br $__rjto$12)
       )
       (i32.store offset=68
        (get_local $0)
        (i32.const 0)
       )
      )
      (set_local $26
       (call $_compute_equiv_rate
        (get_local $14)
        (get_local $10)
        (get_local $21)
        (get_local $16)
        (get_local $7)
        (get_local $19)
        (get_local $26)
       )
      )
      (block $do-once18
       (block $__rjti$13
        (set_local $13
         (if (result i32)
          (i32.eq
           (get_local $7)
           (i32.const 1002)
          )
          (block
           (set_local $10
            (i32.const 0)
           )
           (set_local $7
            (i32.const 1)
           )
           (set_local $14
            (i32.const 1002)
           )
           (br $__rjti$13)
          )
          (block (result i32)
           (set_local $10
            (if (result i32)
             (i32.eq
              (get_local $15)
              (i32.const 1002)
             )
             (block (result i32)
              (drop
               (call $_silk_InitEncoder
                (get_local $48)
                (i32.load offset=180
                 (get_local $0)
                )
                (get_local $32)
               )
              )
              (set_local $14
               (i32.load
                (get_local $12)
               )
              )
              (i32.const 1)
             )
             (block (result i32)
              (set_local $14
               (get_local $7)
              )
              (i32.const 0)
             )
            )
           )
           (if (result i32)
            (tee_local $7
             (i32.eq
              (get_local $14)
              (i32.const 1002)
             )
            )
            (br $__rjti$13)
            (if (result i32)
             (i32.load
              (i32.add
               (get_local $0)
               (i32.const 14248)
              )
             )
             (br $__rjti$13)
             (if (result i32)
              (i32.load offset=84
               (get_local $0)
              )
              (br $__rjti$13)
              (block (result i32)
               (set_local $15
                (tee_local $13
                 (i32.add
                  (get_local $0)
                  (i32.const 14236)
                 )
                )
               )
               (i32.load
                (get_local $13)
               )
              )
             )
            )
           )
          )
         )
        )
        (br $do-once18)
       )
       (block $__rjto$0
        (block $__rjti$0
         (br_if $__rjto$0
          (i32.ne
           (i32.load
            (get_local $22)
           )
           (i32.const 2)
          )
         )
         (br_if $__rjto$0
          (i32.eq
           (i32.load
            (get_local $34)
           )
           (i32.const 1)
          )
         )
        )
       )
       (set_local $15
        (i32.mul
         (get_local $13)
         (get_local $13)
        )
       )
       (set_local $13
        (i32.const 0)
       )
       (loop $while-in
        (if
         (i32.ne
          (get_local $13)
          (i32.const 8)
         )
         (block
          (i32.store
           (i32.add
            (get_local $30)
            (i32.shl
             (get_local $13)
             (i32.const 2)
            )
           )
           (i32.add
            (tee_local $16
             (i32.load
              (i32.add
               (i32.shl
                (get_local $13)
                (i32.const 2)
               )
               (i32.const 28816)
              )
             )
            )
            (i32.shr_s
             (i32.mul
              (get_local $15)
              (i32.sub
               (i32.load
                (i32.add
                 (i32.shl
                  (get_local $13)
                  (i32.const 2)
                 )
                 (i32.const 28784)
                )
               )
               (get_local $16)
              )
             )
             (i32.const 14)
            )
           )
          )
          (set_local $13
           (i32.add
            (get_local $13)
            (i32.const 1)
           )
          )
          (br $while-in)
         )
        )
       )
       (set_local $15
        (i32.add
         (get_local $0)
         (i32.const 14240)
        )
       )
       (set_local $13
        (i32.load offset=24
         (get_local $30)
        )
       )
       (set_local $19
        (i32.load offset=28
         (get_local $30)
        )
       )
       (if
        (tee_local $16
         (i32.eqz
          (i32.load
           (i32.add
            (get_local $0)
            (i32.const 14248)
           )
          )
         )
        )
        (set_local $13
         (if (result i32)
          (i32.lt_s
           (i32.load
            (get_local $15)
           )
           (i32.const 1105)
          )
          (i32.add
           (get_local $13)
           (get_local $19)
          )
          (i32.sub
           (get_local $13)
           (get_local $19)
          )
         )
        )
       )
       (block $__rjto$1
        (set_local $13
         (if (result i32)
          (i32.lt_s
           (get_local $26)
           (get_local $13)
          )
          (block (result i32)
           (set_local $13
            (i32.load offset=16
             (get_local $30)
            )
           )
           (set_local $19
            (i32.load offset=20
             (get_local $30)
            )
           )
           (if
            (get_local $16)
            (set_local $13
             (if (result i32)
              (i32.lt_s
               (i32.load
                (get_local $15)
               )
               (i32.const 1104)
              )
              (i32.add
               (get_local $13)
               (get_local $19)
              )
              (i32.sub
               (get_local $13)
               (get_local $19)
              )
             )
            )
           )
           (if
            (i32.ge_s
             (get_local $26)
             (get_local $13)
            )
            (block
             (set_local $13
              (i32.const 1104)
             )
             (br $__rjto$1)
            )
           )
           (set_local $13
            (i32.load offset=8
             (get_local $30)
            )
           )
           (set_local $19
            (i32.load offset=12
             (get_local $30)
            )
           )
           (if
            (get_local $16)
            (set_local $13
             (if (result i32)
              (i32.lt_s
               (i32.load
                (get_local $15)
               )
               (i32.const 1103)
              )
              (i32.add
               (get_local $13)
               (get_local $19)
              )
              (i32.sub
               (get_local $13)
               (get_local $19)
              )
             )
            )
           )
           (if
            (i32.ge_s
             (get_local $26)
             (get_local $13)
            )
            (block
             (set_local $13
              (i32.const 1103)
             )
             (br $__rjto$1)
            )
           )
           (set_local $13
            (i32.load
             (get_local $30)
            )
           )
           (set_local $19
            (i32.load offset=4
             (get_local $30)
            )
           )
           (if
            (get_local $16)
            (set_local $13
             (if (result i32)
              (i32.lt_s
               (i32.load
                (get_local $15)
               )
               (i32.const 1102)
              )
              (i32.add
               (get_local $13)
               (get_local $19)
              )
              (i32.sub
               (get_local $13)
               (get_local $19)
              )
             )
            )
           )
           (if (result i32)
            (i32.lt_s
             (get_local $26)
             (get_local $13)
            )
            (block
             (set_local $13
              (i32.const 1101)
             )
             (br $__rjto$1)
            )
            (i32.const 1103)
           )
          )
          (block
           (set_local $13
            (i32.const 1105)
           )
           (br $__rjto$1)
          )
         )
        )
       )
       (i32.store
        (get_local $15)
        (get_local $13)
       )
       (i32.store
        (tee_local $15
         (i32.add
          (get_local $0)
          (i32.const 14236)
         )
        )
        (get_local $13)
       )
       (if
        (i32.eqz
         (i32.or
          (get_local $7)
          (i32.xor
           (get_local $16)
           (i32.const 1)
          )
         )
        )
        (block
         (br_if $do-once18
          (i32.eqz
           (i32.and
            (i32.eqz
             (i32.load offset=88
              (get_local $0)
             )
            )
            (i32.gt_u
             (get_local $13)
             (i32.const 1103)
            )
           )
          )
         )
         (i32.store
          (get_local $15)
          (i32.const 1103)
         )
         (set_local $13
          (i32.const 1103)
         )
        )
       )
      )
      (if
       (i32.gt_s
        (get_local $13)
        (tee_local $16
         (i32.load offset=132
          (get_local $0)
         )
        )
       )
       (block
        (i32.store
         (get_local $15)
         (get_local $16)
        )
        (set_local $13
         (get_local $16)
        )
       )
      )
      (if
       (i32.eqz
        (tee_local $19
         (i32.eq
          (tee_local $16
           (i32.load offset=128
            (get_local $0)
           )
          )
          (i32.const -1000)
         )
        )
       )
       (block
        (i32.store
         (get_local $15)
         (get_local $16)
        )
        (set_local $13
         (get_local $16)
        )
       )
      )
      (if
       (i32.and
        (i32.lt_s
         (get_local $41)
         (i32.const 1875)
        )
        (i32.xor
         (get_local $7)
         (i32.const 1)
        )
       )
       (i32.store
        (get_local $15)
        (if (result i32)
         (i32.lt_s
          (get_local $13)
          (i32.const 1103)
         )
         (get_local $13)
         (tee_local $13
          (i32.const 1103)
         )
        )
       )
      )
      (if
       (i32.and
        (tee_local $32
         (i32.lt_s
          (tee_local $16
           (i32.load
            (get_local $24)
           )
          )
          (i32.const 24001)
         )
        )
        (tee_local $34
         (i32.gt_s
          (get_local $13)
          (i32.const 1104)
         )
        )
       )
       (set_local $13
        (i32.const 1104)
       )
      )
      (if
       (i32.and
        (tee_local $42
         (i32.lt_s
          (get_local $16)
          (i32.const 16001)
         )
        )
        (tee_local $49
         (i32.gt_s
          (get_local $13)
          (i32.const 1103)
         )
        )
       )
       (set_local $13
        (i32.const 1103)
       )
      )
      (set_local $32
       (i32.or
        (i32.and
         (get_local $32)
         (get_local $34)
        )
        (i32.and
         (get_local $42)
         (get_local $49)
        )
       )
      )
      (if
       (i32.and
        (tee_local $34
         (i32.lt_s
          (get_local $16)
          (i32.const 12001)
         )
        )
        (tee_local $42
         (i32.gt_s
          (get_local $13)
          (i32.const 1102)
         )
        )
       )
       (set_local $13
        (i32.const 1102)
       )
      )
      (set_local $32
       (i32.or
        (get_local $32)
        (i32.and
         (get_local $34)
         (get_local $42)
        )
       )
      )
      (if
       (i32.and
        (tee_local $16
         (i32.lt_s
          (get_local $16)
          (i32.const 8001)
         )
        )
        (tee_local $34
         (i32.gt_s
          (get_local $13)
          (i32.const 1101)
         )
        )
       )
       (set_local $13
        (i32.const 1101)
       )
      )
      (if
       (i32.or
        (get_local $32)
        (i32.and
         (get_local $16)
         (get_local $34)
        )
       )
       (i32.store
        (get_local $15)
        (get_local $13)
       )
      )
      (if
       (i32.eqz
        (i32.or
         (i32.eqz
          (tee_local $16
           (i32.load
            (get_local $5)
           )
          )
         )
         (i32.xor
          (get_local $19)
          (i32.const 1)
         )
        )
       )
       (block
        (i32.store
         (get_local $5)
         (if (result i32)
          (i32.gt_s
           (get_local $16)
           (tee_local $7
            (block $do-once30 (result i32)
             (if (result i32)
              (i32.or
               (i32.gt_s
                (get_local $26)
                (i32.mul
                 (tee_local $19
                  (i32.load
                   (get_local $28)
                  )
                 )
                 (i32.const 18000)
                )
               )
               (i32.xor
                (get_local $7)
                (i32.const 1)
               )
              )
              (block (result i32)
               (drop
                (br_if $do-once30
                 (i32.const 1102)
                 (i32.eqz
                  (i32.or
                   (i32.gt_s
                    (get_local $26)
                    (i32.mul
                     (get_local $19)
                     (i32.const 24000)
                    )
                   )
                   (i32.xor
                    (get_local $7)
                    (i32.const 1)
                   )
                  )
                 )
                )
               )
               (drop
                (br_if $do-once30
                 (i32.const 1103)
                 (i32.le_s
                  (get_local $26)
                  (i32.mul
                   (get_local $19)
                   (i32.const 30000)
                  )
                 )
                )
               )
               (if (result i32)
                (i32.gt_s
                 (get_local $26)
                 (i32.mul
                  (get_local $19)
                  (i32.const 44000)
                 )
                )
                (i32.const 1105)
                (i32.const 1104)
               )
              )
              (i32.const 1101)
             )
            )
           )
          )
          (get_local $16)
          (tee_local $16
           (get_local $7)
          )
         )
        )
        (i32.store
         (get_local $15)
         (if (result i32)
          (i32.lt_s
           (get_local $13)
           (get_local $16)
          )
          (get_local $13)
          (get_local $16)
         )
        )
       )
      )
      (set_local $5
       (call $_decide_fec
        (i32.load offset=48
         (get_local $0)
        )
        (i32.load
         (get_local $46)
        )
        (i32.load
         (tee_local $32
          (i32.add
           (get_local $0)
           (i32.const 52)
          )
         )
        )
        (get_local $14)
        (get_local $15)
        (get_local $26)
       )
      )
      (i32.store
       (get_local $32)
       (get_local $5)
      )
      (i32.store
       (get_local $44)
       (get_local $33)
      )
      (drop
       (call $_opus_custom_encoder_ctl
        (get_local $17)
        (i32.const 4036)
        (get_local $44)
       )
      )
      (block $do-once32
       (if
        (i32.eq
         (tee_local $7
          (i32.load
           (get_local $12)
          )
         )
         (i32.const 1002)
        )
        (block
         (br_if $do-once32
          (i32.ne
           (i32.load
            (get_local $15)
           )
           (i32.const 1102)
          )
         )
         (i32.store
          (get_local $15)
          (i32.const 1103)
         )
        )
       )
      )
      (set_local $5
       (if (result i32)
        (i32.load
         (get_local $43)
        )
        (block (result i32)
         (i32.store
          (get_local $15)
          (i32.const 1101)
         )
         (i32.const 1101)
        )
        (i32.load
         (get_local $15)
        )
       )
      )
      (block $do-once36
       (block $__rjti$16
        (block $__rjti$15
         (block $__rjti$14
          (if
           (i32.eq
            (get_local $7)
            (i32.const 1000)
           )
           (block
            (br_if $__rjti$14
             (i32.le_s
              (get_local $5)
              (i32.const 1103)
             )
            )
            (i32.store
             (get_local $12)
             (i32.const 1001)
            )
            (set_local $7
             (i32.const 1001)
            )
            (br $__rjti$15)
           )
           (block
            (br_if $__rjti$15
             (i32.ne
              (get_local $7)
              (i32.const 1001)
             )
            )
            (if
             (i32.ge_s
              (get_local $5)
              (i32.const 1104)
             )
             (block
              (set_local $7
               (i32.const 1001)
              )
              (br $__rjti$15)
             )
            )
            (i32.store
             (get_local $12)
             (i32.const 1000)
            )
           )
          )
         )
         (set_local $14
          (tee_local $7
           (i32.load
            (get_local $24)
           )
          )
         )
         (set_local $16
          (i32.const 1000)
         )
         (set_local $7
          (i32.div_s
           (get_local $7)
           (i32.const 50)
          )
         )
         (br $__rjti$16)
        )
        (set_local $5
         (if (result i32)
          (i32.or
           (i32.ge_s
            (tee_local $13
             (i32.div_s
              (tee_local $14
               (i32.load
                (get_local $24)
               )
              )
              (i32.const 50)
             )
            )
            (get_local $2)
           )
           (i32.eq
            (get_local $7)
            (i32.const 1000)
           )
          )
          (block
           (set_local $16
            (get_local $7)
           )
           (set_local $7
            (get_local $13)
           )
           (br $__rjti$16)
          )
          (get_local $13)
         )
        )
        (br $do-once36)
       )
       (if
        (i32.lt_s
         (i32.div_s
          (i32.mul
           (get_local $14)
           (i32.const 3)
          )
          (i32.const 50)
         )
         (get_local $2)
        )
        (block
         (set_local $5
          (get_local $7)
         )
         (br_if $do-once36
          (i32.ne
           (get_local $16)
           (i32.const 1000)
          )
         )
         (if
          (i32.eq
           (i32.div_s
            (i32.shl
             (get_local $14)
             (i32.const 1)
            )
            (i32.const 25)
           )
           (get_local $2)
          )
          (set_local $5
           (i32.div_s
            (get_local $14)
            (i32.const 25)
           )
          )
          (block
           (set_local $6
            (i32.div_s
             (tee_local $7
              (i32.mul
               (get_local $14)
               (i32.const 3)
              )
             )
             (i32.const 50)
            )
           )
           (if
            (i32.eq
             (i32.div_s
              (get_local $7)
              (i32.const 25)
             )
             (get_local $2)
            )
            (set_local $5
             (get_local $6)
            )
           )
          )
         )
         (br $do-once36)
        )
       )
       (if
        (i32.or
         (i32.eq
          (get_local $16)
          (i32.const 1002)
         )
         (i32.eqz
          (tee_local $8
           (if (result i32)
            (i32.load
             (tee_local $44
              (i32.add
               (get_local $0)
               (i32.const 14244)
              )
             )
            )
            (block (result i32)
             (i32.store
              (get_local $44)
              (i32.const 0)
             )
             (set_local $13
              (i32.const 2)
             )
             (set_local $23
              (i32.const 1)
             )
             (i32.const 1)
            )
            (block (result i32)
             (set_local $13
              (get_local $10)
             )
             (get_local $18)
            )
           )
          )
         )
        )
        (block
         (set_local $9
          (i32.const 0)
         )
         (set_local $8
          (i32.const 0)
         )
        )
        (block
         (set_local $9
          (tee_local $4
           (call $_compute_redundancy_bytes
            (get_local $6)
            (i32.load
             (get_local $40)
            )
            (get_local $21)
            (i32.load
             (get_local $28)
            )
           )
          )
         )
         (if
          (i32.eqz
           (get_local $4)
          )
          (set_local $8
           (i32.const 0)
          )
         )
        )
       )
       (if
        (i32.ge_s
         (tee_local $4
          (i32.sub
           (get_local $6)
           (get_local $9)
          )
         )
         (tee_local $7
          (i32.div_s
           (i32.mul
            (i32.load
             (get_local $40)
            )
            (get_local $2)
           )
           (i32.shl
            (get_local $14)
            (i32.const 3)
           )
          )
         )
        )
        (set_local $4
         (get_local $7)
        )
       )
       (call $_ec_enc_init
        (get_local $25)
        (tee_local $33
         (i32.add
          (get_local $3)
          (i32.const 1)
         )
        )
        (tee_local $34
         (i32.add
          (get_local $6)
          (i32.const -1)
         )
        )
       )
       (set_local $7
        (i32.mul
         (tee_local $46
          (i32.add
           (get_local $36)
           (get_local $2)
          )
         )
         (i32.load
          (get_local $22)
         )
        )
       )
       (set_local $88
        (call $_llvm_stacksave)
       )
       (set_local $18
        (get_global $STACKTOP)
       )
       (set_global $STACKTOP
        (i32.add
         (get_global $STACKTOP)
         (i32.and
          (i32.add
           (i32.shl
            (get_local $7)
            (i32.const 2)
           )
           (i32.const 15)
          )
          (i32.const -16)
         )
        )
       )
       (drop
        (call $_memcpy
         (get_local $18)
         (i32.add
          (i32.add
           (get_local $0)
           (i32.const 14276)
          )
          (i32.shl
           (i32.mul
            (i32.sub
             (i32.load
              (tee_local $19
               (i32.add
                (get_local $0)
                (i32.const 172)
               )
              )
             )
             (get_local $36)
            )
            (tee_local $7
             (i32.load
              (get_local $22)
             )
            )
           )
           (i32.const 2)
          )
         )
         (i32.shl
          (i32.mul
           (get_local $36)
           (get_local $7)
          )
          (i32.const 2)
         )
        )
       )
       (set_local $7
        (i32.sub
         (tee_local $7
          (if (result i32)
           (i32.eq
            (i32.load
             (get_local $12)
            )
            (i32.const 1002)
           )
           (i32.shl
            (call $_silk_lin2log
             (i32.const 60)
            )
            (i32.const 8)
           )
           (i32.load offset=8
            (get_local $48)
           )
          )
         )
         (tee_local $14
          (i32.load
           (tee_local $10
            (i32.add
             (get_local $0)
             (i32.const 14196)
            )
           )
          )
         )
        )
       )
       (i32.store
        (get_local $10)
        (tee_local $7
         (i32.add
          (get_local $14)
          (i32.add
           (i32.mul
            (i32.shr_s
             (get_local $7)
             (i32.const 16)
            )
            (i32.const 983)
           )
           (i32.shr_u
            (i32.mul
             (i32.and
              (get_local $7)
              (i32.const 65535)
             )
             (i32.const 983)
            )
            (i32.const 16)
           )
          )
         )
        )
       )
       (if
        (i32.eq
         (i32.load
          (get_local $35)
         )
         (i32.const 2048)
        )
        (block
         (set_local $7
          (call $_silk_log2lin
           (i32.shr_s
            (get_local $7)
            (i32.const 8)
           )
          )
         )
         (call $_hp_cutoff
          (get_local $1)
          (get_local $7)
          (i32.add
           (get_local $18)
           (i32.shl
            (i32.mul
             (get_local $36)
             (tee_local $7
              (i32.load
               (get_local $22)
              )
             )
            )
            (i32.const 2)
           )
          )
          (i32.add
           (get_local $0)
           (i32.const 14204)
          )
          (get_local $2)
          (get_local $7)
          (i32.load
           (get_local $24)
          )
         )
        )
        (call $_dc_reject
         (get_local $1)
         (i32.add
          (get_local $18)
          (i32.shl
           (i32.mul
            (get_local $36)
            (tee_local $7
             (i32.load
              (get_local $22)
             )
            )
           )
           (i32.const 2)
          )
         )
         (i32.add
          (get_local $0)
          (i32.const 14204)
         )
         (get_local $2)
         (get_local $7)
         (i32.load
          (get_local $24)
         )
        )
       )
       (block $do-once38
        (if
         (get_local $11)
         (block
          (br_if $do-once38
           (i32.eqz
            (i32.or
             (i32.eqz
              (f32.lt
               (tee_local $20
                (call $_celt_inner_prod_c
                 (tee_local $7
                  (i32.add
                   (get_local $18)
                   (i32.shl
                    (i32.mul
                     (get_local $36)
                     (tee_local $10
                      (i32.load
                       (get_local $22)
                      )
                     )
                    )
                    (i32.const 2)
                   )
                  )
                 )
                 (get_local $7)
                 (tee_local $10
                  (i32.mul
                   (get_local $10)
                   (get_local $2)
                  )
                 )
                )
               )
               (f32.const 1e9)
              )
             )
             (f32.ne
              (get_local $20)
              (get_local $20)
             )
            )
           )
          )
          (drop
           (call $_memset
            (get_local $7)
            (i32.const 0)
            (i32.shl
             (get_local $10)
             (i32.const 2)
            )
           )
          )
          (i64.store align=4
           (tee_local $7
            (i32.add
             (get_local $0)
             (i32.const 14204)
            )
           )
           (i64.const 0)
          )
          (i64.store offset=8 align=4
           (get_local $7)
           (i64.const 0)
          )
         )
        )
       )
       (block $label$break$L332
        (block $__rjti$11
         (if
          (i32.eq
           (i32.load
            (get_local $12)
           )
           (i32.const 1002)
          )
          (block
           (set_local $20
            (f32.const 1)
           )
           (set_local $39
            (get_local $5)
           )
           (set_local $5
            (get_local $8)
           )
           (br $__rjti$11)
          )
          (block
           (set_local $7
            (i32.mul
             (i32.load
              (get_local $22)
             )
             (get_local $2)
            )
           )
           (set_local $42
            (call $_llvm_stacksave)
           )
           (set_local $35
            (get_global $STACKTOP)
           )
           (set_global $STACKTOP
            (i32.add
             (get_global $STACKTOP)
             (i32.and
              (i32.add
               (i32.shl
                (get_local $7)
                (i32.const 1)
               )
               (i32.const 15)
              )
              (i32.const -16)
             )
            )
           )
           (set_local $11
            (f32.ge
             (f32.load offset=36
              (get_local $29)
             )
             (f32.const 0.10000000149011612)
            )
           )
           (if
            (i32.eqz
             (i32.load
              (get_local $29)
             )
            )
            (set_local $11
             (i32.const -1)
            )
           )
           (set_local $4
            (i32.mul
             (i32.add
              (i32.shl
               (get_local $4)
               (i32.const 3)
              )
              (i32.const -8)
             )
             (get_local $21)
            )
           )
           (block $do-once43
            (block $__rjti$2
             (if
              (tee_local $16
               (i32.eq
                (tee_local $89
                 (i32.load
                  (get_local $12)
                 )
                )
                (i32.const 1001)
               )
              )
              (block
               (set_local $7
                (call $_compute_silk_rate_for_hybrid
                 (get_local $4)
                 (get_local $5)
                 (i32.eq
                  (i32.load
                   (get_local $24)
                  )
                  (i32.mul
                   (get_local $2)
                   (i32.const 50)
                  )
                 )
                 (i32.load
                  (get_local $37)
                 )
                 (i32.load
                  (get_local $32)
                 )
                 (i32.load
                  (get_local $28)
                 )
                )
               )
               (i32.store offset=36
                (get_local $0)
                (get_local $7)
               )
               (if
                (tee_local $10
                 (i32.load
                  (i32.add
                   (get_local $0)
                   (i32.const 14252)
                  )
                 )
                )
                (block
                 (set_local $4
                  (get_local $7)
                 )
                 (br $__rjti$2)
                )
               )
               (set_local $20
                (f32.sub
                 (f32.const 1)
                 (f32.demote/f64
                  (call $Math_exp
                   (f64.mul
                    (f64.promote/f32
                     (f32.mul
                      (f32.convert_s/i32
                       (i32.sub
                        (get_local $7)
                        (get_local $4)
                       )
                      )
                      (f32.const 0.0009765625)
                     )
                    )
                    (f64.const 0.6931471805599453)
                   )
                  )
                 )
                )
               )
               (set_local $4
                (get_local $7)
               )
              )
              (block
               (i32.store offset=36
                (get_local $0)
                (get_local $4)
               )
               (br_if $__rjti$2
                (tee_local $10
                 (i32.load
                  (i32.add
                   (get_local $0)
                   (i32.const 14252)
                  )
                 )
                )
               )
               (set_local $20
                (f32.const 1)
               )
              )
             )
             (br $do-once43)
            )
            (if
             (i32.eqz
              (i32.load
               (get_local $37)
              )
             )
             (block
              (set_local $20
               (f32.const 1)
              )
              (br $do-once43)
             )
            )
            (if
             (i32.load
              (get_local $43)
             )
             (block
              (set_local $20
               (f32.const 1)
              )
              (br $do-once43)
             )
            )
            (set_local $7
             (block $switch45 (result i32)
              (block $switch-default48
               (block $switch-case47
                (block $switch-case46
                 (br_table $switch-case46 $switch-case47 $switch-default48
                  (i32.sub
                   (tee_local $90
                    (i32.load
                     (get_local $15)
                    )
                   )
                   (i32.const 1101)
                  )
                 )
                )
                (set_local $55
                 (f32.const 8e3)
                )
                (br $switch45
                 (i32.const 13)
                )
               )
               (set_local $55
                (f32.const 12e3)
               )
               (br $switch45
                (i32.const 15)
               )
              )
              (set_local $55
               (f32.const 16e3)
              )
              (i32.const 17)
             )
            )
            (set_local $43
             (i32.load
              (get_local $22)
             )
            )
            (set_local $14
             (i32.const 0)
            )
            (set_local $20
             (f32.const 0)
            )
            (loop $while-in50
             (if
              (i32.lt_s
               (get_local $14)
               (get_local $43)
              )
              (block
               (set_local $91
                (i32.mul
                 (get_local $14)
                 (i32.const 21)
                )
               )
               (set_local $15
                (i32.const 0)
               )
               (loop $while-in52
                (if
                 (i32.lt_u
                  (get_local $15)
                  (get_local $7)
                 )
                 (block
                  (set_local $49
                   (f32.lt
                    (tee_local $31
                     (f32.load
                      (i32.add
                       (get_local $10)
                       (i32.shl
                        (i32.add
                         (get_local $91)
                         (get_local $15)
                        )
                        (i32.const 2)
                       )
                      )
                     )
                    )
                    (f32.const 0.5)
                   )
                  )
                  (block $do-once53
                   (set_local $31
                    (if (result f32)
                     (i32.or
                      (f32.gt
                       (get_local $31)
                       (f32.const -2)
                      )
                      (i32.xor
                       (get_local $49)
                       (i32.const 1)
                      )
                     )
                     (block (result f32)
                      (if
                       (get_local $49)
                       (br_if $do-once53
                        (i32.eqz
                         (f32.gt
                          (get_local $31)
                          (f32.const 0)
                         )
                        )
                       )
                       (set_local $31
                        (f32.const 0.5)
                       )
                      )
                      (f32.mul
                       (get_local $31)
                       (f32.const 0.5)
                      )
                     )
                     (f32.const -2)
                    )
                   )
                  )
                  (set_local $20
                   (f32.add
                    (get_local $20)
                    (get_local $31)
                   )
                  )
                  (set_local $15
                   (i32.add
                    (get_local $15)
                    (i32.const 1)
                   )
                  )
                  (br $while-in52)
                 )
                )
               )
               (set_local $14
                (i32.add
                 (get_local $14)
                 (i32.const 1)
                )
               )
               (br $while-in50)
              )
             )
            )
            (set_local $10
             (i32.add
              (get_local $0)
              (i32.const 36)
             )
            )
            (if
             (i32.ge_s
              (tee_local $14
               (i32.div_s
                (i32.mul
                 (get_local $4)
                 (i32.const -2)
                )
                (i32.const 3)
               )
              )
              (tee_local $7
               (i32.trunc_s/f32
                (f32.mul
                 (f32.add
                  (f32.mul
                   (f32.div
                    (get_local $20)
                    (f32.convert_s/i32
                     (get_local $7)
                    )
                   )
                   (f32.convert_s/i32
                    (get_local $43)
                   )
                  )
                  (f32.const 0.20000000298023224)
                 )
                 (get_local $55)
                )
               )
              )
             )
             (set_local $7
              (get_local $14)
             )
            )
            (if
             (i32.eq
              (i32.and
               (get_local $90)
               (i32.const -2)
              )
              (i32.const 1104)
             )
             (i32.store
              (get_local $10)
              (tee_local $4
               (i32.add
                (get_local $4)
                (i32.div_s
                 (i32.mul
                  (get_local $7)
                  (i32.const 3)
                 )
                 (i32.const 5)
                )
               )
              )
             )
             (i32.store
              (get_local $10)
              (tee_local $4
               (i32.add
                (get_local $4)
                (get_local $7)
               )
              )
             )
            )
            (set_local $20
             (f32.const 1)
            )
           )
           (i32.store offset=32
            (get_local $0)
            (i32.div_s
             (i32.mul
              (get_local $2)
              (i32.const 1000)
             )
             (tee_local $14
              (i32.load
               (get_local $24)
              )
             )
            )
           )
           (i32.store offset=8
            (get_local $0)
            (tee_local $10
             (i32.load
              (get_local $22)
             )
            )
           )
           (i32.store offset=12
            (get_local $0)
            (tee_local $43
             (i32.load
              (get_local $28)
             )
            )
           )
           (block $label$break$L269
            (block $switch-default59
             (block $switch-case58
              (block $switch-case57
               (br_table $switch-case57 $switch-case58 $switch-default59
                (i32.sub
                 (get_local $5)
                 (i32.const 1101)
                )
               )
              )
              (i32.store offset=28
               (get_local $0)
               (i32.const 8000)
              )
              (set_local $50
               (i32.const 8000)
              )
              (br $label$break$L269)
             )
             (i32.store offset=28
              (get_local $0)
              (i32.const 12000)
             )
             (set_local $50
              (i32.const 12000)
             )
             (br $label$break$L269)
            )
            (if
             (i32.or
              (get_local $16)
              (i32.eq
               (get_local $5)
               (i32.const 1103)
              )
             )
             (block
              (i32.store offset=28
               (get_local $0)
               (i32.const 16000)
              )
              (set_local $50
               (i32.const 16000)
              )
             )
             (call $_celt_fatal
              (i32.const 51260)
              (i32.const 51347)
              (i32.const 1755)
             )
            )
           )
           (i32.store offset=24
            (get_local $0)
            (if (result i32)
             (get_local $16)
             (i32.const 16000)
             (i32.const 8000)
            )
           )
           (i32.store
            (tee_local $15
             (i32.add
              (get_local $0)
              (i32.const 20)
             )
            )
            (i32.const 16000)
           )
           (block $do-once60
            (if
             (i32.eq
              (get_local $89)
              (i32.const 1000)
             )
             (block
              (br_if $do-once60
               (i32.ge_s
                (tee_local $7
                 (if (result i32)
                  (i32.gt_s
                   (get_local $21)
                   (i32.const 50)
                  )
                  (i32.div_s
                   (i32.shl
                    (get_local $41)
                    (i32.const 4)
                   )
                   (i32.const 3)
                  )
                  (get_local $53)
                 )
                )
                (i32.const 8000)
               )
              )
              (i32.store
               (get_local $15)
               (i32.const 12000)
              )
              (i32.store
               (tee_local $41
                (i32.add
                 (get_local $0)
                 (i32.const 28)
                )
               )
               (if (result i32)
                (i32.lt_u
                 (get_local $50)
                 (i32.const 12000)
                )
                (get_local $50)
                (i32.const 12000)
               )
              )
              (br_if $do-once60
               (i32.ge_s
                (get_local $7)
                (i32.const 7000)
               )
              )
              (i32.store
               (get_local $15)
               (i32.const 8000)
              )
              (i32.store
               (get_local $41)
               (i32.const 8000)
              )
             )
            )
           )
           (i32.store offset=60
            (get_local $0)
            (tee_local $53
             (i32.eqz
              (tee_local $41
               (i32.load
                (get_local $37)
               )
              )
             )
            )
           )
           (i32.store
            (tee_local $15
             (i32.sub
              (get_local $0)
              (i32.const -64)
             )
            )
            (tee_local $7
             (i32.add
              (i32.shl
               (get_local $6)
               (i32.const 3)
              )
              (i32.const -8)
             )
            )
           )
           (block $do-once62
            (if
             (i32.and
              (i32.ne
               (get_local $8)
               (i32.const 0)
              )
              (i32.gt_s
               (get_local $9)
               (i32.const 1)
              )
             )
             (block
              (i32.store
               (get_local $15)
               (tee_local $7
                (i32.sub
                 (get_local $7)
                 (i32.or
                  (i32.shl
                   (get_local $9)
                   (i32.const 3)
                  )
                  (i32.const 1)
                 )
                )
               )
              )
              (br_if $do-once62
               (i32.eqz
                (get_local $16)
               )
              )
              (i32.store
               (get_local $15)
               (tee_local $7
                (i32.add
                 (get_local $7)
                 (i32.const -20)
                )
               )
              )
             )
            )
           )
           (block $do-once64
            (if
             (get_local $53)
             (block
              (br_if $do-once64
               (i32.eqz
                (get_local $16)
               )
              )
              (i32.store
               (get_local $15)
               (if (result i32)
                (i32.lt_s
                 (get_local $7)
                 (tee_local $4
                  (i32.div_s
                   (i32.mul
                    (get_local $4)
                    (get_local $2)
                   )
                   (get_local $14)
                  )
                 )
                )
                (get_local $7)
                (get_local $4)
               )
              )
             )
             (block
              (br_if $do-once64
               (i32.eqz
                (get_local $16)
               )
              )
              (set_local $4
               (i32.div_s
                (i32.mul
                 (call $_compute_silk_rate_for_hybrid
                  (i32.div_s
                   (i32.mul
                    (get_local $7)
                    (get_local $14)
                   )
                   (get_local $2)
                  )
                  (get_local $5)
                  (i32.eq
                   (get_local $14)
                   (i32.mul
                    (get_local $2)
                    (i32.const 50)
                   )
                  )
                  (get_local $41)
                  (i32.load
                   (get_local $32)
                  )
                  (get_local $43)
                 )
                 (get_local $2)
                )
                (get_local $14)
               )
              )
              (i32.store
               (get_local $15)
               (get_local $4)
              )
             )
            )
           )
           (if
            (get_local $13)
            (block
             (i32.store
              (get_local $82)
              (i32.const 0)
             )
             (call $_gain_fade
              (tee_local $15
               (i32.add
                (i32.add
                 (get_local $0)
                 (i32.const 14276)
                )
                (i32.shl
                 (tee_local $7
                  (i32.mul
                   (get_local $10)
                   (i32.sub
                    (i32.sub
                     (i32.load
                      (get_local $19)
                     )
                     (i32.load offset=116
                      (get_local $0)
                     )
                    )
                    (tee_local $4
                     (i32.div_s
                      (get_local $14)
                      (i32.const 400)
                     )
                    )
                   )
                  )
                 )
                 (i32.const 2)
                )
               )
              )
              (get_local $15)
              (f32.const 0)
              (f32.const 1)
              (i32.load offset=4
               (tee_local $15
                (i32.load
                 (get_local $45)
                )
               )
              )
              (get_local $4)
              (get_local $10)
              (i32.load offset=60
               (get_local $15)
              )
              (get_local $14)
             )
             (drop
              (call $_memset
               (i32.add
                (get_local $0)
                (i32.const 14276)
               )
               (i32.const 0)
               (i32.shl
                (get_local $7)
                (i32.const 2)
               )
              )
             )
             (set_local $10
              (i32.mul
               (tee_local $7
                (i32.load
                 (get_local $19)
                )
               )
               (i32.load
                (get_local $22)
               )
              )
             )
             (set_local $4
              (i32.const 0)
             )
             (loop $while-in67
              (if
               (i32.lt_s
                (get_local $4)
                (get_local $10)
               )
               (block
                (set_local $14
                 (call $_FLOAT2INT16_669
                  (f32.load
                   (i32.add
                    (i32.add
                     (get_local $0)
                     (i32.const 14276)
                    )
                    (i32.shl
                     (get_local $4)
                     (i32.const 2)
                    )
                   )
                  )
                 )
                )
                (i32.store16
                 (i32.add
                  (get_local $35)
                  (i32.shl
                   (get_local $4)
                   (i32.const 1)
                  )
                 )
                 (get_local $14)
                )
                (set_local $4
                 (i32.add
                  (get_local $4)
                  (i32.const 1)
                 )
                )
                (br $while-in67)
               )
              )
             )
             (drop
              (call $_silk_Encode
               (get_local $48)
               (i32.add
                (get_local $0)
                (i32.const 8)
               )
               (get_local $35)
               (get_local $7)
               (i32.const 0)
               (get_local $82)
               (get_local $13)
               (get_local $11)
              )
             )
             (i32.store offset=72
              (get_local $0)
              (i32.const 0)
             )
             (set_local $10
              (i32.load
               (get_local $22)
              )
             )
            )
           )
           (set_local $7
            (i32.mul
             (get_local $10)
             (get_local $2)
            )
           )
           (set_local $4
            (i32.const 0)
           )
           (loop $while-in69
            (if
             (i32.lt_s
              (get_local $4)
              (get_local $7)
             )
             (block
              (set_local $14
               (call $_FLOAT2INT16_669
                (f32.load
                 (i32.add
                  (get_local $18)
                  (i32.shl
                   (i32.add
                    (i32.mul
                     (get_local $36)
                     (get_local $10)
                    )
                    (get_local $4)
                   )
                   (i32.const 2)
                  )
                 )
                )
               )
              )
              (i32.store16
               (i32.add
                (get_local $35)
                (i32.shl
                 (get_local $4)
                 (i32.const 1)
                )
               )
               (get_local $14)
              )
              (set_local $4
               (i32.add
                (get_local $4)
                (i32.const 1)
               )
              )
              (br $while-in69)
             )
            )
           )
           (set_local $0
            (block $do-once70 (result i32)
             (if (result i32)
              (call $_silk_Encode
               (get_local $48)
               (i32.add
                (get_local $0)
                (i32.const 8)
               )
               (get_local $35)
               (get_local $2)
               (get_local $25)
               (get_local $81)
               (i32.const 0)
               (get_local $11)
              )
              (i32.const -3)
              (block
               (set_local $4
                (i32.load offset=80
                 (get_local $0)
                )
               )
               (block $label$break$L308
                (if
                 (i32.eq
                  (tee_local $7
                   (i32.load
                    (get_local $12)
                   )
                  )
                  (i32.const 1000)
                 )
                 (block
                  (block $label$break$L310
                   (if
                    (i32.lt_s
                     (get_local $4)
                     (i32.const 12000)
                    )
                    (if
                     (i32.eqz
                      (i32.sub
                       (get_local $4)
                       (i32.const 8000)
                      )
                     )
                     (block
                      (set_local $39
                       (i32.const 1101)
                      )
                      (br $label$break$L308)
                     )
                    )
                    (if
                     (i32.lt_s
                      (get_local $4)
                      (i32.const 16000)
                     )
                     (block
                      (br_if $label$break$L310
                       (i32.sub
                        (get_local $4)
                        (i32.const 12000)
                       )
                      )
                      (set_local $39
                       (i32.const 1102)
                      )
                      (br $label$break$L308)
                     )
                     (block
                      (br_if $label$break$L310
                       (i32.sub
                        (get_local $4)
                        (i32.const 16000)
                       )
                      )
                      (set_local $39
                       (i32.const 1103)
                      )
                      (br $label$break$L308)
                     )
                    )
                   )
                  )
                  (set_local $39
                   (get_local $5)
                  )
                 )
                 (block
                  (if
                   (i32.eq
                    (get_local $4)
                    (i32.const 16000)
                   )
                   (block
                    (set_local $39
                     (get_local $5)
                    )
                    (br $label$break$L308)
                   )
                  )
                  (call $_celt_fatal
                   (i32.const 51366)
                   (i32.const 51347)
                   (i32.const 1863)
                  )
                 )
                )
               )
               (i32.store offset=72
                (get_local $0)
                (i32.and
                 (tee_local $4
                  (if (result i32)
                   (i32.load offset=96
                    (get_local $0)
                   )
                   (i32.eqz
                    (i32.load
                     (i32.add
                      (get_local $0)
                      (i32.const 18128)
                     )
                    )
                   )
                   (i32.const 0)
                  )
                 )
                 (i32.const 1)
                )
               )
               (if
                (i32.eqz
                 (i32.load
                  (get_local $81)
                 )
                )
                (block
                 (i32.store
                  (get_local $47)
                  (i32.const 0)
                 )
                 (set_local $0
                  (call $_gen_toc
                   (get_local $7)
                   (i32.div_s
                    (i32.load
                     (get_local $24)
                    )
                    (get_local $2)
                   )
                   (get_local $39)
                   (i32.load
                    (get_local $28)
                   )
                  )
                 )
                 (i32.store8
                  (get_local $3)
                  (get_local $0)
                 )
                 (br $do-once70
                  (i32.const 1)
                 )
                )
               )
               (set_local $5
                (if (result i32)
                 (get_local $4)
                 (block (result i32)
                  (set_local $4
                   (call $_compute_redundancy_bytes
                    (get_local $6)
                    (i32.load
                     (get_local $40)
                    )
                    (get_local $21)
                    (i32.load
                     (get_local $28)
                    )
                   )
                  )
                  (i32.store
                   (get_local $44)
                   (i32.const 1)
                  )
                  (set_local $23
                   (i32.const 0)
                  )
                  (i32.ne
                   (get_local $4)
                   (i32.const 0)
                  )
                 )
                 (block (result i32)
                  (set_local $4
                   (get_local $9)
                  )
                  (get_local $8)
                 )
                )
               )
               (call $_llvm_stackrestore
                (get_local $42)
               )
               (set_local $9
                (get_local $4)
               )
               (br $__rjti$11)
              )
             )
            )
           )
           (call $_llvm_stackrestore
            (get_local $42)
           )
          )
         )
         (br $label$break$L332)
        )
        (i32.store
         (get_local $80)
         (tee_local $4
          (block $switch84 (result i32)
           (block $switch-default89
            (block $switch-case88
             (block $switch-case86
              (block $switch-case85
               (br_table $switch-case85 $switch-case86 $switch-case86 $switch-case88 $switch-default89
                (i32.sub
                 (get_local $39)
                 (i32.const 1101)
                )
               )
              )
              (br $switch84
               (i32.const 13)
              )
             )
             (br $switch84
              (i32.const 17)
             )
            )
            (br $switch84
             (i32.const 19)
            )
           )
           (i32.const 21)
          )
         )
        )
        (drop
         (call $_opus_custom_encoder_ctl
          (get_local $17)
          (i32.const 10012)
          (get_local $80)
         )
        )
        (i32.store
         (get_local $79)
         (i32.load
          (get_local $28)
         )
        )
        (drop
         (call $_opus_custom_encoder_ctl
          (get_local $17)
          (i32.const 10008)
          (get_local $79)
         )
        )
        (i32.store
         (get_local $78)
         (i32.const -1)
        )
        (drop
         (call $_opus_custom_encoder_ctl
          (get_local $17)
          (i32.const 4002)
          (get_local $78)
         )
        )
        (block $do-once90
         (if
          (i32.eq
           (i32.load
            (get_local $12)
           )
           (i32.const 1000)
          )
          (block
           (set_local $7
            (get_global $STACKTOP)
           )
           (set_global $STACKTOP
            (i32.add
             (get_global $STACKTOP)
             (i32.and
              (i32.add
               (i32.shl
                (i32.div_s
                 (i32.mul
                  (tee_local $4
                   (i32.load
                    (get_local $22)
                   )
                  )
                  (i32.load
                   (get_local $24)
                  )
                 )
                 (i32.const 400)
                )
                (i32.const 2)
               )
               (i32.const 15)
              )
              (i32.const -16)
             )
            )
           )
          )
          (block
           (i32.store
            (get_local $77)
            (i32.const 0)
           )
           (drop
            (call $_opus_custom_encoder_ctl
             (get_local $17)
             (i32.const 4006)
             (get_local $77)
            )
           )
           (i32.store
            (get_local $76)
            (if (result i32)
             (i32.load offset=76
              (get_local $0)
             )
             (i32.const 0)
             (i32.const 2)
            )
           )
           (drop
            (call $_opus_custom_encoder_ctl
             (get_local $17)
             (i32.const 10002)
             (get_local $76)
            )
           )
           (set_local $7
            (i32.eqz
             (i32.load
              (get_local $37)
             )
            )
           )
           (set_local $11
            (block $__rjto$4 (result i32)
             (block $__rjti$4
              (block $__rjti$3
               (br $__rjto$4
                (if (result i32)
                 (i32.eq
                  (tee_local $4
                   (i32.load
                    (get_local $12)
                   )
                  )
                  (i32.const 1001)
                 )
                 (if (result i32)
                  (get_local $7)
                  (block (result i32)
                   (set_local $7
                    (get_global $STACKTOP)
                   )
                   (set_global $STACKTOP
                    (i32.add
                     (get_global $STACKTOP)
                     (i32.and
                      (i32.add
                       (i32.shl
                        (tee_local $14
                         (i32.div_s
                          (i32.mul
                           (tee_local $11
                            (i32.load
                             (get_local $22)
                            )
                           )
                           (tee_local $10
                            (i32.load
                             (get_local $24)
                            )
                           )
                          )
                          (i32.const 400)
                         )
                        )
                        (i32.const 2)
                       )
                       (i32.const 15)
                      )
                      (i32.const -16)
                     )
                    )
                   )
                   (set_local $8
                    (get_local $4)
                   )
                   (set_local $4
                    (get_local $11)
                   )
                   (get_local $14)
                  )
                  (block
                   (i32.store
                    (get_local $75)
                    (i32.sub
                     (i32.load
                      (get_local $40)
                     )
                     (i32.load offset=36
                      (get_local $0)
                     )
                    )
                   )
                   (drop
                    (call $_opus_custom_encoder_ctl
                     (get_local $17)
                     (i32.const 4002)
                     (get_local $75)
                    )
                   )
                   (i32.store
                    (get_local $74)
                    (i32.const 0)
                   )
                   (drop
                    (call $_opus_custom_encoder_ctl
                     (get_local $17)
                     (i32.const 4020)
                     (get_local $74)
                    )
                   )
                   (br $__rjti$3)
                  )
                 )
                 (block
                  (br_if $__rjti$4
                   (get_local $7)
                  )
                  (i32.store
                   (get_local $73)
                   (i32.const 1)
                  )
                  (drop
                   (call $_opus_custom_encoder_ctl
                    (get_local $17)
                    (i32.const 4006)
                    (get_local $73)
                   )
                  )
                  (i32.store
                   (get_local $72)
                   (i32.load offset=152
                    (get_local $0)
                   )
                  )
                  (drop
                   (call $_opus_custom_encoder_ctl
                    (get_local $17)
                    (i32.const 4020)
                    (get_local $72)
                   )
                  )
                  (i32.store
                   (get_local $71)
                   (i32.load
                    (get_local $40)
                   )
                  )
                  (drop
                   (call $_opus_custom_encoder_ctl
                    (get_local $17)
                    (i32.const 4002)
                    (get_local $71)
                   )
                  )
                  (br $__rjti$3)
                 )
                )
               )
              )
              (set_local $4
               (i32.load
                (get_local $12)
               )
              )
             )
             (set_local $7
              (get_global $STACKTOP)
             )
             (set_global $STACKTOP
              (i32.add
               (get_global $STACKTOP)
               (i32.and
                (i32.add
                 (i32.shl
                  (tee_local $14
                   (i32.div_s
                    (i32.mul
                     (tee_local $11
                      (i32.load
                       (get_local $22)
                      )
                     )
                     (tee_local $10
                      (i32.load
                       (get_local $24)
                      )
                     )
                    )
                    (i32.const 400)
                   )
                  )
                  (i32.const 2)
                 )
                 (i32.const 15)
                )
                (i32.const -16)
               )
              )
             )
             (if (result i32)
              (i32.eq
               (get_local $4)
               (i32.const 1000)
              )
              (block
               (set_local $4
                (get_local $11)
               )
               (br $do-once90)
              )
              (block (result i32)
               (set_local $8
                (get_local $4)
               )
               (set_local $4
                (get_local $11)
               )
               (get_local $14)
              )
             )
            )
           )
           (br_if $do-once90
            (i32.eqz
             (i32.and
              (i32.ne
               (get_local $8)
               (tee_local $8
                (i32.load
                 (get_local $54)
                )
               )
              )
              (i32.gt_s
               (get_local $8)
               (i32.const 0)
              )
             )
            )
           )
           (drop
            (call $_memcpy
             (get_local $7)
             (i32.add
              (i32.add
               (get_local $0)
               (i32.const 14276)
              )
              (i32.shl
               (i32.mul
                (i32.sub
                 (i32.sub
                  (i32.load
                   (get_local $19)
                  )
                  (get_local $36)
                 )
                 (i32.div_s
                  (get_local $10)
                  (i32.const 400)
                 )
                )
                (get_local $4)
               )
               (i32.const 2)
              )
             )
             (i32.shl
              (get_local $11)
              (i32.const 2)
             )
            )
           )
          )
         )
        )
        (set_local $10
         (i32.add
          (get_local $0)
          (i32.const 14276)
         )
        )
        (if
         (i32.gt_s
          (i32.mul
           (get_local $4)
           (i32.sub
            (tee_local $8
             (i32.load
              (get_local $19)
             )
            )
            (get_local $46)
           )
          )
          (i32.const 0)
         )
         (block
          (drop
           (call $_memmove
            (get_local $10)
            (i32.add
             (i32.add
              (get_local $0)
              (i32.const 14276)
             )
             (i32.shl
              (i32.mul
               (get_local $4)
               (get_local $2)
              )
              (i32.const 2)
             )
            )
            (i32.shl
             (tee_local $8
              (i32.mul
               (get_local $4)
               (i32.sub
                (i32.sub
                 (get_local $8)
                 (get_local $2)
                )
                (get_local $36)
               )
              )
             )
             (i32.const 2)
            )
           )
          )
          (drop
           (call $_memcpy
            (i32.add
             (i32.add
              (get_local $0)
              (i32.const 14276)
             )
             (i32.shl
              (get_local $8)
              (i32.const 2)
             )
            )
            (get_local $18)
            (i32.shl
             (i32.mul
              (get_local $46)
              (get_local $4)
             )
             (i32.const 2)
            )
           )
          )
         )
         (drop
          (call $_memcpy
           (get_local $10)
           (i32.add
            (get_local $18)
            (i32.shl
             (i32.mul
              (i32.sub
               (get_local $46)
               (get_local $8)
              )
              (get_local $4)
             )
             (i32.const 2)
            )
           )
           (i32.shl
            (i32.mul
             (get_local $8)
             (get_local $4)
            )
            (i32.const 2)
           )
          )
         )
        )
        (if
         (i32.or
          (f32.lt
           (tee_local $31
            (f32.load
             (tee_local $4
              (i32.add
               (get_local $0)
               (i32.const 14200)
              )
             )
            )
           )
           (f32.const 1)
          )
          (f32.lt
           (get_local $20)
           (f32.const 1)
          )
         )
         (call $_gain_fade
          (get_local $18)
          (get_local $18)
          (get_local $31)
          (get_local $20)
          (i32.load offset=4
           (tee_local $8
            (i32.load
             (get_local $45)
            )
           )
          )
          (get_local $2)
          (i32.load
           (get_local $22)
          )
          (i32.load offset=60
           (get_local $8)
          )
          (i32.load
           (get_local $24)
          )
         )
        )
        (f32.store
         (get_local $4)
         (get_local $20)
        )
        (block $do-once94
         (block $__rjti$6
          (br_if $__rjti$6
           (i32.ne
            (tee_local $4
             (i32.load
              (get_local $12)
             )
            )
            (i32.const 1001)
           )
          )
          (br_if $__rjti$6
           (i32.eq
            (i32.load
             (get_local $28)
            )
            (i32.const 1)
           )
          )
          (br $do-once94)
         )
         (if
          (i32.gt_s
           (get_local $26)
           (i32.const 32000)
          )
          (block
           (i32.store offset=92
            (get_local $0)
            (i32.const 16384)
           )
           (br $do-once94)
          )
         )
         (if
          (i32.lt_s
           (get_local $26)
           (i32.const 16000)
          )
          (i32.store offset=92
           (get_local $0)
           (i32.const 0)
          )
          (i32.store offset=92
           (get_local $0)
           (i32.sub
            (i32.const 16384)
            (i32.div_s
             (i32.sub
              (i32.const 65536000)
              (i32.shl
               (get_local $26)
               (i32.const 11)
              )
             )
             (i32.add
              (get_local $26)
              (i32.const -14000)
             )
            )
           )
          )
         )
        )
        (block $do-once96
         (if
          (i32.eqz
           (i32.load
            (i32.add
             (get_local $0)
             (i32.const 14252)
            )
           )
          )
          (block
           (br_if $do-once96
            (i32.ne
             (i32.load
              (get_local $22)
             )
             (i32.const 2)
            )
           )
           (br_if $do-once96
            (i32.eqz
             (i32.or
              (i32.lt_s
               (tee_local $10
                (i32.load16_s
                 (tee_local $8
                  (i32.add
                   (get_local $0)
                   (i32.const 14192)
                  )
                 )
                )
               )
               (i32.const 16384)
              )
              (i32.lt_s
               (tee_local $14
                (i32.load
                 (tee_local $11
                  (i32.add
                   (get_local $0)
                   (i32.const 92)
                  )
                 )
                )
               )
               (i32.const 16384)
              )
             )
            )
           )
           (call $_stereo_fade
            (get_local $18)
            (get_local $18)
            (f32.mul
             (f32.convert_s/i32
              (get_local $10)
             )
             (f32.const 0.00006103515625)
            )
            (f32.mul
             (f32.convert_s/i32
              (get_local $14)
             )
             (f32.const 0.00006103515625)
            )
            (i32.load offset=4
             (tee_local $4
              (i32.load
               (get_local $45)
              )
             )
            )
            (get_local $2)
            (i32.load offset=60
             (get_local $4)
            )
            (i32.load
             (get_local $24)
            )
           )
           (i32.store16
            (get_local $8)
            (i32.load
             (get_local $11)
            )
           )
           (set_local $4
            (i32.load
             (get_local $12)
            )
           )
          )
         )
        )
        (set_local $4
         (block $__rjto$7 (result i32)
          (block $__rjti$7
           (br_if $__rjti$7
            (i32.eq
             (get_local $4)
             (i32.const 1002)
            )
           )
           (br_if $__rjti$7
            (i32.gt_s
             (i32.add
              (i32.add
               (call $_ec_tell
                (i32.load
                 (tee_local $8
                  (i32.add
                   (get_local $25)
                   (i32.const 20)
                  )
                 )
                )
                (i32.load
                 (tee_local $11
                  (i32.add
                   (get_local $25)
                   (i32.const 28)
                  )
                 )
                )
               )
               (i32.const 17)
              )
              (if (result i32)
               (tee_local $4
                (i32.eq
                 (get_local $4)
                 (i32.const 1001)
                )
               )
               (i32.const 20)
               (i32.const 0)
              )
             )
             (i32.add
              (i32.shl
               (get_local $6)
               (i32.const 3)
              )
              (i32.const -8)
             )
            )
           )
           (if
            (get_local $4)
            (call $_ec_enc_bit_logp
             (get_local $25)
             (get_local $5)
             (i32.const 12)
            )
           )
           (br_if $__rjti$7
            (i32.eqz
             (get_local $5)
            )
           )
           (call $_ec_enc_bit_logp
            (get_local $25)
            (get_local $23)
            (i32.const 1)
           )
           (set_local $10
            (i32.eq
             (i32.load
              (get_local $12)
             )
             (i32.const 1001)
            )
           )
           (set_local $4
            (call $_ec_tell
             (i32.load
              (get_local $8)
             )
             (i32.load
              (get_local $11)
             )
            )
           )
           (set_local $8
            (block $__rjto$5 (result i32)
             (block $__rjti$5
              (br $__rjto$5
               (if (result i32)
                (i32.lt_s
                 (if (result i32)
                  (i32.lt_s
                   (tee_local $4
                    (i32.sub
                     (get_local $34)
                     (i32.shr_s
                      (i32.add
                       (get_local $4)
                       (if (result i32)
                        (get_local $10)
                        (i32.const 18)
                        (i32.const 7)
                       )
                      )
                      (i32.const 3)
                     )
                    )
                   )
                   (get_local $9)
                  )
                  (get_local $4)
                  (tee_local $4
                   (get_local $9)
                  )
                 )
                 (i32.const 2)
                )
                (block
                 (set_local $4
                  (i32.const 2)
                 )
                 (br $__rjti$5)
                )
                (if (result i32)
                 (i32.gt_s
                  (get_local $4)
                  (i32.const 257)
                 )
                 (i32.const 257)
                 (br $__rjti$5)
                )
               )
              )
             )
             (get_local $4)
            )
           )
           (if
            (i32.eqz
             (get_local $10)
            )
            (block
             (set_local $9
              (get_local $8)
             )
             (br $__rjto$7
              (get_local $5)
             )
            )
           )
           (call $_ec_enc_uint
            (get_local $25)
            (i32.add
             (get_local $8)
             (i32.const -2)
            )
            (i32.const 256)
           )
           (set_local $9
            (get_local $8)
           )
           (br $__rjto$7
            (get_local $5)
           )
          )
          (i32.store
           (get_local $44)
           (i32.const 0)
          )
          (set_local $9
           (i32.const 0)
          )
          (i32.const 0)
         )
        )
        (set_local $8
         (if (result i32)
          (i32.eq
           (tee_local $10
            (i32.load
             (get_local $12)
            )
           )
           (i32.const 1000)
          )
          (block (result i32)
           (set_local $5
            (i32.shr_s
             (i32.add
              (call $_ec_tell
               (i32.load offset=20
                (get_local $25)
               )
               (i32.load offset=28
                (get_local $25)
               )
              )
              (i32.const 7)
             )
             (i32.const 3)
            )
           )
           (call $_ec_enc_done
            (get_local $25)
           )
           (get_local $5)
          )
          (block (result i32)
           (call $_ec_enc_shrink
            (get_local $25)
            (tee_local $5
             (i32.sub
              (get_local $34)
              (get_local $9)
             )
            )
           )
           (i32.const 0)
          )
         )
        )
        (set_local $11
         (if (result i32)
          (i32.eq
           (get_local $10)
           (i32.const 1002)
          )
          (i32.const 0)
          (i32.const 17)
         )
        )
        (block $do-once100
         (block $__rjti$8
          (br_if $__rjti$8
           (i32.eqz
            (tee_local $10
             (i32.eqz
              (get_local $4)
             )
            )
           )
          )
          (br_if $__rjti$8
           (i32.ne
            (i32.load
             (get_local $12)
            )
            (i32.const 1000)
           )
          )
          (br $do-once100)
         )
         (i32.store
          (get_local $70)
          (get_local $29)
         )
         (drop
          (call $_opus_custom_encoder_ctl
           (get_local $17)
           (i32.const 10022)
           (get_local $70)
          )
         )
         (if
          (i32.eq
           (i32.load
            (get_local $12)
           )
           (i32.const 1001)
          )
          (block
           (i32.store
            (get_local $52)
            (i32.load offset=100
             (get_local $0)
            )
           )
           (i32.store offset=4
            (get_local $52)
            (i32.load offset=104
             (get_local $0)
            )
           )
           (i32.store
            (get_local $69)
            (get_local $52)
           )
           (drop
            (call $_opus_custom_encoder_ctl
             (get_local $17)
             (i32.const 10028)
             (get_local $69)
            )
           )
          )
         )
         (br_if $do-once100
          (i32.or
           (get_local $10)
           (i32.eqz
            (get_local $23)
           )
          )
         )
         (i32.store
          (get_local $68)
          (i32.const 0)
         )
         (drop
          (call $_opus_custom_encoder_ctl
           (get_local $17)
           (i32.const 10010)
           (get_local $68)
          )
         )
         (i32.store
          (get_local $67)
          (i32.const 0)
         )
         (drop
          (call $_opus_custom_encoder_ctl
           (get_local $17)
           (i32.const 4006)
           (get_local $67)
          )
         )
         (i32.store
          (get_local $66)
          (i32.const -1)
         )
         (drop
          (call $_opus_custom_encoder_ctl
           (get_local $17)
           (i32.const 4002)
           (get_local $66)
          )
         )
         (if
          (i32.lt_s
           (call $_celt_encode_with_ec
            (get_local $17)
            (get_local $18)
            (i32.div_s
             (i32.load
              (get_local $24)
             )
             (i32.const 200)
            )
            (i32.add
             (get_local $33)
             (get_local $5)
            )
            (get_local $9)
            (i32.const 0)
           )
           (i32.const 0)
          )
          (block
           (set_local $0
            (i32.const -3)
           )
           (br $label$break$L332)
          )
         )
         (i32.store
          (get_local $65)
          (get_local $51)
         )
         (drop
          (call $_opus_custom_encoder_ctl
           (get_local $17)
           (i32.const 4031)
           (get_local $65)
          )
         )
         (drop
          (call $_opus_custom_encoder_ctl
           (get_local $17)
           (i32.const 4028)
           (get_local $85)
          )
         )
        )
        (i32.store
         (get_local $64)
         (get_local $11)
        )
        (drop
         (call $_opus_custom_encoder_ctl
          (get_local $17)
          (i32.const 10010)
          (get_local $64)
         )
        )
        (set_local $4
         (block $__rjto$10 (result i32)
          (block $__rjti$10
           (block $__rjti$9
            (br_if $__rjti$9
             (i32.eq
              (tee_local $11
               (i32.load
                (get_local $12)
               )
              )
              (i32.const 1000)
             )
            )
            (if
             (i32.and
              (i32.ne
               (get_local $11)
               (tee_local $11
                (i32.load
                 (get_local $54)
                )
               )
              )
              (i32.gt_s
               (get_local $11)
               (i32.const 0)
              )
             )
             (block
              (drop
               (call $_opus_custom_encoder_ctl
                (get_local $17)
                (i32.const 4028)
                (get_local $84)
               )
              )
              (drop
               (call $_celt_encode_with_ec
                (get_local $17)
                (get_local $7)
                (i32.div_s
                 (i32.load
                  (get_local $24)
                 )
                 (i32.const 400)
                )
                (get_local $86)
                (i32.const 2)
                (i32.const 0)
               )
              )
              (i32.store
               (get_local $63)
               (i32.const 0)
              )
              (drop
               (call $_opus_custom_encoder_ctl
                (get_local $17)
                (i32.const 10002)
                (get_local $63)
               )
              )
             )
            )
            (br_if $__rjti$9
             (i32.gt_s
              (call $_ec_tell
               (i32.load offset=20
                (get_local $25)
               )
               (i32.load offset=28
                (get_local $25)
               )
              )
              (i32.shl
               (get_local $5)
               (i32.const 3)
              )
             )
            )
            (block $do-once104
             (if
              (i32.eqz
               (i32.or
                (get_local $10)
                (i32.eqz
                 (get_local $23)
                )
               )
              )
              (block
               (br_if $do-once104
                (i32.ne
                 (i32.load
                  (get_local $12)
                 )
                 (i32.const 1001)
                )
               )
               (br_if $do-once104
                (i32.eqz
                 (i32.load
                  (get_local $37)
                 )
                )
               )
               (i32.store
                (get_local $62)
                (i32.sub
                 (i32.load
                  (get_local $40)
                 )
                 (i32.load offset=36
                  (get_local $0)
                 )
                )
               )
               (drop
                (call $_opus_custom_encoder_ctl
                 (get_local $17)
                 (i32.const 4002)
                 (get_local $62)
                )
               )
              )
             )
            )
            (i32.store
             (get_local $61)
             (i32.load
              (get_local $37)
             )
            )
            (drop
             (call $_opus_custom_encoder_ctl
              (get_local $17)
              (i32.const 4006)
              (get_local $61)
             )
            )
            (if
             (i32.lt_s
              (tee_local $7
               (call $_celt_encode_with_ec
                (get_local $17)
                (get_local $18)
                (get_local $2)
                (i32.const 0)
                (get_local $5)
                (get_local $25)
               )
              )
              (i32.const 0)
             )
             (block
              (set_local $0
               (i32.const -3)
              )
              (br $label$break$L332)
             )
            )
            (if
             (get_local $10)
             (block
              (set_local $5
               (i32.const 0)
              )
              (br $__rjto$10
               (get_local $7)
              )
             )
            )
            (br_if $__rjti$10
             (i32.eqz
              (get_local $23)
             )
            )
            (if
             (i32.ne
              (i32.load
               (get_local $12)
              )
              (i32.const 1001)
             )
             (block
              (set_local $5
               (get_local $4)
              )
              (br $__rjto$10
               (get_local $7)
              )
             )
            )
            (if
             (i32.eqz
              (i32.load
               (get_local $37)
              )
             )
             (block
              (set_local $5
               (get_local $4)
              )
              (br $__rjto$10
               (get_local $7)
              )
             )
            )
            (drop
             (call $_memmove
              (i32.add
               (get_local $33)
               (get_local $7)
              )
              (i32.add
               (get_local $33)
               (get_local $5)
              )
              (get_local $9)
             )
            )
            (set_local $5
             (get_local $4)
            )
            (br $__rjto$10
             (get_local $7)
            )
           )
           (if
            (get_local $10)
            (block
             (set_local $5
              (i32.const 0)
             )
             (br $__rjto$10
              (get_local $8)
             )
            )
           )
           (br $__rjto$10
            (if (result i32)
             (get_local $23)
             (block (result i32)
              (set_local $5
               (get_local $4)
              )
              (get_local $8)
             )
             (block
              (set_local $7
               (get_local $8)
              )
              (br $__rjti$10)
             )
            )
           )
          )
          (set_local $8
           (i32.div_s
            (tee_local $10
             (i32.load
              (get_local $24)
             )
            )
            (i32.const 200)
           )
          )
          (set_local $10
           (i32.div_s
            (get_local $10)
            (i32.const 400)
           )
          )
          (drop
           (call $_opus_custom_encoder_ctl
            (get_local $17)
            (i32.const 4028)
            (get_local $83)
           )
          )
          (i32.store
           (get_local $60)
           (i32.const 0)
          )
          (drop
           (call $_opus_custom_encoder_ctl
            (get_local $17)
            (i32.const 10010)
            (get_local $60)
           )
          )
          (i32.store
           (get_local $59)
           (i32.const 0)
          )
          (drop
           (call $_opus_custom_encoder_ctl
            (get_local $17)
            (i32.const 10002)
            (get_local $59)
           )
          )
          (i32.store
           (get_local $58)
           (i32.const 0)
          )
          (drop
           (call $_opus_custom_encoder_ctl
            (get_local $17)
            (i32.const 4006)
            (get_local $58)
           )
          )
          (i32.store
           (get_local $57)
           (i32.const -1)
          )
          (drop
           (call $_opus_custom_encoder_ctl
            (get_local $17)
            (i32.const 4002)
            (get_local $57)
           )
          )
          (if
           (i32.eq
            (i32.load
             (get_local $12)
            )
            (i32.const 1001)
           )
           (block
            (call $_ec_enc_shrink
             (get_local $25)
             (get_local $7)
            )
            (set_local $5
             (get_local $7)
            )
           )
          )
          (drop
           (call $_celt_encode_with_ec
            (get_local $17)
            (i32.add
             (get_local $18)
             (i32.shl
              (i32.mul
               (i32.load
                (get_local $22)
               )
               (i32.sub
                (tee_local $11
                 (i32.sub
                  (get_local $2)
                  (get_local $8)
                 )
                )
                (get_local $10)
               )
              )
              (i32.const 2)
             )
            )
            (get_local $10)
            (get_local $87)
            (i32.const 2)
            (i32.const 0)
           )
          )
          (if
           (i32.lt_s
            (call $_celt_encode_with_ec
             (get_local $17)
             (i32.add
              (get_local $18)
              (i32.shl
               (i32.mul
                (i32.load
                 (get_local $22)
                )
                (get_local $11)
               )
               (i32.const 2)
              )
             )
             (get_local $8)
             (i32.add
              (get_local $33)
              (get_local $5)
             )
             (get_local $9)
             (i32.const 0)
            )
            (i32.const 0)
           )
           (block
            (set_local $0
             (i32.const -3)
            )
            (br $label$break$L332)
           )
          )
          (i32.store
           (get_local $56)
           (get_local $51)
          )
          (drop
           (call $_opus_custom_encoder_ctl
            (get_local $17)
            (i32.const 4031)
            (get_local $56)
           )
          )
          (set_local $5
           (get_local $4)
          )
          (get_local $7)
         )
        )
        (set_local $7
         (call $_gen_toc
          (i32.load
           (get_local $12)
          )
          (i32.div_s
           (i32.load
            (get_local $24)
           )
           (get_local $2)
          )
          (get_local $39)
          (i32.load
           (get_local $28)
          )
         )
        )
        (i32.store8
         (get_local $3)
         (get_local $7)
        )
        (i32.store
         (get_local $47)
         (i32.xor
          (tee_local $7
           (i32.load
            (tee_local $10
             (i32.add
              (get_local $25)
              (i32.const 28)
             )
            )
           )
          )
          (i32.load
           (get_local $51)
          )
         )
        )
        (i32.store
         (get_local $54)
         (tee_local $8
          (if (result i32)
           (get_local $38)
           (i32.const 1002)
           (i32.load
            (get_local $12)
           )
          )
         )
        )
        (i32.store
         (i32.add
          (get_local $0)
          (i32.const 14228)
         )
         (i32.load
          (get_local $28)
         )
        )
        (i32.store
         (i32.add
          (get_local $0)
          (i32.const 14232)
         )
         (get_local $2)
        )
        (i32.store
         (i32.add
          (get_local $0)
          (i32.const 14248)
         )
         (i32.const 0)
        )
        (set_local $0
         (block $do-once108 (result i32)
          (if (result i32)
           (i32.load offset=184
            (get_local $0)
           )
           (block (result i32)
            (drop
             (br_if $do-once108
              (get_local $7)
              (i32.eqz
               (i32.or
                (i32.load
                 (get_local $29)
                )
                (get_local $27)
               )
              )
             )
            )
            (if (result i32)
             (call $_decide_dtx_mode
              (f32.load offset=36
               (get_local $29)
              )
              (i32.add
               (get_local $0)
               (i32.const 18120)
              )
              (f32.load
               (i32.add
                (get_local $0)
                (i32.const 18124)
               )
              )
              (get_local $1)
              (get_local $2)
              (i32.load
               (get_local $22)
              )
              (get_local $27)
             )
             (block
              (i32.store
               (get_local $47)
               (i32.const 0)
              )
              (set_local $0
               (call $_gen_toc
                (i32.load
                 (get_local $12)
                )
                (i32.div_s
                 (i32.load
                  (get_local $24)
                 )
                 (get_local $2)
                )
                (get_local $39)
                (i32.load
                 (get_local $28)
                )
               )
              )
              (i32.store8
               (get_local $3)
               (get_local $0)
              )
              (set_local $0
               (i32.const 1)
              )
              (br $label$break$L332)
             )
             (i32.load
              (get_local $10)
             )
            )
           )
           (get_local $7)
          )
         )
        )
        (block $label$break$L445
         (if
          (i32.gt_s
           (call $_ec_tell
            (i32.load offset=20
             (get_local $25)
            )
            (get_local $0)
           )
           (i32.add
            (i32.shl
             (get_local $6)
             (i32.const 3)
            )
            (i32.const -8)
           )
          )
          (block
           (if
            (i32.lt_s
             (get_local $6)
             (i32.const 2)
            )
            (block
             (set_local $0
              (i32.const -2)
             )
             (br $label$break$L332)
            )
           )
           (i32.store8
            (get_local $33)
            (i32.const 0)
           )
           (i32.store
            (get_local $47)
            (i32.const 0)
           )
           (set_local $4
            (i32.const 1)
           )
          )
          (block
           (br_if $label$break$L445
            (i32.eqz
             (i32.and
              (i32.eq
               (i32.load
                (get_local $12)
               )
               (i32.const 1000)
              )
              (i32.eqz
               (get_local $5)
              )
             )
            )
           )
           (loop $while-in112
            (br_if $label$break$L445
             (i32.le_s
              (get_local $4)
              (i32.const 2)
             )
            )
            (if
             (i32.eqz
              (i32.load8_s
               (i32.add
                (get_local $3)
                (get_local $4)
               )
              )
             )
             (block
              (set_local $4
               (i32.add
                (get_local $4)
                (i32.const -1)
               )
              )
              (br $while-in112)
             )
            )
           )
          )
         )
        )
        (set_local $0
         (i32.add
          (get_local $4)
          (i32.add
           (get_local $9)
           (i32.const 1)
          )
         )
        )
        (if
         (i32.eqz
          (i32.load
           (get_local $37)
          )
         )
         (set_local $0
          (if (result i32)
           (call $_opus_packet_pad
            (get_local $3)
            (get_local $0)
            (get_local $6)
           )
           (block
            (set_local $0
             (i32.const -3)
            )
            (br $label$break$L332)
           )
           (get_local $6)
          )
         )
        )
       )
       (call $_llvm_stackrestore
        (get_local $88)
       )
       (set_global $STACKTOP
        (get_local $30)
       )
       (return
        (get_local $0)
       )
      )
      (set_local $2
       (i32.div_s
        (get_local $2)
        (get_local $5)
       )
      )
      (if
       (i32.ne
        (get_local $8)
        (i32.const -1)
       )
       (block
        (i32.store
         (i32.add
          (get_local $0)
          (i32.const 7636)
         )
         (get_local $8)
        )
        (i32.store
         (i32.add
          (get_local $0)
          (i32.const 7640)
         )
         (get_local $9)
        )
       )
      )
      (set_local $0
       (call $_encode_multiframe_packet
        (get_local $0)
        (get_local $1)
        (get_local $2)
        (get_local $5)
        (get_local $3)
        (get_local $4)
        (get_local $38)
        (get_local $33)
        (get_local $11)
       )
      )
      (set_global $STACKTOP
       (get_local $30)
      )
      (return
       (get_local $0)
      )
     )
    )
   )
  )
  (set_local $8
   (i32.load
    (i32.add
     (get_local $0)
     (i32.const 14220)
    )
   )
  )
  (if
   (i32.eqz
    (tee_local $1
     (i32.load
      (i32.add
       (get_local $0)
       (i32.const 14236)
      )
     )
    )
   )
   (set_local $1
    (i32.const 1101)
   )
  )
  (if
   (i32.eqz
    (get_local $8)
   )
   (set_local $8
    (i32.const 1000)
   )
  )
  (set_local $0
   (i32.and
    (call $_gen_toc
     (tee_local $5
      (block $__rjto$20 (result i32)
       (block $__rjti$20
        (block $__rjti$19
         (br $__rjto$20
          (if (result i32)
           (i32.gt_s
            (get_local $21)
            (i32.const 100)
           )
           (block
            (set_local $4
             (i32.const 0)
            )
            (set_local $5
             (i32.const 0)
            )
            (set_local $2
             (get_local $21)
            )
            (br $__rjti$19)
           )
           (block (result i32)
            (block $label$break$L476
             (block $__rjti$17
              (set_local $2
               (if (result i32)
                (i32.eq
                 (get_local $21)
                 (i32.const 25)
                )
                (if (result i32)
                 (i32.eq
                  (get_local $8)
                  (i32.const 1000)
                 )
                 (block (result i32)
                  (set_local $4
                   (i32.const 0)
                  )
                  (set_local $5
                   (i32.const 0)
                  )
                  (i32.const 25)
                 )
                 (block
                  (set_local $4
                   (i32.const 0)
                  )
                  (set_local $5
                   (i32.const 1)
                  )
                  (set_local $2
                   (i32.const 50)
                  )
                  (br $__rjti$17)
                 )
                )
                (if (result i32)
                 (i32.lt_s
                  (get_local $21)
                  (i32.const 17)
                 )
                 (block (result i32)
                  (if
                   (i32.ne
                    (get_local $4)
                    (i32.const 1)
                   )
                   (if
                    (i32.or
                     (i32.ne
                      (get_local $8)
                      (i32.const 1000)
                     )
                     (i32.eq
                      (get_local $21)
                      (i32.const 10)
                     )
                    )
                    (block
                     (set_local $4
                      (i32.div_s
                       (i32.const 50)
                       (get_local $21)
                      )
                     )
                     (set_local $5
                      (i32.const 3)
                     )
                     (set_local $2
                      (i32.const 50)
                     )
                     (br $__rjti$17)
                    )
                   )
                  )
                  (set_local $4
                   (i32.const 0)
                  )
                  (set_local $5
                   (i32.lt_s
                    (get_local $21)
                    (i32.const 13)
                   )
                  )
                  (if (result i32)
                   (i32.eq
                    (get_local $21)
                    (i32.const 12)
                   )
                   (i32.const 25)
                   (i32.const 16)
                  )
                 )
                 (block
                  (set_local $4
                   (i32.const 0)
                  )
                  (set_local $5
                   (i32.const 0)
                  )
                  (set_local $2
                   (get_local $21)
                  )
                  (br $__rjti$17)
                 )
                )
               )
              )
              (br $label$break$L476)
             )
             (block $switch117
              (block $switch-default121
               (block $switch-case120
                (block $switch-case119
                 (block $switch-case118
                  (br_table $switch-case119 $switch-case120 $switch-case118 $switch-default121
                   (i32.sub
                    (get_local $8)
                    (i32.const 1000)
                   )
                  )
                 )
                 (br $__rjti$19)
                )
                (br $label$break$L476)
               )
               (br $switch117)
              )
              (set_local $6
               (get_local $1)
              )
              (set_local $1
               (get_local $5)
              )
              (br $__rjto$20
               (get_local $8)
              )
             )
             (set_local $6
              (if (result i32)
               (i32.gt_s
                (get_local $1)
                (i32.const 1104)
               )
               (get_local $1)
               (i32.const 1104)
              )
             )
             (set_local $1
              (get_local $5)
             )
             (br $__rjto$20
              (i32.const 1001)
             )
            )
            (if (result i32)
             (i32.gt_s
              (get_local $1)
              (i32.const 1103)
             )
             (block (result i32)
              (set_local $6
               (i32.const 1103)
              )
              (set_local $1
               (get_local $5)
              )
              (i32.const 1000)
             )
             (block
              (set_local $8
               (i32.const 1000)
              )
              (br $__rjti$20)
             )
            )
           )
          )
         )
        )
        (br $__rjto$20
         (if (result i32)
          (i32.eq
           (get_local $1)
           (i32.const 1102)
          )
          (block (result i32)
           (set_local $6
            (i32.const 1101)
           )
           (set_local $1
            (get_local $5)
           )
           (i32.const 1002)
          )
          (block
           (set_local $8
            (i32.const 1002)
           )
           (br $__rjti$20)
          )
         )
        )
       )
       (set_local $6
        (get_local $1)
       )
       (set_local $1
        (get_local $5)
       )
       (get_local $8)
      )
     )
     (get_local $2)
     (get_local $6)
     (i32.load
      (i32.add
       (get_local $0)
       (i32.const 14188)
      )
     )
    )
    (i32.const 255)
   )
  )
  (i32.store8
   (get_local $3)
   (i32.or
    (get_local $1)
    (get_local $0)
   )
  )
  (if
   (i32.eq
    (get_local $1)
    (i32.const 3)
   )
   (i32.store8 offset=1
    (get_local $3)
    (get_local $4)
   )
  )
  (if
   (i32.le_s
    (get_local $7)
    (tee_local $0
     (if (result i32)
      (i32.lt_s
       (get_local $1)
       (i32.const 2)
      )
      (i32.const 1)
      (i32.const 2)
     )
    )
   )
   (set_local $7
    (get_local $0)
   )
  )
  (if (result i32)
   (i32.load
    (get_local $37)
   )
   (block (result i32)
    (set_global $STACKTOP
     (get_local $30)
    )
    (get_local $0)
   )
   (block (result i32)
    (if
     (call $_opus_packet_pad
      (get_local $3)
      (get_local $0)
      (get_local $7)
     )
     (set_local $7
      (i32.const -3)
     )
    )
    (set_global $STACKTOP
     (get_local $30)
    )
    (get_local $7)
   )
  )
 )
 (func $_is_digital_silence (; 382 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (f32.le
   (call $_celt_maxabs16
    (get_local $0)
    (i32.mul
     (get_local $1)
     (get_local $2)
    )
   )
   (f32.div
    (f32.const 1)
    (f32.convert_s/i32
     (i32.shl
      (i32.const 1)
      (get_local $3)
     )
    )
   )
  )
 )
 (func $_compute_frame_energy (; 383 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result f32)
  (local $3 i32)
  (f32.div
   (call $_celt_inner_prod_c
    (get_local $0)
    (get_local $0)
    (tee_local $3
     (i32.mul
      (get_local $1)
      (get_local $2)
     )
    )
   )
   (f32.convert_s/i32
    (get_local $3)
   )
  )
 )
 (func $_user_bitrate_to_bitrate (; 384 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (if
   (i32.eqz
    (get_local $1)
   )
   (set_local $1
    (i32.div_s
     (i32.load offset=144
      (get_local $0)
     )
     (i32.const 400)
    )
   )
  )
  (block $switch (result i32)
   (block $switch-default
    (block $switch-case0
     (if
      (tee_local $4
       (i32.sub
        (tee_local $3
         (i32.load offset=164
          (get_local $0)
         )
        )
        (i32.const -1000)
       )
      )
      (if
       (i32.eq
        (get_local $4)
        (i32.const 999)
       )
       (br $switch-case0)
       (br $switch-default)
      )
     )
     (return
      (i32.add
       (i32.div_s
        (i32.mul
         (tee_local $2
          (i32.load offset=144
           (get_local $0)
          )
         )
         (i32.const 60)
        )
        (get_local $1)
       )
       (i32.mul
        (get_local $2)
        (i32.load offset=112
         (get_local $0)
        )
       )
      )
     )
    )
    (return
     (i32.div_s
      (i32.mul
       (i32.shl
        (get_local $2)
        (i32.const 3)
       )
       (i32.load offset=144
        (get_local $0)
       )
      )
      (get_local $1)
     )
    )
   )
   (get_local $3)
  )
 )
 (func $_gen_toc (; 385 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $1)
     (i32.const 400)
    )
    (block
     (set_local $1
      (i32.shl
       (get_local $1)
       (i32.const 1)
      )
     )
     (set_local $4
      (i32.add
       (get_local $4)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (i32.and
   (i32.or
    (tee_local $0
     (block $switch (result i32)
      (block $switch-default
       (block $switch-case0
        (block $switch-case
         (br_table $switch-case $switch-default $switch-case0 $switch-default
          (i32.sub
           (get_local $0)
           (i32.const 1000)
          )
         )
        )
        (br $switch
         (i32.or
          (i32.and
           (i32.add
            (i32.shl
             (get_local $2)
             (i32.const 5)
            )
            (i32.const 96)
           )
           (i32.const 224)
          )
          (i32.add
           (i32.shl
            (get_local $4)
            (i32.const 3)
           )
           (i32.const -16)
          )
         )
        )
       )
       (set_local $0
        (i32.shl
         (get_local $4)
         (i32.const 3)
        )
       )
       (set_local $1
        (i32.and
         (i32.sub
          (i32.shl
           (get_local $2)
           (i32.const 5)
          )
          (i32.const -64)
         )
         (i32.const 96)
        )
       )
       (br $switch
        (i32.or
         (i32.or
          (if (result i32)
           (i32.lt_s
            (get_local $2)
            (i32.const 1102)
           )
           (i32.const 0)
           (get_local $1)
          )
          (get_local $0)
         )
         (i32.const 128)
        )
       )
      )
      (i32.or
       (i32.or
        (i32.shl
         (get_local $2)
         (i32.const 4)
        )
        (i32.add
         (i32.shl
          (get_local $4)
          (i32.const 3)
         )
         (i32.const 240)
        )
       )
       (i32.const 96)
      )
     )
    )
    (i32.shl
     (i32.eq
      (get_local $3)
      (i32.const 2)
     )
     (i32.const 2)
    )
   )
   (i32.const 255)
  )
 )
 (func $_compute_equiv_rate (; 386 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (result i32)
  (if
   (i32.gt_s
    (get_local $2)
    (i32.const 50)
   )
   (set_local $0
    (i32.sub
     (get_local $0)
     (i32.mul
      (i32.add
       (i32.mul
        (get_local $1)
        (i32.const 40)
       )
       (i32.const 20)
      )
      (i32.add
       (get_local $2)
       (i32.const -50)
      )
     )
    )
   )
  )
  (if
   (i32.eqz
    (get_local $3)
   )
   (set_local $0
    (i32.sub
     (get_local $0)
     (i32.div_s
      (get_local $0)
      (i32.const 12)
     )
    )
   )
  )
  (set_local $0
   (i32.div_s
    (i32.mul
     (get_local $0)
     (i32.add
      (get_local $5)
      (i32.const 90)
     )
    )
    (i32.const 100)
   )
  )
  (block $switch (result i32)
   (block $switch-default
    (block $switch-case1
     (block $switch-case
      (br_table $switch-case $switch-case $switch-case1 $switch-default
       (i32.sub
        (get_local $4)
        (i32.const 1000)
       )
      )
     )
     (if
      (i32.lt_s
       (get_local $5)
       (i32.const 2)
      )
      (set_local $0
       (i32.div_s
        (i32.shl
         (get_local $0)
         (i32.const 2)
        )
        (i32.const 5)
       )
      )
     )
     (return
      (i32.sub
       (get_local $0)
       (i32.div_s
        (i32.mul
         (get_local $0)
         (get_local $6)
        )
        (i32.add
         (i32.mul
          (get_local $6)
          (i32.const 6)
         )
         (i32.const 10)
        )
       )
      )
     )
    )
    (if
     (i32.ge_s
      (get_local $5)
      (i32.const 5)
     )
     (return
      (get_local $0)
     )
    )
    (return
     (i32.div_s
      (i32.mul
       (get_local $0)
       (i32.const 9)
      )
      (i32.const 10)
     )
    )
   )
   (i32.sub
    (get_local $0)
    (i32.div_s
     (i32.mul
      (get_local $0)
      (get_local $6)
     )
     (i32.add
      (i32.mul
       (get_local $6)
       (i32.const 12)
      )
      (i32.const 20)
     )
    )
   )
  )
 )
 (func $_decide_fec (; 387 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (result i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (if
   (i32.or
    (i32.or
     (i32.eqz
      (get_local $0)
     )
     (i32.eqz
      (get_local $1)
     )
    )
    (i32.eq
     (get_local $3)
     (i32.const 1002)
    )
   )
   (return
    (i32.const 0)
   )
  )
  (set_local $7
   (i32.lt_s
    (get_local $1)
    (i32.const 25)
   )
  )
  (set_local $8
   (i32.sub
    (i32.const 125)
    (get_local $1)
   )
  )
  (set_local $9
   (i32.lt_s
    (get_local $1)
    (i32.const 6)
   )
  )
  (set_local $0
   (tee_local $10
    (i32.load
     (get_local $4)
    )
   )
  )
  (block $__rjto$0
   (block $__rjti$0
    (loop $while-in
     (block $while-out
      (set_local $3
       (i32.load
        (i32.add
         (i32.shl
          (tee_local $6
           (i32.shl
            (get_local $0)
            (i32.const 1)
           )
          )
          (i32.const 2)
         )
         (i32.const 20184)
        )
       )
      )
      (set_local $6
       (i32.load
        (i32.add
         (i32.shl
          (get_local $6)
          (i32.const 2)
         )
         (i32.const 20188)
        )
       )
      )
      (block $switch
       (block $switch-default
        (block $switch-case0
         (block $switch-case
          (br_table $switch-case0 $switch-case $switch-default
           (get_local $2)
          )
         )
         (set_local $3
          (i32.sub
           (get_local $3)
           (get_local $6)
          )
         )
         (br $switch)
        )
        (set_local $3
         (i32.add
          (get_local $3)
          (get_local $6)
         )
        )
       )
      )
      (set_local $6
       (i32.sub
        (i32.const 125)
        (get_local $1)
       )
      )
      (set_local $3
       (tee_local $6
        (i32.lt_s
         (i32.add
          (i32.mul
           (i32.shr_s
            (i32.mul
             (get_local $3)
             (if (result i32)
              (get_local $7)
              (get_local $8)
              (i32.const 100)
             )
            )
            (i32.const 16)
           )
           (i32.const 655)
          )
          (i32.shr_u
           (i32.mul
            (i32.and
             (i32.mul
              (get_local $3)
              (if (result i32)
               (get_local $7)
               (get_local $6)
               (i32.const 100)
              )
             )
             (i32.const 65535)
            )
            (i32.const 655)
           )
           (i32.const 16)
          )
         )
         (get_local $5)
        )
       )
      )
      (br_if $__rjti$0
       (i32.or
        (get_local $6)
        (get_local $9)
       )
      )
      (if
       (i32.gt_s
        (get_local $0)
        (i32.const 1101)
       )
       (block
        (i32.store
         (get_local $4)
         (tee_local $0
          (i32.add
           (get_local $0)
           (i32.const -1)
          )
         )
        )
        (br $while-in)
       )
      )
     )
    )
    (br $__rjto$0)
   )
   (return
    (get_local $3)
   )
  )
  (i32.store
   (get_local $4)
   (get_local $10)
  )
  (i32.const 0)
 )
 (func $_encode_multiframe_packet (; 388 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (param $8 i32) (result i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local $26 i32)
  (set_local $11
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.const 304)
   )
  )
  (if
   (i32.eqz
    (i32.load
     (tee_local $18
      (i32.add
       (get_local $0)
       (i32.const 148)
      )
     )
    )
   )
   (if
    (i32.ne
     (i32.load offset=164
      (get_local $0)
     )
     (i32.const -1)
    )
    (if
     (i32.lt_s
      (tee_local $9
       (i32.div_s
        (i32.mul
         (i32.load offset=160
          (get_local $0)
         )
         (i32.const 3)
        )
        (i32.div_s
         (i32.mul
          (i32.load offset=144
           (get_local $0)
          )
          (i32.const 24)
         )
         (i32.mul
          (get_local $3)
          (get_local $2)
         )
        )
       )
      )
      (get_local $5)
     )
     (set_local $5
      (get_local $9)
     )
    )
   )
  )
  (set_local $9
   (i32.shl
    (get_local $2)
    (i32.const 1)
   )
  )
  (set_local $9
   (i32.add
    (tee_local $12
     (i32.div_s
      (i32.sub
       (get_local $5)
       (if (result i32)
        (i32.eq
         (get_local $2)
         (i32.const 2)
        )
        (i32.const 3)
        (get_local $9)
       )
      )
      (get_local $2)
     )
    )
    (i32.const 1)
   )
  )
  (set_local $19
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.and
     (i32.add
      (i32.mul
       (if (result i32)
        (i32.gt_s
         (get_local $12)
         (i32.const 1275)
        )
        (tee_local $9
         (i32.const 1276)
        )
        (get_local $9)
       )
       (get_local $2)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (call $_opus_repacketizer_init
   (get_local $11)
  )
  (set_local $20
   (i32.load
    (tee_local $13
     (i32.add
      (get_local $0)
      (i32.const 136)
     )
    )
   )
  )
  (set_local $21
   (i32.load
    (tee_local $15
     (i32.add
      (get_local $0)
      (i32.const 128)
     )
    )
   )
  )
  (set_local $22
   (i32.load
    (tee_local $14
     (i32.add
      (get_local $0)
      (i32.const 120)
     )
    )
   )
  )
  (i32.store
   (get_local $13)
   (i32.load
    (i32.add
     (get_local $0)
     (i32.const 14220)
    )
   )
  )
  (i32.store
   (get_local $15)
   (i32.load
    (i32.add
     (get_local $0)
     (i32.const 14236)
    )
   )
  )
  (i32.store
   (get_local $14)
   (tee_local $12
    (i32.load
     (i32.add
      (get_local $0)
      (i32.const 14188)
     )
    )
   )
  )
  (if
   (tee_local $23
    (i32.load
     (tee_local $16
      (i32.add
       (get_local $0)
       (i32.const 68)
      )
     )
    )
   )
   (i32.store
    (get_local $14)
    (i32.const 1)
   )
   (i32.store
    (i32.add
     (get_local $0)
     (i32.const 14228)
    )
    (get_local $12)
   )
  )
  (set_local $17
   (i32.add
    (get_local $2)
    (i32.const -1)
   )
  )
  (set_local $24
   (i32.add
    (get_local $0)
    (i32.const 18128)
   )
  )
  (set_local $25
   (i32.ne
    (get_local $6)
    (i32.const 0)
   )
  )
  (set_local $26
   (i32.add
    (get_local $0)
    (i32.const 112)
   )
  )
  (block $__rjto$1 (result i32)
   (block $__rjti$1
    (block $__rjti$0
     (loop $while-in
      (block $while-out
       (br_if $__rjti$0
        (i32.ge_s
         (get_local $10)
         (get_local $2)
        )
       )
       (i32.store
        (get_local $16)
        (i32.const 0)
       )
       (i32.store
        (get_local $24)
        (i32.lt_s
         (get_local $10)
         (get_local $17)
        )
       )
       (if
        (i32.and
         (get_local $25)
         (i32.eq
          (get_local $10)
          (get_local $17)
         )
        )
        (i32.store
         (get_local $13)
         (i32.const 1002)
        )
       )
       (br_if $__rjti$1
        (i32.lt_s
         (tee_local $6
          (call $_opus_encode_native
           (get_local $0)
           (i32.add
            (get_local $1)
            (i32.shl
             (i32.mul
              (get_local $10)
              (i32.mul
               (i32.load
                (get_local $26)
               )
               (get_local $3)
              )
             )
             (i32.const 2)
            )
           )
           (get_local $3)
           (tee_local $12
            (i32.add
             (get_local $19)
             (i32.mul
              (get_local $10)
              (get_local $9)
             )
            )
           )
           (get_local $9)
           (get_local $7)
           (i32.const 0)
           (i32.const 0)
           (i32.const 0)
           (i32.const 0)
           (i32.const 0)
           (get_local $8)
          )
         )
         (i32.const 0)
        )
       )
       (br_if $__rjti$1
        (i32.lt_s
         (call $_opus_repacketizer_cat
          (get_local $11)
          (get_local $12)
          (get_local $6)
         )
         (i32.const 0)
        )
       )
       (set_local $10
        (i32.add
         (get_local $10)
         (i32.const 1)
        )
       )
       (br $while-in)
      )
     )
    )
    (if
     (i32.lt_s
      (tee_local $0
       (call $_opus_repacketizer_out_range_impl
        (get_local $11)
        (get_local $2)
        (get_local $4)
        (get_local $5)
        (i32.eqz
         (i32.load
          (get_local $18)
         )
        )
       )
      )
      (i32.const 0)
     )
     (block
      (set_global $STACKTOP
       (get_local $11)
      )
      (return
       (i32.const -3)
      )
     )
    )
    (i32.store
     (get_local $13)
     (get_local $20)
    )
    (i32.store
     (get_local $15)
     (get_local $21)
    )
    (i32.store
     (get_local $14)
     (get_local $22)
    )
    (i32.store
     (get_local $16)
     (get_local $23)
    )
    (set_global $STACKTOP
     (get_local $11)
    )
    (return
     (get_local $0)
    )
   )
   (set_global $STACKTOP
    (get_local $11)
   )
   (i32.const -3)
  )
 )
 (func $_compute_redundancy_bytes (; 389 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (if (result i32)
   (i32.gt_s
    (if (result i32)
     (i32.lt_s
      (tee_local $1
       (i32.div_s
        (i32.mul
         (i32.add
          (i32.mul
           (tee_local $4
            (i32.add
             (i32.mul
              (get_local $3)
              (i32.const 40)
             )
             (i32.const 20)
            )
           )
           (i32.sub
            (i32.const 200)
            (get_local $2)
           )
          )
          (get_local $1)
         )
         (i32.const 3)
        )
        (i32.const 3200)
       )
      )
      (tee_local $0
       (i32.div_s
        (i32.add
         (i32.div_s
          (i32.mul
           (i32.sub
            (i32.shl
             (get_local $0)
             (i32.const 3)
            )
            (i32.shl
             (get_local $4)
             (i32.const 1)
            )
           )
           (i32.const 240)
          )
          (i32.add
           (i32.div_s
            (i32.const 48000)
            (get_local $2)
           )
           (i32.const 240)
          )
         )
         (get_local $4)
        )
        (i32.const 8)
       )
      )
     )
     (get_local $1)
     (tee_local $1
      (get_local $0)
     )
    )
    (i32.or
     (i32.shl
      (get_local $3)
      (i32.const 3)
     )
     (i32.const 4)
    )
   )
   (if (result i32)
    (i32.lt_s
     (get_local $1)
     (i32.const 257)
    )
    (get_local $1)
    (i32.const 257)
   )
   (i32.const 0)
  )
 )
 (func $_hp_cutoff (; 390 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (call $_silk_biquad_float
   (get_local $0)
   (tee_local $6
    (i32.add
     (i32.mul
      (tee_local $1
       (i32.div_s
        (i32.mul
         (i32.shr_s
          (i32.shl
           (get_local $1)
           (i32.const 16)
          )
          (i32.const 16)
         )
         (i32.const 2471)
        )
        (i32.div_s
         (get_local $6)
         (i32.const 1000)
        )
       )
      )
      (i32.const -471)
     )
     (i32.const 268435456)
    )
   )
   (tee_local $9
    (i32.add
     (i32.mul
      (get_local $1)
      (i32.const 942)
     )
     (i32.const -536870912)
    )
   )
   (get_local $6)
   (tee_local $7
    (i32.add
     (i32.add
      (i32.mul
       (tee_local $8
        (i32.shr_s
         (get_local $6)
         (i32.const 22)
        )
       )
       (tee_local $12
        (i32.shr_s
         (i32.shl
          (i32.add
           (i32.add
            (tee_local $10
             (i32.mul
              (i32.shr_s
               (get_local $1)
               (i32.const 16)
              )
              (tee_local $7
               (i32.shr_s
                (i32.shl
                 (get_local $1)
                 (i32.const 16)
                )
                (i32.const 16)
               )
              )
             )
            )
            (i32.shr_u
             (tee_local $7
              (i32.mul
               (i32.and
                (get_local $1)
                (i32.const 65535)
               )
               (get_local $7)
              )
             )
             (i32.const 16)
            )
           )
           (tee_local $11
            (i32.mul
             (get_local $1)
             (i32.shr_s
              (i32.add
               (i32.shr_s
                (get_local $1)
                (i32.const 15)
               )
               (i32.const 1)
              )
              (i32.const 1)
             )
            )
           )
          )
          (i32.const 16)
         )
         (i32.const 16)
        )
       )
      )
      (i32.shr_s
       (i32.mul
        (tee_local $13
         (i32.and
          (tee_local $1
           (i32.shr_s
            (get_local $6)
            (i32.const 6)
           )
          )
          (i32.const 65535)
         )
        )
        (get_local $12)
       )
       (i32.const 16)
      )
     )
     (i32.mul
      (get_local $1)
      (i32.shr_s
       (i32.add
        (i32.shr_s
         (i32.add
          (i32.add
           (i32.add
            (get_local $10)
            (i32.shr_s
             (get_local $7)
             (i32.const 16)
            )
           )
           (get_local $11)
          )
          (i32.const -8388608)
         )
         (i32.const 15)
        )
        (i32.const 1)
       )
       (i32.const 1)
      )
     )
    )
   )
   (tee_local $1
    (i32.add
     (i32.add
      (i32.mul
       (get_local $8)
       (tee_local $8
        (i32.shr_s
         (i32.shl
          (get_local $1)
          (i32.const 16)
         )
         (i32.const 16)
        )
       )
      )
      (i32.shr_s
       (i32.mul
        (get_local $13)
        (get_local $8)
       )
       (i32.const 16)
      )
     )
     (i32.mul
      (get_local $1)
      (i32.shr_s
       (i32.add
        (i32.shr_s
         (get_local $6)
         (i32.const 21)
        )
        (i32.const 1)
       )
       (i32.const 1)
      )
     )
    )
   )
   (get_local $3)
   (get_local $2)
   (get_local $4)
   (get_local $5)
  )
  (if
   (i32.ne
    (get_local $5)
    (i32.const 2)
   )
   (return)
  )
  (call $_silk_biquad_float
   (i32.add
    (get_local $0)
    (i32.const 4)
   )
   (get_local $6)
   (get_local $9)
   (get_local $6)
   (get_local $7)
   (get_local $1)
   (i32.add
    (get_local $3)
    (i32.const 8)
   )
   (i32.add
    (get_local $2)
    (i32.const 4)
   )
   (get_local $4)
   (i32.const 2)
  )
 )
 (func $_dc_reject (; 391 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32)
  (local $6 f32)
  (local $7 f32)
  (local $8 f32)
  (local $9 f32)
  (local $10 f32)
  (local $11 f32)
  (local $12 i32)
  (local $13 i32)
  (set_local $9
   (f32.sub
    (f32.const 1)
    (tee_local $8
     (f32.div
      (f32.const 18.900001525878906)
      (f32.convert_s/i32
       (get_local $5)
      )
     )
    )
   )
  )
  (set_local $6
   (f32.load
    (get_local $2)
   )
  )
  (if
   (i32.eq
    (get_local $4)
    (i32.const 2)
   )
   (block
    (set_local $7
     (f32.load
      (tee_local $12
       (i32.add
        (get_local $2)
        (i32.const 8)
       )
      )
     )
    )
    (set_local $4
     (i32.const 0)
    )
    (loop $while-in
     (if
      (i32.lt_s
       (get_local $4)
       (get_local $3)
      )
      (block
       (set_local $10
        (f32.load
         (i32.add
          (get_local $0)
          (i32.shl
           (tee_local $5
            (i32.shl
             (get_local $4)
             (i32.const 1)
            )
           )
           (i32.const 2)
          )
         )
        )
       )
       (set_local $11
        (f32.load
         (i32.add
          (get_local $0)
          (i32.shl
           (tee_local $13
            (i32.or
             (get_local $5)
             (i32.const 1)
            )
           )
           (i32.const 2)
          )
         )
        )
       )
       (f32.store
        (i32.add
         (get_local $1)
         (i32.shl
          (get_local $5)
          (i32.const 2)
         )
        )
        (f32.sub
         (get_local $10)
         (get_local $6)
        )
       )
       (f32.store
        (i32.add
         (get_local $1)
         (i32.shl
          (get_local $13)
          (i32.const 2)
         )
        )
        (f32.sub
         (get_local $11)
         (get_local $7)
        )
       )
       (set_local $7
        (f32.add
         (f32.add
          (f32.mul
           (get_local $8)
           (get_local $11)
          )
          (f32.const 1.0000000031710769e-30)
         )
         (f32.mul
          (get_local $9)
          (get_local $7)
         )
        )
       )
       (set_local $6
        (f32.add
         (f32.add
          (f32.mul
           (get_local $8)
           (get_local $10)
          )
          (f32.const 1.0000000031710769e-30)
         )
         (f32.mul
          (get_local $9)
          (get_local $6)
         )
        )
       )
       (set_local $4
        (i32.add
         (get_local $4)
         (i32.const 1)
        )
       )
       (br $while-in)
      )
     )
    )
    (f32.store
     (get_local $2)
     (get_local $6)
    )
    (f32.store
     (get_local $12)
     (get_local $7)
    )
   )
   (block
    (set_local $4
     (i32.const 0)
    )
    (loop $while-in1
     (if
      (i32.lt_s
       (get_local $4)
       (get_local $3)
      )
      (block
       (f32.store
        (i32.add
         (get_local $1)
         (i32.shl
          (get_local $4)
          (i32.const 2)
         )
        )
        (f32.sub
         (tee_local $7
          (f32.load
           (i32.add
            (get_local $0)
            (i32.shl
             (get_local $4)
             (i32.const 2)
            )
           )
          )
         )
         (get_local $6)
        )
       )
       (set_local $6
        (f32.add
         (f32.add
          (f32.mul
           (get_local $8)
           (get_local $7)
          )
          (f32.const 1.0000000031710769e-30)
         )
         (f32.mul
          (get_local $9)
          (get_local $6)
         )
        )
       )
       (set_local $4
        (i32.add
         (get_local $4)
         (i32.const 1)
        )
       )
       (br $while-in1)
      )
     )
    )
    (f32.store
     (get_local $2)
     (get_local $6)
    )
   )
  )
 )
 (func $_compute_silk_rate_for_hybrid (; 392 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (result i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (set_local $6
   (i32.div_s
    (get_local $0)
    (get_local $5)
   )
  )
  (set_local $4
   (i32.add
    (i32.add
     (get_local $2)
     (i32.const 1)
    )
    (i32.shl
     (get_local $4)
     (i32.const 1)
    )
   )
  )
  (set_local $2
   (i32.const 1)
  )
  (set_local $0
   (i32.add
    (tee_local $2
     (block $__rjto$1 (result i32)
      (block $__rjti$1
       (block $__rjti$0
        (loop $while-in
         (block $while-out
          (br_if $__rjti$0
           (i32.ge_u
            (get_local $2)
            (i32.const 7)
           )
          )
          (br_if $__rjti$1
           (i32.gt_s
            (tee_local $0
             (i32.load
              (i32.add
               (i32.mul
                (get_local $2)
                (i32.const 20)
               )
               (i32.const 28848)
              )
             )
            )
            (get_local $6)
           )
          )
          (set_local $2
           (i32.add
            (get_local $2)
            (i32.const 1)
           )
          )
          (br $while-in)
         )
        )
       )
       (br $__rjto$1
        (if (result i32)
         (i32.eq
          (get_local $2)
          (i32.const 7)
         )
         (i32.add
          (i32.load
           (i32.add
            (i32.shl
             (get_local $4)
             (i32.const 2)
            )
            (i32.const 28968)
           )
          )
          (i32.div_s
           (i32.add
            (get_local $6)
            (i32.const -64000)
           )
           (i32.const 2)
          )
         )
         (block
          (set_local $0
           (i32.load
            (i32.add
             (i32.mul
              (get_local $2)
              (i32.const 20)
             )
             (i32.const 28848)
            )
           )
          )
          (br $__rjti$1)
         )
        )
       )
      )
      (set_local $7
       (i32.load
        (i32.add
         (i32.mul
          (tee_local $8
           (i32.add
            (get_local $2)
            (i32.const -1)
           )
          )
          (i32.const 20)
         )
         (i32.const 28848)
        )
       )
      )
      (i32.div_s
       (i32.add
        (i32.mul
         (i32.load
          (i32.add
           (i32.add
            (i32.mul
             (get_local $8)
             (i32.const 20)
            )
            (i32.const 28848)
           )
           (i32.shl
            (get_local $4)
            (i32.const 2)
           )
          )
         )
         (i32.sub
          (get_local $0)
          (get_local $6)
         )
        )
        (i32.mul
         (i32.load
          (i32.add
           (i32.add
            (i32.mul
             (get_local $2)
             (i32.const 20)
            )
            (i32.const 28848)
           )
           (i32.shl
            (get_local $4)
            (i32.const 2)
           )
          )
         )
         (i32.sub
          (get_local $6)
          (get_local $7)
         )
        )
       )
       (i32.sub
        (get_local $0)
        (get_local $7)
       )
      )
     )
    )
    (i32.const 100)
   )
  )
  (set_local $2
   (i32.add
    (if (result i32)
     (get_local $3)
     (tee_local $0
      (get_local $2)
     )
     (get_local $0)
    )
    (i32.const 300)
   )
  )
  (set_local $1
   (i32.add
    (tee_local $0
     (i32.mul
      (if (result i32)
       (i32.eq
        (get_local $1)
        (i32.const 1104)
       )
       (get_local $2)
       (get_local $0)
      )
      (get_local $5)
     )
    )
    (i32.const -1000)
   )
  )
  (if (result i32)
   (i32.and
    (i32.eq
     (get_local $5)
     (i32.const 2)
    )
    (i32.gt_s
     (get_local $6)
     (i32.const 11999)
    )
   )
   (get_local $1)
   (get_local $0)
  )
 )
 (func $_gain_fade (; 393 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 f32) (param $3 f32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (param $8 i32)
  (local $9 f32)
  (local $10 i32)
  (local $11 i32)
  (set_local $8
   (i32.div_s
    (get_local $4)
    (tee_local $10
     (i32.div_s
      (i32.const 48000)
      (get_local $8)
     )
    )
   )
  )
  (block $label$break$L1
   (if
    (i32.eq
     (get_local $6)
     (i32.const 1)
    )
    (block
     (set_local $4
      (i32.const 0)
     )
     (loop $while-in
      (br_if $label$break$L1
       (i32.ge_s
        (get_local $4)
        (get_local $8)
       )
      )
      (f32.store
       (i32.add
        (get_local $1)
        (i32.shl
         (get_local $4)
         (i32.const 2)
        )
       )
       (f32.mul
        (f32.add
         (f32.mul
          (tee_local $9
           (f32.mul
            (tee_local $9
             (f32.load
              (i32.add
               (get_local $7)
               (i32.shl
                (i32.mul
                 (get_local $4)
                 (get_local $10)
                )
                (i32.const 2)
               )
              )
             )
            )
            (get_local $9)
           )
          )
          (get_local $3)
         )
         (f32.mul
          (f32.sub
           (f32.const 1)
           (get_local $9)
          )
          (get_local $2)
         )
        )
        (f32.load
         (i32.add
          (get_local $0)
          (i32.shl
           (get_local $4)
           (i32.const 2)
          )
         )
        )
       )
      )
      (set_local $4
       (i32.add
        (get_local $4)
        (i32.const 1)
       )
      )
      (br $while-in)
     )
    )
    (block
     (set_local $4
      (i32.const 0)
     )
     (loop $while-in1
      (br_if $label$break$L1
       (i32.ge_s
        (get_local $4)
        (get_local $8)
       )
      )
      (f32.store
       (i32.add
        (get_local $1)
        (i32.shl
         (tee_local $11
          (i32.shl
           (get_local $4)
           (i32.const 1)
          )
         )
         (i32.const 2)
        )
       )
       (f32.mul
        (tee_local $9
         (f32.add
          (f32.mul
           (tee_local $9
            (f32.mul
             (tee_local $9
              (f32.load
               (i32.add
                (get_local $7)
                (i32.shl
                 (i32.mul
                  (get_local $4)
                  (get_local $10)
                 )
                 (i32.const 2)
                )
               )
              )
             )
             (get_local $9)
            )
           )
           (get_local $3)
          )
          (f32.mul
           (f32.sub
            (f32.const 1)
            (get_local $9)
           )
           (get_local $2)
          )
         )
        )
        (f32.load
         (i32.add
          (get_local $0)
          (i32.shl
           (get_local $11)
           (i32.const 2)
          )
         )
        )
       )
      )
      (f32.store
       (i32.add
        (get_local $1)
        (i32.shl
         (tee_local $11
          (i32.or
           (get_local $11)
           (i32.const 1)
          )
         )
         (i32.const 2)
        )
       )
       (f32.mul
        (get_local $9)
        (f32.load
         (i32.add
          (get_local $0)
          (i32.shl
           (get_local $11)
           (i32.const 2)
          )
         )
        )
       )
      )
      (set_local $4
       (i32.add
        (get_local $4)
        (i32.const 1)
       )
      )
      (br $while-in1)
     )
    )
   )
  )
  (set_local $4
   (i32.const 0)
  )
  (loop $while-in3
   (set_local $7
    (get_local $8)
   )
   (loop $while-in5
    (if
     (i32.lt_s
      (get_local $7)
      (get_local $5)
     )
     (block
      (f32.store
       (i32.add
        (get_local $1)
        (i32.shl
         (tee_local $10
          (i32.add
           (i32.mul
            (get_local $7)
            (get_local $6)
           )
           (get_local $4)
          )
         )
         (i32.const 2)
        )
       )
       (f32.mul
        (f32.load
         (i32.add
          (get_local $0)
          (i32.shl
           (get_local $10)
           (i32.const 2)
          )
         )
        )
        (get_local $3)
       )
      )
      (set_local $7
       (i32.add
        (get_local $7)
        (i32.const 1)
       )
      )
      (br $while-in5)
     )
    )
   )
   (br_if $while-in3
    (i32.lt_s
     (tee_local $4
      (i32.add
       (get_local $4)
       (i32.const 1)
      )
     )
     (get_local $6)
    )
   )
  )
 )
 (func $_FLOAT2INT16_669 (; 394 ;) (; has Stack IR ;) (param $0 f32) (result i32)
  (if
   (f32.gt
    (tee_local $0
     (f32.mul
      (get_local $0)
      (f32.const 32768)
     )
    )
    (f32.const -32768)
   )
   (if
    (i32.eqz
     (f32.lt
      (get_local $0)
      (f32.const 32767)
     )
    )
    (set_local $0
     (f32.const 32767)
    )
   )
   (set_local $0
    (f32.const -32768)
   )
  )
  (i32.and
   (call $_lrintf
    (get_local $0)
   )
   (i32.const 65535)
  )
 )
 (func $_stereo_fade (; 395 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 f32) (param $3 f32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 f32)
  (local $12 i32)
  (set_local $10
   (i32.div_s
    (get_local $4)
    (tee_local $9
     (i32.div_s
      (i32.const 48000)
      (get_local $7)
     )
    )
   )
  )
  (set_local $11
   (f32.sub
    (f32.const 1)
    (get_local $2)
   )
  )
  (set_local $2
   (f32.sub
    (f32.const 1)
    (get_local $3)
   )
  )
  (set_local $4
   (i32.const 0)
  )
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $4)
     (get_local $10)
    )
    (block
     (set_local $8
      (i32.add
       (tee_local $7
        (i32.shl
         (get_local $4)
         (i32.const 1)
        )
       )
       (i32.const 1)
      )
     )
     (f32.store
      (tee_local $12
       (i32.add
        (get_local $1)
        (i32.shl
         (get_local $7)
         (i32.const 2)
        )
       )
      )
      (f32.sub
       (f32.load
        (get_local $12)
       )
       (tee_local $3
        (f32.mul
         (f32.add
          (f32.mul
           (tee_local $3
            (f32.mul
             (tee_local $3
              (f32.load
               (i32.add
                (get_local $6)
                (i32.shl
                 (i32.mul
                  (get_local $4)
                  (get_local $9)
                 )
                 (i32.const 2)
                )
               )
              )
             )
             (get_local $3)
            )
           )
           (get_local $2)
          )
          (f32.mul
           (f32.sub
            (f32.const 1)
            (get_local $3)
           )
           (get_local $11)
          )
         )
         (f32.mul
          (f32.sub
           (f32.load
            (i32.add
             (get_local $0)
             (i32.shl
              (get_local $7)
              (i32.const 2)
             )
            )
           )
           (f32.load
            (i32.add
             (get_local $0)
             (i32.shl
              (get_local $8)
              (i32.const 2)
             )
            )
           )
          )
          (f32.const 0.5)
         )
        )
       )
      )
     )
     (f32.store
      (tee_local $7
       (i32.add
        (get_local $1)
        (i32.shl
         (get_local $8)
         (i32.const 2)
        )
       )
      )
      (f32.add
       (f32.load
        (get_local $7)
       )
       (get_local $3)
      )
     )
     (set_local $4
      (i32.add
       (get_local $4)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (loop $while-in1
   (if
    (i32.lt_s
     (get_local $4)
     (get_local $5)
    )
    (block
     (set_local $7
      (i32.add
       (tee_local $6
        (i32.shl
         (get_local $4)
         (i32.const 1)
        )
       )
       (i32.const 1)
      )
     )
     (f32.store
      (tee_local $8
       (i32.add
        (get_local $1)
        (i32.shl
         (get_local $6)
         (i32.const 2)
        )
       )
      )
      (f32.sub
       (f32.load
        (get_local $8)
       )
       (tee_local $3
        (f32.mul
         (get_local $2)
         (f32.mul
          (f32.sub
           (f32.load
            (i32.add
             (get_local $0)
             (i32.shl
              (get_local $6)
              (i32.const 2)
             )
            )
           )
           (f32.load
            (i32.add
             (get_local $0)
             (i32.shl
              (get_local $7)
              (i32.const 2)
             )
            )
           )
          )
          (f32.const 0.5)
         )
        )
       )
      )
     )
     (f32.store
      (tee_local $6
       (i32.add
        (get_local $1)
        (i32.shl
         (get_local $7)
         (i32.const 2)
        )
       )
      )
      (f32.add
       (f32.load
        (get_local $6)
       )
       (get_local $3)
      )
     )
     (set_local $4
      (i32.add
       (get_local $4)
       (i32.const 1)
      )
     )
     (br $while-in1)
    )
   )
  )
 )
 (func $_decide_dtx_mode (; 396 ;) (; has Stack IR ;) (param $0 f32) (param $1 i32) (param $2 f32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (result i32)
  (local $7 i32)
  (block $do-once
   (if
    (i32.eqz
     (get_local $6)
    )
    (block
     (if
      (f32.lt
       (get_local $0)
       (f32.const 0.10000000149011612)
      )
      (br_if $do-once
       (f32.le
        (f32.mul
         (call $_compute_frame_energy
          (get_local $3)
          (get_local $4)
          (get_local $5)
         )
         (f32.const 316.2300109863281)
        )
        (get_local $2)
       )
      )
     )
     (i32.store
      (get_local $1)
      (i32.const 0)
     )
     (return
      (i32.const 0)
     )
    )
   )
  )
  (i32.store
   (get_local $1)
   (i32.add
    (tee_local $7
     (i32.load
      (get_local $1)
     )
    )
    (i32.const 1)
   )
  )
  (if
   (i32.le_s
    (get_local $7)
    (i32.const 9)
   )
   (return
    (i32.const 0)
   )
  )
  (if
   (i32.lt_s
    (get_local $7)
    (i32.const 30)
   )
   (return
    (i32.const 1)
   )
  )
  (i32.store
   (get_local $1)
   (i32.const 10)
  )
  (i32.const 0)
 )
 (func $_silk_biquad_float (; 397 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (param $8 i32) (param $9 i32)
  (local $10 f32)
  (local $11 f32)
  (local $12 f32)
  (local $13 f32)
  (local $14 f32)
  (local $15 f32)
  (local $16 f32)
  (set_local $12
   (f32.mul
    (f32.convert_s/i32
     (get_local $4)
    )
    (f32.const 3.725290298461914e-09)
   )
  )
  (set_local $13
   (f32.mul
    (f32.convert_s/i32
     (get_local $5)
    )
    (f32.const 3.725290298461914e-09)
   )
  )
  (set_local $14
   (f32.mul
    (f32.convert_s/i32
     (get_local $1)
    )
    (f32.const 3.725290298461914e-09)
   )
  )
  (set_local $15
   (f32.mul
    (f32.convert_s/i32
     (get_local $2)
    )
    (f32.const 3.725290298461914e-09)
   )
  )
  (set_local $16
   (f32.mul
    (f32.convert_s/i32
     (get_local $3)
    )
    (f32.const 3.725290298461914e-09)
   )
  )
  (set_local $2
   (i32.add
    (get_local $6)
    (i32.const 4)
   )
  )
  (set_local $1
   (i32.const 0)
  )
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $1)
     (get_local $8)
    )
    (block
     (f32.store
      (get_local $6)
      (f32.add
       (f32.sub
        (f32.load
         (get_local $2)
        )
        (f32.mul
         (tee_local $11
          (f32.add
           (f32.load
            (get_local $6)
           )
           (f32.mul
            (get_local $14)
            (tee_local $10
             (f32.load
              (i32.add
               (get_local $0)
               (i32.shl
                (tee_local $3
                 (i32.mul
                  (get_local $1)
                  (get_local $9)
                 )
                )
                (i32.const 2)
               )
              )
             )
            )
           )
          )
         )
         (get_local $12)
        )
       )
       (f32.mul
        (get_local $15)
        (get_local $10)
       )
      )
     )
     (f32.store
      (get_local $2)
      (f32.add
       (f32.sub
        (f32.mul
         (get_local $16)
         (get_local $10)
        )
        (f32.mul
         (get_local $11)
         (get_local $13)
        )
       )
       (f32.const 1.0000000031710769e-30)
      )
     )
     (f32.store
      (i32.add
       (get_local $7)
       (i32.shl
        (get_local $3)
        (i32.const 2)
       )
      )
      (get_local $11)
     )
     (set_local $1
      (i32.add
       (get_local $1)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
 )
 (func $_opus_encode_float (; 398 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (local $5 i32)
  (set_local $5
   (call $_frame_size_select
    (get_local $2)
    (i32.load offset=156
     (get_local $0)
    )
    (i32.load offset=144
     (get_local $0)
    )
   )
  )
  (call $_opus_encode_native
   (get_local $0)
   (get_local $1)
   (get_local $5)
   (get_local $3)
   (get_local $4)
   (i32.const 24)
   (get_local $1)
   (get_local $2)
   (i32.const -2)
   (i32.load offset=112
    (get_local $0)
   )
   (i32.const 1)
   (i32.const 1)
  )
 )
 (func $_opus_encoder_ctl (; 399 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (set_local $3
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.const 192)
   )
  )
  (set_local $5
   (i32.add
    (get_local $3)
    (i32.const 80)
   )
  )
  (set_local $6
   (i32.add
    (get_local $3)
    (i32.const 72)
   )
  )
  (set_local $7
   (i32.sub
    (get_local $3)
    (i32.const -64)
   )
  )
  (set_local $13
   (i32.add
    (get_local $3)
    (i32.const 56)
   )
  )
  (set_local $8
   (i32.add
    (get_local $3)
    (i32.const 48)
   )
  )
  (set_local $9
   (i32.add
    (get_local $3)
    (i32.const 40)
   )
  )
  (set_local $10
   (i32.add
    (get_local $3)
    (i32.const 32)
   )
  )
  (set_local $11
   (i32.add
    (get_local $3)
    (i32.const 24)
   )
  )
  (set_local $12
   (i32.add
    (get_local $3)
    (i32.const 16)
   )
  )
  (set_local $14
   (i32.add
    (get_local $3)
    (i32.const 84)
   )
  )
  (i32.store
   (get_local $3)
   (get_local $2)
  )
  (set_local $4
   (i32.add
    (get_local $0)
    (i32.load
     (get_local $0)
    )
   )
  )
  (block $__rjto$1 (result i32)
   (block $__rjti$1
    (set_local $0
     (block $__rjti$0 (result i32)
      (block $switch-default60
       (block $switch-case59
        (block $switch-case58
         (block $switch-case57
          (block $switch-case56
           (block $switch-case55
            (block $switch-case54
             (block $switch-case53
              (block $switch-case52
               (block $switch-case51
                (block $switch-case50
                 (block $switch-case49
                  (block $switch-case48
                   (block $switch-case47
                    (block $switch-case46
                     (block $switch-case45
                      (block $switch-case44
                       (block $switch-case43
                        (block $switch-case42
                         (block $switch-case34
                          (block $switch-case33
                           (block $switch-case32
                            (block $switch-case31
                             (block $switch-case30
                              (block $switch-case29
                               (block $switch-case28
                                (block $switch-case27
                                 (block $switch-case26
                                  (block $switch-case25
                                   (block $switch-case24
                                    (block $switch-case23
                                     (block $switch-case22
                                      (block $switch-case21
                                       (block $switch-case20
                                        (block $switch-case19
                                         (block $switch-case18
                                          (block $switch-case17
                                           (block $switch-case12
                                            (block $switch-case11
                                             (block $switch-case10
                                              (block $switch-case9
                                               (block $switch-case4
                                                (block $switch-case3
                                                 (br_table $switch-case3 $switch-case4 $switch-case9 $switch-case10 $switch-case17 $switch-case18 $switch-case29 $switch-case30 $switch-case19 $switch-case20 $switch-case23 $switch-case24 $switch-case25 $switch-case26 $switch-case27 $switch-case28 $switch-case21 $switch-case22 $switch-default60 $switch-default60 $switch-case33 $switch-case34 $switch-case11 $switch-case12 $switch-case42 $switch-case43 $switch-default60 $switch-case44 $switch-case55 $switch-case45 $switch-default60 $switch-case46 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-case47 $switch-case48 $switch-default60 $switch-default60 $switch-case49 $switch-case50 $switch-case51 $switch-case52 $switch-default60 $switch-default60 $switch-case53 $switch-case54 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-case59 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-case57 $switch-default60 $switch-case58 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-case56 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-default60 $switch-case31 $switch-case32 $switch-default60
                                                  (i32.sub
                                                   (get_local $1)
                                                   (i32.const 4000)
                                                  )
                                                 )
                                                )
                                                (set_local $2
                                                 (i32.load
                                                  (tee_local $1
                                                   (i32.and
                                                    (i32.add
                                                     (i32.load
                                                      (get_local $3)
                                                     )
                                                     (i32.const 3)
                                                    )
                                                    (i32.const -4)
                                                   )
                                                  )
                                                 )
                                                )
                                                (i32.store
                                                 (get_local $3)
                                                 (i32.add
                                                  (get_local $1)
                                                  (i32.const 4)
                                                 )
                                                )
                                                (block $switch0
                                                 (block $switch-default
                                                  (block $switch-case
                                                   (br_table $switch-case $switch-case $switch-default $switch-case $switch-default
                                                    (i32.sub
                                                     (get_local $2)
                                                     (i32.const 2048)
                                                    )
                                                   )
                                                  )
                                                  (br $switch0)
                                                 )
                                                 (br $__rjti$0
                                                  (i32.const -1)
                                                 )
                                                )
                                                (set_local $1
                                                 (i32.add
                                                  (get_local $0)
                                                  (i32.const 108)
                                                 )
                                                )
                                                (if
                                                 (i32.eqz
                                                  (i32.load
                                                   (i32.add
                                                    (get_local $0)
                                                    (i32.const 14248)
                                                   )
                                                  )
                                                 )
                                                 (drop
                                                  (br_if $__rjti$0
                                                   (i32.const -1)
                                                   (i32.ne
                                                    (i32.load
                                                     (get_local $1)
                                                    )
                                                    (get_local $2)
                                                   )
                                                  )
                                                 )
                                                )
                                                (i32.store
                                                 (get_local $1)
                                                 (get_local $2)
                                                )
                                                (i32.store offset=192
                                                 (get_local $0)
                                                 (get_local $2)
                                                )
                                                (br $__rjti$0
                                                 (i32.const 0)
                                                )
                                               )
                                               (set_local $2
                                                (i32.load
                                                 (tee_local $1
                                                  (i32.and
                                                   (i32.add
                                                    (i32.load
                                                     (get_local $3)
                                                    )
                                                    (i32.const 3)
                                                   )
                                                   (i32.const -4)
                                                  )
                                                 )
                                                )
                                               )
                                               (i32.store
                                                (get_local $3)
                                                (i32.add
                                                 (get_local $1)
                                                 (i32.const 4)
                                                )
                                               )
                                               (br_if $__rjti$1
                                                (i32.eqz
                                                 (get_local $2)
                                                )
                                               )
                                               (i32.store
                                                (get_local $2)
                                                (i32.load offset=108
                                                 (get_local $0)
                                                )
                                               )
                                               (br $__rjti$0
                                                (i32.const 0)
                                               )
                                              )
                                              (set_local $2
                                               (i32.load
                                                (tee_local $1
                                                 (i32.and
                                                  (i32.add
                                                   (i32.load
                                                    (get_local $3)
                                                   )
                                                   (i32.const 3)
                                                  )
                                                  (i32.const -4)
                                                 )
                                                )
                                               )
                                              )
                                              (i32.store
                                               (get_local $3)
                                               (i32.add
                                                (get_local $1)
                                                (i32.const 4)
                                               )
                                              )
                                              (block $switch5
                                               (block $switch-default8
                                                (block $switch-case7
                                                 (if
                                                  (tee_local $1
                                                   (i32.sub
                                                    (get_local $2)
                                                    (i32.const -1000)
                                                   )
                                                  )
                                                  (if
                                                   (i32.eq
                                                    (get_local $1)
                                                    (i32.const 999)
                                                   )
                                                   (br $switch-case7)
                                                   (br $switch-default8)
                                                  )
                                                 )
                                                 (set_local $1
                                                  (i32.const -1000)
                                                 )
                                                 (br $switch5)
                                                )
                                                (set_local $1
                                                 (i32.const -1)
                                                )
                                                (br $switch5)
                                               )
                                               (br_if $__rjti$1
                                                (i32.lt_s
                                                 (get_local $2)
                                                 (i32.const 1)
                                                )
                                               )
                                               (if
                                                (i32.lt_s
                                                 (get_local $2)
                                                 (i32.const 501)
                                                )
                                                (set_local $1
                                                 (i32.const 500)
                                                )
                                                (if
                                                 (i32.le_s
                                                  (get_local $2)
                                                  (tee_local $1
                                                   (i32.mul
                                                    (i32.load offset=112
                                                     (get_local $0)
                                                    )
                                                    (i32.const 300000)
                                                   )
                                                  )
                                                 )
                                                 (set_local $1
                                                  (get_local $2)
                                                 )
                                                )
                                               )
                                              )
                                              (i32.store offset=164
                                               (get_local $0)
                                               (get_local $1)
                                              )
                                              (br $__rjti$0
                                               (i32.const 0)
                                              )
                                             )
                                             (set_local $2
                                              (i32.load
                                               (tee_local $1
                                                (i32.and
                                                 (i32.add
                                                  (i32.load
                                                   (get_local $3)
                                                  )
                                                  (i32.const 3)
                                                 )
                                                 (i32.const -4)
                                                )
                                               )
                                              )
                                             )
                                             (i32.store
                                              (get_local $3)
                                              (i32.add
                                               (get_local $1)
                                               (i32.const 4)
                                              )
                                             )
                                             (br_if $__rjti$1
                                              (i32.eqz
                                               (get_local $2)
                                              )
                                             )
                                             (set_local $0
                                              (call $_user_bitrate_to_bitrate
                                               (get_local $0)
                                               (i32.load
                                                (i32.add
                                                 (get_local $0)
                                                 (i32.const 14232)
                                                )
                                               )
                                               (i32.const 1276)
                                              )
                                             )
                                             (i32.store
                                              (get_local $2)
                                              (get_local $0)
                                             )
                                             (br $__rjti$0
                                              (i32.const 0)
                                             )
                                            )
                                            (set_local $2
                                             (i32.load
                                              (tee_local $1
                                               (i32.and
                                                (i32.add
                                                 (i32.load
                                                  (get_local $3)
                                                 )
                                                 (i32.const 3)
                                                )
                                                (i32.const -4)
                                               )
                                              )
                                             )
                                            )
                                            (i32.store
                                             (get_local $3)
                                             (i32.add
                                              (get_local $1)
                                              (i32.const 4)
                                             )
                                            )
                                            (if
                                             (i32.lt_s
                                              (get_local $2)
                                              (i32.const 1)
                                             )
                                             (br_if $__rjti$1
                                              (i32.ne
                                               (get_local $2)
                                               (i32.const -1000)
                                              )
                                             )
                                             (br_if $__rjti$1
                                              (i32.gt_s
                                               (get_local $2)
                                               (i32.load offset=112
                                                (get_local $0)
                                               )
                                              )
                                             )
                                            )
                                            (i32.store offset=120
                                             (get_local $0)
                                             (get_local $2)
                                            )
                                            (br $__rjti$0
                                             (i32.const 0)
                                            )
                                           )
                                           (set_local $2
                                            (i32.load
                                             (tee_local $1
                                              (i32.and
                                               (i32.add
                                                (i32.load
                                                 (get_local $3)
                                                )
                                                (i32.const 3)
                                               )
                                               (i32.const -4)
                                              )
                                             )
                                            )
                                           )
                                           (i32.store
                                            (get_local $3)
                                            (i32.add
                                             (get_local $1)
                                             (i32.const 4)
                                            )
                                           )
                                           (br_if $__rjti$1
                                            (i32.eqz
                                             (get_local $2)
                                            )
                                           )
                                           (i32.store
                                            (get_local $2)
                                            (i32.load offset=120
                                             (get_local $0)
                                            )
                                           )
                                           (br $__rjti$0
                                            (i32.const 0)
                                           )
                                          )
                                          (set_local $2
                                           (i32.load
                                            (tee_local $1
                                             (i32.and
                                              (i32.add
                                               (i32.load
                                                (get_local $3)
                                               )
                                               (i32.const 3)
                                              )
                                              (i32.const -4)
                                             )
                                            )
                                           )
                                          )
                                          (i32.store
                                           (get_local $3)
                                           (i32.add
                                            (get_local $1)
                                            (i32.const 4)
                                           )
                                          )
                                          (br_if $__rjti$1
                                           (i32.gt_u
                                            (i32.add
                                             (get_local $2)
                                             (i32.const -1101)
                                            )
                                            (i32.const 4)
                                           )
                                          )
                                          (i32.store offset=132
                                           (get_local $0)
                                           (get_local $2)
                                          )
                                          (block $switch13
                                           (block $switch-default16
                                            (block $switch-case15
                                             (block $switch-case14
                                              (br_table $switch-case14 $switch-case15 $switch-default16
                                               (i32.sub
                                                (get_local $2)
                                                (i32.const 1101)
                                               )
                                              )
                                             )
                                             (i32.store offset=20
                                              (get_local $0)
                                              (i32.const 8000)
                                             )
                                             (br $__rjti$0
                                              (i32.const 0)
                                             )
                                            )
                                            (i32.store offset=20
                                             (get_local $0)
                                             (i32.const 12000)
                                            )
                                            (br $__rjti$0
                                             (i32.const 0)
                                            )
                                           )
                                           (i32.store offset=20
                                            (get_local $0)
                                            (i32.const 16000)
                                           )
                                           (br $__rjti$0
                                            (i32.const 0)
                                           )
                                          )
                                         )
                                         (set_local $2
                                          (i32.load
                                           (tee_local $1
                                            (i32.and
                                             (i32.add
                                              (i32.load
                                               (get_local $3)
                                              )
                                              (i32.const 3)
                                             )
                                             (i32.const -4)
                                            )
                                           )
                                          )
                                         )
                                         (i32.store
                                          (get_local $3)
                                          (i32.add
                                           (get_local $1)
                                           (i32.const 4)
                                          )
                                         )
                                         (br_if $__rjti$1
                                          (i32.eqz
                                           (get_local $2)
                                          )
                                         )
                                         (i32.store
                                          (get_local $2)
                                          (i32.load offset=132
                                           (get_local $0)
                                          )
                                         )
                                         (br $__rjti$0
                                          (i32.const 0)
                                         )
                                        )
                                        (set_local $1
                                         (i32.load
                                          (tee_local $2
                                           (i32.and
                                            (i32.add
                                             (i32.load
                                              (get_local $3)
                                             )
                                             (i32.const 3)
                                            )
                                            (i32.const -4)
                                           )
                                          )
                                         )
                                        )
                                        (i32.store
                                         (get_local $3)
                                         (i32.add
                                          (get_local $2)
                                          (i32.const 4)
                                         )
                                        )
                                        (if
                                         (i32.lt_s
                                          (get_local $1)
                                          (i32.const 1101)
                                         )
                                         (block
                                          (br_if $__rjti$1
                                           (i32.ne
                                            (get_local $1)
                                            (i32.const -1000)
                                           )
                                          )
                                          (i32.store offset=128
                                           (get_local $0)
                                           (i32.const -1000)
                                          )
                                          (set_local $0
                                           (i32.add
                                            (get_local $0)
                                            (i32.const 20)
                                           )
                                          )
                                         )
                                         (block
                                          (br_if $__rjti$1
                                           (i32.gt_s
                                            (get_local $1)
                                            (i32.const 1105)
                                           )
                                          )
                                          (i32.store offset=128
                                           (get_local $0)
                                           (get_local $1)
                                          )
                                          (if
                                           (i32.eq
                                            (get_local $1)
                                            (i32.const 1101)
                                           )
                                           (block
                                            (i32.store offset=20
                                             (get_local $0)
                                             (i32.const 8000)
                                            )
                                            (br $__rjti$0
                                             (i32.const 0)
                                            )
                                           )
                                          )
                                          (set_local $0
                                           (i32.add
                                            (get_local $0)
                                            (i32.const 20)
                                           )
                                          )
                                          (if
                                           (i32.eq
                                            (get_local $1)
                                            (i32.const 1102)
                                           )
                                           (block
                                            (i32.store
                                             (get_local $0)
                                             (i32.const 12000)
                                            )
                                            (br $__rjti$0
                                             (i32.const 0)
                                            )
                                           )
                                          )
                                         )
                                        )
                                        (i32.store
                                         (get_local $0)
                                         (i32.const 16000)
                                        )
                                        (br $__rjti$0
                                         (i32.const 0)
                                        )
                                       )
                                       (set_local $2
                                        (i32.load
                                         (tee_local $1
                                          (i32.and
                                           (i32.add
                                            (i32.load
                                             (get_local $3)
                                            )
                                            (i32.const 3)
                                           )
                                           (i32.const -4)
                                          )
                                         )
                                        )
                                       )
                                       (i32.store
                                        (get_local $3)
                                        (i32.add
                                         (get_local $1)
                                         (i32.const 4)
                                        )
                                       )
                                       (br_if $__rjti$1
                                        (i32.eqz
                                         (get_local $2)
                                        )
                                       )
                                       (i32.store
                                        (get_local $2)
                                        (i32.load
                                         (i32.add
                                          (get_local $0)
                                          (i32.const 14236)
                                         )
                                        )
                                       )
                                       (br $__rjti$0
                                        (i32.const 0)
                                       )
                                      )
                                      (set_local $2
                                       (i32.load
                                        (tee_local $1
                                         (i32.and
                                          (i32.add
                                           (i32.load
                                            (get_local $3)
                                           )
                                           (i32.const 3)
                                          )
                                          (i32.const -4)
                                         )
                                        )
                                       )
                                      )
                                      (i32.store
                                       (get_local $3)
                                       (i32.add
                                        (get_local $1)
                                        (i32.const 4)
                                       )
                                      )
                                      (br_if $__rjti$1
                                       (i32.gt_u
                                        (get_local $2)
                                        (i32.const 1)
                                       )
                                      )
                                      (i32.store offset=184
                                       (get_local $0)
                                       (get_local $2)
                                      )
                                      (br $__rjti$0
                                       (i32.const 0)
                                      )
                                     )
                                     (set_local $2
                                      (i32.load
                                       (tee_local $1
                                        (i32.and
                                         (i32.add
                                          (i32.load
                                           (get_local $3)
                                          )
                                          (i32.const 3)
                                         )
                                         (i32.const -4)
                                        )
                                       )
                                      )
                                     )
                                     (i32.store
                                      (get_local $3)
                                      (i32.add
                                       (get_local $1)
                                       (i32.const 4)
                                      )
                                     )
                                     (br_if $__rjti$1
                                      (i32.eqz
                                       (get_local $2)
                                      )
                                     )
                                     (i32.store
                                      (get_local $2)
                                      (i32.load offset=184
                                       (get_local $0)
                                      )
                                     )
                                     (br $__rjti$0
                                      (i32.const 0)
                                     )
                                    )
                                    (set_local $2
                                     (i32.load
                                      (tee_local $1
                                       (i32.and
                                        (i32.add
                                         (i32.load
                                          (get_local $3)
                                         )
                                         (i32.const 3)
                                        )
                                        (i32.const -4)
                                       )
                                      )
                                     )
                                    )
                                    (i32.store
                                     (get_local $3)
                                     (i32.add
                                      (get_local $1)
                                      (i32.const 4)
                                     )
                                    )
                                    (br_if $__rjti$1
                                     (i32.gt_u
                                      (get_local $2)
                                      (i32.const 10)
                                     )
                                    )
                                    (i32.store offset=44
                                     (get_local $0)
                                     (get_local $2)
                                    )
                                    (i32.store
                                     (get_local $12)
                                     (get_local $2)
                                    )
                                    (drop
                                     (call $_opus_custom_encoder_ctl
                                      (get_local $4)
                                      (i32.const 4010)
                                      (get_local $12)
                                     )
                                    )
                                    (br $__rjti$0
                                     (i32.const 0)
                                    )
                                   )
                                   (set_local $2
                                    (i32.load
                                     (tee_local $1
                                      (i32.and
                                       (i32.add
                                        (i32.load
                                         (get_local $3)
                                        )
                                        (i32.const 3)
                                       )
                                       (i32.const -4)
                                      )
                                     )
                                    )
                                   )
                                   (i32.store
                                    (get_local $3)
                                    (i32.add
                                     (get_local $1)
                                     (i32.const 4)
                                    )
                                   )
                                   (br_if $__rjti$1
                                    (i32.eqz
                                     (get_local $2)
                                    )
                                   )
                                   (i32.store
                                    (get_local $2)
                                    (i32.load offset=44
                                     (get_local $0)
                                    )
                                   )
                                   (br $__rjti$0
                                    (i32.const 0)
                                   )
                                  )
                                  (set_local $2
                                   (i32.load
                                    (tee_local $1
                                     (i32.and
                                      (i32.add
                                       (i32.load
                                        (get_local $3)
                                       )
                                       (i32.const 3)
                                      )
                                      (i32.const -4)
                                     )
                                    )
                                   )
                                  )
                                  (i32.store
                                   (get_local $3)
                                   (i32.add
                                    (get_local $1)
                                    (i32.const 4)
                                   )
                                  )
                                  (br_if $__rjti$1
                                   (i32.gt_u
                                    (get_local $2)
                                    (i32.const 1)
                                   )
                                  )
                                  (i32.store offset=48
                                   (get_local $0)
                                   (get_local $2)
                                  )
                                  (br $__rjti$0
                                   (i32.const 0)
                                  )
                                 )
                                 (set_local $2
                                  (i32.load
                                   (tee_local $1
                                    (i32.and
                                     (i32.add
                                      (i32.load
                                       (get_local $3)
                                      )
                                      (i32.const 3)
                                     )
                                     (i32.const -4)
                                    )
                                   )
                                  )
                                 )
                                 (i32.store
                                  (get_local $3)
                                  (i32.add
                                   (get_local $1)
                                   (i32.const 4)
                                  )
                                 )
                                 (br_if $__rjti$1
                                  (i32.eqz
                                   (get_local $2)
                                  )
                                 )
                                 (i32.store
                                  (get_local $2)
                                  (i32.load offset=48
                                   (get_local $0)
                                  )
                                 )
                                 (br $__rjti$0
                                  (i32.const 0)
                                 )
                                )
                                (set_local $2
                                 (i32.load
                                  (tee_local $1
                                   (i32.and
                                    (i32.add
                                     (i32.load
                                      (get_local $3)
                                     )
                                     (i32.const 3)
                                    )
                                    (i32.const -4)
                                   )
                                  )
                                 )
                                )
                                (i32.store
                                 (get_local $3)
                                 (i32.add
                                  (get_local $1)
                                  (i32.const 4)
                                 )
                                )
                                (br_if $__rjti$1
                                 (i32.gt_u
                                  (get_local $2)
                                  (i32.const 100)
                                 )
                                )
                                (i32.store offset=40
                                 (get_local $0)
                                 (get_local $2)
                                )
                                (i32.store
                                 (get_local $11)
                                 (get_local $2)
                                )
                                (drop
                                 (call $_opus_custom_encoder_ctl
                                  (get_local $4)
                                  (i32.const 4014)
                                  (get_local $11)
                                 )
                                )
                                (br $__rjti$0
                                 (i32.const 0)
                                )
                               )
                               (set_local $2
                                (i32.load
                                 (tee_local $1
                                  (i32.and
                                   (i32.add
                                    (i32.load
                                     (get_local $3)
                                    )
                                    (i32.const 3)
                                   )
                                   (i32.const -4)
                                  )
                                 )
                                )
                               )
                               (i32.store
                                (get_local $3)
                                (i32.add
                                 (get_local $1)
                                 (i32.const 4)
                                )
                               )
                               (br_if $__rjti$1
                                (i32.eqz
                                 (get_local $2)
                                )
                               )
                               (i32.store
                                (get_local $2)
                                (i32.load offset=40
                                 (get_local $0)
                                )
                               )
                               (br $__rjti$0
                                (i32.const 0)
                               )
                              )
                              (set_local $2
                               (i32.load
                                (tee_local $1
                                 (i32.and
                                  (i32.add
                                   (i32.load
                                    (get_local $3)
                                   )
                                   (i32.const 3)
                                  )
                                  (i32.const -4)
                                 )
                                )
                               )
                              )
                              (i32.store
                               (get_local $3)
                               (i32.add
                                (get_local $1)
                                (i32.const 4)
                               )
                              )
                              (br_if $__rjti$1
                               (i32.gt_u
                                (get_local $2)
                                (i32.const 1)
                               )
                              )
                              (i32.store offset=148
                               (get_local $0)
                               (get_local $2)
                              )
                              (i32.store offset=60
                               (get_local $0)
                               (i32.sub
                                (i32.const 1)
                                (get_local $2)
                               )
                              )
                              (br $__rjti$0
                               (i32.const 0)
                              )
                             )
                             (set_local $2
                              (i32.load
                               (tee_local $1
                                (i32.and
                                 (i32.add
                                  (i32.load
                                   (get_local $3)
                                  )
                                  (i32.const 3)
                                 )
                                 (i32.const -4)
                                )
                               )
                              )
                             )
                             (i32.store
                              (get_local $3)
                              (i32.add
                               (get_local $1)
                               (i32.const 4)
                              )
                             )
                             (br_if $__rjti$1
                              (i32.eqz
                               (get_local $2)
                              )
                             )
                             (i32.store
                              (get_local $2)
                              (i32.load offset=148
                               (get_local $0)
                              )
                             )
                             (br $__rjti$0
                              (i32.const 0)
                             )
                            )
                            (set_local $2
                             (i32.load
                              (tee_local $1
                               (i32.and
                                (i32.add
                                 (i32.load
                                  (get_local $3)
                                 )
                                 (i32.const 3)
                                )
                                (i32.const -4)
                               )
                              )
                             )
                            )
                            (i32.store
                             (get_local $3)
                             (i32.add
                              (get_local $1)
                              (i32.const 4)
                             )
                            )
                            (br_if $__rjti$1
                             (i32.gt_u
                              (i32.add
                               (get_local $2)
                               (i32.const 1)
                              )
                              (i32.const 101)
                             )
                            )
                            (i32.store offset=140
                             (get_local $0)
                             (get_local $2)
                            )
                            (br $__rjti$0
                             (i32.const 0)
                            )
                           )
                           (set_local $2
                            (i32.load
                             (tee_local $1
                              (i32.and
                               (i32.add
                                (i32.load
                                 (get_local $3)
                                )
                                (i32.const 3)
                               )
                               (i32.const -4)
                              )
                             )
                            )
                           )
                           (i32.store
                            (get_local $3)
                            (i32.add
                             (get_local $1)
                             (i32.const 4)
                            )
                           )
                           (br_if $__rjti$1
                            (i32.eqz
                             (get_local $2)
                            )
                           )
                           (i32.store
                            (get_local $2)
                            (i32.load offset=140
                             (get_local $0)
                            )
                           )
                           (br $__rjti$0
                            (i32.const 0)
                           )
                          )
                          (set_local $2
                           (i32.load
                            (tee_local $1
                             (i32.and
                              (i32.add
                               (i32.load
                                (get_local $3)
                               )
                               (i32.const 3)
                              )
                              (i32.const -4)
                             )
                            )
                           )
                          )
                          (i32.store
                           (get_local $3)
                           (i32.add
                            (get_local $1)
                            (i32.const 4)
                           )
                          )
                          (br_if $__rjti$1
                           (i32.gt_u
                            (get_local $2)
                            (i32.const 1)
                           )
                          )
                          (i32.store offset=152
                           (get_local $0)
                           (get_local $2)
                          )
                          (br $__rjti$0
                           (i32.const 0)
                          )
                         )
                         (set_local $2
                          (i32.load
                           (tee_local $1
                            (i32.and
                             (i32.add
                              (i32.load
                               (get_local $3)
                              )
                              (i32.const 3)
                             )
                             (i32.const -4)
                            )
                           )
                          )
                         )
                         (i32.store
                          (get_local $3)
                          (i32.add
                           (get_local $1)
                           (i32.const 4)
                          )
                         )
                         (br_if $__rjti$1
                          (i32.eqz
                           (get_local $2)
                          )
                         )
                         (i32.store
                          (get_local $2)
                          (i32.load offset=152
                           (get_local $0)
                          )
                         )
                         (br $__rjti$0
                          (i32.const 0)
                         )
                        )
                        (set_local $2
                         (i32.load
                          (tee_local $1
                           (i32.and
                            (i32.add
                             (i32.load
                              (get_local $3)
                             )
                             (i32.const 3)
                            )
                            (i32.const -4)
                           )
                          )
                         )
                        )
                        (i32.store
                         (get_local $3)
                         (i32.add
                          (get_local $1)
                          (i32.const 4)
                         )
                        )
                        (if
                         (i32.lt_s
                          (get_local $2)
                          (i32.const 3001)
                         )
                         (br_if $__rjti$1
                          (i32.sub
                           (get_local $2)
                           (i32.const -1000)
                          )
                         )
                         (block $switch38
                          (block $switch-default41
                           (block $switch-case39
                            (br_table $switch-case39 $switch-case39 $switch-default41
                             (i32.sub
                              (get_local $2)
                              (i32.const 3001)
                             )
                            )
                           )
                           (br $switch38)
                          )
                          (br $__rjti$1)
                         )
                        )
                        (i32.store offset=124
                         (get_local $0)
                         (get_local $2)
                        )
                        (br $__rjti$0
                         (i32.const 0)
                        )
                       )
                       (set_local $2
                        (i32.load
                         (tee_local $1
                          (i32.and
                           (i32.add
                            (i32.load
                             (get_local $3)
                            )
                            (i32.const 3)
                           )
                           (i32.const -4)
                          )
                         )
                        )
                       )
                       (i32.store
                        (get_local $3)
                        (i32.add
                         (get_local $1)
                         (i32.const 4)
                        )
                       )
                       (br_if $__rjti$1
                        (i32.eqz
                         (get_local $2)
                        )
                       )
                       (i32.store
                        (get_local $2)
                        (i32.load offset=124
                         (get_local $0)
                        )
                       )
                       (br $__rjti$0
                        (i32.const 0)
                       )
                      )
                      (set_local $2
                       (i32.load
                        (tee_local $1
                         (i32.and
                          (i32.add
                           (i32.load
                            (get_local $3)
                           )
                           (i32.const 3)
                          )
                          (i32.const -4)
                         )
                        )
                       )
                      )
                      (i32.store
                       (get_local $3)
                       (i32.add
                        (get_local $1)
                        (i32.const 4)
                       )
                      )
                      (br_if $__rjti$1
                       (i32.eqz
                        (get_local $2)
                       )
                      )
                      (i32.store
                       (get_local $2)
                       (tee_local $1
                        (i32.div_s
                         (i32.load offset=144
                          (get_local $0)
                         )
                         (i32.const 400)
                        )
                       )
                      )
                      (if
                       (i32.ne
                        (i32.load offset=108
                         (get_local $0)
                        )
                        (i32.const 2051)
                       )
                       (i32.store
                        (get_local $2)
                        (i32.add
                         (get_local $1)
                         (i32.load offset=116
                          (get_local $0)
                         )
                        )
                       )
                      )
                      (br $__rjti$0
                       (i32.const 0)
                      )
                     )
                     (set_local $2
                      (i32.load
                       (tee_local $1
                        (i32.and
                         (i32.add
                          (i32.load
                           (get_local $3)
                          )
                          (i32.const 3)
                         )
                         (i32.const -4)
                        )
                       )
                      )
                     )
                     (i32.store
                      (get_local $3)
                      (i32.add
                       (get_local $1)
                       (i32.const 4)
                      )
                     )
                     (br_if $__rjti$1
                      (i32.eqz
                       (get_local $2)
                      )
                     )
                     (i32.store
                      (get_local $2)
                      (i32.load offset=144
                       (get_local $0)
                      )
                     )
                     (br $__rjti$0
                      (i32.const 0)
                     )
                    )
                    (set_local $2
                     (i32.load
                      (tee_local $1
                       (i32.and
                        (i32.add
                         (i32.load
                          (get_local $3)
                         )
                         (i32.const 3)
                        )
                        (i32.const -4)
                       )
                      )
                     )
                    )
                    (i32.store
                     (get_local $3)
                     (i32.add
                      (get_local $1)
                      (i32.const 4)
                     )
                    )
                    (br_if $__rjti$1
                     (i32.eqz
                      (get_local $2)
                     )
                    )
                    (i32.store
                     (get_local $2)
                     (i32.load
                      (i32.add
                       (get_local $0)
                       (i32.const 18132)
                      )
                     )
                    )
                    (br $__rjti$0
                     (i32.const 0)
                    )
                   )
                   (set_local $2
                    (i32.load
                     (tee_local $1
                      (i32.and
                       (i32.add
                        (i32.load
                         (get_local $3)
                        )
                        (i32.const 3)
                       )
                       (i32.const -4)
                      )
                     )
                    )
                   )
                   (i32.store
                    (get_local $3)
                    (i32.add
                     (get_local $1)
                     (i32.const 4)
                    )
                   )
                   (br_if $__rjti$1
                    (i32.gt_u
                     (i32.add
                      (get_local $2)
                      (i32.const -8)
                     )
                     (i32.const 16)
                    )
                   )
                   (i32.store offset=168
                    (get_local $0)
                    (get_local $2)
                   )
                   (br $__rjti$0
                    (i32.const 0)
                   )
                  )
                  (set_local $2
                   (i32.load
                    (tee_local $1
                     (i32.and
                      (i32.add
                       (i32.load
                        (get_local $3)
                       )
                       (i32.const 3)
                      )
                      (i32.const -4)
                     )
                    )
                   )
                  )
                  (i32.store
                   (get_local $3)
                   (i32.add
                    (get_local $1)
                    (i32.const 4)
                   )
                  )
                  (br_if $__rjti$1
                   (i32.eqz
                    (get_local $2)
                   )
                  )
                  (i32.store
                   (get_local $2)
                   (i32.load offset=168
                    (get_local $0)
                   )
                  )
                  (br $__rjti$0
                   (i32.const 0)
                  )
                 )
                 (set_local $2
                  (i32.load
                   (tee_local $1
                    (i32.and
                     (i32.add
                      (i32.load
                       (get_local $3)
                      )
                      (i32.const 3)
                     )
                     (i32.const -4)
                    )
                   )
                  )
                 )
                 (i32.store
                  (get_local $3)
                  (i32.add
                   (get_local $1)
                   (i32.const 4)
                  )
                 )
                 (br_if $__rjti$1
                  (i32.ge_u
                   (i32.add
                    (get_local $2)
                    (i32.const -5000)
                   )
                   (i32.const 10)
                  )
                 )
                 (i32.store offset=156
                  (get_local $0)
                  (get_local $2)
                 )
                 (i32.store
                  (get_local $10)
                  (get_local $2)
                 )
                 (drop
                  (call $_opus_custom_encoder_ctl
                   (get_local $4)
                   (i32.const 4040)
                   (get_local $10)
                  )
                 )
                 (br $__rjti$0
                  (i32.const 0)
                 )
                )
                (set_local $2
                 (i32.load
                  (tee_local $1
                   (i32.and
                    (i32.add
                     (i32.load
                      (get_local $3)
                     )
                     (i32.const 3)
                    )
                    (i32.const -4)
                   )
                  )
                 )
                )
                (i32.store
                 (get_local $3)
                 (i32.add
                  (get_local $1)
                  (i32.const 4)
                 )
                )
                (br_if $__rjti$1
                 (i32.eqz
                  (get_local $2)
                 )
                )
                (i32.store
                 (get_local $2)
                 (i32.load offset=156
                  (get_local $0)
                 )
                )
                (br $__rjti$0
                 (i32.const 0)
                )
               )
               (set_local $2
                (i32.load
                 (tee_local $1
                  (i32.and
                   (i32.add
                    (i32.load
                     (get_local $3)
                    )
                    (i32.const 3)
                   )
                   (i32.const -4)
                  )
                 )
                )
               )
               (i32.store
                (get_local $3)
                (i32.add
                 (get_local $1)
                 (i32.const 4)
                )
               )
               (br_if $__rjti$1
                (i32.gt_u
                 (get_local $2)
                 (i32.const 1)
                )
               )
               (i32.store offset=76
                (get_local $0)
                (get_local $2)
               )
               (br $__rjti$0
                (i32.const 0)
               )
              )
              (set_local $2
               (i32.load
                (tee_local $1
                 (i32.and
                  (i32.add
                   (i32.load
                    (get_local $3)
                   )
                   (i32.const 3)
                  )
                  (i32.const -4)
                 )
                )
               )
              )
              (i32.store
               (get_local $3)
               (i32.add
                (get_local $1)
                (i32.const 4)
               )
              )
              (br_if $__rjti$1
               (i32.eqz
                (get_local $2)
               )
              )
              (i32.store
               (get_local $2)
               (i32.load offset=76
                (get_local $0)
               )
              )
              (br $__rjti$0
               (i32.const 0)
              )
             )
             (set_local $1
              (i32.load
               (tee_local $0
                (i32.and
                 (i32.add
                  (i32.load
                   (get_local $3)
                  )
                  (i32.const 3)
                 )
                 (i32.const -4)
                )
               )
              )
             )
             (i32.store
              (get_local $3)
              (i32.add
               (get_local $0)
               (i32.const 4)
              )
             )
             (br_if $__rjti$1
              (i32.gt_u
               (get_local $1)
               (i32.const 1)
              )
             )
             (i32.store
              (get_local $9)
              (get_local $1)
             )
             (drop
              (call $_opus_custom_encoder_ctl
               (get_local $4)
               (i32.const 4046)
               (get_local $9)
              )
             )
             (br $__rjti$0
              (i32.const 0)
             )
            )
            (set_local $1
             (i32.load
              (tee_local $0
               (i32.and
                (i32.add
                 (i32.load
                  (get_local $3)
                 )
                 (i32.const 3)
                )
                (i32.const -4)
               )
              )
             )
            )
            (i32.store
             (get_local $3)
             (i32.add
              (get_local $0)
              (i32.const 4)
             )
            )
            (br_if $__rjti$1
             (i32.eqz
              (get_local $1)
             )
            )
            (i32.store
             (get_local $8)
             (get_local $1)
            )
            (drop
             (call $_opus_custom_encoder_ctl
              (get_local $4)
              (i32.const 4047)
              (get_local $8)
             )
            )
            (br $__rjti$0
             (i32.const 0)
            )
           )
           (set_local $2
            (i32.add
             (get_local $0)
             (i32.load offset=4
              (get_local $0)
             )
            )
           )
           (call $_tonality_analysis_reset
            (i32.add
             (get_local $0)
             (i32.const 188)
            )
           )
           (drop
            (call $_memset
             (tee_local $1
              (i32.add
               (get_local $0)
               (i32.const 14188)
              )
             )
             (i32.const 0)
             (i32.const 3948)
            )
           )
           (drop
            (call $_opus_custom_encoder_ctl
             (get_local $4)
             (i32.const 4028)
             (get_local $13)
            )
           )
           (drop
            (call $_silk_InitEncoder
             (get_local $2)
             (i32.load offset=180
              (get_local $0)
             )
             (get_local $14)
            )
           )
           (i32.store
            (get_local $1)
            (i32.load offset=112
             (get_local $0)
            )
           )
           (i32.store16
            (i32.add
             (get_local $0)
             (i32.const 14192)
            )
            (i32.const 16384)
           )
           (f32.store
            (i32.add
             (get_local $0)
             (i32.const 14200)
            )
            (f32.const 1)
           )
           (i32.store
            (i32.add
             (get_local $0)
             (i32.const 14248)
            )
            (i32.const 1)
           )
           (i32.store
            (i32.add
             (get_local $0)
             (i32.const 14220)
            )
            (i32.const 1001)
           )
           (i32.store
            (i32.add
             (get_local $0)
             (i32.const 14236)
            )
            (i32.const 1105)
           )
           (set_local $1
            (i32.shl
             (call $_silk_lin2log
              (i32.const 60)
             )
             (i32.const 8)
            )
           )
           (i32.store
            (i32.add
             (get_local $0)
             (i32.const 14196)
            )
            (get_local $1)
           )
           (br $__rjti$0
            (i32.const 0)
           )
          )
          (set_local $2
           (i32.load
            (tee_local $1
             (i32.and
              (i32.add
               (i32.load
                (get_local $3)
               )
               (i32.const 3)
              )
              (i32.const -4)
             )
            )
           )
          )
          (i32.store
           (get_local $3)
           (i32.add
            (get_local $1)
            (i32.const 4)
           )
          )
          (if
           (i32.lt_s
            (get_local $2)
            (i32.const 1000)
           )
           (br_if $__rjti$1
            (i32.ne
             (get_local $2)
             (i32.const -1000)
            )
           )
           (br_if $__rjti$1
            (i32.gt_s
             (get_local $2)
             (i32.const 1002)
            )
           )
          )
          (i32.store offset=136
           (get_local $0)
           (get_local $2)
          )
          (br $__rjti$0
           (i32.const 0)
          )
         )
         (set_local $2
          (i32.load
           (tee_local $1
            (i32.and
             (i32.add
              (i32.load
               (get_local $3)
              )
              (i32.const 3)
             )
             (i32.const -4)
            )
           )
          )
         )
         (i32.store
          (get_local $3)
          (i32.add
           (get_local $1)
           (i32.const 4)
          )
         )
         (i32.store offset=176
          (get_local $0)
          (get_local $2)
         )
         (i32.store
          (get_local $7)
          (get_local $2)
         )
         (br $__rjti$0
          (call $_opus_custom_encoder_ctl
           (get_local $4)
           (i32.const 10024)
           (get_local $7)
          )
         )
        )
        (set_local $2
         (i32.load
          (tee_local $1
           (i32.and
            (i32.add
             (i32.load
              (get_local $3)
             )
             (i32.const 3)
            )
            (i32.const -4)
           )
          )
         )
        )
        (i32.store
         (get_local $3)
         (i32.add
          (get_local $1)
          (i32.const 4)
         )
        )
        (i32.store
         (i32.add
          (get_local $0)
          (i32.const 14252)
         )
         (get_local $2)
        )
        (i32.store
         (get_local $6)
         (get_local $2)
        )
        (br $__rjti$0
         (call $_opus_custom_encoder_ctl
          (get_local $4)
          (i32.const 10026)
          (get_local $6)
         )
        )
       )
       (set_local $1
        (i32.load
         (tee_local $0
          (i32.and
           (i32.add
            (i32.load
             (get_local $3)
            )
            (i32.const 3)
           )
           (i32.const -4)
          )
         )
        )
       )
       (i32.store
        (get_local $3)
        (i32.add
         (get_local $0)
         (i32.const 4)
        )
       )
       (br_if $__rjti$1
        (i32.eqz
         (get_local $1)
        )
       )
       (i32.store
        (get_local $5)
        (get_local $1)
       )
       (br $__rjti$0
        (call $_opus_custom_encoder_ctl
         (get_local $4)
         (i32.const 10015)
         (get_local $5)
        )
       )
      )
      (i32.const -5)
     )
    )
    (set_global $STACKTOP
     (get_local $3)
    )
    (return
     (get_local $0)
    )
   )
   (set_global $STACKTOP
    (get_local $3)
   )
   (i32.const -1)
  )
 )
 (func $_opus_repacketizer_init (; 400 ;) (; has Stack IR ;) (param $0 i32)
  (i32.store offset=4
   (get_local $0)
   (i32.const 0)
  )
 )
 (func $_opus_repacketizer_cat (; 401 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (call $_opus_repacketizer_cat_impl
   (get_local $0)
   (get_local $1)
   (get_local $2)
  )
 )
 (func $_opus_repacketizer_cat_impl (; 402 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (set_local $5
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.const 16)
   )
  )
  (block $do-once
   (if
    (i32.lt_s
     (get_local $2)
     (i32.const 1)
    )
    (set_local $0
     (i32.const -4)
    )
    (block
     (if
      (tee_local $4
       (i32.load
        (tee_local $6
         (i32.add
          (get_local $0)
          (i32.const 4)
         )
        )
       )
      )
      (if
       (i32.gt_s
        (i32.and
         (i32.xor
          (i32.load8_s
           (get_local $0)
          )
          (i32.load8_s
           (get_local $1)
          )
         )
         (i32.const 255)
        )
        (i32.const 3)
       )
       (block
        (set_local $0
         (i32.const -4)
        )
        (br $do-once)
       )
      )
      (block
       (i32.store8
        (get_local $0)
        (i32.load8_s
         (get_local $1)
        )
       )
       (set_local $3
        (call $_opus_packet_get_samples_per_frame
         (i32.load8_s
          (get_local $1)
         )
         (i32.const 8000)
        )
       )
       (i32.store offset=296
        (get_local $0)
        (get_local $3)
       )
      )
     )
     (if
      (i32.lt_s
       (tee_local $3
        (call $_opus_packet_get_nb_frames
         (get_local $1)
         (get_local $2)
        )
       )
       (i32.const 1)
      )
      (set_local $0
       (i32.const -4)
      )
      (if
       (i32.gt_s
        (i32.mul
         (i32.add
          (get_local $3)
          (get_local $4)
         )
         (i32.load offset=296
          (get_local $0)
         )
        )
        (i32.const 960)
       )
       (set_local $0
        (i32.const -4)
       )
       (if
        (i32.ge_s
         (tee_local $0
          (call $_opus_packet_parse_impl
           (get_local $1)
           (get_local $2)
           (get_local $5)
           (i32.add
            (i32.add
             (get_local $0)
             (i32.const 8)
            )
            (i32.shl
             (get_local $4)
             (i32.const 2)
            )
           )
           (i32.add
            (i32.add
             (get_local $0)
             (i32.const 200)
            )
            (i32.shl
             (get_local $4)
             (i32.const 1)
            )
           )
           (i32.const 0)
          )
         )
         (i32.const 1)
        )
        (block
         (i32.store
          (get_local $6)
          (i32.add
           (i32.load
            (get_local $6)
           )
           (get_local $3)
          )
         )
         (set_local $0
          (i32.const 0)
         )
        )
       )
      )
     )
    )
   )
  )
  (set_global $STACKTOP
   (get_local $5)
  )
  (get_local $0)
 )
 (func $_opus_repacketizer_out_range_impl (; 403 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (if
   (i32.lt_s
    (get_local $1)
    (i32.const 1)
   )
   (return
    (i32.const -1)
   )
  )
  (if
   (i32.lt_s
    (i32.load offset=4
     (get_local $0)
    )
    (get_local $1)
   )
   (return
    (i32.const -1)
   )
  )
  (set_local $7
   (i32.add
    (get_local $0)
    (i32.const 200)
   )
  )
  (block $label$break$L24
   (block $__rjti$3
    (block $__rjti$2
     (block $switch-default
      (block $switch-case0
       (block $switch-case
        (br_table $switch-case $switch-case0 $switch-default
         (i32.sub
          (get_local $1)
          (i32.const 1)
         )
        )
       )
       (if
        (i32.lt_s
         (tee_local $5
          (i32.load16_s
           (get_local $7)
          )
         )
         (get_local $3)
        )
        (block
         (i32.store8
          (get_local $2)
          (i32.and
           (i32.load8_s
            (get_local $0)
           )
           (i32.const -4)
          )
         )
         (set_local $6
          (i32.add
           (get_local $2)
           (i32.const 1)
          )
         )
         (set_local $5
          (i32.add
           (get_local $5)
           (i32.const 1)
          )
         )
         (br $__rjti$2)
        )
        (return
         (i32.const -2)
        )
       )
      )
      (if
       (i32.eq
        (tee_local $5
         (i32.load16_s offset=202
          (get_local $0)
         )
        )
        (tee_local $6
         (i32.load16_s
          (get_local $7)
         )
        )
       )
       (if
        (i32.gt_s
         (tee_local $5
          (i32.or
           (i32.shl
            (get_local $5)
            (i32.const 1)
           )
           (i32.const 1)
          )
         )
         (get_local $3)
        )
        (return
         (i32.const -2)
        )
        (block
         (i32.store8
          (get_local $2)
          (i32.or
           (i32.and
            (i32.load8_s
             (get_local $0)
            )
            (i32.const -4)
           )
           (i32.const 1)
          )
         )
         (set_local $6
          (i32.add
           (get_local $2)
           (i32.const 1)
          )
         )
         (br $__rjti$2)
        )
       )
       (if
        (i32.gt_s
         (tee_local $5
          (i32.add
           (i32.add
            (i32.add
             (get_local $6)
             (get_local $5)
            )
            (i32.const 2)
           )
           (i32.gt_s
            (get_local $6)
            (i32.const 251)
           )
          )
         )
         (get_local $3)
        )
        (return
         (i32.const -2)
        )
        (block
         (i32.store8
          (get_local $2)
          (i32.or
           (i32.and
            (i32.load8_s
             (get_local $0)
            )
            (i32.const -4)
           )
           (i32.const 2)
          )
         )
         (set_local $8
          (call $_encode_size
           (i32.load16_s
            (get_local $7)
           )
           (tee_local $6
            (i32.add
             (get_local $2)
             (i32.const 1)
            )
           )
          )
         )
         (set_local $6
          (i32.add
           (get_local $6)
           (get_local $8)
          )
         )
         (br $__rjti$2)
        )
       )
      )
     )
     (br $__rjti$3)
    )
    (br_if $__rjti$3
     (i32.and
      (i32.ne
       (get_local $4)
       (i32.const 0)
      )
      (i32.lt_s
       (get_local $5)
       (get_local $3)
      )
     )
    )
    (br $label$break$L24)
   )
   (set_local $5
    (i32.const 1)
   )
   (set_local $8
    (block $do-once (result i32)
     (block $__rjti$1
      (loop $while-in
       (block $while-out
        (br_if $__rjti$1
         (i32.ge_s
          (get_local $5)
          (get_local $1)
         )
        )
        (if
         (i32.eq
          (i32.load16_s
           (i32.add
            (i32.add
             (get_local $0)
             (i32.const 200)
            )
            (i32.shl
             (get_local $5)
             (i32.const 1)
            )
           )
          )
          (i32.load16_s
           (get_local $7)
          )
         )
         (block
          (set_local $5
           (i32.add
            (get_local $5)
            (i32.const 1)
           )
          )
          (br $while-in)
         )
        )
       )
      )
      (set_local $7
       (i32.add
        (get_local $1)
        (i32.const -1)
       )
      )
      (set_local $5
       (i32.const 0)
      )
      (set_local $6
       (i32.const 2)
      )
      (loop $while-in4
       (if
        (i32.lt_s
         (get_local $5)
         (get_local $7)
        )
        (block
         (set_local $8
          (i32.load16_s
           (i32.add
            (i32.add
             (get_local $0)
             (i32.const 200)
            )
            (i32.shl
             (get_local $5)
             (i32.const 1)
            )
           )
          )
         )
         (set_local $5
          (i32.add
           (get_local $5)
           (i32.const 1)
          )
         )
         (set_local $6
          (i32.add
           (get_local $6)
           (i32.add
            (if (result i32)
             (i32.gt_s
              (get_local $8)
              (i32.const 251)
             )
             (i32.const 2)
             (i32.const 1)
            )
            (get_local $8)
           )
          )
         )
         (br $while-in4)
        )
       )
      )
      (if
       (i32.gt_s
        (tee_local $5
         (i32.add
          (get_local $6)
          (i32.load16_s
           (i32.add
            (i32.add
             (get_local $0)
             (i32.const 200)
            )
            (i32.shl
             (get_local $7)
             (i32.const 1)
            )
           )
          )
         )
        )
        (get_local $3)
       )
       (return
        (i32.const -2)
       )
       (block
        (i32.store8
         (get_local $2)
         (i32.or
          (i32.load8_s
           (get_local $0)
          )
          (i32.const 3)
         )
        )
        (i32.store8 offset=1
         (get_local $2)
         (tee_local $7
          (i32.and
           (i32.or
            (get_local $1)
            (i32.const 128)
           )
           (i32.const 255)
          )
         )
        )
        (br $do-once
         (i32.const 1)
        )
       )
      )
     )
     (if (result i32)
      (i32.gt_s
       (tee_local $5
        (i32.add
         (i32.mul
          (i32.load16_s
           (get_local $7)
          )
          (get_local $1)
         )
         (i32.const 2)
        )
       )
       (get_local $3)
      )
      (return
       (i32.const -2)
      )
      (block (result i32)
       (i32.store8
        (get_local $2)
        (i32.or
         (i32.load8_s
          (get_local $0)
         )
         (i32.const 3)
        )
       )
       (i32.store8 offset=1
        (get_local $2)
        (tee_local $7
         (i32.and
          (get_local $1)
          (i32.const 255)
         )
        )
       )
       (i32.const 0)
      )
     )
    )
   )
   (set_local $6
    (i32.add
     (get_local $2)
     (i32.const 2)
    )
   )
   (if
    (get_local $4)
    (if
     (tee_local $9
      (i32.sub
       (get_local $3)
       (get_local $5)
      )
     )
     (block
      (i32.store8 offset=1
       (get_local $2)
       (i32.or
        (get_local $7)
        (i32.const 64)
       )
      )
      (set_local $7
       (i32.div_s
        (i32.add
         (get_local $9)
         (i32.const -1)
        )
        (i32.const 255)
       )
      )
      (set_local $5
       (i32.const 0)
      )
      (loop $while-in6
       (if
        (i32.lt_s
         (get_local $5)
         (get_local $7)
        )
        (block
         (i32.store8
          (get_local $6)
          (i32.const -1)
         )
         (set_local $5
          (i32.add
           (get_local $5)
           (i32.const 1)
          )
         )
         (set_local $6
          (i32.add
           (get_local $6)
           (i32.const 1)
          )
         )
         (br $while-in6)
        )
       )
      )
      (i32.store8
       (get_local $6)
       (i32.add
        (i32.add
         (get_local $9)
         (i32.mul
          (get_local $7)
          (i32.const -255)
         )
        )
        (i32.const 255)
       )
      )
      (set_local $6
       (i32.add
        (get_local $6)
        (i32.const 1)
       )
      )
      (set_local $5
       (get_local $3)
      )
     )
    )
   )
   (if
    (get_local $8)
    (block
     (set_local $8
      (i32.add
       (get_local $1)
       (i32.const -1)
      )
     )
     (set_local $7
      (i32.const 0)
     )
     (loop $while-in8
      (br_if $label$break$L24
       (i32.ge_s
        (get_local $7)
        (get_local $8)
       )
      )
      (set_local $9
       (call $_encode_size
        (i32.load16_s
         (i32.add
          (i32.add
           (get_local $0)
           (i32.const 200)
          )
          (i32.shl
           (get_local $7)
           (i32.const 1)
          )
         )
        )
        (get_local $6)
       )
      )
      (set_local $7
       (i32.add
        (get_local $7)
        (i32.const 1)
       )
      )
      (set_local $6
       (i32.add
        (get_local $6)
        (get_local $9)
       )
      )
      (br $while-in8)
     )
    )
   )
  )
  (set_local $7
   (i32.const 0)
  )
  (loop $while-in10
   (if
    (i32.lt_s
     (get_local $7)
     (get_local $1)
    )
    (block
     (drop
      (call $_memmove
       (get_local $6)
       (i32.load
        (i32.add
         (i32.add
          (get_local $0)
          (i32.const 8)
         )
         (i32.shl
          (get_local $7)
          (i32.const 2)
         )
        )
       )
       (i32.load16_s
        (tee_local $8
         (i32.add
          (i32.add
           (get_local $0)
           (i32.const 200)
          )
          (i32.shl
           (get_local $7)
           (i32.const 1)
          )
         )
        )
       )
      )
     )
     (set_local $6
      (i32.add
       (get_local $6)
       (i32.load16_s
        (get_local $8)
       )
      )
     )
     (set_local $7
      (i32.add
       (get_local $7)
       (i32.const 1)
      )
     )
     (br $while-in10)
    )
   )
  )
  (if
   (i32.eqz
    (get_local $4)
   )
   (return
    (get_local $5)
   )
  )
  (set_local $0
   (i32.add
    (get_local $2)
    (get_local $3)
   )
  )
  (loop $while-in12
   (if
    (i32.lt_u
     (get_local $6)
     (get_local $0)
    )
    (block
     (i32.store8
      (get_local $6)
      (i32.const 0)
     )
     (set_local $6
      (i32.add
       (get_local $6)
       (i32.const 1)
      )
     )
     (br $while-in12)
    )
   )
  )
  (get_local $5)
 )
 (func $_opus_packet_pad (; 404 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (set_local $3
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.const 304)
   )
  )
  (if
   (i32.lt_s
    (get_local $1)
    (i32.const 1)
   )
   (block
    (set_global $STACKTOP
     (get_local $3)
    )
    (return
     (i32.const -1)
    )
   )
  )
  (if
   (i32.eq
    (get_local $1)
    (get_local $2)
   )
   (block
    (set_global $STACKTOP
     (get_local $3)
    )
    (return
     (i32.const 0)
    )
   )
  )
  (if
   (i32.gt_s
    (get_local $1)
    (get_local $2)
   )
   (block
    (set_global $STACKTOP
     (get_local $3)
    )
    (return
     (i32.const -1)
    )
   )
  )
  (call $_opus_repacketizer_init
   (get_local $3)
  )
  (drop
   (call $_memmove
    (tee_local $4
     (i32.sub
      (i32.add
       (get_local $0)
       (get_local $2)
      )
      (get_local $1)
     )
    )
    (get_local $0)
    (get_local $1)
   )
  )
  (if (result i32)
   (tee_local $1
    (call $_opus_repacketizer_cat
     (get_local $3)
     (get_local $4)
     (get_local $1)
    )
   )
   (block (result i32)
    (set_global $STACKTOP
     (get_local $3)
    )
    (get_local $1)
   )
   (block (result i32)
    (set_local $0
     (call $_opus_repacketizer_out_range_impl
      (get_local $3)
      (i32.load offset=4
       (get_local $3)
      )
      (get_local $0)
      (get_local $2)
      (i32.const 1)
     )
    )
    (set_global $STACKTOP
     (get_local $3)
    )
    (if (result i32)
     (i32.lt_s
      (get_local $0)
      (i32.const 0)
     )
     (get_local $0)
     (i32.const 0)
    )
   )
  )
 )
 (func $_tonality_analysis_init (; 405 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (i32.store
   (get_local $0)
   (i32.const 0)
  )
  (i32.store offset=8
   (get_local $0)
   (get_local $1)
  )
  (call $_tonality_analysis_reset
   (get_local $0)
  )
 )
 (func $_tonality_analysis_reset (; 406 ;) (; has Stack IR ;) (param $0 i32)
  (drop
   (call $_memset
    (i32.add
     (get_local $0)
     (i32.const 12)
    )
    (i32.const 0)
    (i32.const 13988)
   )
  )
 )
 (func $_tonality_get_info (; 407 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 f32)
  (local $5 i32)
  (local $6 i32)
  (local $7 f32)
  (local $8 f32)
  (local $9 i32)
  (local $10 f32)
  (local $11 f32)
  (local $12 i32)
  (local $13 f32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 f32)
  (local $21 i32)
  (local $22 i32)
  (local $23 f32)
  (if
   (i32.or
    (i32.ge_s
     (i32.div_s
      (i32.load
       (tee_local $21
        (i32.add
         (get_local $0)
         (i32.const 8)
        )
       )
      )
      (i32.const 50)
     )
     (get_local $2)
    )
    (i32.eq
     (tee_local $5
      (i32.load
       (tee_local $17
        (i32.add
         (get_local $0)
         (i32.const 7444)
        )
       )
      )
     )
     (tee_local $3
      (i32.load
       (tee_local $15
        (i32.add
         (get_local $0)
         (i32.const 7448)
        )
       )
      )
     )
    )
   )
   (set_local $6
    (get_local $3)
   )
   (if
    (i32.eq
     (tee_local $6
      (i32.add
       (get_local $3)
       (i32.const 1)
      )
     )
     (i32.const 100)
    )
    (set_local $6
     (i32.const 0)
    )
   )
  )
  (set_local $16
   (i32.add
    (tee_local $3
     (i32.sub
      (get_local $5)
      (get_local $3)
     )
    )
    (i32.const 100)
   )
  )
  (if
   (i32.ge_s
    (get_local $3)
    (i32.const 0)
   )
   (set_local $16
    (get_local $3)
   )
  )
  (set_local $3
   (i32.add
    (get_local $5)
    (i32.const -1)
   )
  )
  (i64.store align=4
   (get_local $1)
   (i64.load align=4
    (tee_local $3
     (i32.add
      (i32.add
       (get_local $0)
       (i32.const 7600)
      )
      (i32.shl
       (if (result i32)
        (i32.lt_s
         (if (result i32)
          (i32.eq
           (get_local $6)
           (get_local $5)
          )
          (tee_local $6
           (get_local $3)
          )
          (get_local $6)
         )
         (i32.const 0)
        )
        (tee_local $6
         (i32.const 99)
        )
        (get_local $6)
       )
       (i32.const 6)
      )
     )
    )
   )
  )
  (i64.store offset=8 align=4
   (get_local $1)
   (i64.load offset=8 align=4
    (get_local $3)
   )
  )
  (i64.store offset=16 align=4
   (get_local $1)
   (i64.load offset=16 align=4
    (get_local $3)
   )
  )
  (i64.store offset=24 align=4
   (get_local $1)
   (i64.load offset=24 align=4
    (get_local $3)
   )
  )
  (i64.store offset=32 align=4
   (get_local $1)
   (i64.load offset=32 align=4
    (get_local $3)
   )
  )
  (i64.store offset=40 align=4
   (get_local $1)
   (i64.load offset=40 align=4
    (get_local $3)
   )
  )
  (i64.store offset=48 align=4
   (get_local $1)
   (i64.load offset=48 align=4
    (get_local $3)
   )
  )
  (i64.store offset=56 align=4
   (get_local $1)
   (i64.load offset=56 align=4
    (get_local $3)
   )
  )
  (set_local $12
   (i32.add
    (get_local $1)
    (i32.const 32)
   )
  )
  (set_local $18
   (i32.const 6)
  )
  (set_local $4
   (tee_local $7
    (f32.load
     (tee_local $22
      (i32.add
       (get_local $1)
       (i32.const 4)
      )
     )
    )
   )
  )
  (set_local $5
   (i32.const 1)
  )
  (set_local $3
   (get_local $6)
  )
  (loop $while-in
   (block $while-out
    (br_if $while-out
     (i32.ge_u
      (get_local $9)
      (i32.const 3)
     )
    )
    (br_if $while-out
     (i32.eq
      (if (result i32)
       (i32.eq
        (tee_local $3
         (i32.add
          (get_local $3)
          (i32.const 1)
         )
        )
        (i32.const 100)
       )
       (tee_local $3
        (i32.const 0)
       )
       (get_local $3)
      )
      (i32.load
       (get_local $17)
      )
     )
    )
    (if
     (i32.eqz
      (f32.gt
       (get_local $4)
       (tee_local $8
        (f32.load
         (i32.add
          (i32.add
           (get_local $0)
           (i32.shl
            (get_local $3)
            (i32.const 6)
           )
          )
          (i32.const 7604)
         )
        )
       )
      )
     )
     (set_local $4
      (get_local $8)
     )
    )
    (set_local $7
     (f32.add
      (get_local $7)
      (get_local $8)
     )
    )
    (set_local $5
     (i32.add
      (get_local $5)
      (i32.const 1)
     )
    )
    (i32.store
     (get_local $12)
     (if (result i32)
      (i32.gt_s
       (tee_local $14
        (i32.load
         (get_local $12)
        )
       )
       (tee_local $19
        (i32.load
         (i32.add
          (i32.add
           (get_local $0)
           (i32.shl
            (get_local $3)
            (i32.const 6)
           )
          )
          (i32.const 7632)
         )
        )
       )
      )
      (get_local $14)
      (get_local $19)
     )
    )
    (set_local $18
     (i32.add
      (get_local $18)
      (i32.const -1)
     )
    )
    (set_local $9
     (i32.add
      (get_local $9)
      (i32.const 1)
     )
    )
    (br $while-in)
   )
  )
  (set_local $14
   (i32.const 0)
  )
  (set_local $3
   (get_local $6)
  )
  (loop $while-in1
   (block $while-out0
    (br_if $while-out0
     (i32.ge_s
      (get_local $14)
      (get_local $18)
     )
    )
    (set_local $9
     (i32.add
      (get_local $3)
      (i32.const -1)
     )
    )
    (br_if $while-out0
     (i32.eq
      (tee_local $3
       (if (result i32)
        (i32.lt_s
         (get_local $3)
         (i32.const 1)
        )
        (i32.const 99)
        (get_local $9)
       )
      )
      (i32.load
       (get_local $17)
      )
     )
    )
    (i32.store
     (get_local $12)
     (if (result i32)
      (i32.gt_s
       (tee_local $9
        (i32.load
         (get_local $12)
        )
       )
       (tee_local $19
        (i32.load
         (i32.add
          (i32.add
           (get_local $0)
           (i32.shl
            (get_local $3)
            (i32.const 6)
           )
          )
          (i32.const 7632)
         )
        )
       )
      )
      (get_local $9)
      (get_local $19)
     )
    )
    (set_local $14
     (i32.add
      (get_local $14)
      (i32.const 1)
     )
    )
    (br $while-in1)
   )
  )
  (f32.store
   (get_local $22)
   (if (result f32)
    (f32.gt
     (tee_local $7
      (f32.div
       (get_local $7)
       (f32.convert_s/i32
        (get_local $5)
       )
      )
     )
     (tee_local $4
      (f32.add
       (get_local $4)
       (f32.const -0.20000000298023224)
      )
     )
    )
    (get_local $7)
    (get_local $4)
   )
  )
  (if
   (i32.gt_s
    (get_local $16)
    (i32.const 15)
   )
   (set_local $3
    (if (result i32)
     (i32.gt_s
      (get_local $6)
      (i32.const 94)
     )
     (block (result i32)
      (set_local $5
       (i32.add
        (get_local $6)
        (i32.const -95)
       )
      )
      (i32.add
       (get_local $6)
       (if (result i32)
        (i32.gt_s
         (get_local $6)
         (i32.const 98)
        )
        (i32.const -99)
        (i32.const 1)
       )
      )
     )
     (block (result i32)
      (set_local $5
       (i32.add
        (get_local $6)
        (i32.const 5)
       )
      )
      (i32.add
       (get_local $6)
       (i32.const 1)
      )
     )
    )
   )
   (set_local $5
    (tee_local $3
     (get_local $6)
    )
   )
  )
  (set_local $4
   (if (result f32)
    (tee_local $12
     (f32.lt
      (tee_local $13
       (f32.load
        (i32.add
         (i32.add
          (get_local $0)
          (i32.shl
           (get_local $3)
           (i32.const 6)
          )
         )
         (i32.const 7636)
        )
       )
      )
      (f32.const 0.10000000149011612)
     )
    )
    (f32.const 0.10000000149011612)
    (get_local $13)
   )
  )
  (set_local $9
   (i32.load
    (get_local $17)
   )
  )
  (set_local $10
   (f32.mul
    (if (result f32)
     (get_local $12)
     (f32.const 0.10000000149011612)
     (get_local $13)
    )
    (f32.load
     (i32.add
      (i32.add
       (get_local $0)
       (i32.shl
        (get_local $5)
        (i32.const 6)
       )
      )
      (i32.const 7620)
     )
    )
   )
  )
  (set_local $7
   (f32.const 1)
  )
  (loop $while-in3
   (block $while-out2
    (br_if $while-out2
     (i32.eq
      (if (result i32)
       (i32.eq
        (tee_local $5
         (i32.add
          (get_local $5)
          (i32.const 1)
         )
        )
        (i32.const 100)
       )
       (tee_local $5
        (i32.const 0)
       )
       (get_local $5)
      )
      (get_local $9)
     )
    )
    (br_if $while-out2
     (i32.eq
      (if (result i32)
       (i32.eq
        (tee_local $3
         (i32.add
          (get_local $3)
          (i32.const 1)
         )
        )
        (i32.const 100)
       )
       (tee_local $3
        (i32.const 0)
       )
       (get_local $3)
      )
      (get_local $9)
     )
    )
    (if
     (f32.lt
      (tee_local $8
       (f32.div
        (f32.sub
         (get_local $10)
         (tee_local $23
          (f32.mul
           (f32.sub
            (get_local $13)
            (tee_local $20
             (f32.load
              (i32.add
               (i32.add
                (get_local $0)
                (i32.shl
                 (get_local $3)
                 (i32.const 6)
                )
               )
               (i32.const 7636)
              )
             )
            )
           )
           (f32.const 10)
          )
         )
        )
        (get_local $4)
       )
      )
      (get_local $7)
     )
     (set_local $7
      (get_local $8)
     )
    )
    (if
     (i32.eqz
      (f32.gt
       (tee_local $8
        (f32.div
         (f32.add
          (get_local $10)
          (get_local $23)
         )
         (get_local $4)
        )
       )
       (get_local $11)
      )
     )
     (set_local $8
      (get_local $11)
     )
    )
    (set_local $4
     (f32.add
      (get_local $4)
      (if (result f32)
       (tee_local $12
        (f32.lt
         (get_local $20)
         (f32.const 0.10000000149011612)
        )
       )
       (f32.const 0.10000000149011612)
       (get_local $20)
      )
     )
    )
    (set_local $10
     (f32.add
      (get_local $10)
      (f32.mul
       (if (result f32)
        (get_local $12)
        (f32.const 0.10000000149011612)
        (get_local $20)
       )
       (f32.load
        (i32.add
         (i32.add
          (get_local $0)
          (i32.shl
           (get_local $5)
           (i32.const 6)
          )
         )
         (i32.const 7620)
        )
       )
      )
     )
    )
    (set_local $11
     (get_local $8)
    )
    (br $while-in3)
   )
  )
  (f32.store offset=20
   (get_local $1)
   (tee_local $4
    (f32.div
     (get_local $10)
     (get_local $4)
    )
   )
  )
  (set_local $8
   (if (result f32)
    (f32.lt
     (get_local $4)
     (get_local $7)
    )
    (get_local $4)
    (get_local $7)
   )
  )
  (if
   (i32.eqz
    (f32.gt
     (get_local $4)
     (get_local $11)
    )
   )
   (set_local $4
    (get_local $11)
   )
  )
  (if
   (i32.eqz
    (f32.gt
     (get_local $8)
     (f32.const 0)
    )
   )
   (set_local $8
    (f32.const 0)
   )
  )
  (set_local $11
   (if (result f32)
    (f32.lt
     (get_local $4)
     (f32.const 1)
    )
    (get_local $4)
    (f32.const 1)
   )
  )
  (if
   (i32.lt_s
    (get_local $16)
    (i32.const 10)
   )
   (block
    (set_local $12
     (i32.lt_s
      (tee_local $9
       (i32.load
        (i32.add
         (get_local $0)
         (i32.const 7436)
        )
       )
      )
      (i32.const 16)
     )
    )
    (set_local $4
     (get_local $11)
    )
    (set_local $7
     (get_local $8)
    )
    (set_local $5
     (i32.const 0)
    )
    (loop $while-in5
     (set_local $3
      (i32.add
       (get_local $9)
       (i32.const -1)
      )
     )
     (if
      (i32.lt_s
       (get_local $5)
       (if (result i32)
        (get_local $12)
        (get_local $3)
        (i32.const 15)
       )
      )
      (block
       (set_local $3
        (i32.add
         (get_local $6)
         (i32.const -1)
        )
       )
       (if
        (i32.eqz
         (f32.lt
          (get_local $7)
          (tee_local $10
           (f32.load
            (i32.add
             (i32.add
              (get_local $0)
              (i32.shl
               (tee_local $6
                (if (result i32)
                 (i32.lt_s
                  (get_local $6)
                  (i32.const 1)
                 )
                 (i32.const 99)
                 (get_local $3)
                )
               )
               (i32.const 6)
              )
             )
             (i32.const 7620)
            )
           )
          )
         )
        )
        (set_local $7
         (get_local $10)
        )
       )
       (if
        (i32.eqz
         (f32.gt
          (get_local $4)
          (get_local $10)
         )
        )
        (set_local $4
         (get_local $10)
        )
       )
       (set_local $5
        (i32.add
         (get_local $5)
         (i32.const 1)
        )
       )
       (br $while-in5)
      )
     )
    )
    (set_local $8
     (f32.add
      (get_local $8)
      (f32.mul
       (tee_local $10
        (f32.sub
         (f32.const 1)
         (f32.mul
          (f32.convert_s/i32
           (get_local $16)
          )
          (f32.const 0.10000000149011612)
         )
        )
       )
       (f32.sub
        (if (result f32)
         (f32.lt
          (tee_local $13
           (f32.sub
            (get_local $7)
            (tee_local $7
             (f32.mul
              (get_local $13)
              (f32.const 0.10000000149011612)
             )
            )
           )
          )
          (f32.const 0)
         )
         (f32.const 0)
         (get_local $13)
        )
        (get_local $8)
       )
      )
     )
    )
    (set_local $11
     (f32.add
      (get_local $11)
      (f32.mul
       (get_local $10)
       (f32.sub
        (if (result f32)
         (f32.gt
          (tee_local $4
           (f32.add
            (get_local $4)
            (get_local $7)
           )
          )
          (f32.const 1)
         )
         (f32.const 1)
         (get_local $4)
        )
        (get_local $11)
       )
      )
     )
    )
   )
  )
  (f32.store offset=24
   (get_local $1)
   (get_local $8)
  )
  (f32.store offset=28
   (get_local $1)
   (get_local $11)
  )
  (set_local $0
   (i32.add
    (i32.load
     (tee_local $1
      (i32.add
       (get_local $0)
       (i32.const 7452)
      )
     )
    )
    (i32.div_s
     (get_local $2)
     (i32.div_s
      (i32.load
       (get_local $21)
      )
      (i32.const 400)
     )
    )
   )
  )
  (i32.store
   (get_local $1)
   (get_local $0)
  )
  (loop $while-in7
   (if
    (i32.gt_s
     (get_local $0)
     (i32.const 7)
    )
    (block
     (i32.store
      (get_local $1)
      (tee_local $0
       (i32.add
        (get_local $0)
        (i32.const -8)
       )
      )
     )
     (i32.store
      (get_local $15)
      (i32.add
       (i32.load
        (get_local $15)
       )
       (i32.const 1)
      )
     )
     (br $while-in7)
    )
   )
  )
  (if
   (i32.le_s
    (tee_local $0
     (i32.load
      (get_local $15)
     )
    )
    (i32.const 99)
   )
   (return)
  )
  (i32.store
   (get_local $15)
   (i32.add
    (get_local $0)
    (i32.const -100)
   )
  )
 )
 (func $_run_analysis (; 408 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (param $8 i32) (param $9 i32) (param $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (if
   (i32.eqz
    (get_local $2)
   )
   (block
    (i32.store
     (get_local $10)
     (i32.const 0)
    )
    (call $_tonality_get_info
     (get_local $0)
     (get_local $10)
     (get_local $4)
    )
    (return)
   )
  )
  (set_local $12
   (i32.div_s
    (get_local $7)
    (i32.const 50)
   )
  )
  (set_local $11
   (i32.sub
    (if (result i32)
     (i32.lt_s
      (tee_local $7
       (i32.div_s
        (i32.mul
         (get_local $7)
         (i32.const 95)
        )
        (i32.const 50)
       )
      )
      (tee_local $3
       (i32.and
        (get_local $3)
        (i32.const -2)
       )
      )
     )
     (get_local $7)
     (tee_local $7
      (get_local $3)
     )
    )
    (tee_local $3
     (i32.load
      (tee_local $13
       (i32.add
        (get_local $0)
        (i32.const 7440)
       )
      )
     )
    )
   )
  )
  (loop $while-in
   (if
    (i32.gt_s
     (get_local $11)
     (i32.const 0)
    )
    (block
     (call $_tonality_analysis
      (get_local $0)
      (get_local $1)
      (get_local $2)
      (if (result i32)
       (i32.gt_s
        (get_local $11)
        (get_local $12)
       )
       (get_local $12)
       (get_local $11)
      )
      (get_local $3)
      (i32.const 0)
      (get_local $5)
      (get_local $6)
      (get_local $8)
      (get_local $9)
     )
     (set_local $11
      (i32.sub
       (get_local $11)
       (get_local $12)
      )
     )
     (set_local $3
      (i32.add
       (get_local $3)
       (get_local $12)
      )
     )
     (br $while-in)
    )
   )
  )
  (i32.store
   (get_local $13)
   (i32.sub
    (get_local $7)
    (get_local $4)
   )
  )
  (i32.store
   (get_local $10)
   (i32.const 0)
  )
  (call $_tonality_get_info
   (get_local $0)
   (get_local $10)
   (get_local $4)
  )
 )
 (func $_tonality_analysis (; 409 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (param $8 i32) (param $9 i32)
  (local $10 f32)
  (local $11 f32)
  (local $12 f32)
  (local $13 f32)
  (local $14 f32)
  (local $15 i32)
  (local $16 f32)
  (local $17 i32)
  (local $18 i32)
  (local $19 f32)
  (local $20 f32)
  (local $21 i32)
  (local $22 f32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local $26 f32)
  (local $27 f32)
  (local $28 f32)
  (local $29 i32)
  (local $30 i32)
  (local $31 i32)
  (local $32 i32)
  (local $33 f32)
  (local $34 f32)
  (local $35 i32)
  (local $36 i32)
  (local $37 i32)
  (local $38 i32)
  (local $39 f32)
  (local $40 i32)
  (local $41 i32)
  (local $42 f32)
  (local $43 f32)
  (local $44 f32)
  (local $45 f32)
  (local $46 i32)
  (local $47 i32)
  (local $48 i32)
  (local $49 i32)
  (local $50 i32)
  (local $51 f32)
  (local $52 i32)
  (local $53 i32)
  (local $54 i32)
  (local $55 i32)
  (local $56 i32)
  (local $57 i32)
  (block $folding-inner0
   (set_local $15
    (get_global $STACKTOP)
   )
   (set_global $STACKTOP
    (i32.add
     (get_global $STACKTOP)
     (i32.const 11344)
    )
   )
   (set_local $17
    (i32.load
     (tee_local $29
      (i32.add
       (get_local $0)
       (i32.const 7436)
      )
     )
    )
   )
   (block $label$break$L1
    (set_local $3
     (if (result i32)
      (i32.lt_s
       (tee_local $24
        (i32.load
         (tee_local $46
          (i32.add
           (get_local $0)
           (i32.const 8)
          )
         )
        )
       )
       (i32.const 48000)
      )
      (block (result i32)
       (br_if $label$break$L1
        (i32.sub
         (get_local $24)
         (i32.const 16000)
        )
       )
       (set_local $4
        (i32.div_s
         (i32.mul
          (get_local $4)
          (i32.const 3)
         )
         (i32.const 2)
        )
       )
       (i32.div_s
        (i32.mul
         (get_local $3)
         (i32.const 3)
        )
        (i32.const 2)
       )
      )
      (block (result i32)
       (br_if $label$break$L1
        (i32.sub
         (get_local $24)
         (i32.const 48000)
        )
       )
       (set_local $4
        (i32.div_s
         (get_local $4)
         (i32.const 2)
        )
       )
       (i32.div_s
        (get_local $3)
        (i32.const 2)
       )
      )
     )
    )
   )
   (set_local $54
    (i32.load offset=72
     (get_local $1)
    )
   )
   (set_local $30
    (i32.add
     (get_local $0)
     (i32.const 5772)
    )
   )
   (set_local $1
    (if (result i32)
     (get_local $17)
     (i32.load
      (get_local $30)
     )
     (block (result i32)
      (i32.store
       (get_local $30)
       (i32.const 240)
      )
      (i32.const 240)
     )
    )
   )
   (set_local $47
    (i32.add
     (get_local $15)
     (i32.const 11264)
    )
   )
   (set_local $48
    (i32.add
     (get_local $15)
     (i32.const 11184)
    )
   )
   (set_local $25
    (i32.add
     (get_local $15)
     (i32.const 11152)
    )
   )
   (set_local $21
    (i32.add
     (get_local $15)
     (i32.const 11040)
    )
   )
   (set_local $40
    (i32.add
     (get_local $15)
     (i32.const 11336)
    )
   )
   (set_local $35
    (i32.add
     (get_local $15)
     (i32.const 10960)
    )
   )
   (set_local $36
    (i32.add
     (get_local $15)
     (i32.const 10000)
    )
   )
   (set_local $49
    (i32.add
     (get_local $15)
     (i32.const 9968)
    )
   )
   (set_local $37
    (i32.add
     (get_local $15)
     (i32.const 9888)
    )
   )
   (set_local $23
    (i32.add
     (get_local $15)
     (i32.const 9808)
    )
   )
   (set_local $31
    (i32.add
     (get_local $15)
     (i32.const 9728)
    )
   )
   (set_local $50
    (i32.add
     (get_local $15)
     (i32.const 9600)
    )
   )
   (set_local $32
    (i32.add
     (get_local $15)
     (i32.const 5760)
    )
   )
   (set_local $18
    (i32.add
     (get_local $15)
     (i32.const 1920)
    )
   )
   (set_local $41
    (i32.add
     (get_local $15)
     (i32.const 960)
    )
   )
   (set_local $39
    (f32.div
     (f32.const 1)
     (f32.convert_s/i32
      (tee_local $38
       (i32.add
        (get_local $17)
        (i32.const 1)
       )
      )
     )
    )
   )
   (if
    (i32.gt_s
     (get_local $17)
     (i32.const 9)
    )
    (set_local $39
     (f32.const 0.10000000149011612)
    )
   )
   (set_local $42
    (f32.div
     (f32.const 1)
     (f32.convert_s/i32
      (get_local $38)
     )
    )
   )
   (if
    (i32.gt_s
     (get_local $17)
     (i32.const 24)
    )
    (set_local $42
     (f32.const 0.03999999910593033)
    )
   )
   (set_local $55
    (i32.gt_s
     (get_local $17)
     (i32.const 99)
    )
   )
   (set_local $28
    (f32.div
     (f32.const 1)
     (f32.convert_s/i32
      (i32.add
       (get_local $17)
       (i32.const 1)
      )
     )
    )
   )
   (set_local $56
    (i32.lt_s
     (get_local $17)
     (i32.const 2)
    )
   )
   (set_local $10
    (call $_downmix_and_resample
     (get_local $9)
     (get_local $2)
     (i32.add
      (i32.add
       (get_local $0)
       (i32.const 2892)
      )
      (i32.shl
       (get_local $1)
       (i32.const 2)
      )
     )
     (tee_local $57
      (i32.add
       (get_local $0)
       (i32.const 7588)
      )
     )
     (if (result i32)
      (i32.lt_s
       (get_local $3)
       (tee_local $1
        (i32.sub
         (i32.const 720)
         (get_local $1)
        )
       )
      )
      (get_local $3)
      (get_local $1)
     )
     (get_local $4)
     (get_local $5)
     (get_local $6)
     (get_local $7)
     (get_local $24)
    )
   )
   (set_local $51
    (f32.add
     (f32.load
      (tee_local $38
       (i32.add
        (get_local $0)
        (i32.const 7456)
       )
      )
     )
     (get_local $10)
    )
   )
   (f32.store
    (get_local $38)
    (get_local $51)
   )
   (if
    (i32.lt_s
     (tee_local $1
      (i32.add
       (tee_local $52
        (i32.load
         (get_local $30)
        )
       )
       (get_local $3)
      )
     )
     (i32.const 720)
    )
    (block
     (i32.store
      (get_local $30)
      (get_local $1)
     )
     (set_global $STACKTOP
      (get_local $15)
     )
     (return)
    )
   )
   (set_local $24
    (i32.add
     (i32.add
      (get_local $0)
      (i32.const 7600)
     )
     (i32.shl
      (tee_local $17
       (i32.load
        (tee_local $1
         (i32.add
          (get_local $0)
          (i32.const 7444)
         )
        )
       )
      )
      (i32.const 6)
     )
    )
   )
   (i32.store
    (get_local $1)
    (i32.add
     (get_local $17)
     (if (result i32)
      (i32.gt_s
       (get_local $17)
       (i32.const 98)
      )
      (i32.const -99)
      (i32.const 1)
     )
    )
   )
   (set_local $1
    (i32.const 0)
   )
   (loop $while-in
    (if
     (i32.ne
      (get_local $1)
      (i32.const 240)
     )
     (block
      (f32.store
       (i32.add
        (get_local $32)
        (i32.shl
         (get_local $1)
         (i32.const 3)
        )
       )
       (f32.mul
        (tee_local $10
         (f32.load
          (i32.add
           (i32.shl
            (get_local $1)
            (i32.const 2)
           )
           (i32.const 29040)
          )
         )
        )
        (f32.load
         (i32.add
          (i32.add
           (get_local $0)
           (i32.const 2892)
          )
          (i32.shl
           (get_local $1)
           (i32.const 2)
          )
         )
        )
       )
      )
      (f32.store offset=4
       (i32.add
        (get_local $32)
        (i32.shl
         (get_local $1)
         (i32.const 3)
        )
       )
       (f32.mul
        (get_local $10)
        (f32.load
         (i32.add
          (i32.add
           (get_local $0)
           (i32.shl
            (get_local $1)
            (i32.const 2)
           )
          )
          (i32.const 3852)
         )
        )
       )
      )
      (f32.store
       (i32.add
        (get_local $32)
        (i32.shl
         (tee_local $53
          (i32.sub
           (i32.const 479)
           (get_local $1)
          )
         )
         (i32.const 3)
        )
       )
       (f32.mul
        (get_local $10)
        (f32.load
         (i32.add
          (i32.add
           (get_local $0)
           (i32.const 2892)
          )
          (i32.shl
           (get_local $53)
           (i32.const 2)
          )
         )
        )
       )
      )
      (f32.store offset=4
       (i32.add
        (get_local $32)
        (i32.shl
         (get_local $53)
         (i32.const 3)
        )
       )
       (f32.mul
        (get_local $10)
        (f32.load
         (i32.add
          (i32.add
           (get_local $0)
           (i32.shl
            (i32.sub
             (i32.const 0)
             (get_local $1)
            )
            (i32.const 2)
           )
          )
          (i32.const 5768)
         )
        )
       )
      )
      (set_local $1
       (i32.add
        (get_local $1)
        (i32.const 1)
       )
      )
      (br $while-in)
     )
    )
   )
   (drop
    (call $_memcpy
     (i32.add
      (get_local $0)
      (i32.const 2892)
     )
     (i32.add
      (get_local $0)
      (i32.const 4812)
     )
     (i32.const 960)
    )
   )
   (set_local $10
    (call $_downmix_and_resample
     (get_local $9)
     (get_local $2)
     (i32.add
      (get_local $0)
      (i32.const 3852)
     )
     (get_local $57)
     (tee_local $1
      (i32.add
       (get_local $3)
       (i32.add
        (get_local $52)
        (i32.const -720)
       )
      )
     )
     (i32.sub
      (i32.add
       (get_local $4)
       (i32.const 720)
      )
      (get_local $52)
     )
     (get_local $5)
     (get_local $6)
     (get_local $7)
     (i32.load
      (get_local $46)
     )
    )
   )
   (f32.store
    (get_local $38)
    (get_local $10)
   )
   (i32.store
    (get_local $30)
    (i32.add
     (get_local $1)
     (i32.const 240)
    )
   )
   (call $_opus_fft_c
    (get_local $54)
    (get_local $32)
    (get_local $18)
   )
   (br_if $folding-inner0
    (f32.ne
     (tee_local $10
      (f32.load
       (get_local $18)
      )
     )
     (get_local $10)
    )
   )
   (set_local $1
    (i32.const 1)
   )
   (loop $while-in4
    (if
     (i32.ne
      (get_local $1)
      (i32.const 240)
     )
     (block
      (set_local $11
       (f32.load
        (i32.add
         (get_local $18)
         (i32.shl
          (tee_local $2
           (i32.sub
            (i32.const 480)
            (get_local $1)
           )
          )
          (i32.const 3)
         )
        )
       )
      )
      (set_local $16
       (f32.add
        (tee_local $12
         (f32.load offset=4
          (i32.add
           (get_local $18)
           (i32.shl
            (get_local $1)
            (i32.const 3)
           )
          )
         )
        )
        (tee_local $19
         (f32.load offset=4
          (i32.add
           (get_local $18)
           (i32.shl
            (get_local $2)
            (i32.const 3)
           )
          )
         )
        )
       )
      )
      (set_local $27
       (f32.sub
        (get_local $11)
        (tee_local $26
         (f32.load
          (i32.add
           (get_local $18)
           (i32.shl
            (get_local $1)
            (i32.const 3)
           )
          )
         )
        )
       )
      )
      (set_local $11
       (f32.sub
        (tee_local $19
         (f32.sub
          (tee_local $12
           (f32.mul
            (call $_fast_atan2f
             (f32.sub
              (get_local $12)
              (get_local $19)
             )
             (f32.add
              (get_local $26)
              (get_local $11)
             )
            )
            (f32.const 0.15915493667125702)
           )
          )
          (f32.load
           (tee_local $2
            (i32.add
             (i32.add
              (get_local $0)
              (i32.const 12)
             )
             (i32.shl
              (get_local $1)
              (i32.const 2)
             )
            )
           )
          )
         )
        )
        (f32.load
         (tee_local $3
          (i32.add
           (i32.add
            (get_local $0)
            (i32.const 972)
           )
           (i32.shl
            (get_local $1)
            (i32.const 2)
           )
          )
         )
        )
       )
      )
      (set_local $12
       (f32.sub
        (tee_local $26
         (f32.sub
          (tee_local $16
           (f32.mul
            (call $_fast_atan2f
             (get_local $27)
             (get_local $16)
            )
            (f32.const 0.15915493667125702)
           )
          )
          (get_local $12)
         )
        )
        (get_local $19)
       )
      )
      (set_local $19
       (f32.convert_s/i32
        (call $_lrintf
         (get_local $11)
        )
       )
      )
      (set_local $19
       (f32.abs
        (tee_local $11
         (f32.sub
          (get_local $11)
          (get_local $19)
         )
        )
       )
      )
      (set_local $4
       (i32.add
        (get_local $15)
        (i32.shl
         (get_local $1)
         (i32.const 2)
        )
       )
      )
      (set_local $27
       (f32.mul
        (tee_local $11
         (f32.mul
          (get_local $11)
          (get_local $11)
         )
        )
        (get_local $11)
       )
      )
      (set_local $11
       (f32.convert_s/i32
        (call $_lrintf
         (get_local $12)
        )
       )
      )
      (f32.store
       (get_local $4)
       (f32.add
        (get_local $19)
        (f32.abs
         (tee_local $11
          (f32.sub
           (get_local $12)
           (get_local $11)
          )
         )
        )
       )
      )
      (f32.store
       (i32.add
        (get_local $41)
        (i32.shl
         (get_local $1)
         (i32.const 2)
        )
       )
       (f32.add
        (f32.div
         (f32.const 1)
         (f32.add
          (f32.mul
           (f32.mul
            (f32.add
             (f32.add
              (f32.load
               (tee_local $4
                (i32.add
                 (i32.add
                  (get_local $0)
                  (i32.const 1932)
                 )
                 (i32.shl
                  (get_local $1)
                  (i32.const 2)
                 )
                )
               )
              )
              (get_local $27)
             )
             (f32.mul
              (tee_local $11
               (f32.mul
                (tee_local $11
                 (f32.mul
                  (get_local $11)
                  (get_local $11)
                 )
                )
                (get_local $11)
               )
              )
              (f32.const 2)
             )
            )
            (f32.const 0.25)
           )
           (f32.const 62341.81640625)
          )
          (f32.const 1)
         )
        )
        (f32.const -0.014999999664723873)
       )
      )
      (f32.store
       (i32.add
        (get_local $36)
        (i32.shl
         (get_local $1)
         (i32.const 2)
        )
       )
       (f32.add
        (f32.div
         (f32.const 1)
         (f32.add
          (f32.mul
           (get_local $11)
           (f32.const 62341.81640625)
          )
          (f32.const 1)
         )
        )
        (f32.const -0.014999999664723873)
       )
      )
      (f32.store
       (get_local $2)
       (get_local $16)
      )
      (f32.store
       (get_local $3)
       (get_local $26)
      )
      (f32.store
       (get_local $4)
       (get_local $11)
      )
      (set_local $1
       (i32.add
        (get_local $1)
        (i32.const 1)
       )
      )
      (br $while-in4)
     )
    )
   )
   (set_local $1
    (i32.const 2)
   )
   (loop $while-in6
    (if
     (i32.ne
      (get_local $1)
      (i32.const 239)
     )
     (block
      (set_local $7
       (f32.lt
        (f32.load
         (tee_local $4
          (i32.add
           (get_local $36)
           (i32.shl
            (get_local $1)
            (i32.const 2)
           )
          )
         )
        )
        (if (result f32)
         (tee_local $6
          (f32.gt
           (tee_local $11
            (f32.load
             (tee_local $3
              (i32.add
               (get_local $36)
               (i32.shl
                (i32.add
                 (get_local $1)
                 (i32.const -1)
                )
                (i32.const 2)
               )
              )
             )
            )
           )
           (tee_local $12
            (f32.load
             (tee_local $5
              (i32.add
               (get_local $36)
               (i32.shl
                (tee_local $2
                 (i32.add
                  (get_local $1)
                  (i32.const 1)
                 )
                )
                (i32.const 2)
               )
              )
             )
            )
           )
          )
         )
         (get_local $11)
         (get_local $12)
        )
       )
      )
      (if
       (i32.eqz
        (get_local $6)
       )
       (set_local $3
        (get_local $5)
       )
      )
      (set_local $11
       (f32.load
        (tee_local $1
         (i32.add
          (get_local $41)
          (i32.shl
           (get_local $1)
           (i32.const 2)
          )
         )
        )
       )
      )
      (f32.store
       (get_local $1)
       (f32.mul
        (if (result f32)
         (f32.gt
          (get_local $11)
          (tee_local $12
           (f32.add
            (f32.load
             (if (result i32)
              (get_local $7)
              (get_local $4)
              (get_local $3)
             )
            )
            (f32.const -0.10000000149011612)
           )
          )
         )
         (get_local $11)
         (get_local $12)
        )
        (f32.const 0.8999999761581421)
       )
      )
      (set_local $1
       (get_local $2)
      )
      (br $while-in6)
     )
    )
   )
   (f32.store
    (tee_local $7
     (i32.add
      (i32.add
       (get_local $0)
       (i32.shl
        (get_local $17)
        (i32.const 6)
       )
      )
      (i32.const 7616)
     )
    )
    (f32.const 0)
   )
   (block $label$break$L31
    (if
     (i32.eqz
      (i32.load
       (get_local $29)
      )
     )
     (block
      (set_local $1
       (i32.const 0)
      )
      (loop $while-in9
       (br_if $label$break$L31
        (i32.eq
         (get_local $1)
         (i32.const 18)
        )
       )
       (f32.store
        (i32.add
         (i32.add
          (get_local $0)
          (i32.const 7008)
         )
         (i32.shl
          (get_local $1)
          (i32.const 2)
         )
        )
        (f32.const 1e10)
       )
       (f32.store
        (i32.add
         (i32.add
          (get_local $0)
          (i32.const 7080)
         )
         (i32.shl
          (get_local $1)
          (i32.const 2)
         )
        )
        (f32.const -1e10)
       )
       (set_local $1
        (i32.add
         (get_local $1)
         (i32.const 1)
        )
       )
       (br $while-in9)
      )
     )
    )
   )
   (set_local $10
    (f32.add
     (f32.mul
      (tee_local $10
       (f32.mul
        (get_local $10)
        (f32.const 2)
       )
      )
      (get_local $10)
     )
     (f32.mul
      (tee_local $10
       (f32.mul
        (f32.load offset=4
         (get_local $18)
        )
        (f32.const 2)
       )
      )
      (get_local $10)
     )
    )
   )
   (set_local $1
    (i32.const 1)
   )
   (loop $while-in11
    (if
     (i32.ne
      (get_local $1)
      (i32.const 4)
     )
     (block
      (set_local $10
       (f32.add
        (get_local $10)
        (f32.add
         (f32.add
          (f32.add
           (f32.mul
            (tee_local $10
             (f32.load
              (i32.add
               (get_local $18)
               (i32.shl
                (get_local $1)
                (i32.const 3)
               )
              )
             )
            )
            (get_local $10)
           )
           (f32.mul
            (tee_local $10
             (f32.load
              (i32.add
               (get_local $18)
               (i32.shl
                (tee_local $2
                 (i32.sub
                  (i32.const 480)
                  (get_local $1)
                 )
                )
                (i32.const 3)
               )
              )
             )
            )
            (get_local $10)
           )
          )
          (f32.mul
           (tee_local $10
            (f32.load offset=4
             (i32.add
              (get_local $18)
              (i32.shl
               (get_local $1)
               (i32.const 3)
              )
             )
            )
           )
           (get_local $10)
          )
         )
         (f32.mul
          (tee_local $10
           (f32.load offset=4
            (i32.add
             (get_local $18)
             (i32.shl
              (get_local $2)
              (i32.const 3)
             )
            )
           )
          )
          (get_local $10)
         )
        )
       )
      )
      (set_local $1
       (i32.add
        (get_local $1)
        (i32.const 1)
       )
      )
      (br $while-in11)
     )
    )
   )
   (set_local $14
    (f32.mul
     (f32.demote/f64
      (call $Math_log
       (f64.promote/f32
        (f32.add
         (get_local $10)
         (f32.const 1.000000013351432e-10)
        )
       )
      )
     )
     (f32.const 0.7213475108146667)
    )
   )
   (f32.store
    (get_local $37)
    (get_local $14)
   )
   (set_local $5
    (i32.add
     (get_local $0)
     (i32.const 7432)
    )
   )
   (set_local $16
    (f32.const 0)
   )
   (set_local $19
    (f32.const 0)
   )
   (set_local $26
    (f32.const 0)
   )
   (set_local $27
    (f32.const 0)
   )
   (set_local $1
    (i32.const 0)
   )
   (loop $while-in13
    (if
     (i32.lt_u
      (get_local $1)
      (i32.const 18)
     )
     (block
      (set_local $4
       (i32.load
        (i32.add
         (i32.shl
          (tee_local $2
           (i32.add
            (get_local $1)
            (i32.const 1)
           )
          )
          (i32.const 2)
         )
         (i32.const 30000)
        )
       )
      )
      (set_local $11
       (f32.const 0)
      )
      (set_local $13
       (f32.const 0)
      )
      (set_local $10
       (f32.const 0)
      )
      (set_local $3
       (i32.load
        (i32.add
         (i32.shl
          (get_local $1)
          (i32.const 2)
         )
         (i32.const 30000)
        )
       )
      )
      (loop $while-in15
       (if
        (i32.lt_s
         (get_local $3)
         (get_local $4)
        )
        (block
         (set_local $10
          (f32.add
           (get_local $10)
           (tee_local $12
            (f32.add
             (f32.add
              (f32.add
               (f32.mul
                (tee_local $10
                 (f32.load
                  (i32.add
                   (get_local $18)
                   (i32.shl
                    (get_local $3)
                    (i32.const 3)
                   )
                  )
                 )
                )
                (get_local $10)
               )
               (f32.mul
                (tee_local $10
                 (f32.load
                  (i32.add
                   (get_local $18)
                   (i32.shl
                    (tee_local $6
                     (i32.sub
                      (i32.const 480)
                      (get_local $3)
                     )
                    )
                    (i32.const 3)
                   )
                  )
                 )
                )
                (get_local $10)
               )
              )
              (f32.mul
               (tee_local $10
                (f32.load offset=4
                 (i32.add
                  (get_local $18)
                  (i32.shl
                   (get_local $3)
                   (i32.const 3)
                  )
                 )
                )
               )
               (get_local $10)
              )
             )
             (f32.mul
              (tee_local $10
               (f32.load offset=4
                (i32.add
                 (get_local $18)
                 (i32.shl
                  (get_local $6)
                  (i32.const 3)
                 )
                )
               )
              )
              (get_local $10)
             )
            )
           )
          )
         )
         (set_local $11
          (f32.add
           (get_local $11)
           (f32.mul
            (f32.mul
             (get_local $12)
             (f32.const 2)
            )
            (f32.sub
             (f32.const 0.5)
             (f32.load
              (i32.add
               (get_local $15)
               (i32.shl
                (get_local $3)
                (i32.const 2)
               )
              )
             )
            )
           )
          )
         )
         (set_local $13
          (f32.add
           (get_local $13)
           (f32.mul
            (get_local $12)
            (if (result f32)
             (f32.lt
              (tee_local $12
               (f32.load
                (i32.add
                 (get_local $41)
                 (i32.shl
                  (get_local $3)
                  (i32.const 2)
                 )
                )
               )
              )
              (f32.const 0)
             )
             (f32.const 0)
             (get_local $12)
            )
           )
          )
         )
         (set_local $3
          (i32.add
           (get_local $3)
           (i32.const 1)
          )
         )
         (br $while-in15)
        )
       )
      )
      (br_if $folding-inner0
       (i32.or
        (i32.eqz
         (f32.lt
          (get_local $10)
          (f32.const 1e9)
         )
        )
        (f32.ne
         (get_local $10)
         (get_local $10)
        )
       )
      )
      (f32.store
       (i32.add
        (i32.add
         (i32.add
          (get_local $0)
          (i32.const 5856)
         )
         (i32.mul
          (i32.load
           (get_local $5)
          )
          (i32.const 72)
         )
        )
        (i32.shl
         (get_local $1)
         (i32.const 2)
        )
       )
       (get_local $10)
      )
      (set_local $26
       (f32.add
        (get_local $26)
        (f32.div
         (get_local $11)
         (tee_local $34
          (f32.add
           (get_local $10)
           (f32.const 1.0000000036274937e-15)
          )
         )
        )
       )
      )
      (set_local $33
       (f32.add
        (get_local $33)
        (f32.sqrt
         (tee_local $10
          (f32.add
           (get_local $10)
           (f32.const 1.000000013351432e-10)
          )
         )
        )
       )
      )
      (set_local $12
       (f32.demote/f64
        (call $Math_log
         (f64.promote/f32
          (get_local $10)
         )
        )
       )
      )
      (f32.store
       (i32.add
        (get_local $48)
        (i32.shl
         (get_local $1)
         (i32.const 2)
        )
       )
       (get_local $12)
      )
      (f32.store
       (i32.add
        (get_local $37)
        (i32.shl
         (get_local $2)
         (i32.const 2)
        )
       )
       (f32.mul
        (get_local $12)
        (f32.const 0.7213475108146667)
       )
      )
      (f32.store
       (i32.add
        (i32.add
         (i32.add
          (get_local $0)
          (i32.const 6432)
         )
         (i32.mul
          (i32.load
           (get_local $5)
          )
          (i32.const 72)
         )
        )
        (i32.shl
         (get_local $1)
         (i32.const 2)
        )
       )
       (get_local $12)
      )
      (if
       (f64.lt
        (f64.add
         (f64.promote/f32
          (tee_local $11
           (if (result f32)
            (i32.load
             (get_local $29)
            )
            (block (result f32)
             (set_local $3
              (tee_local $6
               (i32.add
                (i32.add
                 (get_local $0)
                 (i32.const 7080)
                )
                (i32.shl
                 (get_local $1)
                 (i32.const 2)
                )
               )
              )
             )
             (set_local $4
              (tee_local $9
               (i32.add
                (i32.add
                 (get_local $0)
                 (i32.const 7008)
                )
                (i32.shl
                 (get_local $1)
                 (i32.const 2)
                )
               )
              )
             )
             (set_local $10
              (f32.load
               (get_local $6)
              )
             )
             (f32.load
              (get_local $9)
             )
            )
            (block (result f32)
             (f32.store
              (tee_local $4
               (i32.add
                (i32.add
                 (get_local $0)
                 (i32.const 7008)
                )
                (i32.shl
                 (get_local $1)
                 (i32.const 2)
                )
               )
              )
              (get_local $12)
             )
             (f32.store
              (tee_local $3
               (i32.add
                (i32.add
                 (get_local $0)
                 (i32.const 7080)
                )
                (i32.shl
                 (get_local $1)
                 (i32.const 2)
                )
               )
              )
              (get_local $12)
             )
             (tee_local $10
              (get_local $12)
             )
            )
           )
          )
         )
         (f64.const 7.5)
        )
        (f64.promote/f32
         (get_local $10)
        )
       )
       (if
        (f32.gt
         (f32.sub
          (get_local $10)
          (get_local $12)
         )
         (f32.sub
          (get_local $12)
          (get_local $11)
         )
        )
        (f32.store
         (get_local $3)
         (tee_local $10
          (f32.add
           (get_local $10)
           (f32.const -0.009999999776482582)
          )
         )
        )
        (f32.store
         (get_local $4)
         (tee_local $11
          (f32.add
           (get_local $11)
           (f32.const 0.009999999776482582)
          )
         )
        )
       )
      )
      (if
       (f32.lt
        (get_local $10)
        (get_local $12)
       )
       (block
        (f32.store
         (get_local $3)
         (get_local $12)
        )
        (f32.store
         (get_local $4)
         (if (result f32)
          (f32.gt
           (tee_local $10
            (f32.add
             (get_local $12)
             (f32.const -15)
            )
           )
           (get_local $11)
          )
          (tee_local $11
           (get_local $10)
          )
          (get_local $11)
         )
        )
        (set_local $10
         (get_local $12)
        )
       )
       (if
        (f32.gt
         (get_local $11)
         (get_local $12)
        )
        (block
         (f32.store
          (get_local $4)
          (get_local $12)
         )
         (f32.store
          (get_local $3)
          (if (result f32)
           (f32.lt
            (tee_local $11
             (f32.add
              (get_local $12)
              (f32.const 15)
             )
            )
            (get_local $10)
           )
           (tee_local $10
            (get_local $11)
           )
           (get_local $10)
          )
         )
         (set_local $11
          (get_local $12)
         )
        )
       )
      )
      (set_local $20
       (f32.const 0)
      )
      (set_local $22
       (f32.const 0)
      )
      (set_local $3
       (i32.const 0)
      )
      (loop $while-in18
       (if
        (i32.ne
         (get_local $3)
         (i32.const 8)
        )
        (block
         (set_local $20
          (f32.add
           (get_local $20)
           (tee_local $45
            (f32.load
             (i32.add
              (i32.add
               (i32.add
                (get_local $0)
                (i32.const 5856)
               )
               (i32.mul
                (get_local $3)
                (i32.const 72)
               )
              )
              (i32.shl
               (get_local $1)
               (i32.const 2)
              )
             )
            )
           )
          )
         )
         (set_local $22
          (f32.add
           (get_local $22)
           (f32.sqrt
            (get_local $45)
           )
          )
         )
         (set_local $3
          (i32.add
           (get_local $3)
           (i32.const 1)
          )
         )
         (br $while-in18)
        )
       )
      )
      (f32.store
       (i32.add
        (get_local $47)
        (i32.shl
         (get_local $1)
         (i32.const 2)
        )
       )
       (if (result f32)
        (f32.gt
         (tee_local $13
          (f32.div
           (get_local $13)
           (get_local $34)
          )
         )
         (tee_local $22
          (f32.mul
           (tee_local $20
            (f32.mul
             (tee_local $20
              (f32.mul
               (if (result f32)
                (f32.gt
                 (tee_local $20
                  (f32.div
                   (get_local $22)
                   (f32.demote/f64
                    (f64.sqrt
                     (f64.add
                      (f64.promote/f32
                       (f32.mul
                        (get_local $20)
                        (f32.const 8)
                       )
                      )
                      (f64.const 1e-15)
                     )
                    )
                   )
                  )
                 )
                 (f32.const 0.9900000095367432)
                )
                (tee_local $20
                 (f32.const 0.9900000095367432)
                )
                (get_local $20)
               )
               (get_local $20)
              )
             )
             (get_local $20)
            )
           )
           (f32.load
            (tee_local $3
             (i32.add
              (i32.add
               (get_local $0)
               (i32.const 5776)
              )
              (i32.shl
               (get_local $1)
               (i32.const 2)
              )
             )
            )
           )
          )
         )
        )
        (get_local $13)
        (tee_local $13
         (get_local $22)
        )
       )
      )
      (set_local $16
       (f32.add
        (get_local $16)
        (get_local $13)
       )
      )
      (if
       (i32.gt_u
        (get_local $1)
        (i32.const 8)
       )
       (set_local $16
        (f32.sub
         (get_local $16)
         (f32.load
          (i32.add
           (get_local $47)
           (i32.shl
            (i32.add
             (get_local $1)
             (i32.const -9)
            )
            (i32.const 2)
           )
          )
         )
        )
       )
      )
      (set_local $44
       (f32.add
        (get_local $44)
        (f32.div
         (f32.sub
          (get_local $12)
          (get_local $11)
         )
         (f32.add
          (f32.sub
           (get_local $10)
           (get_local $11)
          )
          (f32.const 1.0000000036274937e-15)
         )
        )
       )
      )
      (set_local $27
       (f32.add
        (get_local $27)
        (get_local $20)
       )
      )
      (f32.store
       (get_local $3)
       (get_local $13)
      )
      (if
       (i32.eqz
        (f32.gt
         (get_local $19)
         (tee_local $10
          (f32.mul
           (f32.add
            (f32.mul
             (f32.convert_s/i32
              (i32.add
               (get_local $1)
               (i32.const -18)
              )
             )
             (f32.const 0.029999999329447746)
            )
            (f32.const 1)
           )
           (get_local $16)
          )
         )
        )
       )
       (set_local $19
        (get_local $10)
       )
      )
      (set_local $43
       (f32.add
        (get_local $43)
        (f32.mul
         (get_local $13)
         (f32.convert_s/i32
          (i32.add
           (get_local $1)
           (i32.const -8)
          )
         )
        )
       )
      )
      (set_local $1
       (get_local $2)
      )
      (br $while-in13)
     )
    )
   )
   (f32.store
    (get_local $23)
    (get_local $14)
   )
   (f32.store
    (get_local $31)
    (tee_local $10
     (f32.add
      (get_local $14)
      (f32.const -2.5)
     )
    )
   )
   (set_local $1
    (i32.const 1)
   )
   (loop $while-in20
    (if
     (i32.ne
      (get_local $1)
      (i32.const 19)
     )
     (block
      (set_local $11
       (f32.mul
        (f32.mul
         (f32.convert_s/i32
          (i32.sub
           (i32.load
            (i32.add
             (i32.shl
              (get_local $1)
              (i32.const 2)
             )
             (i32.const 30000)
            )
           )
           (i32.load
            (i32.add
             (i32.shl
              (tee_local $2
               (i32.add
                (get_local $1)
                (i32.const -1)
               )
              )
              (i32.const 2)
             )
             (i32.const 30000)
            )
           )
          )
         )
         (f32.const 2)
        )
        (f32.const 0.25)
       )
      )
      (f32.store
       (i32.add
        (get_local $23)
        (i32.shl
         (get_local $1)
         (i32.const 2)
        )
       )
       (if (result f32)
        (f32.lt
         (tee_local $16
          (f32.add
           (f32.load
            (i32.add
             (get_local $23)
             (i32.shl
              (get_local $2)
              (i32.const 2)
             )
            )
           )
           (get_local $11)
          )
         )
         (tee_local $12
          (f32.load
           (i32.add
            (get_local $37)
            (i32.shl
             (get_local $1)
             (i32.const 2)
            )
           )
          )
         )
        )
        (get_local $16)
        (get_local $12)
       )
      )
      (f32.store
       (i32.add
        (get_local $31)
        (i32.shl
         (get_local $1)
         (i32.const 2)
        )
       )
       (if (result f32)
        (f32.gt
         (tee_local $10
          (f32.sub
           (get_local $10)
           (get_local $11)
          )
         )
         (tee_local $11
          (f32.add
           (get_local $12)
           (f32.const -2.5)
          )
         )
        )
        (get_local $10)
        (tee_local $10
         (get_local $11)
        )
       )
      )
      (set_local $1
       (i32.add
        (get_local $1)
        (i32.const 1)
       )
      )
      (br $while-in20)
     )
    )
   )
   (set_local $1
    (i32.const 16)
   )
   (loop $while-in22
    (if
     (i32.gt_s
      (get_local $1)
      (i32.const -1)
     )
     (block
      (set_local $10
       (f32.mul
        (f32.mul
         (f32.convert_s/i32
          (i32.sub
           (i32.load
            (i32.add
             (i32.shl
              (tee_local $2
               (i32.add
                (get_local $1)
                (i32.const 1)
               )
              )
              (i32.const 2)
             )
             (i32.const 30000)
            )
           )
           (i32.load
            (i32.add
             (i32.shl
              (get_local $1)
              (i32.const 2)
             )
             (i32.const 30000)
            )
           )
          )
         )
         (f32.const 2)
        )
        (f32.const 0.25)
       )
      )
      (set_local $11
       (f32.load
        (tee_local $3
         (i32.add
          (get_local $23)
          (i32.shl
           (get_local $1)
           (i32.const 2)
          )
         )
        )
       )
      )
      (f32.store
       (get_local $3)
       (if (result f32)
        (f32.lt
         (tee_local $12
          (f32.add
           (f32.load
            (i32.add
             (get_local $23)
             (i32.shl
              (get_local $2)
              (i32.const 2)
             )
            )
           )
           (get_local $10)
          )
         )
         (get_local $11)
        )
        (get_local $12)
        (get_local $11)
       )
      )
      (set_local $11
       (f32.load
        (tee_local $3
         (i32.add
          (get_local $31)
          (i32.shl
           (get_local $1)
           (i32.const 2)
          )
         )
        )
       )
      )
      (f32.store
       (get_local $3)
       (if (result f32)
        (f32.gt
         (tee_local $10
          (f32.sub
           (f32.load
            (i32.add
             (get_local $31)
             (i32.shl
              (get_local $2)
              (i32.const 2)
             )
            )
           )
           (get_local $10)
          )
         )
         (get_local $11)
        )
        (get_local $10)
        (get_local $11)
       )
      )
      (set_local $1
       (i32.add
        (get_local $1)
        (i32.const -1)
       )
      )
      (br $while-in22)
     )
    )
   )
   (set_local $1
    (i32.const 0)
   )
   (loop $while-in24
    (if
     (i32.ne
      (get_local $1)
      (i32.const 19)
     )
     (block
      (i32.store8
       (i32.add
        (i32.add
         (i32.add
          (get_local $0)
          (i32.shl
           (get_local $17)
           (i32.const 6)
          )
         )
         (i32.const 7644)
        )
        (get_local $1)
       )
       (if (result i32)
        (i32.lt_s
         (tee_local $2
          (i32.trunc_s/f64
           (f64.floor
            (f64.add
             (f64.promote/f32
              (f32.mul
               (f32.add
                (if (result f32)
                 (f32.lt
                  (tee_local $11
                   (f32.sub
                    (f32.load
                     (i32.add
                      (get_local $31)
                      (i32.shl
                       (get_local $1)
                       (i32.const 2)
                      )
                     )
                    )
                    (tee_local $10
                     (f32.load
                      (i32.add
                       (get_local $37)
                       (i32.shl
                        (get_local $1)
                        (i32.const 2)
                       )
                      )
                     )
                    )
                   )
                  )
                  (f32.const 0)
                 )
                 (f32.const 0)
                 (get_local $11)
                )
                (if (result f32)
                 (f32.lt
                  (tee_local $10
                   (f32.sub
                    (get_local $10)
                    (f32.add
                     (f32.load
                      (i32.add
                       (get_local $23)
                       (i32.shl
                        (get_local $1)
                        (i32.const 2)
                       )
                      )
                     )
                     (f32.const 2.5)
                    )
                   )
                  )
                  (f32.const 0)
                 )
                 (f32.const 0)
                 (get_local $10)
                )
               )
               (f32.const 64)
              )
             )
             (f64.const 0.5)
            )
           )
          )
         )
         (i32.const 255)
        )
        (get_local $2)
        (i32.const 255)
       )
      )
      (set_local $1
       (i32.add
        (get_local $1)
        (i32.const 1)
       )
      )
      (br $while-in24)
     )
    )
   )
   (set_local $34
    (f32.const 0)
   )
   (set_local $1
    (i32.const 0)
   )
   (loop $while-in26
    (if
     (i32.ne
      (get_local $1)
      (i32.const 8)
     )
     (block
      (set_local $2
       (i32.const 0)
      )
      (set_local $10
       (f32.const 999999986991104)
      )
      (loop $while-in28
       (if
        (i32.ne
         (get_local $2)
         (i32.const 8)
        )
        (block
         (set_local $11
          (f32.const 0)
         )
         (set_local $3
          (i32.const 0)
         )
         (loop $while-in30
          (if
           (i32.ne
            (get_local $3)
            (i32.const 18)
           )
           (block
            (set_local $11
             (f32.add
              (get_local $11)
              (f32.mul
               (tee_local $11
                (f32.sub
                 (f32.load
                  (i32.add
                   (i32.add
                    (i32.add
                     (get_local $0)
                     (i32.const 6432)
                    )
                    (i32.mul
                     (get_local $1)
                     (i32.const 72)
                    )
                   )
                   (i32.shl
                    (get_local $3)
                    (i32.const 2)
                   )
                  )
                 )
                 (f32.load
                  (i32.add
                   (i32.add
                    (i32.add
                     (get_local $0)
                     (i32.const 6432)
                    )
                    (i32.mul
                     (get_local $2)
                     (i32.const 72)
                    )
                   )
                   (i32.shl
                    (get_local $3)
                    (i32.const 2)
                   )
                  )
                 )
                )
               )
               (get_local $11)
              )
             )
            )
            (set_local $3
             (i32.add
              (get_local $3)
              (i32.const 1)
             )
            )
            (br $while-in30)
           )
          )
         )
         (if
          (i32.eqz
           (i32.or
            (i32.eq
             (get_local $2)
             (get_local $1)
            )
            (f32.lt
             (get_local $10)
             (get_local $11)
            )
           )
          )
          (set_local $10
           (get_local $11)
          )
         )
         (set_local $2
          (i32.add
           (get_local $2)
           (i32.const 1)
          )
         )
         (br $while-in28)
        )
       )
      )
      (set_local $34
       (f32.add
        (get_local $34)
        (get_local $10)
       )
      )
      (set_local $1
       (i32.add
        (get_local $1)
        (i32.const 1)
       )
      )
      (br $while-in26)
     )
    )
   )
   (set_local $10
    (f32.div
     (f32.const 5.699999746866524e-04)
     (f32.convert_s/i32
      (i32.shl
       (i32.const 1)
       (i32.add
        (get_local $8)
        (i32.const -8)
       )
      )
     )
    )
   )
   (set_local $22
    (f32.mul
     (if (result f32)
      (i32.lt_s
       (get_local $8)
       (i32.const 8)
      )
      (tee_local $10
       (f32.const 5.699999746866524e-04)
      )
      (get_local $10)
     )
     (get_local $10)
    )
   )
   (set_local $10
    (f32.sub
     (f32.const 1)
     (get_local $28)
    )
   )
   (if
    (get_local $55)
    (set_local $10
     (f32.const 0.9900000095367432)
    )
   )
   (set_local $20
    (if (result f32)
     (get_local $56)
     (f32.const 0)
     (get_local $10)
    )
   )
   (set_local $45
    (f32.mul
     (get_local $22)
     (f32.const 3)
    )
   )
   (set_local $6
    (i32.add
     (get_local $0)
     (i32.const 5852)
    )
   )
   (set_local $10
    (f32.const 0)
   )
   (set_local $12
    (f32.const 0)
   )
   (set_local $16
    (f32.const 0)
   )
   (set_local $1
    (i32.const 0)
   )
   (set_local $11
    (f32.const 0)
   )
   (set_local $3
    (i32.const 0)
   )
   (loop $while-in32
    (if
     (i32.ne
      (get_local $3)
      (i32.const 18)
     )
     (block
      (set_local $8
       (i32.load
        (i32.add
         (i32.shl
          (tee_local $2
           (i32.add
            (get_local $3)
            (i32.const 1)
           )
          )
          (i32.const 2)
         )
         (i32.const 30000)
        )
       )
      )
      (set_local $14
       (f32.const 0)
      )
      (set_local $4
       (tee_local $9
        (i32.load
         (i32.add
          (i32.shl
           (get_local $3)
           (i32.const 2)
          )
          (i32.const 30000)
         )
        )
       )
      )
      (loop $while-in34
       (if
        (i32.lt_s
         (get_local $4)
         (get_local $8)
        )
        (block
         (set_local $14
          (f32.add
           (get_local $14)
           (f32.add
            (f32.add
             (f32.add
              (f32.mul
               (tee_local $13
                (f32.load
                 (i32.add
                  (get_local $18)
                  (i32.shl
                   (get_local $4)
                   (i32.const 3)
                  )
                 )
                )
               )
               (get_local $13)
              )
              (f32.mul
               (tee_local $13
                (f32.load
                 (i32.add
                  (get_local $18)
                  (i32.shl
                   (tee_local $23
                    (i32.sub
                     (i32.const 480)
                     (get_local $4)
                    )
                   )
                   (i32.const 3)
                  )
                 )
                )
               )
               (get_local $13)
              )
             )
             (f32.mul
              (tee_local $13
               (f32.load offset=4
                (i32.add
                 (get_local $18)
                 (i32.shl
                  (get_local $4)
                  (i32.const 3)
                 )
                )
               )
              )
              (get_local $13)
             )
            )
            (f32.mul
             (tee_local $13
              (f32.load offset=4
               (i32.add
                (get_local $18)
                (i32.shl
                 (get_local $23)
                 (i32.const 3)
                )
               )
              )
             )
             (get_local $13)
            )
           )
          )
         )
         (set_local $4
          (i32.add
           (get_local $4)
           (i32.const 1)
          )
         )
         (br $while-in34)
        )
       )
      )
      (if
       (i32.eqz
        (f32.gt
         (get_local $11)
         (get_local $14)
        )
       )
       (set_local $11
        (get_local $14)
       )
      )
      (if
       (i32.eqz
        (f32.gt
         (tee_local $13
          (f32.mul
           (get_local $20)
           (f32.load
            (tee_local $4
             (i32.add
              (i32.add
               (get_local $0)
               (i32.const 7152)
              )
              (i32.shl
               (get_local $3)
               (i32.const 2)
              )
             )
            )
           )
          )
         )
         (get_local $14)
        )
       )
       (set_local $13
        (get_local $14)
       )
      )
      (f32.store
       (get_local $4)
       (get_local $13)
      )
      (if
       (f32.gt
        (f32.mul
         (get_local $14)
         (f32.const 1e9)
        )
        (get_local $11)
       )
       (block
        (set_local $28
         (f32.convert_s/i32
          (i32.sub
           (get_local $8)
           (get_local $9)
          )
         )
        )
        (if
         (i32.or
          (f32.gt
           (if (result f32)
            (f32.gt
             (get_local $14)
             (get_local $13)
            )
            (get_local $14)
            (get_local $13)
           )
           (f32.mul
            (get_local $45)
            (get_local $28)
           )
          )
          (f32.gt
           (get_local $14)
           (f32.mul
            (get_local $22)
            (get_local $28)
           )
          )
         )
         (set_local $1
          (get_local $2)
         )
        )
       )
      )
      (set_local $13
       (f32.add
        (get_local $12)
        (get_local $14)
       )
      )
      (set_local $28
       (f32.add
        (get_local $10)
        (get_local $14)
       )
      )
      (if
       (tee_local $4
        (i32.lt_u
         (get_local $3)
         (i32.const 11)
        )
       )
       (set_local $12
        (get_local $13)
       )
      )
      (if
       (i32.eqz
        (get_local $4)
       )
       (set_local $10
        (get_local $28)
       )
      )
      (i32.store
       (i32.add
        (get_local $35)
        (i32.shl
         (get_local $3)
         (i32.const 2)
        )
       )
       (f32.lt
        (get_local $14)
        (f32.mul
         (if (result f32)
          (i32.gt_s
           (i32.load
            (get_local $6)
           )
           (get_local $3)
          )
          (f32.const 0.009999999776482582)
          (f32.const 0.05000000074505806)
         )
         (get_local $16)
        )
       )
      )
      (if
       (i32.eqz
        (f32.gt
         (tee_local $16
          (f32.mul
           (get_local $16)
           (f32.const 0.05000000074505806)
          )
         )
         (get_local $14)
        )
       )
       (set_local $16
        (get_local $14)
       )
      )
      (set_local $3
       (get_local $2)
      )
      (br $while-in32)
     )
    )
   )
   (if
    (i32.eq
     (i32.load
      (get_local $46)
     )
     (i32.const 48000)
    )
    (block
     (set_local $13
      (f32.mul
       (get_local $51)
       (f32.const 2.7777778450399637e-04)
      )
     )
     (set_local $14
      (if (result f32)
       (tee_local $2
        (i32.eq
         (i32.load
          (get_local $6)
         )
         (i32.const 20)
        )
       )
       (f32.const 10)
       (f32.const 30)
      )
     )
     (set_local $11
      (f32.add
       (get_local $10)
       (get_local $13)
      )
     )
     (if
      (i32.eqz
       (f32.gt
        (tee_local $10
         (f32.mul
          (get_local $20)
          (f32.load
           (tee_local $3
            (i32.add
             (get_local $0)
             (i32.const 7224)
            )
           )
          )
         )
        )
        (get_local $13)
       )
      )
      (set_local $10
       (get_local $13)
      )
     )
     (f32.store
      (get_local $3)
      (get_local $10)
     )
     (block $__rjto$0
      (block $__rjti$0
       (br_if $__rjti$0
        (f32.gt
         (if (result f32)
          (f32.gt
           (get_local $13)
           (get_local $10)
          )
          (get_local $13)
          (get_local $10)
         )
         (f32.mul
          (f32.mul
           (f32.mul
            (get_local $14)
            (f32.const 3)
           )
           (get_local $22)
          )
          (f32.const 160)
         )
        )
       )
       (br_if $__rjti$0
        (f32.gt
         (get_local $13)
         (f32.mul
          (f32.mul
           (get_local $14)
           (get_local $22)
          )
          (f32.const 160)
         )
        )
       )
       (br $__rjto$0)
      )
      (set_local $1
       (i32.const 20)
      )
     )
     (i32.store offset=72
      (get_local $35)
      (f32.lt
       (get_local $13)
       (f32.mul
        (if (result f32)
         (get_local $2)
         (f32.const 0.009999999776482582)
         (f32.const 0.05000000074505806)
        )
        (get_local $16)
       )
      )
     )
     (set_local $10
      (get_local $11)
     )
    )
   )
   (set_local $11
    (f32.div
     (get_local $12)
     (get_local $10)
    )
   )
   (f32.store
    (i32.add
     (i32.add
      (get_local $0)
      (i32.shl
       (get_local $17)
       (i32.const 6)
      )
     )
     (i32.const 7640)
    )
    (if (result f32)
     (f32.gt
      (get_local $10)
      (get_local $12)
     )
     (get_local $11)
     (f32.const 1)
    )
   )
   (if
    (i32.eq
     (get_local $1)
     (i32.const 20)
    )
    (set_local $1
     (if (result i32)
      (i32.load offset=72
       (get_local $35)
      )
      (i32.const 18)
      (i32.const 20)
     )
    )
    (if
     (i32.lt_u
      (i32.add
       (get_local $1)
       (i32.const -1)
      )
      (i32.const 18)
     )
     (if
      (i32.load
       (i32.add
        (get_local $35)
        (i32.shl
         (tee_local $2
          (i32.add
           (get_local $1)
           (i32.const -1)
          )
         )
         (i32.const 2)
        )
       )
      )
      (set_local $1
       (get_local $2)
      )
     )
    )
   )
   (set_local $12
    (f32.sqrt
     (f32.div
      (f32.mul
       (get_local $34)
       (f32.const 0.125)
      )
      (f32.const 18)
     )
    )
   )
   (if
    (i32.lt_s
     (tee_local $4
      (i32.load
       (get_local $29)
      )
     )
     (i32.const 3)
    )
    (set_local $1
     (i32.const 20)
    )
   )
   (set_local $11
    (f32.mul
     (f32.demote/f64
      (call $_llvm_log10_f64
       (f64.promote/f32
        (get_local $33)
       )
      )
     )
     (f32.const 20)
    )
   )
   (if
    (i32.eqz
     (f32.gt
      (tee_local $10
       (f32.add
        (f32.load
         (tee_local $2
          (i32.add
           (get_local $0)
           (i32.const 7424)
          )
         )
        )
        (f32.const -0.003000000026077032)
       )
      )
      (get_local $11)
     )
    )
    (set_local $10
     (get_local $11)
    )
   )
   (f32.store
    (get_local $2)
    (get_local $10)
   )
   (set_local $33
    (f32.add
     (tee_local $16
      (f32.mul
       (f32.load
        (tee_local $8
         (i32.add
          (get_local $0)
          (i32.const 7428)
         )
        )
       )
       (f32.sub
        (f32.const 1)
        (get_local $42)
       )
      )
     )
     (get_local $42)
    )
   )
   (f32.store
    (get_local $8)
    (if (result f32)
     (f32.lt
      (get_local $11)
      (f32.add
       (get_local $10)
       (f32.const -30)
      )
     )
     (get_local $33)
     (get_local $16)
    )
   )
   (set_local $2
    (i32.const 0)
   )
   (loop $while-in36
    (if
     (i32.ne
      (get_local $2)
      (i32.const 8)
     )
     (block
      (set_local $9
       (i32.shl
        (get_local $2)
        (i32.const 4)
       )
      )
      (set_local $10
       (f32.const 0)
      )
      (set_local $3
       (i32.const 0)
      )
      (loop $while-in38
       (if
        (i32.ne
         (get_local $3)
         (i32.const 16)
        )
        (block
         (set_local $10
          (f32.add
           (get_local $10)
           (f32.mul
            (f32.load
             (i32.add
              (i32.shl
               (i32.add
                (get_local $9)
                (get_local $3)
               )
               (i32.const 2)
              )
              (i32.const 30080)
             )
            )
            (f32.load
             (i32.add
              (get_local $48)
              (i32.shl
               (get_local $3)
               (i32.const 2)
              )
             )
            )
           )
          )
         )
         (set_local $3
          (i32.add
           (get_local $3)
           (i32.const 1)
          )
         )
         (br $while-in38)
        )
       )
      )
      (f32.store
       (i32.add
        (get_local $25)
        (i32.shl
         (get_local $2)
         (i32.const 2)
        )
       )
       (get_local $10)
      )
      (set_local $2
       (i32.add
        (get_local $2)
        (i32.const 1)
       )
      )
      (br $while-in36)
     )
    )
   )
   (set_local $3
    (i32.const 0)
   )
   (loop $while-in40
    (if
     (i32.ne
      (get_local $3)
      (i32.const 8)
     )
     (block
      (set_local $9
       (i32.shl
        (get_local $3)
        (i32.const 4)
       )
      )
      (set_local $10
       (f32.const 0)
      )
      (set_local $2
       (i32.const 0)
      )
      (loop $while-in42
       (if
        (i32.ne
         (get_local $2)
         (i32.const 16)
        )
        (block
         (set_local $10
          (f32.add
           (get_local $10)
           (f32.mul
            (f32.mul
             (f32.load
              (i32.add
               (i32.shl
                (i32.add
                 (get_local $9)
                 (get_local $2)
                )
                (i32.const 2)
               )
               (i32.const 30080)
              )
             )
             (f32.const 0.5)
            )
            (f32.add
             (f32.load
              (i32.add
               (i32.add
                (get_local $0)
                (i32.const 7080)
               )
               (i32.shl
                (get_local $2)
                (i32.const 2)
               )
              )
             )
             (f32.load
              (i32.add
               (i32.add
                (get_local $0)
                (i32.const 7008)
               )
               (i32.shl
                (get_local $2)
                (i32.const 2)
               )
              )
             )
            )
           )
          )
         )
         (set_local $2
          (i32.add
           (get_local $2)
           (i32.const 1)
          )
         )
         (br $while-in42)
        )
       )
      )
      (f32.store
       (i32.add
        (get_local $49)
        (i32.shl
         (get_local $3)
         (i32.const 2)
        )
       )
       (get_local $10)
      )
      (set_local $3
       (i32.add
        (get_local $3)
        (i32.const 1)
       )
      )
      (br $while-in40)
     )
    )
   )
   (set_local $16
    (f32.div
     (get_local $27)
     (f32.const 18)
    )
   )
   (set_local $10
    (f32.div
     (get_local $44)
     (f32.const 18)
    )
   )
   (f32.store
    (get_local $7)
    (f32.add
     (tee_local $11
      (f32.div
       (get_local $26)
       (f32.const 18)
      )
     )
     (f32.mul
      (f32.sub
       (f32.const 1)
       (get_local $11)
      )
      (if (result f32)
       (i32.lt_s
        (get_local $4)
        (i32.const 10)
       )
       (f32.const 0.5)
       (get_local $10)
      )
     )
    )
   )
   (if
    (i32.eqz
     (f32.gt
      (tee_local $10
       (f32.div
        (get_local $19)
        (f32.const 9)
       )
      )
      (tee_local $19
       (f32.mul
        (f32.load
         (tee_local $2
          (i32.add
           (get_local $0)
           (i32.const 5848)
          )
         )
        )
        (f32.const 0.800000011920929)
       )
      )
     )
    )
    (set_local $10
     (get_local $19)
    )
   )
   (f32.store
    (get_local $2)
    (get_local $10)
   )
   (f32.store
    (tee_local $3
     (i32.add
      (i32.add
       (get_local $0)
       (i32.shl
        (get_local $17)
        (i32.const 6)
       )
      )
      (i32.const 7608)
     )
    )
    (f32.mul
     (get_local $43)
     (f32.const 0.015625)
    )
   )
   (i32.store
    (get_local $5)
    (i32.rem_s
     (i32.add
      (i32.load
       (get_local $5)
      )
      (i32.const 1)
     )
     (i32.const 8)
    )
   )
   (set_local $2
    (i32.add
     (get_local $4)
     (i32.const 1)
    )
   )
   (i32.store
    (get_local $29)
    (if (result i32)
     (i32.lt_s
      (get_local $4)
      (i32.const 9999)
     )
     (get_local $2)
     (i32.const 10000)
    )
   )
   (f32.store
    (tee_local $4
     (i32.add
      (i32.add
       (get_local $0)
       (i32.shl
        (get_local $17)
        (i32.const 6)
       )
      )
      (i32.const 7604)
     )
    )
    (get_local $10)
   )
   (set_local $2
    (i32.const 0)
   )
   (loop $while-in44
    (if
     (i32.ne
      (get_local $2)
      (i32.const 4)
     )
     (block
      (f32.store
       (i32.add
        (get_local $21)
        (i32.shl
         (get_local $2)
         (i32.const 2)
        )
       )
       (f32.sub
        (f32.add
         (f32.add
          (f32.mul
           (f32.add
            (f32.load
             (i32.add
              (get_local $25)
              (i32.shl
               (get_local $2)
               (i32.const 2)
              )
             )
            )
            (f32.load
             (i32.add
              (i32.add
               (get_local $0)
               (i32.shl
                (get_local $2)
                (i32.const 2)
               )
              )
              (i32.const 7324)
             )
            )
           )
           (f32.const -0.12298999726772308)
          )
          (f32.mul
           (f32.add
            (f32.load
             (i32.add
              (i32.add
               (get_local $0)
               (i32.const 7228)
              )
              (i32.shl
               (get_local $2)
               (i32.const 2)
              )
             )
            )
            (f32.load
             (i32.add
              (i32.add
               (get_local $0)
               (i32.shl
                (get_local $2)
                (i32.const 2)
               )
              )
              (i32.const 7292)
             )
            )
           )
           (f32.const 0.49195000529289246)
          )
         )
         (f32.mul
          (f32.load
           (i32.add
            (i32.add
             (get_local $0)
             (i32.shl
              (get_local $2)
              (i32.const 2)
             )
            )
            (i32.const 7260)
           )
          )
          (f32.const 0.6969299912452698)
         )
        )
        (f32.mul
         (f32.load
          (i32.add
           (i32.add
            (get_local $0)
            (i32.const 7356)
           )
           (i32.shl
            (get_local $2)
            (i32.const 2)
           )
          )
         )
         (f32.const 1.4349000453948975)
        )
       )
      )
      (set_local $2
       (i32.add
        (get_local $2)
        (i32.const 1)
       )
      )
      (br $while-in44)
     )
    )
   )
   (set_local $10
    (f32.sub
     (f32.const 1)
     (get_local $39)
    )
   )
   (set_local $2
    (i32.const 0)
   )
   (loop $while-in46
    (if
     (i32.ne
      (get_local $2)
      (i32.const 4)
     )
     (block
      (f32.store
       (tee_local $5
        (i32.add
         (i32.add
          (get_local $0)
          (i32.const 7356)
         )
         (i32.shl
          (get_local $2)
          (i32.const 2)
         )
        )
       )
       (f32.add
        (f32.mul
         (get_local $10)
         (f32.load
          (get_local $5)
         )
        )
        (f32.mul
         (get_local $39)
         (f32.load
          (i32.add
           (get_local $25)
           (i32.shl
            (get_local $2)
            (i32.const 2)
           )
          )
         )
        )
       )
      )
      (set_local $2
       (i32.add
        (get_local $2)
        (i32.const 1)
       )
      )
      (br $while-in46)
     )
    )
   )
   (set_local $2
    (i32.const 0)
   )
   (loop $while-in48
    (if
     (i32.ne
      (get_local $2)
      (i32.const 4)
     )
     (block
      (f32.store
       (i32.add
        (get_local $21)
        (i32.shl
         (i32.add
          (get_local $2)
          (i32.const 4)
         )
         (i32.const 2)
        )
       )
       (f32.add
        (f32.mul
         (f32.sub
          (f32.load
           (i32.add
            (get_local $25)
            (i32.shl
             (get_local $2)
             (i32.const 2)
            )
           )
          )
          (f32.load
           (i32.add
            (i32.add
             (get_local $0)
             (i32.shl
              (get_local $2)
              (i32.const 2)
             )
            )
            (i32.const 7324)
           )
          )
         )
         (f32.const 0.6324599981307983)
        )
        (f32.mul
         (f32.sub
          (f32.load
           (i32.add
            (i32.add
             (get_local $0)
             (i32.const 7228)
            )
            (i32.shl
             (get_local $2)
             (i32.const 2)
            )
           )
          )
          (f32.load
           (i32.add
            (i32.add
             (get_local $0)
             (i32.shl
              (get_local $2)
              (i32.const 2)
             )
            )
            (i32.const 7292)
           )
          )
         )
         (f32.const 0.31622999906539917)
        )
       )
      )
      (set_local $2
       (i32.add
        (get_local $2)
        (i32.const 1)
       )
      )
      (br $while-in48)
     )
    )
   )
   (set_local $2
    (i32.const 0)
   )
   (loop $while-in50
    (if
     (i32.ne
      (get_local $2)
      (i32.const 3)
     )
     (block
      (f32.store
       (i32.add
        (get_local $21)
        (i32.shl
         (tee_local $5
          (i32.add
           (get_local $2)
           (i32.const 8)
          )
         )
         (i32.const 2)
        )
       )
       (f32.sub
        (f32.sub
         (f32.mul
          (f32.add
           (f32.load
            (i32.add
             (get_local $25)
             (i32.shl
              (get_local $2)
              (i32.const 2)
             )
            )
           )
           (f32.load
            (i32.add
             (i32.add
              (get_local $0)
              (i32.shl
               (get_local $2)
               (i32.const 2)
              )
             )
             (i32.const 7324)
            )
           )
          )
          (f32.const 0.5345199704170227)
         )
         (f32.mul
          (f32.add
           (f32.load
            (i32.add
             (i32.add
              (get_local $0)
              (i32.const 7228)
             )
             (i32.shl
              (get_local $2)
              (i32.const 2)
             )
            )
           )
           (f32.load
            (i32.add
             (i32.add
              (get_local $0)
              (i32.shl
               (get_local $2)
               (i32.const 2)
              )
             )
             (i32.const 7292)
            )
           )
          )
          (f32.const 0.26725998520851135)
         )
        )
        (f32.mul
         (f32.load
          (i32.add
           (i32.add
            (get_local $0)
            (i32.const 7228)
           )
           (i32.shl
            (get_local $5)
            (i32.const 2)
           )
          )
         )
         (f32.const 0.5345199704170227)
        )
       )
      )
      (set_local $2
       (i32.add
        (get_local $2)
        (i32.const 1)
       )
      )
      (br $while-in50)
     )
    )
   )
   (block $label$break$L155
    (if
     (i32.gt_s
      (i32.load
       (get_local $29)
      )
      (i32.const 5)
     )
     (block
      (set_local $2
       (i32.const 0)
      )
      (loop $while-in53
       (br_if $label$break$L155
        (i32.eq
         (get_local $2)
         (i32.const 9)
        )
       )
       (f32.store
        (tee_local $5
         (i32.add
          (i32.add
           (get_local $0)
           (i32.const 7388)
          )
          (i32.shl
           (get_local $2)
           (i32.const 2)
          )
         )
        )
        (f32.add
         (f32.mul
          (get_local $10)
          (f32.load
           (get_local $5)
          )
         )
         (f32.mul
          (f32.mul
           (get_local $39)
           (tee_local $19
            (f32.load
             (i32.add
              (get_local $21)
              (i32.shl
               (get_local $2)
               (i32.const 2)
              )
             )
            )
           )
          )
          (get_local $19)
         )
        )
       )
       (set_local $2
        (i32.add
         (get_local $2)
         (i32.const 1)
        )
       )
       (br $while-in53)
      )
     )
    )
   )
   (set_local $2
    (i32.const 0)
   )
   (loop $while-in55
    (if
     (i32.ne
      (get_local $2)
      (i32.const 4)
     )
     (block
      (f32.store
       (i32.add
        (get_local $21)
        (i32.shl
         (get_local $2)
         (i32.const 2)
        )
       )
       (f32.sub
        (f32.load
         (i32.add
          (get_local $25)
          (i32.shl
           (get_local $2)
           (i32.const 2)
          )
         )
        )
        (f32.load
         (i32.add
          (get_local $49)
          (i32.shl
           (get_local $2)
           (i32.const 2)
          )
         )
        )
       )
      )
      (set_local $2
       (i32.add
        (get_local $2)
        (i32.const 1)
       )
      )
      (br $while-in55)
     )
    )
   )
   (set_local $2
    (i32.const 0)
   )
   (loop $while-in57
    (if
     (i32.ne
      (get_local $2)
      (i32.const 8)
     )
     (block
      (i32.store
       (i32.add
        (i32.add
         (get_local $0)
         (i32.shl
          (get_local $2)
          (i32.const 2)
         )
        )
        (i32.const 7324)
       )
       (i32.load
        (tee_local $5
         (i32.add
          (i32.add
           (get_local $0)
           (i32.shl
            (get_local $2)
            (i32.const 2)
           )
          )
          (i32.const 7292)
         )
        )
       )
      )
      (i32.store
       (get_local $5)
       (i32.load
        (tee_local $5
         (i32.add
          (i32.add
           (get_local $0)
           (i32.shl
            (get_local $2)
            (i32.const 2)
           )
          )
          (i32.const 7260)
         )
        )
       )
      )
      (i32.store
       (get_local $5)
       (i32.load
        (tee_local $5
         (i32.add
          (i32.add
           (get_local $0)
           (i32.const 7228)
          )
          (i32.shl
           (get_local $2)
           (i32.const 2)
          )
         )
        )
       )
      )
      (i32.store
       (get_local $5)
       (i32.load
        (i32.add
         (get_local $25)
         (i32.shl
          (get_local $2)
          (i32.const 2)
         )
        )
       )
      )
      (set_local $2
       (i32.add
        (get_local $2)
        (i32.const 1)
       )
      )
      (br $while-in57)
     )
    )
   )
   (set_local $2
    (i32.const 0)
   )
   (loop $while-in59
    (if
     (i32.ne
      (get_local $2)
      (i32.const 9)
     )
     (block
      (f32.store
       (i32.add
        (get_local $21)
        (i32.shl
         (i32.add
          (get_local $2)
          (i32.const 11)
         )
         (i32.const 2)
        )
       )
       (f32.sub
        (f32.sqrt
         (f32.load
          (i32.add
           (i32.add
            (get_local $0)
            (i32.const 7388)
           )
           (i32.shl
            (get_local $2)
            (i32.const 2)
           )
          )
         )
        )
        (f32.load
         (i32.add
          (i32.shl
           (get_local $2)
           (i32.const 2)
          )
          (i32.const 30592)
         )
        )
       )
      )
      (set_local $2
       (i32.add
        (get_local $2)
        (i32.const 1)
       )
      )
      (br $while-in59)
     )
    )
   )
   (f32.store offset=72
    (get_local $21)
    (f32.add
     (get_local $12)
     (f32.const -0.7799999713897705)
    )
   )
   (f32.store offset=80
    (get_local $21)
    (f32.add
     (f32.load
      (get_local $4)
     )
     (f32.const -0.15472300350666046)
    )
   )
   (f32.store offset=84
    (get_local $21)
    (f32.add
     (f32.load
      (get_local $7)
     )
     (f32.const -0.7246429920196533)
    )
   )
   (f32.store offset=88
    (get_local $21)
    (f32.add
     (get_local $16)
     (f32.const -0.7437170147895813)
    )
   )
   (f32.store offset=92
    (get_local $21)
    (f32.add
     (f32.load
      (get_local $3)
     )
     (f32.const 0.06921599805355072)
    )
   )
   (f32.store offset=96
    (get_local $21)
    (f32.add
     (f32.load
      (get_local $8)
     )
     (f32.const -0.06792999804019928)
    )
   )
   (call $_compute_dense
    (i32.const 40956)
    (get_local $50)
    (get_local $21)
   )
   (call $_compute_gru
    (tee_local $2
     (i32.add
      (get_local $0)
      (i32.const 7460)
     )
    )
    (get_local $50)
   )
   (call $_compute_dense
    (i32.const 40976)
    (get_local $40)
    (get_local $2)
   )
   (i32.store
    (i32.add
     (i32.add
      (get_local $0)
      (i32.shl
       (get_local $17)
       (i32.const 6)
      )
     )
     (i32.const 7636)
    )
    (i32.load offset=4
     (get_local $40)
    )
   )
   (i32.store
    (i32.add
     (i32.add
      (get_local $0)
      (i32.shl
       (get_local $17)
       (i32.const 6)
      )
     )
     (i32.const 7620)
    )
    (i32.load
     (get_local $40)
    )
   )
   (i32.store
    (i32.add
     (i32.add
      (get_local $0)
      (i32.shl
       (get_local $17)
       (i32.const 6)
      )
     )
     (i32.const 7632)
    )
    (get_local $1)
   )
   (i32.store
    (get_local $6)
    (get_local $1)
   )
   (f32.store
    (i32.add
     (i32.add
      (get_local $0)
      (i32.shl
       (get_local $17)
       (i32.const 6)
      )
     )
     (i32.const 7612)
    )
    (get_local $11)
   )
   (i32.store
    (get_local $24)
    (i32.const 1)
   )
   (set_global $STACKTOP
    (get_local $15)
   )
   (return)
  )
  (i32.store
   (get_local $24)
   (i32.const 0)
  )
  (set_global $STACKTOP
   (get_local $15)
  )
 )
 (func $_downmix_and_resample (; 410 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (param $8 i32) (param $9 i32) (result f32)
  (local $10 i32)
  (local $11 f32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (set_local $12
   (get_global $STACKTOP)
  )
  (if
   (i32.eqz
    (get_local $4)
   )
   (block
    (set_global $STACKTOP
     (get_local $12)
    )
    (return
     (f32.const 0)
    )
   )
  )
  (if
   (tee_local $13
    (i32.eq
     (get_local $9)
     (i32.const 48000)
    )
   )
   (block
    (set_local $5
     (i32.shl
      (get_local $5)
      (i32.const 1)
     )
    )
    (set_local $4
     (i32.shl
      (get_local $4)
      (i32.const 1)
     )
    )
   )
   (if
    (i32.eq
     (get_local $9)
     (i32.const 16000)
    )
    (block
     (set_local $5
      (i32.div_s
       (i32.shl
        (get_local $5)
        (i32.const 1)
       )
       (i32.const 3)
      )
     )
     (set_local $4
      (i32.div_s
       (i32.shl
        (get_local $4)
        (i32.const 1)
       )
       (i32.const 3)
      )
     )
    )
   )
  )
  (set_local $14
   (call $_llvm_stacksave)
  )
  (set_local $10
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (get_local $4)
       (i32.const 2)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (call_indirect (type $FUNCSIG$viiiiiii)
   (get_local $1)
   (get_local $10)
   (get_local $4)
   (get_local $5)
   (get_local $6)
   (get_local $7)
   (get_local $8)
   (i32.add
    (i32.and
     (get_local $0)
     (i32.const 1)
    )
    (i32.const 14)
   )
  )
  (set_local $11
   (if (result f32)
    (i32.eq
     (get_local $7)
     (i32.const -2)
    )
    (f32.div
     (f32.const 0.000030517578125)
     (f32.convert_s/i32
      (get_local $8)
     )
    )
    (if (result f32)
     (i32.gt_s
      (get_local $7)
      (i32.const -1)
     )
     (f32.const 0.0000152587890625)
     (f32.const 0.000030517578125)
    )
   )
  )
  (set_local $0
   (i32.const 0)
  )
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $0)
     (get_local $4)
    )
    (block
     (f32.store
      (tee_local $1
       (i32.add
        (get_local $10)
        (i32.shl
         (get_local $0)
         (i32.const 2)
        )
       )
      )
      (f32.mul
       (f32.load
        (get_local $1)
       )
       (get_local $11)
      )
     )
     (set_local $0
      (i32.add
       (get_local $0)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (set_local $11
   (block $label$break$L17 (result f32)
    (if (result f32)
     (get_local $13)
     (call $_silk_resampler_down2_hp
      (get_local $3)
      (get_local $2)
      (get_local $10)
      (get_local $4)
     )
     (block (result f32)
      (if
       (i32.ge_s
        (get_local $9)
        (i32.const 24000)
       )
       (block
        (drop
         (br_if $label$break$L17
          (f32.const 0)
          (i32.sub
           (get_local $9)
           (i32.const 24000)
          )
         )
        )
        (drop
         (call $_memcpy
          (get_local $2)
          (get_local $10)
          (i32.shl
           (get_local $4)
           (i32.const 2)
          )
         )
        )
        (br $label$break$L17
         (f32.const 0)
        )
       )
      )
      (drop
       (br_if $label$break$L17
        (f32.const 0)
        (i32.sub
         (get_local $9)
         (i32.const 16000)
        )
       )
      )
      (set_local $5
       (i32.mul
        (get_local $4)
        (i32.const 3)
       )
      )
      (set_local $8
       (call $_llvm_stacksave)
      )
      (set_local $1
       (get_global $STACKTOP)
      )
      (set_global $STACKTOP
       (i32.add
        (get_global $STACKTOP)
        (i32.and
         (i32.add
          (i32.shl
           (get_local $5)
           (i32.const 2)
          )
          (i32.const 15)
         )
         (i32.const -16)
        )
       )
      )
      (set_local $0
       (i32.const 0)
      )
      (loop $while-in4
       (if
        (i32.lt_s
         (get_local $0)
         (get_local $4)
        )
        (block
         (i32.store
          (i32.add
           (get_local $1)
           (i32.shl
            (tee_local $6
             (i32.mul
              (get_local $0)
              (i32.const 3)
             )
            )
            (i32.const 2)
           )
          )
          (tee_local $7
           (i32.load
            (i32.add
             (get_local $10)
             (i32.shl
              (get_local $0)
              (i32.const 2)
             )
            )
           )
          )
         )
         (i32.store
          (i32.add
           (get_local $1)
           (i32.shl
            (i32.add
             (get_local $6)
             (i32.const 1)
            )
            (i32.const 2)
           )
          )
          (get_local $7)
         )
         (i32.store
          (i32.add
           (get_local $1)
           (i32.shl
            (i32.add
             (get_local $6)
             (i32.const 2)
            )
            (i32.const 2)
           )
          )
          (get_local $7)
         )
         (set_local $0
          (i32.add
           (get_local $0)
           (i32.const 1)
          )
         )
         (br $while-in4)
        )
       )
      )
      (drop
       (call $_silk_resampler_down2_hp
        (get_local $3)
        (get_local $2)
        (get_local $1)
        (get_local $5)
       )
      )
      (call $_llvm_stackrestore
       (get_local $8)
      )
      (f32.const 0)
     )
    )
   )
  )
  (call $_llvm_stackrestore
   (get_local $14)
  )
  (set_global $STACKTOP
   (get_local $12)
  )
  (get_local $11)
 )
 (func $_silk_resampler_down2_hp (; 411 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result f32)
  (local $4 f32)
  (local $5 f32)
  (local $6 f32)
  (local $7 f32)
  (local $8 i32)
  (local $9 i32)
  (local $10 f32)
  (local $11 f32)
  (local $12 i32)
  (local $13 i32)
  (local $14 f32)
  (local $15 f32)
  (set_local $12
   (i32.div_s
    (get_local $3)
    (i32.const 2)
   )
  )
  (set_local $8
   (i32.add
    (get_local $0)
    (i32.const 4)
   )
  )
  (set_local $9
   (i32.add
    (get_local $0)
    (i32.const 8)
   )
  )
  (set_local $3
   (i32.const 0)
  )
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $3)
     (get_local $12)
    )
    (block
     (set_local $5
      (f32.mul
       (f32.sub
        (tee_local $4
         (f32.load
          (i32.add
           (get_local $2)
           (i32.shl
            (tee_local $13
             (i32.shl
              (get_local $3)
              (i32.const 1)
             )
            )
            (i32.const 2)
           )
          )
         )
        )
        (tee_local $7
         (f32.load
          (get_local $0)
         )
        )
       )
       (f32.const 0.6074370741844177)
      )
     )
     (f32.store
      (get_local $0)
      (f32.add
       (get_local $4)
       (get_local $5)
      )
     )
     (set_local $10
      (f32.mul
       (f32.sub
        (tee_local $4
         (f32.load
          (i32.add
           (get_local $2)
           (i32.shl
            (i32.or
             (get_local $13)
             (i32.const 1)
            )
            (i32.const 2)
           )
          )
         )
        )
        (tee_local $14
         (f32.load
          (get_local $8)
         )
        )
       )
       (f32.const 0.15062999725341797)
      )
     )
     (f32.store
      (get_local $8)
      (f32.add
       (get_local $4)
       (get_local $10)
      )
     )
     (set_local $11
      (f32.mul
       (f32.sub
        (f32.neg
         (get_local $4)
        )
        (tee_local $15
         (f32.load
          (get_local $9)
         )
        )
       )
       (f32.const 0.15062999725341797)
      )
     )
     (set_local $5
      (f32.add
       (f32.add
        (tee_local $7
         (f32.add
          (get_local $7)
          (get_local $5)
         )
        )
        (get_local $15)
       )
       (get_local $11)
      )
     )
     (f32.store
      (get_local $9)
      (f32.sub
       (get_local $11)
       (get_local $4)
      )
     )
     (f32.store
      (i32.add
       (get_local $1)
       (i32.shl
        (get_local $3)
        (i32.const 2)
       )
      )
      (f32.mul
       (f32.add
        (f32.add
         (get_local $7)
         (get_local $14)
        )
        (get_local $10)
       )
       (f32.const 0.5)
      )
     )
     (set_local $6
      (f32.add
       (get_local $6)
       (f32.mul
        (get_local $5)
        (get_local $5)
       )
      )
     )
     (set_local $3
      (i32.add
       (get_local $3)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (get_local $6)
 )
 (func $_compute_dense (; 412 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 f32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (set_local $7
   (i32.load offset=8
    (get_local $0)
   )
  )
  (set_local $6
   (i32.load offset=12
    (get_local $0)
   )
  )
  (set_local $8
   (i32.add
    (get_local $0)
    (i32.const 4)
   )
  )
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $4)
     (get_local $6)
    )
    (block
     (set_local $3
      (f32.convert_s/i32
       (i32.load8_s
        (i32.add
         (i32.load
          (get_local $0)
         )
         (get_local $4)
        )
       )
      )
     )
     (set_local $5
      (i32.const 0)
     )
     (loop $while-in1
      (if
       (i32.lt_s
        (get_local $5)
        (get_local $7)
       )
       (block
        (set_local $3
         (f32.add
          (get_local $3)
          (f32.mul
           (f32.load
            (i32.add
             (get_local $2)
             (i32.shl
              (get_local $5)
              (i32.const 2)
             )
            )
           )
           (f32.convert_s/i32
            (i32.load8_s
             (i32.add
              (i32.load
               (get_local $8)
              )
              (i32.add
               (i32.mul
                (get_local $5)
                (get_local $6)
               )
               (get_local $4)
              )
             )
            )
           )
          )
         )
        )
        (set_local $5
         (i32.add
          (get_local $5)
          (i32.const 1)
         )
        )
        (br $while-in1)
       )
      )
     )
     (f32.store
      (i32.add
       (get_local $1)
       (i32.shl
        (get_local $4)
        (i32.const 2)
       )
      )
      (f32.mul
       (get_local $3)
       (f32.const 0.0078125)
      )
     )
     (set_local $4
      (i32.add
       (get_local $4)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (if
   (i32.load offset=16
    (get_local $0)
   )
   (block
    (set_local $0
     (i32.const 0)
    )
    (loop $while-in5
     (if
      (i32.lt_s
       (get_local $0)
       (get_local $6)
      )
      (block
       (set_local $3
        (call $_sigmoid_approx
         (f32.load
          (tee_local $2
           (i32.add
            (get_local $1)
            (i32.shl
             (get_local $0)
             (i32.const 2)
            )
           )
          )
         )
        )
       )
       (f32.store
        (get_local $2)
        (get_local $3)
       )
       (set_local $0
        (i32.add
         (get_local $0)
         (i32.const 1)
        )
       )
       (br $while-in5)
      )
     )
    )
   )
   (block
    (set_local $0
     (i32.const 0)
    )
    (loop $while-in3
     (if
      (i32.lt_s
       (get_local $0)
       (get_local $6)
      )
      (block
       (set_local $3
        (call $_tansig_approx
         (f32.load
          (tee_local $2
           (i32.add
            (get_local $1)
            (i32.shl
             (get_local $0)
             (i32.const 2)
            )
           )
          )
         )
        )
       )
       (f32.store
        (get_local $2)
        (get_local $3)
       )
       (set_local $0
        (i32.add
         (get_local $0)
         (i32.const 1)
        )
       )
       (br $while-in3)
      )
     )
    )
   )
  )
 )
 (func $_sigmoid_approx (; 413 ;) (; has Stack IR ;) (param $0 f32) (result f32)
  (f32.add
   (f32.mul
    (call $_tansig_approx
     (f32.mul
      (get_local $0)
      (f32.const 0.5)
     )
    )
    (f32.const 0.5)
   )
   (f32.const 0.5)
  )
 )
 (func $_tansig_approx (; 414 ;) (; has Stack IR ;) (param $0 f32) (result f32)
  (local $1 f32)
  (local $2 i32)
  (if
   (i32.eqz
    (f32.lt
     (get_local $0)
     (f32.const 8)
    )
   )
   (return
    (f32.const 1)
   )
  )
  (if
   (i32.eqz
    (f32.gt
     (get_local $0)
     (f32.const -8)
    )
   )
   (return
    (f32.const -1)
   )
  )
  (if
   (f32.ne
    (get_local $0)
    (get_local $0)
   )
   (return
    (f32.const 0)
   )
  )
  (set_local $1
   (f32.neg
    (get_local $0)
   )
  )
  (f32.mul
   (if (result f32)
    (tee_local $2
     (f32.lt
      (get_local $0)
      (f32.const 0)
     )
    )
    (f32.const -1)
    (f32.const 1)
   )
   (f32.add
    (tee_local $0
     (f32.load
      (i32.add
       (i32.shl
        (tee_local $2
         (i32.trunc_s/f32
          (f32.floor
           (f32.add
            (f32.mul
             (if (result f32)
              (get_local $2)
              (get_local $1)
              (tee_local $1
               (get_local $0)
              )
             )
             (f32.const 25)
            )
            (f32.const 0.5)
           )
          )
         )
        )
        (i32.const 2)
       )
       (i32.const 30640)
      )
     )
    )
    (f32.mul
     (f32.mul
      (tee_local $1
       (f32.sub
        (get_local $1)
        (f32.mul
         (f32.convert_s/i32
          (get_local $2)
         )
         (f32.const 0.03999999910593033)
        )
       )
      )
      (f32.sub
       (f32.const 1)
       (f32.mul
        (get_local $0)
        (get_local $0)
       )
      )
     )
     (f32.sub
      (f32.const 1)
      (f32.mul
       (get_local $0)
       (get_local $1)
      )
     )
    )
   )
  )
 )
 (func $_compute_gru (; 415 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 f32)
  (local $5 i32)
  (local $6 f32)
  (local $7 i32)
  (local $8 i32)
  (local $9 f32)
  (set_local $5
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.const 384)
   )
  )
  (set_local $7
   (i32.add
    (get_local $5)
    (i32.const 256)
   )
  )
  (set_local $8
   (i32.add
    (get_local $5)
    (i32.const 128)
   )
  )
  (loop $while-in
   (if
    (i32.ne
     (get_local $3)
     (i32.const 24)
    )
    (block
     (set_local $4
      (f32.convert_s/i32
       (i32.load8_s
        (i32.add
         (get_local $3)
         (i32.const 32288)
        )
       )
      )
     )
     (set_local $2
      (i32.const 0)
     )
     (loop $while-in1
      (if
       (i32.ne
        (get_local $2)
        (i32.const 32)
       )
       (block
        (set_local $4
         (f32.add
          (get_local $4)
          (f32.mul
           (f32.load
            (i32.add
             (get_local $1)
             (i32.shl
              (get_local $2)
              (i32.const 2)
             )
            )
           )
           (f32.convert_s/i32
            (i32.load8_s
             (i32.add
              (i32.add
               (i32.mul
                (get_local $2)
                (i32.const 72)
               )
               (get_local $3)
              )
              (i32.const 32368)
             )
            )
           )
          )
         )
        )
        (set_local $2
         (i32.add
          (get_local $2)
          (i32.const 1)
         )
        )
        (br $while-in1)
       )
      )
     )
     (set_local $2
      (i32.const 0)
     )
     (loop $while-in3
      (if
       (i32.ne
        (get_local $2)
        (i32.const 24)
       )
       (block
        (set_local $4
         (f32.add
          (get_local $4)
          (f32.mul
           (f32.load
            (i32.add
             (get_local $0)
             (i32.shl
              (get_local $2)
              (i32.const 2)
             )
            )
           )
           (f32.convert_s/i32
            (i32.load8_s
             (i32.add
              (i32.add
               (i32.mul
                (get_local $2)
                (i32.const 72)
               )
               (get_local $3)
              )
              (i32.const 34672)
             )
            )
           )
          )
         )
        )
        (set_local $2
         (i32.add
          (get_local $2)
          (i32.const 1)
         )
        )
        (br $while-in3)
       )
      )
     )
     (set_local $4
      (call $_sigmoid_approx
       (f32.mul
        (get_local $4)
        (f32.const 0.0078125)
       )
      )
     )
     (f32.store
      (i32.add
       (get_local $7)
       (i32.shl
        (get_local $3)
        (i32.const 2)
       )
      )
      (get_local $4)
     )
     (set_local $3
      (i32.add
       (get_local $3)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (set_local $3
   (i32.const 0)
  )
  (loop $while-in5
   (if
    (i32.ne
     (get_local $3)
     (i32.const 24)
    )
    (block
     (set_local $4
      (f32.convert_s/i32
       (i32.load8_s
        (i32.add
         (get_local $3)
         (i32.const 32312)
        )
       )
      )
     )
     (set_local $2
      (i32.const 0)
     )
     (loop $while-in7
      (if
       (i32.ne
        (get_local $2)
        (i32.const 32)
       )
       (block
        (set_local $4
         (f32.add
          (get_local $4)
          (f32.mul
           (f32.load
            (i32.add
             (get_local $1)
             (i32.shl
              (get_local $2)
              (i32.const 2)
             )
            )
           )
           (f32.convert_s/i32
            (i32.load8_s
             (i32.add
              (i32.add
               (i32.mul
                (get_local $2)
                (i32.const 72)
               )
               (get_local $3)
              )
              (i32.const 32392)
             )
            )
           )
          )
         )
        )
        (set_local $2
         (i32.add
          (get_local $2)
          (i32.const 1)
         )
        )
        (br $while-in7)
       )
      )
     )
     (set_local $2
      (i32.const 0)
     )
     (loop $while-in9
      (if
       (i32.ne
        (get_local $2)
        (i32.const 24)
       )
       (block
        (set_local $4
         (f32.add
          (get_local $4)
          (f32.mul
           (f32.load
            (i32.add
             (get_local $0)
             (i32.shl
              (get_local $2)
              (i32.const 2)
             )
            )
           )
           (f32.convert_s/i32
            (i32.load8_s
             (i32.add
              (i32.add
               (i32.mul
                (get_local $2)
                (i32.const 72)
               )
               (get_local $3)
              )
              (i32.const 34696)
             )
            )
           )
          )
         )
        )
        (set_local $2
         (i32.add
          (get_local $2)
          (i32.const 1)
         )
        )
        (br $while-in9)
       )
      )
     )
     (set_local $4
      (call $_sigmoid_approx
       (f32.mul
        (get_local $4)
        (f32.const 0.0078125)
       )
      )
     )
     (f32.store
      (i32.add
       (get_local $8)
       (i32.shl
        (get_local $3)
        (i32.const 2)
       )
      )
      (get_local $4)
     )
     (set_local $3
      (i32.add
       (get_local $3)
       (i32.const 1)
      )
     )
     (br $while-in5)
    )
   )
  )
  (set_local $3
   (i32.const 0)
  )
  (loop $while-in11
   (if
    (i32.ne
     (get_local $3)
     (i32.const 24)
    )
    (block
     (set_local $4
      (f32.convert_s/i32
       (i32.load8_s
        (i32.add
         (get_local $3)
         (i32.const 32336)
        )
       )
      )
     )
     (set_local $2
      (i32.const 0)
     )
     (loop $while-in13
      (if
       (i32.ne
        (get_local $2)
        (i32.const 32)
       )
       (block
        (set_local $4
         (f32.add
          (get_local $4)
          (f32.mul
           (f32.load
            (i32.add
             (get_local $1)
             (i32.shl
              (get_local $2)
              (i32.const 2)
             )
            )
           )
           (f32.convert_s/i32
            (i32.load8_s
             (i32.add
              (i32.add
               (i32.mul
                (get_local $2)
                (i32.const 72)
               )
               (get_local $3)
              )
              (i32.const 32416)
             )
            )
           )
          )
         )
        )
        (set_local $2
         (i32.add
          (get_local $2)
          (i32.const 1)
         )
        )
        (br $while-in13)
       )
      )
     )
     (set_local $2
      (i32.const 0)
     )
     (loop $while-in15
      (if
       (i32.ne
        (get_local $2)
        (i32.const 24)
       )
       (block
        (set_local $4
         (f32.add
          (get_local $4)
          (f32.mul
           (f32.mul
            (f32.load
             (i32.add
              (get_local $0)
              (i32.shl
               (get_local $2)
               (i32.const 2)
              )
             )
            )
            (f32.convert_s/i32
             (i32.load8_s
              (i32.add
               (i32.add
                (i32.mul
                 (get_local $2)
                 (i32.const 72)
                )
                (get_local $3)
               )
               (i32.const 34720)
              )
             )
            )
           )
           (f32.load
            (i32.add
             (get_local $8)
             (i32.shl
              (get_local $2)
              (i32.const 2)
             )
            )
           )
          )
         )
        )
        (set_local $2
         (i32.add
          (get_local $2)
          (i32.const 1)
         )
        )
        (br $while-in15)
       )
      )
     )
     (set_local $9
      (f32.mul
       (tee_local $6
        (f32.load
         (i32.add
          (get_local $7)
          (i32.shl
           (get_local $3)
           (i32.const 2)
          )
         )
        )
       )
       (f32.load
        (i32.add
         (get_local $0)
         (i32.shl
          (get_local $3)
          (i32.const 2)
         )
        )
       )
      )
     )
     (set_local $6
      (f32.sub
       (f32.const 1)
       (get_local $6)
      )
     )
     (set_local $4
      (call $_tansig_approx
       (f32.mul
        (get_local $4)
        (f32.const 0.0078125)
       )
      )
     )
     (f32.store
      (i32.add
       (get_local $5)
       (i32.shl
        (get_local $3)
        (i32.const 2)
       )
      )
      (f32.add
       (get_local $9)
       (f32.mul
        (get_local $6)
        (get_local $4)
       )
      )
     )
     (set_local $3
      (i32.add
       (get_local $3)
       (i32.const 1)
      )
     )
     (br $while-in11)
    )
   )
  )
  (set_local $1
   (i32.const 0)
  )
  (loop $while-in17
   (if
    (i32.ne
     (get_local $1)
     (i32.const 24)
    )
    (block
     (i32.store
      (i32.add
       (get_local $0)
       (i32.shl
        (get_local $1)
        (i32.const 2)
       )
      )
      (i32.load
       (i32.add
        (get_local $5)
        (i32.shl
         (get_local $1)
         (i32.const 2)
        )
       )
      )
     )
     (set_local $1
      (i32.add
       (get_local $1)
       (i32.const 1)
      )
     )
     (br $while-in17)
    )
   )
  )
  (set_global $STACKTOP
   (get_local $5)
  )
 )
 (func $_speex_resampler_init (; 416 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (call $_speex_resampler_init_frac
   (get_local $0)
   (get_local $1)
   (get_local $2)
   (get_local $1)
   (get_local $2)
   (get_local $3)
   (get_local $4)
  )
 )
 (func $_speex_resampler_init_frac (; 417 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (result i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (if
   (i32.or
    (i32.gt_u
     (get_local $5)
     (i32.const 10)
    )
    (i32.or
     (i32.or
      (i32.eqz
       (get_local $0)
      )
      (i32.eqz
       (get_local $1)
      )
     )
     (i32.eqz
      (get_local $2)
     )
    )
   )
   (block
    (if
     (i32.eqz
      (get_local $6)
     )
     (return
      (i32.const 0)
     )
    )
    (i32.store
     (get_local $6)
     (i32.const 3)
    )
    (return
     (i32.const 0)
    )
   )
  )
  (if
   (i32.eqz
    (tee_local $7
     (call $_speex_alloc_820
      (i32.const 96)
     )
    )
   )
   (block
    (if
     (i32.eqz
      (get_local $6)
     )
     (return
      (i32.const 0)
     )
    )
    (i32.store
     (get_local $6)
     (i32.const 1)
    )
    (return
     (i32.const 0)
    )
   )
  )
  (i32.store
   (tee_local $9
    (i32.add
     (get_local $7)
     (i32.const 52)
    )
   )
   (i32.const 0)
  )
  (i32.store offset=56
   (get_local $7)
   (i32.const 0)
  )
  (i64.store align=4
   (get_local $7)
   (i64.const 0)
  )
  (i64.store offset=8 align=4
   (get_local $7)
   (i64.const 0)
  )
  (i32.store offset=16
   (get_local $7)
   (i32.const -1)
  )
  (i32.store offset=80
   (get_local $7)
   (i32.const 0)
  )
  (i32.store offset=28
   (get_local $7)
   (i32.const 0)
  )
  (i32.store offset=24
   (get_local $7)
   (i32.const 0)
  )
  (i32.store offset=72
   (get_local $7)
   (i32.const 0)
  )
  (i32.store offset=84
   (get_local $7)
   (i32.const 0)
  )
  (f32.store offset=44
   (get_local $7)
   (f32.const 1)
  )
  (i32.store offset=20
   (get_local $7)
   (get_local $0)
  )
  (i32.store offset=88
   (get_local $7)
   (i32.const 1)
  )
  (i32.store offset=92
   (get_local $7)
   (i32.const 1)
  )
  (i32.store offset=32
   (get_local $7)
   (i32.const 160)
  )
  (set_local $8
   (call $_speex_alloc_820
    (tee_local $0
     (i32.shl
      (get_local $0)
      (i32.const 2)
     )
    )
   )
  )
  (i32.store offset=60
   (get_local $7)
   (get_local $8)
  )
  (if
   (get_local $8)
   (block
    (set_local $8
     (call $_speex_alloc_820
      (get_local $0)
     )
    )
    (i32.store offset=68
     (get_local $7)
     (get_local $8)
    )
    (if
     (get_local $8)
     (block
      (set_local $0
       (call $_speex_alloc_820
        (get_local $0)
       )
      )
      (i32.store
       (i32.sub
        (get_local $7)
        (i32.const -64)
       )
       (get_local $0)
      )
      (if
       (get_local $0)
       (block
        (call $_speex_resampler_set_quality
         (get_local $7)
         (get_local $5)
        )
        (call $_speex_resampler_set_rate_frac
         (get_local $7)
         (get_local $1)
         (get_local $2)
         (get_local $3)
         (get_local $4)
        )
        (if
         (tee_local $0
          (call $_update_filter
           (get_local $7)
          )
         )
         (block
          (call $_speex_resampler_destroy
           (get_local $7)
          )
          (set_local $7
           (i32.const 0)
          )
         )
         (i32.store
          (get_local $9)
          (i32.const 1)
         )
        )
        (if
         (i32.eqz
          (get_local $6)
         )
         (return
          (get_local $7)
         )
        )
        (i32.store
         (get_local $6)
         (get_local $0)
        )
        (return
         (get_local $7)
        )
       )
      )
     )
    )
   )
  )
  (if
   (get_local $6)
   (i32.store
    (get_local $6)
    (i32.const 1)
   )
  )
  (call $_speex_resampler_destroy
   (get_local $7)
  )
  (i32.const 0)
 )
 (func $_speex_alloc_820 (; 418 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (if
   (i32.eqz
    (tee_local $1
     (call $_malloc
      (get_local $0)
     )
    )
   )
   (return
    (get_local $1)
   )
  )
  (if
   (i32.eqz
    (i32.and
     (i32.load
      (i32.add
       (get_local $1)
       (i32.const -4)
      )
     )
     (i32.const 3)
    )
   )
   (return
    (get_local $1)
   )
  )
  (drop
   (call $_memset
    (get_local $1)
    (i32.const 0)
    (get_local $0)
   )
  )
  (get_local $1)
 )
 (func $_speex_resampler_set_quality (; 419 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (if
   (i32.gt_u
    (get_local $1)
    (i32.const 10)
   )
   (return)
  )
  (if
   (i32.eq
    (i32.load
     (tee_local $2
      (i32.add
       (get_local $0)
       (i32.const 16)
      )
     )
    )
    (get_local $1)
   )
   (return)
  )
  (i32.store
   (get_local $2)
   (get_local $1)
  )
  (if
   (i32.eqz
    (i32.load offset=52
     (get_local $0)
    )
   )
   (return)
  )
  (drop
   (call $_update_filter
    (get_local $0)
   )
  )
 )
 (func $_speex_resampler_set_rate_frac (; 420 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (if
   (i32.or
    (i32.eqz
     (get_local $1)
    )
    (i32.eqz
     (get_local $2)
    )
   )
   (return)
  )
  (set_local $5
   (i32.add
    (get_local $0)
    (i32.const 4)
   )
  )
  (if
   (i32.eq
    (i32.load
     (get_local $0)
    )
    (get_local $3)
   )
   (if
    (i32.eq
     (i32.load
      (get_local $5)
     )
     (get_local $4)
    )
    (if
     (i32.eq
      (i32.load offset=8
       (get_local $0)
      )
      (get_local $1)
     )
     (if
      (i32.eq
       (i32.load offset=12
        (get_local $0)
       )
       (get_local $2)
      )
      (return)
     )
    )
   )
  )
  (set_local $7
   (i32.load
    (tee_local $6
     (i32.add
      (get_local $0)
      (i32.const 12)
     )
    )
   )
  )
  (i32.store
   (get_local $0)
   (get_local $3)
  )
  (i32.store
   (get_local $5)
   (get_local $4)
  )
  (set_local $4
   (i32.add
    (get_local $0)
    (i32.const 8)
   )
  )
  (set_local $3
   (call $_compute_gcd
    (get_local $1)
    (get_local $2)
   )
  )
  (i32.store
   (get_local $4)
   (i32.div_u
    (get_local $1)
    (get_local $3)
   )
  )
  (i32.store
   (get_local $6)
   (i32.div_u
    (get_local $2)
    (get_local $3)
   )
  )
  (block $label$break$L10
   (if
    (get_local $7)
    (block
     (set_local $3
      (i32.add
       (get_local $0)
       (i32.const 20)
      )
     )
     (set_local $2
      (i32.sub
       (get_local $0)
       (i32.const -64)
      )
     )
     (set_local $1
      (i32.const 0)
     )
     (loop $while-in
      (block $while-out
       (br_if $label$break$L10
        (i32.ge_u
         (get_local $1)
         (i32.load
          (get_local $3)
         )
        )
       )
       (br_if $while-out
        (call $_multiply_frac
         (tee_local $4
          (i32.add
           (i32.load
            (get_local $2)
           )
           (i32.shl
            (get_local $1)
            (i32.const 2)
           )
          )
         )
         (i32.load
          (get_local $4)
         )
         (i32.load
          (get_local $6)
         )
         (get_local $7)
        )
       )
       (if
        (i32.ge_u
         (i32.load
          (tee_local $4
           (i32.add
            (i32.load
             (get_local $2)
            )
            (i32.shl
             (get_local $1)
             (i32.const 2)
            )
           )
          )
         )
         (tee_local $5
          (i32.load
           (get_local $6)
          )
         )
        )
        (i32.store
         (get_local $4)
         (i32.add
          (get_local $5)
          (i32.const -1)
         )
        )
       )
       (set_local $1
        (i32.add
         (get_local $1)
         (i32.const 1)
        )
       )
       (br $while-in)
      )
     )
     (return)
    )
   )
  )
  (if
   (i32.eqz
    (i32.load offset=52
     (get_local $0)
    )
   )
   (return)
  )
  (drop
   (call $_update_filter
    (get_local $0)
   )
  )
 )
 (func $_update_filter (; 421 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 f32)
  (local $14 i32)
  (local $15 f32)
  (local $16 i32)
  (set_local $11
   (i32.load
    (tee_local $6
     (i32.add
      (get_local $0)
      (i32.const 24)
     )
    )
   )
  )
  (set_local $14
   (i32.load
    (tee_local $10
     (i32.add
      (get_local $0)
      (i32.const 28)
     )
    )
   )
  )
  (i32.store offset=36
   (get_local $0)
   (i32.div_u
    (tee_local $4
     (i32.load
      (tee_local $12
       (i32.add
        (get_local $0)
        (i32.const 8)
       )
      )
     )
    )
    (tee_local $2
     (i32.load
      (tee_local $8
       (i32.add
        (get_local $0)
        (i32.const 12)
       )
      )
     )
    )
   )
  )
  (i32.store offset=40
   (get_local $0)
   (i32.rem_u
    (get_local $4)
    (get_local $2)
   )
  )
  (i32.store
   (tee_local $7
    (i32.add
     (get_local $0)
     (i32.const 48)
    )
   )
   (tee_local $3
    (i32.load
     (i32.add
      (i32.mul
       (tee_local $5
        (i32.load
         (tee_local $9
          (i32.add
           (get_local $0)
           (i32.const 16)
          )
         )
        )
       )
       (i32.const 20)
      )
      (i32.const 36452)
     )
    )
   )
  )
  (i32.store
   (get_local $6)
   (tee_local $1
    (i32.load
     (i32.add
      (i32.mul
       (get_local $5)
       (i32.const 20)
      )
      (i32.const 36448)
     )
    )
   )
  )
  (block $do-once
   (block $__rjti$1
    (if
     (i32.gt_u
      (get_local $4)
      (get_local $2)
     )
     (block
      (f32.store offset=44
       (get_local $0)
       (f32.div
        (f32.mul
         (f32.load
          (i32.add
           (i32.mul
            (get_local $5)
            (i32.const 20)
           )
           (i32.const 36456)
          )
         )
         (f32.convert_u/i32
          (get_local $2)
         )
        )
        (f32.convert_u/i32
         (get_local $4)
        )
       )
      )
      (if
       (i32.eqz
        (call $_multiply_frac
         (get_local $6)
         (get_local $1)
         (get_local $4)
         (get_local $2)
        )
       )
       (block
        (i32.store
         (get_local $6)
         (tee_local $1
          (i32.and
           (i32.add
            (i32.load
             (get_local $6)
            )
            (i32.const 7)
           )
           (i32.const -8)
          )
         )
        )
        (if
         (i32.lt_u
          (i32.shl
           (tee_local $2
            (i32.load
             (get_local $8)
            )
           )
           (i32.const 1)
          )
          (tee_local $4
           (i32.load
            (get_local $12)
           )
          )
         )
         (i32.store
          (get_local $7)
          (i32.shr_u
           (i32.load
            (get_local $7)
           )
           (i32.const 1)
          )
         )
        )
        (if
         (i32.lt_u
          (i32.shl
           (get_local $2)
           (i32.const 2)
          )
          (get_local $4)
         )
         (i32.store
          (get_local $7)
          (i32.shr_u
           (i32.load
            (get_local $7)
           )
           (i32.const 1)
          )
         )
        )
        (if
         (i32.lt_u
          (i32.shl
           (get_local $2)
           (i32.const 3)
          )
          (get_local $4)
         )
         (i32.store
          (get_local $7)
          (i32.shr_u
           (i32.load
            (get_local $7)
           )
           (i32.const 1)
          )
         )
        )
        (set_local $3
         (i32.load
          (get_local $7)
         )
        )
        (if
         (i32.lt_u
          (i32.shl
           (get_local $2)
           (i32.const 4)
          )
          (get_local $4)
         )
         (i32.store
          (get_local $7)
          (tee_local $3
           (i32.shr_u
            (get_local $3)
            (i32.const 1)
           )
          )
         )
        )
        (if
         (i32.eqz
          (get_local $3)
         )
         (block
          (i32.store
           (get_local $7)
           (i32.const 1)
          )
          (set_local $3
           (i32.const 1)
          )
         )
        )
        (br $__rjti$1)
       )
      )
     )
     (block
      (i32.store offset=44
       (get_local $0)
       (i32.load
        (i32.add
         (i32.mul
          (get_local $5)
          (i32.const 20)
         )
         (i32.const 36460)
        )
       )
      )
      (br $__rjti$1)
     )
    )
    (br $do-once)
   )
   (set_local $1
    (block $__rjto$0 (result i32)
     (block $__rjti$0
      (br_if $__rjti$0
       (i32.gt_u
        (tee_local $4
         (i32.mul
          (get_local $1)
          (get_local $2)
         )
        )
        (tee_local $5
         (i32.add
          (i32.mul
           (get_local $1)
           (get_local $3)
          )
          (i32.const 8)
         )
        )
       )
      )
      (br_if $__rjti$0
       (i32.lt_u
        (i32.div_u
         (i32.const 536870911)
         (get_local $2)
        )
        (get_local $1)
       )
      )
      (set_local $2
       (i32.const 1)
      )
      (br $__rjto$0
       (get_local $4)
      )
     )
     (br_if $do-once
      (i32.lt_u
       (i32.div_u
        (i32.const 536870903)
        (get_local $3)
       )
       (get_local $1)
      )
     )
     (set_local $2
      (i32.const 0)
     )
     (get_local $5)
    )
   )
   (if
    (i32.lt_u
     (i32.load
      (tee_local $3
       (i32.add
        (get_local $0)
        (i32.const 80)
       )
      )
     )
     (get_local $1)
    )
    (block
     (br_if $do-once
      (i32.eqz
       (tee_local $5
        (call $_speex_realloc
         (i32.load
          (tee_local $4
           (i32.add
            (get_local $0)
            (i32.const 76)
           )
          )
         )
         (i32.shl
          (get_local $1)
          (i32.const 2)
         )
        )
       )
      )
     )
     (i32.store
      (get_local $4)
      (get_local $5)
     )
     (i32.store
      (get_local $3)
      (get_local $1)
     )
    )
   )
   (set_local $4
    (i32.add
     (get_local $0)
     (i32.const 44)
    )
   )
   (set_local $5
    (i32.add
     (get_local $0)
     (i32.const 76)
    )
   )
   (if
    (get_local $2)
    (block
     (set_local $1
      (i32.const 0)
     )
     (loop $while-in
      (if
       (i32.lt_u
        (get_local $1)
        (i32.load
         (get_local $8)
        )
       )
       (block
        (set_local $13
         (f32.convert_u/i32
          (get_local $1)
         )
        )
        (set_local $2
         (i32.const 0)
        )
        (loop $while-in3
         (if
          (i32.lt_u
           (get_local $2)
           (tee_local $3
            (i32.load
             (get_local $6)
            )
           )
          )
          (block
           (set_local $15
            (call $_sinc
             (f32.load
              (get_local $4)
             )
             (f32.sub
              (f32.convert_s/i32
               (i32.add
                (i32.sub
                 (get_local $2)
                 (i32.div_s
                  (get_local $3)
                  (i32.const 2)
                 )
                )
                (i32.const 1)
               )
              )
              (f32.div
               (get_local $13)
               (f32.convert_u/i32
                (i32.load
                 (get_local $8)
                )
               )
              )
             )
             (get_local $3)
             (i32.load
              (i32.add
               (i32.mul
                (i32.load
                 (get_local $9)
                )
                (i32.const 20)
               )
               (i32.const 36464)
              )
             )
            )
           )
           (f32.store
            (i32.add
             (i32.load
              (get_local $5)
             )
             (i32.shl
              (i32.add
               (i32.mul
                (get_local $1)
                (get_local $3)
               )
               (get_local $2)
              )
              (i32.const 2)
             )
            )
            (get_local $15)
           )
           (set_local $2
            (i32.add
             (get_local $2)
             (i32.const 1)
            )
           )
           (br $while-in3)
          )
         )
        )
        (set_local $1
         (i32.add
          (get_local $1)
          (i32.const 1)
         )
        )
        (br $while-in)
       )
      )
     )
     (set_local $1
      (i32.add
       (get_local $0)
       (i32.const 84)
      )
     )
     (if
      (i32.gt_s
       (i32.load
        (get_local $9)
       )
       (i32.const 8)
      )
      (i32.store
       (get_local $1)
       (i32.const 1)
      )
      (i32.store
       (get_local $1)
       (i32.const 2)
      )
     )
    )
    (block
     (set_local $1
      (i32.const -4)
     )
     (loop $while-in5
      (if
       (i32.lt_s
        (get_local $1)
        (i32.add
         (i32.mul
          (tee_local $3
           (i32.load
            (get_local $7)
           )
          )
          (tee_local $2
           (i32.load
            (get_local $6)
           )
          )
         )
         (i32.const 4)
        )
       )
       (block
        (set_local $13
         (call $_sinc
          (f32.load
           (get_local $4)
          )
          (f32.sub
           (f32.div
            (f32.convert_s/i32
             (get_local $1)
            )
            (f32.convert_u/i32
             (get_local $3)
            )
           )
           (f32.convert_u/i32
            (i32.shr_u
             (get_local $2)
             (i32.const 1)
            )
           )
          )
          (get_local $2)
          (i32.load
           (i32.add
            (i32.mul
             (i32.load
              (get_local $9)
             )
             (i32.const 20)
            )
            (i32.const 36464)
           )
          )
         )
        )
        (f32.store
         (i32.add
          (i32.load
           (get_local $5)
          )
          (i32.shl
           (i32.add
            (get_local $1)
            (i32.const 4)
           )
           (i32.const 2)
          )
         )
         (get_local $13)
        )
        (set_local $1
         (i32.add
          (get_local $1)
          (i32.const 1)
         )
        )
        (br $while-in5)
       )
      )
     )
     (set_local $1
      (i32.add
       (get_local $0)
       (i32.const 84)
      )
     )
     (if
      (i32.gt_s
       (i32.load
        (get_local $9)
       )
       (i32.const 8)
      )
      (i32.store
       (get_local $1)
       (i32.const 3)
      )
      (i32.store
       (get_local $1)
       (i32.const 4)
      )
     )
    )
   )
   (if
    (i32.gt_u
     (tee_local $1
      (i32.add
       (i32.add
        (i32.load
         (get_local $6)
        )
        (i32.const -1)
       )
       (i32.load offset=32
        (get_local $0)
       )
      )
     )
     (tee_local $2
      (i32.load
       (get_local $10)
      )
     )
    )
    (block
     (br_if $do-once
      (i32.lt_u
       (i32.div_u
        (i32.const 536870911)
        (tee_local $2
         (i32.load offset=20
          (get_local $0)
         )
        )
       )
       (get_local $1)
      )
     )
     (br_if $do-once
      (i32.eqz
       (tee_local $2
        (call $_speex_realloc
         (i32.load
          (tee_local $3
           (i32.add
            (get_local $0)
            (i32.const 72)
           )
          )
         )
         (i32.shl
          (i32.mul
           (get_local $2)
           (get_local $1)
          )
          (i32.const 2)
         )
        )
       )
      )
     )
     (i32.store
      (get_local $3)
      (get_local $2)
     )
     (i32.store
      (get_local $10)
      (get_local $1)
     )
    )
    (set_local $1
     (get_local $2)
    )
   )
   (if
    (i32.eqz
     (i32.load offset=56
      (get_local $0)
     )
    )
    (block
     (set_local $2
      (i32.add
       (get_local $0)
       (i32.const 20)
      )
     )
     (set_local $3
      (i32.add
       (get_local $0)
       (i32.const 72)
      )
     )
     (set_local $0
      (i32.const 0)
     )
     (loop $while-in7
      (if
       (i32.lt_u
        (get_local $0)
        (i32.mul
         (i32.load
          (get_local $2)
         )
         (get_local $1)
        )
       )
       (block
        (f32.store
         (i32.add
          (i32.load
           (get_local $3)
          )
          (i32.shl
           (get_local $0)
           (i32.const 2)
          )
         )
         (f32.const 0)
        )
        (set_local $0
         (i32.add
          (get_local $0)
          (i32.const 1)
         )
        )
        (set_local $1
         (i32.load
          (get_local $10)
         )
        )
        (br $while-in7)
       )
      )
     )
     (return
      (i32.const 0)
     )
    )
   )
   (if
    (i32.le_u
     (tee_local $1
      (i32.load
       (get_local $6)
      )
     )
     (get_local $11)
    )
    (block
     (if
      (i32.ge_u
       (get_local $1)
       (get_local $11)
      )
      (return
       (i32.const 0)
      )
     )
     (set_local $5
      (i32.add
       (get_local $0)
       (i32.const 20)
      )
     )
     (set_local $2
      (i32.add
       (get_local $0)
       (i32.const 68)
      )
     )
     (set_local $7
      (i32.add
       (get_local $0)
       (i32.const 72)
      )
     )
     (set_local $0
      (i32.const 0)
     )
     (loop $while-in9
      (if
       (i32.lt_u
        (get_local $0)
        (i32.load
         (get_local $5)
        )
       )
       (block
        (set_local $3
         (i32.load
          (tee_local $1
           (i32.add
            (i32.load
             (get_local $2)
            )
            (i32.shl
             (get_local $0)
             (i32.const 2)
            )
           )
          )
         )
        )
        (i32.store
         (get_local $1)
         (i32.shr_u
          (i32.sub
           (get_local $11)
           (i32.load
            (get_local $6)
           )
          )
          (i32.const 1)
         )
        )
        (set_local $1
         (i32.const 0)
        )
        (loop $while-in11
         (if
          (i32.lt_u
           (get_local $1)
           (i32.add
            (i32.add
             (i32.add
              (i32.load
               (get_local $6)
              )
              (i32.const -1)
             )
             (tee_local $4
              (i32.load
               (tee_local $9
                (i32.add
                 (i32.load
                  (get_local $2)
                 )
                 (i32.shl
                  (get_local $0)
                  (i32.const 2)
                 )
                )
               )
              )
             )
            )
            (get_local $3)
           )
          )
          (block
           (i32.store
            (i32.add
             (tee_local $9
              (i32.load
               (get_local $7)
              )
             )
             (i32.shl
              (tee_local $8
               (i32.add
                (i32.mul
                 (get_local $0)
                 (i32.load
                  (get_local $10)
                 )
                )
                (get_local $1)
               )
              )
              (i32.const 2)
             )
            )
            (i32.load
             (i32.add
              (get_local $9)
              (i32.shl
               (i32.add
                (get_local $8)
                (get_local $4)
               )
               (i32.const 2)
              )
             )
            )
           )
           (set_local $1
            (i32.add
             (get_local $1)
             (i32.const 1)
            )
           )
           (br $while-in11)
          )
         )
        )
        (i32.store
         (get_local $9)
         (i32.add
          (get_local $4)
          (get_local $3)
         )
        )
        (set_local $0
         (i32.add
          (get_local $0)
          (i32.const 1)
         )
        )
        (br $while-in9)
       )
      )
     )
     (return
      (i32.const 0)
     )
    )
   )
   (set_local $3
    (i32.add
     (get_local $0)
     (i32.const 68)
    )
   )
   (set_local $7
    (i32.add
     (get_local $11)
     (i32.const -1)
    )
   )
   (set_local $4
    (i32.add
     (get_local $0)
     (i32.const 72)
    )
   )
   (set_local $9
    (i32.add
     (get_local $0)
     (i32.const 60)
    )
   )
   (set_local $0
    (i32.load offset=20
     (get_local $0)
    )
   )
   (loop $while-in13
    (if
     (get_local $0)
     (block
      (set_local $5
       (i32.shl
        (tee_local $1
         (i32.load
          (i32.add
           (i32.load
            (get_local $3)
           )
           (i32.shl
            (tee_local $0
             (i32.add
              (get_local $0)
              (i32.const -1)
             )
            )
            (i32.const 2)
           )
          )
         )
        )
        (i32.const 1)
       )
      )
      (set_local $8
       (i32.mul
        (get_local $0)
        (get_local $14)
       )
      )
      (set_local $1
       (i32.add
        (get_local $7)
        (get_local $1)
       )
      )
      (loop $while-in15
       (set_local $2
        (i32.add
         (get_local $1)
         (i32.const -1)
        )
       )
       (if
        (get_local $1)
        (block
         (i32.store
          (i32.add
           (tee_local $1
            (i32.load
             (get_local $4)
            )
           )
           (i32.shl
            (i32.add
             (i32.add
              (i32.mul
               (get_local $0)
               (i32.load
                (get_local $10)
               )
              )
              (get_local $2)
             )
             (i32.load
              (i32.add
               (i32.load
                (get_local $3)
               )
               (i32.shl
                (get_local $0)
                (i32.const 2)
               )
              )
             )
            )
            (i32.const 2)
           )
          )
          (i32.load
           (i32.add
            (get_local $1)
            (i32.shl
             (i32.add
              (get_local $8)
              (get_local $2)
             )
             (i32.const 2)
            )
           )
          )
         )
         (set_local $1
          (get_local $2)
         )
         (br $while-in15)
        )
       )
      )
      (set_local $1
       (i32.const 0)
      )
      (loop $while-in17
       (if
        (i32.lt_u
         (get_local $1)
         (i32.load
          (tee_local $2
           (i32.add
            (i32.load
             (get_local $3)
            )
            (i32.shl
             (get_local $0)
             (i32.const 2)
            )
           )
          )
         )
        )
        (block
         (f32.store
          (i32.add
           (i32.load
            (get_local $4)
           )
           (i32.shl
            (i32.add
             (i32.mul
              (get_local $0)
              (i32.load
               (get_local $10)
              )
             )
             (get_local $1)
            )
            (i32.const 2)
           )
          )
          (f32.const 0)
         )
         (set_local $1
          (i32.add
           (get_local $1)
           (i32.const 1)
          )
         )
         (br $while-in17)
        )
       )
      )
      (i32.store
       (get_local $2)
       (i32.const 0)
      )
      (block $label$break$L88
       (if
        (i32.lt_u
         (tee_local $5
          (i32.add
           (get_local $11)
           (get_local $5)
          )
         )
         (tee_local $1
          (i32.load
           (get_local $6)
          )
         )
        )
        (block
         (set_local $1
          (i32.add
           (get_local $5)
           (i32.const -1)
          )
         )
         (set_local $8
          (i32.add
           (get_local $5)
           (i32.const -2)
          )
         )
         (set_local $2
          (i32.const 0)
         )
         (loop $while-in20
          (if
           (i32.ne
            (get_local $2)
            (get_local $1)
           )
           (block
            (i32.store
             (i32.add
              (tee_local $12
               (i32.load
                (get_local $4)
               )
              )
              (i32.shl
               (i32.add
                (tee_local $16
                 (i32.mul
                  (get_local $0)
                  (i32.load
                   (get_local $10)
                  )
                 )
                )
                (i32.sub
                 (i32.add
                  (i32.load
                   (get_local $6)
                  )
                  (i32.const -2)
                 )
                 (get_local $2)
                )
               )
               (i32.const 2)
              )
             )
             (i32.load
              (i32.add
               (get_local $12)
               (i32.shl
                (i32.add
                 (get_local $16)
                 (i32.sub
                  (get_local $8)
                  (get_local $2)
                 )
                )
                (i32.const 2)
               )
              )
             )
            )
            (set_local $2
             (i32.add
              (get_local $2)
              (i32.const 1)
             )
            )
            (br $while-in20)
           )
          )
         )
         (loop $while-in22
          (if
           (i32.lt_u
            (get_local $1)
            (i32.add
             (tee_local $2
              (i32.load
               (get_local $6)
              )
             )
             (i32.const -1)
            )
           )
           (block
            (f32.store
             (i32.add
              (i32.load
               (get_local $4)
              )
              (i32.shl
               (i32.add
                (i32.mul
                 (get_local $0)
                 (i32.load
                  (get_local $10)
                 )
                )
                (i32.sub
                 (i32.add
                  (get_local $2)
                  (i32.const -2)
                 )
                 (get_local $1)
                )
               )
               (i32.const 2)
              )
             )
             (f32.const 0)
            )
            (set_local $1
             (i32.add
              (get_local $1)
              (i32.const 1)
             )
            )
            (br $while-in22)
           )
          )
         )
         (i32.store
          (tee_local $1
           (i32.add
            (i32.load
             (get_local $9)
            )
            (i32.shl
             (get_local $0)
             (i32.const 2)
            )
           )
          )
          (i32.add
           (i32.load
            (get_local $1)
           )
           (i32.shr_u
            (i32.sub
             (get_local $2)
             (get_local $5)
            )
            (i32.const 1)
           )
          )
         )
        )
        (block
         (i32.store
          (i32.add
           (i32.load
            (get_local $3)
           )
           (i32.shl
            (get_local $0)
            (i32.const 2)
           )
          )
          (i32.shr_u
           (i32.sub
            (get_local $5)
            (get_local $1)
           )
           (i32.const 1)
          )
         )
         (set_local $1
          (i32.const 0)
         )
         (loop $while-in24
          (br_if $label$break$L88
           (i32.ge_u
            (get_local $1)
            (i32.add
             (i32.add
              (i32.load
               (get_local $6)
              )
              (i32.const -1)
             )
             (tee_local $2
              (i32.load
               (i32.add
                (i32.load
                 (get_local $3)
                )
                (i32.shl
                 (get_local $0)
                 (i32.const 2)
                )
               )
              )
             )
            )
           )
          )
          (i32.store
           (i32.add
            (tee_local $5
             (i32.load
              (get_local $4)
             )
            )
            (i32.shl
             (tee_local $8
              (i32.add
               (i32.mul
                (get_local $0)
                (i32.load
                 (get_local $10)
                )
               )
               (get_local $1)
              )
             )
             (i32.const 2)
            )
           )
           (i32.load
            (i32.add
             (get_local $5)
             (i32.shl
              (i32.add
               (get_local $8)
               (get_local $2)
              )
              (i32.const 2)
             )
            )
           )
          )
          (set_local $1
           (i32.add
            (get_local $1)
            (i32.const 1)
           )
          )
          (br $while-in24)
         )
        )
       )
      )
      (br $while-in13)
     )
    )
   )
   (return
    (i32.const 0)
   )
  )
  (i32.store offset=84
   (get_local $0)
   (i32.const 5)
  )
  (i32.store
   (get_local $6)
   (get_local $11)
  )
  (i32.const 1)
 )
 (func $_speex_resampler_destroy (; 422 ;) (; has Stack IR ;) (param $0 i32)
  (call $_opus_free
   (i32.load offset=72
    (get_local $0)
   )
  )
  (call $_opus_free
   (i32.load offset=76
    (get_local $0)
   )
  )
  (call $_opus_free
   (i32.load offset=60
    (get_local $0)
   )
  )
  (call $_opus_free
   (i32.load offset=68
    (get_local $0)
   )
  )
  (call $_opus_free
   (i32.load
    (i32.sub
     (get_local $0)
     (i32.const -64)
    )
   )
  )
  (call $_opus_free
   (get_local $0)
  )
 )
 (func $_multiply_frac (; 423 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  (if
   (i32.or
    (i32.gt_u
     (tee_local $4
      (i32.rem_u
       (get_local $1)
       (get_local $3)
      )
     )
     (tee_local $5
      (i32.div_u
       (i32.const -1)
       (get_local $2)
      )
     )
    )
    (i32.gt_u
     (tee_local $1
      (i32.div_u
       (get_local $1)
       (get_local $3)
      )
     )
     (get_local $5)
    )
   )
   (return
    (i32.const 5)
   )
  )
  (if
   (i32.gt_u
    (tee_local $1
     (i32.mul
      (get_local $1)
      (get_local $2)
     )
    )
    (i32.xor
     (tee_local $2
      (i32.div_u
       (i32.mul
        (get_local $4)
        (get_local $2)
       )
       (get_local $3)
      )
     )
     (i32.const -1)
    )
   )
   (return
    (i32.const 5)
   )
  )
  (i32.store
   (get_local $0)
   (i32.add
    (get_local $2)
    (get_local $1)
   )
  )
  (i32.const 0)
 )
 (func $_speex_realloc (; 424 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (block $folding-inner0
   (if
    (i32.eqz
     (get_local $0)
    )
    (return
     (call $_malloc
      (get_local $1)
     )
    )
   )
   (if
    (i32.gt_u
     (get_local $1)
     (i32.const -65)
    )
    (block
     (i32.store
      (i32.const 52048)
      (i32.const 12)
     )
     (return
      (i32.const 0)
     )
    )
   )
   (set_local $4
    (i32.and
     (tee_local $11
      (i32.load
       (tee_local $10
        (i32.add
         (get_local $0)
         (i32.const -4)
        )
       )
      )
     )
     (i32.const -8)
    )
   )
   (if
    (i32.eqz
     (i32.and
      (i32.and
       (i32.ne
        (tee_local $12
         (i32.and
          (get_local $11)
          (i32.const 3)
         )
        )
        (i32.const 1)
       )
       (i32.le_u
        (tee_local $13
         (i32.load
          (i32.const 51504)
         )
        )
        (tee_local $8
         (i32.add
          (get_local $0)
          (i32.const -8)
         )
        )
       )
      )
      (i32.gt_s
       (get_local $4)
       (i32.const 0)
      )
     )
    )
    (call $_abort)
   )
   (if
    (i32.eqz
     (i32.and
      (tee_local $7
       (i32.load
        (tee_local $9
         (i32.add
          (tee_local $6
           (i32.add
            (get_local $8)
            (get_local $4)
           )
          )
          (i32.const 4)
         )
        )
       )
      )
      (i32.const 1)
     )
    )
    (call $_abort)
   )
   (set_local $5
    (i32.and
     (i32.add
      (get_local $1)
      (i32.const 11)
     )
     (i32.const -8)
    )
   )
   (if
    (i32.lt_u
     (get_local $1)
     (i32.const 11)
    )
    (set_local $5
     (i32.const 16)
    )
   )
   (block $do-once
    (if
     (get_local $12)
     (block
      (if
       (i32.ge_u
        (get_local $4)
        (get_local $5)
       )
       (block
        (br_if $folding-inner0
         (i32.le_u
          (tee_local $1
           (i32.sub
            (get_local $4)
            (get_local $5)
           )
          )
          (i32.const 15)
         )
        )
        (i32.store
         (get_local $10)
         (i32.or
          (i32.or
           (i32.and
            (get_local $11)
            (i32.const 1)
           )
           (get_local $5)
          )
          (i32.const 2)
         )
        )
        (i32.store offset=4
         (tee_local $2
          (i32.add
           (get_local $8)
           (get_local $5)
          )
         )
         (i32.or
          (get_local $1)
          (i32.const 3)
         )
        )
        (i32.store
         (get_local $9)
         (i32.or
          (i32.load
           (get_local $9)
          )
          (i32.const 1)
         )
        )
        (call $_dispose_chunk
         (get_local $2)
         (get_local $1)
        )
        (br $folding-inner0)
       )
      )
      (if
       (i32.eq
        (i32.load
         (i32.const 51512)
        )
        (get_local $6)
       )
       (block
        (br_if $do-once
         (i32.le_u
          (tee_local $2
           (i32.add
            (i32.load
             (i32.const 51500)
            )
            (get_local $4)
           )
          )
          (get_local $5)
         )
        )
        (i32.store
         (get_local $10)
         (i32.or
          (i32.or
           (i32.and
            (get_local $11)
            (i32.const 1)
           )
           (get_local $5)
          )
          (i32.const 2)
         )
        )
        (i32.store offset=4
         (tee_local $1
          (i32.add
           (get_local $8)
           (get_local $5)
          )
         )
         (i32.or
          (tee_local $2
           (i32.sub
            (get_local $2)
            (get_local $5)
           )
          )
          (i32.const 1)
         )
        )
        (i32.store
         (i32.const 51512)
         (get_local $1)
        )
        (i32.store
         (i32.const 51500)
         (get_local $2)
        )
        (br $folding-inner0)
       )
      )
      (if
       (i32.eq
        (i32.load
         (i32.const 51508)
        )
        (get_local $6)
       )
       (block
        (br_if $do-once
         (i32.lt_u
          (tee_local $3
           (i32.add
            (i32.load
             (i32.const 51496)
            )
            (get_local $4)
           )
          )
          (get_local $5)
         )
        )
        (if
         (i32.gt_u
          (tee_local $1
           (i32.sub
            (get_local $3)
            (get_local $5)
           )
          )
          (i32.const 15)
         )
         (block
          (i32.store
           (get_local $10)
           (i32.or
            (i32.or
             (i32.and
              (get_local $11)
              (i32.const 1)
             )
             (get_local $5)
            )
            (i32.const 2)
           )
          )
          (i32.store offset=4
           (tee_local $2
            (i32.add
             (get_local $8)
             (get_local $5)
            )
           )
           (i32.or
            (get_local $1)
            (i32.const 1)
           )
          )
          (i32.store
           (tee_local $3
            (i32.add
             (get_local $8)
             (get_local $3)
            )
           )
           (get_local $1)
          )
          (i32.store
           (tee_local $3
            (i32.add
             (get_local $3)
             (i32.const 4)
            )
           )
           (i32.and
            (i32.load
             (get_local $3)
            )
            (i32.const -2)
           )
          )
         )
         (block
          (i32.store
           (get_local $10)
           (i32.or
            (i32.or
             (i32.and
              (get_local $11)
              (i32.const 1)
             )
             (get_local $3)
            )
            (i32.const 2)
           )
          )
          (i32.store
           (tee_local $1
            (i32.add
             (i32.add
              (get_local $8)
              (get_local $3)
             )
             (i32.const 4)
            )
           )
           (i32.or
            (i32.load
             (get_local $1)
            )
            (i32.const 1)
           )
          )
          (set_local $1
           (i32.const 0)
          )
         )
        )
        (i32.store
         (i32.const 51496)
         (get_local $1)
        )
        (i32.store
         (i32.const 51508)
         (get_local $2)
        )
        (br $folding-inner0)
       )
      )
      (if
       (i32.eqz
        (i32.and
         (get_local $7)
         (i32.const 2)
        )
       )
       (if
        (i32.ge_u
         (tee_local $12
          (i32.add
           (i32.and
            (get_local $7)
            (i32.const -8)
           )
           (get_local $4)
          )
         )
         (get_local $5)
        )
        (block
         (set_local $14
          (i32.sub
           (get_local $12)
           (get_local $5)
          )
         )
         (set_local $1
          (i32.shr_u
           (get_local $7)
           (i32.const 3)
          )
         )
         (block $label$break$L43
          (if
           (i32.lt_u
            (get_local $7)
            (i32.const 256)
           )
           (block
            (set_local $3
             (i32.load offset=12
              (get_local $6)
             )
            )
            (if
             (i32.ne
              (tee_local $4
               (i32.load offset=8
                (get_local $6)
               )
              )
              (tee_local $7
               (i32.add
                (i32.shl
                 (get_local $1)
                 (i32.const 3)
                )
                (i32.const 51528)
               )
              )
             )
             (block
              (if
               (i32.gt_u
                (get_local $13)
                (get_local $4)
               )
               (call $_abort)
              )
              (if
               (i32.ne
                (i32.load offset=12
                 (get_local $4)
                )
                (get_local $6)
               )
               (call $_abort)
              )
             )
            )
            (if
             (i32.eq
              (get_local $3)
              (get_local $4)
             )
             (block
              (i32.store
               (i32.const 51488)
               (i32.and
                (i32.load
                 (i32.const 51488)
                )
                (i32.xor
                 (i32.shl
                  (i32.const 1)
                  (get_local $1)
                 )
                 (i32.const -1)
                )
               )
              )
              (br $label$break$L43)
             )
            )
            (if
             (i32.eq
              (get_local $3)
              (get_local $7)
             )
             (set_local $2
              (i32.add
               (get_local $3)
               (i32.const 8)
              )
             )
             (block
              (if
               (i32.gt_u
                (get_local $13)
                (get_local $3)
               )
               (call $_abort)
              )
              (if
               (i32.eq
                (i32.load
                 (tee_local $1
                  (i32.add
                   (get_local $3)
                   (i32.const 8)
                  )
                 )
                )
                (get_local $6)
               )
               (set_local $2
                (get_local $1)
               )
               (call $_abort)
              )
             )
            )
            (i32.store offset=12
             (get_local $4)
             (get_local $3)
            )
            (i32.store
             (get_local $2)
             (get_local $4)
            )
           )
           (block
            (set_local $9
             (i32.load offset=24
              (get_local $6)
             )
            )
            (block $do-once1
             (if
              (i32.eq
               (tee_local $1
                (i32.load offset=12
                 (get_local $6)
                )
               )
               (get_local $6)
              )
              (block
               (if
                (tee_local $1
                 (i32.load
                  (tee_local $4
                   (i32.add
                    (tee_local $2
                     (i32.add
                      (get_local $6)
                      (i32.const 16)
                     )
                    )
                    (i32.const 4)
                   )
                  )
                 )
                )
                (set_local $2
                 (get_local $4)
                )
                (br_if $do-once1
                 (i32.eqz
                  (tee_local $1
                   (i32.load
                    (get_local $2)
                   )
                  )
                 )
                )
               )
               (loop $while-in
                (block $while-out
                 (if
                  (i32.eqz
                   (tee_local $7
                    (i32.load
                     (tee_local $4
                      (i32.add
                       (get_local $1)
                       (i32.const 20)
                      )
                     )
                    )
                   )
                  )
                  (br_if $while-out
                   (i32.eqz
                    (tee_local $7
                     (i32.load
                      (tee_local $4
                       (i32.add
                        (get_local $1)
                        (i32.const 16)
                       )
                      )
                     )
                    )
                   )
                  )
                 )
                 (set_local $2
                  (get_local $4)
                 )
                 (set_local $1
                  (get_local $7)
                 )
                 (br $while-in)
                )
               )
               (if
                (i32.gt_u
                 (get_local $13)
                 (get_local $2)
                )
                (call $_abort)
                (block
                 (i32.store
                  (get_local $2)
                  (i32.const 0)
                 )
                 (set_local $3
                  (get_local $1)
                 )
                )
               )
              )
              (block
               (if
                (i32.gt_u
                 (get_local $13)
                 (tee_local $2
                  (i32.load offset=8
                   (get_local $6)
                  )
                 )
                )
                (call $_abort)
               )
               (if
                (i32.ne
                 (i32.load
                  (tee_local $4
                   (i32.add
                    (get_local $2)
                    (i32.const 12)
                   )
                  )
                 )
                 (get_local $6)
                )
                (call $_abort)
               )
               (if
                (i32.eq
                 (i32.load
                  (tee_local $7
                   (i32.add
                    (get_local $1)
                    (i32.const 8)
                   )
                  )
                 )
                 (get_local $6)
                )
                (block
                 (i32.store
                  (get_local $4)
                  (get_local $1)
                 )
                 (i32.store
                  (get_local $7)
                  (get_local $2)
                 )
                 (set_local $3
                  (get_local $1)
                 )
                )
                (call $_abort)
               )
              )
             )
            )
            (if
             (get_local $9)
             (block
              (if
               (i32.eq
                (i32.load
                 (tee_local $2
                  (i32.add
                   (i32.shl
                    (tee_local $1
                     (i32.load offset=28
                      (get_local $6)
                     )
                    )
                    (i32.const 2)
                   )
                   (i32.const 51792)
                  )
                 )
                )
                (get_local $6)
               )
               (block
                (i32.store
                 (get_local $2)
                 (get_local $3)
                )
                (if
                 (i32.eqz
                  (get_local $3)
                 )
                 (block
                  (i32.store
                   (i32.const 51492)
                   (i32.and
                    (i32.load
                     (i32.const 51492)
                    )
                    (i32.xor
                     (i32.shl
                      (i32.const 1)
                      (get_local $1)
                     )
                     (i32.const -1)
                    )
                   )
                  )
                  (br $label$break$L43)
                 )
                )
               )
               (if
                (i32.gt_u
                 (i32.load
                  (i32.const 51504)
                 )
                 (get_local $9)
                )
                (call $_abort)
                (block
                 (set_local $1
                  (i32.add
                   (get_local $9)
                   (i32.const 20)
                  )
                 )
                 (i32.store
                  (if (result i32)
                   (i32.eq
                    (i32.load
                     (tee_local $2
                      (i32.add
                       (get_local $9)
                       (i32.const 16)
                      )
                     )
                    )
                    (get_local $6)
                   )
                   (get_local $2)
                   (get_local $1)
                  )
                  (get_local $3)
                 )
                 (br_if $label$break$L43
                  (i32.eqz
                   (get_local $3)
                  )
                 )
                )
               )
              )
              (if
               (i32.gt_u
                (tee_local $2
                 (i32.load
                  (i32.const 51504)
                 )
                )
                (get_local $3)
               )
               (call $_abort)
              )
              (i32.store offset=24
               (get_local $3)
               (get_local $9)
              )
              (if
               (tee_local $1
                (i32.load
                 (tee_local $4
                  (i32.add
                   (get_local $6)
                   (i32.const 16)
                  )
                 )
                )
               )
               (if
                (i32.gt_u
                 (get_local $2)
                 (get_local $1)
                )
                (call $_abort)
                (block
                 (i32.store offset=16
                  (get_local $3)
                  (get_local $1)
                 )
                 (i32.store offset=24
                  (get_local $1)
                  (get_local $3)
                 )
                )
               )
              )
              (if
               (tee_local $1
                (i32.load offset=4
                 (get_local $4)
                )
               )
               (if
                (i32.gt_u
                 (i32.load
                  (i32.const 51504)
                 )
                 (get_local $1)
                )
                (call $_abort)
                (block
                 (i32.store offset=20
                  (get_local $3)
                  (get_local $1)
                 )
                 (i32.store offset=24
                  (get_local $1)
                  (get_local $3)
                 )
                )
               )
              )
             )
            )
           )
          )
         )
         (if
          (i32.lt_u
           (get_local $14)
           (i32.const 16)
          )
          (block
           (i32.store
            (get_local $10)
            (i32.or
             (i32.or
              (i32.and
               (get_local $11)
               (i32.const 1)
              )
              (get_local $12)
             )
             (i32.const 2)
            )
           )
           (i32.store
            (tee_local $1
             (i32.add
              (i32.add
               (get_local $8)
               (get_local $12)
              )
              (i32.const 4)
             )
            )
            (i32.or
             (i32.load
              (get_local $1)
             )
             (i32.const 1)
            )
           )
          )
          (block
           (i32.store
            (get_local $10)
            (i32.or
             (i32.or
              (i32.and
               (get_local $11)
               (i32.const 1)
              )
              (get_local $5)
             )
             (i32.const 2)
            )
           )
           (i32.store offset=4
            (tee_local $1
             (i32.add
              (get_local $8)
              (get_local $5)
             )
            )
            (i32.or
             (get_local $14)
             (i32.const 3)
            )
           )
           (i32.store
            (tee_local $2
             (i32.add
              (i32.add
               (get_local $8)
               (get_local $12)
              )
              (i32.const 4)
             )
            )
            (i32.or
             (i32.load
              (get_local $2)
             )
             (i32.const 1)
            )
           )
           (call $_dispose_chunk
            (get_local $1)
            (get_local $14)
           )
          )
         )
         (br $folding-inner0)
        )
       )
      )
     )
     (if
      (i32.eqz
       (i32.or
        (i32.lt_u
         (get_local $5)
         (i32.const 256)
        )
        (i32.lt_u
         (get_local $4)
         (i32.or
          (get_local $5)
          (i32.const 4)
         )
        )
       )
      )
      (br_if $folding-inner0
       (i32.le_u
        (i32.sub
         (get_local $4)
         (get_local $5)
        )
        (i32.shl
         (i32.load
          (i32.const 51968)
         )
         (i32.const 1)
        )
       )
      )
     )
    )
   )
   (if
    (i32.eqz
     (tee_local $2
      (call $_malloc
       (get_local $1)
      )
     )
    )
    (return
     (i32.const 0)
    )
   )
   (drop
    (call $_memcpy
     (get_local $2)
     (get_local $0)
     (if (result i32)
      (i32.lt_u
       (tee_local $3
        (i32.sub
         (i32.and
          (tee_local $3
           (i32.load
            (get_local $10)
           )
          )
          (i32.const -8)
         )
         (if (result i32)
          (i32.and
           (get_local $3)
           (i32.const 3)
          )
          (i32.const 4)
          (i32.const 8)
         )
        )
       )
       (get_local $1)
      )
      (get_local $3)
      (get_local $1)
     )
    )
   )
   (call $_free
    (get_local $0)
   )
   (return
    (get_local $2)
   )
  )
  (get_local $0)
 )
 (func $_sinc (; 425 ;) (; has Stack IR ;) (param $0 f32) (param $1 f32) (param $2 i32) (param $3 i32) (result f32)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  (if
   (f64.lt
    (tee_local $4
     (f64.promote/f32
      (f32.abs
       (get_local $1)
      )
     )
    )
    (f64.const 1e-06)
   )
   (return
    (get_local $0)
   )
  )
  (if
   (f64.lt
    (f64.mul
     (tee_local $5
      (f64.convert_s/i32
       (get_local $2)
      )
     )
     (f64.const 0.5)
    )
    (get_local $4)
   )
   (return
    (f32.const 0)
   )
  )
  (set_local $4
   (f64.promote/f32
    (get_local $0)
   )
  )
  (set_local $4
   (f64.div
    (f64.mul
     (call $_llvm_sin_f64
      (tee_local $6
       (f64.mul
        (f64.promote/f32
         (f32.mul
          (get_local $1)
          (get_local $0)
         )
        )
        (f64.const 3.141592653589793)
       )
      )
     )
     (get_local $4)
    )
    (get_local $6)
   )
  )
  (set_local $5
   (call $_compute_func
    (f32.abs
     (f32.demote/f64
      (f64.div
       (f64.mul
        (f64.promote/f32
         (get_local $1)
        )
        (f64.const 2)
       )
       (get_local $5)
      )
     )
    )
    (i32.load
     (get_local $3)
    )
    (i32.load offset=4
     (get_local $3)
    )
   )
  )
  (f32.demote/f64
   (f64.mul
    (get_local $4)
    (get_local $5)
   )
  )
 )
 (func $_resampler_basic_direct_double (; 426 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (result i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 f64)
  (local $12 f64)
  (local $13 f64)
  (local $14 f64)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (set_local $15
   (i32.load offset=24
    (get_local $0)
   )
  )
  (set_local $20
   (i32.load offset=76
    (get_local $0)
   )
  )
  (set_local $21
   (i32.load offset=92
    (get_local $0)
   )
  )
  (set_local $22
   (i32.load offset=36
    (get_local $0)
   )
  )
  (set_local $23
   (i32.load offset=40
    (get_local $0)
   )
  )
  (set_local $16
   (i32.load offset=12
    (get_local $0)
   )
  )
  (set_local $8
   (i32.load
    (i32.add
     (i32.load
      (tee_local $24
       (i32.sub
        (get_local $0)
        (i32.const -64)
       )
      )
     )
     (i32.shl
      (get_local $1)
      (i32.const 2)
     )
    )
   )
  )
  (set_local $0
   (i32.load
    (i32.add
     (i32.load
      (tee_local $25
       (i32.add
        (get_local $0)
        (i32.const 60)
       )
      )
     )
     (i32.shl
      (get_local $1)
      (i32.const 2)
     )
    )
   )
  )
  (block $__rjto$0 (result i32)
   (block $__rjti$0
    (loop $while-in
     (block $while-out
      (br_if $__rjti$0
       (i32.ge_s
        (get_local $0)
        (i32.load
         (get_local $3)
        )
       )
      )
      (if
       (i32.lt_s
        (get_local $7)
        (i32.load
         (get_local $5)
        )
       )
       (block
        (set_local $9
         (i32.add
          (get_local $20)
          (i32.shl
           (i32.mul
            (get_local $8)
            (get_local $15)
           )
           (i32.const 2)
          )
         )
        )
        (set_local $10
         (i32.add
          (get_local $2)
          (i32.shl
           (get_local $0)
           (i32.const 2)
          )
         )
        )
        (set_local $6
         (i32.const 0)
        )
        (set_local $11
         (f64.const 0)
        )
        (set_local $12
         (f64.const 0)
        )
        (set_local $13
         (f64.const 0)
        )
        (set_local $14
         (f64.const 0)
        )
        (loop $while-in1
         (if
          (i32.lt_s
           (get_local $6)
           (get_local $15)
          )
          (block
           (set_local $11
            (f64.add
             (get_local $11)
             (f64.promote/f32
              (f32.mul
               (f32.load
                (i32.add
                 (get_local $9)
                 (i32.shl
                  (get_local $6)
                  (i32.const 2)
                 )
                )
               )
               (f32.load
                (i32.add
                 (get_local $10)
                 (i32.shl
                  (get_local $6)
                  (i32.const 2)
                 )
                )
               )
              )
             )
            )
           )
           (set_local $17
            (i32.or
             (get_local $6)
             (i32.const 1)
            )
           )
           (set_local $18
            (i32.or
             (get_local $6)
             (i32.const 2)
            )
           )
           (set_local $19
            (i32.or
             (get_local $6)
             (i32.const 3)
            )
           )
           (set_local $6
            (i32.add
             (get_local $6)
             (i32.const 4)
            )
           )
           (set_local $12
            (f64.add
             (get_local $12)
             (f64.promote/f32
              (f32.mul
               (f32.load
                (i32.add
                 (get_local $9)
                 (i32.shl
                  (get_local $19)
                  (i32.const 2)
                 )
                )
               )
               (f32.load
                (i32.add
                 (get_local $10)
                 (i32.shl
                  (get_local $19)
                  (i32.const 2)
                 )
                )
               )
              )
             )
            )
           )
           (set_local $13
            (f64.add
             (get_local $13)
             (f64.promote/f32
              (f32.mul
               (f32.load
                (i32.add
                 (get_local $9)
                 (i32.shl
                  (get_local $17)
                  (i32.const 2)
                 )
                )
               )
               (f32.load
                (i32.add
                 (get_local $10)
                 (i32.shl
                  (get_local $17)
                  (i32.const 2)
                 )
                )
               )
              )
             )
            )
           )
           (set_local $14
            (f64.add
             (get_local $14)
             (f64.promote/f32
              (f32.mul
               (f32.load
                (i32.add
                 (get_local $9)
                 (i32.shl
                  (get_local $18)
                  (i32.const 2)
                 )
                )
               )
               (f32.load
                (i32.add
                 (get_local $10)
                 (i32.shl
                  (get_local $18)
                  (i32.const 2)
                 )
                )
               )
              )
             )
            )
           )
           (br $while-in1)
          )
         )
        )
        (set_local $6
         (i32.add
          (get_local $7)
          (i32.const 1)
         )
        )
        (f32.store
         (i32.add
          (get_local $4)
          (i32.shl
           (i32.mul
            (get_local $21)
            (get_local $7)
           )
           (i32.const 2)
          )
         )
         (f32.demote/f64
          (f64.add
           (f64.add
            (f64.add
             (get_local $11)
             (get_local $13)
            )
            (get_local $14)
           )
           (get_local $12)
          )
         )
        )
        (set_local $0
         (i32.add
          (i32.add
           (get_local $0)
           (get_local $22)
          )
          (i32.xor
           (tee_local $8
            (i32.lt_u
             (tee_local $7
              (i32.add
               (get_local $8)
               (get_local $23)
              )
             )
             (get_local $16)
            )
           )
           (i32.const 1)
          )
         )
        )
        (set_local $8
         (i32.sub
          (get_local $7)
          (if (result i32)
           (get_local $8)
           (i32.const 0)
           (get_local $16)
          )
         )
        )
        (set_local $7
         (get_local $6)
        )
        (br $while-in)
       )
      )
     )
    )
   )
   (i32.store
    (i32.add
     (i32.load
      (get_local $25)
     )
     (i32.shl
      (get_local $1)
      (i32.const 2)
     )
    )
    (get_local $0)
   )
   (i32.store
    (i32.add
     (i32.load
      (get_local $24)
     )
     (i32.shl
      (get_local $1)
      (i32.const 2)
     )
    )
    (get_local $8)
   )
   (get_local $7)
  )
 )
 (func $_resampler_basic_direct_single (; 427 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (result i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 f32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (set_local $10
   (i32.load offset=24
    (get_local $0)
   )
  )
  (set_local $12
   (i32.load offset=76
    (get_local $0)
   )
  )
  (set_local $13
   (i32.load offset=92
    (get_local $0)
   )
  )
  (set_local $14
   (i32.load offset=36
    (get_local $0)
   )
  )
  (set_local $15
   (i32.load offset=40
    (get_local $0)
   )
  )
  (set_local $11
   (i32.load offset=12
    (get_local $0)
   )
  )
  (set_local $8
   (i32.load
    (i32.add
     (i32.load
      (tee_local $16
       (i32.sub
        (get_local $0)
        (i32.const -64)
       )
      )
     )
     (i32.shl
      (get_local $1)
      (i32.const 2)
     )
    )
   )
  )
  (set_local $0
   (i32.load
    (i32.add
     (i32.load
      (tee_local $17
       (i32.add
        (get_local $0)
        (i32.const 60)
       )
      )
     )
     (i32.shl
      (get_local $1)
      (i32.const 2)
     )
    )
   )
  )
  (block $__rjto$0 (result i32)
   (block $__rjti$0
    (loop $while-in
     (block $while-out
      (br_if $__rjti$0
       (i32.ge_s
        (get_local $0)
        (i32.load
         (get_local $3)
        )
       )
      )
      (if
       (i32.lt_s
        (get_local $6)
        (i32.load
         (get_local $5)
        )
       )
       (block
        (set_local $18
         (i32.add
          (get_local $12)
          (i32.shl
           (i32.mul
            (get_local $8)
            (get_local $10)
           )
           (i32.const 2)
          )
         )
        )
        (set_local $19
         (i32.add
          (get_local $2)
          (i32.shl
           (get_local $0)
           (i32.const 2)
          )
         )
        )
        (set_local $7
         (i32.const 0)
        )
        (set_local $9
         (f32.const 0)
        )
        (loop $while-in1
         (if
          (i32.lt_s
           (get_local $7)
           (get_local $10)
          )
          (block
           (set_local $9
            (f32.add
             (get_local $9)
             (f32.mul
              (f32.load
               (i32.add
                (get_local $18)
                (i32.shl
                 (get_local $7)
                 (i32.const 2)
                )
               )
              )
              (f32.load
               (i32.add
                (get_local $19)
                (i32.shl
                 (get_local $7)
                 (i32.const 2)
                )
               )
              )
             )
            )
           )
           (set_local $7
            (i32.add
             (get_local $7)
             (i32.const 1)
            )
           )
           (br $while-in1)
          )
         )
        )
        (set_local $7
         (i32.add
          (get_local $6)
          (i32.const 1)
         )
        )
        (f32.store
         (i32.add
          (get_local $4)
          (i32.shl
           (i32.mul
            (get_local $13)
            (get_local $6)
           )
           (i32.const 2)
          )
         )
         (get_local $9)
        )
        (set_local $0
         (i32.add
          (i32.add
           (get_local $0)
           (get_local $14)
          )
          (i32.xor
           (tee_local $8
            (i32.lt_u
             (tee_local $6
              (i32.add
               (get_local $8)
               (get_local $15)
              )
             )
             (get_local $11)
            )
           )
           (i32.const 1)
          )
         )
        )
        (set_local $8
         (i32.sub
          (get_local $6)
          (if (result i32)
           (get_local $8)
           (i32.const 0)
           (get_local $11)
          )
         )
        )
        (set_local $6
         (get_local $7)
        )
        (br $while-in)
       )
      )
     )
    )
   )
   (i32.store
    (i32.add
     (i32.load
      (get_local $17)
     )
     (i32.shl
      (get_local $1)
      (i32.const 2)
     )
    )
    (get_local $0)
   )
   (i32.store
    (i32.add
     (i32.load
      (get_local $16)
     )
     (i32.shl
      (get_local $1)
      (i32.const 2)
     )
    )
    (get_local $8)
   )
   (get_local $6)
  )
 )
 (func $_resampler_basic_interpolate_double (; 428 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (result i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 f64)
  (local $12 f64)
  (local $13 f64)
  (local $14 f64)
  (local $15 f32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local $26 i32)
  (local $27 i32)
  (local $28 i32)
  (local $29 i32)
  (local $30 i32)
  (local $31 i32)
  (local $32 i32)
  (local $33 i32)
  (local $34 f32)
  (set_local $8
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.const 16)
   )
  )
  (set_local $18
   (i32.load offset=24
    (get_local $0)
   )
  )
  (set_local $19
   (i32.load offset=92
    (get_local $0)
   )
  )
  (set_local $20
   (i32.load offset=36
    (get_local $0)
   )
  )
  (set_local $21
   (i32.load offset=40
    (get_local $0)
   )
  )
  (set_local $17
   (i32.load
    (tee_local $22
     (i32.add
      (get_local $0)
      (i32.const 12)
     )
    )
   )
  )
  (set_local $23
   (i32.add
    (get_local $0)
    (i32.const 48)
   )
  )
  (set_local $24
   (i32.add
    (get_local $0)
    (i32.const 76)
   )
  )
  (set_local $25
   (i32.add
    (get_local $8)
    (i32.const 4)
   )
  )
  (set_local $26
   (i32.add
    (get_local $8)
    (i32.const 8)
   )
  )
  (set_local $27
   (i32.add
    (get_local $8)
    (i32.const 12)
   )
  )
  (set_local $9
   (i32.load
    (i32.add
     (i32.load
      (tee_local $28
       (i32.sub
        (get_local $0)
        (i32.const -64)
       )
      )
     )
     (i32.shl
      (get_local $1)
      (i32.const 2)
     )
    )
   )
  )
  (set_local $0
   (i32.load
    (i32.add
     (i32.load
      (tee_local $29
       (i32.add
        (get_local $0)
        (i32.const 60)
       )
      )
     )
     (i32.shl
      (get_local $1)
      (i32.const 2)
     )
    )
   )
  )
  (block $__rjto$0 (result i32)
   (block $__rjti$0
    (loop $while-in
     (block $while-out
      (br_if $__rjti$0
       (i32.ge_s
        (get_local $0)
        (i32.load
         (get_local $3)
        )
       )
      )
      (br_if $__rjti$0
       (i32.ge_s
        (get_local $7)
        (i32.load
         (get_local $5)
        )
       )
      )
      (set_local $30
       (i32.add
        (get_local $2)
        (i32.shl
         (get_local $0)
         (i32.const 2)
        )
       )
      )
      (set_local $32
       (i32.div_u
        (tee_local $10
         (i32.mul
          (get_local $9)
          (tee_local $31
           (i32.load
            (get_local $23)
           )
          )
         )
        )
        (tee_local $6
         (i32.load
          (get_local $22)
         )
        )
       )
      )
      (set_local $33
       (i32.rem_u
        (get_local $10)
        (get_local $6)
       )
      )
      (set_local $34
       (f32.convert_u/i32
        (get_local $6)
       )
      )
      (set_local $6
       (i32.const 0)
      )
      (set_local $11
       (f64.const 0)
      )
      (set_local $12
       (f64.const 0)
      )
      (set_local $13
       (f64.const 0)
      )
      (set_local $14
       (f64.const 0)
      )
      (loop $while-in1
       (if
        (i32.lt_s
         (get_local $6)
         (get_local $18)
        )
        (block
         (set_local $11
          (f64.add
           (get_local $11)
           (f64.promote/f32
            (f32.mul
             (tee_local $15
              (f32.load
               (i32.add
                (get_local $30)
                (i32.shl
                 (get_local $6)
                 (i32.const 2)
                )
               )
              )
             )
             (f32.load
              (i32.add
               (tee_local $16
                (i32.load
                 (get_local $24)
                )
               )
               (i32.shl
                (i32.add
                 (tee_local $10
                  (i32.sub
                   (i32.add
                    (i32.mul
                     (tee_local $6
                      (i32.add
                       (get_local $6)
                       (i32.const 1)
                      )
                     )
                     (get_local $31)
                    )
                    (i32.const 4)
                   )
                   (get_local $32)
                  )
                 )
                 (i32.const -2)
                )
                (i32.const 2)
               )
              )
             )
            )
           )
          )
         )
         (set_local $12
          (f64.add
           (get_local $12)
           (f64.promote/f32
            (f32.mul
             (get_local $15)
             (f32.load
              (i32.add
               (get_local $16)
               (i32.shl
                (i32.add
                 (get_local $10)
                 (i32.const 1)
                )
                (i32.const 2)
               )
              )
             )
            )
           )
          )
         )
         (set_local $13
          (f64.add
           (get_local $13)
           (f64.promote/f32
            (f32.mul
             (get_local $15)
             (f32.load
              (i32.add
               (get_local $16)
               (i32.shl
                (i32.add
                 (get_local $10)
                 (i32.const -1)
                )
                (i32.const 2)
               )
              )
             )
            )
           )
          )
         )
         (set_local $14
          (f64.add
           (get_local $14)
           (f64.promote/f32
            (f32.mul
             (get_local $15)
             (f32.load
              (i32.add
               (get_local $16)
               (i32.shl
                (get_local $10)
                (i32.const 2)
               )
              )
             )
            )
           )
          )
         )
         (br $while-in1)
        )
       )
      )
      (call $_cubic_coef
       (f32.div
        (f32.convert_u/i32
         (get_local $33)
        )
        (get_local $34)
       )
       (get_local $8)
      )
      (set_local $6
       (i32.add
        (get_local $7)
        (i32.const 1)
       )
      )
      (f32.store
       (i32.add
        (get_local $4)
        (i32.shl
         (i32.mul
          (get_local $19)
          (get_local $7)
         )
         (i32.const 2)
        )
       )
       (f32.demote/f64
        (f64.add
         (f64.add
          (f64.add
           (f64.mul
            (get_local $11)
            (f64.promote/f32
             (f32.load
              (get_local $8)
             )
            )
           )
           (f64.mul
            (get_local $13)
            (f64.promote/f32
             (f32.load
              (get_local $25)
             )
            )
           )
          )
          (f64.mul
           (get_local $14)
           (f64.promote/f32
            (f32.load
             (get_local $26)
            )
           )
          )
         )
         (f64.mul
          (get_local $12)
          (f64.promote/f32
           (f32.load
            (get_local $27)
           )
          )
         )
        )
       )
      )
      (set_local $0
       (i32.add
        (i32.add
         (get_local $0)
         (get_local $20)
        )
        (i32.xor
         (tee_local $9
          (i32.lt_u
           (tee_local $7
            (i32.add
             (get_local $9)
             (get_local $21)
            )
           )
           (get_local $17)
          )
         )
         (i32.const 1)
        )
       )
      )
      (set_local $9
       (i32.sub
        (get_local $7)
        (if (result i32)
         (get_local $9)
         (i32.const 0)
         (get_local $17)
        )
       )
      )
      (set_local $7
       (get_local $6)
      )
      (br $while-in)
     )
    )
   )
   (i32.store
    (i32.add
     (i32.load
      (get_local $29)
     )
     (i32.shl
      (get_local $1)
      (i32.const 2)
     )
    )
    (get_local $0)
   )
   (i32.store
    (i32.add
     (i32.load
      (get_local $28)
     )
     (i32.shl
      (get_local $1)
      (i32.const 2)
     )
    )
    (get_local $9)
   )
   (set_global $STACKTOP
    (get_local $8)
   )
   (get_local $7)
  )
 )
 (func $_resampler_basic_interpolate_single (; 429 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (result i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 f32)
  (local $12 f32)
  (local $13 f32)
  (local $14 f32)
  (local $15 f32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local $26 i32)
  (local $27 i32)
  (local $28 i32)
  (local $29 i32)
  (local $30 i32)
  (local $31 i32)
  (local $32 i32)
  (local $33 i32)
  (local $34 f32)
  (set_local $8
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.const 16)
   )
  )
  (set_local $18
   (i32.load offset=24
    (get_local $0)
   )
  )
  (set_local $19
   (i32.load offset=92
    (get_local $0)
   )
  )
  (set_local $20
   (i32.load offset=36
    (get_local $0)
   )
  )
  (set_local $21
   (i32.load offset=40
    (get_local $0)
   )
  )
  (set_local $17
   (i32.load
    (tee_local $22
     (i32.add
      (get_local $0)
      (i32.const 12)
     )
    )
   )
  )
  (set_local $23
   (i32.add
    (get_local $0)
    (i32.const 48)
   )
  )
  (set_local $24
   (i32.add
    (get_local $0)
    (i32.const 76)
   )
  )
  (set_local $25
   (i32.add
    (get_local $8)
    (i32.const 4)
   )
  )
  (set_local $26
   (i32.add
    (get_local $8)
    (i32.const 8)
   )
  )
  (set_local $27
   (i32.add
    (get_local $8)
    (i32.const 12)
   )
  )
  (set_local $9
   (i32.load
    (i32.add
     (i32.load
      (tee_local $28
       (i32.sub
        (get_local $0)
        (i32.const -64)
       )
      )
     )
     (i32.shl
      (get_local $1)
      (i32.const 2)
     )
    )
   )
  )
  (set_local $0
   (i32.load
    (i32.add
     (i32.load
      (tee_local $29
       (i32.add
        (get_local $0)
        (i32.const 60)
       )
      )
     )
     (i32.shl
      (get_local $1)
      (i32.const 2)
     )
    )
   )
  )
  (block $__rjto$0 (result i32)
   (block $__rjti$0
    (loop $while-in
     (block $while-out
      (br_if $__rjti$0
       (i32.ge_s
        (get_local $0)
        (i32.load
         (get_local $3)
        )
       )
      )
      (br_if $__rjti$0
       (i32.ge_s
        (get_local $7)
        (i32.load
         (get_local $5)
        )
       )
      )
      (set_local $30
       (i32.add
        (get_local $2)
        (i32.shl
         (get_local $0)
         (i32.const 2)
        )
       )
      )
      (set_local $32
       (i32.div_u
        (tee_local $10
         (i32.mul
          (get_local $9)
          (tee_local $31
           (i32.load
            (get_local $23)
           )
          )
         )
        )
        (tee_local $6
         (i32.load
          (get_local $22)
         )
        )
       )
      )
      (set_local $33
       (i32.rem_u
        (get_local $10)
        (get_local $6)
       )
      )
      (set_local $34
       (f32.convert_u/i32
        (get_local $6)
       )
      )
      (set_local $6
       (i32.const 0)
      )
      (set_local $11
       (f32.const 0)
      )
      (set_local $12
       (f32.const 0)
      )
      (set_local $13
       (f32.const 0)
      )
      (set_local $14
       (f32.const 0)
      )
      (loop $while-in1
       (if
        (i32.lt_s
         (get_local $6)
         (get_local $18)
        )
        (block
         (set_local $11
          (f32.add
           (get_local $11)
           (f32.mul
            (tee_local $15
             (f32.load
              (i32.add
               (get_local $30)
               (i32.shl
                (get_local $6)
                (i32.const 2)
               )
              )
             )
            )
            (f32.load
             (i32.add
              (tee_local $16
               (i32.load
                (get_local $24)
               )
              )
              (i32.shl
               (i32.add
                (tee_local $10
                 (i32.sub
                  (i32.add
                   (i32.mul
                    (tee_local $6
                     (i32.add
                      (get_local $6)
                      (i32.const 1)
                     )
                    )
                    (get_local $31)
                   )
                   (i32.const 4)
                  )
                  (get_local $32)
                 )
                )
                (i32.const -2)
               )
               (i32.const 2)
              )
             )
            )
           )
          )
         )
         (set_local $12
          (f32.add
           (get_local $12)
           (f32.mul
            (get_local $15)
            (f32.load
             (i32.add
              (get_local $16)
              (i32.shl
               (i32.add
                (get_local $10)
                (i32.const 1)
               )
               (i32.const 2)
              )
             )
            )
           )
          )
         )
         (set_local $13
          (f32.add
           (get_local $13)
           (f32.mul
            (get_local $15)
            (f32.load
             (i32.add
              (get_local $16)
              (i32.shl
               (i32.add
                (get_local $10)
                (i32.const -1)
               )
               (i32.const 2)
              )
             )
            )
           )
          )
         )
         (set_local $14
          (f32.add
           (get_local $14)
           (f32.mul
            (get_local $15)
            (f32.load
             (i32.add
              (get_local $16)
              (i32.shl
               (get_local $10)
               (i32.const 2)
              )
             )
            )
           )
          )
         )
         (br $while-in1)
        )
       )
      )
      (call $_cubic_coef
       (f32.div
        (f32.convert_u/i32
         (get_local $33)
        )
        (get_local $34)
       )
       (get_local $8)
      )
      (set_local $6
       (i32.add
        (get_local $7)
        (i32.const 1)
       )
      )
      (f32.store
       (i32.add
        (get_local $4)
        (i32.shl
         (i32.mul
          (get_local $19)
          (get_local $7)
         )
         (i32.const 2)
        )
       )
       (f32.add
        (f32.add
         (f32.add
          (f32.mul
           (f32.load
            (get_local $8)
           )
           (get_local $11)
          )
          (f32.mul
           (f32.load
            (get_local $25)
           )
           (get_local $13)
          )
         )
         (f32.mul
          (f32.load
           (get_local $26)
          )
          (get_local $14)
         )
        )
        (f32.mul
         (f32.load
          (get_local $27)
         )
         (get_local $12)
        )
       )
      )
      (set_local $0
       (i32.add
        (i32.add
         (get_local $0)
         (get_local $20)
        )
        (i32.xor
         (tee_local $9
          (i32.lt_u
           (tee_local $7
            (i32.add
             (get_local $9)
             (get_local $21)
            )
           )
           (get_local $17)
          )
         )
         (i32.const 1)
        )
       )
      )
      (set_local $9
       (i32.sub
        (get_local $7)
        (if (result i32)
         (get_local $9)
         (i32.const 0)
         (get_local $17)
        )
       )
      )
      (set_local $7
       (get_local $6)
      )
      (br $while-in)
     )
    )
   )
   (i32.store
    (i32.add
     (i32.load
      (get_local $29)
     )
     (i32.shl
      (get_local $1)
      (i32.const 2)
     )
    )
    (get_local $0)
   )
   (i32.store
    (i32.add
     (i32.load
      (get_local $28)
     )
     (i32.shl
      (get_local $1)
      (i32.const 2)
     )
    )
    (get_local $9)
   )
   (set_global $STACKTOP
    (get_local $8)
   )
   (get_local $7)
  )
 )
 (func $_resampler_basic_zero (; 430 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (result i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (set_local $8
   (i32.load offset=92
    (get_local $0)
   )
  )
  (set_local $9
   (i32.load offset=36
    (get_local $0)
   )
  )
  (set_local $10
   (i32.load offset=40
    (get_local $0)
   )
  )
  (set_local $7
   (i32.load offset=12
    (get_local $0)
   )
  )
  (set_local $6
   (i32.load
    (i32.add
     (i32.load
      (tee_local $11
       (i32.sub
        (get_local $0)
        (i32.const -64)
       )
      )
     )
     (i32.shl
      (get_local $1)
      (i32.const 2)
     )
    )
   )
  )
  (set_local $2
   (i32.load
    (i32.add
     (i32.load
      (tee_local $12
       (i32.add
        (get_local $0)
        (i32.const 60)
       )
      )
     )
     (i32.shl
      (get_local $1)
      (i32.const 2)
     )
    )
   )
  )
  (set_local $0
   (i32.const 0)
  )
  (block $__rjto$0 (result i32)
   (block $__rjti$0
    (loop $while-in
     (block $while-out
      (br_if $__rjti$0
       (i32.ge_s
        (get_local $2)
        (i32.load
         (get_local $3)
        )
       )
      )
      (if
       (i32.lt_s
        (get_local $0)
        (i32.load
         (get_local $5)
        )
       )
       (block
        (set_local $13
         (i32.add
          (get_local $0)
          (i32.const 1)
         )
        )
        (f32.store
         (i32.add
          (get_local $4)
          (i32.shl
           (i32.mul
            (get_local $8)
            (get_local $0)
           )
           (i32.const 2)
          )
         )
         (f32.const 0)
        )
        (set_local $2
         (i32.add
          (i32.add
           (get_local $2)
           (get_local $9)
          )
          (i32.xor
           (tee_local $6
            (i32.lt_u
             (tee_local $0
              (i32.add
               (get_local $6)
               (get_local $10)
              )
             )
             (get_local $7)
            )
           )
           (i32.const 1)
          )
         )
        )
        (set_local $6
         (i32.sub
          (get_local $0)
          (if (result i32)
           (get_local $6)
           (i32.const 0)
           (get_local $7)
          )
         )
        )
        (set_local $0
         (get_local $13)
        )
        (br $while-in)
       )
      )
     )
    )
   )
   (i32.store
    (i32.add
     (i32.load
      (get_local $12)
     )
     (i32.shl
      (get_local $1)
      (i32.const 2)
     )
    )
    (get_local $2)
   )
   (i32.store
    (i32.add
     (i32.load
      (get_local $11)
     )
     (i32.shl
      (get_local $1)
      (i32.const 2)
     )
    )
    (get_local $6)
   )
   (get_local $0)
  )
 )
 (func $_cubic_coef (; 431 ;) (; has Stack IR ;) (param $0 f32) (param $1 i32)
  (local $2 f32)
  (local $3 f32)
  (local $4 f32)
  (local $5 f32)
  (f32.store
   (get_local $1)
   (tee_local $4
    (f32.add
     (f32.mul
      (get_local $0)
      (f32.const -0.16666999459266663)
     )
     (tee_local $3
      (f32.mul
       (f32.mul
        (f32.mul
         (get_local $0)
         (f32.const 0.16666999459266663)
        )
        (get_local $0)
       )
       (get_local $0)
      )
     )
    )
   )
  )
  (f32.store offset=4
   (get_local $1)
   (tee_local $5
    (f32.sub
     (f32.add
      (tee_local $2
       (f32.mul
        (f32.mul
         (get_local $0)
         (f32.const 0.5)
        )
        (get_local $0)
       )
      )
      (get_local $0)
     )
     (f32.mul
      (get_local $2)
      (get_local $0)
     )
    )
   )
  )
  (f32.store offset=12
   (get_local $1)
   (tee_local $0
    (f32.sub
     (f32.add
      (f32.mul
       (get_local $0)
       (f32.const -0.3333300054073334)
      )
      (get_local $2)
     )
     (get_local $3)
    )
   )
  )
  (f32.store offset=8
   (get_local $1)
   (f32.demote/f64
    (f64.sub
     (f64.sub
      (f64.sub
       (f64.const 1)
       (f64.promote/f32
        (get_local $4)
       )
      )
      (f64.promote/f32
       (get_local $5)
      )
     )
     (f64.promote/f32
      (get_local $0)
     )
    )
   )
  )
 )
 (func $_compute_func (; 432 ;) (; has Stack IR ;) (param $0 f32) (param $1 i32) (param $2 i32) (result f64)
  (local $3 f64)
  (local $4 f64)
  (local $5 f64)
  (local $6 f32)
  (local $7 f64)
  (local $8 f64)
  (set_local $2
   (i32.trunc_s/f32
    (f32.floor
     (tee_local $0
      (f32.mul
       (f32.convert_s/i32
        (get_local $2)
       )
       (get_local $0)
      )
     )
    )
   )
  )
  (set_local $5
   (f64.add
    (f64.mul
     (tee_local $3
      (f64.promote/f32
       (tee_local $0
        (f32.sub
         (get_local $0)
         (f32.convert_s/i32
          (get_local $2)
         )
        )
       )
      )
     )
     (f64.const -0.1666666667)
    )
    (tee_local $7
     (f64.mul
      (tee_local $4
       (f64.promote/f32
        (f32.mul
         (tee_local $6
          (f32.mul
           (get_local $0)
           (get_local $0)
          )
         )
         (get_local $0)
        )
       )
      )
      (f64.const 0.1666666667)
     )
    )
   )
  )
  (set_local $4
   (f64.sub
    (f64.add
     (tee_local $8
      (f64.mul
       (f64.promote/f32
        (get_local $6)
       )
       (f64.const 0.5)
      )
     )
     (get_local $3)
    )
    (f64.mul
     (get_local $4)
     (f64.const 0.5)
    )
   )
  )
  (f64.add
   (f64.add
    (f64.add
     (f64.mul
      (tee_local $3
       (f64.sub
        (f64.add
         (f64.mul
          (get_local $3)
          (f64.const -0.3333333333)
         )
         (get_local $8)
        )
        (get_local $7)
       )
      )
      (f64.load
       (i32.add
        (get_local $1)
        (i32.shl
         (get_local $2)
         (i32.const 3)
        )
       )
      )
     )
     (f64.mul
      (f64.sub
       (f64.sub
        (f64.sub
         (f64.const 1)
         (get_local $5)
        )
        (get_local $4)
       )
       (get_local $3)
      )
      (f64.load
       (i32.add
        (get_local $1)
        (i32.shl
         (i32.add
          (get_local $2)
          (i32.const 1)
         )
         (i32.const 3)
        )
       )
      )
     )
    )
    (f64.mul
     (get_local $4)
     (f64.load
      (i32.add
       (get_local $1)
       (i32.shl
        (i32.add
         (get_local $2)
         (i32.const 2)
        )
        (i32.const 3)
       )
      )
     )
    )
   )
   (f64.mul
    (get_local $5)
    (f64.load
     (i32.add
      (get_local $1)
      (i32.shl
       (i32.add
        (get_local $2)
        (i32.const 3)
       )
       (i32.const 3)
      )
     )
    )
   )
  )
 )
 (func $_compute_gcd (; 433 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (set_local $2
   (get_local $0)
  )
  (loop $while-in
   (if
    (get_local $1)
    (block
     (set_local $1
      (i32.rem_u
       (get_local $2)
       (tee_local $0
        (get_local $1)
       )
      )
     )
     (set_local $2
      (get_local $0)
     )
     (br $while-in)
    )
   )
  )
  (get_local $2)
 )
 (func $_speex_resampler_process_float (; 434 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (set_local $7
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store
   (tee_local $13
    (i32.add
     (get_local $7)
     (i32.const 8)
    )
   )
   (get_local $4)
  )
  (set_local $8
   (i32.load
    (get_local $3)
   )
  )
  (set_local $4
   (i32.load
    (get_local $5)
   )
  )
  (set_local $14
   (i32.load offset=72
    (get_local $0)
   )
  )
  (set_local $11
   (i32.load offset=28
    (get_local $0)
   )
  )
  (set_local $6
   (i32.load offset=24
    (get_local $0)
   )
  )
  (set_local $15
   (i32.load offset=88
    (get_local $0)
   )
  )
  (if
   (i32.load
    (i32.add
     (i32.load
      (tee_local $12
       (i32.add
        (get_local $0)
        (i32.const 68)
       )
      )
     )
     (i32.shl
      (get_local $1)
      (i32.const 2)
     )
    )
   )
   (block
    (set_local $9
     (call $_speex_resampler_magic
      (get_local $0)
      (get_local $1)
      (get_local $13)
      (get_local $4)
     )
    )
    (set_local $4
     (i32.sub
      (get_local $4)
      (get_local $9)
     )
    )
    (if
     (i32.load
      (i32.add
       (i32.load
        (get_local $12)
       )
       (i32.shl
        (get_local $1)
        (i32.const 2)
       )
      )
     )
     (block
      (i32.store
       (get_local $3)
       (i32.sub
        (i32.load
         (get_local $3)
        )
        (get_local $8)
       )
      )
      (i32.store
       (get_local $5)
       (i32.sub
        (i32.load
         (get_local $5)
        )
        (get_local $4)
       )
      )
      (set_global $STACKTOP
       (get_local $7)
      )
      (return)
     )
    )
   )
  )
  (set_local $10
   (i32.add
    (get_local $7)
    (i32.const 4)
   )
  )
  (set_local $16
   (i32.add
    (get_local $14)
    (i32.shl
     (i32.mul
      (get_local $11)
      (get_local $1)
     )
     (i32.const 2)
    )
   )
  )
  (set_local $12
   (i32.sub
    (get_local $11)
    (tee_local $17
     (i32.add
      (get_local $6)
      (i32.const -1)
     )
    )
   )
  )
  (set_local $18
   (i32.add
    (get_local $0)
    (i32.const 92)
   )
  )
  (set_local $9
   (get_local $2)
  )
  (set_local $2
   (get_local $4)
  )
  (loop $while-in
   (if
    (i32.and
     (i32.ne
      (get_local $8)
      (i32.const 0)
     )
     (i32.ne
      (get_local $2)
      (i32.const 0)
     )
    )
    (block
     (i32.store
      (get_local $10)
      (tee_local $4
       (if (result i32)
        (i32.gt_u
         (get_local $8)
         (get_local $12)
        )
        (get_local $12)
        (get_local $8)
       )
      )
     )
     (i32.store
      (get_local $7)
      (get_local $2)
     )
     (block $label$break$L8
      (if
       (tee_local $11
        (i32.eqz
         (get_local $9)
        )
       )
       (block
        (set_local $6
         (i32.const 0)
        )
        (loop $while-in1
         (br_if $label$break$L8
          (i32.ge_u
           (get_local $6)
           (get_local $4)
          )
         )
         (f32.store
          (i32.add
           (get_local $16)
           (i32.shl
            (i32.add
             (get_local $6)
             (get_local $17)
            )
            (i32.const 2)
           )
          )
          (f32.const 0)
         )
         (set_local $6
          (i32.add
           (get_local $6)
           (i32.const 1)
          )
         )
         (set_local $4
          (i32.load
           (get_local $10)
          )
         )
         (br $while-in1)
        )
       )
       (block
        (set_local $6
         (i32.const 0)
        )
        (loop $while-in3
         (br_if $label$break$L8
          (i32.ge_u
           (get_local $6)
           (get_local $4)
          )
         )
         (i32.store
          (i32.add
           (get_local $16)
           (i32.shl
            (i32.add
             (get_local $6)
             (get_local $17)
            )
            (i32.const 2)
           )
          )
          (i32.load
           (i32.add
            (get_local $9)
            (i32.shl
             (i32.mul
              (get_local $6)
              (get_local $15)
             )
             (i32.const 2)
            )
           )
          )
         )
         (set_local $6
          (i32.add
           (get_local $6)
           (i32.const 1)
          )
         )
         (set_local $4
          (i32.load
           (get_local $10)
          )
         )
         (br $while-in3)
        )
       )
      )
     )
     (call $_speex_resampler_process_native
      (get_local $0)
      (get_local $1)
      (get_local $10)
      (tee_local $14
       (i32.load
        (get_local $13)
       )
      )
      (get_local $7)
     )
     (set_local $8
      (i32.sub
       (get_local $8)
       (tee_local $6
        (i32.load
         (get_local $10)
        )
       )
      )
     )
     (set_local $2
      (i32.sub
       (get_local $2)
       (tee_local $4
        (i32.load
         (get_local $7)
        )
       )
      )
     )
     (i32.store
      (get_local $13)
      (i32.add
       (get_local $14)
       (i32.shl
        (i32.mul
         (get_local $4)
         (i32.load
          (get_local $18)
         )
        )
        (i32.const 2)
       )
      )
     )
     (set_local $9
      (i32.add
       (get_local $9)
       (i32.shl
        (i32.mul
         (get_local $6)
         (get_local $15)
        )
        (i32.const 2)
       )
      )
     )
     (if
      (get_local $11)
      (set_local $9
       (i32.const 0)
      )
     )
     (br $while-in)
    )
   )
  )
  (i32.store
   (get_local $3)
   (i32.sub
    (i32.load
     (get_local $3)
    )
    (get_local $8)
   )
  )
  (i32.store
   (get_local $5)
   (i32.sub
    (i32.load
     (get_local $5)
    )
    (get_local $2)
   )
  )
  (set_global $STACKTOP
   (get_local $7)
  )
 )
 (func $_speex_resampler_magic (; 435 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (set_local $4
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store
   (tee_local $6
    (i32.add
     (get_local $4)
     (i32.const 4)
    )
   )
   (get_local $3)
  )
  (i32.store
   (get_local $4)
   (i32.load
    (i32.add
     (i32.load
      (tee_local $7
       (i32.add
        (get_local $0)
        (i32.const 68)
       )
      )
     )
     (i32.shl
      (get_local $1)
      (i32.const 2)
     )
    )
   )
  )
  (set_local $9
   (i32.add
    (i32.load offset=72
     (get_local $0)
    )
    (i32.shl
     (i32.mul
      (i32.load offset=28
       (get_local $0)
      )
      (get_local $1)
     )
     (i32.const 2)
    )
   )
  )
  (set_local $8
   (i32.load offset=24
    (get_local $0)
   )
  )
  (call $_speex_resampler_process_native
   (get_local $0)
   (get_local $1)
   (get_local $4)
   (i32.load
    (get_local $2)
   )
   (get_local $6)
  )
  (i32.store
   (tee_local $3
    (i32.add
     (i32.load
      (get_local $7)
     )
     (i32.shl
      (get_local $1)
      (i32.const 2)
     )
    )
   )
   (i32.sub
    (i32.load
     (get_local $3)
    )
    (i32.load
     (get_local $4)
    )
   )
  )
  (if
   (i32.eqz
    (tee_local $3
     (i32.load
      (i32.add
       (i32.load
        (get_local $7)
       )
       (i32.shl
        (get_local $1)
        (i32.const 2)
       )
      )
     )
    )
   )
   (block
    (i32.store
     (get_local $2)
     (i32.add
      (i32.load
       (get_local $2)
      )
      (i32.shl
       (i32.mul
        (tee_local $1
         (i32.load
          (get_local $6)
         )
        )
        (i32.load offset=92
         (get_local $0)
        )
       )
       (i32.const 2)
      )
     )
    )
    (set_global $STACKTOP
     (get_local $4)
    )
    (return
     (get_local $1)
    )
   )
  )
  (set_local $8
   (i32.add
    (get_local $8)
    (i32.const -1)
   )
  )
  (loop $while-in
   (if
    (i32.lt_u
     (get_local $5)
     (get_local $3)
    )
    (block
     (i32.store
      (i32.add
       (get_local $9)
       (i32.shl
        (tee_local $3
         (i32.add
          (get_local $8)
          (get_local $5)
         )
        )
        (i32.const 2)
       )
      )
      (i32.load
       (i32.add
        (get_local $9)
        (i32.shl
         (i32.add
          (get_local $3)
          (i32.load
           (get_local $4)
          )
         )
         (i32.const 2)
        )
       )
      )
     )
     (set_local $5
      (i32.add
       (get_local $5)
       (i32.const 1)
      )
     )
     (set_local $3
      (i32.load
       (i32.add
        (i32.load
         (get_local $7)
        )
        (i32.shl
         (get_local $1)
         (i32.const 2)
        )
       )
      )
     )
     (br $while-in)
    )
   )
  )
  (i32.store
   (get_local $2)
   (i32.add
    (i32.load
     (get_local $2)
    )
    (i32.shl
     (i32.mul
      (tee_local $1
       (i32.load
        (get_local $6)
       )
      )
      (i32.load offset=92
       (get_local $0)
      )
     )
     (i32.const 2)
    )
   )
  )
  (set_global $STACKTOP
   (get_local $4)
  )
  (get_local $1)
 )
 (func $_speex_resampler_process_native (; 436 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (set_local $6
   (i32.load offset=24
    (get_local $0)
   )
  )
  (set_local $5
   (i32.add
    (i32.load offset=72
     (get_local $0)
    )
    (i32.shl
     (i32.mul
      (i32.load offset=28
       (get_local $0)
      )
      (get_local $1)
     )
     (i32.const 2)
    )
   )
  )
  (i32.store offset=56
   (get_local $0)
   (i32.const 1)
  )
  (set_local $3
   (call_indirect (type $FUNCSIG$iiiiiii)
    (get_local $0)
    (get_local $1)
    (get_local $5)
    (get_local $2)
    (get_local $3)
    (get_local $4)
    (i32.add
     (i32.and
      (i32.load offset=84
       (get_local $0)
      )
      (i32.const 7)
     )
     (i32.const 6)
    )
   )
  )
  (if
   (i32.lt_s
    (tee_local $7
     (i32.load
      (i32.add
       (i32.load
        (tee_local $0
         (i32.add
          (get_local $0)
          (i32.const 60)
         )
        )
       )
       (i32.shl
        (get_local $1)
        (i32.const 2)
       )
      )
     )
    )
    (i32.load
     (get_local $2)
    )
   )
   (i32.store
    (get_local $2)
    (get_local $7)
   )
  )
  (i32.store
   (get_local $4)
   (get_local $3)
  )
  (i32.store
   (tee_local $0
    (i32.add
     (i32.load
      (get_local $0)
     )
     (i32.shl
      (get_local $1)
      (i32.const 2)
     )
    )
   )
   (i32.sub
    (i32.load
     (get_local $0)
    )
    (i32.load
     (get_local $2)
    )
   )
  )
  (set_local $1
   (i32.load
    (get_local $2)
   )
  )
  (set_local $2
   (i32.add
    (get_local $6)
    (i32.const -1)
   )
  )
  (set_local $0
   (i32.const 0)
  )
  (loop $while-in
   (if
    (i32.lt_s
     (get_local $0)
     (get_local $2)
    )
    (block
     (i32.store
      (i32.add
       (get_local $5)
       (i32.shl
        (get_local $0)
        (i32.const 2)
       )
      )
      (i32.load
       (i32.add
        (get_local $5)
        (i32.shl
         (i32.add
          (get_local $0)
          (get_local $1)
         )
         (i32.const 2)
        )
       )
      )
     )
     (set_local $0
      (i32.add
       (get_local $0)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
 )
 (func $_speex_resampler_process_interleaved_float (; 437 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (set_local $9
   (i32.load
    (get_local $4)
   )
  )
  (set_local $10
   (i32.load
    (get_local $2)
   )
  )
  (set_local $11
   (i32.load
    (tee_local $7
     (i32.add
      (get_local $0)
      (i32.const 88)
     )
    )
   )
  )
  (set_local $12
   (i32.load
    (tee_local $8
     (i32.add
      (get_local $0)
      (i32.const 92)
     )
    )
   )
  )
  (i32.store
   (get_local $8)
   (tee_local $6
    (i32.load
     (tee_local $13
      (i32.add
       (get_local $0)
       (i32.const 20)
      )
     )
    )
   )
  )
  (i32.store
   (get_local $7)
   (get_local $6)
  )
  (set_local $14
   (i32.eqz
    (get_local $1)
   )
  )
  (loop $while-in
   (if
    (i32.lt_u
     (get_local $5)
     (get_local $6)
    )
    (block
     (i32.store
      (get_local $4)
      (get_local $9)
     )
     (i32.store
      (get_local $2)
      (get_local $10)
     )
     (if
      (get_local $14)
      (call $_speex_resampler_process_float
       (get_local $0)
       (get_local $5)
       (i32.const 0)
       (get_local $2)
       (i32.add
        (get_local $3)
        (i32.shl
         (get_local $5)
         (i32.const 2)
        )
       )
       (get_local $4)
      )
      (call $_speex_resampler_process_float
       (get_local $0)
       (get_local $5)
       (i32.add
        (get_local $1)
        (i32.shl
         (get_local $5)
         (i32.const 2)
        )
       )
       (get_local $2)
       (i32.add
        (get_local $3)
        (i32.shl
         (get_local $5)
         (i32.const 2)
        )
       )
       (get_local $4)
      )
     )
     (set_local $5
      (i32.add
       (get_local $5)
       (i32.const 1)
      )
     )
     (set_local $6
      (i32.load
       (get_local $13)
      )
     )
     (br $while-in)
    )
   )
  )
  (i32.store
   (get_local $7)
   (get_local $11)
  )
  (i32.store
   (get_local $8)
   (get_local $12)
  )
  (i32.eq
   (i32.load offset=84
    (get_local $0)
   )
   (i32.const 5)
  )
 )
 (func $_malloc (; 438 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (block $folding-inner1
   (block $folding-inner0
    (set_local $1
     (get_global $STACKTOP)
    )
    (set_global $STACKTOP
     (i32.add
      (get_global $STACKTOP)
      (i32.const 16)
     )
    )
    (set_local $14
     (get_local $1)
    )
    (set_local $3
     (block $do-once (result i32)
      (if (result i32)
       (i32.lt_u
        (get_local $0)
        (i32.const 245)
       )
       (block (result i32)
        (set_local $1
         (i32.and
          (i32.add
           (get_local $0)
           (i32.const 11)
          )
          (i32.const -8)
         )
        )
        (if
         (i32.and
          (tee_local $3
           (i32.shr_u
            (tee_local $7
             (i32.load
              (i32.const 51488)
             )
            )
            (tee_local $0
             (i32.shr_u
              (if (result i32)
               (i32.lt_u
                (get_local $0)
                (i32.const 11)
               )
               (tee_local $1
                (i32.const 16)
               )
               (get_local $1)
              )
              (i32.const 3)
             )
            )
           )
          )
          (i32.const 3)
         )
         (block
          (if
           (i32.eq
            (tee_local $3
             (i32.load
              (tee_local $6
               (i32.add
                (tee_local $0
                 (i32.load
                  (tee_local $4
                   (i32.add
                    (tee_local $2
                     (i32.add
                      (i32.shl
                       (tee_local $1
                        (i32.add
                         (i32.xor
                          (i32.and
                           (get_local $3)
                           (i32.const 1)
                          )
                          (i32.const 1)
                         )
                         (get_local $0)
                        )
                       )
                       (i32.const 3)
                      )
                      (i32.const 51528)
                     )
                    )
                    (i32.const 8)
                   )
                  )
                 )
                )
                (i32.const 8)
               )
              )
             )
            )
            (get_local $2)
           )
           (i32.store
            (i32.const 51488)
            (i32.and
             (get_local $7)
             (i32.xor
              (i32.shl
               (i32.const 1)
               (get_local $1)
              )
              (i32.const -1)
             )
            )
           )
           (block
            (if
             (i32.gt_u
              (i32.load
               (i32.const 51504)
              )
              (get_local $3)
             )
             (call $_abort)
            )
            (if
             (i32.eq
              (i32.load
               (tee_local $5
                (i32.add
                 (get_local $3)
                 (i32.const 12)
                )
               )
              )
              (get_local $0)
             )
             (block
              (i32.store
               (get_local $5)
               (get_local $2)
              )
              (i32.store
               (get_local $4)
               (get_local $3)
              )
             )
             (call $_abort)
            )
           )
          )
          (i32.store offset=4
           (get_local $0)
           (i32.or
            (tee_local $3
             (i32.shl
              (get_local $1)
              (i32.const 3)
             )
            )
            (i32.const 3)
           )
          )
          (i32.store
           (tee_local $0
            (i32.add
             (i32.add
              (get_local $0)
              (get_local $3)
             )
             (i32.const 4)
            )
           )
           (i32.or
            (i32.load
             (get_local $0)
            )
            (i32.const 1)
           )
          )
          (set_global $STACKTOP
           (get_local $14)
          )
          (return
           (get_local $6)
          )
         )
        )
        (if (result i32)
         (i32.gt_u
          (get_local $1)
          (tee_local $15
           (i32.load
            (i32.const 51496)
           )
          )
         )
         (block (result i32)
          (if
           (get_local $3)
           (block
            (set_local $0
             (i32.and
              (i32.shr_u
               (tee_local $3
                (i32.add
                 (i32.and
                  (tee_local $0
                   (i32.and
                    (i32.shl
                     (get_local $3)
                     (get_local $0)
                    )
                    (i32.or
                     (tee_local $0
                      (i32.shl
                       (i32.const 2)
                       (get_local $0)
                      )
                     )
                     (i32.sub
                      (i32.const 0)
                      (get_local $0)
                     )
                    )
                   )
                  )
                  (i32.sub
                   (i32.const 0)
                   (get_local $0)
                  )
                 )
                 (i32.const -1)
                )
               )
               (i32.const 12)
              )
              (i32.const 16)
             )
            )
            (if
             (i32.eq
              (tee_local $3
               (i32.load
                (tee_local $10
                 (i32.add
                  (tee_local $0
                   (i32.load
                    (tee_local $9
                     (i32.add
                      (tee_local $5
                       (i32.add
                        (i32.shl
                         (tee_local $4
                          (i32.add
                           (i32.or
                            (i32.or
                             (i32.or
                              (i32.or
                               (tee_local $4
                                (i32.and
                                 (i32.shr_u
                                  (tee_local $3
                                   (i32.shr_u
                                    (get_local $3)
                                    (get_local $0)
                                   )
                                  )
                                  (i32.const 5)
                                 )
                                 (i32.const 8)
                                )
                               )
                               (get_local $0)
                              )
                              (tee_local $3
                               (i32.and
                                (i32.shr_u
                                 (tee_local $0
                                  (i32.shr_u
                                   (get_local $3)
                                   (get_local $4)
                                  )
                                 )
                                 (i32.const 2)
                                )
                                (i32.const 4)
                               )
                              )
                             )
                             (tee_local $3
                              (i32.and
                               (i32.shr_u
                                (tee_local $0
                                 (i32.shr_u
                                  (get_local $0)
                                  (get_local $3)
                                 )
                                )
                                (i32.const 1)
                               )
                               (i32.const 2)
                              )
                             )
                            )
                            (tee_local $3
                             (i32.and
                              (i32.shr_u
                               (tee_local $0
                                (i32.shr_u
                                 (get_local $0)
                                 (get_local $3)
                                )
                               )
                               (i32.const 1)
                              )
                              (i32.const 1)
                             )
                            )
                           )
                           (i32.shr_u
                            (get_local $0)
                            (get_local $3)
                           )
                          )
                         )
                         (i32.const 3)
                        )
                        (i32.const 51528)
                       )
                      )
                      (i32.const 8)
                     )
                    )
                   )
                  )
                  (i32.const 8)
                 )
                )
               )
              )
              (get_local $5)
             )
             (i32.store
              (i32.const 51488)
              (tee_local $2
               (i32.and
                (get_local $7)
                (i32.xor
                 (i32.shl
                  (i32.const 1)
                  (get_local $4)
                 )
                 (i32.const -1)
                )
               )
              )
             )
             (block
              (if
               (i32.gt_u
                (i32.load
                 (i32.const 51504)
                )
                (get_local $3)
               )
               (call $_abort)
              )
              (if
               (i32.eq
                (i32.load
                 (tee_local $11
                  (i32.add
                   (get_local $3)
                   (i32.const 12)
                  )
                 )
                )
                (get_local $0)
               )
               (block
                (i32.store
                 (get_local $11)
                 (get_local $5)
                )
                (i32.store
                 (get_local $9)
                 (get_local $3)
                )
                (set_local $2
                 (get_local $7)
                )
               )
               (call $_abort)
              )
             )
            )
            (i32.store offset=4
             (get_local $0)
             (i32.or
              (get_local $1)
              (i32.const 3)
             )
            )
            (i32.store offset=4
             (tee_local $7
              (i32.add
               (get_local $0)
               (get_local $1)
              )
             )
             (i32.or
              (tee_local $5
               (i32.sub
                (tee_local $3
                 (i32.shl
                  (get_local $4)
                  (i32.const 3)
                 )
                )
                (get_local $1)
               )
              )
              (i32.const 1)
             )
            )
            (i32.store
             (i32.add
              (get_local $0)
              (get_local $3)
             )
             (get_local $5)
            )
            (if
             (get_local $15)
             (block
              (set_local $4
               (i32.load
                (i32.const 51508)
               )
              )
              (set_local $0
               (i32.add
                (i32.shl
                 (tee_local $3
                  (i32.shr_u
                   (get_local $15)
                   (i32.const 3)
                  )
                 )
                 (i32.const 3)
                )
                (i32.const 51528)
               )
              )
              (if
               (i32.and
                (get_local $2)
                (tee_local $3
                 (i32.shl
                  (i32.const 1)
                  (get_local $3)
                 )
                )
               )
               (if
                (i32.gt_u
                 (i32.load
                  (i32.const 51504)
                 )
                 (tee_local $1
                  (i32.load
                   (tee_local $3
                    (i32.add
                     (get_local $0)
                     (i32.const 8)
                    )
                   )
                  )
                 )
                )
                (call $_abort)
                (block
                 (set_local $6
                  (get_local $1)
                 )
                 (set_local $13
                  (get_local $3)
                 )
                )
               )
               (block
                (i32.store
                 (i32.const 51488)
                 (i32.or
                  (get_local $2)
                  (get_local $3)
                 )
                )
                (set_local $6
                 (get_local $0)
                )
                (set_local $13
                 (i32.add
                  (get_local $0)
                  (i32.const 8)
                 )
                )
               )
              )
              (i32.store
               (get_local $13)
               (get_local $4)
              )
              (i32.store offset=12
               (get_local $6)
               (get_local $4)
              )
              (i32.store offset=8
               (get_local $4)
               (get_local $6)
              )
              (i32.store offset=12
               (get_local $4)
               (get_local $0)
              )
             )
            )
            (i32.store
             (i32.const 51496)
             (get_local $5)
            )
            (i32.store
             (i32.const 51508)
             (get_local $7)
            )
            (set_global $STACKTOP
             (get_local $14)
            )
            (return
             (get_local $10)
            )
           )
          )
          (if (result i32)
           (tee_local $13
            (i32.load
             (i32.const 51492)
            )
           )
           (block
            (set_local $0
             (i32.and
              (i32.shr_u
               (tee_local $3
                (i32.add
                 (i32.and
                  (get_local $13)
                  (i32.sub
                   (i32.const 0)
                   (get_local $13)
                  )
                 )
                 (i32.const -1)
                )
               )
               (i32.const 12)
              )
              (i32.const 16)
             )
            )
            (set_local $0
             (tee_local $2
              (i32.load
               (i32.add
                (i32.shl
                 (i32.add
                  (i32.or
                   (i32.or
                    (i32.or
                     (i32.or
                      (tee_local $2
                       (i32.and
                        (i32.shr_u
                         (tee_local $3
                          (i32.shr_u
                           (get_local $3)
                           (get_local $0)
                          )
                         )
                         (i32.const 5)
                        )
                        (i32.const 8)
                       )
                      )
                      (get_local $0)
                     )
                     (tee_local $3
                      (i32.and
                       (i32.shr_u
                        (tee_local $0
                         (i32.shr_u
                          (get_local $3)
                          (get_local $2)
                         )
                        )
                        (i32.const 2)
                       )
                       (i32.const 4)
                      )
                     )
                    )
                    (tee_local $3
                     (i32.and
                      (i32.shr_u
                       (tee_local $0
                        (i32.shr_u
                         (get_local $0)
                         (get_local $3)
                        )
                       )
                       (i32.const 1)
                      )
                      (i32.const 2)
                     )
                    )
                   )
                   (tee_local $3
                    (i32.and
                     (i32.shr_u
                      (tee_local $0
                       (i32.shr_u
                        (get_local $0)
                        (get_local $3)
                       )
                      )
                      (i32.const 1)
                     )
                     (i32.const 1)
                    )
                   )
                  )
                  (i32.shr_u
                   (get_local $0)
                   (get_local $3)
                  )
                 )
                 (i32.const 2)
                )
                (i32.const 51792)
               )
              )
             )
            )
            (set_local $6
             (i32.sub
              (i32.and
               (i32.load offset=4
                (get_local $2)
               )
               (i32.const -8)
              )
              (get_local $1)
             )
            )
            (loop $while-in
             (block $while-out
              (if
               (tee_local $3
                (i32.load offset=16
                 (get_local $0)
                )
               )
               (set_local $0
                (get_local $3)
               )
               (br_if $while-out
                (i32.eqz
                 (tee_local $0
                  (i32.load offset=20
                   (get_local $0)
                  )
                 )
                )
               )
              )
              (if
               (i32.eqz
                (tee_local $9
                 (i32.lt_u
                  (tee_local $3
                   (i32.sub
                    (i32.and
                     (i32.load offset=4
                      (get_local $0)
                     )
                     (i32.const -8)
                    )
                    (get_local $1)
                   )
                  )
                  (get_local $6)
                 )
                )
               )
               (set_local $3
                (get_local $6)
               )
              )
              (if
               (get_local $9)
               (set_local $2
                (get_local $0)
               )
              )
              (set_local $6
               (get_local $3)
              )
              (br $while-in)
             )
            )
            (if
             (i32.gt_u
              (tee_local $12
               (i32.load
                (i32.const 51504)
               )
              )
              (get_local $2)
             )
             (call $_abort)
            )
            (if
             (i32.le_u
              (tee_local $8
               (i32.add
                (get_local $2)
                (get_local $1)
               )
              )
              (get_local $2)
             )
             (call $_abort)
            )
            (set_local $11
             (i32.load offset=24
              (get_local $2)
             )
            )
            (block $do-once4
             (if
              (i32.eq
               (tee_local $0
                (i32.load offset=12
                 (get_local $2)
                )
               )
               (get_local $2)
              )
              (block
               (if
                (i32.eqz
                 (tee_local $0
                  (i32.load
                   (tee_local $3
                    (i32.add
                     (get_local $2)
                     (i32.const 20)
                    )
                   )
                  )
                 )
                )
                (br_if $do-once4
                 (i32.eqz
                  (tee_local $0
                   (i32.load
                    (tee_local $3
                     (i32.add
                      (get_local $2)
                      (i32.const 16)
                     )
                    )
                   )
                  )
                 )
                )
               )
               (loop $while-in7
                (block $while-out6
                 (if
                  (i32.eqz
                   (tee_local $10
                    (i32.load
                     (tee_local $9
                      (i32.add
                       (get_local $0)
                       (i32.const 20)
                      )
                     )
                    )
                   )
                  )
                  (br_if $while-out6
                   (i32.eqz
                    (tee_local $10
                     (i32.load
                      (tee_local $9
                       (i32.add
                        (get_local $0)
                        (i32.const 16)
                       )
                      )
                     )
                    )
                   )
                  )
                 )
                 (set_local $3
                  (get_local $9)
                 )
                 (set_local $0
                  (get_local $10)
                 )
                 (br $while-in7)
                )
               )
               (if
                (i32.gt_u
                 (get_local $12)
                 (get_local $3)
                )
                (call $_abort)
                (block
                 (i32.store
                  (get_local $3)
                  (i32.const 0)
                 )
                 (set_local $4
                  (get_local $0)
                 )
                )
               )
              )
              (block
               (if
                (i32.gt_u
                 (get_local $12)
                 (tee_local $3
                  (i32.load offset=8
                   (get_local $2)
                  )
                 )
                )
                (call $_abort)
               )
               (if
                (i32.ne
                 (i32.load
                  (tee_local $9
                   (i32.add
                    (get_local $3)
                    (i32.const 12)
                   )
                  )
                 )
                 (get_local $2)
                )
                (call $_abort)
               )
               (if
                (i32.eq
                 (i32.load
                  (tee_local $10
                   (i32.add
                    (get_local $0)
                    (i32.const 8)
                   )
                  )
                 )
                 (get_local $2)
                )
                (block
                 (i32.store
                  (get_local $9)
                  (get_local $0)
                 )
                 (i32.store
                  (get_local $10)
                  (get_local $3)
                 )
                 (set_local $4
                  (get_local $0)
                 )
                )
                (call $_abort)
               )
              )
             )
            )
            (block $label$break$L78
             (if
              (get_local $11)
              (block
               (if
                (i32.eq
                 (get_local $2)
                 (i32.load
                  (tee_local $3
                   (i32.add
                    (i32.shl
                     (tee_local $0
                      (i32.load offset=28
                       (get_local $2)
                      )
                     )
                     (i32.const 2)
                    )
                    (i32.const 51792)
                   )
                  )
                 )
                )
                (block
                 (i32.store
                  (get_local $3)
                  (get_local $4)
                 )
                 (if
                  (i32.eqz
                   (get_local $4)
                  )
                  (block
                   (i32.store
                    (i32.const 51492)
                    (i32.and
                     (get_local $13)
                     (i32.xor
                      (i32.shl
                       (i32.const 1)
                       (get_local $0)
                      )
                      (i32.const -1)
                     )
                    )
                   )
                   (br $label$break$L78)
                  )
                 )
                )
                (if
                 (i32.gt_u
                  (i32.load
                   (i32.const 51504)
                  )
                  (get_local $11)
                 )
                 (call $_abort)
                 (block
                  (set_local $0
                   (i32.add
                    (get_local $11)
                    (i32.const 20)
                   )
                  )
                  (i32.store
                   (if (result i32)
                    (i32.eq
                     (i32.load
                      (tee_local $3
                       (i32.add
                        (get_local $11)
                        (i32.const 16)
                       )
                      )
                     )
                     (get_local $2)
                    )
                    (get_local $3)
                    (get_local $0)
                   )
                   (get_local $4)
                  )
                  (br_if $label$break$L78
                   (i32.eqz
                    (get_local $4)
                   )
                  )
                 )
                )
               )
               (if
                (i32.gt_u
                 (tee_local $3
                  (i32.load
                   (i32.const 51504)
                  )
                 )
                 (get_local $4)
                )
                (call $_abort)
               )
               (i32.store offset=24
                (get_local $4)
                (get_local $11)
               )
               (if
                (tee_local $0
                 (i32.load offset=16
                  (get_local $2)
                 )
                )
                (if
                 (i32.gt_u
                  (get_local $3)
                  (get_local $0)
                 )
                 (call $_abort)
                 (block
                  (i32.store offset=16
                   (get_local $4)
                   (get_local $0)
                  )
                  (i32.store offset=24
                   (get_local $0)
                   (get_local $4)
                  )
                 )
                )
               )
               (if
                (tee_local $0
                 (i32.load offset=20
                  (get_local $2)
                 )
                )
                (if
                 (i32.gt_u
                  (i32.load
                   (i32.const 51504)
                  )
                  (get_local $0)
                 )
                 (call $_abort)
                 (block
                  (i32.store offset=20
                   (get_local $4)
                   (get_local $0)
                  )
                  (i32.store offset=24
                   (get_local $0)
                   (get_local $4)
                  )
                 )
                )
               )
              )
             )
            )
            (if
             (i32.lt_u
              (get_local $6)
              (i32.const 16)
             )
             (block
              (i32.store offset=4
               (get_local $2)
               (i32.or
                (tee_local $0
                 (i32.add
                  (get_local $6)
                  (get_local $1)
                 )
                )
                (i32.const 3)
               )
              )
              (i32.store
               (tee_local $0
                (i32.add
                 (i32.add
                  (get_local $2)
                  (get_local $0)
                 )
                 (i32.const 4)
                )
               )
               (i32.or
                (i32.load
                 (get_local $0)
                )
                (i32.const 1)
               )
              )
             )
             (block
              (i32.store offset=4
               (get_local $2)
               (i32.or
                (get_local $1)
                (i32.const 3)
               )
              )
              (i32.store offset=4
               (get_local $8)
               (i32.or
                (get_local $6)
                (i32.const 1)
               )
              )
              (i32.store
               (i32.add
                (get_local $8)
                (get_local $6)
               )
               (get_local $6)
              )
              (if
               (get_local $15)
               (block
                (set_local $4
                 (i32.load
                  (i32.const 51508)
                 )
                )
                (set_local $0
                 (i32.add
                  (i32.shl
                   (tee_local $3
                    (i32.shr_u
                     (get_local $15)
                     (i32.const 3)
                    )
                   )
                   (i32.const 3)
                  )
                  (i32.const 51528)
                 )
                )
                (if
                 (i32.and
                  (tee_local $3
                   (i32.shl
                    (i32.const 1)
                    (get_local $3)
                   )
                  )
                  (get_local $7)
                 )
                 (if
                  (i32.gt_u
                   (i32.load
                    (i32.const 51504)
                   )
                   (tee_local $1
                    (i32.load
                     (tee_local $3
                      (i32.add
                       (get_local $0)
                       (i32.const 8)
                      )
                     )
                    )
                   )
                  )
                  (call $_abort)
                  (block
                   (set_local $5
                    (get_local $1)
                   )
                   (set_local $16
                    (get_local $3)
                   )
                  )
                 )
                 (block
                  (i32.store
                   (i32.const 51488)
                   (i32.or
                    (get_local $3)
                    (get_local $7)
                   )
                  )
                  (set_local $5
                   (get_local $0)
                  )
                  (set_local $16
                   (i32.add
                    (get_local $0)
                    (i32.const 8)
                   )
                  )
                 )
                )
                (i32.store
                 (get_local $16)
                 (get_local $4)
                )
                (i32.store offset=12
                 (get_local $5)
                 (get_local $4)
                )
                (i32.store offset=8
                 (get_local $4)
                 (get_local $5)
                )
                (i32.store offset=12
                 (get_local $4)
                 (get_local $0)
                )
               )
              )
              (i32.store
               (i32.const 51496)
               (get_local $6)
              )
              (i32.store
               (i32.const 51508)
               (get_local $8)
              )
             )
            )
            (set_global $STACKTOP
             (get_local $14)
            )
            (return
             (i32.add
              (get_local $2)
              (i32.const 8)
             )
            )
           )
           (get_local $1)
          )
         )
         (get_local $1)
        )
       )
       (if (result i32)
        (i32.gt_u
         (get_local $0)
         (i32.const -65)
        )
        (i32.const -1)
        (block (result i32)
         (set_local $4
          (i32.and
           (tee_local $0
            (i32.add
             (get_local $0)
             (i32.const 11)
            )
           )
           (i32.const -8)
          )
         )
         (if (result i32)
          (tee_local $6
           (i32.load
            (i32.const 51492)
           )
          )
          (block (result i32)
           (set_local $16
            (if (result i32)
             (tee_local $0
              (i32.shr_u
               (get_local $0)
               (i32.const 8)
              )
             )
             (if (result i32)
              (i32.gt_u
               (get_local $4)
               (i32.const 16777215)
              )
              (i32.const 31)
              (i32.or
               (i32.and
                (i32.shr_u
                 (get_local $4)
                 (i32.add
                  (tee_local $0
                   (i32.add
                    (i32.sub
                     (i32.const 14)
                     (i32.or
                      (i32.or
                       (tee_local $2
                        (i32.and
                         (i32.shr_u
                          (i32.add
                           (tee_local $1
                            (i32.shl
                             (get_local $0)
                             (tee_local $0
                              (i32.and
                               (i32.shr_u
                                (i32.add
                                 (get_local $0)
                                 (i32.const 1048320)
                                )
                                (i32.const 16)
                               )
                               (i32.const 8)
                              )
                             )
                            )
                           )
                           (i32.const 520192)
                          )
                          (i32.const 16)
                         )
                         (i32.const 4)
                        )
                       )
                       (get_local $0)
                      )
                      (tee_local $1
                       (i32.and
                        (i32.shr_u
                         (i32.add
                          (tee_local $0
                           (i32.shl
                            (get_local $1)
                            (get_local $2)
                           )
                          )
                          (i32.const 245760)
                         )
                         (i32.const 16)
                        )
                        (i32.const 2)
                       )
                      )
                     )
                    )
                    (i32.shr_u
                     (i32.shl
                      (get_local $0)
                      (get_local $1)
                     )
                     (i32.const 15)
                    )
                   )
                  )
                  (i32.const 7)
                 )
                )
                (i32.const 1)
               )
               (i32.shl
                (get_local $0)
                (i32.const 1)
               )
              )
             )
             (i32.const 0)
            )
           )
           (set_local $2
            (i32.sub
             (i32.const 0)
             (get_local $4)
            )
           )
           (block $__rjto$1
            (block $__rjti$1
             (if
              (tee_local $0
               (i32.load
                (i32.add
                 (i32.shl
                  (get_local $16)
                  (i32.const 2)
                 )
                 (i32.const 51792)
                )
               )
              )
              (block
               (set_local $5
                (i32.sub
                 (i32.const 25)
                 (i32.shr_u
                  (get_local $16)
                  (i32.const 1)
                 )
                )
               )
               (set_local $1
                (i32.const 0)
               )
               (set_local $7
                (i32.shl
                 (get_local $4)
                 (if (result i32)
                  (i32.eq
                   (get_local $16)
                   (i32.const 31)
                  )
                  (i32.const 0)
                  (get_local $5)
                 )
                )
               )
               (set_local $5
                (i32.const 0)
               )
               (loop $while-in15
                (if
                 (i32.lt_u
                  (tee_local $13
                   (i32.sub
                    (i32.and
                     (i32.load offset=4
                      (get_local $0)
                     )
                     (i32.const -8)
                    )
                    (get_local $4)
                   )
                  )
                  (get_local $2)
                 )
                 (set_local $1
                  (if (result i32)
                   (get_local $13)
                   (block (result i32)
                    (set_local $2
                     (get_local $13)
                    )
                    (get_local $0)
                   )
                   (block
                    (set_local $2
                     (i32.const 0)
                    )
                    (set_local $1
                     (get_local $0)
                    )
                    (br $__rjti$1)
                   )
                  )
                 )
                )
                (if
                 (i32.eqz
                  (i32.or
                   (i32.eqz
                    (tee_local $13
                     (i32.load offset=20
                      (get_local $0)
                     )
                    )
                   )
                   (i32.eq
                    (get_local $13)
                    (tee_local $0
                     (i32.load
                      (i32.add
                       (i32.add
                        (get_local $0)
                        (i32.const 16)
                       )
                       (i32.shl
                        (i32.shr_u
                         (get_local $7)
                         (i32.const 31)
                        )
                        (i32.const 2)
                       )
                      )
                     )
                    )
                   )
                  )
                 )
                 (set_local $5
                  (get_local $13)
                 )
                )
                (set_local $7
                 (i32.shl
                  (get_local $7)
                  (i32.const 1)
                 )
                )
                (br_if $while-in15
                 (get_local $0)
                )
               )
               (set_local $0
                (get_local $1)
               )
              )
              (set_local $0
               (i32.const 0)
              )
             )
             (br_if $__rjti$1
              (tee_local $1
               (if (result i32)
                (i32.or
                 (get_local $5)
                 (get_local $0)
                )
                (get_local $5)
                (block (result i32)
                 (drop
                  (br_if $do-once
                   (get_local $4)
                   (i32.eqz
                    (tee_local $0
                     (i32.and
                      (i32.or
                       (tee_local $0
                        (i32.shl
                         (i32.const 2)
                         (get_local $16)
                        )
                       )
                       (i32.sub
                        (i32.const 0)
                        (get_local $0)
                       )
                      )
                      (get_local $6)
                     )
                    )
                   )
                  )
                 )
                 (set_local $1
                  (i32.and
                   (i32.shr_u
                    (tee_local $5
                     (i32.add
                      (i32.and
                       (get_local $0)
                       (i32.sub
                        (i32.const 0)
                        (get_local $0)
                       )
                      )
                      (i32.const -1)
                     )
                    )
                    (i32.const 12)
                   )
                   (i32.const 16)
                  )
                 )
                 (set_local $0
                  (i32.const 0)
                 )
                 (i32.load
                  (i32.add
                   (i32.shl
                    (i32.add
                     (i32.or
                      (i32.or
                       (i32.or
                        (i32.or
                         (tee_local $7
                          (i32.and
                           (i32.shr_u
                            (tee_local $5
                             (i32.shr_u
                              (get_local $5)
                              (get_local $1)
                             )
                            )
                            (i32.const 5)
                           )
                           (i32.const 8)
                          )
                         )
                         (get_local $1)
                        )
                        (tee_local $5
                         (i32.and
                          (i32.shr_u
                           (tee_local $1
                            (i32.shr_u
                             (get_local $5)
                             (get_local $7)
                            )
                           )
                           (i32.const 2)
                          )
                          (i32.const 4)
                         )
                        )
                       )
                       (tee_local $5
                        (i32.and
                         (i32.shr_u
                          (tee_local $1
                           (i32.shr_u
                            (get_local $1)
                            (get_local $5)
                           )
                          )
                          (i32.const 1)
                         )
                         (i32.const 2)
                        )
                       )
                      )
                      (tee_local $5
                       (i32.and
                        (i32.shr_u
                         (tee_local $1
                          (i32.shr_u
                           (get_local $1)
                           (get_local $5)
                          )
                         )
                         (i32.const 1)
                        )
                        (i32.const 1)
                       )
                      )
                     )
                     (i32.shr_u
                      (get_local $1)
                      (get_local $5)
                     )
                    )
                    (i32.const 2)
                   )
                   (i32.const 51792)
                  )
                 )
                )
               )
              )
             )
             (set_local $5
              (get_local $0)
             )
             (br $__rjto$1)
            )
            (set_local $7
             (get_local $0)
            )
            (set_local $0
             (get_local $1)
            )
            (loop $while-in17
             (set_local $1
              (i32.load offset=4
               (get_local $0)
              )
             )
             (if
              (i32.eqz
               (tee_local $5
                (i32.load offset=16
                 (get_local $0)
                )
               )
              )
              (set_local $5
               (i32.load offset=20
                (get_local $0)
               )
              )
             )
             (if
              (i32.eqz
               (tee_local $13
                (i32.lt_u
                 (tee_local $1
                  (i32.sub
                   (i32.and
                    (get_local $1)
                    (i32.const -8)
                   )
                   (get_local $4)
                  )
                 )
                 (get_local $2)
                )
               )
              )
              (set_local $1
               (get_local $2)
              )
             )
             (if
              (i32.eqz
               (get_local $13)
              )
              (set_local $0
               (get_local $7)
              )
             )
             (set_local $2
              (if (result i32)
               (get_local $5)
               (block
                (set_local $7
                 (get_local $0)
                )
                (set_local $2
                 (get_local $1)
                )
                (set_local $0
                 (get_local $5)
                )
                (br $while-in17)
               )
               (block (result i32)
                (set_local $5
                 (get_local $0)
                )
                (get_local $1)
               )
              )
             )
            )
           )
           (if (result i32)
            (get_local $5)
            (if (result i32)
             (i32.lt_u
              (get_local $2)
              (i32.sub
               (i32.load
                (i32.const 51496)
               )
               (get_local $4)
              )
             )
             (block
              (if
               (i32.gt_u
                (tee_local $17
                 (i32.load
                  (i32.const 51504)
                 )
                )
                (get_local $5)
               )
               (call $_abort)
              )
              (if
               (i32.le_u
                (tee_local $8
                 (i32.add
                  (get_local $5)
                  (get_local $4)
                 )
                )
                (get_local $5)
               )
               (call $_abort)
              )
              (set_local $12
               (i32.load offset=24
                (get_local $5)
               )
              )
              (block $do-once18
               (if
                (i32.eq
                 (tee_local $0
                  (i32.load offset=12
                   (get_local $5)
                  )
                 )
                 (get_local $5)
                )
                (block
                 (if
                  (i32.eqz
                   (tee_local $0
                    (i32.load
                     (tee_local $1
                      (i32.add
                       (get_local $5)
                       (i32.const 20)
                      )
                     )
                    )
                   )
                  )
                  (br_if $do-once18
                   (i32.eqz
                    (tee_local $0
                     (i32.load
                      (tee_local $1
                       (i32.add
                        (get_local $5)
                        (i32.const 16)
                       )
                      )
                     )
                    )
                   )
                  )
                 )
                 (loop $while-in21
                  (block $while-out20
                   (if
                    (i32.eqz
                     (tee_local $10
                      (i32.load
                       (tee_local $7
                        (i32.add
                         (get_local $0)
                         (i32.const 20)
                        )
                       )
                      )
                     )
                    )
                    (br_if $while-out20
                     (i32.eqz
                      (tee_local $10
                       (i32.load
                        (tee_local $7
                         (i32.add
                          (get_local $0)
                          (i32.const 16)
                         )
                        )
                       )
                      )
                     )
                    )
                   )
                   (set_local $1
                    (get_local $7)
                   )
                   (set_local $0
                    (get_local $10)
                   )
                   (br $while-in21)
                  )
                 )
                 (if
                  (i32.gt_u
                   (get_local $17)
                   (get_local $1)
                  )
                  (call $_abort)
                  (block
                   (i32.store
                    (get_local $1)
                    (i32.const 0)
                   )
                   (set_local $9
                    (get_local $0)
                   )
                  )
                 )
                )
                (block
                 (if
                  (i32.gt_u
                   (get_local $17)
                   (tee_local $1
                    (i32.load offset=8
                     (get_local $5)
                    )
                   )
                  )
                  (call $_abort)
                 )
                 (if
                  (i32.ne
                   (i32.load
                    (tee_local $7
                     (i32.add
                      (get_local $1)
                      (i32.const 12)
                     )
                    )
                   )
                   (get_local $5)
                  )
                  (call $_abort)
                 )
                 (if
                  (i32.eq
                   (i32.load
                    (tee_local $10
                     (i32.add
                      (get_local $0)
                      (i32.const 8)
                     )
                    )
                   )
                   (get_local $5)
                  )
                  (block
                   (i32.store
                    (get_local $7)
                    (get_local $0)
                   )
                   (i32.store
                    (get_local $10)
                    (get_local $1)
                   )
                   (set_local $9
                    (get_local $0)
                   )
                  )
                  (call $_abort)
                 )
                )
               )
              )
              (block $label$break$L176
               (if
                (get_local $12)
                (block
                 (if
                  (i32.eq
                   (get_local $5)
                   (i32.load
                    (tee_local $1
                     (i32.add
                      (i32.shl
                       (tee_local $0
                        (i32.load offset=28
                         (get_local $5)
                        )
                       )
                       (i32.const 2)
                      )
                      (i32.const 51792)
                     )
                    )
                   )
                  )
                  (block
                   (i32.store
                    (get_local $1)
                    (get_local $9)
                   )
                   (if
                    (i32.eqz
                     (get_local $9)
                    )
                    (block
                     (i32.store
                      (i32.const 51492)
                      (tee_local $3
                       (i32.and
                        (get_local $6)
                        (i32.xor
                         (i32.shl
                          (i32.const 1)
                          (get_local $0)
                         )
                         (i32.const -1)
                        )
                       )
                      )
                     )
                     (br $label$break$L176)
                    )
                   )
                  )
                  (if
                   (i32.gt_u
                    (i32.load
                     (i32.const 51504)
                    )
                    (get_local $12)
                   )
                   (call $_abort)
                   (block
                    (set_local $0
                     (i32.add
                      (get_local $12)
                      (i32.const 20)
                     )
                    )
                    (i32.store
                     (if (result i32)
                      (i32.eq
                       (i32.load
                        (tee_local $1
                         (i32.add
                          (get_local $12)
                          (i32.const 16)
                         )
                        )
                       )
                       (get_local $5)
                      )
                      (get_local $1)
                      (get_local $0)
                     )
                     (get_local $9)
                    )
                    (if
                     (i32.eqz
                      (get_local $9)
                     )
                     (block
                      (set_local $3
                       (get_local $6)
                      )
                      (br $label$break$L176)
                     )
                    )
                   )
                  )
                 )
                 (if
                  (i32.gt_u
                   (tee_local $1
                    (i32.load
                     (i32.const 51504)
                    )
                   )
                   (get_local $9)
                  )
                  (call $_abort)
                 )
                 (i32.store offset=24
                  (get_local $9)
                  (get_local $12)
                 )
                 (if
                  (tee_local $0
                   (i32.load offset=16
                    (get_local $5)
                   )
                  )
                  (if
                   (i32.gt_u
                    (get_local $1)
                    (get_local $0)
                   )
                   (call $_abort)
                   (block
                    (i32.store offset=16
                     (get_local $9)
                     (get_local $0)
                    )
                    (i32.store offset=24
                     (get_local $0)
                     (get_local $9)
                    )
                   )
                  )
                 )
                 (if
                  (tee_local $0
                   (i32.load offset=20
                    (get_local $5)
                   )
                  )
                  (if
                   (i32.gt_u
                    (i32.load
                     (i32.const 51504)
                    )
                    (get_local $0)
                   )
                   (call $_abort)
                   (block
                    (i32.store offset=20
                     (get_local $9)
                     (get_local $0)
                    )
                    (i32.store offset=24
                     (get_local $0)
                     (get_local $9)
                    )
                    (set_local $3
                     (get_local $6)
                    )
                   )
                  )
                  (set_local $3
                   (get_local $6)
                  )
                 )
                )
                (set_local $3
                 (get_local $6)
                )
               )
              )
              (block $label$break$L200
               (if
                (i32.lt_u
                 (get_local $2)
                 (i32.const 16)
                )
                (block
                 (i32.store offset=4
                  (get_local $5)
                  (i32.or
                   (tee_local $0
                    (i32.add
                     (get_local $2)
                     (get_local $4)
                    )
                   )
                   (i32.const 3)
                  )
                 )
                 (i32.store
                  (tee_local $0
                   (i32.add
                    (i32.add
                     (get_local $5)
                     (get_local $0)
                    )
                    (i32.const 4)
                   )
                  )
                  (i32.or
                   (i32.load
                    (get_local $0)
                   )
                   (i32.const 1)
                  )
                 )
                )
                (block
                 (i32.store offset=4
                  (get_local $5)
                  (i32.or
                   (get_local $4)
                   (i32.const 3)
                  )
                 )
                 (i32.store offset=4
                  (get_local $8)
                  (i32.or
                   (get_local $2)
                   (i32.const 1)
                  )
                 )
                 (i32.store
                  (i32.add
                   (get_local $8)
                   (get_local $2)
                  )
                  (get_local $2)
                 )
                 (set_local $1
                  (i32.shr_u
                   (get_local $2)
                   (i32.const 3)
                  )
                 )
                 (if
                  (i32.lt_u
                   (get_local $2)
                   (i32.const 256)
                  )
                  (block
                   (set_local $0
                    (i32.add
                     (i32.shl
                      (get_local $1)
                      (i32.const 3)
                     )
                     (i32.const 51528)
                    )
                   )
                   (if
                    (i32.and
                     (tee_local $3
                      (i32.load
                       (i32.const 51488)
                      )
                     )
                     (tee_local $1
                      (i32.shl
                       (i32.const 1)
                       (get_local $1)
                      )
                     )
                    )
                    (if
                     (i32.gt_u
                      (i32.load
                       (i32.const 51504)
                      )
                      (tee_local $1
                       (i32.load
                        (tee_local $3
                         (i32.add
                          (get_local $0)
                          (i32.const 8)
                         )
                        )
                       )
                      )
                     )
                     (call $_abort)
                     (block
                      (set_local $15
                       (get_local $1)
                      )
                      (set_local $19
                       (get_local $3)
                      )
                     )
                    )
                    (block
                     (i32.store
                      (i32.const 51488)
                      (i32.or
                       (get_local $3)
                       (get_local $1)
                      )
                     )
                     (set_local $15
                      (get_local $0)
                     )
                     (set_local $19
                      (i32.add
                       (get_local $0)
                       (i32.const 8)
                      )
                     )
                    )
                   )
                   (i32.store
                    (get_local $19)
                    (get_local $8)
                   )
                   (i32.store offset=12
                    (get_local $15)
                    (get_local $8)
                   )
                   (i32.store offset=8
                    (get_local $8)
                    (get_local $15)
                   )
                   (i32.store offset=12
                    (get_local $8)
                    (get_local $0)
                   )
                   (br $label$break$L200)
                  )
                 )
                 (set_local $0
                  (i32.add
                   (i32.shl
                    (tee_local $1
                     (if (result i32)
                      (tee_local $0
                       (i32.shr_u
                        (get_local $2)
                        (i32.const 8)
                       )
                      )
                      (if (result i32)
                       (i32.gt_u
                        (get_local $2)
                        (i32.const 16777215)
                       )
                       (i32.const 31)
                       (i32.or
                        (i32.and
                         (i32.shr_u
                          (get_local $2)
                          (i32.add
                           (tee_local $0
                            (i32.add
                             (i32.sub
                              (i32.const 14)
                              (i32.or
                               (i32.or
                                (tee_local $4
                                 (i32.and
                                  (i32.shr_u
                                   (i32.add
                                    (tee_local $1
                                     (i32.shl
                                      (get_local $0)
                                      (tee_local $0
                                       (i32.and
                                        (i32.shr_u
                                         (i32.add
                                          (get_local $0)
                                          (i32.const 1048320)
                                         )
                                         (i32.const 16)
                                        )
                                        (i32.const 8)
                                       )
                                      )
                                     )
                                    )
                                    (i32.const 520192)
                                   )
                                   (i32.const 16)
                                  )
                                  (i32.const 4)
                                 )
                                )
                                (get_local $0)
                               )
                               (tee_local $1
                                (i32.and
                                 (i32.shr_u
                                  (i32.add
                                   (tee_local $0
                                    (i32.shl
                                     (get_local $1)
                                     (get_local $4)
                                    )
                                   )
                                   (i32.const 245760)
                                  )
                                  (i32.const 16)
                                 )
                                 (i32.const 2)
                                )
                               )
                              )
                             )
                             (i32.shr_u
                              (i32.shl
                               (get_local $0)
                               (get_local $1)
                              )
                              (i32.const 15)
                             )
                            )
                           )
                           (i32.const 7)
                          )
                         )
                         (i32.const 1)
                        )
                        (i32.shl
                         (get_local $0)
                         (i32.const 1)
                        )
                       )
                      )
                      (i32.const 0)
                     )
                    )
                    (i32.const 2)
                   )
                   (i32.const 51792)
                  )
                 )
                 (i32.store offset=28
                  (get_local $8)
                  (get_local $1)
                 )
                 (i32.store offset=4
                  (tee_local $4
                   (i32.add
                    (get_local $8)
                    (i32.const 16)
                   )
                  )
                  (i32.const 0)
                 )
                 (i32.store
                  (get_local $4)
                  (i32.const 0)
                 )
                 (if
                  (i32.eqz
                   (i32.and
                    (get_local $3)
                    (tee_local $4
                     (i32.shl
                      (i32.const 1)
                      (get_local $1)
                     )
                    )
                   )
                  )
                  (block
                   (i32.store
                    (i32.const 51492)
                    (i32.or
                     (get_local $3)
                     (get_local $4)
                    )
                   )
                   (i32.store
                    (get_local $0)
                    (get_local $8)
                   )
                   (i32.store offset=24
                    (get_local $8)
                    (get_local $0)
                   )
                   (i32.store offset=12
                    (get_local $8)
                    (get_local $8)
                   )
                   (i32.store offset=8
                    (get_local $8)
                    (get_local $8)
                   )
                   (br $label$break$L200)
                  )
                 )
                 (block $label$break$L218
                  (if
                   (i32.eq
                    (i32.and
                     (i32.load offset=4
                      (tee_local $0
                       (i32.load
                        (get_local $0)
                       )
                      )
                     )
                     (i32.const -8)
                    )
                    (get_local $2)
                   )
                   (set_local $11
                    (get_local $0)
                   )
                   (block
                    (set_local $3
                     (i32.sub
                      (i32.const 25)
                      (i32.shr_u
                       (get_local $1)
                       (i32.const 1)
                      )
                     )
                    )
                    (set_local $1
                     (i32.shl
                      (get_local $2)
                      (if (result i32)
                       (i32.eq
                        (get_local $1)
                        (i32.const 31)
                       )
                       (i32.const 0)
                       (get_local $3)
                      )
                     )
                    )
                    (loop $while-in30
                     (if
                      (tee_local $3
                       (i32.load
                        (tee_local $4
                         (i32.add
                          (i32.add
                           (get_local $0)
                           (i32.const 16)
                          )
                          (i32.shl
                           (i32.shr_u
                            (get_local $1)
                            (i32.const 31)
                           )
                           (i32.const 2)
                          )
                         )
                        )
                       )
                      )
                      (block
                       (set_local $1
                        (i32.shl
                         (get_local $1)
                         (i32.const 1)
                        )
                       )
                       (if
                        (i32.eq
                         (i32.and
                          (i32.load offset=4
                           (get_local $3)
                          )
                          (i32.const -8)
                         )
                         (get_local $2)
                        )
                        (block
                         (set_local $11
                          (get_local $3)
                         )
                         (br $label$break$L218)
                        )
                        (block
                         (set_local $0
                          (get_local $3)
                         )
                         (br $while-in30)
                        )
                       )
                      )
                     )
                    )
                    (if
                     (i32.gt_u
                      (i32.load
                       (i32.const 51504)
                      )
                      (get_local $4)
                     )
                     (call $_abort)
                     (block
                      (i32.store
                       (get_local $4)
                       (get_local $8)
                      )
                      (i32.store offset=24
                       (get_local $8)
                       (get_local $0)
                      )
                      (i32.store offset=12
                       (get_local $8)
                       (get_local $8)
                      )
                      (i32.store offset=8
                       (get_local $8)
                       (get_local $8)
                      )
                      (br $label$break$L200)
                     )
                    )
                   )
                  )
                 )
                 (if
                  (i32.and
                   (i32.le_u
                    (tee_local $3
                     (i32.load
                      (i32.const 51504)
                     )
                    )
                    (tee_local $0
                     (i32.load
                      (tee_local $1
                       (i32.add
                        (get_local $11)
                        (i32.const 8)
                       )
                      )
                     )
                    )
                   )
                   (i32.le_u
                    (get_local $3)
                    (get_local $11)
                   )
                  )
                  (block
                   (i32.store offset=12
                    (get_local $0)
                    (get_local $8)
                   )
                   (i32.store
                    (get_local $1)
                    (get_local $8)
                   )
                   (i32.store offset=8
                    (get_local $8)
                    (get_local $0)
                   )
                   (i32.store offset=12
                    (get_local $8)
                    (get_local $11)
                   )
                   (i32.store offset=24
                    (get_local $8)
                    (i32.const 0)
                   )
                  )
                  (call $_abort)
                 )
                )
               )
              )
              (set_global $STACKTOP
               (get_local $14)
              )
              (return
               (i32.add
                (get_local $5)
                (i32.const 8)
               )
              )
             )
             (get_local $4)
            )
            (get_local $4)
           )
          )
          (get_local $4)
         )
        )
       )
      )
     )
    )
    (if
     (i32.ge_u
      (tee_local $1
       (i32.load
        (i32.const 51496)
       )
      )
      (get_local $3)
     )
     (block
      (set_local $0
       (i32.load
        (i32.const 51508)
       )
      )
      (if
       (i32.gt_u
        (tee_local $2
         (i32.sub
          (get_local $1)
          (get_local $3)
         )
        )
        (i32.const 15)
       )
       (block
        (i32.store
         (i32.const 51508)
         (tee_local $4
          (i32.add
           (get_local $0)
           (get_local $3)
          )
         )
        )
        (i32.store
         (i32.const 51496)
         (get_local $2)
        )
        (i32.store offset=4
         (get_local $4)
         (i32.or
          (get_local $2)
          (i32.const 1)
         )
        )
        (i32.store
         (i32.add
          (get_local $0)
          (get_local $1)
         )
         (get_local $2)
        )
        (i32.store offset=4
         (get_local $0)
         (i32.or
          (get_local $3)
          (i32.const 3)
         )
        )
       )
       (block
        (i32.store
         (i32.const 51496)
         (i32.const 0)
        )
        (i32.store
         (i32.const 51508)
         (i32.const 0)
        )
        (i32.store offset=4
         (get_local $0)
         (i32.or
          (get_local $1)
          (i32.const 3)
         )
        )
        (i32.store
         (tee_local $3
          (i32.add
           (i32.add
            (get_local $0)
            (get_local $1)
           )
           (i32.const 4)
          )
         )
         (i32.or
          (i32.load
           (get_local $3)
          )
          (i32.const 1)
         )
        )
       )
      )
      (br $folding-inner1)
     )
    )
    (if
     (i32.gt_u
      (tee_local $1
       (i32.load
        (i32.const 51500)
       )
      )
      (get_local $3)
     )
     (block
      (i32.store
       (i32.const 51500)
       (tee_local $1
        (i32.sub
         (get_local $1)
         (get_local $3)
        )
       )
      )
      (br $folding-inner0)
     )
    )
    (if
     (i32.le_u
      (tee_local $4
       (i32.and
        (tee_local $5
         (i32.add
          (tee_local $0
           (if (result i32)
            (i32.load
             (i32.const 51960)
            )
            (i32.load
             (i32.const 51968)
            )
            (block (result i32)
             (i32.store
              (i32.const 51968)
              (i32.const 4096)
             )
             (i32.store
              (i32.const 51964)
              (i32.const 4096)
             )
             (i32.store
              (i32.const 51972)
              (i32.const -1)
             )
             (i32.store
              (i32.const 51976)
              (i32.const -1)
             )
             (i32.store
              (i32.const 51980)
              (i32.const 0)
             )
             (i32.store
              (i32.const 51932)
              (i32.const 0)
             )
             (i32.store
              (i32.const 51960)
              (i32.xor
               (i32.and
                (get_local $14)
                (i32.const -16)
               )
               (i32.const 1431655768)
              )
             )
             (i32.const 4096)
            )
           )
          )
          (tee_local $6
           (i32.add
            (get_local $3)
            (i32.const 47)
           )
          )
         )
        )
        (tee_local $7
         (i32.sub
          (i32.const 0)
          (get_local $0)
         )
        )
       )
      )
      (get_local $3)
     )
     (block
      (set_global $STACKTOP
       (get_local $14)
      )
      (return
       (i32.const 0)
      )
     )
    )
    (if
     (tee_local $0
      (i32.load
       (i32.const 51928)
      )
     )
     (if
      (i32.or
       (i32.le_u
        (tee_local $9
         (i32.add
          (tee_local $2
           (i32.load
            (i32.const 51920)
           )
          )
          (get_local $4)
         )
        )
        (get_local $2)
       )
       (i32.gt_u
        (get_local $9)
        (get_local $0)
       )
      )
      (block
       (set_global $STACKTOP
        (get_local $14)
       )
       (return
        (i32.const 0)
       )
      )
     )
    )
    (set_local $9
     (i32.add
      (get_local $3)
      (i32.const 48)
     )
    )
    (block $__rjto$7
     (block $__rjti$7
      (if
       (i32.and
        (i32.load
         (i32.const 51932)
        )
        (i32.const 4)
       )
       (set_local $1
        (i32.const 0)
       )
       (block
        (block $do-once37
         (block $__rjti$3
          (block $__rjti$2
           (br_if $__rjti$2
            (i32.eqz
             (tee_local $0
              (i32.load
               (i32.const 51512)
              )
             )
            )
           )
           (set_local $2
            (i32.const 51936)
           )
           (loop $while-in34
            (block $while-out33
             (if
              (i32.le_u
               (tee_local $11
                (i32.load
                 (get_local $2)
                )
               )
               (get_local $0)
              )
              (br_if $while-out33
               (i32.gt_u
                (i32.add
                 (get_local $11)
                 (i32.load
                  (tee_local $11
                   (i32.add
                    (get_local $2)
                    (i32.const 4)
                   )
                  )
                 )
                )
                (get_local $0)
               )
              )
             )
             (br_if $while-in34
              (tee_local $2
               (i32.load offset=8
                (get_local $2)
               )
              )
             )
             (br $__rjti$2)
            )
           )
           (if
            (i32.lt_u
             (tee_local $1
              (i32.and
               (i32.sub
                (get_local $5)
                (get_local $1)
               )
               (get_local $7)
              )
             )
             (i32.const 2147483647)
            )
            (if
             (i32.eq
              (tee_local $0
               (call $_sbrk
                (get_local $1)
               )
              )
              (i32.add
               (i32.load
                (get_local $2)
               )
               (i32.load
                (get_local $11)
               )
              )
             )
             (br_if $__rjti$7
              (i32.ne
               (get_local $0)
               (i32.const -1)
              )
             )
             (br $__rjti$3)
            )
            (set_local $1
             (i32.const 0)
            )
           )
           (br $do-once37)
          )
          (set_local $1
           (if (result i32)
            (i32.eq
             (tee_local $0
              (call $_sbrk
               (i32.const 0)
              )
             )
             (i32.const -1)
            )
            (i32.const 0)
            (block (result i32)
             (set_local $1
              (i32.sub
               (i32.and
                (i32.add
                 (tee_local $2
                  (i32.add
                   (tee_local $1
                    (i32.load
                     (i32.const 51964)
                    )
                   )
                   (i32.const -1)
                  )
                 )
                 (get_local $0)
                )
                (i32.sub
                 (i32.const 0)
                 (get_local $1)
                )
               )
               (get_local $0)
              )
             )
             (set_local $2
              (i32.add
               (tee_local $1
                (i32.add
                 (if (result i32)
                  (i32.and
                   (get_local $2)
                   (get_local $0)
                  )
                  (get_local $1)
                  (i32.const 0)
                 )
                 (get_local $4)
                )
               )
               (tee_local $5
                (i32.load
                 (i32.const 51920)
                )
               )
              )
             )
             (if (result i32)
              (i32.and
               (i32.gt_u
                (get_local $1)
                (get_local $3)
               )
               (i32.lt_u
                (get_local $1)
                (i32.const 2147483647)
               )
              )
              (block
               (if
                (tee_local $7
                 (i32.load
                  (i32.const 51928)
                 )
                )
                (if
                 (i32.or
                  (i32.le_u
                   (get_local $2)
                   (get_local $5)
                  )
                  (i32.gt_u
                   (get_local $2)
                   (get_local $7)
                  )
                 )
                 (block
                  (set_local $1
                   (i32.const 0)
                  )
                  (br $do-once37)
                 )
                )
               )
               (br_if $__rjti$7
                (i32.eq
                 (tee_local $2
                  (call $_sbrk
                   (get_local $1)
                  )
                 )
                 (get_local $0)
                )
               )
               (set_local $0
                (get_local $2)
               )
               (br $__rjti$3)
              )
              (i32.const 0)
             )
            )
           )
          )
          (br $do-once37)
         )
         (if
          (i32.eqz
           (i32.and
            (i32.gt_u
             (get_local $9)
             (get_local $1)
            )
            (i32.and
             (i32.lt_u
              (get_local $1)
              (i32.const 2147483647)
             )
             (i32.ne
              (get_local $0)
              (i32.const -1)
             )
            )
           )
          )
          (if
           (i32.eq
            (get_local $0)
            (i32.const -1)
           )
           (block
            (set_local $1
             (i32.const 0)
            )
            (br $do-once37)
           )
           (br $__rjti$7)
          )
         )
         (br_if $__rjti$7
          (i32.ge_u
           (tee_local $2
            (i32.and
             (i32.add
              (i32.sub
               (get_local $6)
               (get_local $1)
              )
              (tee_local $2
               (i32.load
                (i32.const 51968)
               )
              )
             )
             (i32.sub
              (i32.const 0)
              (get_local $2)
             )
            )
           )
           (i32.const 2147483647)
          )
         )
         (set_local $6
          (i32.sub
           (i32.const 0)
           (get_local $1)
          )
         )
         (set_local $1
          (if (result i32)
           (i32.eq
            (call $_sbrk
             (get_local $2)
            )
            (i32.const -1)
           )
           (block (result i32)
            (drop
             (call $_sbrk
              (get_local $6)
             )
            )
            (i32.const 0)
           )
           (block
            (set_local $1
             (i32.add
              (get_local $2)
              (get_local $1)
             )
            )
            (br $__rjti$7)
           )
          )
         )
        )
        (i32.store
         (i32.const 51932)
         (i32.or
          (i32.load
           (i32.const 51932)
          )
          (i32.const 4)
         )
        )
       )
      )
      (if
       (i32.lt_u
        (get_local $4)
        (i32.const 2147483647)
       )
       (block
        (set_local $0
         (call $_sbrk
          (get_local $4)
         )
        )
        (set_local $2
         (call $_sbrk
          (i32.const 0)
         )
        )
        (set_local $4
         (i32.and
          (i32.lt_u
           (get_local $0)
           (get_local $2)
          )
          (i32.and
           (i32.ne
            (get_local $0)
            (i32.const -1)
           )
           (i32.ne
            (get_local $2)
            (i32.const -1)
           )
          )
         )
        )
        (if
         (tee_local $6
          (i32.gt_u
           (tee_local $2
            (i32.sub
             (get_local $2)
             (get_local $0)
            )
           )
           (i32.add
            (get_local $3)
            (i32.const 40)
           )
          )
         )
         (set_local $1
          (get_local $2)
         )
        )
        (br_if $__rjti$7
         (i32.eqz
          (i32.or
           (i32.or
            (i32.eq
             (get_local $0)
             (i32.const -1)
            )
            (i32.xor
             (get_local $6)
             (i32.const 1)
            )
           )
           (i32.xor
            (get_local $4)
            (i32.const 1)
           )
          )
         )
        )
       )
      )
      (br $__rjto$7)
     )
     (i32.store
      (i32.const 51920)
      (tee_local $2
       (i32.add
        (i32.load
         (i32.const 51920)
        )
        (get_local $1)
       )
      )
     )
     (if
      (i32.gt_u
       (get_local $2)
       (i32.load
        (i32.const 51924)
       )
      )
      (i32.store
       (i32.const 51924)
       (get_local $2)
      )
     )
     (block $label$break$L294
      (if
       (tee_local $6
        (i32.load
         (i32.const 51512)
        )
       )
       (block
        (set_local $2
         (i32.const 51936)
        )
        (block $__rjto$4
         (block $__rjti$4
          (loop $while-in41
           (block $while-out40
            (br_if $__rjti$4
             (i32.eq
              (get_local $0)
              (i32.add
               (tee_local $4
                (i32.load
                 (get_local $2)
                )
               )
               (tee_local $7
                (i32.load
                 (tee_local $5
                  (i32.add
                   (get_local $2)
                   (i32.const 4)
                  )
                 )
                )
               )
              )
             )
            )
            (br_if $while-in41
             (tee_local $2
              (i32.load offset=8
               (get_local $2)
              )
             )
            )
           )
          )
          (br $__rjto$4)
         )
         (if
          (i32.eqz
           (i32.and
            (i32.load offset=12
             (get_local $2)
            )
            (i32.const 8)
           )
          )
          (if
           (i32.and
            (i32.gt_u
             (get_local $0)
             (get_local $6)
            )
            (i32.le_u
             (get_local $4)
             (get_local $6)
            )
           )
           (block
            (i32.store
             (get_local $5)
             (i32.add
              (get_local $7)
              (get_local $1)
             )
            )
            (set_local $1
             (i32.add
              (i32.load
               (i32.const 51500)
              )
              (get_local $1)
             )
            )
            (set_local $0
             (i32.and
              (i32.sub
               (i32.const 0)
               (tee_local $2
                (i32.add
                 (get_local $6)
                 (i32.const 8)
                )
               )
              )
              (i32.const 7)
             )
            )
            (i32.store
             (i32.const 51512)
             (tee_local $2
              (i32.add
               (get_local $6)
               (if (result i32)
                (i32.and
                 (get_local $2)
                 (i32.const 7)
                )
                (get_local $0)
                (tee_local $0
                 (i32.const 0)
                )
               )
              )
             )
            )
            (i32.store
             (i32.const 51500)
             (tee_local $0
              (i32.sub
               (get_local $1)
               (get_local $0)
              )
             )
            )
            (i32.store offset=4
             (get_local $2)
             (i32.or
              (get_local $0)
              (i32.const 1)
             )
            )
            (i32.store offset=4
             (i32.add
              (get_local $6)
              (get_local $1)
             )
             (i32.const 40)
            )
            (i32.store
             (i32.const 51516)
             (i32.load
              (i32.const 51976)
             )
            )
            (br $label$break$L294)
           )
          )
         )
        )
        (if
         (i32.lt_u
          (get_local $0)
          (tee_local $2
           (i32.load
            (i32.const 51504)
           )
          )
         )
         (block
          (i32.store
           (i32.const 51504)
           (get_local $0)
          )
          (set_local $2
           (get_local $0)
          )
         )
        )
        (set_local $5
         (i32.add
          (get_local $0)
          (get_local $1)
         )
        )
        (set_local $4
         (i32.const 51936)
        )
        (block $__rjto$5
         (block $__rjti$5
          (loop $while-in43
           (block $while-out42
            (br_if $__rjti$5
             (i32.eq
              (i32.load
               (get_local $4)
              )
              (get_local $5)
             )
            )
            (br_if $while-in43
             (tee_local $4
              (i32.load offset=8
               (get_local $4)
              )
             )
            )
           )
          )
          (br $__rjto$5)
         )
         (if
          (i32.eqz
           (i32.and
            (i32.load offset=12
             (get_local $4)
            )
            (i32.const 8)
           )
          )
          (block
           (i32.store
            (get_local $4)
            (get_local $0)
           )
           (i32.store
            (tee_local $4
             (i32.add
              (get_local $4)
              (i32.const 4)
             )
            )
            (i32.add
             (i32.load
              (get_local $4)
             )
             (get_local $1)
            )
           )
           (set_local $4
            (i32.and
             (i32.sub
              (i32.const 0)
              (tee_local $1
               (i32.add
                (get_local $0)
                (i32.const 8)
               )
              )
             )
             (i32.const 7)
            )
           )
           (set_local $12
            (i32.and
             (i32.sub
              (i32.const 0)
              (tee_local $9
               (i32.add
                (get_local $5)
                (i32.const 8)
               )
              )
             )
             (i32.const 7)
            )
           )
           (set_local $7
            (i32.add
             (tee_local $11
              (i32.add
               (get_local $0)
               (if (result i32)
                (i32.and
                 (get_local $1)
                 (i32.const 7)
                )
                (get_local $4)
                (i32.const 0)
               )
              )
             )
             (get_local $3)
            )
           )
           (set_local $4
            (i32.sub
             (i32.sub
              (tee_local $1
               (i32.add
                (get_local $5)
                (if (result i32)
                 (i32.and
                  (get_local $9)
                  (i32.const 7)
                 )
                 (get_local $12)
                 (i32.const 0)
                )
               )
              )
              (get_local $11)
             )
             (get_local $3)
            )
           )
           (i32.store offset=4
            (get_local $11)
            (i32.or
             (get_local $3)
             (i32.const 3)
            )
           )
           (block $label$break$L317
            (if
             (i32.eq
              (get_local $6)
              (get_local $1)
             )
             (block
              (i32.store
               (i32.const 51500)
               (tee_local $0
                (i32.add
                 (i32.load
                  (i32.const 51500)
                 )
                 (get_local $4)
                )
               )
              )
              (i32.store
               (i32.const 51512)
               (get_local $7)
              )
              (i32.store offset=4
               (get_local $7)
               (i32.or
                (get_local $0)
                (i32.const 1)
               )
              )
             )
             (block
              (if
               (i32.eq
                (i32.load
                 (i32.const 51508)
                )
                (get_local $1)
               )
               (block
                (i32.store
                 (i32.const 51496)
                 (tee_local $0
                  (i32.add
                   (i32.load
                    (i32.const 51496)
                   )
                   (get_local $4)
                  )
                 )
                )
                (i32.store
                 (i32.const 51508)
                 (get_local $7)
                )
                (i32.store offset=4
                 (get_local $7)
                 (i32.or
                  (get_local $0)
                  (i32.const 1)
                 )
                )
                (i32.store
                 (i32.add
                  (get_local $7)
                  (get_local $0)
                 )
                 (get_local $0)
                )
                (br $label$break$L317)
               )
              )
              (set_local $2
               (if (result i32)
                (i32.eq
                 (i32.and
                  (tee_local $0
                   (i32.load offset=4
                    (get_local $1)
                   )
                  )
                  (i32.const 3)
                 )
                 (i32.const 1)
                )
                (block (result i32)
                 (set_local $12
                  (i32.and
                   (get_local $0)
                   (i32.const -8)
                  )
                 )
                 (set_local $5
                  (i32.shr_u
                   (get_local $0)
                   (i32.const 3)
                  )
                 )
                 (block $label$break$L325
                  (if
                   (i32.lt_u
                    (get_local $0)
                    (i32.const 256)
                   )
                   (block
                    (set_local $3
                     (i32.load offset=12
                      (get_local $1)
                     )
                    )
                    (block $do-once46
                     (if
                      (i32.ne
                       (tee_local $6
                        (i32.load offset=8
                         (get_local $1)
                        )
                       )
                       (tee_local $0
                        (i32.add
                         (i32.shl
                          (get_local $5)
                          (i32.const 3)
                         )
                         (i32.const 51528)
                        )
                       )
                      )
                      (block
                       (if
                        (i32.gt_u
                         (get_local $2)
                         (get_local $6)
                        )
                        (call $_abort)
                       )
                       (br_if $do-once46
                        (i32.eq
                         (i32.load offset=12
                          (get_local $6)
                         )
                         (get_local $1)
                        )
                       )
                       (call $_abort)
                      )
                     )
                    )
                    (if
                     (i32.eq
                      (get_local $3)
                      (get_local $6)
                     )
                     (block
                      (i32.store
                       (i32.const 51488)
                       (i32.and
                        (i32.load
                         (i32.const 51488)
                        )
                        (i32.xor
                         (i32.shl
                          (i32.const 1)
                          (get_local $5)
                         )
                         (i32.const -1)
                        )
                       )
                      )
                      (br $label$break$L325)
                     )
                    )
                    (block $do-once48
                     (if
                      (i32.eq
                       (get_local $3)
                       (get_local $0)
                      )
                      (set_local $20
                       (i32.add
                        (get_local $3)
                        (i32.const 8)
                       )
                      )
                      (block
                       (if
                        (i32.gt_u
                         (get_local $2)
                         (get_local $3)
                        )
                        (call $_abort)
                       )
                       (if
                        (i32.eq
                         (i32.load
                          (tee_local $0
                           (i32.add
                            (get_local $3)
                            (i32.const 8)
                           )
                          )
                         )
                         (get_local $1)
                        )
                        (block
                         (set_local $20
                          (get_local $0)
                         )
                         (br $do-once48)
                        )
                       )
                       (call $_abort)
                      )
                     )
                    )
                    (i32.store offset=12
                     (get_local $6)
                     (get_local $3)
                    )
                    (i32.store
                     (get_local $20)
                     (get_local $6)
                    )
                   )
                   (block
                    (set_local $9
                     (i32.load offset=24
                      (get_local $1)
                     )
                    )
                    (block $do-once50
                     (if
                      (i32.eq
                       (tee_local $0
                        (i32.load offset=12
                         (get_local $1)
                        )
                       )
                       (get_local $1)
                      )
                      (block
                       (if
                        (tee_local $0
                         (i32.load
                          (tee_local $6
                           (i32.add
                            (tee_local $3
                             (i32.add
                              (get_local $1)
                              (i32.const 16)
                             )
                            )
                            (i32.const 4)
                           )
                          )
                         )
                        )
                        (set_local $3
                         (get_local $6)
                        )
                        (br_if $do-once50
                         (i32.eqz
                          (tee_local $0
                           (i32.load
                            (get_local $3)
                           )
                          )
                         )
                        )
                       )
                       (loop $while-in53
                        (block $while-out52
                         (if
                          (i32.eqz
                           (tee_local $5
                            (i32.load
                             (tee_local $6
                              (i32.add
                               (get_local $0)
                               (i32.const 20)
                              )
                             )
                            )
                           )
                          )
                          (br_if $while-out52
                           (i32.eqz
                            (tee_local $5
                             (i32.load
                              (tee_local $6
                               (i32.add
                                (get_local $0)
                                (i32.const 16)
                               )
                              )
                             )
                            )
                           )
                          )
                         )
                         (set_local $3
                          (get_local $6)
                         )
                         (set_local $0
                          (get_local $5)
                         )
                         (br $while-in53)
                        )
                       )
                       (if
                        (i32.gt_u
                         (get_local $2)
                         (get_local $3)
                        )
                        (call $_abort)
                        (block
                         (i32.store
                          (get_local $3)
                          (i32.const 0)
                         )
                         (set_local $10
                          (get_local $0)
                         )
                        )
                       )
                      )
                      (block
                       (if
                        (i32.gt_u
                         (get_local $2)
                         (tee_local $3
                          (i32.load offset=8
                           (get_local $1)
                          )
                         )
                        )
                        (call $_abort)
                       )
                       (if
                        (i32.ne
                         (i32.load
                          (tee_local $2
                           (i32.add
                            (get_local $3)
                            (i32.const 12)
                           )
                          )
                         )
                         (get_local $1)
                        )
                        (call $_abort)
                       )
                       (if
                        (i32.eq
                         (i32.load
                          (tee_local $6
                           (i32.add
                            (get_local $0)
                            (i32.const 8)
                           )
                          )
                         )
                         (get_local $1)
                        )
                        (block
                         (i32.store
                          (get_local $2)
                          (get_local $0)
                         )
                         (i32.store
                          (get_local $6)
                          (get_local $3)
                         )
                         (set_local $10
                          (get_local $0)
                         )
                        )
                        (call $_abort)
                       )
                      )
                     )
                    )
                    (br_if $label$break$L325
                     (i32.eqz
                      (get_local $9)
                     )
                    )
                    (block $do-once54
                     (if
                      (i32.eq
                       (i32.load
                        (tee_local $3
                         (i32.add
                          (i32.shl
                           (tee_local $0
                            (i32.load offset=28
                             (get_local $1)
                            )
                           )
                           (i32.const 2)
                          )
                          (i32.const 51792)
                         )
                        )
                       )
                       (get_local $1)
                      )
                      (block
                       (i32.store
                        (get_local $3)
                        (get_local $10)
                       )
                       (br_if $do-once54
                        (get_local $10)
                       )
                       (i32.store
                        (i32.const 51492)
                        (i32.and
                         (i32.load
                          (i32.const 51492)
                         )
                         (i32.xor
                          (i32.shl
                           (i32.const 1)
                           (get_local $0)
                          )
                          (i32.const -1)
                         )
                        )
                       )
                       (br $label$break$L325)
                      )
                      (if
                       (i32.gt_u
                        (i32.load
                         (i32.const 51504)
                        )
                        (get_local $9)
                       )
                       (call $_abort)
                       (block
                        (set_local $0
                         (i32.add
                          (get_local $9)
                          (i32.const 20)
                         )
                        )
                        (i32.store
                         (if (result i32)
                          (i32.eq
                           (i32.load
                            (tee_local $3
                             (i32.add
                              (get_local $9)
                              (i32.const 16)
                             )
                            )
                           )
                           (get_local $1)
                          )
                          (get_local $3)
                          (get_local $0)
                         )
                         (get_local $10)
                        )
                        (br_if $label$break$L325
                         (i32.eqz
                          (get_local $10)
                         )
                        )
                       )
                      )
                     )
                    )
                    (if
                     (i32.gt_u
                      (tee_local $3
                       (i32.load
                        (i32.const 51504)
                       )
                      )
                      (get_local $10)
                     )
                     (call $_abort)
                    )
                    (i32.store offset=24
                     (get_local $10)
                     (get_local $9)
                    )
                    (if
                     (tee_local $0
                      (i32.load
                       (tee_local $2
                        (i32.add
                         (get_local $1)
                         (i32.const 16)
                        )
                       )
                      )
                     )
                     (if
                      (i32.gt_u
                       (get_local $3)
                       (get_local $0)
                      )
                      (call $_abort)
                      (block
                       (i32.store offset=16
                        (get_local $10)
                        (get_local $0)
                       )
                       (i32.store offset=24
                        (get_local $0)
                        (get_local $10)
                       )
                      )
                     )
                    )
                    (br_if $label$break$L325
                     (i32.eqz
                      (tee_local $0
                       (i32.load offset=4
                        (get_local $2)
                       )
                      )
                     )
                    )
                    (if
                     (i32.gt_u
                      (i32.load
                       (i32.const 51504)
                      )
                      (get_local $0)
                     )
                     (call $_abort)
                     (block
                      (i32.store offset=20
                       (get_local $10)
                       (get_local $0)
                      )
                      (i32.store offset=24
                       (get_local $0)
                       (get_local $10)
                      )
                     )
                    )
                   )
                  )
                 )
                 (set_local $1
                  (i32.add
                   (get_local $1)
                   (get_local $12)
                  )
                 )
                 (i32.add
                  (get_local $12)
                  (get_local $4)
                 )
                )
                (get_local $4)
               )
              )
              (i32.store
               (tee_local $0
                (i32.add
                 (get_local $1)
                 (i32.const 4)
                )
               )
               (i32.and
                (i32.load
                 (get_local $0)
                )
                (i32.const -2)
               )
              )
              (i32.store offset=4
               (get_local $7)
               (i32.or
                (get_local $2)
                (i32.const 1)
               )
              )
              (i32.store
               (i32.add
                (get_local $7)
                (get_local $2)
               )
               (get_local $2)
              )
              (set_local $3
               (i32.shr_u
                (get_local $2)
                (i32.const 3)
               )
              )
              (if
               (i32.lt_u
                (get_local $2)
                (i32.const 256)
               )
               (block
                (set_local $0
                 (i32.add
                  (i32.shl
                   (get_local $3)
                   (i32.const 3)
                  )
                  (i32.const 51528)
                 )
                )
                (block $do-once58
                 (if
                  (i32.and
                   (tee_local $1
                    (i32.load
                     (i32.const 51488)
                    )
                   )
                   (tee_local $3
                    (i32.shl
                     (i32.const 1)
                     (get_local $3)
                    )
                   )
                  )
                  (block
                   (if
                    (i32.le_u
                     (i32.load
                      (i32.const 51504)
                     )
                     (tee_local $1
                      (i32.load
                       (tee_local $3
                        (i32.add
                         (get_local $0)
                         (i32.const 8)
                        )
                       )
                      )
                     )
                    )
                    (block
                     (set_local $17
                      (get_local $1)
                     )
                     (set_local $21
                      (get_local $3)
                     )
                     (br $do-once58)
                    )
                   )
                   (call $_abort)
                  )
                  (block
                   (i32.store
                    (i32.const 51488)
                    (i32.or
                     (get_local $1)
                     (get_local $3)
                    )
                   )
                   (set_local $17
                    (get_local $0)
                   )
                   (set_local $21
                    (i32.add
                     (get_local $0)
                     (i32.const 8)
                    )
                   )
                  )
                 )
                )
                (i32.store
                 (get_local $21)
                 (get_local $7)
                )
                (i32.store offset=12
                 (get_local $17)
                 (get_local $7)
                )
                (i32.store offset=8
                 (get_local $7)
                 (get_local $17)
                )
                (i32.store offset=12
                 (get_local $7)
                 (get_local $0)
                )
                (br $label$break$L317)
               )
              )
              (set_local $0
               (i32.add
                (i32.shl
                 (tee_local $3
                  (block $do-once60 (result i32)
                   (if (result i32)
                    (tee_local $0
                     (i32.shr_u
                      (get_local $2)
                      (i32.const 8)
                     )
                    )
                    (block (result i32)
                     (drop
                      (br_if $do-once60
                       (i32.const 31)
                       (i32.gt_u
                        (get_local $2)
                        (i32.const 16777215)
                       )
                      )
                     )
                     (i32.or
                      (i32.and
                       (i32.shr_u
                        (get_local $2)
                        (i32.add
                         (tee_local $0
                          (i32.add
                           (i32.sub
                            (i32.const 14)
                            (i32.or
                             (i32.or
                              (tee_local $1
                               (i32.and
                                (i32.shr_u
                                 (i32.add
                                  (tee_local $3
                                   (i32.shl
                                    (get_local $0)
                                    (tee_local $0
                                     (i32.and
                                      (i32.shr_u
                                       (i32.add
                                        (get_local $0)
                                        (i32.const 1048320)
                                       )
                                       (i32.const 16)
                                      )
                                      (i32.const 8)
                                     )
                                    )
                                   )
                                  )
                                  (i32.const 520192)
                                 )
                                 (i32.const 16)
                                )
                                (i32.const 4)
                               )
                              )
                              (get_local $0)
                             )
                             (tee_local $3
                              (i32.and
                               (i32.shr_u
                                (i32.add
                                 (tee_local $0
                                  (i32.shl
                                   (get_local $3)
                                   (get_local $1)
                                  )
                                 )
                                 (i32.const 245760)
                                )
                                (i32.const 16)
                               )
                               (i32.const 2)
                              )
                             )
                            )
                           )
                           (i32.shr_u
                            (i32.shl
                             (get_local $0)
                             (get_local $3)
                            )
                            (i32.const 15)
                           )
                          )
                         )
                         (i32.const 7)
                        )
                       )
                       (i32.const 1)
                      )
                      (i32.shl
                       (get_local $0)
                       (i32.const 1)
                      )
                     )
                    )
                    (i32.const 0)
                   )
                  )
                 )
                 (i32.const 2)
                )
                (i32.const 51792)
               )
              )
              (i32.store offset=28
               (get_local $7)
               (get_local $3)
              )
              (i32.store offset=4
               (tee_local $1
                (i32.add
                 (get_local $7)
                 (i32.const 16)
                )
               )
               (i32.const 0)
              )
              (i32.store
               (get_local $1)
               (i32.const 0)
              )
              (if
               (i32.eqz
                (i32.and
                 (tee_local $1
                  (i32.load
                   (i32.const 51492)
                  )
                 )
                 (tee_local $4
                  (i32.shl
                   (i32.const 1)
                   (get_local $3)
                  )
                 )
                )
               )
               (block
                (i32.store
                 (i32.const 51492)
                 (i32.or
                  (get_local $1)
                  (get_local $4)
                 )
                )
                (i32.store
                 (get_local $0)
                 (get_local $7)
                )
                (i32.store offset=24
                 (get_local $7)
                 (get_local $0)
                )
                (i32.store offset=12
                 (get_local $7)
                 (get_local $7)
                )
                (i32.store offset=8
                 (get_local $7)
                 (get_local $7)
                )
                (br $label$break$L317)
               )
              )
              (block $label$break$L410
               (if
                (i32.eq
                 (i32.and
                  (i32.load offset=4
                   (tee_local $0
                    (i32.load
                     (get_local $0)
                    )
                   )
                  )
                  (i32.const -8)
                 )
                 (get_local $2)
                )
                (set_local $8
                 (get_local $0)
                )
                (block
                 (set_local $1
                  (i32.sub
                   (i32.const 25)
                   (i32.shr_u
                    (get_local $3)
                    (i32.const 1)
                   )
                  )
                 )
                 (set_local $1
                  (i32.shl
                   (get_local $2)
                   (if (result i32)
                    (i32.eq
                     (get_local $3)
                     (i32.const 31)
                    )
                    (i32.const 0)
                    (get_local $1)
                   )
                  )
                 )
                 (loop $while-in64
                  (if
                   (tee_local $3
                    (i32.load
                     (tee_local $4
                      (i32.add
                       (i32.add
                        (get_local $0)
                        (i32.const 16)
                       )
                       (i32.shl
                        (i32.shr_u
                         (get_local $1)
                         (i32.const 31)
                        )
                        (i32.const 2)
                       )
                      )
                     )
                    )
                   )
                   (block
                    (set_local $1
                     (i32.shl
                      (get_local $1)
                      (i32.const 1)
                     )
                    )
                    (if
                     (i32.eq
                      (i32.and
                       (i32.load offset=4
                        (get_local $3)
                       )
                       (i32.const -8)
                      )
                      (get_local $2)
                     )
                     (block
                      (set_local $8
                       (get_local $3)
                      )
                      (br $label$break$L410)
                     )
                     (block
                      (set_local $0
                       (get_local $3)
                      )
                      (br $while-in64)
                     )
                    )
                   )
                  )
                 )
                 (if
                  (i32.gt_u
                   (i32.load
                    (i32.const 51504)
                   )
                   (get_local $4)
                  )
                  (call $_abort)
                  (block
                   (i32.store
                    (get_local $4)
                    (get_local $7)
                   )
                   (i32.store offset=24
                    (get_local $7)
                    (get_local $0)
                   )
                   (i32.store offset=12
                    (get_local $7)
                    (get_local $7)
                   )
                   (i32.store offset=8
                    (get_local $7)
                    (get_local $7)
                   )
                   (br $label$break$L317)
                  )
                 )
                )
               )
              )
              (if
               (i32.and
                (i32.le_u
                 (tee_local $3
                  (i32.load
                   (i32.const 51504)
                  )
                 )
                 (tee_local $0
                  (i32.load
                   (tee_local $1
                    (i32.add
                     (get_local $8)
                     (i32.const 8)
                    )
                   )
                  )
                 )
                )
                (i32.le_u
                 (get_local $3)
                 (get_local $8)
                )
               )
               (block
                (i32.store offset=12
                 (get_local $0)
                 (get_local $7)
                )
                (i32.store
                 (get_local $1)
                 (get_local $7)
                )
                (i32.store offset=8
                 (get_local $7)
                 (get_local $0)
                )
                (i32.store offset=12
                 (get_local $7)
                 (get_local $8)
                )
                (i32.store offset=24
                 (get_local $7)
                 (i32.const 0)
                )
               )
               (call $_abort)
              )
             )
            )
           )
           (set_global $STACKTOP
            (get_local $14)
           )
           (return
            (i32.add
             (get_local $11)
             (i32.const 8)
            )
           )
          )
         )
        )
        (set_local $2
         (i32.const 51936)
        )
        (loop $while-in66
         (block $while-out65
          (if
           (i32.le_u
            (tee_local $4
             (i32.load
              (get_local $2)
             )
            )
            (get_local $6)
           )
           (br_if $while-out65
            (i32.gt_u
             (tee_local $9
              (i32.add
               (get_local $4)
               (i32.load offset=4
                (get_local $2)
               )
              )
             )
             (get_local $6)
            )
           )
          )
          (set_local $2
           (i32.load offset=8
            (get_local $2)
           )
          )
          (br $while-in66)
         )
        )
        (set_local $5
         (i32.and
          (i32.sub
           (i32.const 0)
           (tee_local $4
            (i32.add
             (tee_local $2
              (i32.add
               (get_local $9)
               (i32.const -47)
              )
             )
             (i32.const 8)
            )
           )
          )
          (i32.const 7)
         )
        )
        (set_local $7
         (i32.add
          (if (result i32)
           (i32.lt_u
            (tee_local $2
             (i32.add
              (get_local $2)
              (if (result i32)
               (i32.and
                (get_local $4)
                (i32.const 7)
               )
               (get_local $5)
               (i32.const 0)
              )
             )
            )
            (tee_local $11
             (i32.add
              (get_local $6)
              (i32.const 16)
             )
            )
           )
           (tee_local $2
            (get_local $6)
           )
           (get_local $2)
          )
          (i32.const 8)
         )
        )
        (set_local $4
         (i32.add
          (get_local $2)
          (i32.const 24)
         )
        )
        (set_local $10
         (i32.add
          (get_local $1)
          (i32.const -40)
         )
        )
        (set_local $5
         (i32.and
          (i32.sub
           (i32.const 0)
           (tee_local $8
            (i32.add
             (get_local $0)
             (i32.const 8)
            )
           )
          )
          (i32.const 7)
         )
        )
        (i32.store
         (i32.const 51512)
         (tee_local $8
          (i32.add
           (get_local $0)
           (if (result i32)
            (i32.and
             (get_local $8)
             (i32.const 7)
            )
            (get_local $5)
            (tee_local $5
             (i32.const 0)
            )
           )
          )
         )
        )
        (i32.store
         (i32.const 51500)
         (tee_local $5
          (i32.sub
           (get_local $10)
           (get_local $5)
          )
         )
        )
        (i32.store offset=4
         (get_local $8)
         (i32.or
          (get_local $5)
          (i32.const 1)
         )
        )
        (i32.store offset=4
         (i32.add
          (get_local $0)
          (get_local $10)
         )
         (i32.const 40)
        )
        (i32.store
         (i32.const 51516)
         (i32.load
          (i32.const 51976)
         )
        )
        (i32.store
         (tee_local $5
          (i32.add
           (get_local $2)
           (i32.const 4)
          )
         )
         (i32.const 27)
        )
        (i64.store align=4
         (get_local $7)
         (i64.load align=4
          (i32.const 51936)
         )
        )
        (i64.store offset=8 align=4
         (get_local $7)
         (i64.load align=4
          (i32.const 51944)
         )
        )
        (i32.store
         (i32.const 51936)
         (get_local $0)
        )
        (i32.store
         (i32.const 51940)
         (get_local $1)
        )
        (i32.store
         (i32.const 51948)
         (i32.const 0)
        )
        (i32.store
         (i32.const 51944)
         (get_local $7)
        )
        (set_local $0
         (get_local $4)
        )
        (loop $while-in68
         (i32.store
          (tee_local $1
           (i32.add
            (get_local $0)
            (i32.const 4)
           )
          )
          (i32.const 7)
         )
         (if
          (i32.lt_u
           (i32.add
            (get_local $0)
            (i32.const 8)
           )
           (get_local $9)
          )
          (block
           (set_local $0
            (get_local $1)
           )
           (br $while-in68)
          )
         )
        )
        (if
         (i32.ne
          (get_local $2)
          (get_local $6)
         )
         (block
          (i32.store
           (get_local $5)
           (i32.and
            (i32.load
             (get_local $5)
            )
            (i32.const -2)
           )
          )
          (i32.store offset=4
           (get_local $6)
           (i32.or
            (tee_local $4
             (i32.sub
              (get_local $2)
              (get_local $6)
             )
            )
            (i32.const 1)
           )
          )
          (i32.store
           (get_local $2)
           (get_local $4)
          )
          (set_local $1
           (i32.shr_u
            (get_local $4)
            (i32.const 3)
           )
          )
          (if
           (i32.lt_u
            (get_local $4)
            (i32.const 256)
           )
           (block
            (set_local $0
             (i32.add
              (i32.shl
               (get_local $1)
               (i32.const 3)
              )
              (i32.const 51528)
             )
            )
            (if
             (i32.and
              (tee_local $2
               (i32.load
                (i32.const 51488)
               )
              )
              (tee_local $1
               (i32.shl
                (i32.const 1)
                (get_local $1)
               )
              )
             )
             (if
              (i32.gt_u
               (i32.load
                (i32.const 51504)
               )
               (tee_local $2
                (i32.load
                 (tee_local $1
                  (i32.add
                   (get_local $0)
                   (i32.const 8)
                  )
                 )
                )
               )
              )
              (call $_abort)
              (block
               (set_local $18
                (get_local $2)
               )
               (set_local $22
                (get_local $1)
               )
              )
             )
             (block
              (i32.store
               (i32.const 51488)
               (i32.or
                (get_local $2)
                (get_local $1)
               )
              )
              (set_local $18
               (get_local $0)
              )
              (set_local $22
               (i32.add
                (get_local $0)
                (i32.const 8)
               )
              )
             )
            )
            (i32.store
             (get_local $22)
             (get_local $6)
            )
            (i32.store offset=12
             (get_local $18)
             (get_local $6)
            )
            (i32.store offset=8
             (get_local $6)
             (get_local $18)
            )
            (i32.store offset=12
             (get_local $6)
             (get_local $0)
            )
            (br $label$break$L294)
           )
          )
          (set_local $0
           (i32.add
            (i32.shl
             (tee_local $1
              (if (result i32)
               (tee_local $0
                (i32.shr_u
                 (get_local $4)
                 (i32.const 8)
                )
               )
               (if (result i32)
                (i32.gt_u
                 (get_local $4)
                 (i32.const 16777215)
                )
                (i32.const 31)
                (i32.or
                 (i32.and
                  (i32.shr_u
                   (get_local $4)
                   (i32.add
                    (tee_local $0
                     (i32.add
                      (i32.sub
                       (i32.const 14)
                       (i32.or
                        (i32.or
                         (tee_local $2
                          (i32.and
                           (i32.shr_u
                            (i32.add
                             (tee_local $1
                              (i32.shl
                               (get_local $0)
                               (tee_local $0
                                (i32.and
                                 (i32.shr_u
                                  (i32.add
                                   (get_local $0)
                                   (i32.const 1048320)
                                  )
                                  (i32.const 16)
                                 )
                                 (i32.const 8)
                                )
                               )
                              )
                             )
                             (i32.const 520192)
                            )
                            (i32.const 16)
                           )
                           (i32.const 4)
                          )
                         )
                         (get_local $0)
                        )
                        (tee_local $1
                         (i32.and
                          (i32.shr_u
                           (i32.add
                            (tee_local $0
                             (i32.shl
                              (get_local $1)
                              (get_local $2)
                             )
                            )
                            (i32.const 245760)
                           )
                           (i32.const 16)
                          )
                          (i32.const 2)
                         )
                        )
                       )
                      )
                      (i32.shr_u
                       (i32.shl
                        (get_local $0)
                        (get_local $1)
                       )
                       (i32.const 15)
                      )
                     )
                    )
                    (i32.const 7)
                   )
                  )
                  (i32.const 1)
                 )
                 (i32.shl
                  (get_local $0)
                  (i32.const 1)
                 )
                )
               )
               (i32.const 0)
              )
             )
             (i32.const 2)
            )
            (i32.const 51792)
           )
          )
          (i32.store offset=28
           (get_local $6)
           (get_local $1)
          )
          (i32.store offset=20
           (get_local $6)
           (i32.const 0)
          )
          (i32.store
           (get_local $11)
           (i32.const 0)
          )
          (if
           (i32.eqz
            (i32.and
             (tee_local $2
              (i32.load
               (i32.const 51492)
              )
             )
             (tee_local $5
              (i32.shl
               (i32.const 1)
               (get_local $1)
              )
             )
            )
           )
           (block
            (i32.store
             (i32.const 51492)
             (i32.or
              (get_local $2)
              (get_local $5)
             )
            )
            (i32.store
             (get_local $0)
             (get_local $6)
            )
            (i32.store offset=24
             (get_local $6)
             (get_local $0)
            )
            (i32.store offset=12
             (get_local $6)
             (get_local $6)
            )
            (i32.store offset=8
             (get_local $6)
             (get_local $6)
            )
            (br $label$break$L294)
           )
          )
          (block $label$break$L451
           (if
            (i32.eq
             (i32.and
              (i32.load offset=4
               (tee_local $0
                (i32.load
                 (get_local $0)
                )
               )
              )
              (i32.const -8)
             )
             (get_local $4)
            )
            (set_local $12
             (get_local $0)
            )
            (block
             (set_local $2
              (i32.sub
               (i32.const 25)
               (i32.shr_u
                (get_local $1)
                (i32.const 1)
               )
              )
             )
             (set_local $2
              (i32.shl
               (get_local $4)
               (if (result i32)
                (i32.eq
                 (get_local $1)
                 (i32.const 31)
                )
                (i32.const 0)
                (get_local $2)
               )
              )
             )
             (loop $while-in71
              (if
               (tee_local $1
                (i32.load
                 (tee_local $5
                  (i32.add
                   (i32.add
                    (get_local $0)
                    (i32.const 16)
                   )
                   (i32.shl
                    (i32.shr_u
                     (get_local $2)
                     (i32.const 31)
                    )
                    (i32.const 2)
                   )
                  )
                 )
                )
               )
               (block
                (set_local $2
                 (i32.shl
                  (get_local $2)
                  (i32.const 1)
                 )
                )
                (if
                 (i32.eq
                  (i32.and
                   (i32.load offset=4
                    (get_local $1)
                   )
                   (i32.const -8)
                  )
                  (get_local $4)
                 )
                 (block
                  (set_local $12
                   (get_local $1)
                  )
                  (br $label$break$L451)
                 )
                 (block
                  (set_local $0
                   (get_local $1)
                  )
                  (br $while-in71)
                 )
                )
               )
              )
             )
             (if
              (i32.gt_u
               (i32.load
                (i32.const 51504)
               )
               (get_local $5)
              )
              (call $_abort)
              (block
               (i32.store
                (get_local $5)
                (get_local $6)
               )
               (i32.store offset=24
                (get_local $6)
                (get_local $0)
               )
               (i32.store offset=12
                (get_local $6)
                (get_local $6)
               )
               (i32.store offset=8
                (get_local $6)
                (get_local $6)
               )
               (br $label$break$L294)
              )
             )
            )
           )
          )
          (if
           (i32.and
            (i32.le_u
             (tee_local $1
              (i32.load
               (i32.const 51504)
              )
             )
             (tee_local $0
              (i32.load
               (tee_local $2
                (i32.add
                 (get_local $12)
                 (i32.const 8)
                )
               )
              )
             )
            )
            (i32.le_u
             (get_local $1)
             (get_local $12)
            )
           )
           (block
            (i32.store offset=12
             (get_local $0)
             (get_local $6)
            )
            (i32.store
             (get_local $2)
             (get_local $6)
            )
            (i32.store offset=8
             (get_local $6)
             (get_local $0)
            )
            (i32.store offset=12
             (get_local $6)
             (get_local $12)
            )
            (i32.store offset=24
             (get_local $6)
             (i32.const 0)
            )
           )
           (call $_abort)
          )
         )
        )
       )
       (block
        (if
         (i32.or
          (i32.eqz
           (tee_local $2
            (i32.load
             (i32.const 51504)
            )
           )
          )
          (i32.lt_u
           (get_local $0)
           (get_local $2)
          )
         )
         (i32.store
          (i32.const 51504)
          (get_local $0)
         )
        )
        (i32.store
         (i32.const 51936)
         (get_local $0)
        )
        (i32.store
         (i32.const 51940)
         (get_local $1)
        )
        (i32.store
         (i32.const 51948)
         (i32.const 0)
        )
        (i32.store
         (i32.const 51524)
         (i32.load
          (i32.const 51960)
         )
        )
        (i32.store
         (i32.const 51520)
         (i32.const -1)
        )
        (i32.store
         (i32.const 51540)
         (i32.const 51528)
        )
        (i32.store
         (i32.const 51536)
         (i32.const 51528)
        )
        (i32.store
         (i32.const 51548)
         (i32.const 51536)
        )
        (i32.store
         (i32.const 51544)
         (i32.const 51536)
        )
        (i32.store
         (i32.const 51556)
         (i32.const 51544)
        )
        (i32.store
         (i32.const 51552)
         (i32.const 51544)
        )
        (i32.store
         (i32.const 51564)
         (i32.const 51552)
        )
        (i32.store
         (i32.const 51560)
         (i32.const 51552)
        )
        (i32.store
         (i32.const 51572)
         (i32.const 51560)
        )
        (i32.store
         (i32.const 51568)
         (i32.const 51560)
        )
        (i32.store
         (i32.const 51580)
         (i32.const 51568)
        )
        (i32.store
         (i32.const 51576)
         (i32.const 51568)
        )
        (i32.store
         (i32.const 51588)
         (i32.const 51576)
        )
        (i32.store
         (i32.const 51584)
         (i32.const 51576)
        )
        (i32.store
         (i32.const 51596)
         (i32.const 51584)
        )
        (i32.store
         (i32.const 51592)
         (i32.const 51584)
        )
        (i32.store
         (i32.const 51604)
         (i32.const 51592)
        )
        (i32.store
         (i32.const 51600)
         (i32.const 51592)
        )
        (i32.store
         (i32.const 51612)
         (i32.const 51600)
        )
        (i32.store
         (i32.const 51608)
         (i32.const 51600)
        )
        (i32.store
         (i32.const 51620)
         (i32.const 51608)
        )
        (i32.store
         (i32.const 51616)
         (i32.const 51608)
        )
        (i32.store
         (i32.const 51628)
         (i32.const 51616)
        )
        (i32.store
         (i32.const 51624)
         (i32.const 51616)
        )
        (i32.store
         (i32.const 51636)
         (i32.const 51624)
        )
        (i32.store
         (i32.const 51632)
         (i32.const 51624)
        )
        (i32.store
         (i32.const 51644)
         (i32.const 51632)
        )
        (i32.store
         (i32.const 51640)
         (i32.const 51632)
        )
        (i32.store
         (i32.const 51652)
         (i32.const 51640)
        )
        (i32.store
         (i32.const 51648)
         (i32.const 51640)
        )
        (i32.store
         (i32.const 51660)
         (i32.const 51648)
        )
        (i32.store
         (i32.const 51656)
         (i32.const 51648)
        )
        (i32.store
         (i32.const 51668)
         (i32.const 51656)
        )
        (i32.store
         (i32.const 51664)
         (i32.const 51656)
        )
        (i32.store
         (i32.const 51676)
         (i32.const 51664)
        )
        (i32.store
         (i32.const 51672)
         (i32.const 51664)
        )
        (i32.store
         (i32.const 51684)
         (i32.const 51672)
        )
        (i32.store
         (i32.const 51680)
         (i32.const 51672)
        )
        (i32.store
         (i32.const 51692)
         (i32.const 51680)
        )
        (i32.store
         (i32.const 51688)
         (i32.const 51680)
        )
        (i32.store
         (i32.const 51700)
         (i32.const 51688)
        )
        (i32.store
         (i32.const 51696)
         (i32.const 51688)
        )
        (i32.store
         (i32.const 51708)
         (i32.const 51696)
        )
        (i32.store
         (i32.const 51704)
         (i32.const 51696)
        )
        (i32.store
         (i32.const 51716)
         (i32.const 51704)
        )
        (i32.store
         (i32.const 51712)
         (i32.const 51704)
        )
        (i32.store
         (i32.const 51724)
         (i32.const 51712)
        )
        (i32.store
         (i32.const 51720)
         (i32.const 51712)
        )
        (i32.store
         (i32.const 51732)
         (i32.const 51720)
        )
        (i32.store
         (i32.const 51728)
         (i32.const 51720)
        )
        (i32.store
         (i32.const 51740)
         (i32.const 51728)
        )
        (i32.store
         (i32.const 51736)
         (i32.const 51728)
        )
        (i32.store
         (i32.const 51748)
         (i32.const 51736)
        )
        (i32.store
         (i32.const 51744)
         (i32.const 51736)
        )
        (i32.store
         (i32.const 51756)
         (i32.const 51744)
        )
        (i32.store
         (i32.const 51752)
         (i32.const 51744)
        )
        (i32.store
         (i32.const 51764)
         (i32.const 51752)
        )
        (i32.store
         (i32.const 51760)
         (i32.const 51752)
        )
        (i32.store
         (i32.const 51772)
         (i32.const 51760)
        )
        (i32.store
         (i32.const 51768)
         (i32.const 51760)
        )
        (i32.store
         (i32.const 51780)
         (i32.const 51768)
        )
        (i32.store
         (i32.const 51776)
         (i32.const 51768)
        )
        (i32.store
         (i32.const 51788)
         (i32.const 51776)
        )
        (i32.store
         (i32.const 51784)
         (i32.const 51776)
        )
        (set_local $2
         (i32.add
          (get_local $1)
          (i32.const -40)
         )
        )
        (set_local $1
         (i32.and
          (i32.sub
           (i32.const 0)
           (tee_local $4
            (i32.add
             (get_local $0)
             (i32.const 8)
            )
           )
          )
          (i32.const 7)
         )
        )
        (i32.store
         (i32.const 51512)
         (tee_local $4
          (i32.add
           (get_local $0)
           (if (result i32)
            (i32.and
             (get_local $4)
             (i32.const 7)
            )
            (get_local $1)
            (tee_local $1
             (i32.const 0)
            )
           )
          )
         )
        )
        (i32.store
         (i32.const 51500)
         (tee_local $1
          (i32.sub
           (get_local $2)
           (get_local $1)
          )
         )
        )
        (i32.store offset=4
         (get_local $4)
         (i32.or
          (get_local $1)
          (i32.const 1)
         )
        )
        (i32.store offset=4
         (i32.add
          (get_local $0)
          (get_local $2)
         )
         (i32.const 40)
        )
        (i32.store
         (i32.const 51516)
         (i32.load
          (i32.const 51976)
         )
        )
       )
      )
     )
     (if
      (i32.gt_u
       (tee_local $0
        (i32.load
         (i32.const 51500)
        )
       )
       (get_local $3)
      )
      (block
       (i32.store
        (i32.const 51500)
        (tee_local $1
         (i32.sub
          (get_local $0)
          (get_local $3)
         )
        )
       )
       (br $folding-inner0)
      )
     )
    )
    (i32.store
     (i32.const 52048)
     (i32.const 12)
    )
    (set_global $STACKTOP
     (get_local $14)
    )
    (return
     (i32.const 0)
    )
   )
   (i32.store
    (i32.const 51512)
    (tee_local $2
     (i32.add
      (tee_local $0
       (i32.load
        (i32.const 51512)
       )
      )
      (get_local $3)
     )
    )
   )
   (i32.store offset=4
    (get_local $2)
    (i32.or
     (get_local $1)
     (i32.const 1)
    )
   )
   (i32.store offset=4
    (get_local $0)
    (i32.or
     (get_local $3)
     (i32.const 3)
    )
   )
  )
  (set_global $STACKTOP
   (get_local $14)
  )
  (i32.add
   (get_local $0)
   (i32.const 8)
  )
 )
 (func $_free (; 439 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (if
   (i32.eqz
    (get_local $0)
   )
   (return)
  )
  (if
   (i32.lt_u
    (tee_local $4
     (i32.add
      (get_local $0)
      (i32.const -8)
     )
    )
    (tee_local $12
     (i32.load
      (i32.const 51504)
     )
    )
   )
   (call $_abort)
  )
  (if
   (i32.eq
    (tee_local $11
     (i32.and
      (tee_local $0
       (i32.load
        (i32.add
         (get_local $0)
         (i32.const -4)
        )
       )
      )
      (i32.const 3)
     )
    )
    (i32.const 1)
   )
   (call $_abort)
  )
  (set_local $7
   (i32.add
    (get_local $4)
    (tee_local $2
     (i32.and
      (get_local $0)
      (i32.const -8)
     )
    )
   )
  )
  (block $label$break$L10
   (if
    (i32.and
     (get_local $0)
     (i32.const 1)
    )
    (block
     (set_local $1
      (get_local $2)
     )
     (set_local $5
      (tee_local $3
       (get_local $4)
      )
     )
    )
    (block
     (set_local $9
      (i32.load
       (get_local $4)
      )
     )
     (if
      (i32.eqz
       (get_local $11)
      )
      (return)
     )
     (if
      (i32.lt_u
       (tee_local $0
        (i32.sub
         (get_local $4)
         (get_local $9)
        )
       )
       (get_local $12)
      )
      (call $_abort)
     )
     (set_local $4
      (i32.add
       (get_local $9)
       (get_local $2)
      )
     )
     (if
      (i32.eq
       (i32.load
        (i32.const 51508)
       )
       (get_local $0)
      )
      (block
       (if
        (i32.ne
         (i32.and
          (tee_local $1
           (i32.load
            (tee_local $3
             (i32.add
              (get_local $7)
              (i32.const 4)
             )
            )
           )
          )
          (i32.const 3)
         )
         (i32.const 3)
        )
        (block
         (set_local $1
          (get_local $4)
         )
         (set_local $5
          (tee_local $3
           (get_local $0)
          )
         )
         (br $label$break$L10)
        )
       )
       (i32.store
        (i32.const 51496)
        (get_local $4)
       )
       (i32.store
        (get_local $3)
        (i32.and
         (get_local $1)
         (i32.const -2)
        )
       )
       (i32.store offset=4
        (get_local $0)
        (i32.or
         (get_local $4)
         (i32.const 1)
        )
       )
       (i32.store
        (i32.add
         (get_local $0)
         (get_local $4)
        )
        (get_local $4)
       )
       (return)
      )
     )
     (set_local $2
      (i32.shr_u
       (get_local $9)
       (i32.const 3)
      )
     )
     (if
      (i32.lt_u
       (get_local $9)
       (i32.const 256)
      )
      (block
       (set_local $1
        (i32.load offset=12
         (get_local $0)
        )
       )
       (if
        (i32.ne
         (tee_local $5
          (i32.load offset=8
           (get_local $0)
          )
         )
         (tee_local $3
          (i32.add
           (i32.shl
            (get_local $2)
            (i32.const 3)
           )
           (i32.const 51528)
          )
         )
        )
        (block
         (if
          (i32.gt_u
           (get_local $12)
           (get_local $5)
          )
          (call $_abort)
         )
         (if
          (i32.ne
           (i32.load offset=12
            (get_local $5)
           )
           (get_local $0)
          )
          (call $_abort)
         )
        )
       )
       (if
        (i32.eq
         (get_local $1)
         (get_local $5)
        )
        (block
         (i32.store
          (i32.const 51488)
          (i32.and
           (i32.load
            (i32.const 51488)
           )
           (i32.xor
            (i32.shl
             (i32.const 1)
             (get_local $2)
            )
            (i32.const -1)
           )
          )
         )
         (set_local $1
          (get_local $4)
         )
         (set_local $5
          (tee_local $3
           (get_local $0)
          )
         )
         (br $label$break$L10)
        )
       )
       (if
        (i32.eq
         (get_local $1)
         (get_local $3)
        )
        (set_local $6
         (i32.add
          (get_local $1)
          (i32.const 8)
         )
        )
        (block
         (if
          (i32.gt_u
           (get_local $12)
           (get_local $1)
          )
          (call $_abort)
         )
         (if
          (i32.eq
           (i32.load
            (tee_local $3
             (i32.add
              (get_local $1)
              (i32.const 8)
             )
            )
           )
           (get_local $0)
          )
          (set_local $6
           (get_local $3)
          )
          (call $_abort)
         )
        )
       )
       (i32.store offset=12
        (get_local $5)
        (get_local $1)
       )
       (i32.store
        (get_local $6)
        (get_local $5)
       )
       (set_local $1
        (get_local $4)
       )
       (set_local $5
        (tee_local $3
         (get_local $0)
        )
       )
       (br $label$break$L10)
      )
     )
     (set_local $13
      (i32.load offset=24
       (get_local $0)
      )
     )
     (block $do-once
      (if
       (i32.eq
        (tee_local $2
         (i32.load offset=12
          (get_local $0)
         )
        )
        (get_local $0)
       )
       (block
        (if
         (tee_local $2
          (i32.load
           (tee_local $9
            (i32.add
             (tee_local $6
              (i32.add
               (get_local $0)
               (i32.const 16)
              )
             )
             (i32.const 4)
            )
           )
          )
         )
         (set_local $6
          (get_local $9)
         )
         (br_if $do-once
          (i32.eqz
           (tee_local $2
            (i32.load
             (get_local $6)
            )
           )
          )
         )
        )
        (loop $while-in
         (block $while-out
          (if
           (i32.eqz
            (tee_local $11
             (i32.load
              (tee_local $9
               (i32.add
                (get_local $2)
                (i32.const 20)
               )
              )
             )
            )
           )
           (br_if $while-out
            (i32.eqz
             (tee_local $11
              (i32.load
               (tee_local $9
                (i32.add
                 (get_local $2)
                 (i32.const 16)
                )
               )
              )
             )
            )
           )
          )
          (set_local $6
           (get_local $9)
          )
          (set_local $2
           (get_local $11)
          )
          (br $while-in)
         )
        )
        (if
         (i32.gt_u
          (get_local $12)
          (get_local $6)
         )
         (call $_abort)
         (block
          (i32.store
           (get_local $6)
           (i32.const 0)
          )
          (set_local $8
           (get_local $2)
          )
         )
        )
       )
       (block
        (if
         (i32.gt_u
          (get_local $12)
          (tee_local $6
           (i32.load offset=8
            (get_local $0)
           )
          )
         )
         (call $_abort)
        )
        (if
         (i32.ne
          (i32.load
           (tee_local $9
            (i32.add
             (get_local $6)
             (i32.const 12)
            )
           )
          )
          (get_local $0)
         )
         (call $_abort)
        )
        (if
         (i32.eq
          (i32.load
           (tee_local $11
            (i32.add
             (get_local $2)
             (i32.const 8)
            )
           )
          )
          (get_local $0)
         )
         (block
          (i32.store
           (get_local $9)
           (get_local $2)
          )
          (i32.store
           (get_local $11)
           (get_local $6)
          )
          (set_local $8
           (get_local $2)
          )
         )
         (call $_abort)
        )
       )
      )
     )
     (if
      (get_local $13)
      (block
       (if
        (i32.eq
         (i32.load
          (tee_local $6
           (i32.add
            (i32.shl
             (tee_local $2
              (i32.load offset=28
               (get_local $0)
              )
             )
             (i32.const 2)
            )
            (i32.const 51792)
           )
          )
         )
         (get_local $0)
        )
        (block
         (i32.store
          (get_local $6)
          (get_local $8)
         )
         (if
          (i32.eqz
           (get_local $8)
          )
          (block
           (i32.store
            (i32.const 51492)
            (i32.and
             (i32.load
              (i32.const 51492)
             )
             (i32.xor
              (i32.shl
               (i32.const 1)
               (get_local $2)
              )
              (i32.const -1)
             )
            )
           )
           (set_local $1
            (get_local $4)
           )
           (set_local $5
            (tee_local $3
             (get_local $0)
            )
           )
           (br $label$break$L10)
          )
         )
        )
        (if
         (i32.gt_u
          (i32.load
           (i32.const 51504)
          )
          (get_local $13)
         )
         (call $_abort)
         (block
          (set_local $2
           (i32.add
            (get_local $13)
            (i32.const 20)
           )
          )
          (i32.store
           (if (result i32)
            (i32.eq
             (i32.load
              (tee_local $6
               (i32.add
                (get_local $13)
                (i32.const 16)
               )
              )
             )
             (get_local $0)
            )
            (get_local $6)
            (get_local $2)
           )
           (get_local $8)
          )
          (if
           (i32.eqz
            (get_local $8)
           )
           (block
            (set_local $1
             (get_local $4)
            )
            (set_local $5
             (tee_local $3
              (get_local $0)
             )
            )
            (br $label$break$L10)
           )
          )
         )
        )
       )
       (if
        (i32.gt_u
         (tee_local $6
          (i32.load
           (i32.const 51504)
          )
         )
         (get_local $8)
        )
        (call $_abort)
       )
       (i32.store offset=24
        (get_local $8)
        (get_local $13)
       )
       (if
        (tee_local $2
         (i32.load
          (tee_local $9
           (i32.add
            (get_local $0)
            (i32.const 16)
           )
          )
         )
        )
        (if
         (i32.gt_u
          (get_local $6)
          (get_local $2)
         )
         (call $_abort)
         (block
          (i32.store offset=16
           (get_local $8)
           (get_local $2)
          )
          (i32.store offset=24
           (get_local $2)
           (get_local $8)
          )
         )
        )
       )
       (if
        (tee_local $2
         (i32.load offset=4
          (get_local $9)
         )
        )
        (if
         (i32.gt_u
          (i32.load
           (i32.const 51504)
          )
          (get_local $2)
         )
         (call $_abort)
         (block
          (i32.store offset=20
           (get_local $8)
           (get_local $2)
          )
          (i32.store offset=24
           (get_local $2)
           (get_local $8)
          )
          (set_local $1
           (get_local $4)
          )
          (set_local $5
           (tee_local $3
            (get_local $0)
           )
          )
         )
        )
        (block
         (set_local $1
          (get_local $4)
         )
         (set_local $5
          (tee_local $3
           (get_local $0)
          )
         )
        )
       )
      )
      (block
       (set_local $1
        (get_local $4)
       )
       (set_local $5
        (tee_local $3
         (get_local $0)
        )
       )
      )
     )
    )
   )
  )
  (if
   (i32.ge_u
    (get_local $5)
    (get_local $7)
   )
   (call $_abort)
  )
  (if
   (i32.eqz
    (i32.and
     (tee_local $0
      (i32.load
       (tee_local $4
        (i32.add
         (get_local $7)
         (i32.const 4)
        )
       )
      )
     )
     (i32.const 1)
    )
   )
   (call $_abort)
  )
  (set_local $1
   (i32.shr_u
    (tee_local $5
     (if (result i32)
      (i32.and
       (get_local $0)
       (i32.const 2)
      )
      (block (result i32)
       (i32.store
        (get_local $4)
        (i32.and
         (get_local $0)
         (i32.const -2)
        )
       )
       (i32.store offset=4
        (get_local $3)
        (i32.or
         (get_local $1)
         (i32.const 1)
        )
       )
       (i32.store
        (i32.add
         (get_local $5)
         (get_local $1)
        )
        (get_local $1)
       )
       (get_local $1)
      )
      (block (result i32)
       (if
        (i32.eq
         (i32.load
          (i32.const 51512)
         )
         (get_local $7)
        )
        (block
         (i32.store
          (i32.const 51500)
          (tee_local $0
           (i32.add
            (i32.load
             (i32.const 51500)
            )
            (get_local $1)
           )
          )
         )
         (i32.store
          (i32.const 51512)
          (get_local $3)
         )
         (i32.store offset=4
          (get_local $3)
          (i32.or
           (get_local $0)
           (i32.const 1)
          )
         )
         (if
          (i32.ne
           (get_local $3)
           (i32.load
            (i32.const 51508)
           )
          )
          (return)
         )
         (i32.store
          (i32.const 51508)
          (i32.const 0)
         )
         (i32.store
          (i32.const 51496)
          (i32.const 0)
         )
         (return)
        )
       )
       (if
        (i32.eq
         (i32.load
          (i32.const 51508)
         )
         (get_local $7)
        )
        (block
         (i32.store
          (i32.const 51496)
          (tee_local $0
           (i32.add
            (i32.load
             (i32.const 51496)
            )
            (get_local $1)
           )
          )
         )
         (i32.store
          (i32.const 51508)
          (get_local $5)
         )
         (i32.store offset=4
          (get_local $3)
          (i32.or
           (get_local $0)
           (i32.const 1)
          )
         )
         (i32.store
          (i32.add
           (get_local $5)
           (get_local $0)
          )
          (get_local $0)
         )
         (return)
        )
       )
       (set_local $4
        (i32.add
         (i32.and
          (get_local $0)
          (i32.const -8)
         )
         (get_local $1)
        )
       )
       (set_local $6
        (i32.shr_u
         (get_local $0)
         (i32.const 3)
        )
       )
       (block $label$break$L111
        (if
         (i32.lt_u
          (get_local $0)
          (i32.const 256)
         )
         (block
          (set_local $1
           (i32.load offset=12
            (get_local $7)
           )
          )
          (if
           (i32.ne
            (tee_local $2
             (i32.load offset=8
              (get_local $7)
             )
            )
            (tee_local $0
             (i32.add
              (i32.shl
               (get_local $6)
               (i32.const 3)
              )
              (i32.const 51528)
             )
            )
           )
           (block
            (if
             (i32.gt_u
              (i32.load
               (i32.const 51504)
              )
              (get_local $2)
             )
             (call $_abort)
            )
            (if
             (i32.ne
              (i32.load offset=12
               (get_local $2)
              )
              (get_local $7)
             )
             (call $_abort)
            )
           )
          )
          (if
           (i32.eq
            (get_local $1)
            (get_local $2)
           )
           (block
            (i32.store
             (i32.const 51488)
             (i32.and
              (i32.load
               (i32.const 51488)
              )
              (i32.xor
               (i32.shl
                (i32.const 1)
                (get_local $6)
               )
               (i32.const -1)
              )
             )
            )
            (br $label$break$L111)
           )
          )
          (if
           (i32.eq
            (get_local $1)
            (get_local $0)
           )
           (set_local $16
            (i32.add
             (get_local $1)
             (i32.const 8)
            )
           )
           (block
            (if
             (i32.gt_u
              (i32.load
               (i32.const 51504)
              )
              (get_local $1)
             )
             (call $_abort)
            )
            (if
             (i32.eq
              (i32.load
               (tee_local $0
                (i32.add
                 (get_local $1)
                 (i32.const 8)
                )
               )
              )
              (get_local $7)
             )
             (set_local $16
              (get_local $0)
             )
             (call $_abort)
            )
           )
          )
          (i32.store offset=12
           (get_local $2)
           (get_local $1)
          )
          (i32.store
           (get_local $16)
           (get_local $2)
          )
         )
         (block
          (set_local $8
           (i32.load offset=24
            (get_local $7)
           )
          )
          (block $do-once6
           (if
            (i32.eq
             (tee_local $0
              (i32.load offset=12
               (get_local $7)
              )
             )
             (get_local $7)
            )
            (block
             (if
              (tee_local $0
               (i32.load
                (tee_local $2
                 (i32.add
                  (tee_local $1
                   (i32.add
                    (get_local $7)
                    (i32.const 16)
                   )
                  )
                  (i32.const 4)
                 )
                )
               )
              )
              (set_local $1
               (get_local $2)
              )
              (br_if $do-once6
               (i32.eqz
                (tee_local $0
                 (i32.load
                  (get_local $1)
                 )
                )
               )
              )
             )
             (loop $while-in9
              (block $while-out8
               (if
                (i32.eqz
                 (tee_local $6
                  (i32.load
                   (tee_local $2
                    (i32.add
                     (get_local $0)
                     (i32.const 20)
                    )
                   )
                  )
                 )
                )
                (br_if $while-out8
                 (i32.eqz
                  (tee_local $6
                   (i32.load
                    (tee_local $2
                     (i32.add
                      (get_local $0)
                      (i32.const 16)
                     )
                    )
                   )
                  )
                 )
                )
               )
               (set_local $1
                (get_local $2)
               )
               (set_local $0
                (get_local $6)
               )
               (br $while-in9)
              )
             )
             (if
              (i32.gt_u
               (i32.load
                (i32.const 51504)
               )
               (get_local $1)
              )
              (call $_abort)
              (block
               (i32.store
                (get_local $1)
                (i32.const 0)
               )
               (set_local $10
                (get_local $0)
               )
              )
             )
            )
            (block
             (if
              (i32.gt_u
               (i32.load
                (i32.const 51504)
               )
               (tee_local $1
                (i32.load offset=8
                 (get_local $7)
                )
               )
              )
              (call $_abort)
             )
             (if
              (i32.ne
               (i32.load
                (tee_local $2
                 (i32.add
                  (get_local $1)
                  (i32.const 12)
                 )
                )
               )
               (get_local $7)
              )
              (call $_abort)
             )
             (if
              (i32.eq
               (i32.load
                (tee_local $6
                 (i32.add
                  (get_local $0)
                  (i32.const 8)
                 )
                )
               )
               (get_local $7)
              )
              (block
               (i32.store
                (get_local $2)
                (get_local $0)
               )
               (i32.store
                (get_local $6)
                (get_local $1)
               )
               (set_local $10
                (get_local $0)
               )
              )
              (call $_abort)
             )
            )
           )
          )
          (if
           (get_local $8)
           (block
            (if
             (i32.eq
              (i32.load
               (tee_local $1
                (i32.add
                 (i32.shl
                  (tee_local $0
                   (i32.load offset=28
                    (get_local $7)
                   )
                  )
                  (i32.const 2)
                 )
                 (i32.const 51792)
                )
               )
              )
              (get_local $7)
             )
             (block
              (i32.store
               (get_local $1)
               (get_local $10)
              )
              (if
               (i32.eqz
                (get_local $10)
               )
               (block
                (i32.store
                 (i32.const 51492)
                 (i32.and
                  (i32.load
                   (i32.const 51492)
                  )
                  (i32.xor
                   (i32.shl
                    (i32.const 1)
                    (get_local $0)
                   )
                   (i32.const -1)
                  )
                 )
                )
                (br $label$break$L111)
               )
              )
             )
             (if
              (i32.gt_u
               (i32.load
                (i32.const 51504)
               )
               (get_local $8)
              )
              (call $_abort)
              (block
               (set_local $0
                (i32.add
                 (get_local $8)
                 (i32.const 20)
                )
               )
               (i32.store
                (if (result i32)
                 (i32.eq
                  (i32.load
                   (tee_local $1
                    (i32.add
                     (get_local $8)
                     (i32.const 16)
                    )
                   )
                  )
                  (get_local $7)
                 )
                 (get_local $1)
                 (get_local $0)
                )
                (get_local $10)
               )
               (br_if $label$break$L111
                (i32.eqz
                 (get_local $10)
                )
               )
              )
             )
            )
            (if
             (i32.gt_u
              (tee_local $1
               (i32.load
                (i32.const 51504)
               )
              )
              (get_local $10)
             )
             (call $_abort)
            )
            (i32.store offset=24
             (get_local $10)
             (get_local $8)
            )
            (if
             (tee_local $0
              (i32.load
               (tee_local $2
                (i32.add
                 (get_local $7)
                 (i32.const 16)
                )
               )
              )
             )
             (if
              (i32.gt_u
               (get_local $1)
               (get_local $0)
              )
              (call $_abort)
              (block
               (i32.store offset=16
                (get_local $10)
                (get_local $0)
               )
               (i32.store offset=24
                (get_local $0)
                (get_local $10)
               )
              )
             )
            )
            (if
             (tee_local $0
              (i32.load offset=4
               (get_local $2)
              )
             )
             (if
              (i32.gt_u
               (i32.load
                (i32.const 51504)
               )
               (get_local $0)
              )
              (call $_abort)
              (block
               (i32.store offset=20
                (get_local $10)
                (get_local $0)
               )
               (i32.store offset=24
                (get_local $0)
                (get_local $10)
               )
              )
             )
            )
           )
          )
         )
        )
       )
       (i32.store offset=4
        (get_local $3)
        (i32.or
         (get_local $4)
         (i32.const 1)
        )
       )
       (i32.store
        (i32.add
         (get_local $5)
         (get_local $4)
        )
        (get_local $4)
       )
       (if (result i32)
        (i32.eq
         (get_local $3)
         (i32.load
          (i32.const 51508)
         )
        )
        (block
         (i32.store
          (i32.const 51496)
          (get_local $4)
         )
         (return)
        )
        (get_local $4)
       )
      )
     )
    )
    (i32.const 3)
   )
  )
  (if
   (i32.lt_u
    (get_local $5)
    (i32.const 256)
   )
   (block
    (set_local $0
     (i32.add
      (i32.shl
       (get_local $1)
       (i32.const 3)
      )
      (i32.const 51528)
     )
    )
    (if
     (i32.and
      (tee_local $5
       (i32.load
        (i32.const 51488)
       )
      )
      (tee_local $1
       (i32.shl
        (i32.const 1)
        (get_local $1)
       )
      )
     )
     (if
      (i32.gt_u
       (i32.load
        (i32.const 51504)
       )
       (tee_local $5
        (i32.load
         (tee_local $1
          (i32.add
           (get_local $0)
           (i32.const 8)
          )
         )
        )
       )
      )
      (call $_abort)
      (block
       (set_local $15
        (get_local $5)
       )
       (set_local $17
        (get_local $1)
       )
      )
     )
     (block
      (i32.store
       (i32.const 51488)
       (i32.or
        (get_local $5)
        (get_local $1)
       )
      )
      (set_local $15
       (get_local $0)
      )
      (set_local $17
       (i32.add
        (get_local $0)
        (i32.const 8)
       )
      )
     )
    )
    (i32.store
     (get_local $17)
     (get_local $3)
    )
    (i32.store offset=12
     (get_local $15)
     (get_local $3)
    )
    (i32.store offset=8
     (get_local $3)
     (get_local $15)
    )
    (i32.store offset=12
     (get_local $3)
     (get_local $0)
    )
    (return)
   )
  )
  (set_local $0
   (i32.add
    (i32.shl
     (tee_local $1
      (if (result i32)
       (tee_local $0
        (i32.shr_u
         (get_local $5)
         (i32.const 8)
        )
       )
       (if (result i32)
        (i32.gt_u
         (get_local $5)
         (i32.const 16777215)
        )
        (i32.const 31)
        (i32.or
         (i32.and
          (i32.shr_u
           (get_local $5)
           (i32.add
            (tee_local $0
             (i32.add
              (i32.sub
               (i32.const 14)
               (i32.or
                (i32.or
                 (tee_local $4
                  (i32.and
                   (i32.shr_u
                    (i32.add
                     (tee_local $1
                      (i32.shl
                       (get_local $0)
                       (tee_local $0
                        (i32.and
                         (i32.shr_u
                          (i32.add
                           (get_local $0)
                           (i32.const 1048320)
                          )
                          (i32.const 16)
                         )
                         (i32.const 8)
                        )
                       )
                      )
                     )
                     (i32.const 520192)
                    )
                    (i32.const 16)
                   )
                   (i32.const 4)
                  )
                 )
                 (get_local $0)
                )
                (tee_local $1
                 (i32.and
                  (i32.shr_u
                   (i32.add
                    (tee_local $0
                     (i32.shl
                      (get_local $1)
                      (get_local $4)
                     )
                    )
                    (i32.const 245760)
                   )
                   (i32.const 16)
                  )
                  (i32.const 2)
                 )
                )
               )
              )
              (i32.shr_u
               (i32.shl
                (get_local $0)
                (get_local $1)
               )
               (i32.const 15)
              )
             )
            )
            (i32.const 7)
           )
          )
          (i32.const 1)
         )
         (i32.shl
          (get_local $0)
          (i32.const 1)
         )
        )
       )
       (i32.const 0)
      )
     )
     (i32.const 2)
    )
    (i32.const 51792)
   )
  )
  (i32.store offset=28
   (get_local $3)
   (get_local $1)
  )
  (i32.store offset=20
   (get_local $3)
   (i32.const 0)
  )
  (i32.store offset=16
   (get_local $3)
   (i32.const 0)
  )
  (block $label$break$L197
   (if
    (i32.and
     (tee_local $4
      (i32.load
       (i32.const 51492)
      )
     )
     (tee_local $2
      (i32.shl
       (i32.const 1)
       (get_local $1)
      )
     )
    )
    (block
     (block $label$break$L200
      (if
       (i32.eq
        (i32.and
         (i32.load offset=4
          (tee_local $0
           (i32.load
            (get_local $0)
           )
          )
         )
         (i32.const -8)
        )
        (get_local $5)
       )
       (set_local $14
        (get_local $0)
       )
       (block
        (set_local $4
         (i32.sub
          (i32.const 25)
          (i32.shr_u
           (get_local $1)
           (i32.const 1)
          )
         )
        )
        (set_local $4
         (i32.shl
          (get_local $5)
          (if (result i32)
           (i32.eq
            (get_local $1)
            (i32.const 31)
           )
           (i32.const 0)
           (get_local $4)
          )
         )
        )
        (loop $while-in17
         (if
          (tee_local $1
           (i32.load
            (tee_local $2
             (i32.add
              (i32.add
               (get_local $0)
               (i32.const 16)
              )
              (i32.shl
               (i32.shr_u
                (get_local $4)
                (i32.const 31)
               )
               (i32.const 2)
              )
             )
            )
           )
          )
          (block
           (set_local $4
            (i32.shl
             (get_local $4)
             (i32.const 1)
            )
           )
           (if
            (i32.eq
             (i32.and
              (i32.load offset=4
               (get_local $1)
              )
              (i32.const -8)
             )
             (get_local $5)
            )
            (block
             (set_local $14
              (get_local $1)
             )
             (br $label$break$L200)
            )
            (block
             (set_local $0
              (get_local $1)
             )
             (br $while-in17)
            )
           )
          )
         )
        )
        (if
         (i32.gt_u
          (i32.load
           (i32.const 51504)
          )
          (get_local $2)
         )
         (call $_abort)
         (block
          (i32.store
           (get_local $2)
           (get_local $3)
          )
          (i32.store offset=24
           (get_local $3)
           (get_local $0)
          )
          (i32.store offset=12
           (get_local $3)
           (get_local $3)
          )
          (i32.store offset=8
           (get_local $3)
           (get_local $3)
          )
          (br $label$break$L197)
         )
        )
       )
      )
     )
     (if
      (i32.and
       (i32.le_u
        (tee_local $1
         (i32.load
          (i32.const 51504)
         )
        )
        (tee_local $0
         (i32.load
          (tee_local $5
           (i32.add
            (get_local $14)
            (i32.const 8)
           )
          )
         )
        )
       )
       (i32.le_u
        (get_local $1)
        (get_local $14)
       )
      )
      (block
       (i32.store offset=12
        (get_local $0)
        (get_local $3)
       )
       (i32.store
        (get_local $5)
        (get_local $3)
       )
       (i32.store offset=8
        (get_local $3)
        (get_local $0)
       )
       (i32.store offset=12
        (get_local $3)
        (get_local $14)
       )
       (i32.store offset=24
        (get_local $3)
        (i32.const 0)
       )
      )
      (call $_abort)
     )
    )
    (block
     (i32.store
      (i32.const 51492)
      (i32.or
       (get_local $4)
       (get_local $2)
      )
     )
     (i32.store
      (get_local $0)
      (get_local $3)
     )
     (i32.store offset=24
      (get_local $3)
      (get_local $0)
     )
     (i32.store offset=12
      (get_local $3)
      (get_local $3)
     )
     (i32.store offset=8
      (get_local $3)
      (get_local $3)
     )
    )
   )
  )
  (i32.store
   (i32.const 51520)
   (tee_local $0
    (i32.add
     (i32.load
      (i32.const 51520)
     )
     (i32.const -1)
    )
   )
  )
  (if
   (get_local $0)
   (return)
  )
  (set_local $0
   (i32.const 51944)
  )
  (loop $while-in19
   (set_local $0
    (i32.add
     (tee_local $3
      (i32.load
       (get_local $0)
      )
     )
     (i32.const 8)
    )
   )
   (br_if $while-in19
    (get_local $3)
   )
  )
  (i32.store
   (i32.const 51520)
   (i32.const -1)
  )
 )
 (func $_dispose_chunk (; 440 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (block $folding-inner0
   (set_local $6
    (i32.add
     (get_local $0)
     (get_local $1)
    )
   )
   (block $label$break$L1
    (if
     (i32.and
      (tee_local $7
       (i32.load offset=4
        (get_local $0)
       )
      )
      (i32.const 1)
     )
     (block
      (set_local $2
       (get_local $0)
      )
      (set_local $5
       (get_local $1)
      )
     )
     (block
      (set_local $4
       (i32.load
        (get_local $0)
       )
      )
      (if
       (i32.eqz
        (i32.and
         (get_local $7)
         (i32.const 3)
        )
       )
       (return)
      )
      (if
       (i32.lt_u
        (tee_local $0
         (i32.sub
          (get_local $0)
          (get_local $4)
         )
        )
        (tee_local $12
         (i32.load
          (i32.const 51504)
         )
        )
       )
       (call $_abort)
      )
      (set_local $1
       (i32.add
        (get_local $4)
        (get_local $1)
       )
      )
      (if
       (i32.eq
        (i32.load
         (i32.const 51508)
        )
        (get_local $0)
       )
       (block
        (if
         (i32.ne
          (i32.and
           (tee_local $2
            (i32.load
             (tee_local $5
              (i32.add
               (get_local $6)
               (i32.const 4)
              )
             )
            )
           )
           (i32.const 3)
          )
          (i32.const 3)
         )
         (block
          (set_local $2
           (get_local $0)
          )
          (set_local $5
           (get_local $1)
          )
          (br $label$break$L1)
         )
        )
        (i32.store
         (i32.const 51496)
         (get_local $1)
        )
        (i32.store
         (get_local $5)
         (i32.and
          (get_local $2)
          (i32.const -2)
         )
        )
        (i32.store offset=4
         (get_local $0)
         (i32.or
          (get_local $1)
          (i32.const 1)
         )
        )
        (i32.store
         (get_local $6)
         (get_local $1)
        )
        (return)
       )
      )
      (set_local $7
       (i32.shr_u
        (get_local $4)
        (i32.const 3)
       )
      )
      (if
       (i32.lt_u
        (get_local $4)
        (i32.const 256)
       )
       (block
        (set_local $2
         (i32.load offset=12
          (get_local $0)
         )
        )
        (if
         (i32.ne
          (tee_local $4
           (i32.load offset=8
            (get_local $0)
           )
          )
          (tee_local $5
           (i32.add
            (i32.shl
             (get_local $7)
             (i32.const 3)
            )
            (i32.const 51528)
           )
          )
         )
         (block
          (if
           (i32.gt_u
            (get_local $12)
            (get_local $4)
           )
           (call $_abort)
          )
          (if
           (i32.ne
            (i32.load offset=12
             (get_local $4)
            )
            (get_local $0)
           )
           (call $_abort)
          )
         )
        )
        (if
         (i32.eq
          (get_local $2)
          (get_local $4)
         )
         (block
          (i32.store
           (i32.const 51488)
           (i32.and
            (i32.load
             (i32.const 51488)
            )
            (i32.xor
             (i32.shl
              (i32.const 1)
              (get_local $7)
             )
             (i32.const -1)
            )
           )
          )
          (set_local $2
           (get_local $0)
          )
          (set_local $5
           (get_local $1)
          )
          (br $label$break$L1)
         )
        )
        (if
         (i32.eq
          (get_local $2)
          (get_local $5)
         )
         (set_local $3
          (i32.add
           (get_local $2)
           (i32.const 8)
          )
         )
         (block
          (if
           (i32.gt_u
            (get_local $12)
            (get_local $2)
           )
           (call $_abort)
          )
          (if
           (i32.eq
            (i32.load
             (tee_local $5
              (i32.add
               (get_local $2)
               (i32.const 8)
              )
             )
            )
            (get_local $0)
           )
           (set_local $3
            (get_local $5)
           )
           (call $_abort)
          )
         )
        )
        (i32.store offset=12
         (get_local $4)
         (get_local $2)
        )
        (i32.store
         (get_local $3)
         (get_local $4)
        )
        (set_local $2
         (get_local $0)
        )
        (set_local $5
         (get_local $1)
        )
        (br $label$break$L1)
       )
      )
      (set_local $10
       (i32.load offset=24
        (get_local $0)
       )
      )
      (block $do-once
       (if
        (i32.eq
         (tee_local $3
          (i32.load offset=12
           (get_local $0)
          )
         )
         (get_local $0)
        )
        (block
         (if
          (tee_local $3
           (i32.load
            (tee_local $7
             (i32.add
              (tee_local $4
               (i32.add
                (get_local $0)
                (i32.const 16)
               )
              )
              (i32.const 4)
             )
            )
           )
          )
          (set_local $4
           (get_local $7)
          )
          (br_if $do-once
           (i32.eqz
            (tee_local $3
             (i32.load
              (get_local $4)
             )
            )
           )
          )
         )
         (loop $while-in
          (block $while-out
           (if
            (i32.eqz
             (tee_local $11
              (i32.load
               (tee_local $7
                (i32.add
                 (get_local $3)
                 (i32.const 20)
                )
               )
              )
             )
            )
            (br_if $while-out
             (i32.eqz
              (tee_local $11
               (i32.load
                (tee_local $7
                 (i32.add
                  (get_local $3)
                  (i32.const 16)
                 )
                )
               )
              )
             )
            )
           )
           (set_local $4
            (get_local $7)
           )
           (set_local $3
            (get_local $11)
           )
           (br $while-in)
          )
         )
         (if
          (i32.gt_u
           (get_local $12)
           (get_local $4)
          )
          (call $_abort)
          (block
           (i32.store
            (get_local $4)
            (i32.const 0)
           )
           (set_local $8
            (get_local $3)
           )
          )
         )
        )
        (block
         (if
          (i32.gt_u
           (get_local $12)
           (tee_local $4
            (i32.load offset=8
             (get_local $0)
            )
           )
          )
          (call $_abort)
         )
         (if
          (i32.ne
           (i32.load
            (tee_local $7
             (i32.add
              (get_local $4)
              (i32.const 12)
             )
            )
           )
           (get_local $0)
          )
          (call $_abort)
         )
         (if
          (i32.eq
           (i32.load
            (tee_local $11
             (i32.add
              (get_local $3)
              (i32.const 8)
             )
            )
           )
           (get_local $0)
          )
          (block
           (i32.store
            (get_local $7)
            (get_local $3)
           )
           (i32.store
            (get_local $11)
            (get_local $4)
           )
           (set_local $8
            (get_local $3)
           )
          )
          (call $_abort)
         )
        )
       )
      )
      (if
       (get_local $10)
       (block
        (if
         (i32.eq
          (i32.load
           (tee_local $4
            (i32.add
             (i32.shl
              (tee_local $3
               (i32.load offset=28
                (get_local $0)
               )
              )
              (i32.const 2)
             )
             (i32.const 51792)
            )
           )
          )
          (get_local $0)
         )
         (block
          (i32.store
           (get_local $4)
           (get_local $8)
          )
          (if
           (i32.eqz
            (get_local $8)
           )
           (block
            (i32.store
             (i32.const 51492)
             (i32.and
              (i32.load
               (i32.const 51492)
              )
              (i32.xor
               (i32.shl
                (i32.const 1)
                (get_local $3)
               )
               (i32.const -1)
              )
             )
            )
            (set_local $2
             (get_local $0)
            )
            (set_local $5
             (get_local $1)
            )
            (br $label$break$L1)
           )
          )
         )
         (if
          (i32.gt_u
           (i32.load
            (i32.const 51504)
           )
           (get_local $10)
          )
          (call $_abort)
          (block
           (set_local $3
            (i32.add
             (get_local $10)
             (i32.const 20)
            )
           )
           (i32.store
            (if (result i32)
             (i32.eq
              (i32.load
               (tee_local $4
                (i32.add
                 (get_local $10)
                 (i32.const 16)
                )
               )
              )
              (get_local $0)
             )
             (get_local $4)
             (get_local $3)
            )
            (get_local $8)
           )
           (if
            (i32.eqz
             (get_local $8)
            )
            (block
             (set_local $2
              (get_local $0)
             )
             (set_local $5
              (get_local $1)
             )
             (br $label$break$L1)
            )
           )
          )
         )
        )
        (if
         (i32.gt_u
          (tee_local $4
           (i32.load
            (i32.const 51504)
           )
          )
          (get_local $8)
         )
         (call $_abort)
        )
        (i32.store offset=24
         (get_local $8)
         (get_local $10)
        )
        (if
         (tee_local $3
          (i32.load
           (tee_local $7
            (i32.add
             (get_local $0)
             (i32.const 16)
            )
           )
          )
         )
         (if
          (i32.gt_u
           (get_local $4)
           (get_local $3)
          )
          (call $_abort)
          (block
           (i32.store offset=16
            (get_local $8)
            (get_local $3)
           )
           (i32.store offset=24
            (get_local $3)
            (get_local $8)
           )
          )
         )
        )
        (if
         (tee_local $3
          (i32.load offset=4
           (get_local $7)
          )
         )
         (if
          (i32.gt_u
           (i32.load
            (i32.const 51504)
           )
           (get_local $3)
          )
          (call $_abort)
          (block
           (i32.store offset=20
            (get_local $8)
            (get_local $3)
           )
           (i32.store offset=24
            (get_local $3)
            (get_local $8)
           )
           (set_local $2
            (get_local $0)
           )
           (set_local $5
            (get_local $1)
           )
          )
         )
         (block
          (set_local $2
           (get_local $0)
          )
          (set_local $5
           (get_local $1)
          )
         )
        )
       )
       (block
        (set_local $2
         (get_local $0)
        )
        (set_local $5
         (get_local $1)
        )
       )
      )
     )
    )
   )
   (if
    (i32.lt_u
     (get_local $6)
     (tee_local $7
      (i32.load
       (i32.const 51504)
      )
     )
    )
    (call $_abort)
   )
   (if
    (i32.and
     (tee_local $0
      (i32.load
       (tee_local $1
        (i32.add
         (get_local $6)
         (i32.const 4)
        )
       )
      )
     )
     (i32.const 2)
    )
    (block
     (i32.store
      (get_local $1)
      (i32.and
       (get_local $0)
       (i32.const -2)
      )
     )
     (i32.store offset=4
      (get_local $2)
      (i32.or
       (get_local $5)
       (i32.const 1)
      )
     )
     (i32.store
      (i32.add
       (get_local $2)
       (get_local $5)
      )
      (get_local $5)
     )
    )
    (block
     (if
      (i32.eq
       (i32.load
        (i32.const 51512)
       )
       (get_local $6)
      )
      (block
       (i32.store
        (i32.const 51500)
        (tee_local $0
         (i32.add
          (i32.load
           (i32.const 51500)
          )
          (get_local $5)
         )
        )
       )
       (i32.store
        (i32.const 51512)
        (get_local $2)
       )
       (i32.store offset=4
        (get_local $2)
        (i32.or
         (get_local $0)
         (i32.const 1)
        )
       )
       (if
        (i32.ne
         (get_local $2)
         (i32.load
          (i32.const 51508)
         )
        )
        (return)
       )
       (i32.store
        (i32.const 51508)
        (i32.const 0)
       )
       (i32.store
        (i32.const 51496)
        (i32.const 0)
       )
       (return)
      )
     )
     (if
      (i32.eq
       (i32.load
        (i32.const 51508)
       )
       (get_local $6)
      )
      (block
       (i32.store
        (i32.const 51496)
        (tee_local $0
         (i32.add
          (i32.load
           (i32.const 51496)
          )
          (get_local $5)
         )
        )
       )
       (i32.store
        (i32.const 51508)
        (get_local $2)
       )
       (i32.store offset=4
        (get_local $2)
        (i32.or
         (get_local $0)
         (i32.const 1)
        )
       )
       (i32.store
        (i32.add
         (get_local $2)
         (get_local $0)
        )
        (get_local $0)
       )
       (return)
      )
     )
     (set_local $5
      (i32.add
       (i32.and
        (get_local $0)
        (i32.const -8)
       )
       (get_local $5)
      )
     )
     (set_local $4
      (i32.shr_u
       (get_local $0)
       (i32.const 3)
      )
     )
     (block $label$break$L99
      (if
       (i32.lt_u
        (get_local $0)
        (i32.const 256)
       )
       (block
        (set_local $1
         (i32.load offset=12
          (get_local $6)
         )
        )
        (if
         (i32.ne
          (tee_local $3
           (i32.load offset=8
            (get_local $6)
           )
          )
          (tee_local $0
           (i32.add
            (i32.shl
             (get_local $4)
             (i32.const 3)
            )
            (i32.const 51528)
           )
          )
         )
         (block
          (if
           (i32.gt_u
            (get_local $7)
            (get_local $3)
           )
           (call $_abort)
          )
          (if
           (i32.ne
            (i32.load offset=12
             (get_local $3)
            )
            (get_local $6)
           )
           (call $_abort)
          )
         )
        )
        (if
         (i32.eq
          (get_local $1)
          (get_local $3)
         )
         (block
          (i32.store
           (i32.const 51488)
           (i32.and
            (i32.load
             (i32.const 51488)
            )
            (i32.xor
             (i32.shl
              (i32.const 1)
              (get_local $4)
             )
             (i32.const -1)
            )
           )
          )
          (br $label$break$L99)
         )
        )
        (if
         (i32.eq
          (get_local $1)
          (get_local $0)
         )
         (set_local $14
          (i32.add
           (get_local $1)
           (i32.const 8)
          )
         )
         (block
          (if
           (i32.gt_u
            (get_local $7)
            (get_local $1)
           )
           (call $_abort)
          )
          (if
           (i32.eq
            (i32.load
             (tee_local $0
              (i32.add
               (get_local $1)
               (i32.const 8)
              )
             )
            )
            (get_local $6)
           )
           (set_local $14
            (get_local $0)
           )
           (call $_abort)
          )
         )
        )
        (i32.store offset=12
         (get_local $3)
         (get_local $1)
        )
        (i32.store
         (get_local $14)
         (get_local $3)
        )
       )
       (block
        (set_local $8
         (i32.load offset=24
          (get_local $6)
         )
        )
        (block $do-once6
         (if
          (i32.eq
           (tee_local $0
            (i32.load offset=12
             (get_local $6)
            )
           )
           (get_local $6)
          )
          (block
           (if
            (tee_local $0
             (i32.load
              (tee_local $3
               (i32.add
                (tee_local $1
                 (i32.add
                  (get_local $6)
                  (i32.const 16)
                 )
                )
                (i32.const 4)
               )
              )
             )
            )
            (set_local $1
             (get_local $3)
            )
            (br_if $do-once6
             (i32.eqz
              (tee_local $0
               (i32.load
                (get_local $1)
               )
              )
             )
            )
           )
           (loop $while-in9
            (block $while-out8
             (if
              (i32.eqz
               (tee_local $4
                (i32.load
                 (tee_local $3
                  (i32.add
                   (get_local $0)
                   (i32.const 20)
                  )
                 )
                )
               )
              )
              (br_if $while-out8
               (i32.eqz
                (tee_local $4
                 (i32.load
                  (tee_local $3
                   (i32.add
                    (get_local $0)
                    (i32.const 16)
                   )
                  )
                 )
                )
               )
              )
             )
             (set_local $1
              (get_local $3)
             )
             (set_local $0
              (get_local $4)
             )
             (br $while-in9)
            )
           )
           (if
            (i32.gt_u
             (get_local $7)
             (get_local $1)
            )
            (call $_abort)
            (block
             (i32.store
              (get_local $1)
              (i32.const 0)
             )
             (set_local $9
              (get_local $0)
             )
            )
           )
          )
          (block
           (if
            (i32.gt_u
             (get_local $7)
             (tee_local $1
              (i32.load offset=8
               (get_local $6)
              )
             )
            )
            (call $_abort)
           )
           (if
            (i32.ne
             (i32.load
              (tee_local $3
               (i32.add
                (get_local $1)
                (i32.const 12)
               )
              )
             )
             (get_local $6)
            )
            (call $_abort)
           )
           (if
            (i32.eq
             (i32.load
              (tee_local $4
               (i32.add
                (get_local $0)
                (i32.const 8)
               )
              )
             )
             (get_local $6)
            )
            (block
             (i32.store
              (get_local $3)
              (get_local $0)
             )
             (i32.store
              (get_local $4)
              (get_local $1)
             )
             (set_local $9
              (get_local $0)
             )
            )
            (call $_abort)
           )
          )
         )
        )
        (if
         (get_local $8)
         (block
          (if
           (i32.eq
            (i32.load
             (tee_local $1
              (i32.add
               (i32.shl
                (tee_local $0
                 (i32.load offset=28
                  (get_local $6)
                 )
                )
                (i32.const 2)
               )
               (i32.const 51792)
              )
             )
            )
            (get_local $6)
           )
           (block
            (i32.store
             (get_local $1)
             (get_local $9)
            )
            (if
             (i32.eqz
              (get_local $9)
             )
             (block
              (i32.store
               (i32.const 51492)
               (i32.and
                (i32.load
                 (i32.const 51492)
                )
                (i32.xor
                 (i32.shl
                  (i32.const 1)
                  (get_local $0)
                 )
                 (i32.const -1)
                )
               )
              )
              (br $label$break$L99)
             )
            )
           )
           (if
            (i32.gt_u
             (i32.load
              (i32.const 51504)
             )
             (get_local $8)
            )
            (call $_abort)
            (block
             (set_local $0
              (i32.add
               (get_local $8)
               (i32.const 20)
              )
             )
             (i32.store
              (if (result i32)
               (i32.eq
                (i32.load
                 (tee_local $1
                  (i32.add
                   (get_local $8)
                   (i32.const 16)
                  )
                 )
                )
                (get_local $6)
               )
               (get_local $1)
               (get_local $0)
              )
              (get_local $9)
             )
             (br_if $label$break$L99
              (i32.eqz
               (get_local $9)
              )
             )
            )
           )
          )
          (if
           (i32.gt_u
            (tee_local $1
             (i32.load
              (i32.const 51504)
             )
            )
            (get_local $9)
           )
           (call $_abort)
          )
          (i32.store offset=24
           (get_local $9)
           (get_local $8)
          )
          (if
           (tee_local $0
            (i32.load
             (tee_local $3
              (i32.add
               (get_local $6)
               (i32.const 16)
              )
             )
            )
           )
           (if
            (i32.gt_u
             (get_local $1)
             (get_local $0)
            )
            (call $_abort)
            (block
             (i32.store offset=16
              (get_local $9)
              (get_local $0)
             )
             (i32.store offset=24
              (get_local $0)
              (get_local $9)
             )
            )
           )
          )
          (if
           (tee_local $0
            (i32.load offset=4
             (get_local $3)
            )
           )
           (if
            (i32.gt_u
             (i32.load
              (i32.const 51504)
             )
             (get_local $0)
            )
            (call $_abort)
            (block
             (i32.store offset=20
              (get_local $9)
              (get_local $0)
             )
             (i32.store offset=24
              (get_local $0)
              (get_local $9)
             )
            )
           )
          )
         )
        )
       )
      )
     )
     (i32.store offset=4
      (get_local $2)
      (i32.or
       (get_local $5)
       (i32.const 1)
      )
     )
     (i32.store
      (i32.add
       (get_local $2)
       (get_local $5)
      )
      (get_local $5)
     )
     (if
      (i32.eq
       (get_local $2)
       (i32.load
        (i32.const 51508)
       )
      )
      (block
       (i32.store
        (i32.const 51496)
        (get_local $5)
       )
       (return)
      )
     )
    )
   )
   (set_local $1
    (i32.shr_u
     (get_local $5)
     (i32.const 3)
    )
   )
   (if
    (i32.lt_u
     (get_local $5)
     (i32.const 256)
    )
    (block
     (set_local $0
      (i32.add
       (i32.shl
        (get_local $1)
        (i32.const 3)
       )
       (i32.const 51528)
      )
     )
     (if
      (i32.and
       (tee_local $5
        (i32.load
         (i32.const 51488)
        )
       )
       (tee_local $1
        (i32.shl
         (i32.const 1)
         (get_local $1)
        )
       )
      )
      (if
       (i32.gt_u
        (i32.load
         (i32.const 51504)
        )
        (tee_local $5
         (i32.load
          (tee_local $1
           (i32.add
            (get_local $0)
            (i32.const 8)
           )
          )
         )
        )
       )
       (call $_abort)
       (block
        (set_local $13
         (get_local $5)
        )
        (set_local $15
         (get_local $1)
        )
       )
      )
      (block
       (i32.store
        (i32.const 51488)
        (i32.or
         (get_local $5)
         (get_local $1)
        )
       )
       (set_local $13
        (get_local $0)
       )
       (set_local $15
        (i32.add
         (get_local $0)
         (i32.const 8)
        )
       )
      )
     )
     (i32.store
      (get_local $15)
      (get_local $2)
     )
     (i32.store offset=12
      (get_local $13)
      (get_local $2)
     )
     (i32.store offset=8
      (get_local $2)
      (get_local $13)
     )
     (i32.store offset=12
      (get_local $2)
      (get_local $0)
     )
     (return)
    )
   )
   (set_local $0
    (i32.add
     (i32.shl
      (tee_local $1
       (if (result i32)
        (tee_local $0
         (i32.shr_u
          (get_local $5)
          (i32.const 8)
         )
        )
        (if (result i32)
         (i32.gt_u
          (get_local $5)
          (i32.const 16777215)
         )
         (i32.const 31)
         (i32.or
          (i32.and
           (i32.shr_u
            (get_local $5)
            (i32.add
             (tee_local $0
              (i32.add
               (i32.sub
                (i32.const 14)
                (i32.or
                 (i32.or
                  (tee_local $3
                   (i32.and
                    (i32.shr_u
                     (i32.add
                      (tee_local $1
                       (i32.shl
                        (get_local $0)
                        (tee_local $0
                         (i32.and
                          (i32.shr_u
                           (i32.add
                            (get_local $0)
                            (i32.const 1048320)
                           )
                           (i32.const 16)
                          )
                          (i32.const 8)
                         )
                        )
                       )
                      )
                      (i32.const 520192)
                     )
                     (i32.const 16)
                    )
                    (i32.const 4)
                   )
                  )
                  (get_local $0)
                 )
                 (tee_local $1
                  (i32.and
                   (i32.shr_u
                    (i32.add
                     (tee_local $0
                      (i32.shl
                       (get_local $1)
                       (get_local $3)
                      )
                     )
                     (i32.const 245760)
                    )
                    (i32.const 16)
                   )
                   (i32.const 2)
                  )
                 )
                )
               )
               (i32.shr_u
                (i32.shl
                 (get_local $0)
                 (get_local $1)
                )
                (i32.const 15)
               )
              )
             )
             (i32.const 7)
            )
           )
           (i32.const 1)
          )
          (i32.shl
           (get_local $0)
           (i32.const 1)
          )
         )
        )
        (i32.const 0)
       )
      )
      (i32.const 2)
     )
     (i32.const 51792)
    )
   )
   (i32.store offset=28
    (get_local $2)
    (get_local $1)
   )
   (i32.store offset=20
    (get_local $2)
    (i32.const 0)
   )
   (i32.store offset=16
    (get_local $2)
    (i32.const 0)
   )
   (if
    (i32.eqz
     (i32.and
      (tee_local $3
       (i32.load
        (i32.const 51492)
       )
      )
      (tee_local $4
       (i32.shl
        (i32.const 1)
        (get_local $1)
       )
      )
     )
    )
    (block
     (i32.store
      (i32.const 51492)
      (i32.or
       (get_local $3)
       (get_local $4)
      )
     )
     (i32.store
      (get_local $0)
      (get_local $2)
     )
     (br $folding-inner0)
    )
   )
   (block $label$break$L189
    (set_local $1
     (if (result i32)
      (i32.eq
       (i32.and
        (i32.load offset=4
         (tee_local $0
          (i32.load
           (get_local $0)
          )
         )
        )
        (i32.const -8)
       )
       (get_local $5)
      )
      (get_local $0)
      (block
       (set_local $3
        (i32.sub
         (i32.const 25)
         (i32.shr_u
          (get_local $1)
          (i32.const 1)
         )
        )
       )
       (set_local $3
        (i32.shl
         (get_local $5)
         (if (result i32)
          (i32.eq
           (get_local $1)
           (i32.const 31)
          )
          (i32.const 0)
          (get_local $3)
         )
        )
       )
       (loop $while-in16
        (if
         (tee_local $1
          (i32.load
           (tee_local $4
            (i32.add
             (i32.add
              (get_local $0)
              (i32.const 16)
             )
             (i32.shl
              (i32.shr_u
               (get_local $3)
               (i32.const 31)
              )
              (i32.const 2)
             )
            )
           )
          )
         )
         (block
          (set_local $3
           (i32.shl
            (get_local $3)
            (i32.const 1)
           )
          )
          (br_if $label$break$L189
           (i32.eq
            (i32.and
             (i32.load offset=4
              (get_local $1)
             )
             (i32.const -8)
            )
            (get_local $5)
           )
          )
          (set_local $0
           (get_local $1)
          )
          (br $while-in16)
         )
        )
       )
       (if
        (i32.gt_u
         (i32.load
          (i32.const 51504)
         )
         (get_local $4)
        )
        (call $_abort)
       )
       (i32.store
        (get_local $4)
        (get_local $2)
       )
       (br $folding-inner0)
      )
     )
    )
   )
   (if
    (i32.eqz
     (i32.and
      (i32.le_u
       (tee_local $5
        (i32.load
         (i32.const 51504)
        )
       )
       (tee_local $0
        (i32.load
         (tee_local $3
          (i32.add
           (get_local $1)
           (i32.const 8)
          )
         )
        )
       )
      )
      (i32.le_u
       (get_local $5)
       (get_local $1)
      )
     )
    )
    (call $_abort)
   )
   (i32.store offset=12
    (get_local $0)
    (get_local $2)
   )
   (i32.store
    (get_local $3)
    (get_local $2)
   )
   (i32.store offset=8
    (get_local $2)
    (get_local $0)
   )
   (i32.store offset=12
    (get_local $2)
    (get_local $1)
   )
   (i32.store offset=24
    (get_local $2)
    (i32.const 0)
   )
   (return)
  )
  (i32.store offset=24
   (get_local $2)
   (get_local $0)
  )
  (i32.store offset=12
   (get_local $2)
   (get_local $2)
  )
  (i32.store offset=8
   (get_local $2)
   (get_local $2)
  )
 )
 (func $___stdio_close (; 441 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (set_local $1
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.const 16)
   )
  )
  (set_local $0
   (call $_ec_get_error
    (i32.load offset=60
     (get_local $0)
    )
   )
  )
  (i32.store
   (get_local $1)
   (get_local $0)
  )
  (set_local $0
   (call $___syscall_ret
    (call $___syscall6
     (i32.const 6)
     (get_local $1)
    )
   )
  )
  (set_global $STACKTOP
   (get_local $1)
  )
  (get_local $0)
 )
 (func $___stdio_write (; 442 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (set_local $8
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.const 48)
   )
  )
  (set_local $6
   (i32.add
    (get_local $8)
    (i32.const 32)
   )
  )
  (i32.store
   (tee_local $3
    (get_local $8)
   )
   (tee_local $4
    (i32.load
     (tee_local $9
      (i32.add
       (get_local $0)
       (i32.const 28)
      )
     )
    )
   )
  )
  (i32.store offset=4
   (get_local $3)
   (tee_local $4
    (i32.sub
     (i32.load
      (tee_local $10
       (i32.add
        (get_local $0)
        (i32.const 20)
       )
      )
     )
     (get_local $4)
    )
   )
  )
  (i32.store offset=8
   (get_local $3)
   (get_local $1)
  )
  (i32.store offset=12
   (get_local $3)
   (get_local $2)
  )
  (set_local $4
   (i32.add
    (get_local $4)
    (get_local $2)
   )
  )
  (i32.store
   (tee_local $1
    (i32.add
     (get_local $3)
     (i32.const 16)
    )
   )
   (i32.load
    (tee_local $12
     (i32.add
      (get_local $0)
      (i32.const 60)
     )
    )
   )
  )
  (i32.store offset=4
   (get_local $1)
   (get_local $3)
  )
  (i32.store offset=8
   (get_local $1)
   (i32.const 2)
  )
  (set_local $5
   (call $___syscall_ret
    (call $___syscall146
     (i32.const 146)
     (get_local $1)
    )
   )
  )
  (block $__rjto$0
   (block $__rjti$0
    (br_if $__rjti$0
     (i32.eq
      (get_local $4)
      (get_local $5)
     )
    )
    (set_local $7
     (i32.const 2)
    )
    (set_local $1
     (get_local $3)
    )
    (set_local $3
     (get_local $5)
    )
    (loop $while-in
     (if
      (i32.ge_s
       (get_local $3)
       (i32.const 0)
      )
      (block
       (set_local $4
        (i32.sub
         (get_local $4)
         (get_local $3)
        )
       )
       (set_local $5
        (i32.add
         (get_local $1)
         (i32.const 8)
        )
       )
       (if
        (tee_local $11
         (i32.gt_u
          (get_local $3)
          (tee_local $13
           (i32.load offset=4
            (get_local $1)
           )
          )
         )
        )
        (set_local $1
         (get_local $5)
        )
       )
       (set_local $7
        (i32.add
         (get_local $7)
         (i32.shr_s
          (i32.shl
           (get_local $11)
           (i32.const 31)
          )
          (i32.const 31)
         )
        )
       )
       (i32.store
        (get_local $1)
        (i32.add
         (i32.load
          (get_local $1)
         )
         (tee_local $3
          (i32.sub
           (get_local $3)
           (if (result i32)
            (get_local $11)
            (get_local $13)
            (i32.const 0)
           )
          )
         )
        )
       )
       (i32.store
        (tee_local $5
         (i32.add
          (get_local $1)
          (i32.const 4)
         )
        )
        (i32.sub
         (i32.load
          (get_local $5)
         )
         (get_local $3)
        )
       )
       (i32.store
        (get_local $6)
        (i32.load
         (get_local $12)
        )
       )
       (i32.store offset=4
        (get_local $6)
        (get_local $1)
       )
       (i32.store offset=8
        (get_local $6)
        (get_local $7)
       )
       (set_local $3
        (call $___syscall_ret
         (call $___syscall146
          (i32.const 146)
          (get_local $6)
         )
        )
       )
       (br_if $__rjti$0
        (i32.eq
         (get_local $4)
         (get_local $3)
        )
       )
       (br $while-in)
      )
     )
    )
    (i32.store offset=16
     (get_local $0)
     (i32.const 0)
    )
    (i32.store
     (get_local $9)
     (i32.const 0)
    )
    (i32.store
     (get_local $10)
     (i32.const 0)
    )
    (i32.store
     (get_local $0)
     (i32.or
      (i32.load
       (get_local $0)
      )
      (i32.const 32)
     )
    )
    (set_local $2
     (if (result i32)
      (i32.eq
       (get_local $7)
       (i32.const 2)
      )
      (i32.const 0)
      (i32.sub
       (get_local $2)
       (i32.load offset=4
        (get_local $1)
       )
      )
     )
    )
    (br $__rjto$0)
   )
   (i32.store offset=16
    (get_local $0)
    (i32.add
     (tee_local $1
      (i32.load offset=44
       (get_local $0)
      )
     )
     (i32.load offset=48
      (get_local $0)
     )
    )
   )
   (i32.store
    (get_local $9)
    (get_local $1)
   )
   (i32.store
    (get_local $10)
    (get_local $1)
   )
  )
  (set_global $STACKTOP
   (get_local $8)
  )
  (get_local $2)
 )
 (func $___stdio_seek (; 443 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (set_local $3
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.const 32)
   )
  )
  (i32.store
   (get_local $3)
   (i32.load offset=60
    (get_local $0)
   )
  )
  (i32.store offset=4
   (get_local $3)
   (i32.const 0)
  )
  (i32.store offset=8
   (get_local $3)
   (get_local $1)
  )
  (i32.store offset=12
   (get_local $3)
   (tee_local $0
    (i32.add
     (get_local $3)
     (i32.const 20)
    )
   )
  )
  (i32.store offset=16
   (get_local $3)
   (get_local $2)
  )
  (set_local $0
   (if (result i32)
    (i32.lt_s
     (call $___syscall_ret
      (call $___syscall140
       (i32.const 140)
       (get_local $3)
      )
     )
     (i32.const 0)
    )
    (block (result i32)
     (i32.store
      (get_local $0)
      (i32.const -1)
     )
     (i32.const -1)
    )
    (i32.load
     (get_local $0)
    )
   )
  )
  (set_global $STACKTOP
   (get_local $3)
  )
  (get_local $0)
 )
 (func $___syscall_ret (; 444 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (if (result i32)
   (i32.gt_u
    (get_local $0)
    (i32.const -4096)
   )
   (block (result i32)
    (i32.store
     (i32.const 52048)
     (i32.sub
      (i32.const 0)
      (get_local $0)
     )
    )
    (i32.const -1)
   )
   (get_local $0)
  )
 )
 (func $_strcmp (; 445 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (set_local $0
   (if (result i32)
    (i32.or
     (i32.eqz
      (tee_local $2
       (i32.load8_s
        (get_local $0)
       )
      )
     )
     (i32.ne
      (get_local $2)
      (tee_local $3
       (i32.load8_s
        (get_local $1)
       )
      )
     )
    )
    (block (result i32)
     (set_local $1
      (get_local $2)
     )
     (get_local $3)
    )
    (loop $while-in (result i32)
     (if (result i32)
      (i32.or
       (i32.eqz
        (tee_local $2
         (i32.load8_s
          (tee_local $0
           (i32.add
            (get_local $0)
            (i32.const 1)
           )
          )
         )
        )
       )
       (i32.ne
        (get_local $2)
        (tee_local $3
         (i32.load8_s
          (tee_local $1
           (i32.add
            (get_local $1)
            (i32.const 1)
           )
          )
         )
        )
       )
      )
      (block (result i32)
       (set_local $1
        (get_local $2)
       )
       (get_local $3)
      )
      (br $while-in)
     )
    )
   )
  )
  (i32.sub
   (i32.and
    (get_local $1)
    (i32.const 255)
   )
   (i32.and
    (get_local $0)
    (i32.const 255)
   )
  )
 )
 (func $_isdigit (; 446 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (i32.lt_u
   (i32.add
    (get_local $0)
    (i32.const -48)
   )
   (i32.const 10)
  )
 )
 (func $_vfprintf (; 447 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (set_local $1
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.const 224)
   )
  )
  (i64.store
   (tee_local $2
    (i32.add
     (get_local $1)
     (i32.const 160)
    )
   )
   (i64.const 0)
  )
  (i64.store offset=8
   (get_local $2)
   (i64.const 0)
  )
  (i64.store offset=16
   (get_local $2)
   (i64.const 0)
  )
  (i64.store offset=24
   (get_local $2)
   (i64.const 0)
  )
  (i64.store offset=32
   (get_local $2)
   (i64.const 0)
  )
  (i32.store
   (tee_local $3
    (i32.add
     (get_local $1)
     (i32.const 208)
    )
   )
   (i32.load
    (get_local $0)
   )
  )
  (if
   (i32.ge_s
    (call $_printf_core
     (i32.const 0)
     (get_local $3)
     (tee_local $0
      (i32.add
       (get_local $1)
       (i32.const 80)
      )
     )
     (get_local $2)
    )
    (i32.const 0)
   )
   (block
    (drop
     (i32.load
      (i32.const 41104)
     )
    )
    (set_local $4
     (i32.load
      (i32.const 41028)
     )
    )
    (if
     (i32.lt_s
      (i32.load8_s
       (i32.const 41102)
      )
      (i32.const 1)
     )
     (i32.store
      (i32.const 41028)
      (i32.and
       (get_local $4)
       (i32.const -33)
      )
     )
    )
    (if
     (i32.load
      (i32.const 41076)
     )
     (drop
      (call $_printf_core
       (i32.const 41028)
       (get_local $3)
       (get_local $0)
       (get_local $2)
      )
     )
     (block
      (set_local $5
       (i32.load
        (i32.const 41072)
       )
      )
      (i32.store
       (i32.const 41072)
       (get_local $1)
      )
      (i32.store
       (i32.const 41056)
       (get_local $1)
      )
      (i32.store
       (i32.const 41048)
       (get_local $1)
      )
      (i32.store
       (i32.const 41076)
       (i32.const 80)
      )
      (i32.store
       (i32.const 41044)
       (i32.add
        (get_local $1)
        (i32.const 80)
       )
      )
      (drop
       (call $_printf_core
        (i32.const 41028)
        (get_local $3)
        (get_local $0)
        (get_local $2)
       )
      )
      (if
       (get_local $5)
       (block
        (drop
         (call_indirect (type $FUNCSIG$iiii)
          (i32.const 41028)
          (i32.const 0)
          (i32.const 0)
          (i32.add
           (i32.and
            (i32.load
             (i32.const 41064)
            )
            (i32.const 3)
           )
           (i32.const 2)
          )
         )
        )
        (i32.store
         (i32.const 41072)
         (get_local $5)
        )
        (i32.store
         (i32.const 41076)
         (i32.const 0)
        )
        (i32.store
         (i32.const 41044)
         (i32.const 0)
        )
        (i32.store
         (i32.const 41056)
         (i32.const 0)
        )
        (i32.store
         (i32.const 41048)
         (i32.const 0)
        )
       )
      )
     )
    )
    (i32.store
     (i32.const 41028)
     (i32.or
      (i32.load
       (i32.const 41028)
      )
      (i32.and
       (get_local $4)
       (i32.const 32)
      )
     )
    )
   )
  )
  (set_global $STACKTOP
   (get_local $1)
  )
 )
 (func $_printf_core (; 448 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i64)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local $26 i32)
  (local $27 i32)
  (set_local $18
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.sub
    (get_global $STACKTOP)
    (i32.const -64)
   )
  )
  (set_local $11
   (i32.add
    (get_local $18)
    (i32.const 40)
   )
  )
  (set_local $23
   (i32.add
    (get_local $18)
    (i32.const 60)
   )
  )
  (i32.store
   (tee_local $14
    (i32.add
     (get_local $18)
     (i32.const 56)
    )
   )
   (i32.const 41418)
  )
  (set_local $19
   (i32.ne
    (get_local $0)
    (i32.const 0)
   )
  )
  (set_local $20
   (tee_local $22
    (i32.add
     (get_local $18)
     (i32.const 40)
    )
   )
  )
  (set_local $25
   (i32.add
    (get_local $18)
    (i32.const 39)
   )
  )
  (set_local $27
   (i32.add
    (tee_local $24
     (i32.add
      (get_local $18)
      (i32.const 48)
     )
    )
    (i32.const 4)
   )
  )
  (block $label$break$L124
   (block $__rjti$11
    (loop $label$continue$L1
     (block $label$break$L1
      (loop $while-in
       (if
        (i32.gt_s
         (get_local $10)
         (i32.const -1)
        )
        (set_local $10
         (if (result i32)
          (i32.gt_s
           (get_local $4)
           (i32.sub
            (i32.const 2147483647)
            (get_local $10)
           )
          )
          (block (result i32)
           (i32.store
            (i32.const 52048)
            (i32.const 75)
           )
           (i32.const -1)
          )
          (i32.add
           (get_local $4)
           (get_local $10)
          )
         )
        )
       )
       (br_if $__rjti$11
        (i32.eqz
         (tee_local $6
          (i32.load8_s
           (tee_local $8
            (i32.load
             (get_local $14)
            )
           )
          )
         )
        )
       )
       (set_local $4
        (get_local $8)
       )
       (block $label$break$L15
        (block $__rjti$0
         (loop $label$continue$L12
          (block $label$break$L12
           (block $switch-default
            (block $switch-case0
             (block $switch-case
              (br_table $switch-case0 $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-case $switch-default
               (i32.shr_s
                (i32.shl
                 (get_local $6)
                 (i32.const 24)
                )
                (i32.const 24)
               )
              )
             )
             (br $__rjti$0)
            )
            (br $label$break$L12)
           )
           (i32.store
            (get_local $14)
            (tee_local $4
             (i32.add
              (get_local $4)
              (i32.const 1)
             )
            )
           )
           (set_local $6
            (i32.load8_s
             (get_local $4)
            )
           )
           (br $label$continue$L12)
          )
         )
         (br $label$break$L15)
        )
        (set_local $6
         (get_local $4)
        )
        (loop $while-in3
         (br_if $label$break$L15
          (i32.ne
           (i32.load8_s offset=1
            (get_local $6)
           )
           (i32.const 37)
          )
         )
         (set_local $4
          (i32.add
           (get_local $4)
           (i32.const 1)
          )
         )
         (i32.store
          (get_local $14)
          (tee_local $6
           (i32.add
            (get_local $6)
            (i32.const 2)
           )
          )
         )
         (br_if $while-in3
          (i32.eq
           (i32.load8_s
            (get_local $6)
           )
           (i32.const 37)
          )
         )
        )
       )
       (set_local $4
        (i32.sub
         (get_local $4)
         (get_local $8)
        )
       )
       (if
        (get_local $19)
        (call $_out
         (get_local $0)
         (get_local $8)
         (get_local $4)
        )
       )
       (br_if $while-in
        (get_local $4)
       )
      )
      (if
       (call $_isdigit
        (tee_local $4
         (i32.load8_s offset=1
          (tee_local $6
           (i32.load
            (get_local $14)
           )
          )
         )
        )
       )
       (block
        (set_local $16
         (i32.add
          (get_local $4)
          (i32.const -48)
         )
        )
        (set_local $4
         (if (result i32)
          (tee_local $12
           (i32.eq
            (i32.load8_s offset=2
             (get_local $6)
            )
            (i32.const 36)
           )
          )
          (i32.const 3)
          (i32.const 1)
         )
        )
        (if
         (get_local $12)
         (set_local $5
          (i32.const 1)
         )
        )
        (if
         (i32.eqz
          (get_local $12)
         )
         (set_local $16
          (i32.const -1)
         )
        )
       )
       (block
        (set_local $16
         (i32.const -1)
        )
        (set_local $4
         (i32.const 1)
        )
       )
      )
      (i32.store
       (get_local $14)
       (tee_local $4
        (i32.add
         (get_local $6)
         (get_local $4)
        )
       )
      )
      (if
       (i32.or
        (i32.gt_u
         (tee_local $6
          (i32.add
           (tee_local $12
            (i32.load8_s
             (get_local $4)
            )
           )
           (i32.const -32)
          )
         )
         (i32.const 31)
        )
        (i32.eqz
         (i32.and
          (i32.shl
           (i32.const 1)
           (get_local $6)
          )
          (i32.const 75913)
         )
        )
       )
       (set_local $6
        (i32.const 0)
       )
       (block
        (set_local $12
         (i32.const 0)
        )
        (loop $while-in5
         (set_local $6
          (i32.or
           (i32.shl
            (i32.const 1)
            (get_local $6)
           )
           (get_local $12)
          )
         )
         (i32.store
          (get_local $14)
          (tee_local $4
           (i32.add
            (get_local $4)
            (i32.const 1)
           )
          )
         )
         (if
          (i32.eqz
           (i32.or
            (i32.gt_u
             (tee_local $15
              (i32.add
               (tee_local $12
                (i32.load8_s
                 (get_local $4)
                )
               )
               (i32.const -32)
              )
             )
             (i32.const 31)
            )
            (i32.eqz
             (i32.and
              (i32.shl
               (i32.const 1)
               (get_local $15)
              )
              (i32.const 75913)
             )
            )
           )
          )
          (block
           (set_local $12
            (get_local $6)
           )
           (set_local $6
            (get_local $15)
           )
           (br $while-in5)
          )
         )
        )
       )
      )
      (block $do-once6
       (if
        (i32.eq
         (i32.load8_s
          (tee_local $5
           (if (result i32)
            (i32.eq
             (i32.and
              (get_local $12)
              (i32.const 255)
             )
             (i32.const 42)
            )
            (block (result i32)
             (set_local $4
              (block $__rjto$1 (result i32)
               (block $__rjti$1
                (br_if $__rjti$1
                 (i32.eqz
                  (call $_isdigit
                   (tee_local $15
                    (i32.load8_s
                     (tee_local $12
                      (i32.add
                       (get_local $4)
                       (i32.const 1)
                      )
                     )
                    )
                   )
                  )
                 )
                )
                (br_if $__rjti$1
                 (i32.ne
                  (i32.load8_s offset=2
                   (get_local $4)
                  )
                  (i32.const 36)
                 )
                )
                (i32.store
                 (i32.add
                  (get_local $3)
                  (i32.shl
                   (i32.add
                    (get_local $15)
                    (i32.const -48)
                   )
                   (i32.const 2)
                  )
                 )
                 (i32.const 10)
                )
                (set_local $5
                 (i32.wrap/i64
                  (i64.load
                   (i32.add
                    (get_local $2)
                    (i32.shl
                     (i32.add
                      (i32.load8_s
                       (get_local $12)
                      )
                      (i32.const -48)
                     )
                     (i32.const 3)
                    )
                   )
                  )
                 )
                )
                (set_local $7
                 (i32.const 1)
                )
                (br $__rjto$1
                 (i32.add
                  (get_local $4)
                  (i32.const 3)
                 )
                )
               )
               (if
                (get_local $5)
                (block
                 (set_local $10
                  (i32.const -1)
                 )
                 (br $label$break$L1)
                )
               )
               (if
                (get_local $19)
                (block
                 (set_local $5
                  (i32.load
                   (tee_local $4
                    (i32.and
                     (i32.add
                      (i32.load
                       (get_local $1)
                      )
                      (i32.const 3)
                     )
                     (i32.const -4)
                    )
                   )
                  )
                 )
                 (i32.store
                  (get_local $1)
                  (i32.add
                   (get_local $4)
                   (i32.const 4)
                  )
                 )
                )
                (set_local $5
                 (i32.const 0)
                )
               )
               (set_local $7
                (i32.const 0)
               )
               (get_local $12)
              )
             )
             (i32.store
              (get_local $14)
              (get_local $4)
             )
             (set_local $12
              (i32.or
               (get_local $6)
               (i32.const 8192)
              )
             )
             (set_local $15
              (i32.sub
               (i32.const 0)
               (get_local $5)
              )
             )
             (if
              (tee_local $9
               (i32.lt_s
                (get_local $5)
                (i32.const 0)
               )
              )
              (set_local $6
               (get_local $12)
              )
             )
             (if
              (i32.eqz
               (get_local $9)
              )
              (set_local $15
               (get_local $5)
              )
             )
             (set_local $12
              (get_local $7)
             )
             (get_local $4)
            )
            (block (result i32)
             (if
              (i32.lt_s
               (tee_local $15
                (call $_getint
                 (get_local $14)
                )
               )
               (i32.const 0)
              )
              (block
               (set_local $10
                (i32.const -1)
               )
               (br $label$break$L1)
              )
             )
             (set_local $12
              (get_local $5)
             )
             (i32.load
              (get_local $14)
             )
            )
           )
          )
         )
         (i32.const 46)
        )
        (block
         (if
          (i32.ne
           (i32.load8_s
            (tee_local $4
             (i32.add
              (get_local $5)
              (i32.const 1)
             )
            )
           )
           (i32.const 42)
          )
          (block
           (i32.store
            (get_local $14)
            (get_local $4)
           )
           (set_local $4
            (call $_getint
             (get_local $14)
            )
           )
           (set_local $5
            (i32.load
             (get_local $14)
            )
           )
           (br $do-once6)
          )
         )
         (if
          (call $_isdigit
           (tee_local $4
            (i32.load8_s
             (tee_local $7
              (i32.add
               (get_local $5)
               (i32.const 2)
              )
             )
            )
           )
          )
          (if
           (i32.eq
            (i32.load8_s offset=3
             (get_local $5)
            )
            (i32.const 36)
           )
           (block
            (i32.store
             (i32.add
              (get_local $3)
              (i32.shl
               (i32.add
                (get_local $4)
                (i32.const -48)
               )
               (i32.const 2)
              )
             )
             (i32.const 10)
            )
            (set_local $4
             (i32.wrap/i64
              (i64.load
               (i32.add
                (get_local $2)
                (i32.shl
                 (i32.add
                  (i32.load8_s
                   (get_local $7)
                  )
                  (i32.const -48)
                 )
                 (i32.const 3)
                )
               )
              )
             )
            )
            (i32.store
             (get_local $14)
             (tee_local $5
              (i32.add
               (get_local $5)
               (i32.const 4)
              )
             )
            )
            (br $do-once6)
           )
          )
         )
         (if
          (get_local $12)
          (block
           (set_local $10
            (i32.const -1)
           )
           (br $label$break$L1)
          )
         )
         (if
          (get_local $19)
          (block
           (set_local $4
            (i32.load
             (tee_local $5
              (i32.and
               (i32.add
                (i32.load
                 (get_local $1)
                )
                (i32.const 3)
               )
               (i32.const -4)
              )
             )
            )
           )
           (i32.store
            (get_local $1)
            (i32.add
             (get_local $5)
             (i32.const 4)
            )
           )
          )
          (set_local $4
           (i32.const 0)
          )
         )
         (i32.store
          (get_local $14)
          (get_local $7)
         )
         (set_local $5
          (get_local $7)
         )
        )
        (set_local $4
         (i32.const -1)
        )
       )
      )
      (set_local $13
       (i32.const 0)
      )
      (loop $while-in9
       (if
        (i32.gt_u
         (i32.add
          (i32.load8_s
           (get_local $5)
          )
          (i32.const -65)
         )
         (i32.const 57)
        )
        (block
         (set_local $10
          (i32.const -1)
         )
         (br $label$break$L1)
        )
       )
       (i32.store
        (get_local $14)
        (tee_local $9
         (i32.add
          (get_local $5)
          (i32.const 1)
         )
        )
       )
       (if
        (i32.lt_u
         (i32.add
          (tee_local $7
           (i32.and
            (tee_local $21
             (i32.load8_s
              (i32.add
               (i32.add
                (i32.mul
                 (get_local $13)
                 (i32.const 58)
                )
                (i32.load8_s
                 (get_local $5)
                )
               )
               (i32.const 38015)
              )
             )
            )
            (i32.const 255)
           )
          )
          (i32.const -1)
         )
         (i32.const 8)
        )
        (block
         (set_local $13
          (get_local $7)
         )
         (set_local $5
          (get_local $9)
         )
         (br $while-in9)
        )
       )
      )
      (if
       (i32.eqz
        (get_local $21)
       )
       (block
        (set_local $10
         (i32.const -1)
        )
        (br $label$break$L1)
       )
      )
      (set_local $9
       (i32.gt_s
        (get_local $16)
        (i32.const -1)
       )
      )
      (block $label$break$L74
       (block $__rjti$10
        (block $__rjti$9
         (if
          (i32.eq
           (get_local $21)
           (i32.const 19)
          )
          (if
           (get_local $9)
           (block
            (set_local $10
             (i32.const -1)
            )
            (br $label$break$L1)
           )
          )
          (block
           (if
            (get_local $9)
            (block
             (i32.store
              (i32.add
               (get_local $3)
               (i32.shl
                (get_local $16)
                (i32.const 2)
               )
              )
              (get_local $7)
             )
             (i64.store
              (get_local $11)
              (i64.load
               (i32.add
                (get_local $2)
                (i32.shl
                 (get_local $16)
                 (i32.const 3)
                )
               )
              )
             )
             (br $__rjti$9)
            )
           )
           (if
            (i32.eqz
             (get_local $19)
            )
            (block
             (set_local $10
              (i32.const 0)
             )
             (br $label$break$L1)
            )
           )
           (call $_pop_arg
            (get_local $11)
            (get_local $7)
            (get_local $1)
           )
           (br $__rjti$10)
          )
         )
        )
        (br_if $__rjti$10
         (get_local $19)
        )
        (set_local $4
         (i32.const 0)
        )
        (br $label$break$L74)
       )
       (set_local $7
        (i32.and
         (tee_local $5
          (i32.load8_s
           (get_local $5)
          )
         )
         (i32.const -33)
        )
       )
       (if
        (i32.eqz
         (i32.and
          (i32.ne
           (get_local $13)
           (i32.const 0)
          )
          (i32.eq
           (i32.and
            (get_local $5)
            (i32.const 15)
           )
           (i32.const 3)
          )
         )
        )
        (set_local $7
         (get_local $5)
        )
       )
       (set_local $9
        (i32.and
         (get_local $6)
         (i32.const -65537)
        )
       )
       (set_local $5
        (if (result i32)
         (i32.and
          (get_local $6)
          (i32.const 8192)
         )
         (get_local $9)
         (get_local $6)
        )
       )
       (block $__rjto$8
        (block $__rjti$8
         (block $__rjti$7
          (block $__rjti$6
           (block $__rjti$5
            (block $__rjti$4
             (block $__rjti$3
              (block $switch-default45
               (block $switch-case37
                (block $switch-case36
                 (block $switch-case35
                  (block $switch-case34
                   (block $switch-case33
                    (block $switch-case32
                     (block $switch-case31
                      (block $switch-case29
                       (block $switch-case28
                        (block $switch-case26
                         (block $switch-case25
                          (block $switch-case24
                           (br_table $switch-case37 $switch-default45 $switch-case35 $switch-default45 $switch-case37 $switch-case37 $switch-case37 $switch-default45 $switch-default45 $switch-default45 $switch-default45 $switch-default45 $switch-default45 $switch-default45 $switch-default45 $switch-default45 $switch-default45 $switch-default45 $switch-case36 $switch-default45 $switch-default45 $switch-default45 $switch-default45 $switch-case26 $switch-default45 $switch-default45 $switch-default45 $switch-default45 $switch-default45 $switch-default45 $switch-default45 $switch-default45 $switch-case37 $switch-default45 $switch-case32 $switch-case29 $switch-case37 $switch-case37 $switch-case37 $switch-default45 $switch-case29 $switch-default45 $switch-default45 $switch-default45 $switch-case33 $switch-case24 $switch-case28 $switch-case25 $switch-default45 $switch-default45 $switch-case34 $switch-default45 $switch-case31 $switch-default45 $switch-default45 $switch-case26 $switch-default45
                            (i32.sub
                             (get_local $7)
                             (i32.const 65)
                            )
                           )
                          )
                          (block $switch15
                           (block $switch-default23
                            (block $switch-case22
                             (block $switch-case21
                              (block $switch-case20
                               (block $switch-case19
                                (block $switch-case18
                                 (block $switch-case17
                                  (block $switch-case16
                                   (br_table $switch-case16 $switch-case17 $switch-case18 $switch-case19 $switch-case20 $switch-default23 $switch-case21 $switch-case22 $switch-default23
                                    (i32.shr_s
                                     (i32.shl
                                      (i32.and
                                       (get_local $13)
                                       (i32.const 255)
                                      )
                                      (i32.const 24)
                                     )
                                     (i32.const 24)
                                    )
                                   )
                                  )
                                  (i32.store
                                   (i32.load
                                    (get_local $11)
                                   )
                                   (get_local $10)
                                  )
                                  (set_local $4
                                   (i32.const 0)
                                  )
                                  (br $label$break$L74)
                                 )
                                 (i32.store
                                  (i32.load
                                   (get_local $11)
                                  )
                                  (get_local $10)
                                 )
                                 (set_local $4
                                  (i32.const 0)
                                 )
                                 (br $label$break$L74)
                                )
                                (i64.store
                                 (i32.load
                                  (get_local $11)
                                 )
                                 (i64.extend_s/i32
                                  (get_local $10)
                                 )
                                )
                                (set_local $4
                                 (i32.const 0)
                                )
                                (br $label$break$L74)
                               )
                               (i32.store16
                                (i32.load
                                 (get_local $11)
                                )
                                (get_local $10)
                               )
                               (set_local $4
                                (i32.const 0)
                               )
                               (br $label$break$L74)
                              )
                              (i32.store8
                               (i32.load
                                (get_local $11)
                               )
                               (get_local $10)
                              )
                              (set_local $4
                               (i32.const 0)
                              )
                              (br $label$break$L74)
                             )
                             (i32.store
                              (i32.load
                               (get_local $11)
                              )
                              (get_local $10)
                             )
                             (set_local $4
                              (i32.const 0)
                             )
                             (br $label$break$L74)
                            )
                            (i64.store
                             (i32.load
                              (get_local $11)
                             )
                             (i64.extend_s/i32
                              (get_local $10)
                             )
                            )
                            (set_local $4
                             (i32.const 0)
                            )
                            (br $label$break$L74)
                           )
                           (set_local $4
                            (i32.const 0)
                           )
                           (br $label$break$L74)
                          )
                         )
                         (set_local $7
                          (i32.const 120)
                         )
                         (if
                          (i32.le_u
                           (get_local $4)
                           (i32.const 8)
                          )
                          (set_local $4
                           (i32.const 8)
                          )
                         )
                         (set_local $5
                          (i32.or
                           (get_local $5)
                           (i32.const 8)
                          )
                         )
                         (br $__rjti$3)
                        )
                        (br $__rjti$3)
                       )
                       (set_local $6
                        (call $_fmt_o
                         (tee_local $17
                          (i64.load
                           (get_local $11)
                          )
                         )
                         (get_local $22)
                        )
                       )
                       (set_local $13
                        (i32.add
                         (tee_local $9
                          (i32.sub
                           (get_local $20)
                           (get_local $6)
                          )
                         )
                         (i32.const 1)
                        )
                       )
                       (set_local $7
                        (i32.const 0)
                       )
                       (set_local $8
                        (i32.const 51428)
                       )
                       (if
                        (i32.eqz
                         (i32.or
                          (i32.eqz
                           (i32.and
                            (get_local $5)
                            (i32.const 8)
                           )
                          )
                          (i32.gt_s
                           (get_local $4)
                           (get_local $9)
                          )
                         )
                        )
                        (set_local $4
                         (get_local $13)
                        )
                       )
                       (br $__rjti$7)
                      )
                      (if
                       (i64.lt_s
                        (tee_local $17
                         (i64.load
                          (get_local $11)
                         )
                        )
                        (i64.const 0)
                       )
                       (block
                        (i64.store
                         (get_local $11)
                         (tee_local $17
                          (i64.sub
                           (i64.const 0)
                           (get_local $17)
                          )
                         )
                        )
                        (set_local $7
                         (i32.const 1)
                        )
                        (set_local $8
                         (i32.const 51428)
                        )
                       )
                       (block
                        (set_local $6
                         (i32.eqz
                          (i32.and
                           (get_local $5)
                           (i32.const 2048)
                          )
                         )
                        )
                        (set_local $8
                         (if (result i32)
                          (i32.and
                           (get_local $5)
                           (i32.const 1)
                          )
                          (i32.const 51430)
                          (i32.const 51428)
                         )
                        )
                        (set_local $7
                         (i32.ne
                          (i32.and
                           (get_local $5)
                           (i32.const 2049)
                          )
                          (i32.const 0)
                         )
                        )
                        (if
                         (i32.eqz
                          (get_local $6)
                         )
                         (set_local $8
                          (i32.const 51429)
                         )
                        )
                       )
                      )
                      (br $__rjti$4)
                     )
                     (set_local $7
                      (i32.const 0)
                     )
                     (set_local $8
                      (i32.const 51428)
                     )
                     (set_local $17
                      (i64.load
                       (get_local $11)
                      )
                     )
                     (br $__rjti$4)
                    )
                    (i64.store8
                     (get_local $25)
                     (i64.load
                      (get_local $11)
                     )
                    )
                    (set_local $6
                     (get_local $25)
                    )
                    (set_local $7
                     (i32.const 0)
                    )
                    (set_local $13
                     (i32.const 51428)
                    )
                    (set_local $8
                     (i32.const 1)
                    )
                    (set_local $5
                     (get_local $9)
                    )
                    (set_local $4
                     (get_local $20)
                    )
                    (br $__rjto$8)
                   )
                   (set_local $6
                    (call $_strerror
                     (i32.load
                      (i32.const 52048)
                     )
                    )
                   )
                   (br $__rjti$5)
                  )
                  (if
                   (i32.eqz
                    (tee_local $6
                     (i32.load
                      (get_local $11)
                     )
                    )
                   )
                   (set_local $6
                    (i32.const 51438)
                   )
                  )
                  (br $__rjti$5)
                 )
                 (i64.store32
                  (get_local $24)
                  (i64.load
                   (get_local $11)
                  )
                 )
                 (i32.store
                  (get_local $27)
                  (i32.const 0)
                 )
                 (i32.store
                  (get_local $11)
                  (get_local $24)
                 )
                 (set_local $7
                  (i32.const -1)
                 )
                 (set_local $6
                  (get_local $24)
                 )
                 (br $__rjti$6)
                )
                (if
                 (get_local $4)
                 (block
                  (set_local $7
                   (get_local $4)
                  )
                  (set_local $6
                   (i32.load
                    (get_local $11)
                   )
                  )
                  (br $__rjti$6)
                 )
                 (block
                  (call $_pad_669
                   (get_local $0)
                   (i32.const 32)
                   (get_local $15)
                   (i32.const 0)
                   (get_local $5)
                  )
                  (set_local $4
                   (i32.const 0)
                  )
                  (br $__rjti$8)
                 )
                )
               )
               (set_local $4
                (call $_fmt_fp
                 (get_local $0)
                 (f64.load
                  (get_local $11)
                 )
                 (get_local $15)
                 (get_local $4)
                 (get_local $5)
                 (get_local $7)
                )
               )
               (br $label$break$L74)
              )
              (set_local $6
               (get_local $8)
              )
              (set_local $7
               (i32.const 0)
              )
              (set_local $13
               (i32.const 51428)
              )
              (set_local $8
               (get_local $4)
              )
              (set_local $4
               (get_local $20)
              )
              (br $__rjto$8)
             )
             (set_local $6
              (call $_fmt_x
               (tee_local $17
                (i64.load
                 (get_local $11)
                )
               )
               (get_local $22)
               (i32.and
                (get_local $7)
                (i32.const 32)
               )
              )
             )
             (set_local $8
              (i32.add
               (i32.shr_u
                (get_local $7)
                (i32.const 4)
               )
               (i32.const 51428)
              )
             )
             (if
              (tee_local $7
               (i32.or
                (i32.eqz
                 (i32.and
                  (get_local $5)
                  (i32.const 8)
                 )
                )
                (i64.eq
                 (get_local $17)
                 (i64.const 0)
                )
               )
              )
              (set_local $8
               (i32.const 51428)
              )
             )
             (set_local $7
              (if (result i32)
               (get_local $7)
               (i32.const 0)
               (i32.const 2)
              )
             )
             (br $__rjti$7)
            )
            (set_local $6
             (call $_fmt_u
              (get_local $17)
              (get_local $22)
             )
            )
            (br $__rjti$7)
           )
           (set_local $26
            (i32.eqz
             (tee_local $21
              (call $_memchr
               (get_local $6)
               (get_local $4)
              )
             )
            )
           )
           (set_local $5
            (i32.sub
             (get_local $21)
             (get_local $6)
            )
           )
           (set_local $16
            (i32.add
             (get_local $6)
             (get_local $4)
            )
           )
           (set_local $7
            (i32.const 0)
           )
           (set_local $13
            (i32.const 51428)
           )
           (set_local $8
            (if (result i32)
             (get_local $26)
             (get_local $4)
             (get_local $5)
            )
           )
           (set_local $5
            (get_local $9)
           )
           (set_local $4
            (if (result i32)
             (get_local $26)
             (get_local $16)
             (get_local $21)
            )
           )
           (br $__rjto$8)
          )
          (set_local $8
           (get_local $6)
          )
          (set_local $4
           (i32.const 0)
          )
          (block $__rjto$2
           (block $__rjti$2
            (loop $while-in48
             (if
              (tee_local $9
               (i32.load
                (get_local $8)
               )
              )
              (block
               (br_if $__rjti$2
                (i32.or
                 (tee_local $13
                  (i32.lt_s
                   (tee_local $9
                    (call $_wctomb
                     (get_local $23)
                     (get_local $9)
                    )
                   )
                   (i32.const 0)
                  )
                 )
                 (i32.gt_u
                  (get_local $9)
                  (i32.sub
                   (get_local $7)
                   (get_local $4)
                  )
                 )
                )
               )
               (set_local $8
                (i32.add
                 (get_local $8)
                 (i32.const 4)
                )
               )
               (br_if $while-in48
                (i32.gt_u
                 (get_local $7)
                 (tee_local $4
                  (i32.add
                   (get_local $9)
                   (get_local $4)
                  )
                 )
                )
               )
              )
             )
            )
            (br $__rjto$2)
           )
           (if
            (get_local $13)
            (block
             (set_local $10
              (i32.const -1)
             )
             (br $label$break$L1)
            )
           )
          )
          (call $_pad_669
           (get_local $0)
           (i32.const 32)
           (get_local $15)
           (get_local $4)
           (get_local $5)
          )
          (if
           (get_local $4)
           (block
            (set_local $8
             (i32.const 0)
            )
            (loop $while-in50
             (br_if $__rjti$8
              (i32.eqz
               (tee_local $7
                (i32.load
                 (get_local $6)
                )
               )
              )
             )
             (br_if $__rjti$8
              (i32.gt_s
               (tee_local $8
                (i32.add
                 (tee_local $7
                  (call $_wctomb
                   (get_local $23)
                   (get_local $7)
                  )
                 )
                 (get_local $8)
                )
               )
               (get_local $4)
              )
             )
             (set_local $6
              (i32.add
               (get_local $6)
               (i32.const 4)
              )
             )
             (call $_out
              (get_local $0)
              (get_local $23)
              (get_local $7)
             )
             (br_if $while-in50
              (i32.lt_u
               (get_local $8)
               (get_local $4)
              )
             )
            )
            (br $__rjti$8)
           )
           (block
            (set_local $4
             (i32.const 0)
            )
            (br $__rjti$8)
           )
          )
         )
         (set_local $9
          (i32.and
           (get_local $5)
           (i32.const -65537)
          )
         )
         (if
          (i32.gt_s
           (get_local $4)
           (i32.const -1)
          )
          (set_local $5
           (get_local $9)
          )
         )
         (set_local $9
          (i32.or
           (i32.ne
            (get_local $4)
            (i32.const 0)
           )
           (tee_local $13
            (i64.ne
             (get_local $17)
             (i64.const 0)
            )
           )
          )
         )
         (if
          (i32.le_s
           (get_local $4)
           (tee_local $13
            (i32.add
             (i32.sub
              (get_local $20)
              (get_local $6)
             )
             (i32.and
              (i32.xor
               (get_local $13)
               (i32.const 1)
              )
              (i32.const 1)
             )
            )
           )
          )
          (set_local $4
           (get_local $13)
          )
         )
         (if
          (i32.eqz
           (get_local $9)
          )
          (set_local $4
           (i32.const 0)
          )
         )
         (if
          (i32.eqz
           (get_local $9)
          )
          (set_local $6
           (get_local $22)
          )
         )
         (set_local $13
          (get_local $8)
         )
         (set_local $8
          (get_local $4)
         )
         (set_local $4
          (get_local $20)
         )
         (br $__rjto$8)
        )
        (call $_pad_669
         (get_local $0)
         (i32.const 32)
         (get_local $15)
         (get_local $4)
         (i32.xor
          (get_local $5)
          (i32.const 8192)
         )
        )
        (if
         (i32.gt_s
          (get_local $15)
          (get_local $4)
         )
         (set_local $4
          (get_local $15)
         )
        )
        (br $label$break$L74)
       )
       (call $_pad_669
        (get_local $0)
        (i32.const 32)
        (tee_local $4
         (if (result i32)
          (i32.lt_s
           (get_local $15)
           (tee_local $8
            (i32.add
             (tee_local $16
              (if (result i32)
               (i32.lt_s
                (get_local $8)
                (tee_local $9
                 (i32.sub
                  (get_local $4)
                  (get_local $6)
                 )
                )
               )
               (get_local $9)
               (get_local $8)
              )
             )
             (get_local $7)
            )
           )
          )
          (get_local $8)
          (get_local $15)
         )
        )
        (get_local $8)
        (get_local $5)
       )
       (call $_out
        (get_local $0)
        (get_local $13)
        (get_local $7)
       )
       (call $_pad_669
        (get_local $0)
        (i32.const 48)
        (get_local $4)
        (get_local $8)
        (i32.xor
         (get_local $5)
         (i32.const 65536)
        )
       )
       (call $_pad_669
        (get_local $0)
        (i32.const 48)
        (get_local $16)
        (get_local $9)
        (i32.const 0)
       )
       (call $_out
        (get_local $0)
        (get_local $6)
        (get_local $9)
       )
       (call $_pad_669
        (get_local $0)
        (i32.const 32)
        (get_local $4)
        (get_local $8)
        (i32.xor
         (get_local $5)
         (i32.const 8192)
        )
       )
      )
      (set_local $5
       (get_local $12)
      )
      (br $label$continue$L1)
     )
    )
    (br $label$break$L124)
   )
   (if
    (i32.eqz
     (get_local $0)
    )
    (if
     (get_local $5)
     (block
      (set_local $0
       (i32.const 1)
      )
      (loop $while-in53
       (if
        (tee_local $4
         (i32.load
          (i32.add
           (get_local $3)
           (i32.shl
            (get_local $0)
            (i32.const 2)
           )
          )
         )
        )
        (block
         (call $_pop_arg
          (i32.add
           (get_local $2)
           (i32.shl
            (get_local $0)
            (i32.const 3)
           )
          )
          (get_local $4)
          (get_local $1)
         )
         (br_if $while-in53
          (i32.lt_u
           (tee_local $0
            (i32.add
             (get_local $0)
             (i32.const 1)
            )
           )
           (i32.const 10)
          )
         )
         (set_local $10
          (i32.const 1)
         )
         (br $label$break$L124)
        )
       )
      )
      (set_local $1
       (i32.const 0)
      )
      (loop $while-in55
       (if
        (get_local $1)
        (block
         (set_local $10
          (i32.const -1)
         )
         (br $label$break$L124)
        )
       )
       (set_local $10
        (if (result i32)
         (i32.lt_u
          (tee_local $0
           (i32.add
            (get_local $0)
            (i32.const 1)
           )
          )
          (i32.const 10)
         )
         (block
          (set_local $1
           (i32.load
            (i32.add
             (get_local $3)
             (i32.shl
              (get_local $0)
              (i32.const 2)
             )
            )
           )
          )
          (br $while-in55)
         )
         (i32.const 1)
        )
       )
      )
     )
     (set_local $10
      (i32.const 0)
     )
    )
   )
  )
  (set_global $STACKTOP
   (get_local $18)
  )
  (get_local $10)
 )
 (func $_out (; 449 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (if
   (i32.eqz
    (i32.and
     (i32.load
      (get_local $0)
     )
     (i32.const 32)
    )
   )
   (call $___fwritex
    (get_local $1)
    (get_local $2)
    (get_local $0)
   )
  )
 )
 (func $_getint (; 450 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (if
   (call $_isdigit
    (tee_local $1
     (i32.load8_s
      (tee_local $2
       (i32.load
        (get_local $0)
       )
      )
     )
    )
   )
   (loop $while-in
    (set_local $1
     (i32.add
      (i32.add
       (i32.mul
        (get_local $3)
        (i32.const 10)
       )
       (i32.const -48)
      )
      (i32.shr_s
       (i32.shl
        (get_local $1)
        (i32.const 24)
       )
       (i32.const 24)
      )
     )
    )
    (i32.store
     (get_local $0)
     (tee_local $2
      (i32.add
       (get_local $2)
       (i32.const 1)
      )
     )
    )
    (if
     (call $_isdigit
      (tee_local $4
       (i32.load8_s
        (get_local $2)
       )
      )
     )
     (block
      (set_local $3
       (get_local $1)
      )
      (set_local $1
       (get_local $4)
      )
      (br $while-in)
     )
    )
   )
   (set_local $1
    (i32.const 0)
   )
  )
  (get_local $1)
 )
 (func $_pop_arg (; 451 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 f64)
  (local $5 i64)
  (block $label$break$L1
   (if
    (i32.le_u
     (get_local $1)
     (i32.const 20)
    )
    (block $switch-default
     (block $switch-case9
      (block $switch-case8
       (block $switch-case7
        (block $switch-case6
         (block $switch-case5
          (block $switch-case4
           (block $switch-case3
            (block $switch-case2
             (block $switch-case1
              (block $switch-case
               (br_table $switch-case $switch-case1 $switch-case2 $switch-case3 $switch-case4 $switch-case5 $switch-case6 $switch-case7 $switch-case8 $switch-case9 $switch-default
                (i32.sub
                 (get_local $1)
                 (i32.const 9)
                )
               )
              )
              (set_local $3
               (i32.load
                (tee_local $1
                 (i32.and
                  (i32.add
                   (i32.load
                    (get_local $2)
                   )
                   (i32.const 3)
                  )
                  (i32.const -4)
                 )
                )
               )
              )
              (i32.store
               (get_local $2)
               (i32.add
                (get_local $1)
                (i32.const 4)
               )
              )
              (i32.store
               (get_local $0)
               (get_local $3)
              )
              (br $label$break$L1)
             )
             (set_local $3
              (i32.load
               (tee_local $1
                (i32.and
                 (i32.add
                  (i32.load
                   (get_local $2)
                  )
                  (i32.const 3)
                 )
                 (i32.const -4)
                )
               )
              )
             )
             (i32.store
              (get_local $2)
              (i32.add
               (get_local $1)
               (i32.const 4)
              )
             )
             (i64.store
              (get_local $0)
              (i64.extend_s/i32
               (get_local $3)
              )
             )
             (br $label$break$L1)
            )
            (set_local $3
             (i32.load
              (tee_local $1
               (i32.and
                (i32.add
                 (i32.load
                  (get_local $2)
                 )
                 (i32.const 3)
                )
                (i32.const -4)
               )
              )
             )
            )
            (i32.store
             (get_local $2)
             (i32.add
              (get_local $1)
              (i32.const 4)
             )
            )
            (i64.store
             (get_local $0)
             (i64.extend_u/i32
              (get_local $3)
             )
            )
            (br $label$break$L1)
           )
           (set_local $5
            (i64.load
             (tee_local $1
              (i32.and
               (i32.add
                (i32.load
                 (get_local $2)
                )
                (i32.const 7)
               )
               (i32.const -8)
              )
             )
            )
           )
           (i32.store
            (get_local $2)
            (i32.add
             (get_local $1)
             (i32.const 8)
            )
           )
           (i64.store
            (get_local $0)
            (get_local $5)
           )
           (br $label$break$L1)
          )
          (set_local $3
           (i32.load
            (tee_local $1
             (i32.and
              (i32.add
               (i32.load
                (get_local $2)
               )
               (i32.const 3)
              )
              (i32.const -4)
             )
            )
           )
          )
          (i32.store
           (get_local $2)
           (i32.add
            (get_local $1)
            (i32.const 4)
           )
          )
          (i64.store
           (get_local $0)
           (i64.extend_s/i32
            (i32.shr_s
             (i32.shl
              (i32.and
               (get_local $3)
               (i32.const 65535)
              )
              (i32.const 16)
             )
             (i32.const 16)
            )
           )
          )
          (br $label$break$L1)
         )
         (set_local $3
          (i32.load
           (tee_local $1
            (i32.and
             (i32.add
              (i32.load
               (get_local $2)
              )
              (i32.const 3)
             )
             (i32.const -4)
            )
           )
          )
         )
         (i32.store
          (get_local $2)
          (i32.add
           (get_local $1)
           (i32.const 4)
          )
         )
         (i64.store
          (get_local $0)
          (i64.extend_u/i32
           (i32.and
            (get_local $3)
            (i32.const 65535)
           )
          )
         )
         (br $label$break$L1)
        )
        (set_local $3
         (i32.load
          (tee_local $1
           (i32.and
            (i32.add
             (i32.load
              (get_local $2)
             )
             (i32.const 3)
            )
            (i32.const -4)
           )
          )
         )
        )
        (i32.store
         (get_local $2)
         (i32.add
          (get_local $1)
          (i32.const 4)
         )
        )
        (i64.store
         (get_local $0)
         (i64.extend_s/i32
          (i32.shr_s
           (i32.shl
            (i32.and
             (get_local $3)
             (i32.const 255)
            )
            (i32.const 24)
           )
           (i32.const 24)
          )
         )
        )
        (br $label$break$L1)
       )
       (set_local $3
        (i32.load
         (tee_local $1
          (i32.and
           (i32.add
            (i32.load
             (get_local $2)
            )
            (i32.const 3)
           )
           (i32.const -4)
          )
         )
        )
       )
       (i32.store
        (get_local $2)
        (i32.add
         (get_local $1)
         (i32.const 4)
        )
       )
       (i64.store
        (get_local $0)
        (i64.extend_u/i32
         (i32.and
          (get_local $3)
          (i32.const 255)
         )
        )
       )
       (br $label$break$L1)
      )
      (set_local $4
       (f64.load
        (tee_local $1
         (i32.and
          (i32.add
           (i32.load
            (get_local $2)
           )
           (i32.const 7)
          )
          (i32.const -8)
         )
        )
       )
      )
      (i32.store
       (get_local $2)
       (i32.add
        (get_local $1)
        (i32.const 8)
       )
      )
      (f64.store
       (get_local $0)
       (get_local $4)
      )
      (br $label$break$L1)
     )
     (set_local $4
      (f64.load
       (tee_local $1
        (i32.and
         (i32.add
          (i32.load
           (get_local $2)
          )
          (i32.const 7)
         )
         (i32.const -8)
        )
       )
      )
     )
     (i32.store
      (get_local $2)
      (i32.add
       (get_local $1)
       (i32.const 8)
      )
     )
     (f64.store
      (get_local $0)
      (get_local $4)
     )
    )
   )
  )
 )
 (func $_fmt_x (; 452 ;) (; has Stack IR ;) (param $0 i64) (param $1 i32) (param $2 i32) (result i32)
  (if
   (i64.ne
    (get_local $0)
    (i64.const 0)
   )
   (loop $while-in
    (i32.store8
     (tee_local $1
      (i32.add
       (get_local $1)
       (i32.const -1)
      )
     )
     (i32.or
      (i32.load8_u
       (i32.add
        (i32.and
         (i32.wrap/i64
          (get_local $0)
         )
         (i32.const 15)
        )
        (i32.const 38544)
       )
      )
      (get_local $2)
     )
    )
    (br_if $while-in
     (i64.ne
      (tee_local $0
       (i64.shr_u
        (get_local $0)
        (i64.const 4)
       )
      )
      (i64.const 0)
     )
    )
   )
  )
  (get_local $1)
 )
 (func $_fmt_o (; 453 ;) (; has Stack IR ;) (param $0 i64) (param $1 i32) (result i32)
  (if
   (i64.ne
    (get_local $0)
    (i64.const 0)
   )
   (loop $while-in
    (i32.store8
     (tee_local $1
      (i32.add
       (get_local $1)
       (i32.const -1)
      )
     )
     (i32.or
      (i32.and
       (i32.wrap/i64
        (get_local $0)
       )
       (i32.const 7)
      )
      (i32.const 48)
     )
    )
    (br_if $while-in
     (i64.ne
      (tee_local $0
       (i64.shr_u
        (get_local $0)
        (i64.const 3)
       )
      )
      (i64.const 0)
     )
    )
   )
  )
  (get_local $1)
 )
 (func $_fmt_u (; 454 ;) (; has Stack IR ;) (param $0 i64) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i64)
  (local $4 i32)
  (set_local $2
   (i32.wrap/i64
    (get_local $0)
   )
  )
  (if
   (i64.gt_u
    (get_local $0)
    (i64.const 4294967295)
   )
   (block
    (loop $while-in
     (i32.store8
      (tee_local $1
       (i32.add
        (get_local $1)
        (i32.const -1)
       )
      )
      (i32.or
       (i32.and
        (i32.wrap/i64
         (i64.add
          (get_local $0)
          (i64.mul
           (tee_local $3
            (i64.div_u
             (get_local $0)
             (i64.const 10)
            )
           )
           (i64.const -10)
          )
         )
        )
        (i32.const 255)
       )
       (i32.const 48)
      )
     )
     (if
      (i64.gt_u
       (get_local $0)
       (i64.const 42949672959)
      )
      (block
       (set_local $0
        (get_local $3)
       )
       (br $while-in)
      )
     )
    )
    (set_local $2
     (i32.wrap/i64
      (get_local $3)
     )
    )
   )
  )
  (if
   (get_local $2)
   (loop $while-in1
    (i32.store8
     (tee_local $1
      (i32.add
       (get_local $1)
       (i32.const -1)
      )
     )
     (i32.or
      (i32.add
       (get_local $2)
       (i32.mul
        (tee_local $4
         (i32.div_u
          (get_local $2)
          (i32.const 10)
         )
        )
        (i32.const -10)
       )
      )
      (i32.const 48)
     )
    )
    (if
     (i32.ge_u
      (get_local $2)
      (i32.const 10)
     )
     (block
      (set_local $2
       (get_local $4)
      )
      (br $while-in1)
     )
    )
   )
  )
  (get_local $1)
 )
 (func $_strerror (; 455 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (call $___strerror_l
   (get_local $0)
  )
 )
 (func $_memchr (; 456 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (block $label$break$L6
   (if
    (i32.and
     (tee_local $2
      (i32.ne
       (get_local $1)
       (i32.const 0)
      )
     )
     (i32.ne
      (i32.and
       (get_local $0)
       (i32.const 3)
      )
      (i32.const 0)
     )
    )
    (loop $while-in
     (br_if $label$break$L6
      (i32.eqz
       (i32.load8_s
        (get_local $0)
       )
      )
     )
     (br_if $while-in
      (i32.and
       (tee_local $2
        (i32.ne
         (tee_local $1
          (i32.add
           (get_local $1)
           (i32.const -1)
          )
         )
         (i32.const 0)
        )
       )
       (i32.ne
        (i32.and
         (tee_local $0
          (i32.add
           (get_local $0)
           (i32.const 1)
          )
         )
         (i32.const 3)
        )
        (i32.const 0)
       )
      )
     )
    )
   )
   (block $do-once
    (if
     (get_local $2)
     (block
      (if
       (i32.eqz
        (i32.load8_s
         (get_local $0)
        )
       )
       (block
        (br_if $do-once
         (i32.eqz
          (get_local $1)
         )
        )
        (br $label$break$L6)
       )
      )
      (block $__rjto$0
       (if
        (i32.gt_u
         (get_local $1)
         (i32.const 3)
        )
        (loop $while-in4
         (br_if $__rjto$0
          (i32.and
           (i32.xor
            (i32.and
             (tee_local $2
              (i32.load
               (get_local $0)
              )
             )
             (i32.const -2139062144)
            )
            (i32.const -2139062144)
           )
           (i32.add
            (get_local $2)
            (i32.const -16843009)
           )
          )
         )
         (set_local $0
          (i32.add
           (get_local $0)
           (i32.const 4)
          )
         )
         (br_if $while-in4
          (i32.gt_u
           (tee_local $1
            (i32.add
             (get_local $1)
             (i32.const -4)
            )
           )
           (i32.const 3)
          )
         )
        )
       )
       (br_if $do-once
        (i32.eqz
         (get_local $1)
        )
       )
      )
      (loop $while-in6
       (br_if $label$break$L6
        (i32.eqz
         (i32.load8_s
          (get_local $0)
         )
        )
       )
       (set_local $0
        (i32.add
         (get_local $0)
         (i32.const 1)
        )
       )
       (br_if $while-in6
        (tee_local $1
         (i32.add
          (get_local $1)
          (i32.const -1)
         )
        )
       )
      )
     )
    )
   )
   (set_local $0
    (i32.const 0)
   )
  )
  (get_local $0)
 )
 (func $_pad_669 (; 457 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (set_local $5
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.const 256)
   )
  )
  (if
   (i32.and
    (i32.gt_s
     (get_local $2)
     (get_local $3)
    )
    (i32.eqz
     (i32.and
      (get_local $4)
      (i32.const 73728)
     )
    )
   )
   (block
    (drop
     (call $_memset
      (get_local $5)
      (i32.shr_s
       (i32.shl
        (get_local $1)
        (i32.const 24)
       )
       (i32.const 24)
      )
      (if (result i32)
       (i32.lt_u
        (tee_local $2
         (i32.sub
          (get_local $2)
          (get_local $3)
         )
        )
        (i32.const 256)
       )
       (get_local $2)
       (i32.const 256)
      )
     )
    )
    (if
     (i32.gt_u
      (get_local $2)
      (i32.const 255)
     )
     (block
      (set_local $1
       (get_local $2)
      )
      (loop $while-in
       (call $_out
        (get_local $0)
        (get_local $5)
        (i32.const 256)
       )
       (br_if $while-in
        (i32.gt_u
         (tee_local $1
          (i32.add
           (get_local $1)
           (i32.const -256)
          )
         )
         (i32.const 255)
        )
       )
      )
      (set_local $2
       (i32.and
        (get_local $2)
        (i32.const 255)
       )
      )
     )
    )
    (call $_out
     (get_local $0)
     (get_local $5)
     (get_local $2)
    )
   )
  )
  (set_global $STACKTOP
   (get_local $5)
  )
 )
 (func $_wctomb (; 458 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (if (result i32)
   (get_local $0)
   (call $_wcrtomb
    (get_local $0)
    (get_local $1)
   )
   (i32.const 0)
  )
 )
 (func $_fmt_fp (; 459 ;) (; has Stack IR ;) (param $0 i32) (param $1 f64) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (result i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 f64)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i64)
  (local $23 i32)
  (local $24 f64)
  (local $25 i32)
  (local $26 i32)
  (local $27 i32)
  (local $28 i64)
  (local $29 i64)
  (local $30 f64)
  (set_local $25
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.const 560)
   )
  )
  (set_local $9
   (i32.add
    (get_local $25)
    (i32.const 32)
   )
  )
  (set_local $18
   (tee_local $14
    (get_local $25)
   )
  )
  (i32.store
   (tee_local $10
    (i32.add
     (get_local $14)
     (i32.const 536)
    )
   )
   (i32.const 0)
  )
  (set_local $15
   (i32.add
    (tee_local $11
     (i32.add
      (get_local $14)
      (i32.const 540)
     )
    )
    (i32.const 12)
   )
  )
  (if
   (i64.lt_s
    (tee_local $22
     (call $___DOUBLE_BITS_670
      (get_local $1)
     )
    )
    (i64.const 0)
   )
   (block
    (set_local $22
     (call $___DOUBLE_BITS_670
      (tee_local $1
       (f64.neg
        (get_local $1)
       )
      )
     )
    )
    (set_local $19
     (i32.const 1)
    )
    (set_local $16
     (i32.const 51445)
    )
   )
   (block
    (set_local $7
     (i32.eqz
      (i32.and
       (get_local $4)
       (i32.const 2048)
      )
     )
    )
    (set_local $16
     (if (result i32)
      (i32.and
       (get_local $4)
       (i32.const 1)
      )
      (i32.const 51451)
      (i32.const 51446)
     )
    )
    (set_local $19
     (i32.ne
      (i32.and
       (get_local $4)
       (i32.const 2049)
      )
      (i32.const 0)
     )
    )
    (if
     (i32.eqz
      (get_local $7)
     )
     (set_local $16
      (i32.const 51448)
     )
    )
   )
  )
  (set_local $0
   (block $do-once (result i32)
    (if (result i32)
     (i64.eq
      (i64.and
       (get_local $22)
       (i64.const 9218868437227405312)
      )
      (i64.const 9218868437227405312)
     )
     (block (result i32)
      (set_local $5
       (if (result i32)
        (tee_local $3
         (i32.ne
          (i32.and
           (get_local $5)
           (i32.const 32)
          )
          (i32.const 0)
         )
        )
        (i32.const 51464)
        (i32.const 51468)
       )
      )
      (set_local $7
       (f64.ne
        (get_local $1)
        (get_local $1)
       )
      )
      (set_local $3
       (if (result i32)
        (get_local $3)
        (i32.const 51472)
        (i32.const 51476)
       )
      )
      (if
       (get_local $7)
       (set_local $5
        (get_local $3)
       )
      )
      (call $_pad_669
       (get_local $0)
       (i32.const 32)
       (get_local $2)
       (tee_local $3
        (i32.add
         (get_local $19)
         (i32.const 3)
        )
       )
       (i32.and
        (get_local $4)
        (i32.const -65537)
       )
      )
      (call $_out
       (get_local $0)
       (get_local $16)
       (get_local $19)
      )
      (call $_out
       (get_local $0)
       (get_local $5)
       (i32.const 3)
      )
      (call $_pad_669
       (get_local $0)
       (i32.const 32)
       (get_local $2)
       (get_local $3)
       (i32.xor
        (get_local $4)
        (i32.const 8192)
       )
      )
      (get_local $3)
     )
     (block (result i32)
      (if
       (tee_local $7
        (f64.ne
         (tee_local $1
          (f64.mul
           (call $_frexpl
            (get_local $1)
            (get_local $10)
           )
           (f64.const 2)
          )
         )
         (f64.const 0)
        )
       )
       (i32.store
        (get_local $10)
        (i32.add
         (i32.load
          (get_local $10)
         )
         (i32.const -1)
        )
       )
      )
      (if
       (i32.eq
        (tee_local $13
         (i32.or
          (get_local $5)
          (i32.const 32)
         )
        )
        (i32.const 97)
       )
       (block
        (set_local $7
         (i32.add
          (get_local $16)
          (i32.const 9)
         )
        )
        (if
         (tee_local $9
          (i32.and
           (get_local $5)
           (i32.const 32)
          )
         )
         (set_local $16
          (get_local $7)
         )
        )
        (set_local $8
         (i32.or
          (get_local $19)
          (i32.const 2)
         )
        )
        (if
         (i32.eqz
          (i32.or
           (i32.gt_u
            (get_local $3)
            (i32.const 11)
           )
           (i32.eqz
            (tee_local $7
             (i32.sub
              (i32.const 12)
              (get_local $3)
             )
            )
           )
          )
         )
         (block
          (set_local $17
           (f64.const 8)
          )
          (loop $while-in
           (set_local $17
            (f64.mul
             (get_local $17)
             (f64.const 16)
            )
           )
           (br_if $while-in
            (tee_local $7
             (i32.add
              (get_local $7)
              (i32.const -1)
             )
            )
           )
          )
          (set_local $1
           (if (result f64)
            (i32.eq
             (i32.load8_s
              (get_local $16)
             )
             (i32.const 45)
            )
            (f64.neg
             (f64.add
              (get_local $17)
              (f64.sub
               (f64.neg
                (get_local $1)
               )
               (get_local $17)
              )
             )
            )
            (f64.sub
             (f64.add
              (get_local $1)
              (get_local $17)
             )
             (get_local $17)
            )
           )
          )
         )
        )
        (set_local $7
         (i32.sub
          (i32.const 0)
          (tee_local $6
           (i32.load
            (get_local $10)
           )
          )
         )
        )
        (if
         (i32.eq
          (tee_local $7
           (call $_fmt_u
            (i64.extend_s/i32
             (if (result i32)
              (i32.lt_s
               (get_local $6)
               (i32.const 0)
              )
              (get_local $7)
              (get_local $6)
             )
            )
            (get_local $15)
           )
          )
          (get_local $15)
         )
         (i32.store8
          (tee_local $7
           (i32.add
            (get_local $11)
            (i32.const 11)
           )
          )
          (i32.const 48)
         )
        )
        (i32.store8
         (i32.add
          (get_local $7)
          (i32.const -1)
         )
         (i32.add
          (i32.and
           (i32.shr_s
            (get_local $6)
            (i32.const 31)
           )
           (i32.const 2)
          )
          (i32.const 43)
         )
        )
        (i32.store8
         (tee_local $7
          (i32.add
           (get_local $7)
           (i32.const -2)
          )
         )
         (i32.add
          (get_local $5)
          (i32.const 15)
         )
        )
        (set_local $11
         (i32.lt_s
          (get_local $3)
          (i32.const 1)
         )
        )
        (set_local $12
         (i32.eqz
          (i32.and
           (get_local $4)
           (i32.const 8)
          )
         )
        )
        (set_local $5
         (get_local $14)
        )
        (loop $while-in3
         (i32.store8
          (get_local $5)
          (i32.or
           (get_local $9)
           (i32.load8_u
            (i32.add
             (tee_local $6
              (i32.trunc_s/f64
               (get_local $1)
              )
             )
             (i32.const 38544)
            )
           )
          )
         )
         (set_local $1
          (f64.mul
           (f64.sub
            (get_local $1)
            (f64.convert_s/i32
             (get_local $6)
            )
           )
           (f64.const 16)
          )
         )
         (set_local $5
          (if (result i32)
           (i32.eq
            (i32.sub
             (tee_local $6
              (i32.add
               (get_local $5)
               (i32.const 1)
              )
             )
             (get_local $18)
            )
            (i32.const 1)
           )
           (if (result i32)
            (i32.and
             (get_local $12)
             (i32.and
              (get_local $11)
              (f64.eq
               (get_local $1)
               (f64.const 0)
              )
             )
            )
            (get_local $6)
            (block (result i32)
             (i32.store8
              (get_local $6)
              (i32.const 46)
             )
             (i32.add
              (get_local $5)
              (i32.const 2)
             )
            )
           )
           (get_local $6)
          )
         )
         (br_if $while-in3
          (f64.ne
           (get_local $1)
           (f64.const 0)
          )
         )
        )
        (set_local $3
         (block $__rjto$0 (result i32)
          (block $__rjti$0
           (br_if $__rjti$0
            (i32.eqz
             (get_local $3)
            )
           )
           (br_if $__rjti$0
            (i32.ge_s
             (i32.add
              (i32.sub
               (i32.const -2)
               (get_local $18)
              )
              (get_local $5)
             )
             (get_local $3)
            )
           )
           (set_local $9
            (i32.sub
             (i32.add
              (i32.add
               (get_local $3)
               (i32.const 2)
              )
              (get_local $15)
             )
             (get_local $7)
            )
           )
           (br $__rjto$0
            (get_local $7)
           )
          )
          (set_local $9
           (i32.add
            (i32.sub
             (i32.sub
              (get_local $15)
              (get_local $18)
             )
             (get_local $7)
            )
            (get_local $5)
           )
          )
          (get_local $7)
         )
        )
        (call $_pad_669
         (get_local $0)
         (i32.const 32)
         (get_local $2)
         (tee_local $6
          (i32.add
           (get_local $9)
           (get_local $8)
          )
         )
         (get_local $4)
        )
        (call $_out
         (get_local $0)
         (get_local $16)
         (get_local $8)
        )
        (call $_pad_669
         (get_local $0)
         (i32.const 48)
         (get_local $2)
         (get_local $6)
         (i32.xor
          (get_local $4)
          (i32.const 65536)
         )
        )
        (call $_out
         (get_local $0)
         (get_local $14)
         (tee_local $5
          (i32.sub
           (get_local $5)
           (get_local $18)
          )
         )
        )
        (call $_pad_669
         (get_local $0)
         (i32.const 48)
         (i32.sub
          (get_local $9)
          (i32.add
           (get_local $5)
           (tee_local $3
            (i32.sub
             (get_local $15)
             (get_local $3)
            )
           )
          )
         )
         (i32.const 0)
         (i32.const 0)
        )
        (call $_out
         (get_local $0)
         (get_local $7)
         (get_local $3)
        )
        (call $_pad_669
         (get_local $0)
         (i32.const 32)
         (get_local $2)
         (get_local $6)
         (i32.xor
          (get_local $4)
          (i32.const 8192)
         )
        )
        (br $do-once
         (get_local $6)
        )
       )
      )
      (if
       (get_local $7)
       (block
        (i32.store
         (get_local $10)
         (tee_local $8
          (i32.add
           (i32.load
            (get_local $10)
           )
           (i32.const -28)
          )
         )
        )
        (set_local $1
         (f64.mul
          (get_local $1)
          (f64.const 268435456)
         )
        )
       )
       (set_local $8
        (i32.load
         (get_local $10)
        )
       )
      )
      (set_local $7
       (i32.add
        (get_local $9)
        (i32.const 288)
       )
      )
      (set_local $6
       (if (result i32)
        (i32.lt_s
         (get_local $8)
         (i32.const 0)
        )
        (get_local $9)
        (tee_local $9
         (get_local $7)
        )
       )
      )
      (loop $while-in5
       (i32.store
        (get_local $6)
        (tee_local $7
         (i32.trunc_u/f64
          (get_local $1)
         )
        )
       )
       (set_local $6
        (i32.add
         (get_local $6)
         (i32.const 4)
        )
       )
       (br_if $while-in5
        (f64.ne
         (tee_local $1
          (f64.mul
           (f64.sub
            (get_local $1)
            (f64.convert_u/i32
             (get_local $7)
            )
           )
           (f64.const 1e9)
          )
         )
         (f64.const 0)
        )
       )
      )
      (if
       (i32.gt_s
        (get_local $8)
        (i32.const 0)
       )
       (block
        (set_local $7
         (get_local $9)
        )
        (loop $while-in7
         (set_local $12
          (if (result i32)
           (i32.lt_s
            (get_local $8)
            (i32.const 29)
           )
           (get_local $8)
           (i32.const 29)
          )
         )
         (if
          (i32.ge_u
           (tee_local $8
            (i32.add
             (get_local $6)
             (i32.const -4)
            )
           )
           (get_local $7)
          )
          (block
           (set_local $28
            (i64.extend_u/i32
             (get_local $12)
            )
           )
           (set_local $11
            (i32.const 0)
           )
           (loop $while-in9
            (set_local $22
             (i64.div_u
              (tee_local $29
               (i64.add
                (i64.shl
                 (i64.extend_u/i32
                  (i32.load
                   (get_local $8)
                  )
                 )
                 (get_local $28)
                )
                (i64.extend_u/i32
                 (get_local $11)
                )
               )
              )
              (i64.const 1000000000)
             )
            )
            (i64.store32
             (get_local $8)
             (i64.add
              (get_local $29)
              (i64.mul
               (get_local $22)
               (i64.const -1000000000)
              )
             )
            )
            (set_local $11
             (i32.wrap/i64
              (get_local $22)
             )
            )
            (br_if $while-in9
             (i32.ge_u
              (tee_local $8
               (i32.add
                (get_local $8)
                (i32.const -4)
               )
              )
              (get_local $7)
             )
            )
           )
           (if
            (get_local $11)
            (i32.store
             (tee_local $7
              (i32.add
               (get_local $7)
               (i32.const -4)
              )
             )
             (get_local $11)
            )
           )
          )
         )
         (block $label$break$L57
          (if
           (i32.gt_u
            (get_local $6)
            (get_local $7)
           )
           (loop $while-in12
            (br_if $label$break$L57
             (i32.load
              (tee_local $8
               (i32.add
                (get_local $6)
                (i32.const -4)
               )
              )
             )
            )
            (set_local $6
             (if (result i32)
              (i32.gt_u
               (get_local $8)
               (get_local $7)
              )
              (block
               (set_local $6
                (get_local $8)
               )
               (br $while-in12)
              )
              (get_local $8)
             )
            )
           )
          )
         )
         (i32.store
          (get_local $10)
          (tee_local $8
           (i32.sub
            (i32.load
             (get_local $10)
            )
            (get_local $12)
           )
          )
         )
         (br_if $while-in7
          (i32.gt_s
           (get_local $8)
           (i32.const 0)
          )
         )
        )
       )
       (set_local $7
        (get_local $9)
       )
      )
      (set_local $11
       (if (result i32)
        (i32.lt_s
         (get_local $3)
         (i32.const 0)
        )
        (i32.const 6)
        (get_local $3)
       )
      )
      (if
       (i32.lt_s
        (get_local $8)
        (i32.const 0)
       )
       (block
        (set_local $20
         (i32.add
          (i32.div_s
           (i32.add
            (get_local $11)
            (i32.const 25)
           )
           (i32.const 9)
          )
          (i32.const 1)
         )
        )
        (set_local $23
         (i32.eq
          (get_local $13)
          (i32.const 102)
         )
        )
        (set_local $3
         (get_local $6)
        )
        (loop $while-in14
         (if
          (i32.ge_s
           (tee_local $12
            (i32.sub
             (i32.const 0)
             (get_local $8)
            )
           )
           (i32.const 9)
          )
          (set_local $12
           (i32.const 9)
          )
         )
         (set_local $3
          (if (result i32)
           (i32.lt_u
            (get_local $7)
            (get_local $3)
           )
           (block (result i32)
            (set_local $21
             (i32.add
              (i32.shl
               (i32.const 1)
               (get_local $12)
              )
              (i32.const -1)
             )
            )
            (set_local $26
             (i32.shr_u
              (i32.const 1000000000)
              (get_local $12)
             )
            )
            (set_local $8
             (i32.const 0)
            )
            (set_local $6
             (get_local $7)
            )
            (loop $while-in16
             (i32.store
              (get_local $6)
              (i32.add
               (i32.shr_u
                (tee_local $27
                 (i32.load
                  (get_local $6)
                 )
                )
                (get_local $12)
               )
               (get_local $8)
              )
             )
             (set_local $8
              (i32.mul
               (i32.and
                (get_local $27)
                (get_local $21)
               )
               (get_local $26)
              )
             )
             (br_if $while-in16
              (i32.lt_u
               (tee_local $6
                (i32.add
                 (get_local $6)
                 (i32.const 4)
                )
               )
               (get_local $3)
              )
             )
            )
            (set_local $6
             (i32.add
              (get_local $7)
              (i32.const 4)
             )
            )
            (if
             (i32.eqz
              (i32.load
               (get_local $7)
              )
             )
             (set_local $7
              (get_local $6)
             )
            )
            (if
             (get_local $8)
             (block
              (i32.store
               (get_local $3)
               (get_local $8)
              )
              (set_local $6
               (i32.add
                (get_local $3)
                (i32.const 4)
               )
              )
             )
             (set_local $6
              (get_local $3)
             )
            )
            (get_local $7)
           )
           (block (result i32)
            (set_local $8
             (i32.add
              (get_local $7)
              (i32.const 4)
             )
            )
            (set_local $6
             (get_local $3)
            )
            (if (result i32)
             (i32.load
              (get_local $7)
             )
             (get_local $7)
             (get_local $8)
            )
           )
          )
         )
         (set_local $8
          (i32.add
           (tee_local $7
            (if (result i32)
             (get_local $23)
             (get_local $9)
             (get_local $3)
            )
           )
           (i32.shl
            (get_local $20)
            (i32.const 2)
           )
          )
         )
         (if
          (i32.gt_s
           (i32.shr_s
            (i32.sub
             (get_local $6)
             (get_local $7)
            )
            (i32.const 2)
           )
           (get_local $20)
          )
          (set_local $6
           (get_local $8)
          )
         )
         (i32.store
          (get_local $10)
          (tee_local $8
           (i32.add
            (i32.load
             (get_local $10)
            )
            (get_local $12)
           )
          )
         )
         (set_local $8
          (if (result i32)
           (i32.lt_s
            (get_local $8)
            (i32.const 0)
           )
           (block
            (set_local $7
             (get_local $3)
            )
            (set_local $3
             (get_local $6)
            )
            (br $while-in14)
           )
           (get_local $6)
          )
         )
        )
       )
       (block
        (set_local $3
         (get_local $7)
        )
        (set_local $8
         (get_local $6)
        )
       )
      )
      (set_local $12
       (get_local $9)
      )
      (if
       (i32.lt_u
        (get_local $3)
        (get_local $8)
       )
       (block
        (set_local $7
         (i32.mul
          (i32.shr_s
           (i32.sub
            (get_local $12)
            (get_local $3)
           )
           (i32.const 2)
          )
          (i32.const 9)
         )
        )
        (if
         (i32.ge_u
          (tee_local $9
           (i32.load
            (get_local $3)
           )
          )
          (i32.const 10)
         )
         (block
          (set_local $6
           (i32.const 10)
          )
          (loop $while-in18
           (set_local $7
            (i32.add
             (get_local $7)
             (i32.const 1)
            )
           )
           (br_if $while-in18
            (i32.ge_u
             (get_local $9)
             (tee_local $6
              (i32.mul
               (get_local $6)
               (i32.const 10)
              )
             )
            )
           )
          )
         )
        )
       )
       (set_local $7
        (i32.const 0)
       )
      )
      (set_local $20
       (i32.eq
        (get_local $13)
        (i32.const 103)
       )
      )
      (set_local $23
       (i32.ne
        (get_local $11)
        (i32.const 0)
       )
      )
      (set_local $6
       (if (result i32)
        (i32.lt_s
         (tee_local $6
          (i32.add
           (i32.sub
            (get_local $11)
            (if (result i32)
             (i32.eq
              (get_local $13)
              (i32.const 102)
             )
             (i32.const 0)
             (get_local $7)
            )
           )
           (i32.shr_s
            (i32.shl
             (i32.and
              (get_local $23)
              (get_local $20)
             )
             (i32.const 31)
            )
            (i32.const 31)
           )
          )
         )
         (i32.add
          (i32.mul
           (i32.shr_s
            (i32.sub
             (get_local $8)
             (get_local $12)
            )
            (i32.const 2)
           )
           (i32.const 9)
          )
          (i32.const -9)
         )
        )
        (block (result i32)
         (set_local $13
          (i32.div_s
           (tee_local $6
            (i32.add
             (get_local $6)
             (i32.const 9216)
            )
           )
           (i32.const 9)
          )
         )
         (if
          (i32.lt_s
           (tee_local $6
            (i32.add
             (get_local $6)
             (i32.mul
              (get_local $13)
              (i32.const -9)
             )
            )
           )
           (i32.const 8)
          )
          (block
           (set_local $9
            (i32.const 10)
           )
           (loop $while-in20
            (set_local $10
             (i32.add
              (get_local $6)
              (i32.const 1)
             )
            )
            (set_local $9
             (i32.mul
              (get_local $9)
              (i32.const 10)
             )
            )
            (if
             (i32.lt_s
              (get_local $6)
              (i32.const 7)
             )
             (block
              (set_local $6
               (get_local $10)
              )
              (br $while-in20)
             )
            )
           )
          )
          (set_local $9
           (i32.const 10)
          )
         )
         (set_local $10
          (i32.mul
           (tee_local $21
            (i32.div_u
             (tee_local $13
              (i32.load
               (tee_local $6
                (i32.add
                 (i32.add
                  (get_local $12)
                  (i32.shl
                   (get_local $13)
                   (i32.const 2)
                  )
                 )
                 (i32.const -4092)
                )
               )
              )
             )
             (get_local $9)
            )
           )
           (get_local $9)
          )
         )
         (if
          (i32.eqz
           (i32.and
            (tee_local $26
             (i32.eq
              (i32.add
               (get_local $6)
               (i32.const 4)
              )
              (get_local $8)
             )
            )
            (i32.eqz
             (tee_local $13
              (i32.sub
               (get_local $13)
               (get_local $10)
              )
             )
            )
           )
          )
          (block
           (set_local $24
            (if (result f64)
             (i32.and
              (get_local $21)
              (i32.const 1)
             )
             (f64.const 9007199254740994)
             (f64.const 9007199254740992)
            )
           )
           (set_local $27
            (i32.lt_u
             (get_local $13)
             (tee_local $21
              (i32.shr_u
               (get_local $9)
               (i32.const 1)
              )
             )
            )
           )
           (set_local $1
            (if (result f64)
             (i32.and
              (get_local $26)
              (i32.eq
               (get_local $13)
               (get_local $21)
              )
             )
             (f64.const 1)
             (f64.const 1.5)
            )
           )
           (if
            (get_local $27)
            (set_local $1
             (f64.const 0.5)
            )
           )
           (if
            (get_local $19)
            (block
             (set_local $17
              (f64.neg
               (get_local $24)
              )
             )
             (set_local $30
              (f64.neg
               (get_local $1)
              )
             )
             (if
              (tee_local $13
               (i32.eq
                (i32.load8_s
                 (get_local $16)
                )
                (i32.const 45)
               )
              )
              (set_local $24
               (get_local $17)
              )
             )
             (set_local $17
              (if (result f64)
               (get_local $13)
               (get_local $30)
               (get_local $1)
              )
             )
            )
            (set_local $17
             (get_local $1)
            )
           )
           (set_local $1
            (get_local $24)
           )
           (i32.store
            (get_local $6)
            (get_local $10)
           )
           (if
            (f64.ne
             (f64.add
              (get_local $1)
              (get_local $17)
             )
             (get_local $1)
            )
            (block
             (i32.store
              (get_local $6)
              (tee_local $7
               (i32.add
                (get_local $10)
                (get_local $9)
               )
              )
             )
             (if
              (i32.gt_u
               (get_local $7)
               (i32.const 999999999)
              )
              (loop $while-in22
               (i32.store
                (get_local $6)
                (i32.const 0)
               )
               (if
                (i32.lt_u
                 (tee_local $6
                  (i32.add
                   (get_local $6)
                   (i32.const -4)
                  )
                 )
                 (get_local $3)
                )
                (i32.store
                 (tee_local $3
                  (i32.add
                   (get_local $3)
                   (i32.const -4)
                  )
                 )
                 (i32.const 0)
                )
               )
               (i32.store
                (get_local $6)
                (tee_local $7
                 (i32.add
                  (i32.load
                   (get_local $6)
                  )
                  (i32.const 1)
                 )
                )
               )
               (br_if $while-in22
                (i32.gt_u
                 (get_local $7)
                 (i32.const 999999999)
                )
               )
              )
             )
             (set_local $7
              (i32.mul
               (i32.shr_s
                (i32.sub
                 (get_local $12)
                 (get_local $3)
                )
                (i32.const 2)
               )
               (i32.const 9)
              )
             )
             (if
              (i32.ge_u
               (tee_local $10
                (i32.load
                 (get_local $3)
                )
               )
               (i32.const 10)
              )
              (block
               (set_local $9
                (i32.const 10)
               )
               (loop $while-in24
                (set_local $7
                 (i32.add
                  (get_local $7)
                  (i32.const 1)
                 )
                )
                (br_if $while-in24
                 (i32.ge_u
                  (get_local $10)
                  (tee_local $9
                   (i32.mul
                    (get_local $9)
                    (i32.const 10)
                   )
                  )
                 )
                )
               )
              )
             )
            )
           )
          )
         )
         (set_local $9
          (get_local $7)
         )
         (if
          (i32.le_u
           (get_local $8)
           (tee_local $7
            (i32.add
             (get_local $6)
             (i32.const 4)
            )
           )
          )
          (set_local $7
           (get_local $8)
          )
         )
         (get_local $3)
        )
        (block (result i32)
         (set_local $9
          (get_local $7)
         )
         (set_local $7
          (get_local $8)
         )
         (get_local $3)
        )
       )
      )
      (set_local $21
       (i32.sub
        (i32.const 0)
        (get_local $9)
       )
      )
      (block $label$break$L109
       (if
        (i32.gt_u
         (get_local $7)
         (get_local $6)
        )
        (loop $while-in27
         (if
          (i32.load
           (tee_local $3
            (i32.add
             (get_local $7)
             (i32.const -4)
            )
           )
          )
          (block
           (set_local $10
            (i32.const 1)
           )
           (br $label$break$L109)
          )
         )
         (set_local $7
          (if (result i32)
           (i32.gt_u
            (get_local $3)
            (get_local $6)
           )
           (block
            (set_local $7
             (get_local $3)
            )
            (br $while-in27)
           )
           (block (result i32)
            (set_local $10
             (i32.const 0)
            )
            (get_local $3)
           )
          )
         )
        )
        (set_local $10
         (i32.const 0)
        )
       )
      )
      (if
       (get_local $20)
       (block
        (set_local $3
         (if (result i32)
          (i32.and
           (i32.gt_s
            (tee_local $3
             (i32.add
              (get_local $11)
              (i32.xor
               (get_local $23)
               (i32.const 1)
              )
             )
            )
            (get_local $9)
           )
           (i32.gt_s
            (get_local $9)
            (i32.const -5)
           )
          )
          (block (result i32)
           (set_local $5
            (i32.add
             (get_local $5)
             (i32.const -1)
            )
           )
           (i32.sub
            (i32.add
             (get_local $3)
             (i32.const -1)
            )
            (get_local $9)
           )
          )
          (block (result i32)
           (set_local $5
            (i32.add
             (get_local $5)
             (i32.const -2)
            )
           )
           (i32.add
            (get_local $3)
            (i32.const -1)
           )
          )
         )
        )
        (if
         (i32.eqz
          (i32.and
           (get_local $4)
           (i32.const 8)
          )
         )
         (block
          (if
           (get_local $10)
           (if
            (tee_local $13
             (i32.load
              (i32.add
               (get_local $7)
               (i32.const -4)
              )
             )
            )
            (if
             (i32.rem_u
              (get_local $13)
              (i32.const 10)
             )
             (set_local $8
              (i32.const 0)
             )
             (block
              (set_local $8
               (i32.const 0)
              )
              (set_local $11
               (i32.const 10)
              )
              (loop $while-in31
               (set_local $8
                (i32.add
                 (get_local $8)
                 (i32.const 1)
                )
               )
               (br_if $while-in31
                (i32.eqz
                 (i32.rem_u
                  (get_local $13)
                  (tee_local $11
                   (i32.mul
                    (get_local $11)
                    (i32.const 10)
                   )
                  )
                 )
                )
               )
              )
             )
            )
            (set_local $8
             (i32.const 9)
            )
           )
           (set_local $8
            (i32.const 9)
           )
          )
          (set_local $11
           (i32.add
            (i32.mul
             (i32.shr_s
              (i32.sub
               (get_local $7)
               (get_local $12)
              )
              (i32.const 2)
             )
             (i32.const 9)
            )
            (i32.const -9)
           )
          )
          (if
           (i32.eq
            (i32.or
             (get_local $5)
             (i32.const 32)
            )
            (i32.const 102)
           )
           (if
            (i32.ge_s
             (get_local $3)
             (if (result i32)
              (i32.gt_s
               (tee_local $8
                (i32.sub
                 (get_local $11)
                 (get_local $8)
                )
               )
               (i32.const 0)
              )
              (get_local $8)
              (tee_local $8
               (i32.const 0)
              )
             )
            )
            (set_local $3
             (get_local $8)
            )
           )
           (if
            (i32.ge_s
             (get_local $3)
             (if (result i32)
              (i32.gt_s
               (tee_local $8
                (i32.sub
                 (i32.add
                  (get_local $11)
                  (get_local $9)
                 )
                 (get_local $8)
                )
               )
               (i32.const 0)
              )
              (get_local $8)
              (tee_local $8
               (i32.const 0)
              )
             )
            )
            (set_local $3
             (get_local $8)
            )
           )
          )
         )
        )
       )
       (set_local $3
        (get_local $11)
       )
      )
      (if
       (tee_local $13
        (i32.eq
         (i32.or
          (get_local $5)
          (i32.const 32)
         )
         (i32.const 102)
        )
       )
       (block
        (set_local $8
         (i32.const 0)
        )
        (if
         (i32.le_s
          (get_local $9)
          (i32.const 0)
         )
         (set_local $9
          (i32.const 0)
         )
        )
       )
       (block
        (set_local $8
         (call $_fmt_u
          (i64.extend_s/i32
           (if (result i32)
            (i32.lt_s
             (get_local $9)
             (i32.const 0)
            )
            (get_local $21)
            (get_local $9)
           )
          )
          (get_local $15)
         )
        )
        (if
         (i32.lt_s
          (i32.sub
           (get_local $15)
           (get_local $8)
          )
          (i32.const 2)
         )
         (loop $while-in33
          (i32.store8
           (tee_local $8
            (i32.add
             (get_local $8)
             (i32.const -1)
            )
           )
           (i32.const 48)
          )
          (br_if $while-in33
           (i32.lt_s
            (i32.sub
             (get_local $15)
             (get_local $8)
            )
            (i32.const 2)
           )
          )
         )
        )
        (i32.store8
         (i32.add
          (get_local $8)
          (i32.const -1)
         )
         (i32.add
          (i32.and
           (i32.shr_s
            (get_local $9)
            (i32.const 31)
           )
           (i32.const 2)
          )
          (i32.const 43)
         )
        )
        (i32.store8
         (tee_local $8
          (i32.add
           (get_local $8)
           (i32.const -2)
          )
         )
         (get_local $5)
        )
        (set_local $9
         (i32.sub
          (get_local $15)
          (get_local $8)
         )
        )
       )
      )
      (set_local $5
       (i32.and
        (i32.shr_u
         (get_local $4)
         (i32.const 3)
        )
        (i32.const 1)
       )
      )
      (call $_pad_669
       (get_local $0)
       (i32.const 32)
       (get_local $2)
       (tee_local $11
        (i32.add
         (i32.add
          (i32.add
           (i32.add
            (get_local $19)
            (i32.const 1)
           )
           (get_local $3)
          )
          (if (result i32)
           (tee_local $20
            (i32.ne
             (get_local $3)
             (i32.const 0)
            )
           )
           (i32.const 1)
           (get_local $5)
          )
         )
         (get_local $9)
        )
       )
       (get_local $4)
      )
      (call $_out
       (get_local $0)
       (get_local $16)
       (get_local $19)
      )
      (call $_pad_669
       (get_local $0)
       (i32.const 48)
       (get_local $2)
       (get_local $11)
       (i32.xor
        (get_local $4)
        (i32.const 65536)
       )
      )
      (if
       (get_local $13)
       (block
        (set_local $16
         (tee_local $15
          (i32.add
           (get_local $14)
           (i32.const 9)
          )
         )
        )
        (set_local $9
         (i32.add
          (get_local $14)
          (i32.const 8)
         )
        )
        (set_local $6
         (tee_local $8
          (if (result i32)
           (i32.gt_u
            (get_local $6)
            (get_local $12)
           )
           (get_local $12)
           (get_local $6)
          )
         )
        )
        (loop $while-in35
         (set_local $5
          (call $_fmt_u
           (i64.extend_u/i32
            (i32.load
             (get_local $6)
            )
           )
           (get_local $15)
          )
         )
         (if
          (i32.eq
           (get_local $6)
           (get_local $8)
          )
          (if
           (i32.eq
            (get_local $5)
            (get_local $15)
           )
           (block
            (i32.store8
             (get_local $9)
             (i32.const 48)
            )
            (set_local $5
             (get_local $9)
            )
           )
          )
          (if
           (i32.gt_u
            (get_local $5)
            (get_local $14)
           )
           (block
            (drop
             (call $_memset
              (get_local $14)
              (i32.const 48)
              (i32.sub
               (get_local $5)
               (get_local $18)
              )
             )
            )
            (loop $while-in37
             (br_if $while-in37
              (i32.gt_u
               (tee_local $5
                (i32.add
                 (get_local $5)
                 (i32.const -1)
                )
               )
               (get_local $14)
              )
             )
            )
           )
          )
         )
         (call $_out
          (get_local $0)
          (get_local $5)
          (i32.sub
           (get_local $16)
           (get_local $5)
          )
         )
         (if
          (i32.le_u
           (tee_local $5
            (i32.add
             (get_local $6)
             (i32.const 4)
            )
           )
           (get_local $12)
          )
          (block
           (set_local $6
            (get_local $5)
           )
           (br $while-in35)
          )
         )
        )
        (if
         (i32.eqz
          (i32.and
           (i32.eqz
            (i32.and
             (get_local $4)
             (i32.const 8)
            )
           )
           (i32.xor
            (get_local $20)
            (i32.const 1)
           )
          )
         )
         (call $_out
          (get_local $0)
          (i32.const 51480)
          (i32.const 1)
         )
        )
        (if
         (i32.and
          (i32.lt_u
           (get_local $5)
           (get_local $7)
          )
          (i32.gt_s
           (get_local $3)
           (i32.const 0)
          )
         )
         (loop $while-in39
          (if
           (i32.gt_u
            (tee_local $6
             (call $_fmt_u
              (i64.extend_u/i32
               (i32.load
                (get_local $5)
               )
              )
              (get_local $15)
             )
            )
            (get_local $14)
           )
           (block
            (drop
             (call $_memset
              (get_local $14)
              (i32.const 48)
              (i32.sub
               (get_local $6)
               (get_local $18)
              )
             )
            )
            (loop $while-in41
             (br_if $while-in41
              (i32.gt_u
               (tee_local $6
                (i32.add
                 (get_local $6)
                 (i32.const -1)
                )
               )
               (get_local $14)
              )
             )
            )
           )
          )
          (call $_out
           (get_local $0)
           (get_local $6)
           (if (result i32)
            (i32.lt_s
             (get_local $3)
             (i32.const 9)
            )
            (get_local $3)
            (i32.const 9)
           )
          )
          (set_local $6
           (i32.add
            (get_local $3)
            (i32.const -9)
           )
          )
          (set_local $3
           (if (result i32)
            (i32.and
             (i32.lt_u
              (tee_local $5
               (i32.add
                (get_local $5)
                (i32.const 4)
               )
              )
              (get_local $7)
             )
             (i32.gt_s
              (get_local $3)
              (i32.const 9)
             )
            )
            (block
             (set_local $3
              (get_local $6)
             )
             (br $while-in39)
            )
            (get_local $6)
           )
          )
         )
        )
        (call $_pad_669
         (get_local $0)
         (i32.const 48)
         (i32.add
          (get_local $3)
          (i32.const 9)
         )
         (i32.const 9)
         (i32.const 0)
        )
       )
       (block
        (set_local $5
         (i32.add
          (get_local $6)
          (i32.const 4)
         )
        )
        (if
         (i32.and
          (i32.lt_u
           (get_local $6)
           (tee_local $12
            (if (result i32)
             (get_local $10)
             (get_local $7)
             (get_local $5)
            )
           )
          )
          (i32.gt_s
           (get_local $3)
           (i32.const -1)
          )
         )
         (block
          (set_local $19
           (i32.eqz
            (i32.and
             (get_local $4)
             (i32.const 8)
            )
           )
          )
          (set_local $13
           (tee_local $10
            (i32.add
             (get_local $14)
             (i32.const 9)
            )
           )
          )
          (set_local $18
           (i32.sub
            (i32.const 0)
            (get_local $18)
           )
          )
          (set_local $16
           (i32.add
            (get_local $14)
            (i32.const 8)
           )
          )
          (set_local $5
           (get_local $3)
          )
          (set_local $7
           (get_local $6)
          )
          (loop $while-in43
           (if
            (i32.eq
             (tee_local $3
              (call $_fmt_u
               (i64.extend_u/i32
                (i32.load
                 (get_local $7)
                )
               )
               (get_local $10)
              )
             )
             (get_local $10)
            )
            (block
             (i32.store8
              (get_local $16)
              (i32.const 48)
             )
             (set_local $3
              (get_local $16)
             )
            )
           )
           (block $do-once44
            (if
             (i32.eq
              (get_local $7)
              (get_local $6)
             )
             (block
              (set_local $9
               (i32.add
                (get_local $3)
                (i32.const 1)
               )
              )
              (call $_out
               (get_local $0)
               (get_local $3)
               (i32.const 1)
              )
              (if
               (i32.and
                (get_local $19)
                (i32.lt_s
                 (get_local $5)
                 (i32.const 1)
                )
               )
               (block
                (set_local $3
                 (get_local $9)
                )
                (br $do-once44)
               )
              )
              (call $_out
               (get_local $0)
               (i32.const 51480)
               (i32.const 1)
              )
              (set_local $3
               (get_local $9)
              )
             )
             (block
              (br_if $do-once44
               (i32.le_u
                (get_local $3)
                (get_local $14)
               )
              )
              (drop
               (call $_memset
                (get_local $14)
                (i32.const 48)
                (i32.add
                 (get_local $3)
                 (get_local $18)
                )
               )
              )
              (loop $while-in47
               (br_if $while-in47
                (i32.gt_u
                 (tee_local $3
                  (i32.add
                   (get_local $3)
                   (i32.const -1)
                  )
                 )
                 (get_local $14)
                )
               )
              )
             )
            )
           )
           (call $_out
            (get_local $0)
            (get_local $3)
            (if (result i32)
             (i32.gt_s
              (get_local $5)
              (tee_local $3
               (i32.sub
                (get_local $13)
                (get_local $3)
               )
              )
             )
             (get_local $3)
             (get_local $5)
            )
           )
           (br_if $while-in43
            (i32.and
             (i32.lt_u
              (tee_local $7
               (i32.add
                (get_local $7)
                (i32.const 4)
               )
              )
              (get_local $12)
             )
             (i32.gt_s
              (tee_local $5
               (i32.sub
                (get_local $5)
                (get_local $3)
               )
              )
              (i32.const -1)
             )
            )
           )
          )
          (set_local $3
           (get_local $5)
          )
         )
        )
        (call $_pad_669
         (get_local $0)
         (i32.const 48)
         (i32.add
          (get_local $3)
          (i32.const 18)
         )
         (i32.const 18)
         (i32.const 0)
        )
        (call $_out
         (get_local $0)
         (get_local $8)
         (i32.sub
          (get_local $15)
          (get_local $8)
         )
        )
       )
      )
      (call $_pad_669
       (get_local $0)
       (i32.const 32)
       (get_local $2)
       (get_local $11)
       (i32.xor
        (get_local $4)
        (i32.const 8192)
       )
      )
      (get_local $11)
     )
    )
   )
  )
  (set_global $STACKTOP
   (get_local $25)
  )
  (if (result i32)
   (i32.lt_s
    (get_local $0)
    (get_local $2)
   )
   (get_local $2)
   (get_local $0)
  )
 )
 (func $___DOUBLE_BITS_670 (; 460 ;) (; has Stack IR ;) (param $0 f64) (result i64)
  (i64.reinterpret/f64
   (get_local $0)
  )
 )
 (func $_frexpl (; 461 ;) (; has Stack IR ;) (param $0 f64) (param $1 i32) (result f64)
  (call $_frexp
   (get_local $0)
   (get_local $1)
  )
 )
 (func $_frexp (; 462 ;) (; has Stack IR ;) (param $0 f64) (param $1 i32) (result f64)
  (local $2 i32)
  (local $3 i64)
  (local $4 i64)
  (block $switch
   (block $switch-default
    (block $switch-case0
     (if
      (tee_local $2
       (i32.and
        (i32.wrap/i64
         (tee_local $4
          (i64.shr_u
           (tee_local $3
            (i64.reinterpret/f64
             (get_local $0)
            )
           )
           (i64.const 52)
          )
         )
        )
        (i32.const 2047)
       )
      )
      (if
       (i32.eq
        (get_local $2)
        (i32.const 2047)
       )
       (br $switch)
       (br $switch-default)
      )
     )
     (set_local $2
      (if (result i32)
       (f64.ne
        (get_local $0)
        (f64.const 0)
       )
       (block (result i32)
        (set_local $0
         (call $_frexp
          (f64.mul
           (get_local $0)
           (f64.const 18446744073709551615)
          )
          (get_local $1)
         )
        )
        (i32.add
         (i32.load
          (get_local $1)
         )
         (i32.const -64)
        )
       )
       (i32.const 0)
      )
     )
     (i32.store
      (get_local $1)
      (get_local $2)
     )
     (br $switch)
    )
   )
   (i32.store
    (get_local $1)
    (i32.add
     (i32.and
      (i32.wrap/i64
       (get_local $4)
      )
      (i32.const 2047)
     )
     (i32.const -1022)
    )
   )
   (set_local $0
    (f64.reinterpret/i64
     (i64.or
      (i64.and
       (get_local $3)
       (i64.const -9218868437227405313)
      )
      (i64.const 4602678819172646912)
     )
    )
   )
  )
  (get_local $0)
 )
 (func $_wcrtomb (; 463 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (block $do-once (result i32)
   (if (result i32)
    (get_local $0)
    (block (result i32)
     (if
      (i32.lt_u
       (get_local $1)
       (i32.const 128)
      )
      (block
       (i32.store8
        (get_local $0)
        (get_local $1)
       )
       (br $do-once
        (i32.const 1)
       )
      )
     )
     (if
      (i32.eqz
       (i32.load
        (i32.const 52024)
       )
      )
      (if
       (i32.eq
        (i32.and
         (get_local $1)
         (i32.const -128)
        )
        (i32.const 57216)
       )
       (block
        (i32.store8
         (get_local $0)
         (get_local $1)
        )
        (br $do-once
         (i32.const 1)
        )
       )
       (block
        (i32.store
         (i32.const 52048)
         (i32.const 84)
        )
        (br $do-once
         (i32.const -1)
        )
       )
      )
     )
     (if
      (i32.lt_u
       (get_local $1)
       (i32.const 2048)
      )
      (block
       (i32.store8
        (get_local $0)
        (i32.or
         (i32.shr_u
          (get_local $1)
          (i32.const 6)
         )
         (i32.const 192)
        )
       )
       (i32.store8 offset=1
        (get_local $0)
        (i32.or
         (i32.and
          (get_local $1)
          (i32.const 63)
         )
         (i32.const 128)
        )
       )
       (br $do-once
        (i32.const 2)
       )
      )
     )
     (if
      (i32.or
       (i32.lt_u
        (get_local $1)
        (i32.const 55296)
       )
       (i32.eq
        (i32.and
         (get_local $1)
         (i32.const -8192)
        )
        (i32.const 57344)
       )
      )
      (block
       (i32.store8
        (get_local $0)
        (i32.or
         (i32.shr_u
          (get_local $1)
          (i32.const 12)
         )
         (i32.const 224)
        )
       )
       (i32.store8 offset=1
        (get_local $0)
        (i32.or
         (i32.and
          (i32.shr_u
           (get_local $1)
           (i32.const 6)
          )
          (i32.const 63)
         )
         (i32.const 128)
        )
       )
       (i32.store8 offset=2
        (get_local $0)
        (i32.or
         (i32.and
          (get_local $1)
          (i32.const 63)
         )
         (i32.const 128)
        )
       )
       (br $do-once
        (i32.const 3)
       )
      )
     )
     (if (result i32)
      (i32.lt_u
       (i32.add
        (get_local $1)
        (i32.const -65536)
       )
       (i32.const 1048576)
      )
      (block (result i32)
       (i32.store8
        (get_local $0)
        (i32.or
         (i32.shr_u
          (get_local $1)
          (i32.const 18)
         )
         (i32.const 240)
        )
       )
       (i32.store8 offset=1
        (get_local $0)
        (i32.or
         (i32.and
          (i32.shr_u
           (get_local $1)
           (i32.const 12)
          )
          (i32.const 63)
         )
         (i32.const 128)
        )
       )
       (i32.store8 offset=2
        (get_local $0)
        (i32.or
         (i32.and
          (i32.shr_u
           (get_local $1)
           (i32.const 6)
          )
          (i32.const 63)
         )
         (i32.const 128)
        )
       )
       (i32.store8 offset=3
        (get_local $0)
        (i32.or
         (i32.and
          (get_local $1)
          (i32.const 63)
         )
         (i32.const 128)
        )
       )
       (i32.const 4)
      )
      (block (result i32)
       (i32.store
        (i32.const 52048)
        (i32.const 84)
       )
       (i32.const -1)
      )
     )
    )
    (i32.const 1)
   )
  )
 )
 (func $___strerror_l (; 464 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (block $__rjto$1
   (block $__rjti$1
    (block $__rjti$0
     (loop $while-in
      (br_if $__rjti$0
       (i32.eq
        (i32.load8_u
         (i32.add
          (get_local $1)
          (i32.const 38560)
         )
        )
        (get_local $0)
       )
      )
      (br_if $while-in
       (i32.ne
        (tee_local $1
         (i32.add
          (get_local $1)
          (i32.const 1)
         )
        )
        (i32.const 87)
       )
      )
     )
     (set_local $1
      (i32.const 87)
     )
     (br $__rjti$1)
    )
    (br_if $__rjti$1
     (get_local $1)
    )
    (set_local $0
     (i32.const 38656)
    )
    (br $__rjto$1)
   )
   (set_local $0
    (i32.const 38656)
   )
   (loop $while-in1
    (set_local $2
     (get_local $0)
    )
    (loop $while-in3
     (set_local $0
      (i32.add
       (get_local $2)
       (i32.const 1)
      )
     )
     (if
      (i32.load8_s
       (get_local $2)
      )
      (block
       (set_local $2
        (get_local $0)
       )
       (br $while-in3)
      )
     )
    )
    (br_if $while-in1
     (tee_local $1
      (i32.add
       (get_local $1)
       (i32.const -1)
      )
     )
    )
   )
  )
  (call $___lctrans
   (get_local $0)
   (i32.load
    (i32.const 52044)
   )
  )
 )
 (func $___lctrans (; 465 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (call $___lctrans_impl
   (get_local $0)
   (get_local $1)
  )
 )
 (func $___lctrans_impl (; 466 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (if (result i32)
   (tee_local $2
    (if (result i32)
     (get_local $1)
     (call $___mo_lookup
      (i32.load
       (get_local $1)
      )
      (i32.load offset=4
       (get_local $1)
      )
      (get_local $0)
     )
     (i32.const 0)
    )
   )
   (get_local $2)
   (get_local $0)
  )
 )
 (func $___mo_lookup (; 467 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (set_local $4
   (call $_swapc
    (i32.load offset=8
     (get_local $0)
    )
    (tee_local $5
     (i32.add
      (i32.load
       (get_local $0)
      )
      (i32.const 1794895138)
     )
    )
   )
  )
  (set_local $3
   (call $_swapc
    (i32.load offset=12
     (get_local $0)
    )
    (get_local $5)
   )
  )
  (set_local $6
   (call $_swapc
    (i32.load offset=16
     (get_local $0)
    )
    (get_local $5)
   )
  )
  (block $label$break$L1
   (if
    (i32.lt_u
     (get_local $4)
     (i32.shr_u
      (get_local $1)
      (i32.const 2)
     )
    )
    (if
     (i32.and
      (i32.lt_u
       (get_local $3)
       (tee_local $7
        (i32.sub
         (get_local $1)
         (i32.shl
          (get_local $4)
          (i32.const 2)
         )
        )
       )
      )
      (i32.lt_u
       (get_local $6)
       (get_local $7)
      )
     )
     (if
      (i32.and
       (i32.or
        (get_local $6)
        (get_local $3)
       )
       (i32.const 3)
      )
      (set_local $1
       (i32.const 0)
      )
      (block
       (set_local $9
        (i32.shr_u
         (get_local $3)
         (i32.const 2)
        )
       )
       (set_local $10
        (i32.shr_u
         (get_local $6)
         (i32.const 2)
        )
       )
       (set_local $7
        (i32.const 0)
       )
       (loop $while-in
        (block $while-out
         (set_local $8
          (call $_swapc
           (i32.load
            (i32.add
             (get_local $0)
             (i32.shl
              (tee_local $3
               (i32.add
                (tee_local $12
                 (i32.shl
                  (tee_local $11
                   (i32.add
                    (get_local $7)
                    (tee_local $6
                     (i32.shr_u
                      (get_local $4)
                      (i32.const 1)
                     )
                    )
                   )
                  )
                  (i32.const 1)
                 )
                )
                (get_local $9)
               )
              )
              (i32.const 2)
             )
            )
           )
           (get_local $5)
          )
         )
         (if
          (i32.eqz
           (i32.and
            (i32.lt_u
             (tee_local $3
              (call $_swapc
               (i32.load
                (i32.add
                 (get_local $0)
                 (i32.shl
                  (i32.add
                   (get_local $3)
                   (i32.const 1)
                  )
                  (i32.const 2)
                 )
                )
               )
               (get_local $5)
              )
             )
             (get_local $1)
            )
            (i32.lt_u
             (get_local $8)
             (i32.sub
              (get_local $1)
              (get_local $3)
             )
            )
           )
          )
          (block
           (set_local $1
            (i32.const 0)
           )
           (br $label$break$L1)
          )
         )
         (if
          (i32.load8_s
           (i32.add
            (get_local $0)
            (i32.add
             (get_local $3)
             (get_local $8)
            )
           )
          )
          (block
           (set_local $1
            (i32.const 0)
           )
           (br $label$break$L1)
          )
         )
         (br_if $while-out
          (i32.eqz
           (tee_local $3
            (call $_strcmp
             (get_local $2)
             (i32.add
              (get_local $0)
              (get_local $3)
             )
            )
           )
          )
         )
         (set_local $3
          (i32.lt_s
           (get_local $3)
           (i32.const 0)
          )
         )
         (if
          (i32.eq
           (get_local $4)
           (i32.const 1)
          )
          (block
           (set_local $1
            (i32.const 0)
           )
           (br $label$break$L1)
          )
          (block
           (set_local $4
            (i32.sub
             (get_local $4)
             (get_local $6)
            )
           )
           (if
            (i32.eqz
             (get_local $3)
            )
            (set_local $7
             (get_local $11)
            )
           )
           (if
            (get_local $3)
            (set_local $4
             (get_local $6)
            )
           )
           (br $while-in)
          )
         )
        )
       )
       (set_local $4
        (call $_swapc
         (i32.load
          (i32.add
           (get_local $0)
           (i32.shl
            (tee_local $2
             (i32.add
              (get_local $12)
              (get_local $10)
             )
            )
            (i32.const 2)
           )
          )
         )
         (get_local $5)
        )
       )
       (if
        (i32.and
         (i32.lt_u
          (tee_local $2
           (call $_swapc
            (i32.load
             (i32.add
              (get_local $0)
              (i32.shl
               (i32.add
                (get_local $2)
                (i32.const 1)
               )
               (i32.const 2)
              )
             )
            )
            (get_local $5)
           )
          )
          (get_local $1)
         )
         (i32.lt_u
          (get_local $4)
          (i32.sub
           (get_local $1)
           (get_local $2)
          )
         )
        )
        (block
         (set_local $1
          (i32.add
           (get_local $0)
           (get_local $2)
          )
         )
         (if
          (i32.load8_s
           (i32.add
            (get_local $0)
            (i32.add
             (get_local $2)
             (get_local $4)
            )
           )
          )
          (set_local $1
           (i32.const 0)
          )
         )
        )
        (set_local $1
         (i32.const 0)
        )
       )
      )
     )
     (set_local $1
      (i32.const 0)
     )
    )
    (set_local $1
     (i32.const 0)
    )
   )
  )
  (get_local $1)
 )
 (func $_swapc (; 468 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (set_local $1
   (i32.eqz
    (get_local $1)
   )
  )
  (set_local $2
   (call $_llvm_bswap_i32
    (get_local $0)
   )
  )
  (if (result i32)
   (get_local $1)
   (get_local $0)
   (get_local $2)
  )
 )
 (func $___fwritex (; 469 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (block $label$break$L5
   (block $__rjti$0
    (br_if $__rjti$0
     (tee_local $4
      (i32.load
       (tee_local $3
        (i32.add
         (get_local $2)
         (i32.const 16)
        )
       )
      )
     )
    )
    (if
     (i32.eqz
      (call $___towrite
       (get_local $2)
      )
     )
     (block
      (set_local $4
       (i32.load
        (get_local $3)
       )
      )
      (br $__rjti$0)
     )
    )
    (br $label$break$L5)
   )
   (if
    (i32.lt_u
     (i32.sub
      (get_local $4)
      (tee_local $4
       (i32.load
        (tee_local $5
         (i32.add
          (get_local $2)
          (i32.const 20)
         )
        )
       )
      )
     )
     (get_local $1)
    )
    (block
     (drop
      (call_indirect (type $FUNCSIG$iiii)
       (get_local $2)
       (get_local $0)
       (get_local $1)
       (i32.add
        (i32.and
         (i32.load offset=36
          (get_local $2)
         )
         (i32.const 3)
        )
        (i32.const 2)
       )
      )
     )
     (br $label$break$L5)
    )
   )
   (block $label$break$L10
    (if
     (i32.eqz
      (i32.or
       (i32.lt_s
        (i32.load8_s offset=75
         (get_local $2)
        )
        (i32.const 0)
       )
       (i32.eqz
        (get_local $1)
       )
      )
     )
     (block
      (set_local $3
       (get_local $1)
      )
      (loop $while-in
       (if
        (i32.ne
         (i32.load8_s
          (i32.add
           (get_local $0)
           (tee_local $6
            (i32.add
             (get_local $3)
             (i32.const -1)
            )
           )
          )
         )
         (i32.const 10)
        )
        (if
         (get_local $6)
         (block
          (set_local $3
           (get_local $6)
          )
          (br $while-in)
         )
         (br $label$break$L10)
        )
       )
      )
      (br_if $label$break$L5
       (i32.lt_u
        (call_indirect (type $FUNCSIG$iiii)
         (get_local $2)
         (get_local $0)
         (get_local $3)
         (i32.add
          (i32.and
           (i32.load offset=36
            (get_local $2)
           )
           (i32.const 3)
          )
          (i32.const 2)
         )
        )
        (get_local $3)
       )
      )
      (set_local $0
       (i32.add
        (get_local $0)
        (get_local $3)
       )
      )
      (set_local $1
       (i32.sub
        (get_local $1)
        (get_local $3)
       )
      )
      (set_local $4
       (i32.load
        (get_local $5)
       )
      )
     )
    )
   )
   (drop
    (call $_memcpy
     (get_local $4)
     (get_local $0)
     (get_local $1)
    )
   )
   (i32.store
    (get_local $5)
    (i32.add
     (i32.load
      (get_local $5)
     )
     (get_local $1)
    )
   )
  )
 )
 (func $___towrite (; 470 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (set_local $1
   (i32.load8_s
    (tee_local $2
     (i32.add
      (get_local $0)
      (i32.const 74)
     )
    )
   )
  )
  (i32.store8
   (get_local $2)
   (i32.or
    (i32.add
     (get_local $1)
     (i32.const 255)
    )
    (get_local $1)
   )
  )
  (tee_local $0
   (if (result i32)
    (i32.and
     (tee_local $1
      (i32.load
       (get_local $0)
      )
     )
     (i32.const 8)
    )
    (block (result i32)
     (i32.store
      (get_local $0)
      (i32.or
       (get_local $1)
       (i32.const 32)
      )
     )
     (i32.const -1)
    )
    (block (result i32)
     (i32.store offset=8
      (get_local $0)
      (i32.const 0)
     )
     (i32.store offset=4
      (get_local $0)
      (i32.const 0)
     )
     (i32.store offset=28
      (get_local $0)
      (tee_local $1
       (i32.load offset=44
        (get_local $0)
       )
      )
     )
     (i32.store offset=20
      (get_local $0)
      (get_local $1)
     )
     (i32.store offset=16
      (get_local $0)
      (i32.add
       (get_local $1)
       (i32.load offset=48
        (get_local $0)
       )
      )
     )
     (i32.const 0)
    )
   )
  )
 )
 (func $_lrintf (; 471 ;) (; has Stack IR ;) (param $0 f32) (result i32)
  (i32.trunc_s/f32
   (f32.demote/f64
    (call $_rintf
     (f64.promote/f32
      (get_local $0)
     )
    )
   )
  )
 )
 (func $_fprintf (; 472 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (set_local $1
   (get_global $STACKTOP)
  )
  (set_global $STACKTOP
   (i32.add
    (get_global $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store
   (get_local $1)
   (get_local $0)
  )
  (call $_vfprintf
   (get_local $1)
  )
  (set_global $STACKTOP
   (get_local $1)
  )
 )
 (func $runPostSets (; 473 ;) (; has Stack IR ;)
  (nop)
 )
 (func $_llvm_bswap_i32 (; 474 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (i32.or
   (i32.or
    (i32.or
     (i32.shl
      (i32.and
       (get_local $0)
       (i32.const 255)
      )
      (i32.const 24)
     )
     (i32.shl
      (i32.and
       (i32.shr_s
        (get_local $0)
        (i32.const 8)
       )
       (i32.const 255)
      )
      (i32.const 16)
     )
    )
    (i32.shl
     (i32.and
      (i32.shr_s
       (get_local $0)
       (i32.const 16)
      )
      (i32.const 255)
     )
     (i32.const 8)
    )
   )
   (i32.shr_u
    (get_local $0)
    (i32.const 24)
   )
  )
 )
 (func $_memcpy (; 475 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (if
   (i32.ge_s
    (get_local $2)
    (i32.const 8192)
   )
   (return
    (call $_emscripten_memcpy_big
     (get_local $0)
     (get_local $1)
     (get_local $2)
    )
   )
  )
  (set_local $4
   (get_local $0)
  )
  (set_local $3
   (i32.add
    (get_local $0)
    (get_local $2)
   )
  )
  (if
   (i32.eq
    (i32.and
     (get_local $0)
     (i32.const 3)
    )
    (i32.and
     (get_local $1)
     (i32.const 3)
    )
   )
   (block
    (loop $while-in
     (if
      (i32.and
       (get_local $0)
       (i32.const 3)
      )
      (block
       (if
        (i32.eqz
         (get_local $2)
        )
        (return
         (get_local $4)
        )
       )
       (i32.store8
        (get_local $0)
        (i32.load8_s
         (get_local $1)
        )
       )
       (set_local $0
        (i32.add
         (get_local $0)
         (i32.const 1)
        )
       )
       (set_local $1
        (i32.add
         (get_local $1)
         (i32.const 1)
        )
       )
       (set_local $2
        (i32.sub
         (get_local $2)
         (i32.const 1)
        )
       )
       (br $while-in)
      )
     )
    )
    (set_local $5
     (i32.add
      (tee_local $2
       (i32.and
        (get_local $3)
        (i32.const -4)
       )
      )
      (i32.const -64)
     )
    )
    (loop $while-in1
     (if
      (i32.le_s
       (get_local $0)
       (get_local $5)
      )
      (block
       (i32.store
        (get_local $0)
        (i32.load
         (get_local $1)
        )
       )
       (i32.store offset=4
        (get_local $0)
        (i32.load offset=4
         (get_local $1)
        )
       )
       (i32.store offset=8
        (get_local $0)
        (i32.load offset=8
         (get_local $1)
        )
       )
       (i32.store offset=12
        (get_local $0)
        (i32.load offset=12
         (get_local $1)
        )
       )
       (i32.store offset=16
        (get_local $0)
        (i32.load offset=16
         (get_local $1)
        )
       )
       (i32.store offset=20
        (get_local $0)
        (i32.load offset=20
         (get_local $1)
        )
       )
       (i32.store offset=24
        (get_local $0)
        (i32.load offset=24
         (get_local $1)
        )
       )
       (i32.store offset=28
        (get_local $0)
        (i32.load offset=28
         (get_local $1)
        )
       )
       (i32.store offset=32
        (get_local $0)
        (i32.load offset=32
         (get_local $1)
        )
       )
       (i32.store offset=36
        (get_local $0)
        (i32.load offset=36
         (get_local $1)
        )
       )
       (i32.store offset=40
        (get_local $0)
        (i32.load offset=40
         (get_local $1)
        )
       )
       (i32.store offset=44
        (get_local $0)
        (i32.load offset=44
         (get_local $1)
        )
       )
       (i32.store offset=48
        (get_local $0)
        (i32.load offset=48
         (get_local $1)
        )
       )
       (i32.store offset=52
        (get_local $0)
        (i32.load offset=52
         (get_local $1)
        )
       )
       (i32.store offset=56
        (get_local $0)
        (i32.load offset=56
         (get_local $1)
        )
       )
       (i32.store offset=60
        (get_local $0)
        (i32.load offset=60
         (get_local $1)
        )
       )
       (set_local $0
        (i32.sub
         (get_local $0)
         (i32.const -64)
        )
       )
       (set_local $1
        (i32.sub
         (get_local $1)
         (i32.const -64)
        )
       )
       (br $while-in1)
      )
     )
    )
    (loop $while-in3
     (if
      (i32.lt_s
       (get_local $0)
       (get_local $2)
      )
      (block
       (i32.store
        (get_local $0)
        (i32.load
         (get_local $1)
        )
       )
       (set_local $0
        (i32.add
         (get_local $0)
         (i32.const 4)
        )
       )
       (set_local $1
        (i32.add
         (get_local $1)
         (i32.const 4)
        )
       )
       (br $while-in3)
      )
     )
    )
   )
   (block
    (set_local $2
     (i32.sub
      (get_local $3)
      (i32.const 4)
     )
    )
    (loop $while-in5
     (if
      (i32.lt_s
       (get_local $0)
       (get_local $2)
      )
      (block
       (i32.store8
        (get_local $0)
        (i32.load8_s
         (get_local $1)
        )
       )
       (i32.store8 offset=1
        (get_local $0)
        (i32.load8_s offset=1
         (get_local $1)
        )
       )
       (i32.store8 offset=2
        (get_local $0)
        (i32.load8_s offset=2
         (get_local $1)
        )
       )
       (i32.store8 offset=3
        (get_local $0)
        (i32.load8_s offset=3
         (get_local $1)
        )
       )
       (set_local $0
        (i32.add
         (get_local $0)
         (i32.const 4)
        )
       )
       (set_local $1
        (i32.add
         (get_local $1)
         (i32.const 4)
        )
       )
       (br $while-in5)
      )
     )
    )
   )
  )
  (loop $while-in7
   (if
    (i32.lt_s
     (get_local $0)
     (get_local $3)
    )
    (block
     (i32.store8
      (get_local $0)
      (i32.load8_s
       (get_local $1)
      )
     )
     (set_local $0
      (i32.add
       (get_local $0)
       (i32.const 1)
      )
     )
     (set_local $1
      (i32.add
       (get_local $1)
       (i32.const 1)
      )
     )
     (br $while-in7)
    )
   )
  )
  (get_local $4)
 )
 (func $_memmove (; 476 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (if
   (i32.and
    (i32.lt_s
     (get_local $1)
     (get_local $0)
    )
    (i32.lt_s
     (get_local $0)
     (i32.add
      (get_local $1)
      (get_local $2)
     )
    )
   )
   (block
    (set_local $1
     (i32.add
      (get_local $1)
      (get_local $2)
     )
    )
    (set_local $0
     (i32.add
      (tee_local $3
       (get_local $0)
      )
      (get_local $2)
     )
    )
    (loop $while-in
     (if
      (i32.gt_s
       (get_local $2)
       (i32.const 0)
      )
      (block
       (set_local $2
        (i32.sub
         (get_local $2)
         (i32.const 1)
        )
       )
       (i32.store8
        (tee_local $0
         (i32.sub
          (get_local $0)
          (i32.const 1)
         )
        )
        (i32.load8_s
         (tee_local $1
          (i32.sub
           (get_local $1)
           (i32.const 1)
          )
         )
        )
       )
       (br $while-in)
      )
     )
    )
    (set_local $0
     (get_local $3)
    )
   )
   (drop
    (call $_memcpy
     (get_local $0)
     (get_local $1)
     (get_local $2)
    )
   )
  )
  (get_local $0)
 )
 (func $_memset (; 477 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (set_local $4
   (i32.add
    (get_local $0)
    (get_local $2)
   )
  )
  (set_local $1
   (i32.and
    (get_local $1)
    (i32.const 255)
   )
  )
  (if
   (i32.ge_s
    (get_local $2)
    (i32.const 67)
   )
   (block
    (loop $while-in
     (if
      (i32.and
       (get_local $0)
       (i32.const 3)
      )
      (block
       (i32.store8
        (get_local $0)
        (get_local $1)
       )
       (set_local $0
        (i32.add
         (get_local $0)
         (i32.const 1)
        )
       )
       (br $while-in)
      )
     )
    )
    (set_local $6
     (i32.add
      (tee_local $5
       (i32.and
        (get_local $4)
        (i32.const -4)
       )
      )
      (i32.const -64)
     )
    )
    (set_local $3
     (i32.or
      (i32.or
       (i32.or
        (get_local $1)
        (i32.shl
         (get_local $1)
         (i32.const 8)
        )
       )
       (i32.shl
        (get_local $1)
        (i32.const 16)
       )
      )
      (i32.shl
       (get_local $1)
       (i32.const 24)
      )
     )
    )
    (loop $while-in1
     (if
      (i32.le_s
       (get_local $0)
       (get_local $6)
      )
      (block
       (i32.store
        (get_local $0)
        (get_local $3)
       )
       (i32.store offset=4
        (get_local $0)
        (get_local $3)
       )
       (i32.store offset=8
        (get_local $0)
        (get_local $3)
       )
       (i32.store offset=12
        (get_local $0)
        (get_local $3)
       )
       (i32.store offset=16
        (get_local $0)
        (get_local $3)
       )
       (i32.store offset=20
        (get_local $0)
        (get_local $3)
       )
       (i32.store offset=24
        (get_local $0)
        (get_local $3)
       )
       (i32.store offset=28
        (get_local $0)
        (get_local $3)
       )
       (i32.store offset=32
        (get_local $0)
        (get_local $3)
       )
       (i32.store offset=36
        (get_local $0)
        (get_local $3)
       )
       (i32.store offset=40
        (get_local $0)
        (get_local $3)
       )
       (i32.store offset=44
        (get_local $0)
        (get_local $3)
       )
       (i32.store offset=48
        (get_local $0)
        (get_local $3)
       )
       (i32.store offset=52
        (get_local $0)
        (get_local $3)
       )
       (i32.store offset=56
        (get_local $0)
        (get_local $3)
       )
       (i32.store offset=60
        (get_local $0)
        (get_local $3)
       )
       (set_local $0
        (i32.sub
         (get_local $0)
         (i32.const -64)
        )
       )
       (br $while-in1)
      )
     )
    )
    (loop $while-in3
     (if
      (i32.lt_s
       (get_local $0)
       (get_local $5)
      )
      (block
       (i32.store
        (get_local $0)
        (get_local $3)
       )
       (set_local $0
        (i32.add
         (get_local $0)
         (i32.const 4)
        )
       )
       (br $while-in3)
      )
     )
    )
   )
  )
  (loop $while-in5
   (if
    (i32.lt_s
     (get_local $0)
     (get_local $4)
    )
    (block
     (i32.store8
      (get_local $0)
      (get_local $1)
     )
     (set_local $0
      (i32.add
       (get_local $0)
       (i32.const 1)
      )
     )
     (br $while-in5)
    )
   )
  )
  (i32.sub
   (get_local $4)
   (get_local $2)
  )
 )
 (func $_round (; 478 ;) (; has Stack IR ;) (param $0 f64) (result f64)
  (if (result f64)
   (f64.ge
    (get_local $0)
    (f64.const 0)
   )
   (f64.floor
    (f64.add
     (get_local $0)
     (f64.const 0.5)
    )
   )
   (f64.ceil
    (f64.sub
     (get_local $0)
     (f64.const 0.5)
    )
   )
  )
 )
 (func $_rintf (; 479 ;) (; has Stack IR ;) (param $0 f64) (result f64)
  (if (result f64)
   (f64.ne
    (f64.sub
     (get_local $0)
     (f64.floor
      (get_local $0)
     )
    )
    (f64.const 0.5)
   )
   (call $_round
    (get_local $0)
   )
   (f64.mul
    (call $_round
     (f64.div
      (get_local $0)
      (f64.const 2)
     )
    )
    (f64.const 2)
   )
  )
 )
 (func $_sbrk (; 480 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (if
   (i32.or
    (i32.and
     (i32.gt_s
      (get_local $0)
      (i32.const 0)
     )
     (i32.lt_s
      (tee_local $0
       (i32.add
        (tee_local $1
         (i32.load
          (get_global $DYNAMICTOP_PTR)
         )
        )
        (get_local $0)
       )
      )
      (get_local $1)
     )
    )
    (i32.lt_s
     (get_local $0)
     (i32.const 0)
    )
   )
   (block
    (drop
     (call $abortOnCannotGrowMemory)
    )
    (call $___setErrNo
     (i32.const 12)
    )
    (return
     (i32.const -1)
    )
   )
  )
  (i32.store
   (get_global $DYNAMICTOP_PTR)
   (get_local $0)
  )
  (set_local $2
   (call $getTotalMemory)
  )
  (if
   (i32.gt_s
    (get_local $0)
    (get_local $2)
   )
   (if
    (i32.eqz
     (call $enlargeMemory)
    )
    (block
     (i32.store
      (get_global $DYNAMICTOP_PTR)
      (get_local $1)
     )
     (call $___setErrNo
      (i32.const 12)
     )
     (return
      (i32.const -1)
     )
    )
   )
  )
  (get_local $1)
 )
 (func $dynCall_ii (; 481 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (call_indirect (type $FUNCSIG$ii)
   (get_local $1)
   (i32.and
    (get_local $0)
    (i32.const 1)
   )
  )
 )
 (func $dynCall_iiii (; 482 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (call_indirect (type $FUNCSIG$iiii)
   (get_local $1)
   (get_local $2)
   (get_local $3)
   (i32.add
    (i32.and
     (get_local $0)
     (i32.const 3)
    )
    (i32.const 2)
   )
  )
 )
 (func $dynCall_iiiiiii (; 483 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (result i32)
  (call_indirect (type $FUNCSIG$iiiiiii)
   (get_local $1)
   (get_local $2)
   (get_local $3)
   (get_local $4)
   (get_local $5)
   (get_local $6)
   (i32.add
    (i32.and
     (get_local $0)
     (i32.const 7)
    )
    (i32.const 6)
   )
  )
 )
 (func $dynCall_viiiiiii (; 484 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32)
  (call_indirect (type $FUNCSIG$viiiiiii)
   (get_local $1)
   (get_local $2)
   (get_local $3)
   (get_local $4)
   (get_local $5)
   (get_local $6)
   (get_local $7)
   (i32.add
    (i32.and
     (get_local $0)
     (i32.const 1)
    )
    (i32.const 14)
   )
  )
 )
 (func $b0 (; 485 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (call $abort
   (i32.const 0)
  )
  (i32.const 0)
 )
 (func $b1 (; 486 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (call $abort
   (i32.const 1)
  )
  (i32.const 0)
 )
 (func $b2 (; 487 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (result i32)
  (call $abort
   (i32.const 2)
  )
  (i32.const 0)
 )
 (func $b3 (; 488 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32)
  (call $abort
   (i32.const 3)
  )
 )
)
